/******************************************************************************/
/*  Program           : SFO_FPPRTFL_DTL                                       */
/*                                                                            */
/*  Input             : FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_XCHNG_CD                                          */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_EXPRY_DT                                          */
/*                      FFO_EXER_TYP                                          */
/*                      FFO_USR_ID                                            */
/*                      FFO_SSSN_ID                                           */
/*                      FFO_ROUT_CRT                                          */
/*                                                                            */
/*  Output            : vw_tradebook                                          */
/*                                                                            */
/*  Description       : This service displays the portfolio details for       */
/*                      each contract position in future plus                 */
/*                                                                            */
/*                                                                            */
/*  Log               :                                                       */
/*                                                                            */
/******************************************************************************/
/* 17-Mar-2008     Ver 1.0       Shailesh|Sandeep				Release 1.0  					*/
/* 01-Apr-2008		 Ver 1.1       Kunal									IBM Migration Changes */
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fml_def.h>
#include <fo_view_def.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_tuxlib.h>
#include <fo.h>
#include <fn_ddr.h>
#include <fn_log.h>
#include <fn_session.h>
#include <fn_read_debug_lvl.h>  		/* 1.1 */

void SFO_FPPRTFL_DTL( TPSVCINFO *rqst )
{
  FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;

  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];
  int i_returncode;
  int i_ip_len;
  int i_op_len;
  int i_trnsctn;

  int i_counter;
  char c_tag [ 256 ];
  char c_msg [ 256 ];

	EXEC SQL BEGIN DECLARE SECTION;
    struct vw_usr_prfl st_usr_prfl;
    struct vw_contract st_contract;
    struct vw_tradebook st_tradebook;
    char c_cln_mtch_accnt [ 11 ];
  EXEC SQL END DECLARE SECTION;

  struct vw_err_msg st_err_msg;

  st_tradebook.C_c_dp_id = 0;
  st_tradebook.C_c_bnk_accnt_nmbr = 0;

  ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
  strcpy( c_ServiceName, rqst->name );

	INITDBGLVL(c_ServiceName);                /* Ver 1.1 */

  i_returncode = Fvftos32( ptr_fml_Ibuf,
                           (char *)&st_usr_prfl,
                           "vw_usr_prfl" );
  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  i_returncode = Fvftos32( ptr_fml_Ibuf,
                           (char *)&st_contract,
                           "vw_contract" );
  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31010", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	fn_init_ddr_val ( st_usr_prfl.c_rout_crt );

  i_returncode = fn_chk_sssn( c_ServiceName, &st_usr_prfl,
                                             &st_err_msg ) ;

  if ( i_returncode == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, st_err_msg.c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	if (DEBUG_MSG_LVL_3)
	{
  	fn_userlog ( c_ServiceName, "c_cln_mtch_accnt:%s:",
                                        st_usr_prfl.c_cln_mtch_accnt );
  	fn_userlog ( c_ServiceName, "c_xchng_cd**:%s:", st_contract.c_xchng_cd );
  	fn_userlog ( c_ServiceName, "c_prd_typ   :%c:", st_contract.c_prd_typ );
  	fn_userlog ( c_ServiceName, "c_undrlyng  :%s:", st_contract.c_undrlyng );
  	fn_userlog ( c_ServiceName, "c_expiry_dt :%s:", st_contract.c_expry_dt );
		fn_userlog ( c_ServiceName, "c_opt_typ   :%c:", st_contract.c_opt_typ );
  	fn_userlog ( c_ServiceName, "c_exrc_typ  :%c:", st_contract.c_exrc_typ );
		fn_userlog ( c_ServiceName, "l_strike_prc :%ld:", st_contract.l_strike_prc );
	}

	EXEC SQL
    DECLARE cur_fplsprtfl CURSOR FOR
    SELECT  ftd_xchng_cd,
            ftd_prdct_typ,
            ftd_indstk,
            ftd_undrlyng,
            ftd_expry_dt,
            ftd_exer_typ,
            ftd_trd_dt,
            ftd_trd_flw,
            ftd_eba_trd_ref,
            ftd_exctd_qty,
            ftd_exctd_rt,
            NVL ((ftd_frs_brkg + ftd_cvr_brkg), 0)
    FROM    ftd_fo_trd_dtls
    WHERE   ftd_clm_mtch_accnt  = :st_usr_prfl.c_cln_mtch_accnt
    AND     ftd_xchng_cd    = :st_contract.c_xchng_cd
    AND     ftd_prdct_typ   = :st_contract.c_prd_typ
    AND     ftd_undrlyng    = :st_contract.c_undrlyng
    AND     ftd_expry_dt    = :st_contract.c_expry_dt
    AND     ftd_exer_typ    = :st_contract.c_exrc_typ
    ORDER BY 7;

		EXEC SQL
    OPEN cur_fplsprtfl;
  if( SQLCODE != 0 )
  {
    fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
  }

  ptr_fml_Obuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN );

  if ( ptr_fml_Obuf == NULL )
  {
    fn_errlog( c_ServiceName, "S31020", TPMSG, c_err_msg  );
    EXEC SQL
      CLOSE cur_fplsprtfl;
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  i_counter = 1;
  while (1)
	{
		EXEC SQL
      FETCH cur_fplsprtfl
      INTO  :st_tradebook.c_xchng_cd,
            :st_tradebook.c_prd_typ,
            :st_tradebook.c_ctgry_indstk,
            :st_tradebook.c_undrlyng,
            :st_tradebook.c_expry_dt,
            :st_tradebook.c_exrc_typ,
            :st_tradebook.c_trd_dt,
            :st_tradebook.c_trd_flw,
            :st_tradebook.c_trd_rfrnc,
            :st_tradebook.l_exctd_qty,
            :st_tradebook.l_exctd_rt,
            :st_tradebook.l_frs_brkg_val;

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog( c_ServiceName, "S31025", LIBMSG, c_err_msg );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      EXEC SQL
        CLOSE cur_fplsprtfl;
      tpreturn(TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
    }

    if( SQLCODE == NO_DATA_FOUND )
    {
      break;
    }

		 i_returncode = Fvstof32( ptr_fml_Obuf, (char *)&st_tradebook,
                              FCONCAT, "vw_tradebook" );
    if ( i_returncode == -1 )
    {
      if( Ferror32 == FNOSPACE )
      {
        i_counter++;
        ptr_fml_Obuf = (FBFR32 *)tprealloc( (char *)ptr_fml_Obuf,
                            i_counter * MIN_FML_BUF_LEN );

        if ( ptr_fml_Obuf == NULL )
        {
          fn_errlog( c_ServiceName, "S31030", TPMSG, c_err_msg  );
          EXEC SQL
            CLOSE cur_fplsprtfl;
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }

        i_returncode = Fvstof32( ptr_fml_Obuf, (char *)&st_tradebook,
                                 FCONCAT, "vw_tradebook" );

        if ( i_returncode == -1 )
        {
          fn_errlog( c_ServiceName, "S31035", FMLMSG, c_err_msg  );
          EXEC SQL
            CLOSE cur_fplsprtfl;
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
      }

			else
      {
        fn_errlog( c_ServiceName, "S31040", FMLMSG, c_err_msg  );
        EXEC SQL
          CLOSE cur_fplsprtfl;
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
    }

		 }

  EXEC SQL
    CLOSE cur_fplsprtfl;
  tpreturn( TPSUCCESS, 0, (char *)ptr_fml_Obuf, 0 , 0 );
}
