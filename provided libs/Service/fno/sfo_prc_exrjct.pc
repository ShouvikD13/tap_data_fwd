/******************************************************************************/
/*	Program	    			:	SFO_PRC_EXRJCT                                        */
/*                                                                            */
/*  Input             : FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_CLNT_CTGRY                                        */
/*                      FFO_ORDR_RFRNC                                        */
/*                      FFO_PIPE_ID                                           */
/*                      FFO_XCHNG_CD                                          */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_CTGRY_INDSTK                                      */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_EXPRY_DT                                          */
/*                      FFO_EXER_TYP                                          */
/*                      FFO_OPT_TYP                                           */
/*                      FFO_STRK_PRC                                          */
/*                      FFO_EX_ORDR_TYP                                       */
/*                      FFO_ORD_TOT_QTY                                       */
/*                      FFO_EXRC_STTS                                         */
/*                      FFO_TRD_DT                                            */
/*                      FFO_MDFCTN_CNTR                                       */
/*                      FFO_SETTLOR                                           */
/*                      FFO_ACK_NMBR                                          */
/*                                                                            */
/*  Output            : Success / Failure                                     */
/*                                                                            */
/*  Description       : To process the records of exercise rejects in options */
/*                      called by the batch program                           */
/*                                                                            */
/*  Log               :                                                       */
/*                                                                            */
/******************************************************************************/
/* 13-Feb-2002     Ver 1.0        S. Swaminathan       Release 1.0            */
/* 17-Dec-2007     Ver 1.1        Vidyayini Krish      IBM Changes            */
/* 06-Mar-2023     Ver 1.2        Ravi Malla    			 changing fn_lock_usr to fn_lock_fno */
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
/*Add header files here */

#include <fml_def.h>
#include <fo_view_def.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_tuxlib.h>
#include <fo.h>
#include <fn_ddr.h>
#include <fn_log.h> /* Ver 1.1 */
#include <fn_session.h> /* Ver 1.1 */
#include <fn_read_debug_lvl.h> /* Ver 1.1 */

void SFO_PRC_EXRJCT( TPSVCINFO *rqst )
{
  FBFR32 *ptr_fml_Ibuf;

  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];
  int i_returncode;
  int i_ip_len;
  int i_op_len;
  int i_trnsctn;
	int i_rec_exists;

  char c_tag [ 256 ];
  char c_msg [ 256 ];

  EXEC SQL BEGIN DECLARE SECTION;
  	struct vw_pstn_actn st_pstn_actn;
		struct vw_contract st_contract;
    struct vw_cntrct_qt st_cntrct_qt;
		struct vw_exrcbook st_exrcbook;
  EXEC SQL END DECLARE SECTION;

  ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
  strcpy( c_ServiceName, rqst->name );
	INITDBGLVL(c_ServiceName);

  i_returncode = Fvftos32( ptr_fml_Ibuf,
                         ( char * )&st_pstn_actn,
                         "vw_pstn_actn" );

  if( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	rtrim ( st_pstn_actn.c_expry_dt );

  i_returncode = Fvftos32( ptr_fml_Ibuf,
                         ( char * )&st_exrcbook,
                         "vw_exrcbook" );

  if( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31010", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	rtrim ( st_exrcbook.c_expry_dt );

	i_returncode = Fvftos32( ptr_fml_Ibuf,
                         ( char * )&st_contract,
                         "vw_contract" );

  if( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31015", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  i_returncode = Fget32( ptr_fml_Ibuf, FFO_BAT_TAG, 0,
                                   (char *)c_tag, 0 );
  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31020", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

/**********************************
  i_returncode = Fget32( ptr_fml_Ibuf, FFO_ORDR_RFRNC, 0,
                                   (char *)st_exrcbook.c_exrc_ordr_rfrnc, 0 );
  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31025", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
**********************************/

  /*** Added for Order Routing ***/
  fn_init_ddr_val ( st_pstn_actn.c_rout_crt );

  if(DEBUG_MSG_LVL_3){
    fn_userlog( c_ServiceName, "Match Account :%s:",
                                  st_pstn_actn.c_cln_mtch_accnt );
    fn_userlog( c_ServiceName, "Exchange code :%s:",
                                  st_pstn_actn.c_xchng_cd );
    fn_userlog( c_ServiceName, "Product Type  :%c:",
                                  st_pstn_actn.c_prd_typ );
    fn_userlog( c_ServiceName, "Underlyng     :%s:",
                                  st_pstn_actn.c_undrlyng );
    fn_userlog( c_ServiceName, "Expiry date   :%s:",
                                  st_pstn_actn.c_expry_dt );
    fn_userlog( c_ServiceName, "Excercise Type:%c:",
                                  st_pstn_actn.c_exrc_typ );
    fn_userlog( c_ServiceName, "Category      :%c:",
                                 st_pstn_actn.c_ctgry_indstk );
    fn_userlog( c_ServiceName, "Exercise Ref    :%s:",
                                 st_exrcbook.c_exrc_ordr_rfrnc );
  }

/*********************************************
	EXEC SQL
		SELECT  1
		INTO		:i_rec_exists
		FROM DUAL
		WHERE		EXISTS
		(	SELECT 	1
			FROM		fco_fo_fclsout
			WHERE		fco_clm_mtch_accnt	=	:st_pstn_actn.c_cln_mtch_accnt	
			AND			fco_xchng_cd				=	:st_contract.c_xchng_cd
			AND			fco_prdct_typ				=	:st_contract.c_prd_typ
			AND			fco_indstk					=	:st_contract.c_ctgry_indstk
			AND			fco_undrlyng				=	:st_contract.c_undrlyng
			AND			fco_expry_dt				=	:st_contract.c_expry_dt
			AND			fco_exer_typ				=	:st_contract.c_exrc_typ
			AND			fco_opt_typ					=	:st_contract.c_opt_typ
			AND			fco_strk_prc				=	:st_contract.l_strike_prc
			***??? Exercise Order Reference ***
		);

	if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
	{
    fn_errlog( c_ServiceName, "S31030", SQLMSG, c_err_msg  );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	if( ( SQLCODE == 0 ) && (i_rec_exists == 1 ) )
	{
		fn_errlog( c_ServiceName, "S31035", "Record Already Processed", c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
  	sprintf ( c_msg, "Record Already Processed for match a/c - [%s], Underlying - [%s], Expiry date - [%s]",
				st_pstn_actn.c_cln_mtch_accnt,
				st_pstn_actn.c_undrlyng,
				st_pstn_actn.c_expry_dt,
				st_pstn_actn.c_cntrct_tag );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}
*********************************************/
	
  sprintf ( c_msg, "Processing match a/c - [%s], Underlying - [%s], Expiry date - [%s]", 
				st_pstn_actn.c_cln_mtch_accnt,
				st_pstn_actn.c_undrlyng,
				st_pstn_actn.c_expry_dt,
				st_pstn_actn.c_cntrct_tag );
  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  /* i_returncode = fn_lock_usr( c_ServiceName,
                              st_pstn_actn.c_cln_mtch_accnt );  commented in 1.2 */
  i_returncode = fn_lock_fno( c_ServiceName, st_pstn_actn.c_cln_mtch_accnt );  /* Added in 1.2 */
  if ( i_returncode == -1 )
  {
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  strcpy(st_pstn_actn.c_user_id,"system");
  st_pstn_actn.l_session_id  = 0; 
  st_pstn_actn.l_actn_typ = EXER_RJCT;
  st_pstn_actn.c_trnsctn_flw = EXERCISE;
  st_pstn_actn.l_orgnl_qty = 0;
  st_pstn_actn.l_orgnl_rt  = 0;
  st_pstn_actn.l_new_qty = 0;
  st_pstn_actn.l_new_rt  = 0;
  st_pstn_actn.l_exec_qty  = st_exrcbook.l_exrc_qty;
  /*st_pstn_actn.l_exec_qty  = 0;*/
  st_pstn_actn.l_exec_rt  = 0;
  st_pstn_actn.l_fresh_qty  = 0;
  st_pstn_actn.l_cover_qty  = 0;
  st_pstn_actn.d_add_mrgn_amt = 0;
	fn_cpy_ddr(st_pstn_actn.c_rout_crt);

  i_ip_len = sizeof ( struct vw_pstn_actn );
  i_op_len = sizeof ( struct vw_pstn_actn );

  i_returncode = fn_call_svc( c_ServiceName,
                            	c_err_msg,
                              &st_pstn_actn,
                              &st_pstn_actn,
                              "vw_pstn_actn",
                              "vw_pstn_actn",
                              i_ip_len,
                              i_op_len,
                              0,
                              "SFO_UPD_OPT_POS" );

  if ( i_returncode != 0 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	st_exrcbook.c_oprn_typ = UPDATE_EXERCISE_REQUEST_STATUS;
	st_exrcbook.c_exrc_stts = REJECTED;
	fn_cpy_ddr(st_exrcbook.c_rout_crt);
  i_ip_len = sizeof ( struct vw_exrcbook );
  i_op_len = sizeof ( struct vw_exrcbook );

  i_returncode = fn_call_svc( c_ServiceName,
                            	c_err_msg,
                              &st_exrcbook,
                              &st_exrcbook,
                              "vw_exrcbook",
                              "vw_exrcbook",
                              i_ip_len,
                              i_op_len,
                              0,
                              "SFO_UPD_EXBK" );

  if ( i_returncode != 0 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	fn_cpy_ddr(st_contract.c_rout_crt);
  i_ip_len = sizeof ( struct vw_contract );
  i_op_len = sizeof ( struct vw_cntrct_qt );

  i_returncode = fn_call_svc( c_ServiceName,
                              c_err_msg,
                              &st_contract,
                              &st_cntrct_qt,
                              "vw_contract",
                              "vw_cntrct_qt",
                              i_ip_len,
                              i_op_len,
                              0,
                              "SFO_GET_QT" );
  if ( i_returncode != 0 )
  {
    fn_errlog( c_ServiceName, "S31040", LIBMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

/*********************************************
	EXEC SQL
    INSERT INTO FCO_FO_FCLSOUT (FCO_CLM_MTCH_ACCNT,
                                FCO_XCHNG_CD,
                                FCO_PRDCT_TYP,
                                FCO_INDSTK,
                                FCO_UNDRLYNG,
                                FCO_EXPRY_DT,
                                FCO_EXER_TYP,
                                FCO_OPT_TYP,
                                FCO_STRK_PRC,
                                FCO_ORDR_FLW,
                                FCO_CLS_QTY,
                                FCO_CLS_RT,
                                FCO_CLS_TM )

    VALUES (                    :st_pstn_actn.c_cln_mtch_accnt,
                                :st_contract.c_xchng_cd,
                                :st_contract.c_prd_typ,
                                :st_contract.c_ctgry_indstk,
                                :st_contract.c_undrlyng,
                                :st_contract.c_expry_dt,
                                :st_contract.c_exrc_typ,
                                :st_contract.c_opt_typ,
                                :st_contract.l_strike_prc,
                                :st_pstn_actn.c_trnsctn_flw,
                                :st_pstn_actn.l_orgnl_qty,
                                :st_cntrct_qt.l_lst_trdd_prc,
                                sysdate );
	????????Exercise Order Reference *************
	if( SQLCODE!= 0 )
  {
    fn_errlog( c_ServiceName, "S31045", SQLMSG, c_err_msg  );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

*********************************************/

  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
  sprintf ( c_msg, "Successfully Processed match a/c - [%s], Underlying - [%s], Expiry date - [%s]", 
				st_pstn_actn.c_cln_mtch_accnt,
				st_pstn_actn.c_undrlyng,
				st_pstn_actn.c_expry_dt,
				st_pstn_actn.c_cntrct_tag );
  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

  tpreturn( TPSUCCESS, 0, (char *)ptr_fml_Ibuf, 0 , 0 );
}

