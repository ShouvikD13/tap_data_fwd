/*********************************************************************************************/
/** Program     : SFO_AMD_MRGNLOG                                                        		 *
*                                                                                            *
* Description : This Service disply the isec margin history details to customer              *
*                                                                                            *
* Log         : Ver 1.0 : 27-Jun-2011 : Sachin Birje. | Infotech                             *
*             : Ver 1.1 : 18-May-2012 : Sandip Tambe. | Infotech[BSE Changes]					       *
*             : Ver 1.2 : 10-Jul-2012 : Navina Dhumal | Infotech(AIX Version Upgrade)        *
*             : Ver 1.3 : 26-Nov-2012 : Nitin Save    | Infotech(Backoffice- Optimization-CR)*
*             : Ver 1.4 : 23-Jul-2014 : Sachin Birje  | FDR Module Changes                   *
*             : Ver 1.5 : 01-Sep-2014 : Sachin Birje  | View to FML Changes                  *
*             : Ver 1.6 : 09-Sep-2020 : Akash B       | Full & Lite Brokerage model changes  *  
*             : Ver 1.7 : 06-Jul-2021 : Mahesh R      | Debiting Peak Margin Amount          * 
*             : Ver 1.8 : 05-May-2023 : Tanmay Patel  | Product type Handaling               *
**********************************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fo.h>
#include <fo_fml_def.h>
/* #include <fo_view_def.h> ** Ver 1.5 */
#include <fo_view_def.h>  /** Ver 1.5 **/
#include <fml_rout.h> /*** Ver 1.7 **/
#include <fn_session.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_log.h>      
#include <fn_read_debug_lvl.h> 

/* EXEC SQL include "/table/amc_adm_mrgn_calc.h";	 *** Vet 1.2   Commented for AIX Version upgrade from 5.3 to 6.1 ***/  
EXEC SQL include "table/amc_adm_mrgn_calc.h";			/*** Ver 1.2 - Removed slash before table for AIX Version upgrade from 5.3 to 6.1 ***/
EXEC SQL include "table/fpd_fo_peakmrgn_dtls.h";  /** Ver 1.7  **/
 
void SFO_ADM_MRGNLOG( TPSVCINFO *rqst )
{
    FBFR32 *ptr_fml_ibuf;
    FBFR32 *ptr_fml_obuf; 

    char c_ServiceName[33];
    char c_errmsg[256];
    char c_mtch_accnt_no[11];
		char c_xchng_cd[4]={'\0'};				/** ver 1.1 **/ 
    char c_rqst_typ='\0';    /** Ver 1.6 ***/

    char c_sam_dt[12];    /*** 1.6 ***/
    char c_sam_exchng[4];  /*** 1.6 ***/

    double d_sam_amt=0; /*** 1.6 ***/
    double d_sam_intper=0; /*** 1.6 ***/
    double d_sam_gst=0;  /*** 1.6 ***/
    double d_sam_recov=0; /*** 1.6 ***/
    double d_sam_outstndg=0; /*** 1.6 ***/
    double d_sam_int_rs=0;  /*** 1.6 ***/
    double d_sam_tot_rs=0;  /*** 1.6 ***/
    double d_isec_margin_required_in_cash = 0;  /** 1.7 **/

    int i_returncode;
    int i_err;                
    int i_ferr;
    int i_counter=1;
    int i_cnt;
    
   
    char c_frm_dt[ LEN_DATE ];
    char c_to_dt[ LEN_DATE ];  /*** Ver 1.6 **/
 
    struct vw_usr_prfl st_usr_prfl;
    struct vw_err_msg st_err_msg;
    
    ptr_fml_obuf =NULL; 
    ptr_fml_ibuf = (FBFR32 *)rqst->data;
    strcpy( c_ServiceName, rqst->name );
    INITDBGLVL(c_ServiceName);

    fn_userlog(c_ServiceName,"Inside %s",c_ServiceName);

    /**** Ver 1.5 Starts Here *********
    i_returncode = Fvftos32( ptr_fml_ibuf,
                           (char *) &st_usr_prfl,
                           "vw_usr_prfl" );
    if ( i_returncode == -1 )
    {
     fn_errlog( c_ServiceName, "S31005", FMLMSG, c_errmsg  );
     Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_errmsg, 0 );
     tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
    }
    ****** Ver 1.5 Ends Here *********/
  
    Fprint32(ptr_fml_ibuf);

 
    /**** Ver 1.5 Starts Here ****/
    i_returncode = fn_unpack_fmltovar_dflt ( c_ServiceName,
                                      c_errmsg,
                                      ptr_fml_ibuf,
                                      4,
                                      FFO_USR_ID,(char *)st_usr_prfl.c_user_id, "NULL",
                                      FFO_SSSN_ID,(char*)&st_usr_prfl.l_session_id, "NULL",
                                      FFO_EBA_MTCH_ACT_NO,(char*)st_usr_prfl.c_cln_mtch_accnt, "NULL",
                                      FFO_ROUT_CRT,(char*)st_usr_prfl.c_rout_crt, "***" );
    if ( i_returncode == -1 )
    {
     fn_errlog( c_ServiceName, "S31010", FMLMSG, c_errmsg  );
     Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_errmsg, 0 );
     tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
    }
    /**** Ver 1.5 Ends here *******/   

    strcpy ( ( char * )c_mtch_accnt_no, st_usr_prfl.c_cln_mtch_accnt );

    
    fn_userlog(c_ServiceName,"Match id :%s:",c_mtch_accnt_no);   

    if (st_usr_prfl.l_session_id !=0)  
    {
      i_returncode = fn_chk_sssn( c_ServiceName,
                                  &st_usr_prfl,
                                  &st_err_msg ) ;

     if ( i_returncode == -1 )
     {
       Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, st_err_msg.c_err_msg, 0 );
       tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
     }
    }
 
    if(Fget32(ptr_fml_ibuf,FFO_FROM_DT,0,(char *)c_frm_dt,0) == -1)
    {
      fn_errlog(c_ServiceName,"S31015",FMLMSG,c_errmsg) ;
      Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
    }   
    fn_userlog(c_ServiceName," From Date :%s:",c_frm_dt);

		/*** Added in Ver 1.7 ***/
		i_err = Fget32(ptr_fml_ibuf,FFO_TO_DT,0,(char *)c_to_dt,0);
		i_ferr = Ferror32;

		if(i_err == -1)
    {
			if(i_ferr == FNOTPRES)
      {
        fn_userlog(c_ServiceName,"To date not provided as input, so using system date");
        EXEC SQL
        select to_date(sysdate,'DD-Mon-YYYY')
        into :c_to_dt
        from DUAL;

        if ( SQLCODE != 0 )
        {
          fn_errlog( c_ServiceName, "S31020",SQLMSG,c_errmsg);
          fn_userlog(c_ServiceName,"Error while fetching system date." );
          Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_errmsg, 0 );
          tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_ibuf, 0, 0 );
        }
        rtrim(c_to_dt);
      }
			else
			{
    		fn_errlog(c_ServiceName,"S31025",FMLMSG,c_errmsg) ;
    		Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
			}
   	}
		/*** Ver 1.7 ends here ***/

    fn_userlog(c_ServiceName," To Date :%s:",c_to_dt);
 
 		/** Ver 1.1 Starts **/
		if(Fget32(ptr_fml_ibuf,FFO_XCHNG_CD,0,(char *)c_xchng_cd,0) == -1)
    {
      fn_errlog(c_ServiceName,"S31030",FMLMSG,c_errmsg) ;
      /* Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_errmsg, 0 ); */
      /* tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 ); */ /** POST LIVE **/
      fn_userlog(c_ServiceName," Exchange Code not passed from front end "); 
      strcpy(c_xchng_cd,"ALL");

    }

    /****** Ver 1.6 *********/

    if( Fget32(ptr_fml_ibuf,FFO_RQST_TYP,0,(char *)&c_rqst_typ,0)== -1)
    {
     if( Ferror32 == FNOTPRES )
     {
      c_rqst_typ='N';
     }
     else
     {
      fn_errlog( c_ServiceName, "S31035",FMLMSG , c_errmsg );
      tpfree((char *)ptr_fml_ibuf);
      Fadd32( ptr_fml_ibuf,FFO_ERR_MSG,(char *)c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
     }
    }

    /****** Ver 1.6 ********/


		if(strcmp(c_xchng_cd,"ALL") == 0)
		{
			strcpy(c_xchng_cd,"%");
			rtrim(c_xchng_cd);
		}
		fn_userlog(c_ServiceName,"Input Exchange Code :%s:",c_xchng_cd);	

 		/** Ver 1.1 Ends **/

   if( c_rqst_typ == 'N')
   {
    EXEC SQL
    DECLARE cur_amc_rcrd CURSOR FOR 
    SELECT  to_char(AMC_RUN_DT,'DD-Mon-YYYY HH24:MI:SS') AS AMC_RUN_DT,
            nvl(AMC_TOTAL_MRGN_REQ,0),
            nvl(AMC_OLD_ISEC_MRGN_AMT,0),
            nvl(AMC_NEW_ISEC_MRGN_AMT,0),
            AMC_DBCR_CD,
            AMC_STATUS_FLG,
            AMC_BATCH_SITE_IND,
						nvl(AMC_XCHNG_CD,'NFO'),																/*** Ver 1.1 ***/							
            nvl(AMC_OLD_FDR_AMT,0),                                 /*** Ver 1.4 ***/
            0,                                                      /*** Ver 1.7 ***/ 
            0,                                                      /*** Ver 1.7 ***/
            0,                                                      /*** Ver 1.7 ***/
            0,                                                      /*** Ver 1.7 ***/
            0,                                                      /*** Ver 1.7 ***/
            nvl(AMC_OLD_PLG_AMT,0)                                  /*** Ver 1.7 ***/                       	
    FROM    AMC_ADM_MRGN_CALC 
    WHERE   AMC_CLM_MTCH_ACCNT = :c_mtch_accnt_no
		AND 		nvl(AMC_XCHNG_CD,'NFO')  LIKE :c_xchng_cd							/**** Ver 1.1 ***/	
    AND     trunc(AMC_RUN_DT) >= to_date(:c_frm_dt,'dd-Mon-YYYY')
    AND     trunc(AMC_RUN_DT) <= to_date(:c_to_dt,'dd-Mon-YYYY')   /** ver 1.7 **/
		 AND     AMC_BILL_NO is not null    
    /*** Added UNION ALL in Ver 1.3 Starts ****/
    UNION ALL
    SELECT  to_char(AMC_RUN_DT,'DD-Mon-YYYY HH24:MI:SS') AS AMC_RUN_DT,
            nvl(AMC_TOTAL_MRGN_REQ,0),
            nvl(AMC_OLD_ISEC_MRGN_AMT,0),
            nvl(AMC_NEW_ISEC_MRGN_AMT,0),
            AMC_DBCR_CD,
            AMC_STATUS_FLG,
            AMC_BATCH_SITE_IND,
						nvl(AMC_XCHNG_CD,'NFO'),																/*** Ver 1.1 ***/							
            nvl(AMC_OLD_FDR_AMT,0),                                 /*** Ver 1.4 ***/
            0,                                                      /*** Ver 1.7 ***/
            0,                                                      /*** Ver 1.7 ***/
            0,                                                      /*** Ver 1.7 ***/
            0,                                                      /*** Ver 1.7 ***/
            0,                                                      /*** Ver 1.7 ***/
            nvl(AMC_OLD_PLG_AMT,0)                                  /*** Ver 1.7 ***/	
    FROM    AMC_ADM_MRGN_CALC_HSTRY 
    WHERE   AMC_CLM_MTCH_ACCNT = :c_mtch_accnt_no
		AND 	  nvl(AMC_XCHNG_CD,'NFO')  LIKE :c_xchng_cd							/**** Ver 1.1 ***/	
    AND     trunc(AMC_RUN_DT) >= to_date(:c_frm_dt,'dd-Mon-YYYY')
		AND     trunc(AMC_RUN_DT) <= to_date(:c_to_dt,'dd-Mon-YYYY')  /** ver 1.7 **/
    AND     AMC_BILL_NO is not null    
    /*** Added UNION ALL in Ver 1.3 Ends ****/
    /***  Ver 1.7 Starts Here   ***/
    UNION ALL
    SELECT  to_char(FPD_RUN_DT,'DD-Mon-YYYY HH24:MI:SS') AS FPD_RUN_DT,
            0,  
            nvl(FPD_OLD_ISEC_MRGN_AMT,0),
            /* nvl(FPD_NEW_ISEC_MRGN_AMT,0) */ 0,
            FPD_DBCR_CD,
            FPD_STATUS_FLG,
            FPD_BATCH_SITE_IND,
            nvl(FPD_XCHNG_CD,'NFO'),                               
            nvl(FPD_OLD_FDR_AMT,0),
            nvl(FPD_TOTAL_PEAK_MARGIN,0),
            nvl(FPD_PEAK_MARGIN_TOBE_DEBITED,0),
            nvl(FPD_PEAK_MARGIN_DEBITED,0),
            nvl(FPD_PEAK_MARGIN_CREDITED,0),
            (nvl(FPD_TOTAL_PEAK_MARGIN,0) - nvl(FPD_NEW_PLG_AMT,0)),
            nvl(FPD_OLD_PLG_AMT,0)                              
    FROM    FPD_FO_PEAKMRGN_DTLS
    WHERE   FPD_CLM_MTCH_ACCNT = :c_mtch_accnt_no
    AND     nvl(FPD_XCHNG_CD,'NFO')  LIKE :c_xchng_cd            
    AND     FPD_TRD_DT >= to_date(:c_frm_dt,'dd-Mon-YYYY')
		AND     FPD_TRD_DT <= to_date(:c_to_dt,'dd-Mon-YYYY')
    AND     FPD_BILL_NO is not null
    /***  Ver 1.7 Ends Here  ***/
    order by AMC_RUN_DT desc;
 
   EXEC SQL OPEN cur_amc_rcrd;
    if ( SQLCODE != 0 )
    {
     fn_errlog( c_ServiceName, "S31040", SQLMSG, c_errmsg );
     tpfree ( ( char * ) ptr_fml_obuf );
     Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_errmsg, 0 );
     tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
    }

    while(1)
    {
     MEMSET(sql_amc_trd_dt);
     sql_amc_total_mrgn_req    = 0.0;
     sql_amc_old_isec_mrgn_amt = 0.0 ;
     sql_amc_new_isec_mrgn_amt = 0.0;
     sql_amc_dbcr_cd        ='\0';
     sql_amc_status_flg     ='\0';
     sql_amc_batch_site_ind ='\0'; 
		 MEMSET(sql_amc_xchng_cd);	              			/*** Ver 1.1 ***/
     sql_amc_old_fdr_amt = 0.0;                     /*** Ver 1.4 ***/
     sql_fpd_total_peak_margin        = 0.0;        /** Ver 1.7 **/
     sql_fpd_peak_margin_tobe_debited = 0.0;        /** Ver 1.7 **/
     sql_fpd_peak_margin_debited      = 0.0;        /** Ver 1.7 **/
     sql_fpd_peak_margin_credited     = 0.0;        /** Ver 1.7 **/
     d_isec_margin_required_in_cash   = 0.0;        /** Ver 1.7 **/ 
     sql_fpd_old_plg_amt              = 0.0;        /** Ver 1.7 **/   

     EXEC SQL
     FETCH cur_amc_rcrd
      INTO :sql_amc_trd_dt,
           :sql_amc_total_mrgn_req,
           :sql_amc_old_isec_mrgn_amt,
           :sql_amc_new_isec_mrgn_amt,
           :sql_amc_dbcr_cd,
           :sql_amc_status_flg,
           :sql_amc_batch_site_ind,
					 :sql_amc_xchng_cd,		      							/**** Ver 1.1 **/
           :sql_amc_old_fdr_amt,                    /**** Ver 1.4 **/
           :sql_fpd_total_peak_margin,              /** Ver 1.7 **/
           :sql_fpd_peak_margin_tobe_debited,       /** Ver 1.7 **/
           :sql_fpd_peak_margin_debited,            /** Ver 1.7 **/
           :sql_fpd_peak_margin_credited,           /** Ver 1.7 **/ 
           :d_isec_margin_required_in_cash,         /** Ver 1.7 **/
           :sql_fpd_old_plg_amt;                    /** Ver 1.7 **/

     if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
     {
      fn_errlog( c_ServiceName, "S31045", SQLMSG, c_errmsg );
      EXEC SQL CLOSE cur_amc_rcrd; 
      tpfree ( ( char * ) ptr_fml_obuf );
      Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
     }

     if( SQLCODE == NO_DATA_FOUND )
     {
      fn_userlog( c_ServiceName, "Inside Break Stmt");
      break;
     }
			/*** Ver 1.1 Starts ***/
		 if(strcmp(sql_amc_xchng_cd,"NFO")== 0)
		 {
			 strcpy(sql_amc_xchng_cd,"NSE");
		 }
		 else if (strcmp(sql_amc_xchng_cd,"BFO") == 0)
		 {
			 strcpy(sql_amc_xchng_cd,"BSE");
		 }
			/*** Ver 1.1 Ends ***/
     if(DEBUG_MSG_LVL_3)
     {     
      fn_userlog(c_ServiceName,"Trade Date  :%s",sql_amc_trd_dt.arr);
      fn_userlog(c_ServiceName,"Tot Margin Reqrd :%lf:",sql_amc_total_mrgn_req);
      fn_userlog(c_ServiceName,"Old Isec Margin  :%lf;",sql_amc_old_isec_mrgn_amt);
      fn_userlog(c_ServiceName,"New Isec margin  :%lf:",sql_amc_new_isec_mrgn_amt);
      fn_userlog(c_ServiceName,"DR/CR Flag       :%c:",sql_amc_dbcr_cd);
      fn_userlog(c_ServiceName,"Status Flag      :%c:",sql_amc_status_flg);
      fn_userlog(c_ServiceName,"Client/Process   :%c:",sql_amc_batch_site_ind);
      fn_userlog(c_ServiceName,"sql_amc_xchng_cd :%s:",sql_amc_xchng_cd);		/** Ver 1.1 Userlog**/
      fn_userlog(c_ServiceName,"Total Peak Margin   :%lf:",sql_fpd_total_peak_margin);               /** Ver 1.7 **/
      fn_userlog(c_ServiceName,"Peak Margin To Be Debited  :%lf:",sql_fpd_peak_margin_tobe_debited); /** Ver 1.7 **/
      fn_userlog(c_ServiceName,"Peak Margin Debited   :%lf:",sql_fpd_peak_margin_debited);           /** Ver 1.7 **/ 
      fn_userlog(c_ServiceName,"Peak Margin Credited   :%lf:",sql_fpd_peak_margin_credited);         /** Ver 1.7 **/
      fn_userlog(c_ServiceName,"ISEC Margin Required in Cash :%lf:",d_isec_margin_required_in_cash); /** Ver 1.7 **/
      fn_userlog(c_ServiceName,"Old Plage Amount :%lf:",sql_fpd_old_plg_amt);                         /** Ver 1.7 **/   
      fn_userlog(c_ServiceName,"-----------------------------------------------");
     }
    
     SETNULL(sql_amc_trd_dt);
 
     i_returncode=fn_pack_vartofml( c_ServiceName,
                                    c_errmsg,
                                    &ptr_fml_obuf,
                                    15,							/** Ver 1.1 changed to 8 from 7 **/ /** Ver 1.4 , 8 to 9 **//** Ver 1.7, 9 to 15 **/
                                    FFO_TRD_DT,(char *)sql_amc_trd_dt.arr,
                                    FFO_C_TRD_MRGN , (char *)&sql_amc_total_mrgn_req,
                                    FFO_ADD_MRGN_AMT,(char *)&sql_amc_old_isec_mrgn_amt,
                                    FFO_ORD_AMT_BLKD,(char *)&sql_amc_new_isec_mrgn_amt,
                                    FFO_DR_CR_FLG,(char *)&sql_amc_dbcr_cd,
                                    FFO_PSTN_FLG,(char *)&sql_amc_status_flg,
                                    FFO_STATUS_FLG,(char *)&sql_amc_batch_site_ind,
																		FFO_XCHNG_CD,(char *)sql_amc_xchng_cd,			/** Ver 1.1**/
                                    FFO_AMOUNT ,(char *)&sql_amc_old_fdr_amt,
                                    FFO_BAL_AMT ,(char *)&sql_fpd_total_peak_margin,              /** Ver 1.7 **/
                                    FFO_PLG_AMT ,(char *)&sql_fpd_peak_margin_tobe_debited,       /** Ver 1.7 **/
                                    FFO_PSTN_AMT_BLKD ,(char *)&sql_fpd_peak_margin_debited,      /** Ver 1.7 **/
                                    FFO_ADDL_AMT_BLKD ,(char *)&sql_fpd_peak_margin_credited,     /** Ver 1.7 **/ 
                                    FFO_BASE_ORD_VAL ,(char *)&d_isec_margin_required_in_cash,    /** Ver 1.7 **/
                                    FFO_INT_ADJ_AMT ,(char *)&sql_fpd_old_plg_amt                  /** Ver 1.7 **/
                                    );
     if( i_returncode == -1 )
     {
      fn_userlog( c_ServiceName, "S1012",FMLMSG, c_errmsg );
      EXEC SQL CLOSE cur_amc_rcrd;
      Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
     } 
 
    } /** End of while **/
  EXEC SQL CLOSE cur_amc_rcrd;
 
  }

  /***** Ver 1.6 Starts ******/

  if ( c_rqst_typ == 'I'  )
  {

   if(Fget32(ptr_fml_ibuf,FFO_TO_DT,0,(char *)c_to_dt,0) == -1)
   {
    fn_errlog(c_ServiceName,"S31050",FMLMSG,c_errmsg) ;
    Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
   }

   if( strcmp(c_xchng_cd,"NSE")== 0)
   {
    MEMSET(c_xchng_cd);
    strcpy(c_xchng_cd,"NFO");
   }
   else if ( strcmp(c_xchng_cd,"BSE")== 0)
   {
    MEMSET(c_xchng_cd);
    strcpy(c_xchng_cd,"BFO");
   }


    EXEC SQL
    DECLARE cur_sam_rcrd CURSOR FOR
    SELECT SID_DATE,
          SID_XCHNG, 
          NVL(SID_AMOUNT,0),
          NVL(SID_INT_PER,0), 
          NVL(SID_GST,0),
          NVL(SID_TOTRS,0),
          NVL(MDC_BNK_UPD_AMT,0)*100,
          (NVL(MDC_TOT_AMT,0) - NVL(MDC_BNK_UPD_AMT,0))*100,
          NVL(SID_INT_RS,0)
    FROM SID_SAM_INTRST_DTLS,MDC_MISC_DR_CR 
    WHERE SID_MATCH_ACC =:c_mtch_accnt_no
    and SID_MATCH_ACC = MDC_CLM_MTCH_ACCNT
    and SID_DATE = MDC_FROM_DT
    and trunc(MDC_CRDT_NMBR) = trunc(SID_CRDT_NMBR)
    /** and MDC_PRDCT_TYP='INF' ** Ver 1.8 **/
    and MDC_PRDCT_TYP = Decode(:c_xchng_cd,'NDX','INC','MCO','INM','NFO','INF','NA') /** Ver 1.8 **/
    and NVL(SID_XCHNG,'NFO') LIKE :c_xchng_cd 
    and trunc(SID_DATE)>=:c_frm_dt
    and trunc(SID_DATE)<=:c_to_dt
    ORDER BY SID_DATE desc  ;

   EXEC SQL OPEN cur_sam_rcrd;
    if ( SQLCODE != 0 )
    {
     fn_errlog( c_ServiceName, "S31055", SQLMSG, c_errmsg );
     tpfree ( ( char * ) ptr_fml_obuf );
     Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_errmsg, 0 );
     tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
    }

    while(1)
    {
     MEMSET(c_sam_dt);
     MEMSET(c_sam_exchng);
     d_sam_amt=0;
     d_sam_intper=0;
     d_sam_gst=0;
     d_sam_recov=0,
     d_sam_outstndg=0,
     d_sam_int_rs=0;
     d_sam_tot_rs=0;   
 
     EXEC SQL
     FETCH cur_sam_rcrd
      INTO :c_sam_dt,
           :c_sam_exchng,
           :d_sam_amt,
           :d_sam_intper,
           :d_sam_gst,
           :d_sam_tot_rs,
           :d_sam_recov,
           :d_sam_outstndg,
           :d_sam_int_rs;

     if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
     {
      fn_errlog( c_ServiceName, "S31060", SQLMSG, c_errmsg );
      EXEC SQL CLOSE cur_sam_rcrd;
      tpfree ( ( char * ) ptr_fml_obuf );
      Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
     }

     if( SQLCODE == NO_DATA_FOUND )
     {
      fn_userlog( c_ServiceName, "Inside Break Stmt");
      break;
     }

     i_returncode=fn_pack_vartofml( c_ServiceName,
                                    c_errmsg,
                                    &ptr_fml_obuf,
                                    9,          
                                    FFO_TRD_DT,(char *)c_sam_dt,
                                    FFO_C_TRD_MRGN , (char *)&d_sam_amt,
                                    FFO_ADD_MRGN_AMT,(char *)&d_sam_intper,
                                    FFO_ORD_AMT_BLKD,(char *)&d_sam_int_rs,
                                    FFO_XCHNG_CD,(char *)c_sam_exchng,
                                    FFO_AMOUNT ,(char *)&d_sam_gst,
                                    FFO_TOTAL_PL,(char *)&d_sam_tot_rs, 
																		FFO_BO_AMT_BLKD,(char *)&d_sam_recov,
																	  FFO_SO_AMT_BLKD,(char *)&d_sam_outstndg 
                                    );
     if( i_returncode == -1 )
     {
      fn_userlog( c_ServiceName, "S1012",FMLMSG, c_errmsg );
      EXEC SQL CLOSE cur_sam_rcrd;
      Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
     }

    }
 
    EXEC SQL CLOSE cur_sam_rcrd;

  }
  
  /****** Ver 1.6 Ends ********/

  
  tpreturn( TPSUCCESS, 0, (char *)ptr_fml_obuf, 0, 0 );
} 
