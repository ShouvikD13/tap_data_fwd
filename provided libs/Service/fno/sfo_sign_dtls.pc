/***************************************************************************************
Service       : sfo_sign_dtls.c

Purpose       : To show the summary of contract notes to broker

Input Param   : FFO_USR_ID	- User Id
								FFO_SSSN_ID	- Session id 
								FFO_ND_STRT_DT	- From match account
								FFO_EBA_MTCH_ACT_NO	- To match accnt
								FFO_OPERATION_TYP - 'F' or 'E'

Output        :  success/failure

Tables        : FNO_CNTRCT_MSTR       S
								EA_CONF_MSTR					S

Author        : ICICI Infotech

Date          : 

Version       :  
							:	Ver 1.1 	AIX Migration|SKS			          03-Mar-2008
						  : Ver 1.2   Display of additional Charges		08-Jul-2008
						  : Ver 1.3   View to FML Changes (Sachin Birje) 07-Sep-2014
************************************************************************************/

/*Standard include files */ 

#include <atmi.h>
#include <fml32.h>
#include <string.h>
#include <sqlca.h>
#define REC_LENGTH 100

/*	User defined header files */

#include <fo_fml_def.h>
#include <stdlib.h>

#include <fn_log.h>
#include <fo.h>
/** #include <fo_view_def.h> ** Ver 1.3 **/
#include <fn_session.h>
#include <fn_tuxlib.h>
#include <fn_read_debug_lvl.h>  /*  Ver 1.1 : Added   */


/* Global variables  */

char        c_ServiceName[33] ;

/** Ver 1.2 #define UNIQUE_OUTPUT_FML 5     **/
#define UNIQUE_OUTPUT_FML 9										/** Ver 1.2 ***/

EXEC SQL BEGIN DECLARE SECTION;
	VARCHAR c_total[51];
	VARCHAR c_trd_flg[2];
EXEC SQL END DECLARE SECTION;

void SFO_SIGN_DTLS(TPSVCINFO* rqst)
{
		int   i;                            /* Loop counter */
		int   j;                            /* Loop counter */
		int   otpt[UNIQUE_OUTPUT_FML+1] ; /* Error code array for  unique o/p FMLs */
	
		char  c_user_id[9] ;
		char  c_fr_match[12];
		char  c_to_match[12];
		char  c_oper_type;
		long  li_session_id ;

		double d_cr_total;
		double d_dr_total;
		double d_cntrct_total;
		
		long  l_space_avl;
		long  l_space_rqd;
		long  l_bufferlength;
		FBFR32  *ptr_ffo_temp_buffer;

		EXEC SQL INCLUDE "table/fno_cntrct_dtls.h";
		EXEC SQL INCLUDE "table/fno_cntrct_mstr.h";
		EXEC SQL INCLUDE "table/ea_conf_dtls.h";
		EXEC SQL INCLUDE "table/ea_conf_mstr.h";

/*    Tuxedo specific variables 	*/

		FBFR32      *ptr_ffo_Ibuffer ;      /*   Input Buffer */
		FBFR32      *ptr_ffo_Obuffer ;      /*   Output Buffer */
		char        c_errmsg[256] ;

  	strcpy(c_ServiceName,rqst->name) ;
		INITDBGLVL(c_ServiceName);            /*  Ver 1.1 : Added   */

/*	Initializations  */

		ptr_ffo_Ibuffer = (FBFR32*)rqst->data ;
		ptr_ffo_Obuffer = (FBFR32*)NULL ;

/*	Retrieve User Id and Session id and F&O /EA flag */

		if(Fget32(ptr_ffo_Ibuffer,FFO_USR_ID,0,c_user_id,0) == -1)
		{
			fn_errlog(c_ServiceName,"S31005",FMLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}

if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
	fn_userlog(c_ServiceName,"User id :<%s>",c_user_id) ;
}

		if(Fget32(ptr_ffo_Ibuffer,FFO_SSSN_ID,0,(char *)&li_session_id,0) == -1)
		{
			fn_errlog(c_ServiceName,"S31010",FMLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}

if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
	fn_userlog(c_ServiceName,"Session id :<%lf>",li_session_id) ;
}

		if(Fget32(ptr_ffo_Ibuffer,FFO_ND_STRT_DT,0,(char *)c_fr_match,0) == -1)
		{
			fn_errlog(c_ServiceName,"S31015",FMLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}

if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
	fn_userlog(c_ServiceName,"Match Accnt From :<%s>",c_fr_match) ;
}

		if(Fget32(ptr_ffo_Ibuffer,FFO_EBA_MTCH_ACT_NO,0,(char *)c_to_match,0) == -1)
		{
			fn_errlog(c_ServiceName,"S31020",FMLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}

if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
	fn_userlog(c_ServiceName,"Match Accnt To :<%s>",c_to_match) ;
}

		if(Fget32(ptr_ffo_Ibuffer,FFO_OPERATION_TYP,0,(char *)&c_oper_type,0) == -1)
		{
			fn_errlog(c_ServiceName,"S31025",FMLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}

if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
		fn_userlog(c_ServiceName,"Operation Type :<%c>",c_oper_type) ;
}

	  l_space_rqd = Fneeded32(1,REC_LENGTH);	
		
/* Allocate memory for output buffer */

		if((ptr_ffo_Obuffer=(FBFR32*)tpalloc("FML32",NULL,100 * MIN_FML_BUF_LEN))==NULL)
		{
			fn_errlog(c_ServiceName,"S31030",TPMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}

/*   Selecting client specific  data for a match account   */

		if(c_oper_type=='F')
		{
			EXEC SQL
			DECLARE der_cur_sign_dtls Cursor for
			SELECT
				FCM_USR_MTCH_ACCNO,
				FCM_CNTRCT_NMBR,
				FCM_CNTRCT_DT,
				FCM_EXCNG_CD
			FROM FNO_CNTRCT_MSTR
			WHERE FCM_SGN_FLG='N'
			AND (FCM_USR_MTCH_ACCNO between :c_fr_match AND :c_to_match)
			ORDER BY FCM_USR_MTCH_ACCNO;
			
			EXEC SQL OPEN der_cur_sign_dtls;
			
			j=0;
			while (1)
			{
				EXEC SQL FETCH der_cur_sign_dtls
								 INTO :sql_fcm_usr_mtch_accno,
											:sql_fcm_cntrct_nmbr,
											:sql_fcm_cntrct_dt,
											:sql_fcm_excng_cd;

				if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
  				fn_userlog(c_ServiceName,"sqlcode is   :%d:", SQLCODE );
				}

				if((SQLCODE==NO_DATA_FOUND)&&(j==0))
				{
					EXEC SQL
						close der_cur_sign_dtls ;
						fn_errlog(c_ServiceName,"S31035",SQLMSG,c_errmsg);
						Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,"Matching data not found",0) ;
						tpfree((char*)ptr_ffo_Obuffer) ;
						tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
				}
				else if(SQLCODE==NO_DATA_FOUND)
				{
					EXEC SQL
					close der_cur_sign_dtls ;
					break;
				}
				else if(SQLCODE)
				{
					EXEC SQL
					close der_cur_sign_dtls ;
					fn_errlog(c_ServiceName,"S31040",SQLMSG,c_errmsg);
					Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
					tpfree((char*)ptr_ffo_Obuffer) ;
					tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
				}
				SETNULL(sql_fcm_usr_mtch_accno);
				SETNULL(sql_fcm_cntrct_nmbr);
				SETNULL(sql_fcm_cntrct_dt);
				SETNULL(sql_fcm_excng_cd);

if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
	fn_userlog(c_ServiceName,"Values retrieved from FNO Contrct Master........");
	fn_userlog(c_ServiceName,"Match Account No  :<%s>",sql_fcm_usr_mtch_accno.arr);
	fn_userlog(c_ServiceName,"Contrct No  :<%s>",sql_fcm_cntrct_nmbr.arr);
	fn_userlog(c_ServiceName,"Contrct Date :<%s>",sql_fcm_cntrct_dt.arr);
	fn_userlog(c_ServiceName,"Exchange Code   :<%s>",sql_fcm_excng_cd.arr);
	fn_userlog(c_ServiceName,"Values from FNO Contrct Master over ..... ");
}

		EXEC SQL
			DECLARE cur_dtls CURSOR FOR
				SELECT sum(FCD_CNTRCT_AMT),
							 FCD_TRD_FLW,
							 nvl(FCD_STAMP_DUTY,0),       /** Ver 1.2 **/ 
							 nvl(FCD_SEBI_TT,0),          /** Ver 1.2 **/ 
							 nvl(FCD_TRAN_CHRG,0),        /** Ver 1.2 **/ 
							 nvl(FCD_OTHER_CHRG,0)        /** Ver 1.2 **/ 
				FROM  FNO_CNTRCT_DTLS
				WHERE  FCD_CNTRCT_NMBR=:sql_fcm_cntrct_nmbr
				GROUP BY FCD_TRD_FLW,FCD_STAMP_DUTY,FCD_SEBI_TT,FCD_TRAN_CHRG,FCD_OTHER_CHRG; /*1.2*/

				/*  Open cursor */
				EXEC SQL 
						OPEN  cur_dtls;

/***    Fetch the cursor, store data in variables ***/

if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
fn_userlog(c_ServiceName,"before fetching cursor for amts");
}

		while(1)
		{
			EXEC SQL
					FETCH cur_dtls
					INTO :c_total,
							 :c_trd_flg,
							 :sql_fcd_stamp_duty,				/** Ver 1.2 **/
							 :sql_fcd_sebi_tt,					/** Ver 1.2 **/
							 :sql_fcd_tran_chrg,				/** Ver 1.2 **/
							 :sql_fcd_other_chrg;			/** Ver 1.2 **/
			if(SQLCODE==NO_DATA_FOUND)
			{
					EXEC SQL
							CLOSE cur_dtls;
					break;
			}
			else if(SQLCODE)
			{
				EXEC SQL
						 CLOSE cur_dtls ;
				tpabort(0);
				fn_errlog(c_ServiceName,"S31045",SQLMSG,c_errmsg) ;
				Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
				tpfree((char*)ptr_ffo_Obuffer) ;
				tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
			}

			SETNULL(c_total);
			SETNULL(c_trd_flg);

			if(strcmp((char *)c_trd_flg.arr,"B") ==0)
			{
				d_dr_total= atof((char *)c_total.arr);
			}
			else
			{
				d_cr_total= atof((char *)c_total.arr);
			}

		}	 /*End of while */
		d_cntrct_total=d_dr_total-d_cr_total;	

		l_space_avl = Funused32(ptr_ffo_Obuffer);
		if (l_space_avl < l_space_rqd)
		{
			/* Reallocate a output buffer */
					
			l_bufferlength = Fsizeof32(ptr_ffo_Obuffer) + MIN_FML_BUF_LEN * 10;
			ptr_ffo_temp_buffer=(FBFR32 *)tprealloc((char *)ptr_ffo_Obuffer,
			l_bufferlength);
			if (ptr_ffo_temp_buffer == NULL)
			{
				fn_errlog(c_ServiceName,"S31050",FMLMSG,c_errmsg);
				Fadd32( ptr_ffo_Ibuffer,FFO_ERR_MSG, c_errmsg, 0 );
				tpfree((char *)ptr_ffo_Obuffer);
				tpreturn(TPFAIL,0L, (char *)ptr_ffo_Ibuffer, 0L, 0);
			}
			else
			{
				ptr_ffo_Obuffer = ptr_ffo_temp_buffer;
    		Finit32(ptr_ffo_temp_buffer, Fsizeof32(ptr_ffo_temp_buffer));
			}
		}
				
				/** populate the output buffer with the unique values **/
			otpt[0] = Fadd32(ptr_ffo_Obuffer,FFO_EBA_MTCH_ACT_NO,(char*)sql_fcm_usr_mtch_accno.arr,0);
			otpt[1] = Fadd32(ptr_ffo_Obuffer,FFO_NARRATION_ID,(char*)sql_fcm_cntrct_nmbr.arr,0);
			otpt[2] = Fadd32(ptr_ffo_Obuffer,FFO_RCRD_DT,(char*)sql_fcm_cntrct_dt.arr,0);
			otpt[3] = Fadd32(ptr_ffo_Obuffer,FFO_XCHNG_CD,(char*)sql_fcm_excng_cd.arr,0);
			otpt[4] = Fadd32(ptr_ffo_Obuffer,FFO_TOTAL_PL,(char*)&d_cntrct_total,0);

			/** Ver 1.2 **/
			otpt[5] = Fadd32(ptr_ffo_Obuffer,FFO_OI_HIGH,(char*)&sql_fcd_stamp_duty,0);
			otpt[6] = Fadd32(ptr_ffo_Obuffer,FFO_OI_LOW,(char*)&sql_fcd_sebi_tt,0);
			otpt[7] = Fadd32(ptr_ffo_Obuffer,FFO_JIFFY,(char*)&sql_fcd_tran_chrg,0);
			otpt[8] = Fadd32(ptr_ffo_Obuffer,FFO_EFF_LTP,(char*)&sql_fcd_other_chrg,0);
			/** Ver 1.2 **/

			for(i=0;i < UNIQUE_OUTPUT_FML;i++)
			{
				if(otpt[i]==-1)
				{
					fn_errlog(c_ServiceName,"S31055",FMLMSG,c_errmsg) ;
					Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
					tpfree((char*)ptr_ffo_Obuffer) ;
					tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
				}
			}
			j++;
		 }/* End of while */
		 EXEC SQL CLOSE der_cur_sign_dtls;
		}
		else if (c_oper_type=='E')
		{
			EXEC SQL
				DECLARE ea_cur_sign_dtls Cursor for
				SELECT
					ECM_USR_MTCH_ACCNO,
					ECM_CNTRCT_NMBR,
					ECM_CNTRCT_DT,
					ECM_EXCNG_CD,
			  	ECM_TOTAL_AMOUNT	
				FROM EA_CONF_MSTR
				WHERE ECM_SGN_FLG='N'
				AND (ECM_USR_MTCH_ACCNO BETWEEN :c_fr_match and :c_to_match)
				ORDER BY ECM_USR_MTCH_ACCNO;

			EXEC SQL OPEN ea_cur_sign_dtls;

			j=0;
			while (1)
			{
				EXEC SQL FETCH ea_cur_sign_dtls
				INTO :sql_ecm_usr_mtch_accno,
						 :sql_ecm_cntrct_nmbr,
						 :sql_ecm_cntrct_dt,
						 :sql_ecm_excng_cd,
						 :d_cntrct_total;

				if((SQLCODE==NO_DATA_FOUND)&&(j==0))
				{
					EXEC SQL
					CLOSE ea_cur_sign_dtls ;
					fn_errlog(c_ServiceName,"S31060",SQLMSG,c_errmsg);
					Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,"matching data not found",0) ;
					tpfree((char*)ptr_ffo_Obuffer) ;
					tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
				}
				else if(SQLCODE==NO_DATA_FOUND)
				{
					EXEC SQL
						CLOSE ea_cur_sign_dtls ;
					break;
				}
				else if(SQLCODE)
				{
					EXEC SQL
						CLOSE ea_cur_sign_dtls ;
					fn_errlog(c_ServiceName,"S31065",SQLMSG,c_errmsg);
					Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
					tpfree((char*)ptr_ffo_Obuffer) ;
					tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
				}
				SETNULL(sql_ecm_usr_mtch_accno);
				SETNULL(sql_ecm_cntrct_nmbr);
				SETNULL(sql_ecm_cntrct_dt);
				SETNULL(sql_ecm_excng_cd);

if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
	fn_userlog(c_ServiceName,"Values retrieved from EA Conf Master........");
	fn_userlog(c_ServiceName,"Match Account No  :%s>",sql_ecm_usr_mtch_accno.arr);
	fn_userlog(c_ServiceName,"E/A No  :%s>",sql_ecm_cntrct_nmbr.arr);
	fn_userlog(c_ServiceName,"E/A Date :%s>",sql_ecm_cntrct_dt.arr);
	fn_userlog(c_ServiceName,"Exchange Code   :%s>",sql_ecm_excng_cd.arr);
	fn_userlog(c_ServiceName,"Values from E/A Conf Master over............");
}

			l_space_avl = Funused32(ptr_ffo_Obuffer);
			if (l_space_avl < l_space_rqd)
			{
				/* Reallocate a output buffer */

				l_bufferlength = Fsizeof32(ptr_ffo_Obuffer) + MIN_FML_BUF_LEN * 10;
				ptr_ffo_temp_buffer=(FBFR32 *)tprealloc((char *)ptr_ffo_Obuffer,
				l_bufferlength);
				if (ptr_ffo_temp_buffer == NULL)
				{
					fn_errlog(c_ServiceName,"S31070",FMLMSG,c_errmsg);
					Fadd32( ptr_ffo_Ibuffer,FFO_ERR_MSG, c_errmsg, 0 );
					tpfree((char *)ptr_ffo_Obuffer);
					tpreturn(TPFAIL,0L, (char *)ptr_ffo_Ibuffer, 0L, 0);
				}
				else
				{
					ptr_ffo_Obuffer = ptr_ffo_temp_buffer;
					Finit32(ptr_ffo_temp_buffer, Fsizeof32(ptr_ffo_temp_buffer));
				}
			}

			/** populate the output buffer with the unique values **/

			otpt[0] = Fadd32(ptr_ffo_Obuffer,FFO_EBA_MTCH_ACT_NO,(char*)sql_ecm_usr_mtch_accno.arr,0);
			otpt[1] = Fadd32(ptr_ffo_Obuffer,FFO_NARRATION_ID,(char*)sql_ecm_cntrct_nmbr.arr,0);
			otpt[2] = Fadd32(ptr_ffo_Obuffer,FFO_RCRD_DT,(char*)sql_ecm_cntrct_dt.arr,0);
			otpt[3] = Fadd32(ptr_ffo_Obuffer,FFO_XCHNG_CD,(char*)sql_ecm_excng_cd.arr,0);
			otpt[4] = Fadd32(ptr_ffo_Obuffer,FFO_TOTAL_PL,(char*)&d_cntrct_total,0);

			for(i=0;i < UNIQUE_OUTPUT_FML;i++)
			{
				if(otpt[i]==-1)
				{
					fn_errlog(c_ServiceName,"S31075",FMLMSG,c_errmsg) ;
					Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
					tpfree((char*)ptr_ffo_Obuffer) ;
					tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
				}
			}
			j++;
		}/*End of while */
		EXEC SQL CLOSE ea_cur_sign_dtls;
	}

if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
	fn_userlog(c_ServiceName,"Service completed succesfully  ");
}
	tpreturn(TPSUCCESS,0,(char *)ptr_ffo_Obuffer,0L,0) ;

}/*End of sfo_sign_dtls*/
