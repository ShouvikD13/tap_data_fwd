/**********************************************************************************
* Service name : SFO_AUTOMTM_LOG																					 				*
*                                                                          				*
* Description  : This service is to make insert in FMD_FO_MTM_DTLS_LOGlog table.  *
*                This service will get call from cln_forcv_mtmclnt.pc						  *
*	Input        : Match Acc			String			FFO_EBA_MTCH_ACT_NO										*
*								 Exchange code  String			FFO_XCHNG_CD													* 
*																																									*
*	 Version       : 1.0			New Release		- 	Tanmay W														*
*	 Version       : 1.1			Inserting date with time		- Sachin Birje	      		*
*	 Version       : 1.2			AUTOMTM MAILER CHANHGES 		- Tanmay W (02-Aug-2016)	*
*  Version       : 1.3      Core Fix                    - Mrinal Kishore(25-05-17 *
**********************************************************************************/
/**** C header ****/
#include <stdio.h>
#include <sys/socket.h>

/**** Tuxedo header ****/
#include <atmi.h>
#include <sqlca.h>
#include <fml32.h>
#include <Usysflds.h>
#include <unistd.h>

#include<errno.h>
#include <fo_view_def.h>
#include <fo_fml_def.h>
#include <fml_def.h>
#include <fo.h>
#include <fn_tuxlib.h>
/* #include <fn_battmpt.h>													
#include <fn_scklib_tap.h>							
#include <fn_read_debug_lvl.h>
**** Commented in Ver 1.3 *****/
#include <fn_signal.h>

/* Process specific header  */
/* #include <fn_env.h> **** Commented in Ver 1.3 *****/	
#include <fn_log.h>
/* #include <fn_ddr.h>
   #include <signal.h>
**** Commented in Ver 1.3 *****/

#include <string.h>
#include <stdlib.h>
#include <fml_rout.h>
#include <fn_read_debug_lvl.h>

void SFO_AUTOMTM_LOG(TPSVCINFO *rqst)
{
	FBFR32 *ptr_fml_Ibuf;
/*FBFR32 *ptr_fml_Obuf;	**** Commented in Ver 1.3 *****/

	char  c_ServiceName[33];
	varchar  c_mtm_sck_msg[1024];	 /** Datatype converted to varchar from char in Ver 1.3 **/
 	char c_ord_flw = '\0';
 	char c_clm_mtch_acnt[10+1]="\0";
  char c_xchng_cd[4]="\0";
  varchar c_cntrct_desc[50]; 		/** Datatype converted to varchar from char in Ver 1.3 **/
/*  char c_cntrct_desc_temp[50]="\0";								
    char c_fmd_rowid[30]="\0";
	**** Commented in Ver 1.3 *****/
  char c_prd_typ= '\0';
	char c_indstk= '\0';
	char c_expry_dt[12]= "\0";											
	char c_exer_typ= '\0';
  char c_opt_typ= '\0';
	varchar  c_err_msg[256];  /** Datatype converted to varchar from char in Ver 1.3 **/
  varchar c_sem_map_vl[30];	/** Datatype converted to varchar from char in Ver 1.3 **/
  char c_ltq_dt[22]= "\0";											
  char c_pstn_typ='\0';    /** ver 1.2 **/
  varchar c_undrlyng[7];		/** Datatype converted to varchar from char in Ver 1.3 **/
 	char c_sqroff_mode='\0';
/*char* strptr;		**** Commented in Ver 1.3 *****/
	char c_errmsg[256]="\0";
	int   i;
/*int   i_returncode;	**** Commented in Ver 1.3 *****/
/** int i_err[20];    ** ver 1.2 **/
/** int i_ferr[20];    ** ver 1.2 **/
	int i_err[25] ;				/** ver 1.2 **/
	int i_ferr[25];				/** ver 1.2 **/
/*double d_trgr_rt=0;	**** Commented in Ver 1.3 *****/
  double d_ltq_rt=0.0;
/*double d_lmt_rt= 0.0;																
  double d_trg_prc = 0.0;
	**** Commented in Ver 1.3 *****/
  long l_strk_prc=0;
	long l_fmd_sequence = 0;
	long l_trgr_rt = 0;
	long l_lmt_rt=0;																	
/*long l_ltq_rt=0; **** Commented in Ver 1.3 *****/
	long l_min_trgr_rt = 0; 

/** Added in Ver 1.3 as DataType changed from char to varchar **/
	MEMSET(c_mtm_sck_msg); 
	MEMSET(c_cntrct_desc); 
	MEMSET(c_err_msg);     
	MEMSET(c_sem_map_vl);  
	MEMSET(c_undrlyng);    
/** Add end for Ver 1.3 **/


/************ Commented in Ver 1.3  **********
  ptr_fml_Obuf = (FBFR32 *)tpalloc("FML32", NULL, MIN_FML_BUF_LEN * 5);
  if(ptr_fml_Obuf == NULL)
  {
    fn_errlog(c_ServiceName, "S31005", FMLMSG, c_errmsg);
    Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0);
    tpreturn(TPFAIL, 0, (char *)ptr_fml_Ibuf, 0, 0);
  }
********* Comment end in Ver 1.3 ***********/

	ptr_fml_Ibuf = (FBFR32 *)rqst->data;
  strcpy( c_ServiceName, rqst->name );

	INITDBGLVL(c_ServiceName);
	
   i_err[0] = Fget32(ptr_fml_Ibuf, FFO_EBA_MTCH_ACT_NO,0,(char *)c_clm_mtch_acnt, 0);
   i_ferr [0] = Ferror32;
   i_err[1] = Fget32(ptr_fml_Ibuf,FFO_LMT_RT,0 ,(char *)&l_lmt_rt, 0);
   i_ferr[1] = Ferror32;
   i_err[2] = Fget32(ptr_fml_Ibuf, FFO_INDX_INDCTR,0,(char *)&c_sqroff_mode, 0);
   i_ferr [2] = Ferror32;
   i_err[3] = Fget32(ptr_fml_Ibuf, FFO_XCHNG_CD,0,(char *)c_xchng_cd, 0);
   i_ferr [3] = Ferror32;
  /** i_err[4] = Fget32(ptr_fml_Ibuf, FFO_NARRATION_ID,0,(char *)c_fmd_rowid, 0);
   i_ferr [4]= Ferror32;**/
   i_err[4] = Fget32(ptr_fml_Ibuf, FFO_SYS_MSG,0,(char *)c_mtm_sck_msg.arr,0); /* Changed from c_mtm_sck_msg to c_mtm_sck_msg.arr in ver 1.3 ***/
   i_ferr[4] = Ferror32;
   i_err[5] = Fget32(ptr_fml_Ibuf, FFO_SERIES,0,(char *)c_cntrct_desc.arr,0);  /* Changed from c_cntrct_desc to c_cntrct_desc.arr in ver 1.3 ***/
   i_ferr[5] = Ferror32;
   /**i_err[6] = Fget32(ptr_fml_Ibuf, FFO_INSTRMNT_TYP, 0, (char *)&c_indstk,0); Commented in 1.1 Ver ****/
   i_err[6] = Fget32(ptr_fml_Ibuf, FFO_CTGRY_INDSTK, 0, (char *)&c_indstk,0);    /*** Added in Ver 1.1 ****/
   i_ferr[6] = Ferror32;
   i_err[7] = Fget32(ptr_fml_Ibuf, FFO_UNDRLYNG,0,(char *)c_undrlyng.arr, 0); /* Changed from c_undrlyng to c_undrlyng.arr in ver 1.3 ***/ 
   i_ferr [7] = Ferror32;
   i_err[8] = Fget32(ptr_fml_Ibuf, FFO_ORDR_FLW,0,(char *)&c_ord_flw, 0);
   i_ferr [8] = Ferror32;
   i_err[9] = Fget32(ptr_fml_Ibuf, FFO_MTM_TRG_PRC,0,(char *)&l_trgr_rt, 0);
   i_ferr [9] = Ferror32;
   i_err[10] = Fget32(ptr_fml_Ibuf, FFO_ORD_SEQ,0,(char *)&l_fmd_sequence, 0);
   i_ferr [10] = Ferror32;
   i_err[11] = Fget32(ptr_fml_Ibuf,FFO_STRIKE4,0,(char *)c_sem_map_vl.arr, 0); /* Changed from c_sem_map_vl to c_sem_map_vl.arr in ver 1.3 ***/
   i_ferr[11] =  Ferror32;
	 i_err[12] = Fget32(ptr_fml_Ibuf, FFO_OPT_TYP, 0,(char *)&c_opt_typ, 0);
   i_ferr [12] = Ferror32;
	 i_err[13] = Fget32(ptr_fml_Ibuf, FFO_STRK_PRC, 0,(char *)&l_strk_prc, 0);
   i_ferr[13] =  Ferror32;
   i_err[14] = Fget32(ptr_fml_Ibuf,FFO_EXER_TYP, 0, (char *)&c_exer_typ, 0);
   i_ferr[14] =  Ferror32;	
	 i_err[15] = Fget32(ptr_fml_Ibuf, FFO_EXPRY_DT ,0, (char *)c_expry_dt, 0);
   i_ferr[15] = Ferror32; 
	 i_err[16] = Fget32(ptr_fml_Ibuf, FFO_PRDCT_TYP ,0, (char *)&c_prd_typ, 0);
   i_ferr[16] = Ferror32; 
	 i_err[17] = Fget32(ptr_fml_Ibuf,FFO_RATE,0, (char *)&d_ltq_rt, 0);
   i_ferr[17] = Ferror32; 
	 i_err[18] = Fget32(ptr_fml_Ibuf, FFO_EXCTD_RT, 0, (char *)&l_min_trgr_rt, 0);
   i_ferr[18] = Ferror32; 
	 i_err[19] = Fget32(ptr_fml_Ibuf, FFO_TRD_DT, 0, (char *)c_ltq_dt, 0); 
   i_ferr[19] = Ferror32;
	 i_err[20] = Fget32(ptr_fml_Ibuf, FFO_RQST_TYP, 0, (char *)&c_pstn_typ, 0);   /** ver 1.2 **/
   i_ferr[20] = Ferror32;																											 /** ver 1.2 **/


	
   for(i = 0; i < 20; i++)
   {
     if(i_err[i] == -1)
     {
       fn_userlog(c_ServiceName,"Fget32 failed at i_cntr :%d:",i);
       errlog(c_ServiceName, "S31010", LIBMSG, (char *)DEF_USR, DEF_SSSN, c_err_msg.arr); /* Changed from c_err_msg to c_err_msg.arr in ver 1.3 ***/
/*     tpfree ((char *) ptr_fml_Ibuf );	**** Commented in Ver 1.3 ****/
			 tpreturn(TPFAIL, 0, (char *)ptr_fml_Ibuf, 0, 0);
     }
   }
	
	int i_trnsctn = 0;

  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg.arr ); /* Changed from c_err_msg to c_err_msg.arr in ver 1.3 ***/
  if ( i_trnsctn == -1 )
  {
      fn_errlog(c_ServiceName, "S31015", LIBMSG, c_err_msg.arr ); /* Changed from c_err_msg to c_err_msg.arr in ver 1.3 ***/
			tpreturn(TPFAIL, 0, (char *)ptr_fml_Ibuf, 0, 0);
	}

 rtrim(c_ltq_dt);  

/******SETLEN(Start) IN VER-1.3******/

	SETLEN(c_mtm_sck_msg);
	SETLEN(c_cntrct_desc);
	SETLEN(c_sem_map_vl);
	SETLEN(c_undrlyng);
	SETLEN(c_err_msg);

/******SETLEN(End) IN VER-1.3******/

	l_lmt_rt = (l_lmt_rt / 100); /**** ADDED IN Ver 1.3 ****/

  if( DEBUG_MSG_LVL_4 )
  {	
    fn_userlog(c_ServiceName,"Match:%s:",c_clm_mtch_acnt);
    fn_userlog(c_ServiceName,"Xchng:%s:",c_xchng_cd);
    fn_userlog(c_ServiceName,"c_ord_flw:%c:",c_ord_flw);
    fn_userlog(c_ServiceName,"c_sqroff_mode :%c:",c_sqroff_mode);
/*  fn_userlog(c_ServiceName,"c_fmd_rowid :%s:",c_fmd_rowid);			**** Commented in Ver 1.3 *****/
    fn_userlog(c_ServiceName,"c_prd_typ :%c:",c_prd_typ );
    fn_userlog(c_ServiceName,"l_min_trgr_rt:%ld:",l_min_trgr_rt);
    fn_userlog(c_ServiceName,"c_undrlyng :%s:",c_undrlyng.arr ); /* Changed from c_undrlyng to c_undrlyng.arr in ver 1.3 ***/
    fn_userlog(c_ServiceName,"c_expry_dt:%s:",c_expry_dt ); 
    fn_userlog(c_ServiceName,"c_opt_typ :%c:",c_opt_typ );
    fn_userlog(c_ServiceName,"c_indstk :%c:",c_indstk);
    fn_userlog(c_ServiceName,"d_lmt_rt :%ld:",l_lmt_rt);
    fn_userlog(c_ServiceName,"l_fmd_sequence :%ld:",l_fmd_sequence);
    fn_userlog(c_ServiceName,"c_mtm_sck_msg :%s:",c_mtm_sck_msg.arr); /* Changed from c_mtm_sck_msg to c_mtm_sck_msg.arr in ver 1.3 ***/
    fn_userlog(c_ServiceName," c_cntrct_desc:%s:",c_cntrct_desc.arr); /* Changed from c_cntrct_desc to c_cntrct_desc.arr in ver 1.3 ***/
    fn_userlog(c_ServiceName,"c_ltq_dt :%s:",c_ltq_dt); 
    fn_userlog(c_ServiceName,"l_strk_prc :%ld:",l_strk_prc );
    fn_userlog(c_ServiceName,"c_exer_typ :%c:",c_exer_typ );
    fn_userlog(c_ServiceName,"d_ltq_rt :%lf:",d_ltq_rt);
		fn_userlog(c_ServiceName,"l_trgr_rt :%ld:",l_trgr_rt);		 /** Test Mrinal **/
		fn_userlog(c_ServiceName,"c_pstn_typ :%c:",c_pstn_typ);    /** ver 1.2 **/
 }
	
	EXEC SQL
	INSERT INTO FMD_FO_MTM_DTLS_LOG 
	(
 	 FMD_CLM_MTCH_ACCNT,
	 FMD_XCHNG_CD,
	 FMD_PRDCT_TYP,	
	 FMD_INDSTK,
	 FMD_UNDRLYNG,
	 FMD_EXPRY_DT,
	 FMD_EXER_TYP,
	 FMD_OPT_TYP,
	 FMD_STRK_PRC,
	 FMD_ORDR_FLW,
	 FMD_CNTRCT_DESC,
	 FMD_STATUS,
	 FMD_LMT_RT,
	 FMD_TRGR_RT,
	 FMD_SEM_VAL,
	 FMD_SEQUENCE,
	 FMD_SND_DATE,
	 FMD_MIN_TRGR_RT, 
	 FMD_LOG_TIME,
	 FMD_LTQ_RT,
	 FMD_SVC_FLG, 											/**** Ver 1.1 ****/
	 FMD_PSTN_TYP												 /** ver 1.2 **/
	)
	VALUES
	( :c_clm_mtch_acnt,
		:c_xchng_cd,
		:c_prd_typ,
		:c_indstk,
		:c_undrlyng,
		:c_expry_dt,
		:c_exer_typ,
		:c_opt_typ,
		:l_strk_prc,
		:c_ord_flw,
		:c_cntrct_desc,
		:c_sqroff_mode,
		:l_lmt_rt,
		:l_trgr_rt,
		:c_sem_map_vl,
		:l_fmd_sequence,
		to_date(to_char(to_date(:c_ltq_dt,'dd/mm/yyyy hh24:mi:ss'),'dd-Mon-yyyy hh24:mi:ss'),'dd-Mon-yyyy hh24:mi:ss'), /** Ver 1.1 **/
		:l_min_trgr_rt,
		sysdate,
		:d_ltq_rt,
		'R', 														  /**** Ver 1.1 ****/
		:c_pstn_typ 											 /** ver 1.2 **/
	);

	if(SQLCODE != 0)
  {
    fn_errlog(c_ServiceName, "S31020", SQLMSG , c_errmsg);
    fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg.arr ); /* Changed from c_err_msg to c_err_msg.arr in ver 1.3 ***/
  	tpreturn(TPFAIL, 0, (char *)ptr_fml_Ibuf, 0, 0); 
	} 

  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg.arr ) == -1 ) /* Changed from c_err_msg to c_err_msg.arr in ver 1.3 ***/
  {
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr ); /* Changed from c_err_msg to c_err_msg.arr in ver 1.3 ***/
    fn_errlog( c_ServiceName, "S31025",LIBMSG,c_err_msg.arr ); /* Changed from c_err_msg to c_err_msg.arr in ver 1.3 ***/
  	tpreturn(TPFAIL, 0, (char *)ptr_fml_Ibuf, 0, 0);
	}
		Fprint32(ptr_fml_Ibuf);	
	  tpreturn( TPSUCCESS, 0, (char *)ptr_fml_Ibuf, 0 , 0 );

}


