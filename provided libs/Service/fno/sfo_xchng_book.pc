/******************************************************************************/
/*	Program	    			:	SFO_XCHNG_BOOK                                        */
/*                                                                            */
/*  Input             : FFO_USR_ID                                            */
/*                      FFO_SSSN_ID                                           */
/*                      FFO_ORDR_RFRNC                                        */
/*                      FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_ROUT_CRT                                          */
/*                                                                            */
/*  Output            : FFO_XCHNG_CD                                          */
/*                      FFO_ORDR_RFRNC                                        */
/*                      FFO_PIPE_ID                                           */
/*                      FFO_TRD_DT                                            */
/*                      FFO_ORD_SEQ                                           */
/*                      FFO_LMT_MKT_SL_FLG                                    */
/*                      FFO_DSCLSD_QTY                                        */
/*                      FFO_ORD_TOT_QTY                                       */
/*                      FFO_LMT_RT                                            */
/*                      FFO_STP_LSS_TGR                                       */
/*                      FFO_MDFCTN_CNTR                                       */
/*                      FFO_ORD_VALID_DT                                      */
/*                      FFO_ORD_TYP                                           */
/*                      FFO_SPRD_ORD_IND                                      */
/*                      FFO_REQ_TYP                                           */
/*                      FFO_RQST_TM                                           */
/*                      FFO_PLCD_STTS                                         */
/*                      FFO_RMS_PRCSD_FLG                                     */
/*                      FFO_ORS_MSG_TYP                                       */
/*                      FFO_ACK_TM                                            */
/*                      FFO_XCHNG_RMRKS                                       */
/*                      FFO_EX_ORDR_TYP                                       */
/*                      FFO_XCHNG_CAN_QTY                                     */
/*                      FFO_SPL_FLG                                           */
/*                      FFO_QUOTE                                             */
/*                      FFO_QT_TM                                             */
/*                                                                            */
/*  Description       : This service is used to view the modification log of  */
/*                      a given order reference no. Verification is done to   */
/*                      check whether the modification log is available in    */
/*                      Exchange book. If not the modification log is fetched */
/*                      from the History Exchange book.                       */
/*                                                                            */
/*  Log               : 1.0   03-Oct-2001   Vinod Banjan                      */
/*										: 1.1   08-Dec-2007		Sandeep Patil											*/
/*                    : 1.2   26-Feb-2013   Sachin Birje                      */
/*                    : 1.3   14-Jul-2015   Sachin Birje                      */
/*                    : 1.5   18-Aug-2016   Vishal Borhade                    */
/******************************************************************************/
/*   1.0  -  New release                                                      */
/*	 1.1  -  IBM Migration Changes																						*/
/*   1.2  -  FNO Game Simulator Changes                                       */
/*   1.3  -  FNO VTC Order Changes                                            */
/*   1.5  -  Future Trail                                                     */
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
/*Add header files here */
#include <fo.h>
#include <fo_fml_def.h>
#include <fo_view_def.h>
#include <fn_tuxlib.h>			/** Ver 1.1 **/	
#include <fn_ddr.h>
#include <fn_log.h>					/** Ver 1.1 **/
#include <fn_session.h>			/** Ver 1.1 **/
#include <fn_read_debug_lvl.h>      /*** Ver 1.1 ***/

void SFO_XCHNG_BOOK( TPSVCINFO *rqst )
{

  FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;

  char c_ServiceName[33];
  char c_err_msg[256];
  char c_msg[256];
  int i_returncode;
  int i_counter;

  int i_rec_count = 0;
	int i =0 ;						/** Ver 1.5 **/
	int  i_err[25]; 			/** Ver 1.5 **/

	long l_fxb_init_sltp_rt = 0;     /** Ver 1.5 **/
	long l_fxb_init_lmt_rt = 0;      /** Ver 1.5 **/
	long l_fxb_ltp_rt = 0;           /** Ver 1.5 **/
	long l_fxb_trail_amt = 0;        /** Ver 1.5 **/
	long l_bufferlength = 0;         /** Ver 1.5 **/ 

  EXEC SQL BEGIN DECLARE SECTION;
    sql_cursor     sys_cursor;             /* a cursor variable */
  	struct vw_xchngbook *ptr_st_xchngbook;
    varchar c_ordr_rfrnc [ 19 ];
		varchar	c_trade_date[ LEN_DATE ];
		varchar	c_valid_date[ LEN_DATE ];
		varchar	c_request_tm[ LEN_DATE ];
		varchar	c_ack_time[ LEN_DATE ];
		varchar	c_qt_time[ LEN_DATE ];
		varchar	c_remarks[ 257 ];
		short		i_ack_time;
 		short i_slm_flg;
    short i_dsclsd_qty;
    short i_ord_lmt_rt;
    short i_stp_lss_tgr;
    short i_valid_dt;
    short i_ord_typ;
    short i_sprd_ord_ind;
    short i_quote;
    short i_qt_tm;
    short i_frwrd_tm;
    short i_rms_prcsd_flg;
    short i_ors_msg_typ;
    short i_ack_tm;
    short i_xchng_rmrks;
    short i_xchng_can_qty;
    short i_spl_flg;
    short i_req_typ;
    short i_ord_tot_qty;
    short i_rqst_tm;
    short i_ex_ordr_typ;
  EXEC SQL END DECLARE SECTION;

  struct vw_usr_prfl st_usr_prfl;
  struct vw_err_msg st_err_msg;

  ptr_fml_Ibuf = (FBFR32 *)rqst->data;
  strcpy( c_ServiceName, rqst->name );

	INITDBGLVL(c_ServiceName);			 /*** Ver 1.1 ***/


  i_returncode = Fvftos32( ptr_fml_Ibuf,
                           (char *) &st_usr_prfl,
                           "vw_usr_prfl" );
  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  /*** Added for Order Routing ***/
  fn_init_ddr_val ( st_usr_prfl.c_rout_crt );

  i_returncode = fn_chk_sssn( c_ServiceName, &st_usr_prfl,
                                             &st_err_msg ) ;

  if ( i_returncode == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, st_err_msg.c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  ptr_st_xchngbook = ( struct vw_xchngbook * ) tpalloc ( "VIEW32",
                                                       "vw_xchngbook",
                                               sizeof ( struct vw_xchngbook ) );
  if ( ptr_st_xchngbook == NULL )
  {
    fn_errlog( c_ServiceName, "S31010", TPMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
  memset ( ptr_st_xchngbook, 0, sizeof ( struct vw_xchngbook ) );

	i_returncode = Fget32( ptr_fml_Ibuf, FFO_ORDR_RFRNC, 0,
                                   (char *)c_ordr_rfrnc.arr, 0 );
	if ( i_returncode == -1 )
  {
    tpfree ( ( char * ) ptr_st_xchngbook );
    fn_errlog( c_ServiceName, "S31015", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	SETLEN( c_ordr_rfrnc );

	strcpy(ptr_st_xchngbook->c_ordr_rfrnc, (char *) c_ordr_rfrnc.arr );

	EXEC SQL
		SELECT 1
		INTO	 :i_rec_count
		FROM	dual
		WHERE exists
		(
			SELECT 1
			FROM	 fxb_fo_xchng_book	
			WHERE  fxb_ordr_rfrnc = :c_ordr_rfrnc 
		) ;

	if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
	{
    tpfree ( ( char * ) ptr_st_xchngbook );
    fn_errlog( c_ServiceName, "S31020", SQLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

  EXEC SQL ALLOCATE :sys_cursor;

  if ( i_rec_count != 1 )
  {
    EXEC SQL EXECUTE
      BEGIN
          OPEN :sys_cursor FOR
            SELECT  fxb_xchng_cd,
										fxb_pipe_id,
										to_char( fxb_mod_trd_dt, 'DD-Mon-YYYY' ),
										fxb_ordr_sqnc,
										NVL(fxb_lmt_mrkt_sl_flg,' '),
										NVL(fxb_dsclsd_qty,0),
										nvl(fxb_ordr_tot_qty,0),
										NVL(fxb_lmt_rt,0),
										NVL(fxb_stp_lss_tgr,0),
										fxb_mdfctn_cntr,
										NVL(to_char(fxb_ordr_valid_dt,'DD-Mon-yyyy'),'*'),
										fxb_ordr_type,
										NVL(fxb_sprd_ord_ind,'*'),
										fxb_rqst_typ,
										to_char(fxb_rqst_tm,'DD-Mon-yyyy hh24:mi:ss'),
										fxb_plcd_stts,
										NVL(fxb_rms_prcsd_flg,' '),
										NVL(fxb_ors_msg_typ,0),
										NVL(to_char(fxb_ack_tm,'DD-Mon-yyyy hh24:mi:ss'),'*'),
                   /*** NVL(fxb_xchng_rmrks,' '), **** Ver 1.2 ***/
										rtrim(NVL(fxb_xchng_rmrks,'*')),        /*** Ver 1.2 ***/
										fxb_ex_ordr_typ,
										NVL(fxb_xchng_cncld_qty,0),
										fxb_spl_flag,
										NVL(fxb_quote,0),
										NVL(to_char(fxb_qt_tm,'DD-Mon-yyyy hh24:mi:ss'),'*'),
									  NVL( fxb_init_sltp_rt,0),                 /** Ver 1.5 **/
										NVL( fxb_init_lmt_rt,0),                  /** Ver 1.5 **/
										NVL( fxb_ltp_rt,0),                       /** Ver 1.5 **/
										NVL( fxb_trail_amt,0)                     /** Ver 1.5 **/	
						FROM fxb_fo_xchng_book_hstry
						WHERE fxb_ordr_rfrnc = :c_ordr_rfrnc 
						ORDER BY fxb_ack_tm desc, fxb_mdfctn_cntr desc;


      END;
    END-EXEC;
	}
	else
	{
    EXEC SQL EXECUTE
      BEGIN
          OPEN :sys_cursor FOR
            SELECT  fxb_xchng_cd,
										fxb_pipe_id,
										to_char( fxb_mod_trd_dt, 'DD-Mon-YYYY' ),
										fxb_ordr_sqnc,
										NVL(fxb_lmt_mrkt_sl_flg,' '),
										NVL(fxb_dsclsd_qty,0),
										nvl(fxb_ordr_tot_qty,0),
										NVL(fxb_lmt_rt,0),
										NVL(fxb_stp_lss_tgr,0),
										fxb_mdfctn_cntr,
										NVL(to_char(fxb_ordr_valid_dt,'DD-Mon-yyyy'),'*'),
										fxb_ordr_type,
										NVL(fxb_sprd_ord_ind,'*'),
										fxb_rqst_typ,
										to_char(fxb_rqst_tm,'DD-Mon-yyyy hh24:mi:ss'),
										fxb_plcd_stts,
										NVL(fxb_rms_prcsd_flg,' '),
										NVL(fxb_ors_msg_typ,0),
										NVL(to_char(fxb_ack_tm,'DD-Mon-yyyy hh24:mi:ss'),'*'),
                  /*** nvl(fxb_xchng_rmrks,' '), **** Ver 1.2 ***/
										rtrim(NVL(fxb_xchng_rmrks,'*')),     /*** Ver 1.2 ***/
										fxb_ex_ordr_typ,
										NVL(fxb_xchng_cncld_qty,0),
										fxb_spl_flag,
										NVL(fxb_quote,0),
										NVL(to_char(fxb_qt_tm,'DD-Mon-yyyy hh24:mi:ss'),'*'),
										NVL( fxb_init_sltp_rt,0),                 /** Ver 1.5 **/
									  NVL( fxb_init_lmt_rt,0),                  /** Ver 1.5 **/
										NVL( fxb_ltp_rt,0),                       /** Ver 1.5 **/
									  NVL( fxb_trail_amt,0)                     /** Ver 1.5 **/
						FROM fxb_fo_xchng_book
						WHERE fxb_ordr_rfrnc = :c_ordr_rfrnc 
						ORDER BY fxb_ack_tm desc , fxb_mdfctn_cntr desc;
      END;
    END-EXEC;
	}

  if ( SQLCODE != 0 )
  {
    fn_errlog( c_ServiceName, "S31025", SQLMSG, c_err_msg  );
    EXEC SQL FREE :sys_cursor;
    tpfree ( ( char * ) ptr_st_xchngbook );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  ptr_fml_Obuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN );

  if ( ptr_fml_Obuf == NULL )
  {
    fn_errlog( c_ServiceName, "S31030", TPMSG, c_err_msg  );
    EXEC SQL CLOSE :sys_cursor;
    EXEC SQL FREE :sys_cursor;
    tpfree ( ( char * ) ptr_st_xchngbook );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  i_counter = 1 ;

  for (;;)
  {
    EXEC SQL FETCH :sys_cursor
             INTO :ptr_st_xchngbook->c_xchng_cd,
                  :ptr_st_xchngbook->c_pipe_id,
                  :c_trade_date,
                  :ptr_st_xchngbook->l_ord_seq,
                  :ptr_st_xchngbook->c_slm_flg:i_slm_flg,
                  :ptr_st_xchngbook->l_dsclsd_qty:i_dsclsd_qty, 
                  :ptr_st_xchngbook->l_ord_tot_qty:i_ord_tot_qty, 
                  :ptr_st_xchngbook->l_ord_lmt_rt:i_ord_lmt_rt, 
                  :ptr_st_xchngbook->l_stp_lss_tgr:i_stp_lss_tgr, 
                  :ptr_st_xchngbook->l_mdfctn_cntr, 
                  :c_valid_date:i_valid_dt,
                  :ptr_st_xchngbook->c_ord_typ:i_ord_typ, 
                  :ptr_st_xchngbook->c_sprd_ord_ind:i_sprd_ord_ind, 
                  :ptr_st_xchngbook->c_req_typ:i_req_typ, 
                  :c_request_tm:i_rqst_tm,
                  :ptr_st_xchngbook->c_plcd_stts, 
                  :ptr_st_xchngbook->c_rms_prcsd_flg:i_rms_prcsd_flg, 
                  :ptr_st_xchngbook->l_ors_msg_typ:i_ors_msg_typ, 
                  :c_ack_time:i_ack_tm,
                  :c_remarks:i_xchng_rmrks,
                  :ptr_st_xchngbook->c_ex_ordr_typ:i_ex_ordr_typ, 
                  :ptr_st_xchngbook->l_xchng_can_qty:i_xchng_can_qty, 
                  :ptr_st_xchngbook->c_spl_flg:i_spl_flg,
                  :ptr_st_xchngbook->l_quote:i_quote, 
                  :c_qt_time:i_qt_tm,
									:l_fxb_init_sltp_rt,    /** Ver 1.5 **/
									:l_fxb_init_lmt_rt,     /** Ver 1.5 **/
								  :l_fxb_ltp_rt,          /** Ver 1.5 **/
									:l_fxb_trail_amt;       /** Ver 1.5 **/

    if ( SQLCODE != 0 )
    {
      if ( SQLCODE == NO_DATA_FOUND )
      {
        break;
      }
      fn_errlog( c_ServiceName, "S31035", SQLMSG, c_err_msg  );
      EXEC SQL CLOSE :sys_cursor;
      EXEC SQL FREE :sys_cursor;
    	tpfree ( ( char * ) ptr_st_xchngbook );
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    SETNULL ( c_trade_date );
    SETNULL ( c_valid_date );
    SETNULL ( c_request_tm );
    SETNULL ( c_ack_time );
    SETNULL ( c_remarks );
    SETNULL ( c_qt_time );

    strcpy ( ptr_st_xchngbook->c_mod_trd_dt , ( char * ) c_trade_date.arr );
    strcpy ( ptr_st_xchngbook->c_rqst_tm , ( char * ) c_request_tm.arr );
    
    /**** 
		if(strcmp((char *)c_remarks.arr,"*")== 0)
    {
      strcpy ( ptr_st_xchngbook->c_xchng_rmrks ," ");
    } 
    else
    {  *** Ver 1.2 ***/ 
      /*** strcpy ( ptr_st_xchngbook->c_xchng_rmrks , ( char * ) c_remarks.arr ); ** ver 1.3 **/
   /** } ** Ver 1.2 **/
  
    /*** Ver 1.3 Starts here ***/
     if( ptr_st_xchngbook->c_ord_typ == 'V' )
     {
       sprintf(ptr_st_xchngbook->c_xchng_rmrks,"%s, VTC Order",( char * ) c_remarks.arr);
     }
     else
     {
       strcpy ( ptr_st_xchngbook->c_xchng_rmrks , ( char * ) c_remarks.arr );
     }
    /*** Ver 1.3 Ends here ***/ 
    
		if(strcmp((char *)c_ack_time.arr,"*")== 0)
		{
    	strcpy ( ptr_st_xchngbook->c_ack_tm ," ");
		}
		else
		{
    	strcpy ( ptr_st_xchngbook->c_ack_tm , ( char * ) c_ack_time.arr );
		 } 

    
		if(strcmp((char *)c_valid_date.arr,"*")== 0)
		{  
    	strcpy ( ptr_st_xchngbook->c_valid_dt ," ");
		}
		else
		{ 

    	strcpy ( ptr_st_xchngbook->c_valid_dt , ( char * ) c_valid_date.arr );
		}

    
		if(strcmp((char *)c_qt_time.arr,"*")== 0)
		{
    	strcpy ( ptr_st_xchngbook->c_qt_tm ," ");
		}
		else
		{ 
    	strcpy ( ptr_st_xchngbook->c_qt_tm , ( char * ) c_qt_time.arr );
		}

    rtrim(ptr_st_xchngbook->c_xchng_rmrks) ; /** Ver 1.2 **/
  
    i_returncode = Fvstof32( ptr_fml_Obuf, (char *) ptr_st_xchngbook,
                              FCONCAT, "vw_xchngbook" );
    if ( i_returncode == -1 )
    {
      if( Ferror32 == FNOSPACE )
      {
        i_counter++;
        ptr_fml_Obuf = (FBFR32 *)tprealloc( (char *)ptr_fml_Obuf,
                            i_counter * MIN_FML_BUF_LEN );
        if ( ptr_fml_Obuf == NULL )
        {
          fn_errlog( c_ServiceName, "S31040", TPMSG, c_err_msg  );
          EXEC SQL CLOSE :sys_cursor;
          EXEC SQL FREE :sys_cursor;
          tpfree ( ( char * ) ptr_st_xchngbook );
          tpfree ( ( char * ) ptr_fml_Obuf );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }

        i_returncode = Fvstof32( ptr_fml_Obuf, (char *) ptr_st_xchngbook,
                              FCONCAT, "vw_xchngbook" );
        if ( i_returncode == -1 )
        {
          fn_errlog( c_ServiceName, "S31045", FMLMSG, c_err_msg  );
          EXEC SQL CLOSE :sys_cursor;
          EXEC SQL FREE :sys_cursor;
          tpfree ( ( char * ) ptr_st_xchngbook );
          tpfree ( ( char * ) ptr_fml_Obuf );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
      }
      else
      {
        fn_errlog( c_ServiceName, "S31050", FMLMSG, c_err_msg  );
        EXEC SQL CLOSE :sys_cursor;
        EXEC SQL FREE :sys_cursor;
        tpfree ( ( char * ) ptr_st_xchngbook );
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
    }

	  /*** Ver 1.5 Starts here ***/	

	  l_bufferlength =   sizeof(l_fxb_init_sltp_rt)
                   	+  sizeof(l_fxb_init_lmt_rt)
                   	+  sizeof(l_fxb_ltp_rt)
                   	+  sizeof(l_fxb_trail_amt)
									 	+  sizeof(ptr_st_xchngbook)          
                   	+  1024;

		if ( Fneeded32( 1, l_bufferlength ) > Funused32( ptr_fml_Obuf ) )
    {
			  ptr_fml_Obuf = ( FBFR32 *)tprealloc( (char *)ptr_fml_Obuf,
                       (Fsizeof32(ptr_fml_Obuf) + l_bufferlength ));	
				
				if ( ptr_fml_Obuf == NULL )
        {
					fn_errlog( c_ServiceName, "S31055", TPMSG, c_err_msg  );
          EXEC SQL CLOSE :sys_cursor;
          EXEC SQL FREE :sys_cursor;
          tpfree ( ( char * ) ptr_st_xchngbook );
          tpfree ( ( char * ) ptr_fml_Obuf );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );				
				}				
		 }

		i_err[0] = Fadd32(ptr_fml_Obuf, FFO_INTERVAL, (char *)&l_fxb_init_sltp_rt, 0);
  	i_err[1] = Fadd32(ptr_fml_Obuf, FFO_COUNTER, (char *)&l_fxb_init_lmt_rt, 0);
  	i_err[2] = Fadd32(ptr_fml_Obuf, FFO_NET_TRD_VAL, (char *)&l_fxb_ltp_rt, 0);
  	i_err[3] = Fadd32(ptr_fml_Obuf, FFO_OTH_CHRG, (char *)&l_fxb_trail_amt, 0);		

		for(i=0; i < 4; i++)
  	{
    	if ( (i_err[ i ] == -1 ) )
			{
      	fn_userlog(c_ServiceName,"count :%d:",i);
				fn_errlog( c_ServiceName, "S31060", FMLMSG, c_err_msg  );
        EXEC SQL CLOSE :sys_cursor;
        EXEC SQL FREE :sys_cursor;
        tpfree ( ( char * ) ptr_st_xchngbook );
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}
		}

		/*** Ver 1.5 Ends here ***/
	}

  EXEC SQL CLOSE :sys_cursor;
  EXEC SQL FREE :sys_cursor;
  tpfree ( ( char * ) ptr_st_xchngbook );

  tpreturn( TPSUCCESS, 0, (char *)ptr_fml_Obuf, 0 , 0 );

}
