/******************************************************************************/
/*  Program           : SFO_SPAN_PRTFL 		                                    */
/*                                                                            */
/*  Input             : Required                                              */
/*                      FFO_USR_ID                                            */
/*                      FFO_SSSN_ID                                           */
/*                      FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_XCHNG_CD                                          */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_FROM_DT                                           */
/*                      FFO_TO_DT                                             */
/*                      FFO_ROUT_CRT                                          */
/*                                                                            */
/*                      Optional                                              */
/*                                                                            */
/*                                                                            */
/*  Output            : FFO_XCHNG_CD                                          */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_EXPRY_DT                                          */
/*                      FFO_EXER_TYP                                          */
/*                      FFO_CTGRY_INDSTK                                      */
/*                      FFO_OPNPSTN_QTY                                       */
/*                      FFO_OPNPSTN_VAL                                       */
/*											FFO_OPT_TYP                                           */
/*											FFO_STRK_PRC                                          */
/*											FFO_CUR_MKT_PRC                                       */
/*											FFO_RLZD_PL                                           */ 
/*											FFO_UNRLZD_PL                                         */
/*											FFO_TOTAL_PL                                          */
/*											FFO_TRD_FLW			                                      */  
/*                      FFO_AVRG_TRD_PRC					                            */
/*                                                                            */
/*  Description       : This service retrieves the open position qty and rate */
/*                      for each SPAN contract. In addition it calculates the */
/*                      Realized and Unrealized Profit & Loss for each of     */
/*                      these contracts.                                      */
/*                                                                            */
/*  Log               : 1.0   09-Jul-2011    																	*/
/*  Log               : 1.1   07-Jul-2015                                     */
/*	Log 							: 1.2		25-Oct-2016																			*/		
/*	Log 							: 1.3		25-Jun-2017																			*/		
/******************************************************************************/
/* 1.0    -   New Release                                                     */
/* 1.1    -   Contract master & Trade Quote merger Changes.(Ritesh Deolekar)  */
/* 1.2		-   Check Session IP - PHASE_III(Kishor Borkar)											*/
/* 1.3		-   GST Changes                                											*/
/******************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fo.h>
#include <fn_log.h>
#include <fo_fml_def.h>
#include <fml_rout.h>
#include <fn_session.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_read_debug_lvl.h>
#include <fn_span_lib.h>
#include <fo_view_def.h> /* Added in Ver 1.2 */

int fn_fut_prtfl(struct st_fcp_cntrct_pstn * , char *, char *);
int fn_opt_prtfl(struct st_fcp_cntrct_pstn * , char *, char *);

struct st_fcp_cntrct_pstn st_cntfut_pstn;
struct st_contract st_cntrct_q;
struct st_cntrct_qt st_cntrct_qty;
struct st_contract st_cntrct;
struct st_usr_prfl st_user_prfl;

sql_cursor spn_cont_cursor;
sql_cursor spn_trd_cursor;
sql_cursor spn_chrgs_cur;

char c_ServiceName[33];
char c_errmsg[256];
char c_cln_mtch_accnt [ 11 ];
char c_xchng_cd [ 4 ];
char c_user_id[ 15 ];				
char c_prd_typ;
char c_prdct_typ;
char c_ctgry_indstk;
char c_undrlyng [ 7 ];
char c_expry_dt [ LEN_DATE ];
char c_exrc_typ;
char c_trd_flw; 
char c_opt_typ;
varchar c_trd_dt [ LEN_DATE ];
varchar c_frm_dt[ LEN_DATE + 1];
varchar c_to_dt[ LEN_DATE + 1];

long int l_rec_hstry_exists = 0;
long int l_rec_main_exists	= 0;
long int l_tot_sell_qty_m 	= 0;
long int l_tot_sell_qty_h 	= 0;
long int l_tot_sell_qty 		= 0;
long l_tot_brkg 						= 0;
long int l_tot_buy_qty_m 		= 0;
long int l_tot_buy_qty_h 		= 0;
long int l_tot_buy_qty 			= 0;
long int li_rec_cnt 				= 0;
long int li_bal_qty 				= 0;
long int li_crst_qty 				= 0;
long int li_uncrst_qty 			= 0;
long int li_exctd_qty 			= 0;
long int li_exctd_rt 				= 0;
long int l_avg_trd_prc			= 0;  
long int l_strike_prc				= 0;

double d_sell_val_m 				= 0.0;
double d_sell_val_h 				= 0.0;
double d_sell_val 					= 0.0;
double d_opn_sell_val 			= 0.0;
double d_buy_val_m 					= 0.0;
double d_buy_val_h 					= 0.0;
double d_buy_val 						= 0.0;
double d_opn_buy_val 				= 0.0;	
double d_cls_val_m 					= 0.0;
double d_cls_val_h 					= 0.0;
double d_cls_val 						= 0.0;
double d_crst_prft 					=	0.0;
double d_uncrst_prft 				= 0.0;
double d_fpuncrst_prft 			= 0.0;
double d_frsh_brk 					= 0.0;
double d_cvr_brk 						= 0.0;
double d_base_prc						= 0.0;
int i_ch_val;
int rec_cnt;
int ret_val;

FBFR32 *ptr_fml_Ibuf;
FBFR32 *ptr_fml_Obuf;

void SFO_SPAN_PRTFL( TPSVCINFO *rqst )
{
	int i;
	int i_returncode ;

	unsigned long int i_str_len;
	unsigned long int i_trim; 

  struct st_err_msg st_err_mssg;

  /*** Ver 1.2 Starts Here ***/
  struct vw_usr_prfl st_usr_prfl_vw;
  struct vw_err_msg st_err_msg_vw;

  MEMSET(st_usr_prfl_vw);
  MEMSET(st_err_msg_vw);
  /*** Ver 1.2 Ends Here ***/

  ptr_fml_Ibuf = (FBFR32 *)rqst->data;
  strcpy( c_ServiceName, rqst->name );

	INITDBGLVL(c_ServiceName);

	i_ch_val = fn_unpack_fmltovar ( c_ServiceName,
                                  c_errmsg,
                                  ptr_fml_Ibuf,
                                  9,
														FFO_USR_ID, 					(char *)st_user_prfl.c_user_id, NULL,
														FFO_SSSN_ID, 					(char *)&st_user_prfl.l_session_id, NULL,
														FFO_EBA_MTCH_ACT_NO,  (char *)st_user_prfl.c_cln_mtch_accnt, NULL,
														FFO_PRDCT_TYP, 				(char *)&st_cntrct.c_prd_typ, NULL,
														FFO_XCHNG_CD, 				(char *)st_cntrct.c_xchng_cd, NULL,
														FFO_UNDRLYNG, 				(char *)st_cntrct.c_undrlyng, NULL,
														FFO_ROUT_CRT, 				(char *)st_user_prfl.c_rout_crt,NULL,	
                            FFO_FROM_DT, 					(char *)c_frm_dt.arr, NULL,
                            FFO_TO_DT,   					(char *)c_to_dt.arr,  NULL);
	if( i_ch_val != 0 )
	{
  	fn_errlog( c_ServiceName, "S31005", LIBMSG , c_errmsg );
  	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
  	tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
	}
	 /*** Added for Order Routing ***/
  fn_init_ddr_val ( st_user_prfl.c_rout_crt );

	if(DEBUG_MSG_LVL_0)
	{ 
		fn_userlog( c_ServiceName, "Match account :%s:",st_user_prfl.c_cln_mtch_accnt );
  	fn_userlog( c_ServiceName, "User id       :%s:",st_user_prfl.c_user_id );
  	fn_userlog( c_ServiceName, "Session id    :%ld:",st_user_prfl.l_session_id );

		fn_userlog( c_ServiceName, "Contract details" );
  	fn_userlog( c_ServiceName, "Exchange Code :%s:", st_cntrct.c_xchng_cd );
  	fn_userlog( c_ServiceName, "product type  :%c:", st_cntrct.c_prd_typ );
  	fn_userlog( c_ServiceName, "underlying    :%s:", st_cntrct.c_undrlyng );
  	fn_userlog( c_ServiceName, "c_frm_dt      :%s:", c_frm_dt.arr );
  	fn_userlog( c_ServiceName, "c_to_dt       :%s:", c_to_dt.arr);
  }

	/*** commented in Ver 1.2 
	i_ch_val =fn_chkspn_sssn( c_ServiceName,
                            &st_user_prfl,
                            &st_err_mssg ) ;
  if ( i_ch_val == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, st_err_mssg.c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
	Comment Ends for Ver 1.2******/

		/*** Ver 1.2 Starts Here  ****/

  memcpy(&st_usr_prfl_vw,&st_user_prfl,sizeof(struct vw_usr_prfl));

  /*** Added for Order Routing ***/
  fn_init_ddr_val ( st_usr_prfl_vw.c_rout_crt );

  i_returncode = fn_chk_sssn( c_ServiceName, &st_usr_prfl_vw,
                                             &st_err_msg_vw) ;

  if ( i_returncode == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, st_err_msg_vw.c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
		/*** Ver 1.2 Ends Here ****/

  SETLEN( c_frm_dt );
  SETLEN( c_to_dt );

	i_str_len = 0;
  if ( strcmp ( st_cntrct.c_undrlyng , "A" ) ==  0 )
  {
    strcpy ( c_undrlyng, "%" );
  }
	else
	{
		strcpy ( c_undrlyng, st_cntrct.c_undrlyng );
		rtrim(c_undrlyng);
		if ( strlen(c_undrlyng) < 6 )
		{
			i_str_len = strlen(c_undrlyng);
			for (i_trim=i_str_len; i_trim<6; i_trim++)
			{
  			strcat(c_undrlyng," ");
			}
		} 
	}	

  if ( st_cntrct.c_prd_typ == 'A' )
  {
    st_cntrct.c_prd_typ = '%';
  }

  /* converting the date into dd-mon-yyyy */
  EXEC SQL
    SELECT to_char(to_date(:c_frm_dt),'dd-mon-yyyy'),
           to_char(to_date(:c_to_dt),'dd-mon-yyyy')
    into   :c_frm_dt,
           :c_to_dt
    FROM   dual;
	
	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog( c_ServiceName, "From date:%s:",c_frm_dt.arr );
  	fn_userlog( c_ServiceName, "To date  :%s:",c_to_dt.arr );
	}

  if (SQLCODE != 0 )
  {
    fn_errlog( c_ServiceName, "S31010", SQLMSG, c_errmsg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    ret_val = -1;
    Fadd32( ptr_fml_Ibuf, FFO_ACTN_ID ,(char*)&ret_val, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	if(DEBUG_MSG_LVL_3)
	{
  	fn_userlog( c_ServiceName, "Match account      :%s:",st_user_prfl.c_cln_mtch_accnt );
  	fn_userlog( c_ServiceName, "Contract details" );
  	fn_userlog( c_ServiceName, "Exchange Code      :%s:", st_cntrct.c_xchng_cd );
  	fn_userlog( c_ServiceName, "product type       :%c:", st_cntrct.c_prd_typ );
  	fn_userlog( c_ServiceName, "underlying         :%s:", st_cntrct.c_undrlyng );
  	fn_userlog( c_ServiceName, "Exer Type          :%c:", st_cntrct.c_exrc_typ );
  	fn_userlog( c_ServiceName, "Strike Price       :%ld:", st_cntrct.l_strike_prc );
  	fn_userlog( c_ServiceName, "c_frm_dt           :%s:", c_frm_dt.arr );
  	fn_userlog( c_ServiceName, "c_to_dt            :%s:", c_to_dt.arr);
	}

	l_rec_main_exists = 0;
	l_rec_hstry_exists = 0;

	if( strcmp( st_user_prfl.c_cln_mtch_accnt , "*" ) == 0 )
  {

		if( st_user_prfl.c_user_id[0] == BPID )
		{

					if(DEBUG_MSG_LVL_3)
					{
						fn_userlog(c_ServiceName,"BPID");
					}

						  EXEC SQL
									SELECT  1
									INTO    :l_rec_hstry_exists
									FROM    DUAL
									WHERE   EXISTS (
																	SELECT  1				 
																	FROM    FCP_FO_SPN_CNTRCT_PSTN_HSTRY,clm_clnt_mstr 
																	WHERE   fcp_clm_mtch_accnt = clm_mtch_accnt 
																	AND     fcp_undrlyng      LIKE :c_undrlyng
																	AND     fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
																	AND     fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
																	AND     clm_bp_id = :st_user_prfl.c_user_id
                                  AND     fcp_xchng_cd       = :st_cntrct.c_xchng_cd
																	AND     FCP_PRDCT_TYP LIKE :st_cntrct.c_prd_typ
																	AND
																				(	fcp_buy_exctd_qty != 0
																					OR   
																				  fcp_sell_exctd_qty  != 0
																				)
																 );	

								
							EXEC SQL
								  SELECT  1
									INTO    :l_rec_main_exists
									FROM    DUAL
									WHERE   EXISTS (
																	SELECT  1
																	FROM    FCP_FO_SPN_CNTRCT_PSTN,clm_clnt_mstr
																	WHERE   fcp_clm_mtch_accnt = clm_mtch_accnt
																	AND     fcp_undrlyng      LIKE :c_undrlyng
																	AND     fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
																	AND     fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
																	AND     fcp_xchng_cd       = :st_cntrct.c_xchng_cd
																  AND			clm_bp_id = :st_user_prfl.c_user_id
																	AND     FCP_PRDCT_TYP LIKE :st_cntrct.c_prd_typ
																	AND
																			( fcp_buy_exctd_qty != 0
																				OR 
																		    fcp_sell_exctd_qty  != 0
																			)
						  									  );
						
		}	
		else
		{



							EXEC SQL
                  SELECT  1
                  INTO    :l_rec_hstry_exists
                  FROM    DUAL
                  WHERE   EXISTS (
                                  SELECT  1
                                  FROM    FCP_FO_SPN_CNTRCT_PSTN_HSTRY,uac_usr_accnts
                                  WHERE   fcp_clm_mtch_accnt = UAC_CLM_MTCH_ACCNT
                                  AND     fcp_undrlyng      LIKE :c_undrlyng
                                  AND     fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                                  AND     fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
							   									AND     fcp_xchng_cd       = :st_cntrct.c_xchng_cd
																	AND     uac_usr_id = :st_user_prfl.c_user_id
																	AND     FCP_PRDCT_TYP LIKE :st_cntrct.c_prd_typ
                                  AND
                                      (       fcp_buy_exctd_qty != 0
                                        OR    fcp_sell_exctd_qty  != 0
                                      )
                                  );

						



							EXEC SQL
                  SELECT  1
                  INTO    :l_rec_main_exists
                  FROM    DUAL
                  WHERE   EXISTS (
                                  SELECT  1
                                  FROM    FCP_FO_SPN_CNTRCT_PSTN,uac_usr_accnts
                                  WHERE   fcp_clm_mtch_accnt = UAC_CLM_MTCH_ACCNT
                                  AND     fcp_undrlyng      LIKE :c_undrlyng
                                  AND     fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                                  AND     fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
						  										AND     fcp_xchng_cd       = :st_cntrct.c_xchng_cd
																	AND			uac_usr_id = :st_user_prfl.c_user_id
                               		AND     FCP_PRDCT_TYP LIKE :st_cntrct.c_prd_typ
																  AND
                                      (       fcp_buy_exctd_qty != 0
                                        OR    fcp_sell_exctd_qty  != 0
                                      )
                                  );
		



	    }
		

  }
	else
	{


					if(DEBUG_MSG_LVL_3)
					{
							fn_userlog(c_ServiceName,"NON BPID");
					}


					    EXEC SQL
            		  SELECT  1
              		INTO    :l_rec_hstry_exists
              		FROM    DUAL
              		WHERE   EXISTS (
                    		          SELECT  1
                               		FROM    FCP_FO_SPN_CNTRCT_PSTN_HSTRY
                                  WHERE   fcp_clm_mtch_accnt = :st_user_prfl.c_cln_mtch_accnt 
                                  AND     fcp_undrlyng      LIKE :c_undrlyng
                                  AND     fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                                  AND     fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
																	AND     fcp_xchng_cd       = :st_cntrct.c_xchng_cd
                                	AND     FCP_PRDCT_TYP LIKE :st_cntrct.c_prd_typ
																  AND
                                      (       fcp_buy_exctd_qty != 0
                                        OR    fcp_sell_exctd_qty  != 0
                                      )
                                 );

				




							EXEC SQL
                	SELECT  1
                  INTO    :l_rec_main_exists
                  FROM    DUAL
                  WHERE   EXISTS (
                                  SELECT  1
                                  FROM    FCP_FO_SPN_CNTRCT_PSTN
                                  WHERE   fcp_clm_mtch_accnt = :st_user_prfl.c_cln_mtch_accnt
                                  AND     fcp_xchng_cd       = :st_cntrct.c_xchng_cd
                                  AND     fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                                  AND     fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
									 		  					AND     fcp_undrlyng      LIKE :c_undrlyng
  							 		 		  				AND     FCP_PRDCT_TYP LIKE :st_cntrct.c_prd_typ	
	                                AND
                                      (       fcp_buy_exctd_qty != 0
                                        OR    fcp_sell_exctd_qty  != 0
                                      )
                                 );




	}

	if ( ( SQLCODE !=0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog( c_ServiceName, "S31015", SQLMSG, c_errmsg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	if(DEBUG_MSG_LVL_0)
	{
		fn_userlog( c_ServiceName, " l_rec_main_exists  :%ld:",l_rec_main_exists );
  	fn_userlog( c_ServiceName, " l_rec_hstry_exists :%ld:",l_rec_hstry_exists );
	}

	 EXEC SQL ALLOCATE :spn_cont_cursor;

   strcpy ( c_xchng_cd, st_cntrct.c_xchng_cd );
   c_prdct_typ = st_cntrct.c_prd_typ;	

	 if ( (l_rec_main_exists == 1 ) && (l_rec_hstry_exists == 0 ) )
   {	
				if( strcmp( st_user_prfl.c_cln_mtch_accnt , "*" ) == 0 )
				{

						strcpy ( c_user_id, st_user_prfl.c_user_id);

						if( st_user_prfl.c_user_id[0] == BPID )
						{

									 if(DEBUG_MSG_LVL_3)
									{
									   fn_userlog(c_ServiceName,"BPID");	
									}



										EXEC SQL  EXECUTE
								    BEGIN
									  OPEN  :spn_cont_cursor FOR
										SELECT  fcp_xchng_cd,
														fcp_indstk,
														fcp_undrlyng,
														FCP_PRDCT_TYP,
														to_char(fcp_expry_dt,'DD-Mon-YYYY'),
														fcp_exer_typ,
														SUM (fcp_opnpstn_qty),
														SUM (fcp_opnpstn_val),
														SUM (FCP_MTM_OPN_VAL),	
														fcp_clm_mtch_accnt,
														NVL( FCP_STRK_PRC , 0 ),
														NVL( FCP_OPT_TYP , '*')
											FROM  FCP_FO_SPN_CNTRCT_PSTN,
														clm_clnt_mstr 
											WHERE fcp_clm_mtch_accnt = clm_mtch_accnt 
											AND   fcp_undrlyng      LIKE :c_undrlyng
											AND   fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
											AND   fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
                      AND   fcp_xchng_cd        = :c_xchng_cd
											AND   clm_bp_id           = :c_user_id
											AND   FCP_PRDCT_TYP       LIKE :c_prdct_typ
											AND
											(       fcp_buy_exctd_qty != 0
												OR    fcp_sell_exctd_qty  != 0
											)
											GROUP BY  fcp_xchng_cd,
															  fcp_indstk,
															  fcp_undrlyng,
															  fcp_expry_dt,
															  fcp_exer_typ,
															  fcp_clm_mtch_accnt,
																FCP_PRDCT_TYP,
																FCP_STRK_PRC,
																FCP_OPT_TYP													
											ORDER BY  FCP_PRDCT_TYP,
																fcp_xchng_cd,
																fcp_clm_mtch_accnt,
																fcp_undrlyng,
																fcp_expry_dt;
										END;
										END-EXEC;  


						}
						else
						{


									  EXEC SQL  EXECUTE
                    BEGIN
                    OPEN  :spn_cont_cursor FOR
                    SELECT fcp_xchng_cd,
                            fcp_indstk,
                            fcp_undrlyng,
														FCP_PRDCT_TYP,
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            SUM (fcp_opnpstn_qty),
                            SUM (fcp_opnpstn_val),
														 SUM (FCP_MTM_OPN_VAL),		
                            fcp_clm_mtch_accnt,
													  NVL( FCP_STRK_PRC , 0 ),
									          NVL( FCP_OPT_TYP , '*')
											FROM  FCP_FO_SPN_CNTRCT_PSTN,
														uac_usr_accnts
                      WHERE   fcp_clm_mtch_accnt = uac_clm_mtch_accnt 
                      AND     fcp_undrlyng      LIKE :c_undrlyng
                      AND     fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                      AND     fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
                      AND     fcp_xchng_cd        = :c_xchng_cd
											AND     uac_usr_id = :c_user_id
										  AND   FCP_PRDCT_TYP       LIKE :c_prdct_typ	
                      AND
                      (       fcp_buy_exctd_qty != 0
                        OR    fcp_sell_exctd_qty  != 0
                      )
                      GROUP BY  fcp_xchng_cd,
                                fcp_indstk,
                                fcp_undrlyng,
                                fcp_expry_dt,
                                fcp_exer_typ,		
																fcp_clm_mtch_accnt,
																FCP_PRDCT_TYP,
																FCP_STRK_PRC,
																FCP_OPT_TYP															
                      ORDER BY  FCP_PRDCT_TYP,
																fcp_xchng_cd,
                                fcp_clm_mtch_accnt,
                                fcp_undrlyng,
                                fcp_expry_dt;
                    END;
                    END-EXEC;
																

						}


				}
				else
				{

							strcpy ( c_cln_mtch_accnt, st_user_prfl.c_cln_mtch_accnt);

								EXEC SQL  EXECUTE
                    BEGIN
                    OPEN  :spn_cont_cursor FOR
                    SELECT fcp_xchng_cd,
                            fcp_indstk,
                            fcp_undrlyng,
														FCP_PRDCT_TYP,
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            SUM (fcp_opnpstn_qty),
                            SUM (fcp_opnpstn_val),
                        		 SUM (FCP_MTM_OPN_VAL),
												    fcp_clm_mtch_accnt,
											      NVL( FCP_STRK_PRC , 0 ),
		                        NVL( FCP_OPT_TYP , '*')
                      FROM  FCP_FO_SPN_CNTRCT_PSTN
                      WHERE   fcp_clm_mtch_accnt = :c_cln_mtch_accnt 
                      AND     fcp_undrlyng      LIKE :c_undrlyng
                      AND     fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                      AND     fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
											AND     fcp_xchng_cd        = :c_xchng_cd
                      AND   FCP_PRDCT_TYP       LIKE :c_prdct_typ
                      AND
                      (       fcp_buy_exctd_qty != 0
                        OR    fcp_sell_exctd_qty  != 0
                      )
                      GROUP BY  fcp_xchng_cd,
                                fcp_indstk,
                                fcp_undrlyng,
                                fcp_expry_dt,
                                fcp_exer_typ,
                                fcp_clm_mtch_accnt,
																FCP_PRDCT_TYP,
                                FCP_STRK_PRC,
                                FCP_OPT_TYP
											ORDER BY  FCP_PRDCT_TYP,
																fcp_xchng_cd,
                                fcp_clm_mtch_accnt,
                                fcp_undrlyng,
                                fcp_expry_dt;
															
                    END;
                    END-EXEC;




				}


	}
	else if ( (l_rec_main_exists == 0 ) && (l_rec_hstry_exists == 1 ) )
  {

				if( strcmp( st_user_prfl.c_cln_mtch_accnt , "*" ) == 0 )
        {

						strcpy ( c_user_id, st_user_prfl.c_user_id);

            if( st_user_prfl.c_user_id[0] == BPID )
            {

										if(DEBUG_MSG_LVL_3)
										{
                   		 fn_userlog(c_ServiceName,"BPID");  
										}

                    EXEC SQL  EXECUTE
                    BEGIN
                    OPEN  :spn_cont_cursor FOR
                    SELECT fcp_xchng_cd,
                            fcp_indstk,
                            fcp_undrlyng,
														FCP_PRDCT_TYP,				
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            SUM (fcp_opnpstn_qty),
                            SUM (fcp_opnpstn_val),
                             SUM (FCP_MTM_OPN_VAL),
														fcp_clm_mtch_accnt,
														NVL( FCP_STRK_PRC , 0 ),
														NVL( FCP_OPT_TYP , '*')
                      FROM  FCP_FO_SPN_CNTRCT_PSTN_HSTRY,
													  clm_clnt_mstr
                      WHERE fcp_clm_mtch_accnt = clm_mtch_accnt
                      AND   fcp_undrlyng      LIKE :c_undrlyng
                      AND   fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                      AND   fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
											AND   fcp_xchng_cd        = :c_xchng_cd
											AND		clm_bp_id = :c_user_id
											AND   FCP_PRDCT_TYP       LIKE :c_prdct_typ
                      AND
                      (       fcp_buy_exctd_qty != 0
                        OR    fcp_sell_exctd_qty  != 0
                      )
											GROUP BY  fcp_xchng_cd,
                                fcp_indstk,
                                fcp_undrlyng,
                                fcp_expry_dt,
                                fcp_exer_typ,
                                fcp_clm_mtch_accnt,
																FCP_PRDCT_TYP,
                                FCP_STRK_PRC,
                                FCP_OPT_TYP
                      ORDER BY  FCP_PRDCT_TYP,
																fcp_xchng_cd,
                                fcp_clm_mtch_accnt,
                                fcp_undrlyng,
                                fcp_expry_dt;
                    END;
                    END-EXEC;


						}
						else
            {

										if(DEBUG_MSG_LVL_3)
										{
                    		fn_userlog(c_ServiceName,"NONBPID");  
										}

                    EXEC SQL  EXECUTE
                    BEGIN
                    OPEN  :spn_cont_cursor FOR
                    SELECT fcp_xchng_cd,
                            fcp_indstk,
                            fcp_undrlyng,
														FCP_PRDCT_TYP,		
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            SUM (fcp_opnpstn_qty),
                            SUM (fcp_opnpstn_val),
                    				 SUM (FCP_MTM_OPN_VAL),
										        fcp_clm_mtch_accnt,
														NVL( FCP_STRK_PRC , 0 ),
                            NVL( FCP_OPT_TYP , '*')
                      FROM  FCP_FO_SPN_CNTRCT_PSTN_HSTRY,
														uac_usr_accnts
                      WHERE   fcp_clm_mtch_accnt = uac_clm_mtch_accnt 
                      AND     fcp_undrlyng      LIKE :c_undrlyng
                      AND     fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                      AND     fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
											AND     fcp_xchng_cd        = :c_xchng_cd
											AND			uac_usr_id = :c_user_id
											AND   FCP_PRDCT_TYP       LIKE :c_prdct_typ
                      AND
                      (       fcp_buy_exctd_qty != 0
                        OR    fcp_sell_exctd_qty  != 0
                      )
                      GROUP BY  fcp_xchng_cd,
                                fcp_indstk,
                                fcp_undrlyng,
                                fcp_expry_dt,
                                fcp_exer_typ,
                                fcp_clm_mtch_accnt,
																FCP_PRDCT_TYP,
                                FCP_STRK_PRC,
                                FCP_OPT_TYP
                      ORDER BY  FCP_PRDCT_TYP,
																fcp_xchng_cd,
                                fcp_clm_mtch_accnt,
                                fcp_undrlyng,						
																fcp_expry_dt;
                    END;
                    END-EXEC;


            }


				}
				else
				{

									if(DEBUG_MSG_LVL_3)
									{
                  		fn_userlog(c_ServiceName,"NONBPID");  
									}


									strcpy ( c_cln_mtch_accnt, st_user_prfl.c_cln_mtch_accnt);
							
										EXEC SQL  EXECUTE
                    BEGIN
                    OPEN  :spn_cont_cursor FOR
                    SELECT fcp_xchng_cd,
                            fcp_indstk,
                            fcp_undrlyng,
														FCP_PRDCT_TYP,	
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            SUM (fcp_opnpstn_qty),
                            SUM (fcp_opnpstn_val),
                      			 SUM (FCP_MTM_OPN_VAL),
											      fcp_clm_mtch_accnt,
														NVL( FCP_STRK_PRC , 0 ),
                            NVL( FCP_OPT_TYP , '*')
                      FROM  FCP_FO_SPN_CNTRCT_PSTN_HSTRY
                      WHERE   fcp_clm_mtch_accnt = :c_cln_mtch_accnt
                      AND     fcp_undrlyng      LIKE :c_undrlyng
                      AND     fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                      AND     fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
											AND     fcp_xchng_cd        = :c_xchng_cd
											AND   FCP_PRDCT_TYP       LIKE :c_prdct_typ
                      AND
                      (       fcp_buy_exctd_qty != 0
                        OR    fcp_sell_exctd_qty  != 0
                      )
                      GROUP BY  fcp_xchng_cd,
                                fcp_indstk,
                                fcp_undrlyng,
                                fcp_expry_dt,
                                fcp_exer_typ,
                                fcp_clm_mtch_accnt,
																FCP_PRDCT_TYP,
																FCP_STRK_PRC,
                                FCP_OPT_TYP
                      ORDER BY  FCP_PRDCT_TYP,
																fcp_xchng_cd,
                                fcp_clm_mtch_accnt,
                                fcp_undrlyng,
                                fcp_expry_dt;
                    END;
                    END-EXEC;

				}

				

	}
	else if ( (l_rec_main_exists == 1 ) && (l_rec_hstry_exists == 1 ) )
  {


				if( strcmp( st_user_prfl.c_cln_mtch_accnt , "*" ) == 0 )
        {


						strcpy ( c_user_id, st_user_prfl.c_user_id);

            if( st_user_prfl.c_user_id[0] == BPID )
            {

										if(DEBUG_MSG_LVL_3)
										{
                    		fn_userlog(c_ServiceName,"BPID");  
										}

                    EXEC SQL  EXECUTE
                    BEGIN
                    OPEN  :spn_cont_cursor FOR
                    SELECT fcp_xchng_cd,
                            fcp_indstk,
                            fcp_undrlyng,
														FCP_PRDCT_TYP,
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            SUM (fcp_opnpstn_qty),
                            SUM (fcp_opnpstn_val),
                          	 SUM (FCP_MTM_OPN_VAL),
													  fcp_clm_mtch_accnt,
														NVL( FCP_STRK_PRC , 0 ),
                            NVL( FCP_OPT_TYP , '*')	
                      FROM  FCP_FO_SPN_CNTRCT_PSTN,
														clm_clnt_mstr
                      WHERE fcp_clm_mtch_accnt = clm_mtch_accnt
                      AND   fcp_undrlyng      LIKE :c_undrlyng
                      AND   fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                      AND   fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
											AND   fcp_xchng_cd        = :c_xchng_cd
											AND		clm_bp_id = :c_user_id
											AND   FCP_PRDCT_TYP       LIKE :c_prdct_typ
                      AND
                      (       fcp_buy_exctd_qty != 0
                        OR    fcp_sell_exctd_qty  != 0
                      )
                      GROUP BY  fcp_xchng_cd,
                                fcp_indstk,
                                fcp_undrlyng,
                                fcp_expry_dt,
																fcp_exer_typ,
                                fcp_clm_mtch_accnt,
																FCP_PRDCT_TYP,
																FCP_STRK_PRC,
																FCP_OPT_TYP
							UNION ALL
										SELECT fcp_xchng_cd,
                            fcp_indstk,
                            fcp_undrlyng,
														FCP_PRDCT_TYP,
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            SUM (fcp_opnpstn_qty),
                            SUM (fcp_opnpstn_val),
                        		 SUM (FCP_MTM_OPN_VAL),
												    fcp_clm_mtch_accnt,
														NVL( FCP_STRK_PRC , 0 ),
                            NVL( FCP_OPT_TYP , '*')
                      FROM  FCP_FO_SPN_CNTRCT_PSTN_HSTRY,
														clm_clnt_mstr
                      WHERE fcp_clm_mtch_accnt = clm_mtch_accnt
                      AND   fcp_undrlyng      LIKE :c_undrlyng
                      AND   fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                      AND   fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
											AND   fcp_xchng_cd        = :c_xchng_cd
											AND		clm_bp_id = :c_user_id
											 AND   FCP_PRDCT_TYP       LIKE :c_prdct_typ
                      AND
                      (       fcp_buy_exctd_qty != 0
                        OR    fcp_sell_exctd_qty  != 0
                      )
                      GROUP BY  fcp_xchng_cd,
                                fcp_indstk,
                                fcp_undrlyng,
                                fcp_expry_dt,
                                fcp_exer_typ,
                                fcp_clm_mtch_accnt,
																FCP_PRDCT_TYP,
                                FCP_STRK_PRC,
                                FCP_OPT_TYP
                      ORDER BY  4, 1, 3, 5, 7; 

											
                    END;
                    END-EXEC;


            }
            else
						{

										if(DEBUG_MSG_LVL_3){
                    fn_userlog(c_ServiceName,"NONBPID");  }

                    EXEC SQL  EXECUTE
                    BEGIN
                    OPEN  :spn_cont_cursor FOR
                    SELECT fcp_xchng_cd,
                            fcp_indstk,
                            fcp_undrlyng,
                            FCP_PRDCT_TYP,
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            SUM (fcp_opnpstn_qty),
                            SUM (fcp_opnpstn_val),
                          	 SUM (FCP_MTM_OPN_VAL),
													  fcp_clm_mtch_accnt,
														NVL( FCP_STRK_PRC , 0 ),
                            NVL( FCP_OPT_TYP , '*')
                      FROM  FCP_FO_SPN_CNTRCT_PSTN,
														uac_usr_accnts
                      WHERE   fcp_clm_mtch_accnt = uac_clm_mtch_accnt 
                      AND     fcp_undrlyng      LIKE :c_undrlyng
                      AND     fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                      AND     fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
											AND     fcp_xchng_cd        = :c_xchng_cd
											AND			uac_usr_id = :c_user_id
											  AND   FCP_PRDCT_TYP       LIKE :c_prdct_typ
                      AND
                      (       fcp_buy_exctd_qty != 0
                        OR    fcp_sell_exctd_qty  != 0
                      )
                      GROUP BY  fcp_xchng_cd,
                                fcp_indstk,
                                fcp_undrlyng,
                                fcp_expry_dt,
                                fcp_exer_typ,
                                fcp_clm_mtch_accnt,
																FCP_PRDCT_TYP,
                                FCP_STRK_PRC,
                                FCP_OPT_TYP
								UNION ALL
											SELECT fcp_xchng_cd,
                            fcp_indstk,
                            fcp_undrlyng,
                            FCP_PRDCT_TYP,	
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            SUM (fcp_opnpstn_qty),
                            SUM (fcp_opnpstn_val),
                        		 SUM (FCP_MTM_OPN_VAL),
												    fcp_clm_mtch_accnt,
														NVL( FCP_STRK_PRC , 0 ),
                            NVL( FCP_OPT_TYP , '*')
                      FROM  FCP_FO_SPN_CNTRCT_PSTN_HSTRY,
														uac_usr_accnts
                      WHERE   fcp_clm_mtch_accnt = uac_clm_mtch_accnt 
                      AND     fcp_undrlyng      LIKE :c_undrlyng
                      AND     fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                      AND     fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
											AND     fcp_xchng_cd        = :c_xchng_cd
											AND			uac_usr_id = :c_user_id
											 AND   FCP_PRDCT_TYP       LIKE :c_prdct_typ
                      AND
                      (       fcp_buy_exctd_qty != 0
                        OR    fcp_sell_exctd_qty  != 0
                      )
                      GROUP BY  fcp_xchng_cd,
                                fcp_indstk,
                                fcp_undrlyng,
                                fcp_expry_dt,
                                fcp_exer_typ,
                                fcp_clm_mtch_accnt,
																FCP_PRDCT_TYP,
                                FCP_STRK_PRC,
                                FCP_OPT_TYP
											ORDER BY  4, 1, 3, 5 , 7;

                    END;
                    END-EXEC;


            	}


					}
					else
          {

									if(DEBUG_MSG_LVL_3)
									{
                	   fn_userlog(c_ServiceName,"NONBPID");
								  }

									strcpy ( c_cln_mtch_accnt, st_user_prfl.c_cln_mtch_accnt);

                    EXEC SQL  EXECUTE
                    BEGIN
                    OPEN  :spn_cont_cursor FOR
                    SELECT fcp_xchng_cd,
  	                          fcp_indstk,
                            fcp_undrlyng,
	                          FCP_PRDCT_TYP,				
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            SUM (fcp_opnpstn_qty),
                            SUM (fcp_opnpstn_val),
                        		 SUM (FCP_MTM_OPN_VAL),
												    fcp_clm_mtch_accnt,
													  NVL( FCP_STRK_PRC , 0 ),
                            NVL( FCP_OPT_TYP , '*')
                      FROM  FCP_FO_SPN_CNTRCT_PSTN
                      WHERE   fcp_clm_mtch_accnt = :c_cln_mtch_accnt
                      AND     fcp_undrlyng      LIKE :c_undrlyng
                      AND     fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                      AND     fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
											AND     fcp_xchng_cd        = :c_xchng_cd
                      AND
                      (       fcp_buy_exctd_qty != 0
                        OR    fcp_sell_exctd_qty  != 0
                      )
                      GROUP BY  fcp_xchng_cd,
                                fcp_indstk,
                                fcp_undrlyng,
                                fcp_expry_dt,
                                fcp_exer_typ,
                                fcp_clm_mtch_accnt,
																FCP_PRDCT_TYP,
                                FCP_STRK_PRC,
                                FCP_OPT_TYP
									UNION ALL
											SELECT fcp_xchng_cd,
                            fcp_indstk,
                            fcp_undrlyng,
                            FCP_PRDCT_TYP,
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            SUM (fcp_opnpstn_qty),
                            SUM (fcp_opnpstn_val),
                        		 SUM (FCP_MTM_OPN_VAL),
												    fcp_clm_mtch_accnt,
														NVL( FCP_STRK_PRC , 0 ),
                            NVL( FCP_OPT_TYP , '*')
                      FROM  FCP_FO_SPN_CNTRCT_PSTN_HSTRY
                      WHERE   fcp_clm_mtch_accnt = :c_cln_mtch_accnt
                      AND     fcp_undrlyng      LIKE :c_undrlyng
                      AND     fcp_expry_dt >= to_date ( :c_frm_dt,'dd-mon-yyyy')
                      AND     fcp_expry_dt <= to_date ( :c_to_dt,'dd-mon-yyyy')
											AND     fcp_xchng_cd        = :c_xchng_cd
                      AND
                      (       fcp_buy_exctd_qty != 0
                        OR    fcp_sell_exctd_qty  != 0
                      )
                      GROUP BY  fcp_xchng_cd,
                                fcp_indstk,
                                fcp_undrlyng,
                                fcp_expry_dt,
                                fcp_exer_typ,
                                fcp_clm_mtch_accnt,
																FCP_PRDCT_TYP,
                                FCP_STRK_PRC,
                                FCP_OPT_TYP
											ORDER BY  4, 1, 3, 5 , 7;

											END;
											END-EXEC;
					}



	}
	else
	{

    fn_errlog( c_ServiceName, "B28548", DEFMSG, c_errmsg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }


	if ( SQLCODE != 0 )
  {
    fn_errlog( c_ServiceName, "S31020", SQLMSG, c_errmsg  );
    EXEC SQL FREE :spn_cont_cursor;
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
			
	ptr_fml_Obuf = NULL;
	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog( c_ServiceName, "After opening cursor");
	}
	
 	for ( ; ; )
 	{
    EXEC SQL FETCH :spn_cont_cursor
              INTO :st_cntfut_pstn.c_xchng_cd,
                   :st_cntfut_pstn.c_ctgry_indstk,
                   :st_cntfut_pstn.c_undrlyng,
									 :st_cntfut_pstn.c_prd_typ,
                   :st_cntfut_pstn.c_expry_dt,
                   :st_cntfut_pstn.c_exer_typ,
                   :st_cntfut_pstn.l_opnpstn_qty,
                   :st_cntfut_pstn.d_org_opn_val,
									 :st_cntfut_pstn.d_mtm_opn_val,
                   :st_cntfut_pstn.c_cln_mtch_accnt,
									 :st_cntfut_pstn.l_strike_prc,
									 :st_cntfut_pstn.c_opt_typ;
  
  if ( SQLCODE != 0 )
  {
   if ( SQLCODE == NO_DATA_FOUND )
   {
       break;
   }
   else
   {
      fn_errlog( c_ServiceName, "S31025", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :spn_cont_cursor;
      EXEC SQL FREE :spn_cont_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
   }
  }
		if(DEBUG_MSG_LVL_0)
		{	
	    fn_userlog( c_ServiceName, "st_cntfut_pstn.c_xchng_cd     %s",st_cntfut_pstn.c_xchng_cd);
			fn_userlog( c_ServiceName, "st_cntfut_pstn.c_ctgry_indstk %c",st_cntfut_pstn.c_ctgry_indstk);
			fn_userlog( c_ServiceName, "st_cntfut_pstn.c_undrlyng     %s",st_cntfut_pstn.c_undrlyng);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_expry_dt     %s",st_cntfut_pstn.c_expry_dt);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_exer_typ     %c",st_cntfut_pstn.c_exer_typ);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.l_opnpstn_qty  %d",st_cntfut_pstn.l_opnpstn_qty);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.d_org_opn_val  %d",st_cntfut_pstn.d_org_opn_val);
      fn_userlog( c_ServiceName, "c_cln_mtch_accnt              %s",st_cntfut_pstn.c_cln_mtch_accnt);
			fn_userlog( c_ServiceName, "st_cntfut_pstn.l_strike_prc   %ld",st_cntfut_pstn.l_strike_prc);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_opt_typ      %c",st_cntfut_pstn.c_opt_typ);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_prd_typ      %c",st_cntfut_pstn.c_prd_typ);
		}
   		rtrim(st_cntfut_pstn.c_xchng_cd);
    	rtrim(st_cntfut_pstn.c_undrlyng);
    	rtrim(st_cntfut_pstn.c_expry_dt);
    	rtrim(st_cntfut_pstn.c_cln_mtch_accnt);

    if( DEBUG_MSG_LVL_3 ) 
		{        
      fn_userlog( c_ServiceName, "Fetching values from cursor for match account %s", st_cntfut_pstn.c_cln_mtch_accnt );
    }

    strcpy ( st_cntrct_q.c_xchng_cd,st_cntfut_pstn.c_xchng_cd );
    strcpy ( st_cntrct_q.c_undrlyng, st_cntfut_pstn.c_undrlyng );
    strcpy ( st_cntrct_q.c_expry_dt, st_cntfut_pstn.c_expry_dt );
    st_cntrct_q.c_opt_typ    = st_cntfut_pstn.c_opt_typ ;
    st_cntrct_q.l_strike_prc = st_cntfut_pstn.l_strike_prc;
		st_cntrct_q.c_exrc_typ   = st_cntfut_pstn.c_exer_typ;
		st_cntrct_q.c_prd_typ    = st_cntfut_pstn.c_prd_typ ;
    st_cntrct_q.c_ctgry_indstk = st_cntfut_pstn.c_ctgry_indstk;	
    
		li_rec_cnt = 0;
		
    if(DEBUG_MSG_LVL_3)
    {
      fn_userlog( c_ServiceName, "After opening cursor %s",st_cntfut_pstn.c_cln_mtch_accnt);
    }

		/*** Commented In Ver 1.1 ***

    EXEC SQL
        SELECT    1
          INTO    :li_rec_cnt
        FROM      dual
        WHERE     EXISTS
        (
        SELECT    1
          FROM    fcm_fo_cntrct_mstr
          WHERE   fcm_xchng_cd  = :st_cntrct_q.c_xchng_cd
           AND    fcm_prdct_typ = :st_cntrct_q.c_prd_typ 
           AND    fcm_undrlyng  = :st_cntrct_q.c_undrlyng
           AND    fcm_expry_dt  = to_date( :st_cntrct_q.c_expry_dt, 'dd-mon-yyyy')
           AND    fcm_exer_typ  = :st_cntrct_q.c_exrc_typ
           AND    fcm_opt_typ   = :st_cntrct_q.c_opt_typ
           AND    fcm_strk_prc  = :st_cntrct_q.l_strike_prc
        );

		  fn_userlog( c_ServiceName, "After fcm fetch opt type %c",st_cntrct_q.c_opt_typ);
      fn_userlog( c_ServiceName, "After fcm strike price   %ld",st_cntrct_q.l_strike_prc);
		  fn_userlog( c_ServiceName, "After fcm strike  li_rec_cnt  %ld",li_rec_cnt);	
  
    *** Ver 1.1 Comment Ends ***/

		/*** Ver 1.1 Starts ***/

    EXEC SQL
        SELECT    1
          INTO    :li_rec_cnt
        FROM      dual
        WHERE     EXISTS
        (
        SELECT    1
          FROM    ftq_fo_trd_qt
          WHERE   ftq_xchng_cd  = :st_cntrct_q.c_xchng_cd
           AND    ftq_prdct_typ = :st_cntrct_q.c_prd_typ
           AND    ftq_undrlyng  = :st_cntrct_q.c_undrlyng
           AND    ftq_expry_dt  = to_date( :st_cntrct_q.c_expry_dt, 'dd-mon-yyyy')
           AND    ftq_exer_typ  = :st_cntrct_q.c_exrc_typ
           AND    ftq_opt_typ   = :st_cntrct_q.c_opt_typ
           AND    ftq_strk_prc  = :st_cntrct_q.l_strike_prc
        );

      fn_userlog( c_ServiceName, "After ftq fetch opt type %c",st_cntrct_q.c_opt_typ);
      fn_userlog( c_ServiceName, "After ftq strike price   %ld",st_cntrct_q.l_strike_prc);
      fn_userlog( c_ServiceName, "After ftq strike  li_rec_cnt  %ld",li_rec_cnt);

    /*** Ver 1.1 Ends ***/
 
		if((SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND))
    {
      fn_errlog( c_ServiceName, "S31030", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :spn_cont_cursor;
      EXEC SQL FREE :spn_cont_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }


    if ( li_rec_cnt == 1 )
    {

			fn_userlog( c_ServiceName, "Calling get Quate");

      i_returncode  = fn_get_qt ( c_ServiceName,
                                  &st_cntrct_q ,
                                  &st_cntrct_qty ,
                                  c_errmsg
                                );

		 if ( i_returncode != 0 )
      {
        fn_errlog( c_ServiceName, "S31035", LIBMSG, c_errmsg  );
        EXEC SQL CLOSE :spn_cont_cursor;
        EXEC SQL FREE :spn_cont_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }

    }
    else
    {
      st_cntrct_qty.l_lst_trdd_prc = 0;
    }
		
		if(DEBUG_MSG_LVL_3)
		{ 	
		 	fn_userlog( c_ServiceName, "After get Quate Last Trade Price  :%ld:",st_cntrct_qty.l_lst_trdd_prc);
			fn_userlog( c_ServiceName, "st_cntfut_pstn.c_xchng_cd     %s",st_cntfut_pstn.c_xchng_cd);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_ctgry_indstk %c",st_cntfut_pstn.c_ctgry_indstk);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_undrlyng     %s",st_cntfut_pstn.c_undrlyng);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_expry_dt     %s",st_cntfut_pstn.c_expry_dt);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_exer_typ     %c",st_cntfut_pstn.c_exer_typ);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.l_opnpstn_qty  %d",st_cntfut_pstn.l_opnpstn_qty);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.d_org_opn_val  %d",st_cntfut_pstn.d_org_opn_val);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_cln_mtch_accnt%s",st_cntfut_pstn.c_cln_mtch_accnt);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.l_strike_prc   %ld",st_cntfut_pstn.l_strike_prc);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_opt_typ      %c",st_cntfut_pstn.c_opt_typ);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_prd_typ      %c",st_cntfut_pstn.c_prd_typ);	
		}

		if(st_cntrct.c_prd_typ == 'F')
		{
			fn_userlog( c_ServiceName, "Calling futuer portfolio");

		  i_returncode  = fn_fut_prtfl( &st_cntfut_pstn, 
																		c_ServiceName,
	  	                              c_errmsg
      	                          );

      if ( i_returncode != 0 )
      {
        fn_errlog( c_ServiceName, "S31040", LIBMSG, c_errmsg  );
        EXEC SQL CLOSE :spn_cont_cursor;
        EXEC SQL FREE :spn_cont_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
 		    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}
		}

		else if(st_cntrct.c_prd_typ == 'O')
		{
			fn_userlog( c_ServiceName, "Calling option portfolio");

			i_returncode  = fn_opt_prtfl(&st_cntfut_pstn,
																		c_ServiceName,
                                    c_errmsg
                                   );

      if ( i_returncode != 0 )
      {
        fn_errlog( c_ServiceName, "S31045", LIBMSG, c_errmsg  );
        EXEC SQL CLOSE :spn_cont_cursor;
        EXEC SQL FREE :spn_cont_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	
	  	}
		}
		else
		{
			fn_userlog( c_ServiceName, "Calling future&option");
			if(st_cntrct_q.c_prd_typ == 'F')
			{	
 			i_returncode  = fn_fut_prtfl(&st_cntfut_pstn, 
														    	 c_ServiceName,
                                   c_errmsg
                                  );
 
 	     if ( i_returncode != 0 )
  	    {
    	    fn_errlog( c_ServiceName, "S31050", LIBMSG, c_errmsg  );
      	  EXEC SQL CLOSE :spn_cont_cursor;
        	EXEC SQL FREE :spn_cont_cursor;
       	 tpfree ( ( char * ) ptr_fml_Obuf );
       	 Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
       	 tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      	}
			}
		
			else if(st_cntrct_q.c_prd_typ == 'O')
			{
	  	 i_returncode  = fn_opt_prtfl(&st_cntfut_pstn,
																	 c_ServiceName,
                                   c_errmsg
                                 );

  	    if ( i_returncode != 0 )
   	   {
    	    fn_errlog( c_ServiceName, "S31055", LIBMSG, c_errmsg  );
      	  EXEC SQL CLOSE :spn_cont_cursor;
       	 EXEC SQL FREE :spn_cont_cursor;
       	 tpfree ( ( char * ) ptr_fml_Obuf );
       	 Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
       	 tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );	
	
				}
			}
		}
	
		
	}/* End of for loop */
	tpcommit(0);   
  EXEC SQL CLOSE :spn_cont_cursor;
  EXEC SQL FREE :spn_cont_cursor;
  tpreturn(TPSUCCESS, SUCC_BFR, (char *)ptr_fml_Obuf, 0, 0 );
}

int fn_fut_prtfl(struct st_fcp_cntrct_pstn *st_cntfut_pstn,
							   char *c_ServiceName,
                 char *c_errmsg
                        )
{ 

		l_tot_sell_qty_m = 0;
		l_tot_sell_qty_h = 0;
		l_tot_sell_qty 	 = 0;
		d_sell_val_m     = 0.0;
		d_sell_val_h     = 0.0;
		d_sell_val       = 0.0;
		d_opn_sell_val   = 0.0;

		l_tot_buy_qty_m  = 0;
		l_tot_buy_qty_h  = 0;
		l_tot_buy_qty    = 0;	
		d_buy_val_h      = 0.0;
	  d_buy_val_m      = 0.0;
		d_buy_val        = 0.0;
		d_opn_buy_val    = 0.0;

		d_cls_val_m      = 0.0;
		d_cls_val_h 		 = 0.0;
		d_cls_val 			 = 0.0;

		li_bal_qty 			 = 0;
		li_crst_qty 		 = 0;
		li_uncrst_qty 	 = 0;
		d_crst_prft 		 = 0.0;
		d_uncrst_prft 	 = 0.0;
		
		if(DEBUG_MSG_LVL_3)
		{	
			fn_userlog( c_ServiceName, "in to the future portfolio");
		  fn_userlog( c_ServiceName, "st_cntfut_pstn.c_xchng_cd     %s",st_cntfut_pstn->c_xchng_cd);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_ctgry_indstk %c",st_cntfut_pstn->c_ctgry_indstk);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_undrlyng     %s",st_cntfut_pstn->c_undrlyng);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_expry_dt     %s",st_cntfut_pstn->c_expry_dt);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_exer_typ     %c",st_cntfut_pstn->c_exer_typ);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.l_opnpstn_qty  %d",st_cntfut_pstn->l_opnpstn_qty);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.d_org_opn_val  %d",st_cntfut_pstn->d_org_opn_val);
      fn_userlog( c_ServiceName, "c_cln_mtch_accnt              %s",st_cntfut_pstn->c_cln_mtch_accnt);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.l_strike_prc   %ld",st_cntfut_pstn->l_strike_prc);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_opt_typ      %c",st_cntfut_pstn->c_opt_typ);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_prd_typ      %c",st_cntfut_pstn->c_prd_typ);
		}

			strcpy( c_cln_mtch_accnt,st_cntfut_pstn->c_cln_mtch_accnt);	
		  strcpy ( c_xchng_cd, st_cntfut_pstn->c_xchng_cd );
  		strcpy ( c_undrlyng, st_cntfut_pstn->c_undrlyng );
    	strcpy ( c_expry_dt, st_cntfut_pstn->c_expry_dt ); 
			c_prdct_typ ='F'; 
    	c_ctgry_indstk = st_cntfut_pstn->c_ctgry_indstk;
    	c_exrc_typ ='E'; 
    	c_opt_typ = st_cntfut_pstn->c_opt_typ;
    	l_strike_prc = st_cntfut_pstn->l_strike_prc;
	
		if(DEBUG_MSG_LVL_3)
		{				
			fn_userlog( c_ServiceName, "index code									  %c",c_ctgry_indstk);
      fn_userlog( c_ServiceName, ".c_undrlyng     							%s",c_undrlyng);
      fn_userlog( c_ServiceName, "c_expry_dt     								%s",c_expry_dt);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_exer_typ     %c",c_exrc_typ);
      fn_userlog( c_ServiceName, "c_cln_mtch_accnt              %s",c_cln_mtch_accnt);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.l_strike_prc   %ld",l_strike_prc);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_opt_typ      %c",c_opt_typ);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_prd_typ      %c",c_prdct_typ);	
		}

		if (st_cntfut_pstn->l_opnpstn_qty > 0 )
    {
				st_cntfut_pstn->c_opnpstn_flw = 'B';
								
      EXEC SQL
        SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
                NVL ( SUM ((ftd_exctd_qty * ftd_exctd_rt ) - NVL ( ftd_frs_brkg,0 ) - NVL ( ftd_cvr_brkg,0 )),0)
        INTO    :l_tot_sell_qty_m,
                :d_sell_val_m
        FROM    ftd_fo_trd_dtls
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ       = :c_prdct_typ
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = :c_exrc_typ
        AND     ftd_trd_flw         = 'S';
	
      if ( SQLCODE != 0 )
      {
        tpcommit(0);
        fn_errlog( c_ServiceName, "S31060", SQLMSG, c_errmsg  );
        EXEC SQL CLOSE :spn_cont_cursor;
        EXEC SQL FREE :spn_cont_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        return -1;
      }

      EXEC SQL
        SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
                NVL ( SUM ((ftd_exctd_qty * ftd_exctd_rt ) -
                NVL ( ftd_frs_brkg,0 ) -
                NVL ( ftd_cvr_brkg,0 )),0)
        INTO    :l_tot_sell_qty_h,
                :d_sell_val_h
        FROM    ftd_fo_trd_dtls_hstry
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ       = :c_prdct_typ
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = : c_exrc_typ
        AND     ftd_trd_flw         = 'S';
      if ( SQLCODE != 0 )
      {
        tpcommit(0);
        fn_errlog( c_ServiceName, "S31065", SQLMSG, c_errmsg  );
        EXEC SQL CLOSE :spn_cont_cursor;
        EXEC SQL FREE :spn_cont_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        return -1;
      }
			
      l_tot_sell_qty = l_tot_sell_qty_m + l_tot_sell_qty_h;
			d_sell_val = d_sell_val_m + d_sell_val_h;

			if(DEBUG_MSG_LVL_3)
			{
				fn_userlog( c_ServiceName, " l_rec_main_exists     %ld",l_rec_main_exists);
				fn_userlog( c_ServiceName, " l_rec_hstry_exists    %ld",l_rec_hstry_exists);
				fn_userlog( c_ServiceName, " l_tot_sell_qty        %ld",l_tot_sell_qty);
		  	fn_userlog( c_ServiceName, " d_sell_val            %lf",d_sell_val);
			}

      EXEC SQL ALLOCATE :spn_trd_cursor;
	
      if ( (l_rec_main_exists == 0 ) && (l_rec_hstry_exists == 1 ) )
      {
        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :spn_trd_cursor FOR
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     NVL (ftd_frs_brkg, 0),
                     NVL (ftd_cvr_brkg, 0),
                     ftd_trd_dt
              FROM 		ftd_fo_trd_dtls_hstry
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ       = :c_prdct_typ
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = : c_exrc_typ
              AND     ftd_trd_flw         = 'B'
              ORDER BY ftd_trd_dt;
          END;
        END-EXEC;
      }
      else
      {
        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :spn_trd_cursor FOR
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     NVL (ftd_frs_brkg, 0),
                     NVL (ftd_cvr_brkg, 0),
                     ftd_trd_dt
              FROM 		ftd_fo_trd_dtls
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ       = :c_prdct_typ
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = :c_exrc_typ
              AND     ftd_trd_flw         = 'B'
              UNION ALL
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     NVL (ftd_frs_brkg, 0),
                     NVL (ftd_cvr_brkg, 0),
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls_hstry
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ       = :c_prdct_typ
							AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = : c_exrc_typ
              AND     ftd_trd_flw         = 'B'
              ORDER BY 5;
          END;
			        END-EXEC;
			}

      li_bal_qty = l_tot_sell_qty;
			SETLEN(c_trd_dt);
      while ( 1 )
      {
			  fn_userlog( c_ServiceName, "inside while loop");
  		      
			EXEC SQL
          FETCH :spn_trd_cursor
          INTO :li_exctd_qty,
               :li_exctd_rt,
               :d_frsh_brk,
               :d_cvr_brk,
               :c_trd_dt;
			
	
        if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {
            break;
          }
          else
          {
            tpcommit(0);
            fn_errlog( c_ServiceName, "S31070", SQLMSG, c_errmsg  );
            EXEC SQL CLOSE :spn_trd_cursor;
            EXEC SQL FREE :spn_trd_cursor;
            EXEC SQL CLOSE :spn_cont_cursor;
            EXEC SQL FREE :spn_cont_cursor;
            tpfree ( ( char * ) ptr_fml_Obuf );
            Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
            return -1;
          }
        }

				if(DEBUG_MSG_LVL_3)
				{
					fn_userlog( c_ServiceName, "li_exctd_qty  %ld", li_exctd_qty);
          fn_userlog( c_ServiceName, "li_exctd_rt   %ld", li_exctd_rt);
          fn_userlog( c_ServiceName, "d_frsh_brk    %lf", d_frsh_brk);
          fn_userlog( c_ServiceName, "d_cvr_brk     %lf", d_cvr_brk);
          fn_userlog( c_ServiceName, "c_trd_dt      %s", c_trd_dt.arr);
				}

        if ( li_bal_qty > 0 )
        {
          li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );

          d_buy_val = d_buy_val  + ( li_crst_qty * li_exctd_rt ) + d_frsh_brk +   d_cvr_brk;

          li_bal_qty = li_bal_qty - li_crst_qty;

          if ( li_bal_qty == 0 )
          {
            li_uncrst_qty = li_exctd_qty - li_crst_qty;
            d_opn_buy_val = d_opn_buy_val  + ( li_uncrst_qty * li_exctd_rt ) + d_frsh_brk + d_cvr_brk;
          }
        }
			  else
        {
          li_uncrst_qty = li_uncrst_qty + li_exctd_qty;

 	        d_opn_buy_val = d_opn_buy_val  + ( li_exctd_qty * li_exctd_rt ) + d_frsh_brk + d_cvr_brk;
					
        }
      }

      EXEC SQL CLOSE :spn_trd_cursor;
      EXEC SQL FREE :spn_trd_cursor;

      d_crst_prft = d_sell_val - d_buy_val;

      d_uncrst_prft = ((double) li_uncrst_qty * (double) st_cntrct_qty.l_lst_trdd_prc ) - d_opn_buy_val;

			if (DEBUG_MSG_LVL_3)
			{
		  	fn_userlog( c_ServiceName, " d_crst_prft         %lf",d_crst_prft);
		  	fn_userlog( c_ServiceName, " d_uncrst_prft       %lf",d_uncrst_prft);
			}
    }
    else if (st_cntfut_pstn->l_opnpstn_qty < 0 )
    {
			st_cntfut_pstn->c_opnpstn_flw = 'S';
      EXEC SQL
        SELECT  NVL ( SUM (ftd_exctd_qty ), 0),
                NVL ( SUM ((ftd_exctd_qty * ftd_exctd_rt ) - NVL ( ftd_frs_brkg,0 ) - NVL ( ftd_cvr_brkg,0 )),0)
        INTO    :l_tot_buy_qty_m,
                :d_buy_val_m
        FROM    ftd_fo_trd_dtls
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ       = :c_prdct_typ
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = :c_exrc_typ
        AND     ftd_trd_flw         = 'B';

      if ( SQLCODE != 0 )
      {
        tpcommit(0);
        fn_errlog( c_ServiceName, "S31075", SQLMSG, c_errmsg  );
        EXEC SQL CLOSE :spn_cont_cursor;
        EXEC SQL FREE :spn_cont_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        return -1;
      }

      EXEC SQL
        SELECT  NVL ( SUM (ftd_exctd_qty ), 0),
                NVL ( SUM ((ftd_exctd_qty * ftd_exctd_rt ) - NVL ( ftd_frs_brkg,0) - NVL ( ftd_cvr_brkg,0)),0)
        INTO    :l_tot_buy_qty_h,
                :d_buy_val_h
        FROM    ftd_fo_trd_dtls_hstry
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ       = :c_prdct_typ
        AND     ftd_undrlyng        = :c_undrlyng
				 AND     ftd_expry_dt       = :c_expry_dt
        AND     ftd_exer_typ        = :c_exrc_typ
        AND     ftd_trd_flw         = 'B';

      if ( SQLCODE != 0 )
      {
        tpcommit(0);
        fn_errlog( c_ServiceName, "S31080", SQLMSG, c_errmsg  );
        EXEC SQL CLOSE :spn_cont_cursor;
        EXEC SQL FREE :spn_cont_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        return -1;
      }

      l_tot_buy_qty = l_tot_buy_qty_m + l_tot_buy_qty_h;
      d_buy_val = d_buy_val_m + d_buy_val_h;

      EXEC SQL ALLOCATE :spn_trd_cursor;

      if ( (l_rec_main_exists == 0 ) && (l_rec_hstry_exists == 1 ) )
      {
        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :spn_trd_cursor FOR
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     NVL (ftd_frs_brkg, 0),
                     NVL (ftd_cvr_brkg, 0),
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls_hstry
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ       = :c_prdct_typ
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = :c_exrc_typ
              AND     ftd_trd_flw         = 'S'
              ORDER BY ftd_trd_dt;
          END;
        END-EXEC;
      }
      else
      {
        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :spn_trd_cursor FOR
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     NVL (ftd_frs_brkg, 0),
                     NVL (ftd_cvr_brkg, 0),
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ       = :c_prdct_typ
							AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = :c_exrc_typ
              AND     ftd_trd_flw         = 'S'
        UNION ALL
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     NVL (ftd_frs_brkg, 0),
                     NVL (ftd_cvr_brkg, 0),
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls_hstry
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ       = :c_prdct_typ
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = :c_exrc_typ
              AND     ftd_trd_flw         = 'S'
              ORDER BY 5;
          END;
        END-EXEC;
      }

      li_bal_qty = l_tot_buy_qty;
			
			fn_userlog(c_ServiceName,"before while   l_tot_buy_qty   [%ld]",l_tot_buy_qty);

      while ( 1 )
      {
        EXEC SQL
          FETCH :spn_trd_cursor
          INTO :li_exctd_qty,
               :li_exctd_rt,
               :d_frsh_brk,
               :d_cvr_brk,
               :c_trd_dt;
        if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {
            break;
          }
          else
          {
            tpcommit(0);
            fn_errlog( c_ServiceName, "S31085", SQLMSG, c_errmsg  );
            EXEC SQL CLOSE :spn_trd_cursor;
            EXEC SQL FREE :spn_trd_cursor;
            EXEC SQL CLOSE :spn_cont_cursor;
            EXEC SQL FREE :spn_cont_cursor;
            tpfree ( ( char * ) ptr_fml_Obuf );
            Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
            return -1;
          }
        }

				if(DEBUG_MSG_LVL_3)
				{
					 fn_userlog(c_ServiceName," li_exctd_qty     [%ld]",li_exctd_qty);
           fn_userlog(c_ServiceName," li_exctd_rt      [%ld]",li_exctd_rt);
           fn_userlog(c_ServiceName," d_frsh_brk [%lf]",d_frsh_brk);
           fn_userlog(c_ServiceName," c_trd_dt   [%s]",c_trd_dt.arr);
				}

				if ( li_bal_qty > 0 )
        {
					
          li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );
          d_sell_val = d_sell_val + ( li_crst_qty * li_exctd_rt ) - d_frsh_brk - d_cvr_brk;
          li_bal_qty = li_bal_qty - li_crst_qty;

          if ( li_bal_qty == 0 )
          {
            li_uncrst_qty = li_exctd_qty - li_crst_qty;

            d_opn_sell_val = d_opn_sell_val  + ( li_uncrst_qty * li_exctd_rt ) - d_frsh_brk - d_cvr_brk;
          }
					if(DEBUG_MSG_LVL_3)
					{
					 	fn_userlog(c_ServiceName,"in if sell_val  [%lf]",d_sell_val);
   			   	fn_userlog(c_ServiceName,"d_buy_val       [%lf]",d_buy_val);
     				fn_userlog(c_ServiceName,"d_opn_sell_val  [%lf]",d_opn_sell_val);
     			 	fn_userlog(c_ServiceName,"li_uncrst_qty   [%ld]",li_uncrst_qty);
					}
        }
        else
        {
          li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
          d_opn_sell_val = d_opn_sell_val + ( li_exctd_qty * li_exctd_rt ) - d_frsh_brk - d_cvr_brk;

	  				 fn_userlog(c_ServiceName,"in else d_sell_val      [%lf]",d_sell_val);
    			  fn_userlog(c_ServiceName,"d_buy_val       [%lf]",d_buy_val);
      			fn_userlog(c_ServiceName,"d_opn_sell_val  [%lf]",d_opn_sell_val);
      			fn_userlog(c_ServiceName,"li_uncrst_qty   [%ld]",li_uncrst_qty);
        }
      }

      EXEC SQL CLOSE :spn_trd_cursor;
      EXEC SQL FREE :spn_trd_cursor;

  	if(DEBUG_MSG_LVL_3)
  	{
  		fn_userlog(c_ServiceName,"d_sell_val 			[%lf]",d_sell_val);
  		fn_userlog(c_ServiceName,"d_buy_val 			[%lf]",d_buy_val);
  		fn_userlog(c_ServiceName,"d_opn_sell_val  [%lf]",d_opn_sell_val);
  		fn_userlog(c_ServiceName,"li_uncrst_qty 	[%ld]",li_uncrst_qty);
  		fn_userlog(c_ServiceName,"st_cntrct_qty.l_lst_trdd_prc [%ld]",st_cntrct_qty.l_lst_trdd_prc);
  	}

      d_crst_prft = d_sell_val - d_buy_val;
      d_uncrst_prft = d_opn_sell_val - ((double) li_uncrst_qty * (double)st_cntrct_qty.l_lst_trdd_prc );
 			
			fn_userlog( c_ServiceName, " d_crst_prft           %lf",d_crst_prft);
      fn_userlog( c_ServiceName, " d_uncrst_prft         %lf",d_uncrst_prft);   

		}
    else
    {
			st_cntfut_pstn->c_opnpstn_flw = 'N';
      EXEC SQL
        SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
                NVL ( SUM ((ftd_exctd_qty * ftd_exctd_rt ) - NVL ( ftd_frs_brkg,0 ) - NVL ( ftd_cvr_brkg,0 )),0)
        INTO    :l_tot_sell_qty_m,
                :d_sell_val_m
        FROM    ftd_fo_trd_dtls
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ       = :c_prdct_typ
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = : c_exrc_typ
				AND     ftd_trd_flw         = 'S';

      if ( SQLCODE != 0 )
      {
        tpcommit(0);
        fn_errlog( c_ServiceName, "S31090", SQLMSG, c_errmsg  );
        EXEC SQL CLOSE :spn_cont_cursor;
        EXEC SQL FREE :spn_cont_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        return -1;
      }

      EXEC SQL
        SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
                NVL ( SUM ((ftd_exctd_qty * ftd_exctd_rt ) - NVL ( ftd_frs_brkg,0 ) - NVL ( ftd_cvr_brkg,0 )),0)
        INTO    :l_tot_sell_qty_h,
                :d_sell_val_h
        FROM    ftd_fo_trd_dtls_hstry
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ       = :c_prdct_typ
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = :c_exrc_typ
        AND     ftd_trd_flw         = 'S';
      if ( SQLCODE != 0 )
      {
        tpcommit(0);
        fn_errlog( c_ServiceName, "S31095", SQLMSG, c_errmsg  );
        EXEC SQL CLOSE :spn_cont_cursor;
        EXEC SQL FREE :spn_cont_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        return -1;
      }

      l_tot_sell_qty = l_tot_sell_qty_m + l_tot_sell_qty_h;
      d_sell_val = d_sell_val_m + d_sell_val_h;

      EXEC SQL
        SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
                NVL ( SUM ((ftd_exctd_qty * ftd_exctd_rt ) -
                      NVL ( ftd_frs_brkg,0 )           -
                      NVL ( ftd_cvr_brkg,0 )             ), 0 )
        INTO    :l_tot_buy_qty_m,
                :d_buy_val_m
        FROM    ftd_fo_trd_dtls
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ       = :c_prdct_typ
        AND     ftd_undrlyng        = :c_undrlyng
				AND     ftd_exer_typ        = : c_exrc_typ
        AND     ftd_trd_flw         = 'B';

      if ( SQLCODE != 0 )
      {
        tpcommit(0);
        fn_errlog( c_ServiceName, "S31100", SQLMSG, c_errmsg  );
        EXEC SQL CLOSE :spn_cont_cursor;
        EXEC SQL FREE :spn_cont_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        return -1;
      }

      EXEC SQL
        SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
                NVL ( SUM ((ftd_exctd_qty * ftd_exctd_rt ) - NVL ( ftd_frs_brkg,0 ) - NVL ( ftd_cvr_brkg,0 )),0)
        INTO    :l_tot_buy_qty_h,
                :d_buy_val_h
        FROM    ftd_fo_trd_dtls_hstry
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ       = :c_prdct_typ
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = : c_exrc_typ
        AND     ftd_trd_flw         = 'B';
      if ( SQLCODE != 0 )
      {
        tpcommit(0);
        fn_errlog( c_ServiceName, "S31105", SQLMSG, c_errmsg  );
        EXEC SQL CLOSE :spn_cont_cursor;
        EXEC SQL FREE :spn_cont_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        return -1;
      }

      EXEC SQL
        SELECT NVL ( ( fco_cls_qty * fco_cls_rt ), 0 )
        INTO :d_cls_val_m
        FROM fco_fo_fclsout
        WHERE fco_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fco_xchng_cd        = :c_xchng_cd
        AND   fco_prdct_typ       = :c_prdct_typ
        AND   fco_undrlyng        = :c_undrlyng
        AND   fco_expry_dt        = :c_expry_dt
        AND   fco_exer_typ        = :c_exrc_typ;

      if ( SQLCODE != 0 )
      {
        if ( SQLCODE != NO_DATA_FOUND )
        {
          tpcommit(0);
	

 					fn_errlog( c_ServiceName, "S31110", SQLMSG, c_errmsg  );
          EXEC SQL CLOSE :spn_cont_cursor;
          EXEC SQL FREE :spn_cont_cursor;
          tpfree ( ( char * ) ptr_fml_Obuf );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
          return -1;
        }
        else
        {
          d_cls_val_m = 0;
        }
      }

      EXEC SQL
        SELECT NVL ( ( fco_cls_qty * fco_cls_rt ), 0 )
        INTO :d_cls_val_h
        FROM fco_fo_fclsout_hstry
        WHERE fco_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fco_xchng_cd        = :c_xchng_cd
        AND   fco_prdct_typ       = :c_prdct_typ
        AND   fco_undrlyng        = :c_undrlyng
        AND   fco_expry_dt        = :c_expry_dt
        AND   fco_exer_typ        = :c_exrc_typ;
      if ( SQLCODE != 0 )
      {
        if ( SQLCODE != NO_DATA_FOUND )
        {
          tpcommit(0);
          fn_errlog( c_ServiceName, "S31115", SQLMSG, c_errmsg  );
          EXEC SQL CLOSE :spn_cont_cursor;
          EXEC SQL FREE :spn_cont_cursor;
          tpfree ( ( char * ) ptr_fml_Obuf );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
          return -1;
        }
        else
        {
          d_cls_val_h = 0;
        }
      }

      d_cls_val = d_cls_val_m + d_cls_val_h;

      l_tot_buy_qty = l_tot_buy_qty_m + l_tot_buy_qty_h;
      d_buy_val = d_buy_val_m + d_buy_val_h;

      d_crst_prft = d_sell_val - d_buy_val - d_cls_val;
      d_uncrst_prft = 0.0;
			fn_userlog( c_ServiceName, " d_crst_prft         %lf",d_crst_prft);
      fn_userlog( c_ServiceName, " d_uncrst_prft         %lf",d_uncrst_prft);
    }

    rec_cnt =  1;
    ret_val = 0;
			
    EXEC SQL
      SELECT decode(:st_cntfut_pstn->l_opnpstn_qty, 0, 0,
						 round(((:st_cntfut_pstn->d_mtm_opn_val/:st_cntfut_pstn->l_opnpstn_qty)),2))
      INTO : d_base_prc
      FROM  dual;

     l_avg_trd_prc = (long)d_base_prc;

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31120", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :spn_cont_cursor;
      EXEC SQL FREE :spn_cont_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName,  "d_base_prc :%ld",d_base_prc);
			fn_userlog( c_ServiceName, "Open Position Value is :%lf:",st_cntfut_pstn->d_org_opn_val);
			fn_userlog(c_ServiceName,  "l_avg_trd_prc :%ld",l_avg_trd_prc);
			fn_userlog( c_ServiceName, "Adding fml to buffer" );
		}

    i_ch_val =  fn_pack_vartofml ( c_ServiceName,
                                   c_errmsg,
                                   &ptr_fml_Obuf,
                                   18,
                       FFO_XCHNG_CD,      st_cntrct_q.c_xchng_cd,
                       FFO_PRDCT_TYP,     (char *)&st_cntrct_q.c_prd_typ,
                       FFO_UNDRLYNG,      st_cntrct_q.c_undrlyng,
                       FFO_EXPRY_DT,      st_cntrct_q.c_expry_dt,
                       FFO_EXER_TYP,      (char *)&st_cntrct_q.c_exrc_typ,
                       FFO_CTGRY_INDSTK,  (char *)&st_cntrct_q.c_ctgry_indstk,
                       FFO_OPNPSTN_QTY,   (char *)&st_cntfut_pstn->l_opnpstn_qty,
                       FFO_OPNPSTN_VAL,   (char *)&st_cntfut_pstn->d_org_opn_val,
                       FFO_OPT_TYP,       (char *)&st_cntrct_q.c_opt_typ,
                       FFO_STRK_PRC,      (char *)&st_cntrct_q.l_strike_prc,
                       FFO_CUR_MKT_PRC,   (char *)&st_cntrct_qty.l_lst_trdd_prc,
                       FFO_RLZD_PL,       (char *)&d_crst_prft,
                       FFO_UNRLZD_PL,     (char *)&d_uncrst_prft,
                       FFO_EBA_MTCH_ACT_NO, (char *) c_cln_mtch_accnt,
											 FFO_TRD_FLW,        (char *)&st_cntfut_pstn->c_opnpstn_flw,
											 FFO_AVRG_TRD_PRC,  (char *)&l_avg_trd_prc,
                       FFO_SUB_BUF_CNT,   (char *)&rec_cnt,
                       FFO_ACTN_ID,       (char *)&ret_val );
    if ( i_ch_val == -1 )
    {
      tpcommit(0);
      fn_errlog( c_ServiceName, "S31125", LIBMSG, c_errmsg  );
      EXEC SQL CLOSE :spn_cont_cursor;
      EXEC SQL FREE :spn_cont_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      return -1;
    }
		 fn_userlog( c_ServiceName, "Added fml to buffer" );
  
  tpcommit(0);   
	return 0; 
	   
	}


int fn_opt_prtfl( struct st_fcp_cntrct_pstn *st_cntfut_pstn,
							char *c_ServiceName,
              char *c_errmsg
            )  /* VER TOL : TUX on LINUX -- Added 'int' to the function return type (Ravindra) */
{
		long int l_chrgs_tmp = 0;	
 		long l_charges       = 0; 
  	d_sell_val_m         = 0.0;
    d_sell_val_h         = 0.0;
    d_sell_val           = 0.0;
    d_opn_sell_val       = 0.0;

    l_tot_buy_qty_m 		 = 0;
    d_buy_val_m 				 = 0.0;
    l_tot_buy_qty_h 		 = 0;
    d_buy_val_h 				 = 0.0;
    d_buy_val 					 = 0.0;
    double d_opn_buy_val = 0.0;

    li_bal_qty 					 = 0;
    li_crst_qty 				 = 0;
    li_uncrst_qty 			 = 0;
    d_crst_prft 				 = 0.0;
    d_uncrst_prft 			 = 0.0;
    double d_total_prft  = 0.0;
		double d_ex_val 		 = 0.0;
		double d_as_val 		 = 0.0;
		long int li_cmp			 = 0;
    double d_ex_val_h 	 = 0.0;
    double d_as_val_h    = 0.0;
    double d_ex_val_m    = 0.0;
    double d_as_val_m    = 0.0;
		
		strcpy ( c_xchng_cd, st_cntfut_pstn->c_xchng_cd );
		strcpy ( c_undrlyng, st_cntfut_pstn->c_undrlyng );
    strcpy ( c_expry_dt, st_cntfut_pstn->c_expry_dt );
	  strcpy ( c_cln_mtch_accnt,st_cntfut_pstn->c_cln_mtch_accnt);
    c_prdct_typ    = 'O'; 
    c_ctgry_indstk = st_cntfut_pstn->c_ctgry_indstk;
    c_exrc_typ     ='E';
    c_opt_typ      = st_cntfut_pstn->c_opt_typ;
    l_strike_prc   = st_cntfut_pstn->l_strike_prc;
	  li_cmp =st_cntrct_qty.l_lst_trdd_prc; 

		if(DEBUG_MSG_LVL_0)
		{
      fn_userlog( c_ServiceName, "index code                    :%c:",c_ctgry_indstk);
      fn_userlog( c_ServiceName, ".c_undrlyng                   :%s:",c_undrlyng);
      fn_userlog( c_ServiceName, "c_expry_dt                    :%s:",c_expry_dt);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_exer_typ     :%c:",c_exrc_typ);
      fn_userlog( c_ServiceName, "c_cln_mtch_accnt              :%s:",c_cln_mtch_accnt);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.l_strike_prc   :%ld:",l_strike_prc);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_opt_typ      :%c:",c_opt_typ);
      fn_userlog( c_ServiceName, "st_cntfut_pstn.c_prd_typ      :%c:",c_prdct_typ);
		  fn_userlog( c_ServiceName, "Last Trade Price              %ld",st_cntrct_qty.l_lst_trdd_prc);
		}

    if( st_cntfut_pstn->l_opnpstn_qty > 0 )
    {
       st_cntfut_pstn->c_opnpstn_flw = 'B';
    }
    else if( st_cntfut_pstn->l_opnpstn_qty < 0)
    {
       st_cntfut_pstn->c_opnpstn_flw = 'S';
    }
    else
    {
       st_cntfut_pstn->c_opnpstn_flw = 'N';
    }
		
		

    EXEC SQL ALLOCATE :spn_chrgs_cur;

    EXEC SQL EXECUTE
      BEGIN
        OPEN :spn_chrgs_cur FOR
          SELECT  NVL( SUM( NVL( ftd_brkg, 0 ) + NVL( ftd_tran_chrg, 0 ) + NVL( ftd_stamp_duty, 0 ) +
                            NVL( ftd_sebi_tt, 0 ) + NVL( ftd_stt, 0 ) + NVL( ftd_src_tx, 0 )+nvl(ftd_brkrg_igst,0 )+ nvl(ftd_brkrg_cgst,0 )+nvl(ftd_brkrg_sgst,0 ) +nvl( ftd_brkrg_ugst,0)), 0)  /** Ver 13 **/
          FROM    ftd_fo_trd_dtls
          WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     ftd_xchng_cd        = :c_xchng_cd
          AND     ftd_prdct_typ       = :c_prdct_typ
          AND     ftd_undrlyng        = :c_undrlyng
          AND     ftd_expry_dt        = :c_expry_dt
          AND     ftd_exer_typ        = :c_exrc_typ
          AND     ftd_opt_typ         = :c_opt_typ
          AND     ftd_strk_prc        = :l_strike_prc
    UNION ALL
          SELECT  NVL( SUM( NVL( ftd_brkg, 0 ) + NVL( ftd_tran_chrg, 0 ) + NVL( ftd_stamp_duty, 0 ) +
                            NVL( ftd_sebi_tt, 0 ) + NVL( ftd_stt, 0 ) + NVL( ftd_src_tx, 0 )+nvl(ftd_brkrg_igst,0 )+ nvl(ftd_brkrg_cgst,0 )+nvl(ftd_brkrg_sgst,0 ) +nvl( ftd_brkrg_ugst,0)), 0)			/** Ver 1.3 **/
          FROM    ftd_fo_trd_dtls_hstry
          WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     ftd_xchng_cd        = :c_xchng_cd
          AND     ftd_prdct_typ       = :c_prdct_typ
          AND     ftd_undrlyng        = :c_undrlyng
          AND     ftd_expry_dt        = :c_expry_dt
          AND     ftd_exer_typ        = :c_exrc_typ
          AND     ftd_opt_typ         = :c_opt_typ
          AND     ftd_strk_prc        = :l_strike_prc
    UNION ALL
          SELECT  NVL( SUM( NVL( fec_brkg_val, 0 ) + NVL( fec_tran_chrg, 0 ) + NVL( fec_stamp_duty, 0 ) +
                            NVL( fec_sebi_tt, 0 ) + NVL( fec_stt, 0 ) + NVL( fec_src_tx, 0 )), 0)
          FROM    fec_fo_exrc_conf
          WHERE   fec_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     fec_xchng_cd        = :c_xchng_cd
          AND     fec_prdct_typ       = :c_prdct_typ
          AND     fec_undrlyng        = :c_undrlyng
          AND     fec_expry_dt        = :c_expry_dt
          AND     fec_exer_typ        = :c_exrc_typ
          AND     fec_opt_typ         = :c_opt_typ
          AND     fec_strk_prc        = :l_strike_prc
    UNION ALL
          SELECT  NVL( SUM( NVL( fec_brkg_val, 0 ) + NVL( fec_tran_chrg, 0 ) + NVL( fec_stamp_duty, 0 ) +
                            NVL( fec_sebi_tt, 0 ) + NVL( fec_stt, 0 ) + NVL( fec_src_tx, 0 )), 0)
          FROM    fec_fo_exrc_conf_hstry
          WHERE   fec_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     fec_xchng_cd        = :c_xchng_cd
          AND     fec_prdct_typ       = :c_prdct_typ
          AND     fec_undrlyng        = :c_undrlyng
          AND     fec_expry_dt        = :c_expry_dt
          AND     fec_exer_typ        = :c_exrc_typ
          AND     fec_opt_typ         = :c_opt_typ
          AND     fec_strk_prc        = :l_strike_prc
    UNION ALL
          SELECT  NVL( SUM( NVL( fab_brkrg_val, 0 ) + NVL( fab_tran_chrg, 0 ) + NVL( fab_stamp_duty, 0 ) +
                            NVL( fab_sebi_tt, 0 ) + NVL( fab_stt, 0 ) + NVL( fab_src_tx, 0 )), 0)
          FROM    fab_fo_asgnmnt_book
          WHERE   fab_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     fab_undrlyng        = :c_undrlyng
          AND     fab_expry_dt        = :c_expry_dt 
          AND     fab_xchng_cd        = :c_xchng_cd
          AND     fab_prdct_typ       = :c_prdct_typ
          AND     fab_exer_typ        = :c_exrc_typ
          AND     fab_opt_typ         = :c_opt_typ
          AND     fab_strk_prc        = :l_strike_prc
    UNION ALL
          SELECT  NVL( SUM( NVL( fab_brkrg_val, 0 ) + NVL( fab_tran_chrg, 0 ) + NVL( fab_stamp_duty, 0 ) +
                            NVL( fab_sebi_tt, 0 ) + NVL( fab_stt, 0 ) + NVL( fab_src_tx, 0 )), 0)
          FROM    fab_fo_asgnmnt_book_hstry
          WHERE   fab_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     fab_undrlyng        = :c_undrlyng  
          AND     fab_expry_dt        = :c_expry_dt 
          AND     fab_xchng_cd        = :c_xchng_cd
          AND     fab_prdct_typ       = :c_prdct_typ
          AND     fab_exer_typ        = :c_exrc_typ
          AND     fab_opt_typ         = :c_opt_typ
          AND     fab_strk_prc        = :l_strike_prc;
       END;
    END-EXEC;

    if ( SQLCODE != 0 )
    {
      if ( SQLCODE == NO_DATA_FOUND )
      {
        fn_userlog( c_ServiceName,"Inside NO_DATA_FOUND" );
      }
      else
   		{
        fn_errlog( c_ServiceName, "S31130", SQLMSG, c_errmsg  );
        EXEC SQL CLOSE :spn_chrgs_cur;
        EXEC SQL FREE :spn_chrgs_cur;
        EXEC SQL CLOSE :spn_cont_cursor;
        EXEC SQL FREE :spn_cont_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        return -1;
      }
    }


    while( 1 )
    {
      EXEC SQL FETCH :spn_chrgs_cur
               INTO  :l_chrgs_tmp;

      if( SQLCODE != 0 )
      {
        if ( SQLCODE == NO_DATA_FOUND )
        {
          break;
        }
        else
        {
          fn_errlog( c_ServiceName, "S31135", SQLMSG, c_errmsg  );
          EXEC SQL CLOSE :spn_chrgs_cur;
          EXEC SQL FREE :spn_chrgs_cur;
          EXEC SQL CLOSE :spn_cont_cursor;
          EXEC SQL FREE :spn_cont_cursor;
          tpfree ( ( char * ) ptr_fml_Obuf );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
          return -1;
        }
      }

      l_charges += l_chrgs_tmp;
    }
		
		fn_userlog( c_ServiceName, "After while l_charges %ld",l_charges);
	
    EXEC SQL CLOSE :spn_chrgs_cur;
    EXEC SQL FREE :spn_chrgs_cur;


    EXEC SQL
      SELECT  NVL(SUM((ftd_exctd_qty * ftd_exctd_rt) - NVL( ftd_frs_brkg,0 ) - NVL( ftd_cvr_brkg,0 )),0)
        INTO    :d_buy_val_m
			  FROM    ftd_fo_trd_dtls
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ       = :c_prdct_typ
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = :c_exrc_typ
        AND     ftd_opt_typ         = :c_opt_typ
        AND     ftd_strk_prc        = :l_strike_prc
        AND     ftd_trd_flw         = 'B';

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31140", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :spn_cont_cursor;
      EXEC SQL FREE :spn_cont_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      return -1;
    }
		fn_userlog( c_ServiceName, "d_buy_val_m %lf",d_buy_val_m);
    
		EXEC SQL
      SELECT  NVL ( SUM ((ftd_exctd_qty * ftd_exctd_rt ) - NVL ( ftd_frs_brkg,0 ) - NVL ( ftd_cvr_brkg,0 )),0)
      INTO    :d_buy_val_h
      FROM    ftd_fo_trd_dtls_hstry
      WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND     ftd_xchng_cd        = :c_xchng_cd
      AND     ftd_prdct_typ       = :c_prdct_typ
      AND     ftd_undrlyng        = :c_undrlyng
      AND     ftd_expry_dt        = :c_expry_dt
      AND     ftd_exer_typ        = :c_exrc_typ
      AND     ftd_opt_typ         = :c_opt_typ
      AND     ftd_strk_prc        = :l_strike_prc
      AND     ftd_trd_flw         = 'B';
	
    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31145", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :spn_cont_cursor;
      EXEC SQL FREE :spn_cont_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      return -1;
    }
		fn_userlog( c_ServiceName, "d_buy_val_h :%lf",d_buy_val_h);

    d_buy_val = d_buy_val_m + d_buy_val_h;

    EXEC SQL
      SELECT  NVL ( SUM((ftd_exctd_qty * ftd_exctd_rt ) - NVL (ftd_frs_brkg,0 ) - NVL (ftd_cvr_brkg,0 )), 0 )
      INTO    :d_sell_val_m
      FROM    ftd_fo_trd_dtls
      WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND     ftd_xchng_cd        = :c_xchng_cd
      AND     ftd_prdct_typ       = :c_prdct_typ
      AND     ftd_undrlyng        = :c_undrlyng
      AND     ftd_expry_dt        = :c_expry_dt
      AND     ftd_exer_typ        = :c_exrc_typ
      AND     ftd_opt_typ         = :c_opt_typ
      AND     ftd_strk_prc        = :l_strike_prc
      AND     ftd_trd_flw         = 'S';
 
	   if ( SQLCODE != 0 )
     {
      fn_errlog( c_ServiceName, "S31150", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :spn_cont_cursor;
      EXEC SQL FREE :spn_cont_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      return -1;
     }
		 fn_userlog( c_ServiceName, "d_buy_val %lf",d_buy_val);

    EXEC SQL
      SELECT  NVL ( SUM((ftd_exctd_qty * ftd_exctd_rt ) - NVL (ftd_frs_brkg,0 ) - NVL (ftd_cvr_brkg,0 )),0)
      INTO    :d_sell_val_h
      FROM    ftd_fo_trd_dtls_hstry
      WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND     ftd_xchng_cd        = :c_xchng_cd
      AND     ftd_prdct_typ       = :c_prdct_typ
      AND     ftd_undrlyng        = :c_undrlyng
      AND     ftd_expry_dt        = :c_expry_dt
      AND     ftd_exer_typ        = :c_exrc_typ
      AND     ftd_opt_typ         = :c_opt_typ
      AND     ftd_strk_prc        = :l_strike_prc
      AND     ftd_trd_flw         = 'S';
    
		 if ( SQLCODE != 0 )
     {
      fn_errlog( c_ServiceName, "S31155", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :spn_cont_cursor;
      EXEC SQL FREE :spn_cont_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      return -1;
     }

    d_sell_val = d_sell_val_m + d_sell_val_h;
		fn_userlog( c_ServiceName, "d_sell_val %lf",d_sell_val);	

    	if ( c_opt_typ == 'P' )
 			{
      EXEC SQL
        SELECT NVL(SUM(fec_exrc_qty * (fec_strk_prc - fec_curr_mkt_prc)),0)
        INTO :d_ex_val_m
        FROM fec_fo_exrc_conf
        WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fec_xchng_cd        = :c_xchng_cd
        AND   fec_prdct_typ       = :c_prdct_typ
        AND   fec_undrlyng        = :c_undrlyng
        AND   fec_expry_dt        = :c_expry_dt
        AND   fec_exer_typ        = :c_exrc_typ
        AND   fec_opt_typ         = :c_opt_typ
        AND   fec_strk_prc        = :l_strike_prc;
    	}
	
  	  else
    	{
      EXEC SQL
        SELECT NVL(SUM(fec_exrc_qty * (fec_curr_mkt_prc - fec_strk_prc)),0)
        INTO :d_ex_val_m
        FROM fec_fo_exrc_conf
        WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fec_xchng_cd        = :c_xchng_cd
        AND   fec_prdct_typ       = :c_prdct_typ
        AND   fec_undrlyng        = :c_undrlyng
        AND   fec_expry_dt        = :c_expry_dt
        AND   fec_exer_typ        = :c_exrc_typ
        AND   fec_opt_typ         = :c_opt_typ
        AND   fec_strk_prc        = :l_strike_prc;
      }

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31160", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :spn_cont_cursor;
      EXEC SQL FREE :spn_cont_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      return -1;
    }
		fn_userlog( c_ServiceName, "d_ex_val_m %lf",d_ex_val_m);	
	
    if ( c_opt_typ == 'P' )
    {
      EXEC SQL
        SELECT NVL(SUM(fec_exrc_qty * (fec_strk_prc - fec_curr_mkt_prc)),0)
        INTO :d_ex_val_h
        FROM fec_fo_exrc_conf_hstry
        WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fec_xchng_cd        = :c_xchng_cd
        AND   fec_prdct_typ       = :c_prdct_typ
        AND   fec_expry_dt        = :c_expry_dt
        AND   fec_exer_typ        = :c_exrc_typ
        AND   fec_opt_typ         = :c_opt_typ
        AND   fec_strk_prc        = :l_strike_prc;
    }
    else
    {
      EXEC SQL
        SELECT NVL ( SUM (fec_exrc_qty * (fec_curr_mkt_prc - fec_strk_prc ) ), 0 )
        INTO :d_ex_val_h
        FROM fec_fo_exrc_conf_hstry
        WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fec_xchng_cd        = :c_xchng_cd
        AND   fec_prdct_typ       = :c_prdct_typ
        AND   fec_undrlyng        = :c_undrlyng
        AND   fec_expry_dt        = :c_expry_dt
        AND   fec_exer_typ        = :c_exrc_typ
        AND   fec_opt_typ         = :c_opt_typ
        AND   fec_strk_prc        = :l_strike_prc;
    }
		fn_userlog( c_ServiceName, "d_ex_val_h %lf",d_ex_val_h);

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31165", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :spn_cont_cursor;
      EXEC SQL FREE :spn_cont_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      return -1;
    }

    d_ex_val = d_ex_val_m + d_ex_val_h;

		fn_userlog( c_ServiceName, "d_ex_val %lf",d_ex_val);

    if ( c_opt_typ == 'P' )
    {
      EXEC SQL
        SELECT NVL(SUM(fab_asgnd_qty * (fab_strk_prc - fab_sttlmnt_prc)),0)
      INTO :d_as_val_m
      FROM fab_fo_asgnmnt_book
      WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND   fab_undrlyng        = :c_undrlyng
      AND   fab_expry_dt        = :c_expry_dt 
      AND   fab_xchng_cd        = :c_xchng_cd
      AND   fab_prdct_typ       = :c_prdct_typ
      AND   fab_exer_typ        = :c_exrc_typ
      AND   fab_opt_typ         = :c_opt_typ
      AND   fab_strk_prc        = :l_strike_prc;
    }
    else
    {
      EXEC SQL
        SELECT NVL ( SUM (fab_asgnd_qty * (fab_sttlmnt_prc - fab_strk_prc )),0)
      INTO :d_as_val_m
      FROM fab_fo_asgnmnt_book
      WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND   fab_undrlyng        = :c_undrlyng
      AND   fab_expry_dt        = :c_expry_dt 
      AND   fab_xchng_cd        = :c_xchng_cd
      AND   fab_prdct_typ       = :c_prdct_typ
      AND   fab_expry_dt        = :c_expry_dt
      AND   fab_exer_typ        = :c_exrc_typ
      AND   fab_opt_typ         = :c_opt_typ
      AND   fab_strk_prc        = :l_strike_prc;
    }

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31170", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :spn_cont_cursor;
      EXEC SQL FREE :spn_cont_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      return -1;
    }
		fn_userlog( c_ServiceName, "d_as_val_m %lf",d_as_val_m);
    if ( c_opt_typ == 'P' )
    {
      EXEC SQL
        SELECT NVL ( SUM (fab_asgnd_qty * (fab_strk_prc - fab_sttlmnt_prc)),0)
      INTO :d_as_val_h
      FROM fab_fo_asgnmnt_book_hstry
      WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND   fab_xchng_cd        = :c_xchng_cd
      AND   fab_prdct_typ       = :c_prdct_typ
      AND   fab_undrlyng        = :c_undrlyng
      AND   fab_expry_dt        = :c_expry_dt
      AND   fab_exer_typ        = :c_exrc_typ
      AND   fab_opt_typ         = :c_opt_typ
      AND   fab_strk_prc        = :l_strike_prc;
    }
    else
    {
      EXEC SQL
        SELECT NVL ( SUM (fab_asgnd_qty * (fab_sttlmnt_prc - fab_strk_prc)),0)
      INTO :d_as_val_h
      FROM fab_fo_asgnmnt_book_hstry
      WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt

      AND   fab_xchng_cd        = :c_xchng_cd
      AND   fab_prdct_typ       = :c_prdct_typ
      AND   fab_undrlyng        = :c_undrlyng
      AND   fab_expry_dt        = :c_expry_dt
      AND   fab_exer_typ        = :c_exrc_typ
      AND   fab_opt_typ         = :c_opt_typ
      AND   fab_strk_prc        = :l_strike_prc;
    }

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31175", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :spn_cont_cursor;
      EXEC SQL FREE :spn_cont_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      return -1;
    }

		fn_userlog( c_ServiceName, "d_as_val_h %lf",d_as_val_h);

    d_as_val = d_as_val_m + d_as_val_h;

    d_crst_prft = d_sell_val - d_buy_val + d_ex_val - d_as_val;

    d_uncrst_prft = st_cntfut_pstn->l_opnpstn_qty * li_cmp ;

    d_total_prft = d_crst_prft + d_uncrst_prft;
	
		if(DEBUG_MSG_LVL_3)
		{		
			fn_userlog( c_ServiceName, ".c_undrlyng                   :%s:",c_undrlyng);
			fn_userlog( c_ServiceName, "c_expry_dt                    :%s:",c_expry_dt);
			fn_userlog( c_ServiceName, "st_cntfut_pstn.c_exer_typ     :%c:",c_exrc_typ);
			fn_userlog( c_ServiceName, "c_cln_mtch_accnt              :%s:",c_cln_mtch_accnt);
			fn_userlog( c_ServiceName, "st_cntfut_pstn.l_strike_prc   :%ld:",l_strike_prc);
			fn_userlog( c_ServiceName, "st_cntfut_pstn.c_opt_typ      :%c:",c_opt_typ);
			fn_userlog( c_ServiceName, "Used st_cntfut_pstn.c_prd_typ :%c:",c_prdct_typ);
    }
		
		EXEC SQL
      SELECT decode(:st_cntfut_pstn->l_opnpstn_qty, 0, 0,
            round(((:st_cntfut_pstn->d_org_opn_val/:st_cntfut_pstn->l_opnpstn_qty)),2))
      INTO : d_base_prc
      FROM  dual;

     l_avg_trd_prc = (long)d_base_prc;
	
    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31180", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :spn_cont_cursor;
      EXEC SQL FREE :spn_cont_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      return -1;
    }
		

		if( DEBUG_MSG_LVL_3 ) 
		{        
			fn_userlog(c_ServiceName,"d_sell_val 			:%lf",d_sell_val);
			fn_userlog(c_ServiceName,"d_buy_val 			:%lf",d_buy_val);
			fn_userlog(c_ServiceName,"d_ex_val 				:%lf",d_ex_val);
			fn_userlog(c_ServiceName,"d_as_val 				:%lf",d_as_val);
			fn_userlog(c_ServiceName,"d_crst_prft 		:%lf",d_crst_prft);
			fn_userlog(c_ServiceName,"l_opnpstn_qty 	:%ld",st_cntfut_pstn->l_opnpstn_qty);
			fn_userlog(c_ServiceName,"li_cmp 					:%ld",li_cmp);
			fn_userlog(c_ServiceName,"d_uncrst_prft 	:%lf",d_uncrst_prft);
			fn_userlog(c_ServiceName,".c_opnpstn_flw  :%c",st_cntfut_pstn->c_opnpstn_flw); 
			fn_userlog(c_ServiceName,"l_charges 			:%ld",l_charges);           
			fn_userlog(c_ServiceName,"l_avg_trd_prc 	:%ld",l_avg_trd_prc);    
		}

    rec_cnt = 1;
    ret_val =0;

    i_ch_val =  fn_pack_vartofml ( c_ServiceName, c_errmsg,
                                   &ptr_fml_Obuf,
                                   20,    
                       FFO_XCHNG_CD,      st_cntrct_q.c_xchng_cd,
                       FFO_PRDCT_TYP,     (char *)&st_cntrct_q.c_prd_typ,
                       FFO_UNDRLYNG,      st_cntrct_q.c_undrlyng,
                       FFO_EXPRY_DT,      st_cntrct_q.c_expry_dt,
                       FFO_EXER_TYP,      (char *)&st_cntrct_q.c_exrc_typ,
                       FFO_OPT_TYP,       (char *)&st_cntrct_q.c_opt_typ,
                       FFO_STRK_PRC,      (char *)&st_cntrct_q.l_strike_prc,
                       FFO_CTGRY_INDSTK,  (char *)&st_cntrct_q.c_ctgry_indstk,
                       FFO_OPNPSTN_QTY,   (char *)&st_cntfut_pstn->l_opnpstn_qty,
                       FFO_OPNPSTN_VAL,   (char *)&st_cntfut_pstn->d_org_opn_val,
                       FFO_CUR_MKT_PRC,   (char *)&st_cntrct_qty.l_lst_trdd_prc,
                       FFO_RLZD_PL,       (char *)&d_crst_prft,
                       FFO_UNRLZD_PL,     (char *)&d_uncrst_prft,
                       FFO_TOTAL_PL,      (char *)&d_total_prft,
                       FFO_EBA_MTCH_ACT_NO,(char *)c_cln_mtch_accnt,
                       FFO_TRD_FLW,       (char *)&st_cntfut_pstn->c_opnpstn_flw,    
                       FFO_BRKRG_VL,      (char *)&l_charges,        
                       FFO_AVRG_TRD_PRC,  (char *)&l_avg_trd_prc,   
                       FFO_SUB_BUF_CNT,   (char *)&rec_cnt,
                       FFO_ACTN_ID,       (char *)&ret_val);
    if ( i_ch_val == -1 )
    {
      fn_errlog( c_ServiceName, "S31185", LIBMSG, c_errmsg  );
      EXEC SQL CLOSE :spn_cont_cursor;
      EXEC SQL FREE :spn_cont_cursor;
 		  tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      return -1;
    }
  

  if( DEBUG_MSG_LVL_3 ) 
	{     
    fn_userlog( c_ServiceName, "After end of for" );
    fn_userlog( c_ServiceName, "sizeof fml %d",sizeof(ptr_fml_Obuf) );
  }
	return 0;
}
		

