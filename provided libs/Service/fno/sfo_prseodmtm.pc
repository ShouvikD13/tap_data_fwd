/******************************************************************************/
/*	Program	    			:	SFO_PRSEODMTM                                         */
/*                                                                            */
/*  Input             : FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_XCHNG_CD                                          */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_CTGRY_INDSTK                                      */
/*                      FFO_TRD_DT                                            */
/*                      FFO_RUN_NUM  (Need to be asked )                      */
/*                                                                            */
/*  Output            : Success / Failure                                     */
/*                                                                            */
/*  Description       : To process the records in End of Day (EOD ) MTM  for  */
/*                      SPAN customers  called by the batch program .         */
/*                                                                            */
/*  Log               : Ver 1.0   25-Jun-2011      														*/
/*  									: Ver 1.1   02-Apr-2012      														*/
/*                    : Ver 1.2   20-Apr-2012   Mahesh Shinde                 */
/*                    : Ver 1.4   22-Feb-2013   Sachin Birje                  */
/*                    : Ver 1.5   28-Nov-2012   Sachin Birje                  */
/*                    : Ver 1.6   08-May-2013   Navina D.                     */
/*                    : Ver 1.7   18-Jun-2013   Sandip T.                     */
/*                    : Ver 1.8   19-Dec-2013   Shashi K.                     */
/*                    : Ver 2.0   13-Aug-2015   Ritesh Deolekar               */
/*                    : Ver 2.1   02-Feb-2016   Tanmay Warkhade								*/
/*                    : Ver 2.2   17-Oct-2019   Tanmay												*/
/*										:	Ver	2.4 	07-Oct-2020   Suchita D.	                  */
/*                    : Ver 2.5   28-Jul-2021   Tanmay Patel                  */ 
/*                    : Ver 2.6   20-Aug-2021   Tanmay Patel                  */                                                   
/*                    : Ver 2.7   15-Jul-2022   Sachin Birje                  */                                                   
/*                    : Ver 2.8   07-Mar-2023   Samip M												*/
/******************************************************************************/
/*  Ver 1.0           : New Release                                           */
/*  Ver 1.1           : Bug Fix ( Swati A.B )																  */
/*  Ver 1.2           : Changes for Report                                    */
/*  Ver 1.3           : Changes for console messages Mahesh Shinde            */
/*  Ver 1.4           : Game Backoffice Automation                            */
/*  Ver 1.5           : FNO BSE SPAN Changes | Sachin Birje                   */
/*  Ver 1.6           : Balance amount bug fix (Navina D.)                    */
/*  Ver 1.7           : Span Output string handling changes                   */
/*  Ver 1.8           : Error will not come in console if no marginable entry */
/*											in position table.                   									*/
/*  Ver 2.0           : Contract Master and Trade Quote Table Merger Changes  */
/*  Ver 2.1           : Migration of RI to NRI 																*/ 
/*  Ver 2.2           : Input string size change CR-ISEC14-128972							*/
/*  Ver 2.4           : Trigger Price Changes ( Suchita )                     */
/*  Ver 2.5           : CR-ISEC10-156987 MarginShotfall_Communication         */
/*  Ver 2.6           : Minor change                                          */
/*  Ver 2.7           : SPAN_BOD_MRGN_CR-ISEC14-172812                        */
/*  Ver 2.8           : Changes for Client level lock													*/
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>

/*Add header files here */
#include <fml_def.h>
/* COMMENTED IN VER TOL : TUX on LINUX (Ravindra) * #include <fo_view_def.h> */
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_tuxlib.h>
#include <fml_rout.h>
#include <fo.h>
#include <fn_ddr.h>
#include <fn_log.h>             
#include <fn_session.h>         
#include <fn_read_debug_lvl.h> 
#include <fn_span_lib.h>       /*** Span Header File ***/ 
#include <fn_pos.h>       
#include <math.h>       

void SFO_PRSEODMTM( TPSVCINFO *rqst )
{
  FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;
  FBFR32 *ptr_fml_Ibuf_scall;
  FBFR32 *ptr_fml_Obuf_scall;

  char 		c_ServiceName [ 33 ];
  char 		c_err_msg [ 256 ];
  int 		i_returncode;
  int 		i_ip_len;
  int 		i_op_len;
  int 		i_trnsctn;
	int 		i_cntrct_cnt = 0;		/*** Ver 1.1 ***/

  /*** Following Added ***/
  long 		li_cnt 			= 0;
  long 		l_report_no	= 0;
  char  	c_xchng_cd[4];
  char  	c_rout_crt[4];
  char  	c_user_id[9];
  long  	l_session_id = 0;
  long  	l_cls_prc		 = 0;
  long  	li_tmp_opnqty = 0;
	char  	c_cln_mtch_accnt[11];
	char  	c_undrlyng[7];
	char c_reason_cd [ 2000 ];

  varchar c_exp_dt[LEN_DATE];
  varchar vc_xchng_cd[20];
	sql_cursor     sys_cursor;      /* a cursor variable */



  char 		c_tag [ 256 ];
  char 		c_msg [ 256 ];

  /*** Ver 1.4 ****/
  char c_program_nm[33];
  char c_xchng_cd_tmp[4];
  char c_match_id[11];
  char c_error_txt[256];

  MEMSET(c_program_nm);
  MEMSET(c_xchng_cd_tmp);
  MEMSET(c_match_id);
  MEMSET(c_error_txt);
  /*** Ver 1.4 ends ***/

  strcpy(c_program_nm,"bat_span_eodmtm");		 /*** Ver 1.4  ***/

	/*** Structure Declaration ***/

 struct st_err_msg *ptr_st_err_msg;

  /*** Following Added ***/
  double  d_ltp = 0.0;
  /*** long    l_strike_prc = 0; *** Ver 1.1 ***/
  char    c_expry_dt[10];
  long    l_max_opn_qty = 0;
  long    l_min_opn_qty = 0;
  long    l_temp_qty    = 0;
  char    c_inp_strng1[ 16000 ];   /*** changed from 8000 to 16000 in Ver 2.2 ***/
  char    c_inp_strng2[ 16000 ];   /*** changed from 8000 to 16000 in Ver 2.2 ***/
  char    c_inp_strng11[ 16000 ];  /*** changed from 8000 to 16000 in Ver 2.2 ***/
  char    c_inp_strng22[ 16000 ];  /*** changed from 8000 to 16000 in Ver 2.2 ***/
  long    l_prtfl_seq1  = 0;
  long    l_prtfl_seq2  = 0;
	char    c_seq_num1[12000];
  char    c_seq_num2[12000];
  char    c_inp_strng[ 16000 ];
  char    c_pipe_id[3];
  long    l_cntr  = 0;
  long  	l_length1 = 0;
  long  	l_length2 = 0;
  long  	li_len_tobuf = 0;
  long  	l_prmum_qty  = 0;
	long  	l_basket_id  = 0;  /*** 21-Oct-2011 ***/
	int 		i_rtrn_cd1;
  char 		c_op_strng[ 16000 ];
  char 		c_op_strng1[ 16000 ];
  char 		c_op_strng2[ 16000 ];
  char 		*null_ptr  = 0;
  char 		c_mrgn_indctr[3];
	char 		c_mtch_accnt1[11];
	char 		c_spn_mrgn1[20];
	char 		c_nov1[20];
	char 		c_total_mrgn1[20];
	char 		c_mtch_accnt2[11];
	char 		c_spn_mrgn2[20];
  char 		c_nov2[20];
  char 		c_total_mrgn2[20];
	char		c_strk_prc[20];				/*** Ver 1.1 ***/
  char    c_xchng_cd1[4];        /*** Ver 1.5 ***/
  char    c_xchng_cd2[4];        /*** Ver 1.5 ***/
  char    c_run_mode= 'N';     /** Ver 2.5 **/

  double 	d_spn_mrgn1    = 0.0;
  double 	d_spn_mrgn2    = 0.0;
  double 	d_diff_mrgn    = 0.0;
  double 	d_balance_amt  = 0.0;
  double 	d_nov1         = 0.0;
  double 	d_nov2         = 0.0;
  double 	d_nov          = 0.0;
  double 	d_expsr        = 0.0;
  double 	d_total_mrgn1  = 0.0;
  double 	d_total_mrgn2  = 0.0;
  double  d_total_mrgn  = 0.0;
  double  d_spn_mrgn    = 0.0;
	double  d_mltplr      = 0.0;
  double  d_min_mrgn    = 0.0;
  double  d_intl_mrgn	  = 0.0;
  double  d_undrlyng_pl = 0.0;
  double  d_cntrct_pl   = 0.0;
  double  d_total_prmum = 0.0;
  double  d_blkd_prmum  = 0.0;
  double  d_opt_prmum   = 0.0;
  double  d_oblckd_amnt = 0.0;
  double  d_diff_pl     = 0.0;
  double  d_blckd_pnl   = 0.0;
  double  d_actl_mrgn_reqd = 0.0;
  double  d_min_mrgn_req   = 0.0;
  double  d_cls_prc = 0.0;
  double  d_expsr_mrgn = 0.0;      
  double  d_min_expsr_mrgn  = 0.0; 
  double  d_min_expsr  = 0.0;      
  double  d_upd_amount = 0.0;       
	double  d_strike_prc = 0.0;		/*** Ver 1.1 ***/
  int     i_expsr_rtrn = 0;        
  char   c_extra_update='\0'; /*** ver 2.4 ***/
  char   c_trd_dt_temp[257]; /*** ver 2.4 ***/
  MEMSET( c_trd_dt_temp ); /*** ver 2.4 ***/

  /** Ver 2.7 Starts here **/
  int    i_ret_val=0;

  double d_spn_bmrgn1=0;
  double d_bnov1=0;
  double d_total_bmrgn1=0;

  double d_spn_bmrgn2=0;
  double d_bnov2=0;
  double d_total_bmrgn2=0;

  double d_spn_bmrgn=0;
  double d_bnov=0;
  double d_total_bmrgn=0;
  /** Ver 2.7 Ends here **/

  char c_narration_id[4];
  char c_dr_without_lmt_flg;

  struct 	st_xchngbook st_ip_xchngbk;
  struct 	st_xchngbook *ptr_ip_xchngbk;
  struct 	st_xchngbook st_op_xchngbk ;
  struct 	st_orderbook st_ip_orderbook;
  struct 	st_orderbook st_op_orderbook;
  struct 	st_tradebook st_tradebk;
  struct 	st_pstn_actn st_pstn_actn_var;
  struct 	st_fus_undrlyng_pstn st_undfus_pos_crrnt ;
  struct 	st_fus_undrlyng_pstn st_undfus_pos_to_be ;
  struct 	st_fcp_cntrct_pstn   st_cntfcp_pos_crrnt ;
  struct 	st_fcp_cntrct_pstn   st_cntfcp_pos_to_be ;
  struct 	st_fcp_cntrct_pstn   st_cntpos_old ;
  struct 	st_fcp_cntrct_pstn   st_cntpos_md_rc  ; /*** the contract on which actn is applied ***/





  EXEC SQL BEGIN DECLARE SECTION;
 	struct 		vw_pstn_actn st_pstn_actn;
 	varchar   c_trd_dt[LEN_DATE];
  EXEC SQL INCLUDE "table/iai_info_account_info.h"; /* Ver 2.1 */
  EXEC SQL END DECLARE SECTION;

  ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
  strcpy( c_ServiceName, rqst->name );
	INITDBGLVL(c_ServiceName);            

	/*** Getting Inputs In FMLs  ***/


   i_returncode = fn_unpack_fmltovar ( c_ServiceName,
                                    c_err_msg,
                                    ptr_fml_Ibuf,
                                    10,  /** Change from 9 to 10 **/
                                    FFO_EBA_MTCH_ACT_NO, ( char * )st_undfus_pos_crrnt.c_cln_mtch_accnt, NULL,
                                    FFO_XCHNG_CD, ( char * )c_xchng_cd, NULL,
                                    FFO_UNDRLYNG, ( char * )st_undfus_pos_crrnt.c_undrlyng, NULL,
                                    FFO_CTGRY_INDSTK, ( char * )&st_undfus_pos_crrnt.c_indstk, NULL,
                                    FFO_TRD_DT, ( char * )c_trd_dt.arr, NULL,
                                    FFO_RUN_NUM, ( char * )&l_report_no, NULL,
                                    FFO_ROUT_CRT, ( char * )c_rout_crt, NULL,
                                    FFO_BAT_TAG, ( char * )c_tag, NULL,
                                    FFO_REC_NO, ( char * )&li_cnt, NULL,
                                    FFO_IS_FLG, ( char * )&c_run_mode, NULL );  /** Ver 2.5 **/

  if( i_returncode != 0 )
  {
    fn_errlog( c_ServiceName, "S31005", LIBMSG , c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
    tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
  } 
	

 


  /*** Added for Order Routing ***/
  fn_init_ddr_val ( c_rout_crt );

	SETLEN ( c_trd_dt );


  strcpy(c_user_id,"system");  
  l_session_id  = 0;           

  if( DEBUG_MSG_LVL_0 )
 {          
    fn_userlog( c_ServiceName, "Match Account :%s:", st_undfus_pos_crrnt.c_cln_mtch_accnt);
    fn_userlog( c_ServiceName, "Exchange code :%s:", c_xchng_cd );
    fn_userlog( c_ServiceName, "Underlyng     :%s:", st_undfus_pos_crrnt.c_undrlyng);
    fn_userlog( c_ServiceName, "Category      :%c:", st_undfus_pos_crrnt.c_indstk);
    fn_userlog( c_ServiceName, "Trade date    :%s:", c_trd_dt.arr );
    fn_userlog( c_ServiceName, "Report number :%ld:", l_report_no );
    fn_userlog( c_ServiceName, "c_run_mode    :%c:", c_run_mode);  /** Ver 2.5 **/
 }

  sprintf ( c_msg, "Processing match a/c - [%s], Underlying - [%s], Expiry dt - [%s], Tag - [%c] ",
        st_undfus_pos_crrnt.c_cln_mtch_accnt,
        st_undfus_pos_crrnt.c_undrlyng);

  /*fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag ); */

  /** Ver 1.4 starts ****/
   strcpy(c_xchng_cd_tmp,c_xchng_cd);
   strcpy(c_match_id,st_undfus_pos_crrnt.c_cln_mtch_accnt);
  /** Ver 1.4 Ends Here ***/

  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	/** Commented and changed for Ver 2.8 ***
  i_returncode = fn_lock_usr( c_ServiceName,
                              st_undfus_pos_crrnt.c_cln_mtch_accnt); 
		** Ver 2.8 **/
  i_returncode = fn_lock_fno( c_ServiceName,
                              st_undfus_pos_crrnt.c_cln_mtch_accnt); 
  if ( i_returncode == -1 )
  {
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }


	/*** Preparing Position Structure ***/
	
	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog( c_ServiceName, "Preparing Position Structure to be sent to the fn_upd_spnlimits");
  }
	strcpy( st_pstn_actn_var.c_cln_mtch_accnt ,st_undfus_pos_crrnt.c_cln_mtch_accnt);
  strcpy( st_pstn_actn_var.c_xchng_cd , c_xchng_cd);
  strcpy( st_pstn_actn_var.c_undrlyng , st_undfus_pos_crrnt.c_undrlyng);
  st_pstn_actn_var.c_ctgry_indstk =  st_undfus_pos_crrnt.c_indstk;
   /*** Tradr date is left ***/


	/*** Getting the Blocked P&L and Initial Margin ***/

  EXEC SQL
  SELECT   FUS_BLCKD_PL,
					 FUS_INITIAL_MRGN
	INTO     :st_undfus_pos_crrnt.d_blckd_pl,
           :st_undfus_pos_crrnt.d_initial_mrgn
	FROM     FUS_FO_UNDRLYNG_SPN_PSTN
	WHERE    FUS_CLM_MTCH_ACCNT = :st_undfus_pos_crrnt.c_cln_mtch_accnt
  AND      FUS_UNDRLYNG       = :st_undfus_pos_crrnt.c_undrlyng
  AND      FUS_INDSTK         = :st_undfus_pos_crrnt.c_indstk
  AND      FUS_XCHNG_CD       = :c_xchng_cd	; 



  if ( SQLCODE != 0 )
  {
   	fn_errlog( c_ServiceName, "S31010",SQLMSG,c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /* Added in ver 1.3 */
   	strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    /* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );   Commented in ver 1.3 */
		tpfree((char *)ptr_fml_Obuf);
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/ 
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	/*** Releasing Blocked Margin ***/

	if(DEBUG_MSG_LVL_0)
	{
		fn_userlog( c_ServiceName, "Releasing  Blocked Margin");
		fn_userlog( c_ServiceName, "Intial Margin Is :%lf: ",st_undfus_pos_crrnt.d_initial_mrgn);
	}

  strcpy( c_narration_id ,RELEASE_OF_TRD_MRGN_ON_EODMTM );   
  /*** Narrtn to be Added-RELEASE_OF_MARGIN_ON_EOD_MTM ***/

  /** strcpy( remarks , "Relasing Margin on EOD MTM " ); need to find out ***/
	sprintf ( st_pstn_actn_var.c_ref_rmrks,"SPAN-%s", st_pstn_actn_var.c_undrlyng);
	

  if ( st_undfus_pos_crrnt.d_initial_mrgn != 0  && c_run_mode != 'R' ) /** Run mode added in Ver 2.5 **/
	{
		 d_balance_amt  = 0.0;

     i_returncode = fn_upd_spnlimits( c_ServiceName,
                                    &st_pstn_actn_var,
                                    ptr_st_err_msg,
                                    c_narration_id,
                                    DEBIT_WITHOUT_LIMIT,
                                    st_undfus_pos_crrnt.d_initial_mrgn,
                                    &d_balance_amt);

      if ( i_returncode != 0 )
      {
					
           	fn_userlog( c_ServiceName, "Inside ERROR Condtion");
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /* Added in ver 1.3 */
            fn_errlog( c_ServiceName, "S31015",LIBMSG , c_err_msg );
						strcpy ( c_msg, "System error. Contact system support" );
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
            /* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );   Commented in ver 1.3 */
						tpfree((char *)ptr_fml_Obuf);
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
            tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }


   }

   /*** Releasing  Notional P&L ***/

	 if(DEBUG_MSG_LVL_0)
	 {
		fn_userlog( c_ServiceName, RELEASE_BLKD_PROFIT_LOSS_ON_EOD_MTM );
		fn_userlog( c_ServiceName, "P&L Is :%lf: ",st_undfus_pos_crrnt.d_blckd_pl);
   }

	 strcpy( c_narration_id , "PL");
	 sprintf ( st_pstn_actn_var.c_ref_rmrks,"SPAN-%s", st_pstn_actn_var.c_undrlyng);
   /*** Narrtn to be Added- RELEASE_OF_NOTIONAL_PROFIT_LOSS_ON_EOD_MTM ***/
	
		
   if ( st_undfus_pos_crrnt.d_blckd_pl != 0 && c_run_mode != 'R' ) /** Run mode added in Ver 2.5 **/ 
	 {

	 	 d_balance_amt  = 0.0;	
		 
		 if(DEBUG_MSG_LVL_3)
		 {
			fn_userlog( c_ServiceName, "Before fn_upd_spnlimits :i_returncode Is :%d:",i_returncode);
     }

		 i_returncode = fn_upd_spnlimits( c_ServiceName,
                                    &st_pstn_actn_var,
                                    ptr_st_err_msg,
                                    c_narration_id,
                                    DEBIT_WITHOUT_LIMIT,
                                    st_undfus_pos_crrnt.d_blckd_pl,
                                    &d_balance_amt);

		 if(DEBUG_MSG_LVL_3)
		 {
     	fn_userlog( c_ServiceName, "i_returncode Is :%d:",i_returncode);
     }
		 if ( i_returncode != 0 )
     {
				fn_errlog( c_ServiceName, "S31020",LIBMSG , c_err_msg );
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /* Added in ver 1.3 */
				strcpy ( c_msg, "System error. Contact system support" );
				fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
				/* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );     Commented in ver 1.3 */
				tpfree((char *)ptr_fml_Obuf);
        strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/   
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );	
     }

    } /** End of P&L **/


   /******** Set UPOS_to_be fields to default ********/
   strcpy( st_undfus_pos_to_be.c_cln_mtch_accnt,st_pstn_actn_var.c_cln_mtch_accnt );
   strcpy( st_undfus_pos_to_be.c_xchng_cd, st_pstn_actn_var.c_xchng_cd );
   strcpy( st_undfus_pos_to_be.c_undrlyng, st_pstn_actn_var.c_undrlyng );
   st_undfus_pos_to_be.c_indstk  = st_pstn_actn_var.c_ctgry_indstk; /** Index to be selected **/

   st_undfus_pos_to_be.l_uibuy_qty = 0;
   st_undfus_pos_to_be.d_uibuy_val = 0;
   st_undfus_pos_to_be.l_uisell_qty = 0;
   st_undfus_pos_to_be.d_uisell_val = 0;
   st_undfus_pos_to_be.l_uexbuy_qty = 0;
   st_undfus_pos_to_be.d_uexbuy_val = 0;
   st_undfus_pos_to_be.l_uexsell_qty = 0;
   st_undfus_pos_to_be.d_uexsell_val = 0;
   st_undfus_pos_to_be.c_uopnpstn_flw = 'N';


   st_undfus_pos_to_be.l_ubuy_exctd_qty = 0;
   st_undfus_pos_to_be.l_usell_exctd_qty = 0;

   st_undfus_pos_to_be.l_uopnpstn_qty = 0;
   st_undfus_pos_to_be.d_uopnpstn_val = 0;
   st_undfus_pos_to_be.d_umtm_opn_val = 0;

	 /*** Declare Contract  Cursor ***/

	 if(DEBUG_MSG_LVL_3)
	 {
		fn_userlog( c_ServiceName, "Declaring cursor to fetch each of the contracts ");
	 }

	 strcpy( c_cln_mtch_accnt ,st_pstn_actn_var.c_cln_mtch_accnt);
	 strcpy( c_xchng_cd,st_pstn_actn_var.c_xchng_cd);
	 strcpy( c_undrlyng,st_pstn_actn_var.c_undrlyng);
   
   EXEC SQL ALLOCATE :sys_cursor;

   EXEC SQL EXECUTE
   BEGIN
      OPEN :sys_cursor FOR
      SELECT  FCP_CLM_MTCH_ACCNT,
      FCP_XCHNG_CD,
      FCP_PRDCT_TYP,
      FCP_INDSTK,
      FCP_UNDRLYNG,
      TO_CHAR (FCP_EXPRY_DT,'DD-Mon-YYYY'),
      FCP_EXER_TYP,
      FCP_IBUY_QTY,
      FCP_IBUY_ORD_VAL,
      FCP_ISELL_QTY,
      FCP_ISELL_ORD_VAL,
      FCP_EXBUY_QTY,
      FCP_EXBUY_ORD_VAL,
      FCP_EXSELL_QTY,
      FCP_EXSELL_ORD_VAL,
      FCP_OPT_TYP,
      FCP_STRK_PRC,
      FCP_BUY_EXCTD_QTY,         
      FCP_SELL_EXCTD_QTY,      
      FCP_OPNPSTN_FLW,           
      FCP_OPNPSTN_QTY,           
      FCP_OPNPSTN_VAL,           
      FCP_MTM_OPN_VAL
     FROM   FCP_FO_SPN_CNTRCT_PSTN
     WHERE  FCP_CLM_MTCH_ACCNT   = : c_cln_mtch_accnt 
     AND    FCP_XCHNG_CD         = : c_xchng_cd
     AND    FCP_UNDRLYNG         = : c_undrlyng
		 /*** COmmented In Ver 1.1 
		 AND    ( FCP_OPNPSTN_QTY != 0
              OR FCP_IBUY_QTY >  0
							OR FCP_EXBUY_QTY > 0
              OR abs(FCP_ISELL_QTY)  > 0 
							OR abs(FCP_EXSELL_QTY) > 0 ) ***/
		 AND    ( FCP_IBUY_QTY 		<> 0     	OR     /*** Ver 1.1 ***/
              FCP_ISELL_QTY 	<> 0    	OR
              FCP_EXBUY_QTY 	<> 0    	OR
              FCP_EXSELL_QTY 	<> 0   		OR
              FCP_OPNPSTN_QTY <> 0  		OR
              FCP_OPT_PREMIUM <> 0 )
     ORDER BY FCP_EXPRY_DT asc;
     END;
    END-EXEC;


    if ( SQLCODE != 0 )
  	{
    	EXEC SQL FREE :sys_cursor;
    	fn_errlog ( c_ServiceName, "S31025", SQLMSG, c_err_msg );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /** Added in ver 1.3 **/
			strcpy ( c_msg, "System error. Contact system support" );
    	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    	/* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    Commented in ver 1.3 */
			tpfree((char *)ptr_fml_Obuf);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
    	tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );

 		}

    if(DEBUG_MSG_LVL_3)
		{
   		fn_userlog( c_ServiceName, "Prepration for String Formation ");
		}
    
		EXEC  SQL
      SELECT  SPN_PRTFL1_SEQ.nextval
      INTO    :l_prtfl_seq1
      FROM    DUAL;

    if ( SQLCODE  !=  0 )
    {
      fn_userlog(c_ServiceName,"Error While Fetching  Sequence Number 1.");
      fn_errlog(c_ServiceName,"S31030",SQLMSG, c_err_msg);
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /** Added in ver 1.3 **/
			strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      /* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );     Commented in ver 1.3 */
			tpfree((char *)ptr_fml_Obuf);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    EXEC  SQL
      SELECT  SPN_PRTFL1_SEQ.nextval
      INTO    :l_prtfl_seq2
      FROM    DUAL;
    if ( SQLCODE  !=  0 )
    {
      fn_userlog(c_ServiceName,"Error While Fetching  Sequence Number 1.");
      fn_errlog(c_ServiceName,"S31035",SQLMSG, c_err_msg);
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /** Added in ver 1.3 **/
			strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      /* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );   Commented in ver 1.3 */
			tpfree((char *)ptr_fml_Obuf);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
		
			MEMSET(c_inp_strng);    /*** Ver 1.1 ***/
			MEMSET(c_inp_strng1);
			MEMSET(c_inp_strng2);
			MEMSET(c_inp_strng11);
      MEMSET(c_inp_strng22);

      strcpy(c_inp_strng1,"1^");
      strcpy(c_inp_strng2,"|");

      /**** Ver 1.5 Starts Here *****/

      if( strcmp(c_xchng_cd,"NFO") == 0 )
      {
       strcat( c_inp_strng1 ,"NSE^");
      }
      else
      {
       strcat( c_inp_strng1 ,"BSE^");
      }
      /**** Ver 1.5 Ends Here ******/


      sprintf(c_seq_num1,"%ld",l_prtfl_seq1);
      sprintf(c_seq_num2,"%ld",l_prtfl_seq2);

      strcat( c_inp_strng1 , c_seq_num1 );
      strcat( c_inp_strng2 , c_seq_num2 );

      strcat(c_inp_strng1,"^");
      strcat(c_inp_strng2,"^");


			if(DEBUG_MSG_LVL_3)
			{
				fn_userlog( c_ServiceName, "Prepration For String Formation Ends  "); 
			}

			/*** 21-Oct-2100 ***/

   	  EXEC SQL
 	   			SELECT  FCB_UNDRLYNG_BSKT_ID
  	  		INTO    :l_basket_id
    			FROM    FCB_FO_CLN_BSKT_ALLTD
    			WHERE   FCB_CLN_LVL = ( SELECT  CLM_CLNT_LVL
      			                      FROM    CLM_CLNT_MSTR
        			                    WHERE   CLM_MTCH_ACCNT = :st_undfus_pos_crrnt.c_cln_mtch_accnt);
     	if ( SQLCODE != 0 )
   	  {
     	  fn_errlog ( c_ServiceName, "S31040", SQLMSG, c_err_msg );
      	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				strcpy ( c_msg, "System error. Contact system support" ); /* Added in ver 1.3 */
        fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );           /* Added in ver 1.3 */
        strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
      	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    	}

			/*** 21-Oct-2100 ***/


	 		/*** Start Fetching Each Of the Contracts For the given Mtach & Uderlyng ***/

		 d_undrlyng_pl = 0.0 ;

		 while(1)
	   {
				d_cntrct_pl				=	0.0;
				d_expsr_mrgn			=	0.0;
				d_min_expsr_mrgn	=	0.0;
				d_strike_prc			= 0.0;  /*** Ver 1.1 ***/

       MEMSET(c_exp_dt);

       EXEC SQL FETCH :sys_cursor
       INTO
        :st_cntfcp_pos_crrnt.c_cln_mtch_accnt,
        :st_cntfcp_pos_crrnt.c_xchng_cd,
        :st_cntfcp_pos_crrnt.c_prd_typ,
        :st_cntfcp_pos_crrnt.c_ctgry_indstk,
        :st_cntfcp_pos_crrnt.c_undrlyng,
        :c_exp_dt,
        :st_cntfcp_pos_crrnt.c_exer_typ,
        :st_cntfcp_pos_crrnt.l_ibuy_qty,
        :st_cntfcp_pos_crrnt.d_ibuy_ord_val,
        :st_cntfcp_pos_crrnt.l_isell_qty,
        :st_cntfcp_pos_crrnt.d_isell_ord_val,
        :st_cntfcp_pos_crrnt.l_exbuy_qty,
        :st_cntfcp_pos_crrnt.d_exbuy_ord_val,
        :st_cntfcp_pos_crrnt.l_exsell_qty,
        :st_cntfcp_pos_crrnt.d_exsell_ord_val,
        :st_cntfcp_pos_crrnt.c_opt_typ,
        :st_cntfcp_pos_crrnt.l_strike_prc,
        :st_cntfcp_pos_crrnt.l_buy_exctd_qty,
        :st_cntfcp_pos_crrnt.l_sell_exctd_qty,
        :st_cntfcp_pos_crrnt.c_opnpstn_flw,
        :st_cntfcp_pos_crrnt.l_opnpstn_qty,
        :st_cntfcp_pos_crrnt.d_opnpstn_val,
        :st_cntfcp_pos_crrnt.d_mtm_opn_val;

      if ( SQLCODE != 0 )
      {
        if ( SQLCODE == NO_DATA_FOUND )
        {
          break;
        }

        EXEC SQL CLOSE :sys_cursor;
        EXEC SQL FREE :sys_cursor;
        fn_errlog ( c_ServiceName, "S31045", SQLMSG,c_err_msg );
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );        /* Added in ver 1.3 */
				strcpy ( c_msg, "System error. Contact system support" );
        fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        /*  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    ***Commented in ver 1.3 */
				tpfree((char *)ptr_fml_Obuf);
        strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );

      }

			i_cntrct_cnt++;							/*** Ver 1.1 ***/

      SETNULL( c_exp_dt );
      strcpy ( st_cntfcp_pos_crrnt.c_expry_dt, (char *) c_exp_dt.arr );

      rtrim(st_cntfcp_pos_crrnt.c_xchng_cd);

      rtrim(st_cntfcp_pos_crrnt.c_undrlyng);

      rtrim(st_cntfcp_pos_crrnt.c_expry_dt);

      rtrim(st_pstn_actn_var.c_undrlyng);

     if(DEBUG_MSG_LVL_3)
     {    
      fn_userlog ( c_ServiceName, "Following Are the fetched Contracts Details ");

      fn_userlog ( c_ServiceName, "Match Account Is:%s:",st_cntfcp_pos_crrnt.c_cln_mtch_accnt);
      fn_userlog ( c_ServiceName, "Exchange Code Is :%s:",st_cntfcp_pos_crrnt.c_xchng_cd);
      fn_userlog ( c_ServiceName, "Product Type Is:%c:",st_cntfcp_pos_crrnt.c_prd_typ);
      fn_userlog ( c_ServiceName, "Stock /Index Category  Is:%c:",st_cntfcp_pos_crrnt.c_ctgry_indstk);
      fn_userlog ( c_ServiceName, "Underlying Is:%s:",st_cntfcp_pos_crrnt.c_undrlyng);
      fn_userlog ( c_ServiceName, "Option Type Is:%c:",st_cntfcp_pos_crrnt.c_opt_typ);
      fn_userlog ( c_ServiceName, "Strike Price Is:%ld:",st_cntfcp_pos_crrnt.l_strike_prc);
      fn_userlog ( c_ServiceName, "Expiry Date Is:%s:",c_exp_dt.arr);
      fn_userlog ( c_ServiceName, "Exercise Type Is:%c:",st_cntfcp_pos_crrnt.c_exer_typ);



      fn_userlog ( c_ServiceName, "Expiry date       :%s:", c_exp_dt.arr );
      fn_userlog ( c_ServiceName, "IWTL buy qty      :%ld:", st_cntfcp_pos_crrnt.l_ibuy_qty );
      fn_userlog ( c_ServiceName, "IWTL buy val      :%lf:", st_cntfcp_pos_crrnt.d_ibuy_ord_val);
      fn_userlog ( c_ServiceName, "IWTL sell qty     :%ld:", st_cntfcp_pos_crrnt.l_isell_qty );
      fn_userlog ( c_ServiceName, "IWTL sell val     :%lf:", st_cntfcp_pos_crrnt.d_isell_ord_val);
      fn_userlog ( c_ServiceName, "EXCH buy qty      :%ld:", st_cntfcp_pos_crrnt.l_exbuy_qty );
      fn_userlog ( c_ServiceName, "EXCH buy val      :%lf:", st_cntfcp_pos_crrnt.d_exbuy_ord_val);
      fn_userlog ( c_ServiceName, "EXCH sell qty     :%ld:", st_cntfcp_pos_crrnt.l_exsell_qty );
      fn_userlog ( c_ServiceName, "EXCH sell val     :%lf:", st_cntfcp_pos_crrnt.d_exsell_ord_val );
      fn_userlog ( c_ServiceName, "Option Type is    :%c: ", st_cntfcp_pos_crrnt.c_opt_typ);
      fn_userlog ( c_ServiceName, "Strike Price is   :%ld:", st_cntfcp_pos_crrnt.l_strike_prc);
      fn_userlog ( c_ServiceName, "Buy exctd qty     :%ld:", st_cntfcp_pos_crrnt.l_buy_exctd_qty );
      fn_userlog ( c_ServiceName, "Sell exctd qty    :%ld:", st_cntfcp_pos_crrnt.l_sell_exctd_qty );
      fn_userlog ( c_ServiceName, "Open qty          :%ld:", st_cntfcp_pos_crrnt.l_opnpstn_qty );
      fn_userlog ( c_ServiceName, "Original open val :%lf:", st_cntfcp_pos_crrnt.d_opnpstn_val);
      fn_userlog ( c_ServiceName, "MTMed open val    :%lf:", st_cntfcp_pos_crrnt.d_mtm_opn_val );
    }


			rtrim(st_cntfcp_pos_crrnt.c_cln_mtch_accnt);
			rtrim(st_cntfcp_pos_crrnt.c_xchng_cd);
			rtrim(st_cntfcp_pos_crrnt.c_undrlyng);

		 /*** Starting Forming String  for Margin***/
		 if(DEBUG_MSG_LVL_3)
		 {
				fn_userlog ( c_ServiceName, " Inside String formation And Option Premium Calculation :: ");		 
		 }
		 EXEC SQL
        SELECT  NVL(FTQ_LST_TRD_PRC,0)   /*** Ver 1.1 ***/
        INTO    :d_ltp
        FROM    FTQ_FO_TRD_QT
        WHERE  	FTQ_XCHNG_CD  = :st_cntfcp_pos_crrnt.c_xchng_cd 
				AND     FTQ_PRDCT_TYP = :st_cntfcp_pos_crrnt.c_prd_typ
        AND     FTQ_UNDRLYNG  = :st_cntfcp_pos_crrnt.c_undrlyng
        AND     FTQ_EXPRY_DT  = :c_exp_dt
        AND     FTQ_EXER_TYP  = :st_cntfcp_pos_crrnt.c_exer_typ
        AND     FTQ_OPT_TYP   = :st_cntfcp_pos_crrnt.c_opt_typ
        AND     FTQ_STRK_PRC  = :st_cntfcp_pos_crrnt.l_strike_prc ;

      if(SQLCODE  !=  0 )
      {
        fn_errlog ( c_ServiceName, "S31050", SQLMSG, c_err_msg );
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /* Added in ver 1.3 */
				strcpy ( c_msg, "System error. Contact system support" );
        fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
        EXEC SQL CLOSE :sys_cursor;
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        /* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );  Commented in ver 1.3 */
				tpfree((char *)ptr_fml_Obuf);
        strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
	
       d_ltp = d_ltp / 100;

      EXEC SQL
      SELECT  SEM_MAP_VL
      INTO    :vc_xchng_cd
      FROM    SEM_STCK_MAP
      WHERE   SEM_STCK_CD = :st_cntfcp_pos_crrnt.c_undrlyng
      /** AND     SEM_ENTTY   = 3; *Ver 1.5 **/
      AND     SEM_ENTTY   = DECODE(:st_cntfcp_pos_crrnt.c_xchng_cd,'NFO',3,14); /*** Ver 1.5 ***/

      if ( SQLCODE  !=  0 )
      {
        fn_errlog ( c_ServiceName, "S31055", SQLMSG, c_err_msg );
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /* ver 1.3 */
        strcpy ( c_msg, "System error. Contact system support" ); /* ver 1.3 */
        fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );           /* ver 1.3 */
        EXEC SQL CLOSE :sys_cursor;
				tpfree((char *)ptr_fml_Obuf);
        strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }

      SETNULL(vc_xchng_cd);	


		  EXEC SQL
      SELECT to_char(to_date(:st_cntfcp_pos_crrnt.c_expry_dt,'DD-Mon-YYYY'),'dd-Mon-YY')
      INTO  :c_expry_dt
      FROM  DUAL;

 
      if ( SQLCODE  !=  0 )
      {
        fn_errlog ( c_ServiceName, "S31060", SQLMSG, c_err_msg );
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );        /* ver 1.3 */
				strcpy ( c_msg, "System error. Contact system support" );
        fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
        EXEC SQL CLOSE :sys_cursor;
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        /*  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    * ver 1.3 */
				tpfree((char *)ptr_fml_Obuf);
        strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }

      /*** l_strike_prc  = st_cntfcp_pos_crrnt.l_strike_prc/100  ; *** Commented in Ver 1.1 ***/
			
			/*** Ver 1.1 starts here ***/
			d_strike_prc  = (double) st_cntfcp_pos_crrnt.l_strike_prc / 100.00  ;	
			sprintf(c_strk_prc,"%lf",d_strike_prc);

			fn_spn_rtrim(c_strk_prc,'0');
			fn_spn_rtrim(c_strk_prc,'.');
			/*** Ver 1.1 ends here ***/


			/**** Commented By Mahesh 
		  l_max_opn_qty = st_cntfcp_pos_crrnt.l_opnpstn_qty   +  st_cntfcp_pos_crrnt.l_ibuy_qty ;
      l_min_opn_qty = st_cntfcp_pos_crrnt.l_opnpstn_qty   +  st_cntfcp_pos_crrnt.l_isell_qty   ;
			*************************/

			l_max_opn_qty = st_cntfcp_pos_crrnt.l_opnpstn_qty  +  fn_maxl(st_cntfcp_pos_crrnt.l_ibuy_qty,st_cntfcp_pos_crrnt.l_exbuy_qty) ;
			l_min_opn_qty = st_cntfcp_pos_crrnt.l_opnpstn_qty  +  fn_maxl(abs(st_cntfcp_pos_crrnt.l_isell_qty),abs(st_cntfcp_pos_crrnt.l_exsell_qty)) * -1  ;


			if ( st_cntfcp_pos_crrnt.c_prd_typ ==  'O' )
			{			
      l_temp_qty    = fn_minl ( l_max_opn_qty , l_min_opn_qty );
      l_max_opn_qty = l_temp_qty  ;
      l_min_opn_qty = l_temp_qty  ;

			} /*** End Of Option Condition ***/

			if(DEBUG_MSG_LVL_3)
			{
				fn_userlog ( c_ServiceName, " d_ltp Is :: %lf",d_ltp);		 
				fn_userlog ( c_ServiceName, " c_expry_dt Is :: %s",c_expry_dt);		
				fn_userlog ( c_ServiceName, " c_strk_prc Is :: %s",c_strk_prc);			/*** Ver 1.1 ***/
				fn_userlog ( c_ServiceName, " Product Type Is:: %c",st_cntfcp_pos_crrnt.c_prd_typ);		
				fn_userlog ( c_ServiceName, " st_cntfcp_pos_crrnt.l_opnpstn_qty Is :: %ld",st_cntfcp_pos_crrnt.l_opnpstn_qty);		
				fn_userlog ( c_ServiceName, " st_cntfcp_pos_crrnt.l_ibuy_qty Is :: %ld",st_cntfcp_pos_crrnt.l_ibuy_qty);				
				fn_userlog ( c_ServiceName, " st_cntfcp_pos_crrnt.l_isell_qty Is :: %ld",st_cntfcp_pos_crrnt.l_isell_qty);	    
				fn_userlog ( c_ServiceName, " l_max_opn_qty Is :: %ld",l_max_opn_qty);		
				fn_userlog ( c_ServiceName, " l_min_opn_qty Is :: %ld",l_min_opn_qty);		
			}

			if(	l_cntr	==	0	)
			{
				if(DEBUG_MSG_LVL_3)
				{
					fn_userlog(c_ServiceName,"l_cntr Is :%ld:",l_cntr);
				}

				if(st_cntfcp_pos_crrnt.c_prd_typ	==	'F')
				{
		  		sprintf(c_inp_strng11,"%s^%s~%c:%s^%ld^%lf",st_cntfcp_pos_crrnt.c_cln_mtch_accnt,vc_xchng_cd.arr,st_cntfcp_pos_crrnt.c_prd_typ,c_expry_dt,l_max_opn_qty,d_ltp);

      	strcat(c_inp_strng1,c_inp_strng11);

      	sprintf(c_inp_strng22,"%s^%s~%c:%s^%ld^%lf",st_cntfcp_pos_crrnt.c_cln_mtch_accnt,vc_xchng_cd.arr,st_cntfcp_pos_crrnt.c_prd_typ,c_expry_dt,l_min_opn_qty,d_ltp);

      	strcat(c_inp_strng2,c_inp_strng22);

				}
				else
				{
      		sprintf(c_inp_strng11,"%s^%s~%c:%s:%c%c:%s^%ld^%lf",st_cntfcp_pos_crrnt.c_cln_mtch_accnt,vc_xchng_cd.arr,st_cntfcp_pos_crrnt.c_prd_typ,c_expry_dt,st_cntfcp_pos_crrnt.c_opt_typ,st_cntfcp_pos_crrnt.c_exer_typ,c_strk_prc,l_max_opn_qty,d_ltp); /*** Strike prc changed from long to char in Ver 1.1 ***/

      		strcat(c_inp_strng1,c_inp_strng11);

      		sprintf(c_inp_strng22,"%s^%s~%c:%s:%c%c:%s^%ld^%lf",st_cntfcp_pos_crrnt.c_cln_mtch_accnt,vc_xchng_cd.arr,st_cntfcp_pos_crrnt.c_prd_typ,c_expry_dt,st_cntfcp_pos_crrnt.c_opt_typ,st_cntfcp_pos_crrnt.c_exer_typ,c_strk_prc,l_min_opn_qty,d_ltp); /*** Strike prc changed from long to char in Ver 1.1 ***/

      		strcat(c_inp_strng2,c_inp_strng22);

				}
			}	
			else
			{
				if(st_cntfcp_pos_crrnt.c_prd_typ  ==  'F')
        {
        	sprintf(c_inp_strng11,"%s~%c:%s^%ld^%lf",vc_xchng_cd.arr,st_cntfcp_pos_crrnt.c_prd_typ,c_expry_dt,l_max_opn_qty,d_ltp);

        	strcat(c_inp_strng1,c_inp_strng11);

        	sprintf(c_inp_strng22,"%s~%c:%s^%ld^%lf",vc_xchng_cd.arr,st_cntfcp_pos_crrnt.c_prd_typ,c_expry_dt,l_min_opn_qty,d_ltp);

        	strcat(c_inp_strng2,c_inp_strng22);

        }
        else
        {
          sprintf(c_inp_strng11,"%s~%c:%s:%c%c:%s^%ld^%lf",vc_xchng_cd.arr,st_cntfcp_pos_crrnt.c_prd_typ,c_expry_dt,st_cntfcp_pos_crrnt.c_opt_typ,st_cntfcp_pos_crrnt.c_exer_typ,c_strk_prc,l_max_opn_qty,d_ltp); /*** Strike prc changed from long to char in Ver 1.1 ***/

          strcat(c_inp_strng1,c_inp_strng11);

          sprintf(c_inp_strng22,"%s~%c:%s:%c%c:%s^%ld^%lf",vc_xchng_cd.arr,st_cntfcp_pos_crrnt.c_prd_typ,c_expry_dt,st_cntfcp_pos_crrnt.c_opt_typ,st_cntfcp_pos_crrnt.c_exer_typ,c_strk_prc,l_min_opn_qty,d_ltp); /*** Strike prc changed from long to char in Ver 1.1 ***/

          strcat(c_inp_strng2,c_inp_strng22);

        }
			}
	

		 /*** End of Forming String  for Margin ***/

		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog( c_ServiceName, "Get the  closing price");
			fn_userlog( c_ServiceName, "Exchange Code Is :%s:",st_cntfcp_pos_crrnt.c_xchng_cd);
			fn_userlog( c_ServiceName, "Product Type Is :%c:",st_cntfcp_pos_crrnt.c_prd_typ);
			fn_userlog( c_ServiceName, "Unrlying Is :%s:",st_cntfcp_pos_crrnt.c_undrlyng);
			fn_userlog( c_ServiceName, "Expiry Date :%s:",c_exp_dt.arr);
			fn_userlog( c_ServiceName, "Exercise Type Is :%c:",st_cntfcp_pos_crrnt.c_exer_typ);
			fn_userlog( c_ServiceName, "Option Type Is :%c:",st_cntfcp_pos_crrnt.c_opt_typ);
			fn_userlog( c_ServiceName, "Strike Price Is :%ld:",st_cntfcp_pos_crrnt.l_strike_prc);
			fn_userlog( c_ServiceName, "Trade Date Is :%s:",c_trd_dt.arr);
		}
		
		if( st_cntfcp_pos_crrnt.c_prd_typ == 'F' && c_run_mode != 'R' ) /** Run Mode Added in Ver 2.5 **/
		{
		/*** Commented in Ver 2.0  ***
	
   		 EXEC SQL
    		SELECT  fcm_cls_prc
    		INTO    :d_cls_prc
    		FROM    fcm_fo_cntrct_mstr
    		WHERE   fcm_xchng_cd    = :st_cntfcp_pos_crrnt.c_xchng_cd
    		AND     fcm_prdct_typ   = :st_cntfcp_pos_crrnt.c_prd_typ
    		AND     fcm_undrlyng    = :st_cntfcp_pos_crrnt.c_undrlyng
    		AND     fcm_expry_dt    = :c_exp_dt
    		AND     fcm_exer_typ    = :st_cntfcp_pos_crrnt.c_exer_typ
				AND     fcm_opt_typ     = :st_cntfcp_pos_crrnt.c_opt_typ
				AND     fcm_strk_prc    = :st_cntfcp_pos_crrnt.l_strike_prc
    		AND     fcm_cls_prc_dt  = to_date(:c_trd_dt,'dd-mon-yyyy');

		 *** Ver 2.0 comment Ends ***/

		 /*** Ver 2.0 Starts ***/

			 EXEC SQL
        SELECT  ftq_cls_prc
        INTO    :d_cls_prc
        FROM    ftq_fo_trd_qt
        WHERE   ftq_xchng_cd    = :st_cntfcp_pos_crrnt.c_xchng_cd
        AND     ftq_prdct_typ   = :st_cntfcp_pos_crrnt.c_prd_typ
        AND     ftq_undrlyng    = :st_cntfcp_pos_crrnt.c_undrlyng
        AND     ftq_expry_dt    = :c_exp_dt
        AND     ftq_exer_typ    = :st_cntfcp_pos_crrnt.c_exer_typ
        AND     ftq_opt_typ     = :st_cntfcp_pos_crrnt.c_opt_typ
        AND     ftq_strk_prc    = :st_cntfcp_pos_crrnt.l_strike_prc
        AND     ftq_cls_prc_dt  = to_date(:c_trd_dt,'dd-mon-yyyy');	

     /*** Ver 2.0 Ends ***/ 

  		if ( SQLCODE != 0 )
  		{
    		if ( SQLCODE == NO_DATA_FOUND )
    		{
      		fn_errlog( c_ServiceName, "B28546",DEFMSG,c_err_msg);
      		strcpy ( c_msg, "Closing price not available for the contract" );
	        sprintf(c_error_txt,"Closing price not available for the contract - %s-%c-%s-%s-%s",
					st_cntfcp_pos_crrnt.c_xchng_cd,st_cntfcp_pos_crrnt.c_prd_typ,st_cntfcp_pos_crrnt.c_undrlyng,c_exp_dt,c_trd_dt.arr );  /*** Ver 1.4 ***/
    		}
    		else
    		{
      		fn_errlog( c_ServiceName, "S31065",SQLMSG,c_err_msg);
      		strcpy ( c_msg, "System error. Contact system support" );
	        strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    		}
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /* Ver 1.3 */
    		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
   			/* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); Ver 1.3 */
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/   
    		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  		}
			
			fn_userlog(c_ServiceName,"Future Closing Price Is :%lf:",d_cls_prc);
		}
		else if ( st_cntfcp_pos_crrnt.c_prd_typ == 'O' && c_run_mode != 'R' ) /** Run Mode Added in Ver 2.5 **/   /*** Ver 1.1 ***/
    {

      /*** Please Note the Option Closing Price is used only in the report table ***/
      /*** Hence , even  if the Closing Price Is not Available it will continue  ***/
      /*** with the processing.                                                  ***/

      EXEC SQL
        SELECT  NVL(FTQ_CLS_PRC,0)
        INTO    :d_cls_prc
        FROM    FTQ_FO_TRD_QT
        WHERE   FTQ_XCHNG_CD  = :st_cntfcp_pos_crrnt.c_xchng_cd
        AND     FTQ_PRDCT_TYP = :st_cntfcp_pos_crrnt.c_prd_typ
        AND     FTQ_UNDRLYNG  = :st_cntfcp_pos_crrnt.c_undrlyng
        AND     FTQ_EXPRY_DT  = :c_exp_dt
        AND     FTQ_EXER_TYP  = :st_cntfcp_pos_crrnt.c_exer_typ
        AND     FTQ_OPT_TYP   = :st_cntfcp_pos_crrnt.c_opt_typ
        AND     FTQ_STRK_PRC  = :st_cntfcp_pos_crrnt.l_strike_prc ;

      if ( SQLCODE != 0 )
      {
        if ( SQLCODE == NO_DATA_FOUND )
        {
          fn_errlog( c_ServiceName, "B28546",DEFMSG,c_err_msg);
					fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /* Ver 1.3 */
          strcpy ( c_msg, "Closing price not available for the Opiton contract.");
          fn_userlog(c_ServiceName,"Closing price not available for the Option Contract ...continuing with the processing ");
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
        }
        else
        {
          fn_errlog( c_ServiceName, "S31070",SQLMSG,c_err_msg);
					fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );  /* Ver 1.3 */
          strcpy ( c_msg, "System error. Contact system support" );
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          /*  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );  Ver 1.3 */
          strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }

      }

			fn_userlog(c_ServiceName,"Option Closing Price Is :%lf:",d_cls_prc);

    }
    /** Ver 2.5 Starts **/
    else if ( c_run_mode == 'R' ) 
    {
      EXEC SQL
        SELECT  NVL(FTQ_LST_TRD_PRC,0)
        INTO    :d_cls_prc
        FROM    FTQ_FO_TRD_QT
        WHERE   FTQ_XCHNG_CD  = :st_cntfcp_pos_crrnt.c_xchng_cd
        AND     FTQ_PRDCT_TYP = :st_cntfcp_pos_crrnt.c_prd_typ
        AND     FTQ_UNDRLYNG  = :st_cntfcp_pos_crrnt.c_undrlyng
        AND     FTQ_EXPRY_DT  = :c_exp_dt
        AND     FTQ_EXER_TYP  = :st_cntfcp_pos_crrnt.c_exer_typ
        AND     FTQ_OPT_TYP   = :st_cntfcp_pos_crrnt.c_opt_typ
        AND     FTQ_STRK_PRC  = :st_cntfcp_pos_crrnt.l_strike_prc ;

        if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {
            fn_errlog( c_ServiceName, "B28546",DEFMSG,c_err_msg);
            fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
            strcpy ( c_msg, "Closing price not available for the Opiton contract.");
            fn_userlog(c_ServiceName,"Closing price not available for the Option Contract ...continuing with the processing ");
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          }
          else
          {
            fn_errlog( c_ServiceName, "S31075",SQLMSG,c_err_msg);
            fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );  
            strcpy ( c_msg, "System error. Contact system support" );
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
            strcpy(c_error_txt,"System error. Contact System Support"); 
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
            tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
          }
        }


    }

    /** Ver 2.5 Ends **/

  if( DEBUG_MSG_LVL_3 )
  {         
    fn_userlog(c_ServiceName,"d_cls_prc [%lf]",d_cls_prc);
    fn_userlog(c_ServiceName,"Calculating Futures  Notional P & L Contractwise ");
    fn_userlog(c_ServiceName,"Original  Open Position Value Is :%lf: ",st_cntfcp_pos_crrnt.d_opnpstn_val);
    fn_userlog(c_ServiceName," Open Position Quantity Is :%ld: ",st_cntfcp_pos_crrnt.l_opnpstn_qty);
  }

  if(st_cntfcp_pos_crrnt.c_prd_typ == 'F')
  {
      if ( st_cntfcp_pos_crrnt.l_opnpstn_qty != 0 )    
      {

        if( st_cntfcp_pos_crrnt.l_opnpstn_qty  > 0 )
        {
          d_cntrct_pl = ( d_cls_prc * (double) st_cntfcp_pos_crrnt.l_opnpstn_qty ) - st_cntfcp_pos_crrnt.d_opnpstn_val;
        }
        else if ( st_cntfcp_pos_crrnt.l_opnpstn_qty < 0 )
        {
					d_cntrct_pl	=	fabs(st_cntfcp_pos_crrnt.d_opnpstn_val) - ( d_cls_prc * (double)abs( st_cntfcp_pos_crrnt.l_opnpstn_qty) );

        }

      }

   }  /*** End of Future Notional P & L Calculation ***/



   if(DEBUG_MSG_LVL_3)
   {
    fn_userlog(c_ServiceName," Updating Limits For Contract Notional Futures P&L For FUTURES ");
   }

   strcpy( c_narration_id , PROFIT_LOSS_ON_EOD_MTM );
	 strcpy( st_pstn_actn_var.c_expry_dt ,(char *) c_exp_dt.arr);

	 /*** Commented On 01-Jan-2012 
   sprintf ( st_pstn_actn_var.c_ref_rmrks,"SPAN-FUT-%s-%s", st_pstn_actn_var.c_undrlyng,
						 st_pstn_actn_var.c_expry_dt);
		***/
		
	 sprintf ( st_pstn_actn_var.c_ref_rmrks,"FUT-%s-%s", st_pstn_actn_var.c_undrlyng,
             st_pstn_actn_var.c_expry_dt);

   if(DEBUG_MSG_LVL_3)
   {
   		fn_userlog(c_ServiceName," Current Contract P & L Is :%lf:",d_cntrct_pl);
   }


   if ( d_cntrct_pl!= 0 && c_run_mode != 'R' ) /** Run Mode Added in Ver 2.5 **/ 
   {

			/*** if ( strncmp( st_pstn_actn_var.c_cln_mtch_accnt, "751", 3) == 0 )  Commented in Ver 2.1 ***/
		
		  /****** Added in Ver 2.1 *******/
 			MEMSET(sql_iai_type);
      EXEC SQL
      SELECT  IAI_TYPE
      INTO    :sql_iai_type
      FROM    IAI_INFO_ACCOUNT_INFO
      WHERE   IAI_MATCH_ACCOUNT_NO  = :st_pstn_actn_var.c_cln_mtch_accnt ;

    	if ( SQLCODE != 0 )
    	{
          fn_errlog( c_ServiceName, "S31080",SQLMSG,c_err_msg);
          fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
          strcpy ( c_msg, "System error. Contact system support" );
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          EXEC SQL CLOSE :sys_cursor;
          tpfree((char *)ptr_fml_Obuf);
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          strcpy(c_error_txt,"System error. Contact System Support"); 
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}

			SETNULL(sql_iai_type);
			/****** Added Ver 2.1 Ends *******/

			if(strcmp(sql_iai_type.arr,"NRO_NON_PINS") == 0)   /****** check Added in Ver 2.1 *******/
    	{
     		strcpy(c_narration_id,TDS_NRI);
        strcpy(c_reason_cd,"Profit_Loss_on_EODMTM");
				
				if(DEBUG_MSG_LVL_3)
				{
					fn_userlog( c_ServiceName, "Calling fn_tds for Profit_Loss_on_EODMTM  :%s:",c_reason_cd );
				}

				d_balance_amt  = 0.0;

     		i_returncode = fn_spntds(  	c_ServiceName,
        		                        &st_pstn_actn_var,
            		                    ptr_st_err_msg,
                		                TDS_NRI,
                    		            c_reason_cd,
                        		        DEBIT_WITHOUT_LIMIT,
                            		    d_cntrct_pl,
                                		&d_balance_amt );

     		if ( i_returncode != 0 )
     		{
					fn_errlog( c_ServiceName, "S31085",LIBMSG , c_err_msg );
					fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    /* Ver 1.3 */
          EXEC SQL CLOSE :sys_cursor;
          strcpy ( c_msg, "System error. Contact system support" );
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          /* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); Ver 1.3 */
					tpfree((char *)ptr_fml_Obuf);
          strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     		}
    	}

			strcpy( c_narration_id , PROFIT_LOSS_ON_EOD_MTM );
			
			d_balance_amt  = 0.0;
			
      i_returncode = fn_upd_spnlimits(  c_ServiceName,
                                    &st_pstn_actn_var,
                                    ptr_st_err_msg,
                                    c_narration_id,
                                    DEBIT_WITHOUT_LIMIT,
                                    d_cntrct_pl,
                                    &d_balance_amt);
       if ( i_returncode != 0 )
       {
              fn_errlog( c_ServiceName, "S31090",LIBMSG , c_err_msg );
							fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /* Ver 1.3 */
              EXEC SQL CLOSE :sys_cursor;
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
              /* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );   Ver 1.3 */
							tpfree((char *)ptr_fml_Obuf);
              strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
              fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
              tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
       }


   }

   /*** Contract P&L Updation Ends  ***/
   


	 /*** l_cls_prc =  d_cls_prc ; ** Need to be asked ***/
	 l_cls_prc = (long) d_cls_prc ; /** Ver 1.1 ***/

   if(st_cntfcp_pos_crrnt.l_opnpstn_qty != 0 && st_cntfcp_pos_crrnt.c_prd_typ == 'F')
   {
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName,"------ Calculating MTM Open Pos Value ---------");
			fn_userlog(c_ServiceName,"Before fn_del_pos_in_val st_cntfcp_pos_crrnt.l_opnpstn_qty  Is :%ld: ",st_cntfcp_pos_crrnt.l_opnpstn_qty);
			fn_userlog(c_ServiceName,"Before fn_del_pos_in_val st_cntfcp_pos_crrnt.d_mtm_opn_val Is  :%lf: ",st_cntfcp_pos_crrnt.d_mtm_opn_val);
		}

		li_tmp_opnqty = st_cntfcp_pos_crrnt.l_opnpstn_qty;	
		fn_del_pos_in_val(  st_cntfcp_pos_crrnt.l_opnpstn_qty,
                                       st_cntfcp_pos_crrnt.d_mtm_opn_val,
                                       st_cntfcp_pos_crrnt.l_opnpstn_qty,
                                       &st_cntfcp_pos_crrnt.l_opnpstn_qty,
                                       &st_cntfcp_pos_crrnt.d_mtm_opn_val);

		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName,"After  fn_del_pos_in_val st_cntfcp_pos_crrnt.l_opnpstn_qty  Is :%ld: ",st_cntfcp_pos_crrnt.l_opnpstn_qty);
			fn_userlog(c_ServiceName,"After  fn_del_pos_in_val st_cntfcp_pos_crrnt.d_mtm_opn_val Is  :%lf: ",st_cntfcp_pos_crrnt.d_mtm_opn_val);
			fn_userlog(c_ServiceName,"l_cls_prc Is  :%ld: ",l_cls_prc);
		}

		fn_add_pos( li_tmp_opnqty,
                              l_cls_prc,
                              &(st_cntfcp_pos_crrnt.l_opnpstn_qty),
                              &(st_cntfcp_pos_crrnt.d_mtm_opn_val) );
		
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName,"After  fn_add_pos st_cntfcp_pos_crrnt.l_opnpstn_qty  Is :%ld: ",st_cntfcp_pos_crrnt.l_opnpstn_qty);
			fn_userlog(c_ServiceName,"After  fn_add_pos st_cntfcp_pos_crrnt.d_mtm_opn_val Is  :%lf: ",st_cntfcp_pos_crrnt.d_mtm_opn_val);

			fn_userlog(c_ServiceName,"------ Calculating Open Pos Value ---------");
			fn_userlog(c_ServiceName,"Before fn_del_pos_in_val st_cntfcp_pos_crrnt.l_opnpstn_qty  Is :%ld: ",st_cntfcp_pos_crrnt.l_opnpstn_qty);
			fn_userlog(c_ServiceName,"Before fn_del_pos_in_val st_cntfcp_pos_crrnt.d_opnpstn_val Is  :%lf: ",st_cntfcp_pos_crrnt.d_opnpstn_val);
		}

		li_tmp_opnqty = st_cntfcp_pos_crrnt.l_opnpstn_qty;
		fn_del_pos_in_val(  st_cntfcp_pos_crrnt.l_opnpstn_qty,
                                       st_cntfcp_pos_crrnt.d_opnpstn_val,
                                       st_cntfcp_pos_crrnt.l_opnpstn_qty,
                                       &st_cntfcp_pos_crrnt.l_opnpstn_qty,
                                       &st_cntfcp_pos_crrnt.d_opnpstn_val);

		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName,"After  fn_del_pos_in_val st_cntfcp_pos_crrnt.l_opnpstn_qty  Is :%ld: ",st_cntfcp_pos_crrnt.l_opnpstn_qty);
			fn_userlog(c_ServiceName,"After  fn_del_pos_in_val st_cntfcp_pos_crrnt.d_opnpstn_val Is  :%lf: ",st_cntfcp_pos_crrnt.d_opnpstn_val);
			fn_userlog(c_ServiceName,"l_cls_prc Is  :%ld: ",l_cls_prc);
		}

		fn_add_pos( li_tmp_opnqty,
                              l_cls_prc,
                              &(st_cntfcp_pos_crrnt.l_opnpstn_qty),
                              &(st_cntfcp_pos_crrnt.d_opnpstn_val) );
		
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName,"After  fn_add_pos st_cntfcp_pos_crrnt.l_opnpstn_qty  Is :%ld: ",st_cntfcp_pos_crrnt.l_opnpstn_qty);
			fn_userlog(c_ServiceName,"After  fn_add_pos st_cntfcp_pos_crrnt.d_mtm_opn_val Is  :%lf: ",st_cntfcp_pos_crrnt.d_opnpstn_val);
		}
   }

    memcpy ( &st_cntpos_old,  &st_cntfcp_pos_crrnt,  sizeof( st_cntpos_old ) );
    memcpy ( &st_cntpos_md_rc, &st_cntfcp_pos_crrnt,  sizeof( st_cntpos_md_rc ) );
    
		if(DEBUG_MSG_LVL_0)
		{
			fn_userlog(c_ServiceName," Adding Current Contract P & L :%lf: to Underlying P&L  ",d_cntrct_pl);
		}

    d_undrlyng_pl = d_undrlyng_pl + d_cntrct_pl ;
    
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName," Adding Current Contract  Open Qty :%ld: ",st_cntfcp_pos_crrnt.l_opnpstn_qty);
			fn_userlog(c_ServiceName," Adding Current Contract Open Pos Val :%lf: ",st_cntfcp_pos_crrnt.d_opnpstn_val);
			fn_userlog(c_ServiceName," Adding Current Contract MTM Val  :%lf: ",st_cntfcp_pos_crrnt.d_mtm_opn_val);
    }

		fn_sum_spnpos( st_cntfcp_pos_crrnt,&st_undfus_pos_to_be);

   
    if ( st_cntpos_md_rc.l_opnpstn_qty > 0 )
   {
    st_cntpos_md_rc.c_opnpstn_flw = BUY;
   }
   else if ( st_cntpos_md_rc.l_opnpstn_qty < 0 )
   {
    st_cntpos_md_rc.c_opnpstn_flw = SELL;
   }
   else
   {
    st_cntpos_md_rc.c_opnpstn_flw = NEUTRAL;
   }

   if(DEBUG_MSG_LVL_3)
   {    
      fn_userlog ( c_ServiceName, "Updating Following Contract With The Resulted Contract ");

      fn_userlog ( c_ServiceName, "Match Account Is: %s :",st_cntfcp_pos_crrnt.c_cln_mtch_accnt);
      fn_userlog ( c_ServiceName, "Exchange Code Is : %s :",st_cntfcp_pos_crrnt.c_xchng_cd);
      fn_userlog ( c_ServiceName, "Product Type Is: %c :",st_cntfcp_pos_crrnt.c_prd_typ);
      fn_userlog ( c_ServiceName, "Stock /Index Category  Is: %c :",st_cntfcp_pos_crrnt.c_ctgry_indstk);
      fn_userlog ( c_ServiceName, "Underlying Is: %s :",st_cntfcp_pos_crrnt.c_undrlyng);
      fn_userlog ( c_ServiceName, "Option Type Is: %c :",st_cntfcp_pos_crrnt.c_opt_typ);
      fn_userlog ( c_ServiceName, "Strike Price Is: %ld :",st_cntfcp_pos_crrnt.l_strike_prc);
      fn_userlog ( c_ServiceName, "Expiry Date Is: %s :",c_exp_dt.arr);
      fn_userlog ( c_ServiceName, "Exercise Type Is: %c :",st_cntfcp_pos_crrnt.c_exer_typ);
   }

    if(DEBUG_MSG_LVL_3)
   {
    fn_userlog ( c_ServiceName, "Following Is the Resulted Contrat ::" );
    fn_userlog ( c_ServiceName, "st_cntpos_md_rc.l_ibuy_qty : %ld :",st_cntpos_md_rc.l_ibuy_qty);
    fn_userlog ( c_ServiceName, "st_cntpos_md_rc.d_ibuy_ord_val: %lf :",st_cntpos_md_rc.d_ibuy_ord_val);
    fn_userlog ( c_ServiceName, "st_cntpos_md_rc.l_isell_qty: %ld :",st_cntpos_md_rc.l_isell_qty);
    fn_userlog ( c_ServiceName, "st_cntpos_md_rc.d_isell_ord_val: %lf :",st_cntpos_md_rc.d_isell_ord_val);
    fn_userlog ( c_ServiceName, "st_cntpos_md_rc.l_exbuy_qty: %ld :",st_cntpos_md_rc.l_exbuy_qty);
    fn_userlog ( c_ServiceName, "st_cntpos_md_rc.d_exbuy_ord_val: %lf :",st_cntpos_md_rc.d_exbuy_ord_val);
    fn_userlog ( c_ServiceName, "st_cntpos_md_rc.l_exsell_qty: %ld :",st_cntpos_md_rc.l_exsell_qty);
    fn_userlog ( c_ServiceName, "st_cntpos_md_rc.d_exsell_ord_val: %lf :",st_cntpos_md_rc.d_exsell_ord_val);
    fn_userlog ( c_ServiceName, "st_cntpos_md_rc.l_buy_exctd_qty: %ld :",st_cntpos_md_rc.l_buy_exctd_qty);
    fn_userlog ( c_ServiceName, "st_cntpos_md_rc.l_sell_exctd_qty: %ld :",st_cntpos_md_rc.l_sell_exctd_qty);
    fn_userlog ( c_ServiceName, "st_cntpos_md_rc.c_opnpstn_flw: %c :",st_cntpos_md_rc.c_opnpstn_flw);
    fn_userlog ( c_ServiceName, "st_cntpos_md_rc.l_opnpstn_qty: %ld :",st_cntpos_md_rc.l_opnpstn_qty);
    fn_userlog ( c_ServiceName, "st_cntpos_md_rc.d_opnpstn_val: %lf :",st_cntpos_md_rc.d_opnpstn_val);
    fn_userlog ( c_ServiceName, "st_cntpos_md_rc.d_mtm_opn_val: %lf :",st_cntpos_md_rc.d_mtm_opn_val);
   }

  if ( c_run_mode  != 'R' ) /** if condition addded in Ver 2.5 **/
  {
      /*** Now updating the contract table with the resulted contract  ***/
    EXEC SQL
    UPDATE  FCP_FO_SPN_CNTRCT_PSTN
    SET     FCP_IBUY_QTY       = :st_cntpos_md_rc.l_ibuy_qty,
            FCP_IBUY_ORD_VAL   = :st_cntpos_md_rc.d_ibuy_ord_val,
            FCP_ISELL_QTY      = :st_cntpos_md_rc.l_isell_qty,
            FCP_ISELL_ORD_VAL  = :st_cntpos_md_rc.d_isell_ord_val,
            FCP_EXBUY_QTY      = :st_cntpos_md_rc.l_exbuy_qty,
            FCP_EXBUY_ORD_VAL  = :st_cntpos_md_rc.d_exbuy_ord_val,
            FCP_EXSELL_QTY     = :st_cntpos_md_rc.l_exsell_qty,
            FCP_EXSELL_ORD_VAL = :st_cntpos_md_rc.d_exsell_ord_val,
            FCP_BUY_EXCTD_QTY  = :st_cntpos_md_rc.l_buy_exctd_qty,
            FCP_SELL_EXCTD_QTY = :st_cntpos_md_rc.l_sell_exctd_qty,
            FCP_OPNPSTN_FLW    = :st_cntpos_md_rc.c_opnpstn_flw,
            FCP_OPNPSTN_QTY    = :st_cntpos_md_rc.l_opnpstn_qty,
            FCP_OPNPSTN_VAL    = :st_cntpos_md_rc.d_mtm_opn_val,
            FCP_MTM_OPN_VAL    = :st_cntpos_md_rc.d_mtm_opn_val
    WHERE   FCP_CLM_MTCH_ACCNT = :st_pstn_actn_var.c_cln_mtch_accnt
    AND     FCP_XCHNG_CD       = :st_cntfcp_pos_crrnt.c_xchng_cd
    AND     FCP_PRDCT_TYP      = :st_cntfcp_pos_crrnt.c_prd_typ
    AND     FCP_UNDRLYNG       = :st_cntfcp_pos_crrnt.c_undrlyng
    AND     FCP_OPT_TYP        = :st_cntfcp_pos_crrnt.c_opt_typ
    AND     FCP_STRK_PRC       = :st_cntfcp_pos_crrnt.l_strike_prc
    AND     FCP_EXPRY_DT       = to_date(:c_exp_dt,'DD-Mon-YYYY')
    AND     FCP_EXER_TYP       = :st_cntfcp_pos_crrnt.c_exer_typ;

    if ( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName, "S31095", SQLMSG, c_err_msg );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /* ver 1.3 */
			strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      /*  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    * ver 1.3 */
			tpfree((char *)ptr_fml_Obuf);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );

    }

  	if(DEBUG_MSG_LVL_3)
 	  {
      fn_userlog ( c_ServiceName, "After Updating At Contract Level");
	  }

   } /** Ver 2.5 **/
    /*** 21-Oct-2011 ***/


    i_expsr_rtrn  = fn_cal_expsr  ( c_ServiceName,
                                    st_cntfcp_pos_crrnt,
                                    l_basket_id,
                                    &d_expsr_mrgn,
                                    &d_min_expsr_mrgn,
                                    &d_mltplr,
                                    c_err_msg
                                   );

    if ( i_expsr_rtrn != 0 )
    {
      fn_errlog ( c_ServiceName, "S31100", SQLMSG, c_err_msg );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }


    d_expsr     = d_expsr_mrgn  + d_expsr ;
    d_min_expsr = d_min_expsr_mrgn  + d_min_expsr ;

		/*** Inserting Into EOD-MTM Report Table for P&L ***/
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog ( c_ServiceName, " P&L Insert Into Reeport Table");
		}

    if ( c_run_mode  != 'R' ) /** if condition addded in Ver 2.5 **/
    {
  		 EXEC SQL
          INSERT INTO SER_SPN_EODMTM_REP
          (
						SER_REPORT_NO,		
						SER_XCHNG_CD,		
						SER_CLM_MTCH_ACCNT,	
						SER_PRDCT_TYP	,	
						SER_INDSTK,		
						SER_UNDRLYNG	,	
						SER_EXPRY_DT	,	
						SER_OPT_TYP,		
						SER_STRK_PRC	,	
						SER_OPNPSTN_FLW	,	
						SER_OPNPSTN_QTY	,	
						SER_CLS_PRC	,	
						SER_PRFT_LSS_AMT,	
						SER_RPRT_TM_STMP,	
						SER_TRD_DT,
						SER_MTM_FLG																	/* Added By Mahesh */
		  		)
	  			VALUES
				  ( 
						:l_report_no,
						:st_cntfcp_pos_crrnt.c_xchng_cd ,
						:st_cntfcp_pos_crrnt.c_cln_mtch_accnt,
						:st_cntfcp_pos_crrnt.c_prd_typ,
						:st_cntfcp_pos_crrnt.c_ctgry_indstk,
						:st_cntfcp_pos_crrnt.c_undrlyng,
						:c_exp_dt,
						:st_cntfcp_pos_crrnt.c_opt_typ,
						:st_cntfcp_pos_crrnt.l_strike_prc,
						:st_cntfcp_pos_crrnt.c_opnpstn_flw,
						:st_cntfcp_pos_crrnt.l_opnpstn_qty,
						:l_cls_prc,
						:d_cntrct_pl,
						sysdate,
						:c_trd_dt,
						'O'
		   		);

  		if ( SQLCODE != 0 )
      {
        fn_errlog ( c_ServiceName, "S31105", SQLMSG , c_err_msg );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
 
    } /** Ver 2.5 **/
    /*** 21-Oct-2011 ***/	
		
	  strcat(c_inp_strng1,",");
    strcat(c_inp_strng2,",");
    l_cntr  ++;

    
    } /*** End Of While ***/	

		
   EXEC SQL CLOSE :sys_cursor;
   EXEC SQL FREE :sys_cursor;

	 /*** End of while loop for contracts . ***/

	 /*** Starting Margin , P&L and FUS table Updation ***/
	/* Type Casted by Mahesh for 1 paisa issue */

	d_undrlyng_pl = ( long long )d_undrlyng_pl;	
  l_length1 = strlen(c_inp_strng1);

  if( c_inp_strng1[l_length1  - 1 ] == ',')
  {
    c_inp_strng1[l_length1 -1]  ='\0';
  }

  l_length2 = strlen(c_inp_strng2);

  if( c_inp_strng2[l_length2  - 1 ] == ',')
  {
    c_inp_strng2[l_length2 -1]  ='\0';
  }

  if(DEBUG_MSG_LVL_5)
	{
		fn_userlog(c_ServiceName,"  c_inp_strng1 Is :%s:",c_inp_strng1);	
		fn_userlog(c_ServiceName,"  c_inp_strng2 Is :%s:",c_inp_strng2);	
	}	


	/*** FOllowing Commented In Ver 1.1 and taken In Else Condition 	
  strcpy(c_inp_strng,c_inp_strng1);
  strcat(c_inp_strng,c_inp_strng2);
  strcat(c_inp_strng,"\n");
	***/
  strcpy( c_pipe_id, st_op_xchngbk.c_pipe_id);


  fn_init_ddr_pop( c_pipe_id, TRADING_SECTION, F_CS );
	
	fn_cpy_ddr ( c_rout_crt );

  ptr_fml_Obuf_scall = (FBFR32*)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);

  if ( ptr_fml_Obuf_scall == NULL )
  {
  	 fn_errlog( c_ServiceName, "S31110",FMLMSG , c_err_msg );
		 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );     /* Ver 1.3 */
		 strcpy ( c_msg, "System error. Contact system support" );
     fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
     EXEC SQL CLOSE :sys_cursor;
     Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
     /* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); Ver 1.3 */
		 tpfree((char *)ptr_fml_Obuf);
     tpfree((char *)ptr_fml_Ibuf_scall);
     tpfree((char *)ptr_fml_Obuf_scall);
     strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
     fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
     tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  ptr_fml_Ibuf_scall = (FBFR32*)tpalloc("FML32",NULL,MIN_FML_BUF_LEN*10);
											/*** Ver 1.1 - Size increased by multiple of 10 to accomodate the big sized portfolio ***/

  if ( ptr_fml_Ibuf_scall == NULL )
  {
  	 fn_errlog( c_ServiceName, "S31115",FMLMSG , c_err_msg );
		 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /* Ver 1.3 */
		 strcpy ( c_msg, "System error. Contact system support" );
     fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
     EXEC SQL CLOSE :sys_cursor;
		 Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
     /* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );  */
		 tpfree((char *)ptr_fml_Obuf);
     tpfree((char *)ptr_fml_Ibuf_scall);
     tpfree((char *)ptr_fml_Obuf_scall);
     strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
     fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
     tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }


	/*** Ver 1.1 starts here ***/
	if(DEBUG_MSG_LVL_0)
	{
		fn_userlog( c_ServiceName, "i_cntrct_cnt = :%d:",i_cntrct_cnt);
	}

	if (i_cntrct_cnt > 10)
	{
		if ( Fadd32 (ptr_fml_Ibuf_scall,FFO_PIPE_ID,(char *)c_pipe_id,0)	==	-1 )
		{
			fn_errlog( c_ServiceName, "S31120",FMLMSG , c_err_msg );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /* Ver 1.3 */
			strcpy ( c_msg, "System error. Contact system support" );
			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			/* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );  Ver 1.3 */
			tpfree((char *)ptr_fml_Obuf);
			tpfree((char *)ptr_fml_Ibuf_scall);
			tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
	
		fn_cpy_ddr ( c_rout_crt );

		MEMSET(c_inp_strng);
		strcpy(c_inp_strng,c_inp_strng1);
		strcat(c_inp_strng,"\n");
			
		if(DEBUG_MSG_LVL_5)
		{
			fn_userlog(c_ServiceName,"c_inp_strng 1 = :%s:",c_inp_strng);
		}

		if ( Fadd32 (ptr_fml_Ibuf_scall,FFO_REMARKS,(char *)c_inp_strng,0)	==	-1 )
		{
			fn_errlog( c_ServiceName, "S31125",FMLMSG , c_err_msg );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /* Ver 1.3 */
			strcpy ( c_msg, "System error. Contact system support" );
			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			/* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    Ver 1.3 */
			tpfree((char *)ptr_fml_Obuf);
			tpfree((char *)ptr_fml_Ibuf_scall);
			tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName,"Before Call To Service For Margin Calculation.");
		}

		i_rtrn_cd1	=	tpcall("SFO_SPAN_MRGN",(char*)ptr_fml_Ibuf_scall,0,(char **)&ptr_fml_Obuf_scall,&li_len_tobuf,0);

		if(	i_rtrn_cd1 != 0	)
		{
			fn_errlog( c_ServiceName, "S31130",FMLMSG , c_err_msg );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    /*** Added in ver 1.3 ***/
			strcpy ( c_msg, "System error. Contact system support" );
			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			/* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); Commented in ver 1.3 */
			tpfree((char *)ptr_fml_Obuf);
			tpfree((char *)ptr_fml_Ibuf_scall);
			tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/ 
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

		if ( Fget32 (ptr_fml_Obuf_scall,FFO_ABT_TRG_DATA,0,(char *)c_op_strng1,0)  ==  -1 )
		{
			fn_errlog( c_ServiceName, "S31135",FMLMSG , c_err_msg );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /* Ver 1.3 */
			strcpy ( c_msg, "System error. Contact system support" );
			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			tpfree((char *)ptr_fml_Obuf);
			tpfree((char *)ptr_fml_Ibuf_scall);
			tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

		if(DEBUG_MSG_LVL_0)
		{
			fn_userlog(c_ServiceName,"Output String 1 Is :%s:",c_op_strng1);
		}


    /*** Ver 2.7 Starts Here ***/
    i_ret_val = fn_get_bodspan_mrgn(ptr_fml_Ibuf_scall,
                                    i_cntrct_cnt,
                                    &d_spn_bmrgn1,
                                    &d_bnov1,
                                    &d_total_bmrgn1,
                                    c_ServiceName,
                                   c_err_msg
                                   );
    if( i_ret_val != 0 )
    {
      fn_errlog( c_ServiceName, "S31140",LIBMSG , c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      tpfree((char *)ptr_fml_Obuf);
      tpfree((char *)ptr_fml_Ibuf_scall);
      tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 ); 
    }

    if(DEBUG_MSG_LVL_4)
    {
      fn_userlog(c_ServiceName,"d_spn_bmrgn1 :%lf: d_bnov1:%lf: d_total_bmrgn1:%lf:",d_spn_bmrgn1,d_bnov1,d_total_bmrgn1);
    }
    /*** Ver 2.7 Ends here ***/ 

		MEMSET(c_inp_strng);
    /**** Ver 1.5 BUG bix Starts Here *****/

    if( strcmp(c_xchng_cd,"NFO") == 0 )
    {
      strcpy( c_inp_strng ,"1^NSE^");
    }
    else
    {
        strcpy( c_inp_strng ,"1^BSE^");
    }
    /**** Ver 1.5 Ends Here ******/

		if(DEBUG_MSG_LVL_5)
		{
			fn_userlog(c_ServiceName,"Initial c_inp_strng2 = :%s:",c_inp_strng2);
		}

		fn_spn_ltrim(c_inp_strng2,'|');
		/**sprintf(c_inp_strng,"1^%s",c_inp_strng2);  ** Ver 1.5 **/ 
		/*sprintf(c_inp_strng,"%s",c_inp_strng2);			*** Ver 1.5 **/ 
		strcat(c_inp_strng,c_inp_strng2);			/*** Ver 1.5 **/ 
		strcat(c_inp_strng,"\n");	

		if(DEBUG_MSG_LVL_5)
		{
			fn_userlog(c_ServiceName,"c_inp_strng 2 = :%s:",c_inp_strng);
		}

		if ( Fchg32 (ptr_fml_Ibuf_scall,FFO_REMARKS,0,(char *)c_inp_strng,0)	==	-1 )
		{
			fn_errlog( c_ServiceName, "S31145",FMLMSG , c_err_msg );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /* Ver 1.3 */
			strcpy ( c_msg, "System error. Contact system support" );
			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			/* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    Ver 1.3 */
			tpfree((char *)ptr_fml_Obuf);
			tpfree((char *)ptr_fml_Ibuf_scall);
			tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName,"Before Call To Service For Margin Calculation.");
		}

		i_rtrn_cd1	=	tpcall("SFO_SPAN_MRGN",(char*)ptr_fml_Ibuf_scall,0,(char **)&ptr_fml_Obuf_scall,&li_len_tobuf,0);

		if(	i_rtrn_cd1 != 0	)
		{
			fn_errlog( c_ServiceName, "S31150",FMLMSG , c_err_msg );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /*** Added in ver 1.3 ***/
			strcpy ( c_msg, "System error. Contact system support" );
			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			/* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );   Commented in ver 1.3 */
			tpfree((char *)ptr_fml_Obuf);
			tpfree((char *)ptr_fml_Ibuf_scall);
			tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/ 
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

		if ( Fget32 (ptr_fml_Obuf_scall,FFO_ABT_TRG_DATA,0,(char *)c_op_strng2,0)  ==  -1 )
		{
			fn_errlog( c_ServiceName, "S31155",FMLMSG , c_err_msg );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /*** Added in ver 1.3 ***/
			strcpy ( c_msg, "System error. Contact system support" );
			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			/*  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    Commented in ver 1.3 */
			tpfree((char *)ptr_fml_Obuf);
			tpfree((char *)ptr_fml_Ibuf_scall);
			tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/ 
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
		
		fn_spn_ltrim(c_op_strng2,'1');
		fn_spn_ltrim(c_op_strng2,'^');

		if(DEBUG_MSG_LVL_0)
		{
			fn_userlog(c_ServiceName,"Output String 2 Is :%s:",c_op_strng2);
		}

    /*** Ver 2.7 Starts Here ***/
    i_ret_val = fn_get_bodspan_mrgn(ptr_fml_Ibuf_scall,
                                    i_cntrct_cnt,
                                    &d_spn_bmrgn2,
                                    &d_bnov2,
                                    &d_total_bmrgn2,
                                    c_ServiceName,
                                    c_err_msg
                                   );
    if( i_ret_val != 0 )
    {
      fn_errlog( c_ServiceName, "S31160",LIBMSG , c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /*** Added in ver 1.3 ***/
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpfree((char *)ptr_fml_Obuf);
      tpfree((char *)ptr_fml_Ibuf_scall);
      tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 ); 
    }

    if(DEBUG_MSG_LVL_4)
    {
      fn_userlog(c_ServiceName,"d_spn_bmrgn2 :%lf: d_bnov2:%lf: d_total_bmrgn2:%lf:",d_spn_bmrgn2,d_bnov2,d_total_bmrgn2);
    }
      /*** Ver 2.7 Ends here ***/

	}
		else
	{
			/*** Ver 1.1 Ends here ***/
			strcpy(c_inp_strng,c_inp_strng1);
			strcat(c_inp_strng,c_inp_strng2);
			strcat(c_inp_strng,"\n");	

	  if ( Fadd32 (ptr_fml_Ibuf_scall,FFO_ROUT_CRT,(char *)c_rout_crt,0)  ==  -1 )
  	{
  		 	fn_errlog( c_ServiceName, "S31165",FMLMSG , c_err_msg );
		 		strcpy ( c_msg, "System error. Contact system support" );
     		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
     		EXEC SQL CLOSE :sys_cursor;
		 		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
     		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
		 		tpfree((char *)ptr_fml_Obuf);
     		tpfree((char *)ptr_fml_Ibuf_scall);
     		tpfree((char *)ptr_fml_Obuf_scall);
        strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
     		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  	}

  	if ( Fadd32 (ptr_fml_Ibuf_scall,FFO_REMARKS,(char *)c_inp_strng,0)  ==  -1 )
  	{
    	fn_errlog( c_ServiceName, "S31170",FMLMSG , c_err_msg );
			strcpy ( c_msg, "System error. Contact system support" );
    	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    	EXEC SQL CLOSE :sys_cursor;
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			tpfree((char *)ptr_fml_Obuf);
    	tpfree((char *)ptr_fml_Ibuf_scall);
    	tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  	}

		if(DEBUG_MSG_LVL_0)
		{
			fn_userlog(c_ServiceName,"Before Call To Service For Margin Calculation.");
		}

  	i_rtrn_cd1  = tpcall("SFO_SPAN_MRGN",(char*)ptr_fml_Ibuf_scall,0,(char **)&ptr_fml_Obuf_scall,&li_len_tobuf,0);

  	if( i_rtrn_cd1 != 0 )
  	{
    	fn_errlog( c_ServiceName, "S31175",TPMSG , c_err_msg );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /*  ver 1.3 */
			strcpy ( c_msg, "System error. Contact system support" );
    	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    	EXEC SQL CLOSE :sys_cursor;
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    	/* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );   Commented in ver 1.3 */
			tpfree((char *)ptr_fml_Obuf);
    	tpfree((char *)ptr_fml_Ibuf_scall);
    	tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/ 
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  	}

  	if ( Fget32 (ptr_fml_Obuf_scall,FFO_ABT_TRG_DATA,0,(char *)c_op_strng,0)  ==  -1 )
  	{
    	fn_errlog( c_ServiceName, "S31180",FMLMSG , c_err_msg );
			strcpy ( c_msg, "System error. Contact system support" );
    	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    	EXEC SQL CLOSE :sys_cursor;
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			tpfree((char *)ptr_fml_Obuf);
    	tpfree((char *)ptr_fml_Ibuf_scall);
    	tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  	}


  	strcpy(c_op_strng1,strtok(c_op_strng,"|"));
  	strcpy(c_op_strng2,strtok(null_ptr,"|"));


    /*** Ver 2.7 Starts Here ***/
    i_ret_val = fn_get_bodspan_mrgn(ptr_fml_Ibuf_scall,
                                    i_cntrct_cnt,
                                    &d_spn_bmrgn1,
                                    &d_bnov1,
                                    &d_total_bmrgn1,
                                    c_ServiceName,
                                    c_err_msg
                                   );
    if( i_ret_val != 0 )
    {
      fn_errlog( c_ServiceName, "S31185",LIBMSG , c_err_msg );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      EXEC SQL CLOSE :sys_cursor;
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      tpfree((char *)ptr_fml_Obuf);
      tpfree((char *)ptr_fml_Ibuf_scall);
      tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 ); 
    }
  
    if(DEBUG_MSG_LVL_4)
    {
      fn_userlog(c_ServiceName,"d_spn_bmrgn1 :%lf: d_bnov1:%lf: d_total_bmrgn1:%lf:",d_spn_bmrgn1,d_bnov1,d_total_bmrgn1);
    } 
    /*** Ver 2.7 Ends here ***/
	}  /*** Else Ends ***/  /*** Ver 1.1 ***/

  strcpy(c_mrgn_indctr,strtok(c_op_strng1,"^"));
  strcpy(c_xchng_cd1,strtok(null_ptr,"^"));    /** Ver 1.5 ***/
  strcpy(c_seq_num1,strtok(null_ptr,"^"));
  strcpy(c_mtch_accnt1,strtok(null_ptr,"^"));
  strcpy(c_spn_mrgn1,strtok(null_ptr,"^"));
  strcpy(c_nov1,strtok(null_ptr,"^"));
  strcpy(c_total_mrgn1,strtok(null_ptr,"^"));

	if (i_cntrct_cnt > 10)													/** ver 1.7 if condition added **/
	{
  	strcpy(c_xchng_cd1,strtok(c_op_strng2,"^"));    /** Ver 1.5 ***/
  	/*strcpy(c_seq_num2,strtok(c_op_strng2,"^"));		** Ver 1.5 comment **/
  	strcpy(c_seq_num2,strtok(null_ptr,"^"));			/** Ver 1.5 ***/
	}
	else																					 /** ver 1.7 else condition **/
	{
  	strcpy(c_seq_num2,strtok(c_op_strng2,"^"));
	}
  strcpy(c_mtch_accnt2,strtok(null_ptr,"^"));
  strcpy(c_spn_mrgn2,strtok(null_ptr,"^"));
  strcpy(c_nov2,strtok(null_ptr,"^"));
  strcpy(c_total_mrgn2,strtok(null_ptr,"^"));

	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog(c_ServiceName,"SPAN c_mtch_accnt1 Is :%s:",c_mtch_accnt1);
		fn_userlog(c_ServiceName,"SPAN c_mtch_accnt2 Is :%s:",c_mtch_accnt2); /** Ver 1.7 **/
		fn_userlog(c_ServiceName,"SPAN c_spn_mrgn2 Is :%s:",c_spn_mrgn2); 		/** Ver 1.7 **/
		fn_userlog(c_ServiceName,"SPAN c_nov2 Is :%s:",c_nov2); 							/** Ver 1.7 **/
		fn_userlog(c_ServiceName,"SPAN c_total_mrgn2 Is :%s:",c_total_mrgn2); /** Ver 1.7 **/
	}

	  if ( c_mtch_accnt1[0] == '1' || c_mtch_accnt1[0] == '2' || c_mtch_accnt1[0] == '3' )	/*** Ver 1.1 ***/
    {
      fn_errlog( c_ServiceName, "S31190",LIBMSG , c_err_msg );
      fn_userlog(c_ServiceName,"Service Return Error.");
      EXEC SQL CLOSE :sys_cursor;
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			tpfree((char *)ptr_fml_Obuf);
      tpfree((char *)ptr_fml_Ibuf_scall);
      tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    /*** Ver 2.7 Starts here ***/
    d_spn_bmrgn = fn_maxd(d_spn_bmrgn1,d_spn_bmrgn2) * 100;
    d_bnov      = fn_maxd(d_bnov1,d_bnov2) * 100;
    d_total_bmrgn = fn_maxd(d_total_bmrgn1,d_total_bmrgn2) * 100;

    if(DEBUG_MSG_LVL_3)
    {
      fn_userlog(c_ServiceName,"d_spn_bmrgn :%lf: d_bnov :%lf: d_total_bmrgn:%lf:",d_spn_bmrgn,d_bnov,d_total_bmrgn);
    }
   /*** Ver 2.7 Ends here ***/

    d_spn_mrgn1   = atof(c_spn_mrgn1);
    d_spn_mrgn2   = atof(c_spn_mrgn2);
    d_nov1        = atof(c_nov1);
    d_nov2        = atof(c_nov2);
    d_total_mrgn1 = atof(c_total_mrgn1);
    d_total_mrgn2 = atof(c_total_mrgn2);

    st_undfus_pos_to_be.d_uspan_nenov_mrgn  = fn_maxd(d_spn_mrgn1,d_spn_mrgn2) * 100;
    st_undfus_pos_to_be.d_net_optn_val      = fn_maxd(d_nov1,d_nov2) * 100;
    st_undfus_pos_to_be.d_uspan_wenov_mrgn  = fn_maxd(d_total_mrgn1,d_total_mrgn2) * 100 ;

    /*** Ver 2.7 Starts Here ***/
    st_undfus_pos_to_be.d_uspan_nenov_mrgn  = fn_maxd(st_undfus_pos_to_be.d_uspan_nenov_mrgn,d_spn_bmrgn);
    st_undfus_pos_to_be.d_net_optn_val = fn_maxd(st_undfus_pos_to_be.d_net_optn_val,d_bnov);
    st_undfus_pos_to_be.d_uspan_wenov_mrgn = fn_maxd(st_undfus_pos_to_be.d_uspan_wenov_mrgn,d_total_bmrgn);
    /*** Ver 2.7 Ends Here ***/


    d_spn_mrgn    = st_undfus_pos_to_be.d_uspan_nenov_mrgn    ;     /***  SPAN  MRGN  ***/
    d_nov         = st_undfus_pos_to_be.d_net_optn_val        ;     /***  NOV ***/
    d_total_mrgn  = st_undfus_pos_to_be.d_uspan_wenov_mrgn    ;     /***  SPAN +/- NOV  ***/

		if(DEBUG_MSG_LVL_0)
		{
			fn_userlog(c_ServiceName,"SPAN - SPAN MARGIN Is :%lf:",d_spn_mrgn);
		}

		st_pstn_actn_var.c_prd_typ = 'F'; /** temporarily hardcoded **/

		/**** Commented  On 21-Oct-2011
    i_returncode  = fn_cal_mrgn ( c_ServiceName,
                                  &st_pstn_actn_var,
                                  &st_undfus_pos_to_be,
                                  d_prmum,
                                  &d_mltplr,
                                  &d_expsr,
                                  &d_min_mrgn,
                                  &d_intl_mrgn,
                                  c_err_msg
                                );
		****/

    i_returncode  = fn_cal_mrgn ( c_ServiceName,
                                  d_total_mrgn,
                                  d_mltplr,
                                  d_expsr,
                                  d_min_expsr,
                                  &d_min_mrgn,
                                  &d_intl_mrgn,
                                  c_err_msg
                                );

    if ( i_returncode !=  0 )
    {
      fn_errlog( c_ServiceName, "S31195",LIBMSG , c_err_msg );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /* Ver 1.3 */
			strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      fn_userlog(c_ServiceName,"Service Return Error.");
      EXEC SQL CLOSE :sys_cursor;
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      /* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );     * Ver 1.3 */
			tpfree((char *)ptr_fml_Obuf);
      tpfree((char *)ptr_fml_Ibuf_scall);
      tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

		if(DEBUG_MSG_LVL_0)
		{
			fn_userlog(c_ServiceName,"SPAN  - SPAN MARGIN IS :%lf:",d_spn_mrgn);
			fn_userlog(c_ServiceName,"SPAN  - NOV IS :%lf:",d_nov);
			fn_userlog(c_ServiceName,"SPAN  - Total Margin  IS :%lf:",d_total_mrgn);
			fn_userlog(c_ServiceName,"SPAN  - Exposure  IS :%lf:",d_expsr);
			fn_userlog(c_ServiceName,"SPAN  - Min. Margin IS :%lf:",d_min_mrgn);
			fn_userlog(c_ServiceName,"SPAN  - Initial Margin IS :%lf:",d_intl_mrgn);
		}

		/* Type Casted by Mahesh for 1 paisa issue */

		d_intl_mrgn = ( long long )d_intl_mrgn;
    st_undfus_pos_to_be.d_multpr            = d_mltplr      ;
    st_undfus_pos_to_be.d_eba_expr_mrgn     = ( long long )d_expsr ;
    st_undfus_pos_to_be.d_span_wemult_mrgn  = ( long long )d_total_mrgn * d_mltplr  ;
    st_undfus_pos_to_be.d_min_mrgn          = d_min_mrgn;
    st_undfus_pos_to_be.d_reqd_initial_mrgn = ( long long )d_intl_mrgn ;
   /***  d_actl_mrgn_reqd = st_undfus_pos_to_be.d_reqd_initial_mrgn ; ***/
    d_min_mrgn_req   = st_undfus_pos_to_be.d_min_mrgn;


		/****  Commented on 12-Nov-2011 

    if(DEBUG_MSG_LVL_3)
    {
    fn_userlog(c_ServiceName," Updating Limits for Notional Futures P&L ");
    }

    strcpy( c_narration_id , "N" );
    *** Narrtn to be Added- PROFIT_LOSS_ON_EOD_MTM ***
		sprintf ( st_pstn_actn_var.c_ref_rmrks,"SPAN-%s", st_pstn_actn_var.c_undrlyng); 

    d_diff_pl =  d_undrlyng_pl ;

     if(DEBUG_MSG_LVL_3)
    {
      fn_userlog ( c_ServiceName, "Difference in P&L :%lf:", d_diff_pl );
    }

		if ( d_diff_pl != 0 )
    {

			d_balance_amt  = 0.0;
		
      i_returncode = fn_upd_spnlimits(  c_ServiceName,
                                    &st_pstn_actn_var,
                                    ptr_st_err_msg,
                                    c_narration_id,
                                    DEBIT_WITHOUT_LIMIT,
                                    d_diff_pl,
                                    &d_balance_amt);
       if ( i_returncode != 0 )
       {
              fn_errlog( c_ServiceName, "S31200",LIBMSG , c_err_msg );
              EXEC SQL CLOSE :sys_cursor;
							strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
              fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
							tpfree((char *)ptr_fml_Obuf);
     				  tpfree((char *)ptr_fml_Ibuf_scall);
      				tpfree((char *)ptr_fml_Obuf_scall);
              tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
       }


     }

   *** Commented Ends Of P&L Updation ***/	



	
		if(DEBUG_MSG_LVL_0)
    {
      fn_userlog ( c_ServiceName, "Margin to be blocked Is  :%lf:", d_intl_mrgn );
    }

		/*** Commented On 03-Nov-2011 
		d_intl_mrgn = d_intl_mrgn * (-1); *** Taken As Negative ***	
		
     strcpy( c_narration_id , "Z");
     *** Narrtn to be Added- BLOCK_MARGIN_ON_EOD_MTM ***



		sprintf ( st_pstn_actn_var.c_ref_rmrks,"SPAN-%s", st_pstn_actn_var.c_undrlyng);
	  if ( d_intl_mrgn != 0 )
		{
			d_balance_amt  = 0.0;
      i_returncode = fn_upd_spnlimits( c_ServiceName,
                                    &st_pstn_actn_var,
                                    ptr_st_err_msg,
                                    c_narration_id,
                                    DEBIT_TILL_LIMIT,
                                    d_intl_mrgn,
                                    &d_balance_amt);
      if ( i_returncode != 0 )
      {
            fn_errlog( c_ServiceName, "S31205",LIBMSG , c_err_msg );
            EXEC SQL CLOSE :sys_cursor;
						strcpy ( c_msg, "System error. Contact system support" );
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
            fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
					  tpfree((char *)ptr_fml_Obuf);
      			tpfree((char *)ptr_fml_Ibuf_scall);
      			tpfree((char *)ptr_fml_Obuf_scall);
            tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }

			fn_userlog(c_ServiceName,"SPAN	-	d_balance_amt Is :%lf:",d_balance_amt);

      *** Added to take care of balance amount in case of ***
      *** DEBIT_TILL_LIMIT. d_balance_amt is added        ***
      *** since it is always negative or Zero             ***

    	st_undfus_pos_to_be.d_initial_mrgn = st_undfus_pos_to_be.d_reqd_initial_mrgn  + d_balance_amt ;

			if( (-1)* d_balance_amt >= st_undfus_pos_crrnt.d_eba_expr_mrgn )
      {
        st_undfus_pos_crrnt.d_uspan_wenov_mrgn	= st_undfus_pos_crrnt.d_uspan_wenov_mrgn	- ((-1)*d_balance_amt - st_undfus_pos_crrnt.d_eba_expr_mrgn );
        st_undfus_pos_crrnt.d_eba_expr_mrgn = 0;
      }
      else
      {
        st_undfus_pos_crrnt.d_eba_expr_mrgn = st_undfus_pos_crrnt.d_eba_expr_mrgn + d_balance_amt;
      }
    }	
		
		commented On 03-dec-2011 Ends ***/

		/*** Following Added On 03-Dec-2011 ***/

    strcpy( c_narration_id ,MARGIN_BLOCKED_ON_EODMTM );
		sprintf ( st_pstn_actn_var.c_ref_rmrks,"SPAN-SPAN-%s", st_undfus_pos_to_be.c_undrlyng);
		d_upd_amount = (-1) * st_undfus_pos_to_be.d_span_wemult_mrgn ;		
	
		if(DEBUG_MSG_LVL_0)
		{
			fn_userlog(c_ServiceName," d_upd_amount In SPAN MARGIN WITH MULTIPLIER Is :%lf:",d_upd_amount);
		}

		if ( d_upd_amount != 0 && c_run_mode != 'R' ) /** c_run_mode Addedin Ver 2.5 **/ 
    {
			d_balance_amt  = 0.0;
      i_returncode = fn_upd_spnlimits( c_ServiceName,
                                    &st_pstn_actn_var,
                                    ptr_st_err_msg,
                                    c_narration_id,
                                    DEBIT_TILL_LIMIT,
                                    d_upd_amount,
                                    &d_balance_amt);
			if ( i_returncode != 0 )
      {
            fn_errlog( c_ServiceName, "S31210",LIBMSG , c_err_msg );
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    /* ver 1.3 */
            EXEC SQL CLOSE :sys_cursor;
            strcpy ( c_msg, "System error. Contact system support" );
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
            /* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ver 1.3 */
						tpfree((char *)ptr_fml_Obuf);
      			tpfree((char *)ptr_fml_Ibuf_scall);
      			tpfree((char *)ptr_fml_Obuf_scall);
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
            tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
			st_undfus_pos_to_be.d_span_wemult_mrgn = st_undfus_pos_to_be.d_span_wemult_mrgn + d_balance_amt ;		/*** Ver 1.6 ***/
		}

		/*** st_undfus_pos_to_be.d_span_wemult_mrgn = st_undfus_pos_to_be.d_span_wemult_mrgn + d_balance_amt ;		Commented in ver 1.6 ***/

		if(DEBUG_MSG_LVL_0)
		{	
			fn_userlog(c_ServiceName,"d_balance_amt in d_span_wemult_mrgn:%lf:",d_balance_amt);
			fn_userlog(c_ServiceName,"Here st_undfus_pos_to_be.d_span_wemult_mrgn :%lf:",st_undfus_pos_to_be.d_span_wemult_mrgn);
		}

		d_upd_amount = (-1) * st_undfus_pos_to_be.d_eba_expr_mrgn ;

		if(DEBUG_MSG_LVL_0)
		{
			fn_userlog(c_ServiceName," d_upd_amount In EXPOSURE Is :%lf:",d_upd_amount);
		}

		sprintf ( st_pstn_actn_var.c_ref_rmrks,"SPAN-EXPOSURE-%s", st_undfus_pos_to_be.c_undrlyng );

		if ( d_upd_amount != 0 && c_run_mode != 'R' ) /** c_run_mode Addedin Ver 2.5 **/
    {
			d_balance_amt  = 0.0;
      i_returncode = fn_upd_spnlimits( c_ServiceName,
                                       &st_pstn_actn_var,
                                   		 ptr_st_err_msg,
                                    	 c_narration_id,
                                    	 DEBIT_TILL_LIMIT,
                                       d_upd_amount,
                                       &d_balance_amt); 
			if ( i_returncode != 0 )
      {
            fn_errlog( c_ServiceName, "S31215",LIBMSG , c_err_msg );
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /* ver 1.3 */
            EXEC SQL CLOSE :sys_cursor;
            strcpy ( c_msg, "System error. Contact system support" );
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
            /*  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );  ver 1.3 */
						tpfree((char *)ptr_fml_Obuf);
            tpfree((char *)ptr_fml_Ibuf_scall);
            tpfree((char *)ptr_fml_Obuf_scall);
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
            tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
			st_undfus_pos_to_be.d_eba_expr_mrgn = st_undfus_pos_to_be.d_eba_expr_mrgn + d_balance_amt;			/*** Ver 1.6 ***/
		}

		if(DEBUG_MSG_LVL_0)
		{
			fn_userlog(c_ServiceName,"d_balance_amt in d_expsr :%lf:",d_balance_amt);
		}

		/*** st_undfus_pos_to_be.d_eba_expr_mrgn = st_undfus_pos_to_be.d_eba_expr_mrgn + d_balance_amt;			Commented in ver 1.6 ***/
		
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName," Calculating Final INITIAL MARGIN ")	;

			fn_userlog(c_ServiceName,"Here st_undfus_pos_to_be.d_span_wemult_mrgn Is :%lf:",st_undfus_pos_to_be.d_span_wemult_mrgn);
			fn_userlog(c_ServiceName,"Here st_undfus_pos_to_be.d_eba_expr_mrgn  Is  :%lf:",st_undfus_pos_to_be.d_eba_expr_mrgn);
		}

		st_undfus_pos_to_be.d_initial_mrgn = st_undfus_pos_to_be.d_span_wemult_mrgn +  st_undfus_pos_to_be.d_eba_expr_mrgn ;

		if(DEBUG_MSG_LVL_0)
		{
			fn_userlog(c_ServiceName,"Here FINAL INTIAL MARGIN TO BE BLOCKED Is :%lf:",	st_undfus_pos_to_be.d_initial_mrgn);
		}

		/*** Added On 03-Dec-2011 Completed  ***/

    /*** Updating FUS ***/

    
   if(DEBUG_MSG_LVL_3)
   {
    fn_userlog ( c_ServiceName, "Calcualted underlying level position" );
    fn_userlog ( c_ServiceName, "IWTL buy qty      :%ld:", st_undfus_pos_to_be.l_uibuy_qty);
    fn_userlog ( c_ServiceName, "IWTL buy val      :%lf:", st_undfus_pos_to_be.d_uibuy_val);
    fn_userlog ( c_ServiceName, "IWTL sell qty     :%ld:", st_undfus_pos_to_be.l_uisell_qty);
    fn_userlog ( c_ServiceName, "IWTL sell val     :%lf:", st_undfus_pos_to_be.d_uisell_val);
    fn_userlog ( c_ServiceName, "EXCH buy qty      :%ld:", st_undfus_pos_to_be.l_uexbuy_qty);
    fn_userlog ( c_ServiceName, "EXCH buy val      :%lf:", st_undfus_pos_to_be.d_uexbuy_val);
    fn_userlog ( c_ServiceName, "EXCH sell qty     :%ld:", st_undfus_pos_to_be.l_uexsell_qty);
    fn_userlog ( c_ServiceName, "EXCH sell val     :%lf:", st_undfus_pos_to_be.d_uexsell_val);
    fn_userlog ( c_ServiceName, "Buy exctd qty     :%ld:", st_undfus_pos_to_be.l_ubuy_exctd_qty);
    fn_userlog ( c_ServiceName, "Sell exctd qty    :%ld:", st_undfus_pos_to_be.l_usell_exctd_qty);
    fn_userlog ( c_ServiceName, "Open qty          :%ld:", st_undfus_pos_to_be.l_uopnpstn_qty);
    fn_userlog ( c_ServiceName, "Original open val :%lf:", st_undfus_pos_to_be.d_uopnpstn_val);
    fn_userlog ( c_ServiceName, "MTMed open val    :%lf:", st_undfus_pos_to_be.d_umtm_opn_val);
   }

   if ( st_undfus_pos_to_be.l_uopnpstn_qty > 0 )
   {
    st_undfus_pos_to_be.c_uopnpstn_flw = BUY;
   }
   else if ( st_undfus_pos_to_be.l_uopnpstn_qty < 0 )
   {
    st_undfus_pos_to_be.c_uopnpstn_flw = SELL;
   }
   else
   {
    st_undfus_pos_to_be.c_uopnpstn_flw = NEUTRAL;
   }

   if(DEBUG_MSG_LVL_3)
   {
    fn_userlog ( c_ServiceName, "Before  Updating At Undrlying Level Level" );
    fn_userlog ( c_ServiceName, "Open Position Flow set to :%c: ",st_undfus_pos_to_be.c_uopnpstn_flw );
   }

   /*** Ver 2.5 Starts ***/

   if ( c_run_mode == 'R' )
   {
     EXEC SQL
     Insert into FMR_FNO_MRGN_REPORT 
     (
      FMR_CLM_MTCH_ACCNT,
      FMR_XCHNG_CD,
      FMR_UNDRLYNG,
      FMR_TYP,
      FMR_BLCK_MRGN,
      FMR_LOSS_VL,
      FMR_REQR_MRGN,
      FMR_TRD_DT
     )
     Values
     (
      :st_pstn_actn_var.c_cln_mtch_accnt,
      :st_pstn_actn_var.c_xchng_cd,
      :st_pstn_actn_var.c_undrlyng,
      'S',
      :st_undfus_pos_crrnt.d_initial_mrgn + :st_undfus_pos_crrnt.d_blckd_pl,  /** :st_undfus_pos_crrnt.d_blckd_pl added in Ver 2.6 **/ 
      /** :st_undfus_pos_crrnt.d_blckd_pl, ** 2.6 **/
      :d_undrlyng_pl,  /** Ver 2.6 **/
      :st_undfus_pos_to_be.d_eba_expr_mrgn + :st_undfus_pos_to_be.d_span_wemult_mrgn,       
      SYSDATE
     );

     if ( SQLCODE != 0 )
     {
       fn_errlog(c_ServiceName, "S31220", SQLMSG, c_err_msg );
       fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
       strcpy ( c_msg, "System error. Contact system support" );
       fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
       Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
       tpfree((char *)ptr_fml_Obuf);
       tpfree((char *)ptr_fml_Ibuf_scall);
       tpfree((char *)ptr_fml_Obuf_scall);
       strcpy(c_error_txt,"System error. Contact System Support");
       fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
       tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     }

   }

  /*** Ver 2.5 Ends ***/

	 /*** Following Commented On 02-Nov-2011
	 if(d_undrlyng_pl < 0)
	 {
		d_diff_pl = d_undrlyng_pl;
	 }
	 else 
	 {
	  d_diff_pl = 0;
	 }
	 Commented On 02-Nov-2011 ***/
   if ( c_run_mode != 'R' ) /** If condition added in Ver 2.5 **/
   {
     EXEC SQL
     UPDATE  FUS_FO_UNDRLYNG_SPN_PSTN
     SET      FUS_UIBUY_QTY       = :st_undfus_pos_to_be.l_uibuy_qty,
              FUS_UIBUY_VAL       = :st_undfus_pos_to_be.d_uibuy_val,
              FUS_UISELL_QTY      = :st_undfus_pos_to_be.l_uisell_qty,
              FUS_UISELL_VAL      = :st_undfus_pos_to_be.d_uisell_val,
              FUS_UEXBUY_QTY      = :st_undfus_pos_to_be.l_uexbuy_qty,
              FUS_UEXBUY_VAL      = :st_undfus_pos_to_be.d_uexbuy_val,
              FUS_UEXSELL_QTY     = :st_undfus_pos_to_be.l_uexsell_qty,
              FUS_UEXSELL_VAL     = :st_undfus_pos_to_be.d_uexsell_val,
              FUS_UBUY_EXCTD_QTY  = :st_undfus_pos_to_be.l_ubuy_exctd_qty,
              FUS_USELL_EXCTD_QTY = :st_undfus_pos_to_be.l_usell_exctd_qty,
              FUS_UOPNPSTN_FLW    = :st_undfus_pos_to_be.c_uopnpstn_flw,
              FUS_UOPNPSTN_QTY    = :st_undfus_pos_to_be.l_uopnpstn_qty,
              FUS_UOPNPSTN_VAL    = :st_undfus_pos_to_be.d_umtm_opn_val,
              FUS_UMTM_OPN_VAL    = :st_undfus_pos_to_be.d_umtm_opn_val,
	            FUS_INITIAL_MRGN        = :st_undfus_pos_to_be.d_initial_mrgn,
              FUS_SPAN_WEMULT_MRGN    = :st_undfus_pos_to_be.d_span_wemult_mrgn,
              FUS_MIN_MRGN            = :st_undfus_pos_to_be.d_min_mrgn,
              FUS_EBA_EXPR_MRGN       = :st_undfus_pos_to_be.d_eba_expr_mrgn,
	            FUS_MULTIPLIER          = :st_undfus_pos_to_be.d_multpr,
	            FUS_REQD_INITIAL_MRGN   = :st_undfus_pos_to_be.d_reqd_initial_mrgn,
	            FUS_USPAN_WENOV_MRGN    = :st_undfus_pos_to_be.d_uspan_wenov_mrgn,
	            FUS_USPAN_NENOV_MRGN    = :st_undfus_pos_to_be.d_uspan_nenov_mrgn,
							FUS_NET_OPTN_VAL        = :st_undfus_pos_to_be.d_net_optn_val,
					/***		FUS_BLCKD_PL            = :d_diff_pl  commented On 02-Nov-2011 ***/
							FUS_BLCKD_PL            = 0
      WHERE   FUS_CLM_MTCH_ACCNT  = :st_pstn_actn_var.c_cln_mtch_accnt
      AND     FUS_XCHNG_CD        = :st_pstn_actn_var.c_xchng_cd
      AND     FUS_UNDRLYNG        = :st_pstn_actn_var.c_undrlyng ;


     if ( SQLCODE != 0 )
     {
       fn_errlog(c_ServiceName, "S31225", SQLMSG, c_err_msg );
			 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    /* ver 1.3 */
			 strcpy ( c_msg, "System error. Contact system support" );
       fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
       Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
       /* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );   ver 1.3 */
			 tpfree((char *)ptr_fml_Obuf);
       tpfree((char *)ptr_fml_Ibuf_scall);
       tpfree((char *)ptr_fml_Obuf_scall);
       strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
       fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/ 
       tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     }
	
   	 /*** Margin , P&L and FUS table Updation Ends ***/

	   /*** Updating Report Table for Margin Values ***/
	   if(DEBUG_MSG_LVL_0)
	   {
		   fn_userlog ( c_ServiceName, " Updating Report Table for Margin Values ");
	   }

	   EXEC SQL
		 UPDATE 	SER_SPN_EODMTM_REP 
		 SET   	 SER_MRGN_BLKD 			= :st_undfus_pos_to_be.d_initial_mrgn,
 		 				 SER_TRD_MRGN 				= :st_undfus_pos_to_be.d_reqd_initial_mrgn,
	  				 SER_AVLBL_MRGN      = :st_undfus_pos_to_be.d_initial_mrgn,            	/** Ver 1.2 **/
             SER_MIN_MRGN        = :st_undfus_pos_to_be.d_min_mrgn,                  /** Ver 1.2 **/
 			 		   SER_DFCT_MRGN       = :st_undfus_pos_to_be.d_reqd_initial_mrgn - :st_undfus_pos_to_be.d_initial_mrgn /*Ver1.2*/
		 WHERE   SER_CLM_MTCH_ACCNT  = :st_pstn_actn_var.c_cln_mtch_accnt
		 AND     SER_XCHNG_CD        = :st_pstn_actn_var.c_xchng_cd
		 AND     SER_UNDRLYNG        = :st_pstn_actn_var.c_undrlyng
		 AND			SER_TRD_DT	    		= :c_trd_dt
		 AND			SER_REPORT_NO       = :l_report_no 
	 	 AND			trunc(SER_RPRT_TM_STMP) = trunc(sysdate);

		 if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)   /***Handle separate NO_DATA_FOUND in Ver 1.8 ***/
     {
       fn_errlog(c_ServiceName, "S31230", SQLMSG, c_err_msg );
			 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    /* ver 1.3 */
       strcpy ( c_msg, "System error. Contact system support" );
       fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag ); 
       Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
       /* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );  ver 1.3 */
			 tpfree((char *)ptr_fml_Obuf);
       tpfree((char *)ptr_fml_Ibuf_scall);
       tpfree((char *)ptr_fml_Obuf_scall);
       strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
       fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/ 
       tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     }

     /*** Ver 1.8 added **************************/
	   else if(SQLCODE == NO_DATA_FOUND)
	   {
       fn_errlog(c_ServiceName, "S31235", SQLMSG, c_err_msg );
       fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    
       strcpy ( c_msg, "System error. Contact system support" );
       /**** fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag ); *****/
       Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
       tpfree((char *)ptr_fml_Obuf);
       tpfree((char *)ptr_fml_Ibuf_scall);
       tpfree((char *)ptr_fml_Obuf_scall);
       strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
       fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
       tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	   }
     /*** Ver 1.8 Endded **************************/
			

     /************** ver 2.4 **************/
     st_pstn_actn_var.l_report_no  = l_report_no;
     strcpy(c_trd_dt_temp,(char *)c_trd_dt.arr);
     strcpy(st_pstn_actn_var.c_imtm_rmrks,c_trd_dt_temp);
     rtrim(st_pstn_actn_var.c_imtm_rmrks);
     c_extra_update = 'R';
     i_returncode  = fn_cal_trg_prc( c_ServiceName , &st_pstn_actn_var ,c_extra_update,
                                      ptr_st_err_msg  );

     if( i_returncode != 0 )
     {
       fn_errlog(c_ServiceName, "S31240", LIBMSG, c_err_msg );
       fn_userlog ( c_ServiceName,"ERROR IN fn_cal_trg_prc");
     }
     /************** ver 2.4 ends ***/	
   } /** Ver 2.5 **/

	 /*** Checking to  Mark or Not ***/

   /*** NOTE : d_undrlyng_pl is not considered in the calculation of Available Margin ***/
   /*** as d_undrlyng_pl Is the realised obligation profit-Loss . Hence, it is not 		***/
   /*** considered in  Available Margin . d_actl_mrgn_reqd Is the Available Margin    ***/
   /*** Available Margin Is the Actual Margin Blocked															    ***/
	

   /*** d_actl_mrgn_reqd = st_undfus_pos_to_be.d_initial_mrgn + d_undrlyng_pl ; commented on 02-Feb-2012 ***/ 
   d_actl_mrgn_reqd = st_undfus_pos_to_be.d_initial_mrgn ; 

	 if(DEBUG_MSG_LVL_0)
	 {
		 fn_userlog ( c_ServiceName, "Check for Marking Starts");
		 fn_userlog ( c_ServiceName, "Blocked Margin Is :%lf:",st_undfus_pos_to_be.d_initial_mrgn);
		 fn_userlog ( c_ServiceName, "Calculated Obligation Loss Is:%lf:",d_undrlyng_pl);
		 fn_userlog ( c_ServiceName, "Available Margin Is:%lf:",d_actl_mrgn_reqd);
		 fn_userlog ( c_ServiceName, "Minimum Margin Is:%lf:",d_min_mrgn_req);
	 }

	 if(d_actl_mrgn_reqd < d_min_mrgn_req  && c_run_mode != 'R' ) /** c_run_mode Added in Ver 2.5 **/
	 {
	
     EXEC SQL
     UPDATE  FUS_FO_UNDRLYNG_SPN_PSTN
     SET     FUS_MTM_FLG  = 'M'
     WHERE  FUS_CLM_MTCH_ACCNT  = :st_pstn_actn_var.c_cln_mtch_accnt
     AND    FUS_XCHNG_CD        = :st_pstn_actn_var.c_xchng_cd
     AND    FUS_UNDRLYNG        = :st_pstn_actn_var.c_undrlyng ;

         if ( SQLCODE != 0 )
   {
      fn_errlog(c_ServiceName, "S31245", SQLMSG, c_err_msg );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    /* ver 1.3 */
			strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      /* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );   ver 1.3 */
			tpfree((char *)ptr_fml_Obuf);
      tpfree((char *)ptr_fml_Ibuf_scall);
      tpfree((char *)ptr_fml_Obuf_scall);
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
   }

		/** Added By Mahesh for Report ***/
		 EXEC SQL
				UPDATE	SER_SPN_EODMTM_REP
				SET			SER_MTM_FLG	=	'M'
				WHERE 	SER_CLM_MTCH_ACCNT = :st_pstn_actn_var.c_cln_mtch_accnt
				AND			SER_XCHNG_CD			 = :st_pstn_actn_var.c_xchng_cd
				AND			SER_UNDRLYNG			 = :st_pstn_actn_var.c_undrlyng ;
		
			if ( SQLCODE != 0 )
   		{
      	fn_errlog(c_ServiceName, "S31250", SQLMSG, c_err_msg );
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );    /* ver 1.3 */
      	strcpy ( c_msg, "System error. Contact system support" );
      	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      	/* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ver 1.3 */
				tpfree((char *)ptr_fml_Obuf);
      	tpfree((char *)ptr_fml_Ibuf_scall);
      	tpfree((char *)ptr_fml_Obuf_scall);
        strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
      	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
   		}

		 if(DEBUG_MSG_LVL_0)
		 {
			fn_userlog( c_ServiceName, "Match Account :%s: Marked For MTM ", st_pstn_actn_var.c_cln_mtch_accnt);	
		 }

	 }

	 /*** Marking Ends             ***/



  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
		tpfree((char *)ptr_fml_Obuf);
    tpfree((char *)ptr_fml_Ibuf_scall);
    tpfree((char *)ptr_fml_Obuf_scall);
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
  sprintf ( c_msg, "Successfully Processed match a/c - [%s], Underlying - [%s] ",st_undfus_pos_crrnt.c_cln_mtch_accnt,st_undfus_pos_crrnt.c_undrlyng);
  /*fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );*/


	tpfree((char *)ptr_fml_Ibuf_scall);
  tpfree((char *)ptr_fml_Obuf_scall);
	tpfree((char *)ptr_fml_Obuf);

  tpreturn( TPSUCCESS, 0, (char *)ptr_fml_Ibuf, 0 , 0 );
}

