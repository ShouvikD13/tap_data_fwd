/************************************************************************************/
/* Service name : SFO_SLTRL_ORD																											*/
/*                                                                                  */
/* Description  : This Service recieves orders from CEP, checks and places buy/sell */
/*                modification order via SFO_PLCMOD_FUT															*/
/*                                                                                  */
/* Log          : 06-Sept-2016 1.0 New Release (Kishor)                             */
/*                                                                                  */
/************************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <eba_to_ors.h>
#include <fo_fml_def.h>
/* COMMENTED IN VER TOL : TUX on LINUX (Ravindra) * #include <fo_view_def.h> */
#include <fn_log.h>
#include <fn_session.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_val_ord.h> 
#include <fn_session.h> 
#include <fml_rout.h> 
#include <fn_read_debug_lvl.h> 
#include <fn_pos.h>
#include <fo_get_records.h>

  char c_ServiceName[33]= "\0";
  char c_err_msg[256]   = "\0";
	FBFR32 *ptr_fml_Sbuffer; /* Pointer to FML send buffer  */

	void fn_err(char*);

void SFO_SLTRL_ORD( TPSVCINFO *rqst )
{
  FBFR32 *ptr_fml_Ibuffer;

  EXEC SQL BEGIN DECLARE SECTION;
    varchar v_rowid[26];
    varchar v_trigger_time[23];
  EXEC SQL END DECLARE SECTION;

	char c_ordr_rfrnc[19] = "\0";
	char c_usr_id[9]      = "\0";
	char c_pipe_id[3]			= "\0";
	char c_undrlyng[7]		= "\0";
	char c_xchng_cd[4]		= "\0";
	char c_expry_dt[12]		= "\0";
	char c_sem_map_vl[20]	= "\0";
	char c_channel[4]			= "\0";
  char c_cln_mtch_accnt[11] = "\0";
	char c_contract_desc[50]	= "\0";	
	char c_rmrks[33]          = {'\0'};
  char c_xchng_rmrks[257]   = {'\0'};
	char c_trd_dt[23] = {'\0'};   
	char c_ord_vald_dt[23] = {'\0'};   
	MEMSET(c_trd_dt);
	MEMSET(c_ord_vald_dt);

	char c_prdct_typ      = '\0';
	char c_ordr_flw				= '\0';
	char c_opt_typ				= '\0';
	char c_cep_flg				= '\0';
	char c_ctgry_indstk		= '\0';
	char c_exer_typ				= '\0';
	char c_lmt_mkt_flg		=	'\0';
	char c_prcimp_flg     = '\0';
	char c_ord_type				= '\0';
	char c_spn_allwd_flg  = '\0';
	char c_bse_span_flag	= '\0';
	char c_sltp_trail_flg = 'Y' ;
	char c_sqlcode_flg		= 'N' ;

	int  i_ordr_qty =	0;
	int  i_cncl_qty	=	0;	
	int	 i_exec_qty	=	0;
	int  i_ordr_qty1=	0;
	int  i_exec_qty1= 0;
	int  i_cncl_qty1= 0;
	int  i_trnsctn	= 0;
  int  i_dsclsd_qty = 0;
	int  i_err[25];
	int  i_ferr[25];
	int  i_ret;
	int  i;
 
	long l_strike_prc	=	0;
	long l_sequence_no=	0;
	long l_mdfctn_cntr=	0;	
  long l_sssn_id		=	0;
	long l_lmt_rt     = 0;
	long l_stp_lss_tgr= 0;
	long l_inc_prc    = 0;
	long l_ltp_rt     = 0;
	long l_trail_amt  = 0;
	long l_lmt_offset = 0;

  strcpy(c_ServiceName,"SFO_SLTRL_ORD");
  INITDBGLVL(c_ServiceName);

	ptr_fml_Ibuffer = (FBFR32*)rqst->data;	
	
  /*** Get data from receive client ***/

  i_err[0] = Fget32(ptr_fml_Ibuffer, FFO_ORDR_RFRNC, 0, (char *)c_ordr_rfrnc, 0);
  i_ferr[0] = Ferror32;
  i_err[1] = Fget32(ptr_fml_Ibuffer, FFO_MDFCTN_CNTR, 0, (char *)&l_mdfctn_cntr, 0);
  i_ferr[1] = Ferror32;
  i_err[2] = Fget32(ptr_fml_Ibuffer, FFO_PRDCT_TYP, 0, (char *)&c_prdct_typ, 0);
  i_ferr[2] = Ferror32;
  i_err[3] = Fget32(ptr_fml_Ibuffer, FFO_SERIES, 0, (char *)v_rowid.arr, 0);
  i_ferr[3] = Ferror32;
  i_err[4] = Fget32(ptr_fml_Ibuffer, FFO_ORDR_FLW, 0, (char *)&c_ordr_flw, 0);
  i_ferr[4] = Ferror32;
  i_err[5] = Fget32(ptr_fml_Ibuffer, FFO_PIPE_ID, 0, (char *)c_pipe_id, 0);
  i_ferr[5] = Ferror32;
  i_err[6] = Fget32(ptr_fml_Ibuffer, FFO_ORD_TOT_QTY, 0, (char *)&i_ordr_qty, 0);
  i_ferr[6] = Ferror32;
  i_err[7] = Fget32(ptr_fml_Ibuffer, FFO_EXEC_QTY, 0, (char *)&i_exec_qty, 0);
  i_ferr[7] = Ferror32;
  i_err[8] = Fget32(ptr_fml_Ibuffer, FFO_CANCL_QTY, 0, (char *)&i_cncl_qty, 0);
  i_ferr[8] = Ferror32;
  i_err[9] = Fget32(ptr_fml_Ibuffer, FFO_LST_TRD_PRC, 0, (char *)&l_ltp_rt, 0);
  i_ferr[9] = Ferror32;
  i_err[10] = Fget32(ptr_fml_Ibuffer,FFO_UNDRLYNG, 0, (char *)c_undrlyng, 0);
  i_ferr[10] = Ferror32;
  i_err[11] = Fget32(ptr_fml_Ibuffer,FFO_XCHNG_CD, 0, (char *)c_xchng_cd, 0);
  i_ferr[11] = Ferror32;
  i_err[12] = Fget32(ptr_fml_Ibuffer,FFO_EBA_MTCH_ACT_NO, 0, (char *)c_cln_mtch_accnt, 0);
  i_ferr[12] = Ferror32;
  i_err[13] = Fget32(ptr_fml_Ibuffer,FFO_ORD_SEQ, 0, (char *)&l_sequence_no, 0);
  i_ferr[13] = Ferror32;
  i_err[14] = Fget32(ptr_fml_Ibuffer,FFO_OPN_PRC, 0, (char *)&l_inc_prc, 0);
  i_ferr[14] = Ferror32;
  i_err[15] = Fget32(ptr_fml_Ibuffer,FFO_STATUS_FLG, 0, (char *)&c_cep_flg, 0);
  i_ferr[15] = Ferror32;
  i_err[16] = Fget32(ptr_fml_Ibuffer,FFO_QT_TM, 0, (char *)v_trigger_time.arr, 0);
  i_ferr[16] = Ferror32;
  i_err[17] = Fget32(ptr_fml_Ibuffer,FFO_PRDCT_DESC, 0, (char *)c_contract_desc, 0);
  i_ferr[17] = Ferror32;
  i_err[18] = Fget32(ptr_fml_Ibuffer,FFO_STCK_CD, 0, (char *)c_sem_map_vl, 0);
  i_ferr[18] = Ferror32;

  for( i = 0; i < 19; i++)
  {
    if(i_err[i] == -1)
    {
      fn_userlog(c_ServiceName,"Fget32 failed at i_cntr :%d:",i);
      fn_errlog( c_ServiceName, "S31005",Fstrerror32(i_ferr[i]),c_err_msg);
			fn_err(c_ordr_rfrnc);
		}
	}

  SETLEN(v_rowid);
  SETLEN(v_trigger_time);

     EXEC SQL
			SELECT	FOD_INDSTK,
							FOD_EXPRY_DT,
							FOD_EXER_TYP,
							FOD_OPT_TYP,
							FOD_STRK_PRC,
							FOD_ORDR_TOT_QTY,
							FOD_DSCLSD_QTY,
							FOD_EXEC_QTY,
							FOD_CNCL_QTY,
							FOD_PRCIMPV_FLG,
							FOD_STP_LSS_TGR,
							FOD_LMT_RT,
							FOD_LMT_MRKT_SL_FLG,
							FOD_TRAIL_AMT,
							FOD_LMT_OFFSET,
							FOD_TRD_DT,				
							FOD_ORDR_VALID_DT	
				INTO  :c_ctgry_indstk,
							:c_expry_dt,
							:c_exer_typ,
							:c_opt_typ,
							:l_strike_prc,
							:i_ordr_qty1,
							:i_dsclsd_qty,
							:i_exec_qty1,
							:i_cncl_qty1,
							:c_prcimp_flg,
							:l_stp_lss_tgr,
							:l_lmt_rt,
							:c_lmt_mkt_flg,
							:l_trail_amt,
							:l_lmt_offset,
							:c_trd_dt,       
							:c_ord_vald_dt		
				FROM	FOD_FO_ORDR_DTLS
				WHERE FOD_ORDR_RFRNC	=:c_ordr_rfrnc
				AND   FOD_MDFCTN_CNTR	=:l_mdfctn_cntr;

	if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog( c_ServiceName, "S31010",SQLMSG,c_err_msg);
      fn_err(c_ordr_rfrnc);
    }
		
	 if(SQLCODE == NO_DATA_FOUND)
		{
			c_sqlcode_flg='Y';
		}	
	
		rtrim(c_trd_dt);   
		rtrim(c_ord_vald_dt);  	

  if(DEBUG_MSG_LVL_3)
	{
      fn_userlog(c_ServiceName,"c_ordr_rfrnc********:%s:",c_ordr_rfrnc);
      fn_userlog(c_ServiceName,"c_prcimp_flg********:%c:",c_prcimp_flg);
      fn_userlog(c_ServiceName,"l_mdfctn_cntr*******:%ld:",l_mdfctn_cntr);
      fn_userlog(c_ServiceName,"c_prdct_typ*********:%c:",c_prdct_typ);
      fn_userlog(c_ServiceName,"v_rowid*************:%s:",v_rowid.arr);
      fn_userlog(c_ServiceName,"c_ordr_flw**********:%c:",c_ordr_flw);
      fn_userlog(c_ServiceName,"c_pipe_id***********:%s:",c_pipe_id);
      fn_userlog(c_ServiceName,"i_ordr_qty**********:%d:",i_ordr_qty);
      fn_userlog(c_ServiceName,"i_exec_qty**********:%d:",i_exec_qty);
      fn_userlog(c_ServiceName,"i_cncl_qty**********:%d:",i_cncl_qty);
      fn_userlog(c_ServiceName,"l_ltp_rt************:%ld:",l_ltp_rt);
      fn_userlog(c_ServiceName,"c_undrlyng**********:%s:",c_undrlyng);
      fn_userlog(c_ServiceName,"c_xchng_cd**********:%s:",c_xchng_cd);
      fn_userlog(c_ServiceName,"c_cln_mtch_accnt****:%s:",c_cln_mtch_accnt);
      fn_userlog(c_ServiceName,"l_sequence_no*******:%ld:",l_sequence_no);
      fn_userlog(c_ServiceName,"l_inc_prc***********:%ld:",l_inc_prc);
      fn_userlog(c_ServiceName,"c_cep_flg***********:%c:",c_cep_flg);
      fn_userlog(c_ServiceName,"v_trigger_time******:%s:",v_trigger_time.arr);
      fn_userlog(c_ServiceName,"c_opt_typ***********:%c:",c_opt_typ);
      fn_userlog(c_ServiceName,"l_strike_prc********:%ld:",l_strike_prc);
      fn_userlog(c_ServiceName,"c_ctgry_indstk******:%c:",c_ctgry_indstk);
      fn_userlog(c_ServiceName,"c_expry_dt**********:%s:",c_expry_dt);
      fn_userlog(c_ServiceName,"c_exer_typ**********:%c:",c_exer_typ);
      fn_userlog(c_ServiceName,"i_ordr_qty1*********:%d:",i_ordr_qty1);
      fn_userlog(c_ServiceName,"i_exec_qty1*********:%d:",i_exec_qty1);
      fn_userlog(c_ServiceName,"i_cncl_qty1*********:%d:",i_cncl_qty1);
			fn_userlog(c_ServiceName,"c_trd_dt*********:%s:",c_trd_dt);			
		  fn_userlog(c_ServiceName,"c_ord_vald_dt*********:%s:",c_ord_vald_dt);	 
	}

  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuffer, FFO_ERR_MSG, c_err_msg, 0 );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    fn_err(c_ordr_rfrnc);
  }

EXEC SQL INSERT
  INTO FTO_FO_TRAIL_ORD_LOG
             (
              FTO_CLM_MTCH_ACCNT,
              FTO_ORDR_RFRNC,
              FTO_PIPE_ID,
              FTO_XCHNG_CD,
              FTO_PRDCT_TYP,
              FTO_INDSTK,
              FTO_UNDRLYNG,
              FTO_EXPRY_DT,
              FTO_EXER_TYP,
              FTO_OPT_TYP,
              FTO_STRK_PRC,
              FTO_ORDR_FLW,
              FTO_ORDR_TOT_QTY,
              FTO_EXEC_QTY,
              FTO_CNCL_QTY,
              FTO_MDFCTN_CNTR,
              FTO_INCR_PRC,
              FTO_LTP_RT,
              FTO_STATUS_FLG,
              FTO_SEQUENCE_NO,
              FTO_TRGR_DT,
              FTO_CEP_RMV_FLG,
              FTO_ORD_ROWID,
              FTO_CNTRCT_DESC,
              FTO_INSRT_DT
             )
        VALUES
            (
              :c_cln_mtch_accnt,
              :c_ordr_rfrnc,
              :c_pipe_id,
              :c_xchng_cd,
              :c_prdct_typ,
              :c_ctgry_indstk,
              :c_undrlyng,
              :c_expry_dt,
              :c_exer_typ,
              :c_opt_typ,
              :l_strike_prc,
              :c_ordr_flw,
              :i_ordr_qty,
              :i_exec_qty,
              :i_cncl_qty,
              :l_mdfctn_cntr,
              :l_inc_prc,
              :l_ltp_rt,
              'P',
              :l_sequence_no,
              to_date(:v_trigger_time, 'dd/mm/yyyy hh24:mi:ss'),
              :c_cep_flg,
              :v_rowid,
              :c_contract_desc,
              SYSDATE
            );


  if(SQLCODE != 0)
    {
      fn_errlog( c_ServiceName, "S31020",SQLMSG,c_err_msg);
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_err(c_ordr_rfrnc);
    }

	if((c_sqlcode_flg == 'Y') || (i_ordr_qty1 != i_ordr_qty) || (i_exec_qty1 != i_exec_qty) || (i_cncl_qty1 != i_cncl_qty) || (c_prcimp_flg != 'Y'))
	{
  	if(DEBUG_MSG_LVL_0)
  	{
     fn_userlog(c_ServiceName,"Skipping*:%s:",c_ordr_rfrnc);  /* Skipping since either the order is executed or cancelled */
		}
		EXEC SQL UPDATE FTO_FO_TRAIL_ORD_LOG
								SET FTO_TRGR_RMRKS	= 'Order changed'
							WHERE FTO_ORDR_RFRNC	=:c_ordr_rfrnc
								AND FTO_MDFCTN_CNTR	=:l_mdfctn_cntr;

    if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog( c_ServiceName, "S31025",SQLMSG,c_err_msg);
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_err(c_ordr_rfrnc);
    }

  	if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  	{
    	fn_errlog( c_ServiceName, "S31030", LIBMSG, c_err_msg  );
    	Fadd32( ptr_fml_Ibuffer, FFO_ERR_MSG, c_err_msg, 0 );
    	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_err(c_ordr_rfrnc);
  	}

		tpreturn(TPSUCCESS, 0, (char *)NULL, 0L, 0);
	}

    EXEC SQL UPDATE FTO_FO_TRAIL_ORD_LOG
                SET FTO_TRGR_RMRKS  = 'Order sent for modification'
              WHERE FTO_ORDR_RFRNC  =:c_ordr_rfrnc
                AND FTO_MDFCTN_CNTR =:l_mdfctn_cntr;

    if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog( c_ServiceName, "S31035",SQLMSG,c_err_msg);
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_err(c_ordr_rfrnc); 
    }

    if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
    {
      fn_errlog( c_ServiceName, "S31040", LIBMSG, c_err_msg  );
      Fadd32( ptr_fml_Ibuffer, FFO_ERR_MSG, c_err_msg, 0 );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_err(c_ordr_rfrnc);
    }

  c_ord_type = GOOD_TILL_TODAY;

  if((ptr_fml_Sbuffer=(FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN)) == NULL)
  {
    fn_errlog( c_ServiceName, "S31045", LIBMSG, c_err_msg  );
		fn_err(c_ordr_rfrnc); 
	}

  if(l_mdfctn_cntr >= 96)     /* Max allowed system modifications is 96 */
  {
    fn_userlog(c_ServiceName,"Max allowed system modifications is 96");
    fn_errlog( c_ServiceName, "B24043",DEFMSG,c_err_msg);
    tpfree((char *)ptr_fml_Sbuffer);
    tpreturn(TPFAIL,ERR_BFR, (char *)NULL, 0L, 0);
  }

  if(DEBUG_MSG_LVL_4)
  {
      fn_userlog(c_ServiceName,"********* Before calculation***************");
      fn_userlog(c_ServiceName,"l_ltp_rt***********:%ld:",l_ltp_rt);
      fn_userlog(c_ServiceName,"l_trail_amt***********:%ld:",l_trail_amt);
      fn_userlog(c_ServiceName,"l_stp_lss_tgr***********:%ld:",l_stp_lss_tgr);
      fn_userlog(c_ServiceName,"l_lmt_rt***********:%ld:",l_lmt_rt);
      fn_userlog(c_ServiceName,"l_lmt_offset***********:%ld:",l_lmt_offset);
	}

	if( c_ordr_flw == 'S' )
	{
		if(l_ltp_rt >= l_inc_prc )
		{		
			l_stp_lss_tgr =0;
		  l_stp_lss_tgr=l_ltp_rt-l_trail_amt;
			l_lmt_rt=l_stp_lss_tgr-l_lmt_offset;
		}			
	}
	else if( c_ordr_flw == 'B' )
	{
		if(l_ltp_rt <= l_inc_prc )
		{		
			l_stp_lss_tgr =0;
		  l_stp_lss_tgr=l_ltp_rt+l_trail_amt;
			l_lmt_rt=l_stp_lss_tgr+l_lmt_offset;
		}
	}

  if(DEBUG_MSG_LVL_4)
  {
      fn_userlog(c_ServiceName,"********* After calculation***************");
      fn_userlog(c_ServiceName,"l_ltp_rt***********:%ld:",l_ltp_rt);
      fn_userlog(c_ServiceName,"l_trail_amt***********:%ld:",l_trail_amt);
      fn_userlog(c_ServiceName,"l_stp_lss_tgr***********:%ld:",l_stp_lss_tgr);
      fn_userlog(c_ServiceName,"l_lmt_rt***********:%ld:",l_lmt_rt);
      fn_userlog(c_ServiceName,"l_lmt_offset***********:%ll:",l_lmt_offset);
	}

  EXEC SQL
       SELECT  NVL(CLM_SPAN_ALLWD,'N'),
               NVL(CLM_BSESPAN_ALLWD,'N')
       INTO    :c_spn_allwd_flg,
               :c_bse_span_flag
       FROM    CLM_CLNT_MSTR
       WHERE   CLM_MTCH_ACCNT  = :c_cln_mtch_accnt;

    if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog( c_ServiceName, "S31050",SQLMSG,c_err_msg);
      fn_err(c_ordr_rfrnc);
    }

  strcpy(c_usr_id,"system");
  l_sssn_id = 0L;
  strcpy(c_channel,"SYS");
	
	strcpy(c_rmrks,"SYSTRAIL");
	rtrim(c_rmrks);
	
	strcpy(c_xchng_rmrks,"SLTP MODIFY BY SYSTEM");
	rtrim(c_xchng_rmrks);	

  i_err[0] = Fadd32(ptr_fml_Sbuffer, FFO_USR_ID, (char *)c_usr_id, 0);
  i_err[1] = Fadd32(ptr_fml_Sbuffer, FFO_SSSN_ID, (char *)&l_sssn_id, 0);
  i_err[2] = Fadd32(ptr_fml_Sbuffer, FFO_ORDR_RFRNC, (char *)c_ordr_rfrnc, 0);
  i_err[3] = Fadd32(ptr_fml_Sbuffer, FFO_LMT_MKT_SL_FLG, (char *)&c_lmt_mkt_flg, 0);
  i_err[4] = Fadd32(ptr_fml_Sbuffer, FFO_ORD_TOT_QTY, (char *)&i_ordr_qty1, 0);      
  i_err[5] = Fadd32(ptr_fml_Sbuffer, FFO_ORDR_FLW, (char *)&c_ordr_flw, 0);         
  i_err[6] = Fadd32(ptr_fml_Sbuffer, FFO_EBA_MTCH_ACT_NO, (char *)c_cln_mtch_accnt,0);         
  i_err[7] = Fadd32(ptr_fml_Sbuffer, FFO_PIPE_ID, (char *)c_pipe_id,0);   
  i_err[8]=  Fadd32(ptr_fml_Sbuffer, FFO_LMT_RT, (char *)&l_lmt_rt, 0);     
  i_err[9]=  Fadd32(ptr_fml_Sbuffer, FFO_STP_LSS_TGR, (char *)&l_stp_lss_tgr, 0); 
  i_err[10]= Fadd32(ptr_fml_Sbuffer, FFO_DSCLSD_QTY, (char *)&i_dsclsd_qty, 0); 
  i_err[11]= Fadd32(ptr_fml_Sbuffer, FFO_ORD_TYP, (char *)&c_ord_type, 0);
  i_err[12]= Fadd32(ptr_fml_Sbuffer, FFO_CHANNEL, (char *)c_channel, 0);             
  i_err[13]= Fadd32(ptr_fml_Sbuffer, FFO_XCHNG_CD, (char *)c_xchng_cd, 0);
  i_err[14]= Fadd32(ptr_fml_Sbuffer, FFO_BNK_TRN_TYP , (char *)&c_sltp_trail_flg, 0);
  i_err[15]= Fadd32(ptr_fml_Sbuffer, FFO_SYMBOL, (char *)c_rmrks,0);	
	i_err[16]= Fadd32(ptr_fml_Sbuffer, FFO_LST_TRD_PRC, (char *)&l_ltp_rt, 0);
	i_err[17]= Fadd32(ptr_fml_Sbuffer, FFO_XCHNG_RMRKS, (char *)c_xchng_rmrks, 0);
	i_err[18]= Fadd32(ptr_fml_Sbuffer,FFO_ORD_VALID_DT, (char *)c_ord_vald_dt, 0);  
	i_err[19]= Fadd32(ptr_fml_Sbuffer,FFO_MOD_TRD_DT, (char *)c_trd_dt, 0);		

  for(i=0; i < 20; i++)  
  {
    if ( (i_err[ i ] == -1 ) )
    {
  		fn_userlog(c_ServiceName,"count :%d:",i);
   		fn_errlog( c_ServiceName, "S31055",Fstrerror32(i_ferr[i]),c_err_msg);
  		fn_err(c_ordr_rfrnc);
    }
  }

    if ( (c_spn_allwd_flg == 'Y' && strcmp(c_xchng_cd,"NFO")==0) ||
         ( c_bse_span_flag == 'Y' && strcmp(c_xchng_cd,"BFO")==0 ))
     {
    		/** i_ret = tpcall("SFO_SPN_MOD_ORD", (char *)ptr_fml_Sbuffer, 0,(char **)&ptr_fml_Ibuffer, &l_recvbuff, 0); **/
    		if( tpacall( "SFO_SPN_MOD_ORD", (char*)(ptr_fml_Sbuffer), 0, TPNOTRAN|TPNOREPLY  ) == -1)
    		{
      		fn_errlog( c_ServiceName, "S31060", LIBMSG, c_err_msg  );
      		Fadd32( ptr_fml_Ibuffer, FFO_ERR_MSG, c_err_msg, 0 );
      		fn_err(c_ordr_rfrnc);
    		}
     }
     else
     {
    		/** i_ret = tpcall("SFO_PLCMOD_FUT", (char *)ptr_fml_Sbuffer, 0,(char **)&ptr_fml_Ibuffer, &l_recvbuff, 0); **/
    		if( tpacall( "SFO_PLCMOD_FUT", (char*)(ptr_fml_Sbuffer), 0, TPNOTRAN|TPNOREPLY ) == -1)
    		{
      		fn_errlog( c_ServiceName, "S31065", LIBMSG, c_err_msg  );
      		Fadd32( ptr_fml_Ibuffer, FFO_ERR_MSG, c_err_msg, 0 );
      		fn_err(c_ordr_rfrnc);
    		}
     }

  tpfree((char *)ptr_fml_Sbuffer);
  tpreturn(TPSUCCESS, 0, (char *)NULL, 0L, 0);
}

void fn_err(char *c_ordr_rfrnc)
{
  int i_trn, i_ret;

  i_trn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trn == -1 )
  {
    fn_errlog( c_ServiceName, "S31070", LIBMSG, c_err_msg  );
    tpfree((char *)ptr_fml_Sbuffer);
    tpreturn(TPFAIL, 0, (char *)NULL, 0L, 0);
  }

  EXEC SQL UPDATE FTO_FO_TRAIL_ORD
              SET FTO_STATUS_FLG  = 'N',
                  FTO_CEP_RMV_FLG = 'A'
            WHERE FTO_ORDR_RFRNC  =:c_ordr_rfrnc;

    if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog( c_ServiceName, "S31075",SQLMSG,c_err_msg);
      fn_aborttran( c_ServiceName, i_trn, c_err_msg );
      tpfree((char *)ptr_fml_Sbuffer);
      tpreturn(TPFAIL, 0, (char *)NULL, 0L, 0);
    }

    if ( fn_committran( c_ServiceName, i_trn , c_err_msg ) == -1 )
    {
      fn_errlog( c_ServiceName, "S31080", LIBMSG, c_err_msg  );
      fn_aborttran( c_ServiceName, i_trn, c_err_msg );
      tpfree((char *)ptr_fml_Sbuffer);
      tpreturn(TPFAIL, 0, (char *)NULL, 0L, 0);
    }

  if(ptr_fml_Sbuffer != NULL)
  {
    tpfree((char *)ptr_fml_Sbuffer);
  }

  tpreturn(TPFAIL, 0, (char *)NULL, 0L, 0);
}
