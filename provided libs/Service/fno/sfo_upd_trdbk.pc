/******************************************************************************/
/*	Program	    			:	SFO_UPD_TRDBK                                         */
/*                                                                            */
/*  Input             : vw_tradebook                                          */
/*                                                                            */
/*  Output            : vw_tradebook                                          */
/*											vw_err_msg                                            */
/*                                                                            */
/*  Description       : This service will update trade details of trade book  */
/*   										C	-	INSERT_TRADE_CONF                                 */
/*   										U	-	UPDATE_TRADE_CONF                                 */
/*                                                                            */
/*  Log               : 1.0 10-Oct-2001 Ramesh Reddy.V                        */
/*                    : 1.1 22-Feb-2007 Sushil Sharma                         */
/*										: 1.2	20-Dec-2007	Sushil Sharma													*/
/*										: 1.3	10-Mar-2010	Shailesh Hinge												*/
/*                    : 1.4 19-Jan-2012 Sachin Birje                          */
/*                    : 1.5 20-jan-2016 Sachin Birje                          */
/*                    : 1.6 31-Oct-2017 Sandeep Patil													*/
/*                                                                            */
/******************************************************************************/
/* 1.0	-	New Release                                                         */
/* 1.1	- Inserting user_id also on 'C'                                       */
/* 1.2	-	AIX Migration																												*/
/* 1.3	-	FO NNF Message Download changes																			*/
/* 1.4  - FNO BSE Changes                                                     */
/* 1.5  - Trade insert and process time updation                              */
/* 1.6  - Hard Parsing Changes																								*/
/*                                                                            */
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fo.h>
#include <fo_view_def.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_log.h>             /*  Ver 1.2 : Added   */
#include <fn_read_debug_lvl.h>  /*  Ver 1.2 : Added   */

void SFO_UPD_TRDBK( TPSVCINFO *rqst )
{
	char  c_ServiceName[33];
  char  c_errmsg[256];
  int   i_trnsctn;	
	int 	i_rec_found;

  EXEC SQL BEGIN DECLARE SECTION;
    struct vw_tradebook *ptr_st_tradebook;
  EXEC SQL END DECLARE SECTION;

  struct vw_err_msg *ptr_st_err_msg;

  ptr_st_tradebook = ( struct vw_tradebook * )rqst->data;

  strcpy( c_ServiceName, rqst->name );
	INITDBGLVL(c_ServiceName);            /*  Ver 1.2 : Added   */

  ptr_st_err_msg = ( struct vw_err_msg * ) tpalloc ( "VIEW32",
                                                     "vw_err_msg",
                                                sizeof ( struct vw_err_msg ) );
  if ( ptr_st_err_msg ==  NULL )
  {
    fn_errlog ( c_ServiceName, "S31005", TPMSG, c_errmsg );
    tpreturn ( TPFAIL, NO_BFR, NULL, 0, 0 );
  }

  memset ( ptr_st_err_msg, 0, sizeof ( struct vw_err_msg ) );

  /*** Added for Order Routing ***/
  fn_init_ddr_val ( ptr_st_tradebook->c_rout_crt );

	i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );

  if ( i_trnsctn == -1 )
  {
  	strcpy ( ptr_st_err_msg->c_err_msg, c_errmsg );
    tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_st_err_msg, 0, 0 );
  }

	if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.2 : Debug level Change  */
 	  fn_userlog( c_ServiceName, "i_trnsctn:%d:", i_trnsctn );
	}

	i_rec_found = 0;

	switch(ptr_st_tradebook->c_oprn_typ)
	{
		case INSERT_TRADE_CONF:
			i_rec_found = 0;
			if ( ptr_st_tradebook->l_dwnld_flg == DOWNLOAD  &&  (strcmp(ptr_st_tradebook->c_xchng_cd,"NFO") == 0) ) /** Ver 1.4 **/
			{
        fn_userlog( c_ServiceName,"Inside NFO");
				EXEC SQL
					SELECT 1
					INTO	:i_rec_found
					FROM FTD_FO_TRD_DTLS			/***	Ver 1.6	***/
					WHERE FTD_JIFFY = :ptr_st_tradebook->d_jiffy
					AND FTD_XCHNG_CD = :ptr_st_tradebook->c_xchng_cd
					AND FTD_STREAM_NO = :ptr_st_tradebook->l_ca_lvl;			/***	Ver	1.3	***/

				if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
	 			{
	 				fn_errlog(c_ServiceName,"S31010",SQLMSG,ptr_st_err_msg->c_err_msg );
					tpfree ( ( char * ) ptr_st_tradebook );
	 				fn_aborttran( c_ServiceName, i_trnsctn, c_errmsg );
	 				tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_st_err_msg, 0, 0 );
	 			}
			}
       /** Ver 1.4 starts Here ***/ 
      else if( ptr_st_tradebook->l_dwnld_flg == DOWNLOAD  && (strcmp(ptr_st_tradebook->c_xchng_cd,"BFO") == 0))
      { 
        fn_userlog( c_ServiceName,"Inside BFO");
        EXEC SQL
          SELECT 1
          INTO  :i_rec_found
          FROM FTD_FO_TRD_DTLS			/***	Ver 1.6	***/
          WHERE FTD_XCHNG_TRD_NO = :ptr_st_tradebook->l_xchng_trd_no
          AND   FTD_ORD_ACK_NMBR = :ptr_st_tradebook->c_xchng_ack
          AND FTD_XCHNG_CD = :ptr_st_tradebook->c_xchng_cd
          AND FTD_STREAM_NO = :ptr_st_tradebook->l_ca_lvl; 

        if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
        {
          fn_errlog(c_ServiceName,"S31015",SQLMSG,ptr_st_err_msg->c_err_msg );
          tpfree ( ( char * ) ptr_st_tradebook );
          fn_aborttran( c_ServiceName, i_trnsctn, c_errmsg );
          tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_st_err_msg, 0, 0 );
        }
      }
      /*** Ver 1.4 Ends here ***/
			break;
		
		case UPDATE_TRADE_CONF:
			EXEC SQL
				UPDATE	FTD_FO_TRD_DTLS			/***	Ver 1.6	***/
				SET			FTD_RMS_PRCSD_FLG = :ptr_st_tradebook->c_rms_prcsd_flg,
								FTD_FRESH_QTY = :ptr_st_tradebook->l_fresh_qty,	
								FTD_COVER_QTY = :ptr_st_tradebook->l_cover_qty,
                FTD_PRCS_TM   = sysdate                              /** Ver 1.5 **/
			  WHERE FTD_ORDR_RFRNC = :ptr_st_tradebook->c_ordr_rfrnc
			  AND   FTD_EBA_TRD_REF = :ptr_st_tradebook->c_trd_rfrnc;

			if ( SQLCODE != 0 )
 			{
 				fn_errlog(c_ServiceName, "S31020", SQLMSG, ptr_st_err_msg->c_err_msg );
				tpfree ( ( char * ) ptr_st_tradebook );
 				fn_aborttran( c_ServiceName, i_trnsctn, c_errmsg );
 				tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_st_err_msg, 0, 0 );
 			}
				break;

		default :
      	strcpy( ptr_st_err_msg->c_err_msg, "Invalid Operation Type" );
      	fn_errlog ( c_ServiceName, "S31025", DEFMSG, 
																		ptr_st_err_msg->c_err_msg );
      	tpfree ( ( char * ) ptr_st_tradebook );
      	fn_aborttran( c_ServiceName, i_trnsctn, c_errmsg );
      	tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_st_err_msg, 0, 0 );
      	break;
	}
	

	if ( ptr_st_tradebook->c_oprn_typ == INSERT_TRADE_CONF )
	{
		if (i_rec_found == 1 )
		{
    	fn_errlog ( c_ServiceName, "S31030", 
															 "Record Exists", ptr_st_err_msg->c_err_msg );
    	tpfree ( ( char * ) ptr_st_tradebook );
	  	fn_aborttran( c_ServiceName, i_trnsctn, c_errmsg );
    	tpreturn ( TPFAIL, RECORD_ALREADY_PRCSD, ( char * )ptr_st_err_msg, 0, 0 );
		}
		else
		{
			if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.2 : Debug level Change  */
				fn_userlog(c_ServiceName,"xchng cd [%s][%ld]",ptr_st_tradebook->c_xchng_cd,strlen(ptr_st_tradebook->c_xchng_cd));
				fn_userlog(c_ServiceName,"match  [%s][%ld]",ptr_st_tradebook->c_cln_mtch_accnt,strlen(ptr_st_tradebook->c_cln_mtch_accnt));
				fn_userlog(c_ServiceName,"trd_rfrnc  [%s][%ld]",ptr_st_tradebook->c_trd_rfrnc,strlen(ptr_st_tradebook->c_trd_rfrnc));
				fn_userlog(c_ServiceName,"c_ordr_rfrnc  [%s][%ld]",ptr_st_tradebook->c_ordr_rfrnc,strlen(ptr_st_tradebook->c_ordr_rfrnc));
				fn_userlog(c_ServiceName,"c_xchng_ack  [%s][%ld]",ptr_st_tradebook->c_xchng_ack,strlen(ptr_st_tradebook->c_xchng_ack));
				fn_userlog(c_ServiceName,"c_prd_typ  [%c]",ptr_st_tradebook->c_prd_typ);
				fn_userlog(c_ServiceName,"ptr_st_tradebook->c_ctgry_indstk  [%c]",ptr_st_tradebook->c_ctgry_indstk);
				fn_userlog(c_ServiceName,"c_undrlyng  [%s][%ld]",ptr_st_tradebook->c_undrlyng,strlen(ptr_st_tradebook->c_undrlyng));
				fn_userlog(c_ServiceName,"c_expry_dt  [%s][%ld]",ptr_st_tradebook->c_expry_dt,strlen(ptr_st_tradebook->c_expry_dt));
				fn_userlog(c_ServiceName,"c_exer_typ  [%c]",ptr_st_tradebook->c_exrc_typ);
				fn_userlog(c_ServiceName,"c_opt_typ  [%c]",ptr_st_tradebook->c_opt_typ);
				fn_userlog(c_ServiceName,"c_trd_dt  [%s][%ld]",ptr_st_tradebook->c_trd_dt,strlen(ptr_st_tradebook->c_trd_dt));
				fn_userlog(c_ServiceName,"c_trd_flw  [%c]",ptr_st_tradebook->c_trd_flw);
				fn_userlog(c_ServiceName,"c_user_id  [%s]",ptr_st_tradebook->c_user_id);				 /*****  VER 1.1   *****/
			}

			EXEC SQL
				INSERT INTO	FTD_FO_TRD_DTLS			/***	Ver 1.6	***/
				(
					FTD_XCHNG_CD,
					FTD_CLM_MTCH_ACCNT,
					FTD_EBA_TRD_REF,
					FTD_ORDR_RFRNC,
					FTD_ORD_ACK_NMBR,
					FTD_XCHNG_TRD_NO,
					FTD_PRDCT_TYP,
					FTD_INDSTK,
					FTD_UNDRLYNG,
					FTD_EXPRY_DT,
					FTD_EXER_TYP,
					FTD_OPT_TYP,
					FTD_STRK_PRC,
					FTD_TRD_DT,
					FTD_TRD_FLW,
					FTD_EXCTD_QTY,
					FTD_EXCTD_RT,
          FTD_RMS_PRCSD_FLG,
          FTD_UPLD_MTCH_FLG,
					FTD_JIFFY,
					FTD_USR_ID,															/*****	VER 1.1		*****/
					FTD_STREAM_NO,														/*****  VER 1.3   *****/
          FTD_INSRT_TM                            /*** Ver 1.5 ***/
				)
				VALUES
				(
					:ptr_st_tradebook->c_xchng_cd,
					:ptr_st_tradebook->c_cln_mtch_accnt, 
					:ptr_st_tradebook->c_trd_rfrnc,
					:ptr_st_tradebook->c_ordr_rfrnc,
					:ptr_st_tradebook->c_xchng_ack,
					:ptr_st_tradebook->l_xchng_trd_no,
					:ptr_st_tradebook->c_prd_typ,
					:ptr_st_tradebook->c_ctgry_indstk,
					:ptr_st_tradebook->c_undrlyng,
					to_date ( :ptr_st_tradebook->c_expry_dt, 'DD-Mon-yyyy' ),
					:ptr_st_tradebook->c_exrc_typ,
					:ptr_st_tradebook->c_opt_typ,
					:ptr_st_tradebook->l_strike_prc,
					to_date ( :ptr_st_tradebook->c_trd_dt, 'DD-Mon-yyyy hh24:mi:ss' ),
					:ptr_st_tradebook->c_trd_flw,
					:ptr_st_tradebook->l_exctd_qty,
					:ptr_st_tradebook->l_exctd_rt,
          'N',
          'N',
					:ptr_st_tradebook->d_jiffy,
					:ptr_st_tradebook->c_user_id,					/*****  VER 1.1   *****/
					:ptr_st_tradebook->l_ca_lvl,						/*****  VER 1.3   *****/
          sysdate                               /**** Ver 1.5 ****/
				);

				if ( SQLCODE != 0 )
  			{
    			fn_errlog ( c_ServiceName, "S31035",
                                SQLMSG, ptr_st_err_msg->c_err_msg );
    			tpfree ( ( char * ) ptr_st_tradebook );
    			fn_aborttran( c_ServiceName, i_trnsctn, c_errmsg );
    			tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_st_err_msg, 0, 0 );
  			}
		} /*** i_rec_found == 1   ***/
	} /** c_oprn_typ == INSERT_TRADE_CONF ***/

  if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
  {
    strcpy ( ptr_st_err_msg->c_err_msg, c_errmsg );
    tpfree ( ( char * ) ptr_st_tradebook );
    tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_st_err_msg, 0, 0 );
  }

  tpfree ( ( char * ) ptr_st_err_msg );
  tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )ptr_st_tradebook, 0, 0 );
}

