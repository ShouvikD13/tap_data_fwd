/******************************************************************************/
/*	Program	    			:	SFO_GT_SCLOUTRC                                       */
/*                                                                            */
/*  Input             : FFO_XCHNG_CD                                          */
/*                      FFO_EXPRY_DT                                          */
/*											FFO_UNDRLYNG																					*/
/*                                                                            */
/*  Output            : FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_XCHNG_CD                                          */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_EXPRY_DT                                          */
/*                      FFO_EXER_TYP                                          */
/*                      FFO_OPT_TYP                                           */
/*                      FFO_STRK_PRC                                          */
/*                      FFO_CTGRY_INDSTK                                      */
/*                                                                            */
/*  Description       : To get the records for running the Futures close out  */
/*                      proces for SPAN customers and pass it on to the       */
/*											Calling batch program																	*/
/*                                                                            */
/*  Log               : ver 1.0			25-Aug-2011		 Navina D.	                */
/*                                                                            */
/******************************************************************************/
/*    1.0 - New release                                                       */
/******************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fo.h>
#include <fo_fml_def.h>
#include <fml_def.h>
#include <fn_battmpt.h>
#include <fn_tuxlib.h>
#include <fn_log.h>     
#include <fn_read_debug_lvl.h>	

void SFO_GT_SCLOUTRC( TPSVCINFO *rqst )
{

  FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;

  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];

  int i_returncode;

	char exp_dt_prs = 'Y';
	char und_prs = 'Y';


  EXEC SQL BEGIN DECLARE SECTION;
    char c_xchng_cd [ 4 ];
    char sql_clm_mtch_accnt [ 11 ];
    char sql_xchng_cd [ 4 ];
    char sql_prdct_typ;
    char sql_undrlyng [ 7 ];
		char c_cls_undrlyng [ 7 ];
    char c_expry_dt [ LEN_DATE ];
    varchar sql_expry_dt [ LEN_DATE ];
    char sql_exer_typ;
    char sql_indstk;
    char sql_opt_typ;
    long sql_strike_prc = 0;

  EXEC SQL END DECLARE SECTION;

  ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
  strcpy( c_ServiceName, rqst->name );
	INITDBGLVL(c_ServiceName);		

  i_returncode = fn_unpack_fmltovar ( c_ServiceName,
                                    c_err_msg,
                                    ptr_fml_Ibuf,
                                    3,
                                    FFO_XCHNG_CD, ( char * )c_xchng_cd, NULL,
                                    FFO_EXPRY_DT, (char * )c_expry_dt, NULL,
																		FFO_UNDRLYNG, (char * )c_cls_undrlyng, NULL);

  if( i_returncode != 0 )
  {
    fn_errlog( c_ServiceName, "S31005", LIBMSG , c_err_msg );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
  }

  if(DEBUG_MSG_LVL_3)
	{
    fn_userlog( c_ServiceName, "I/P Exchange code :%s:", c_xchng_cd );
    fn_userlog( c_ServiceName, "I/P Expiry date   :%s:", c_expry_dt );
   	fn_userlog( c_ServiceName, "I/P Undrlyng      :%s:", c_cls_undrlyng );
  }
	
	if(strcmp(c_expry_dt,"NA") == 0)
		exp_dt_prs = 'N';
	else
		und_prs = 'N';

  ptr_fml_Obuf = NULL;

    EXEC SQL
      DECLARE cur_clsout_rec CURSOR FOR
      SELECT  fcp_clm_mtch_accnt,
							fcp_xchng_cd,
							fcp_prdct_typ,
							fcp_undrlyng,
							to_char(fcp_expry_dt,'DD-Mon-YYYY'),
							fcp_exer_typ,
							fcp_indstk,
							fcp_opt_typ,
              fcp_strk_prc
			FROM		fcp_fo_spn_cntrct_pstn
			WHERE		fcp_xchng_cd = :c_xchng_cd
      AND     fcp_expry_dt = DECODE(:exp_dt_prs,'N',fcp_expry_dt,to_date (:c_expry_dt,'DD-Mon-YYYY')) 
			AND			trim(fcp_undrlyng) = trim(DECODE(:und_prs,'N',fcp_undrlyng,:c_cls_undrlyng)) 
			AND			fcp_opnpstn_qty != 0
			ORDER BY fcp_expry_dt asc;

    EXEC SQL
      OPEN cur_clsout_rec;

    if( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31010", SQLMSG, c_err_msg );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
    while(1)
    {
      EXEC SQL
        FETCH cur_clsout_rec
        INTO  :sql_clm_mtch_accnt,
              :sql_xchng_cd,
              :sql_prdct_typ,
              :sql_undrlyng,
              :sql_expry_dt,
              :sql_exer_typ,
              :sql_indstk,
							:sql_opt_typ,
              :sql_strike_prc;

        if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
        {
          fn_errlog( c_ServiceName, "S31015", SQLMSG, c_err_msg );
          EXEC SQL
            CLOSE cur_clsout_rec;
          tpfree ( ( char * ) ptr_fml_Obuf );
					Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
        if( SQLCODE == NO_DATA_FOUND )
        {
          break;
        }

				SETNULL ( sql_expry_dt );
				rtrim(sql_undrlyng);
				rtrim(sql_clm_mtch_accnt);
				rtrim(sql_xchng_cd);

        i_returncode = fn_pack_vartofml( c_ServiceName,
                                         c_err_msg,
                                         &ptr_fml_Obuf,
                                         9,
                             FFO_EBA_MTCH_ACT_NO, ( char * )sql_clm_mtch_accnt,
                             FFO_XCHNG_CD, ( char * )sql_xchng_cd,
                             FFO_PRDCT_TYP, ( char * )&sql_prdct_typ,
                             FFO_UNDRLYNG, ( char * )sql_undrlyng,
                             FFO_EXPRY_DT, ( char * )sql_expry_dt.arr,
                             FFO_EXER_TYP, ( char * )&sql_exer_typ,
                             FFO_OPT_TYP, ( char * )&sql_opt_typ,
                             FFO_STRK_PRC, ( char *)&sql_strike_prc,
                             FFO_CTGRY_INDSTK, ( char * )&sql_indstk );

        if( i_returncode != 0 )
        {
          fn_errlog( c_ServiceName, "S31020", LIBMSG, c_err_msg );
          EXEC SQL
            CLOSE cur_clsout_rec;
					Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
        }
     }

    EXEC SQL
      CLOSE cur_clsout_rec;
  tpreturn(TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_Obuf, 0, 0 );
}

