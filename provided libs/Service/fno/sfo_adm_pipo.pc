/******************************************************************************/
/*  Program	    			:	SFO_ADM_PIPO                                   			  */
/*                                                                            */
/*  Input             : FFO_XCHNG_CD                                          */
/*                      FFO_TRD_DT                                            */
/*                      FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_RUN_NUM                                           */
/*                      FFO_BAT_TAG                                           */
/*                      FFO_ROUT_CRT                                          */
/*                      FFO_SOURCE_FLG                                        */
/*                      FFO_SPL_FLG                                           */
/*                      FFO_BK_UBK_FLG                                        */
/*                                                                            */
/*  Output            : FFO_BAL_AMT                                           */
/*                      FFO_ORD_AMT_BLKD                                      */
/*								      FFO_PLG_AMT                                           */
/*								      FFO_ADD_MRGN_AMT																			*/
/*										  FFO_U_TRD_MRGN                                        */
/*                      FFO_ERR_MSG                                           */   
/*                                                                            */
/*  Desription        : To compute ISEC margin required			     						  */
/*											for match act provided in i/p                         */
/*                                                                            */
/*  Log               :							      																		*/
/*                                                                            */
/******************************************************************************/
/*  12-MAy-2011        Ver 1.0        Nitin Save      Release 1.0	      		  	*/
/*  06-Sep-2011        Ver 1.1        Nitin Save    												  	*/
/*																		Changes to truncate margin calculated     */
/*                                    in decimal value                          */									 
/*  14-Sep-201111      Ver 1.2        Nitin Save      FNO Narration             */									 
/*  03-Dec-2012        Ver 1.3        Swati A.B   		SPAN Changes						  */									 
/*  16-May-2012        Ver 1.4        Nitin Save   		BSE -ADM Changes 				  */
/*  08-Feb-2013        Ver 1.5        Navina D.       SPAN FuturePLUS handling  */
/*  01-Aug-2013        Ver 1.6        Sachin Birje.   Handling of duplication   */
/*                                    in case of Bank unconfirm failure         */
/*  26-Mar-2014        Ver 1.7        Sachin Birje.   FDR Module Changes        */
/*  18-Nov-2014        Ver 1.8        Sachin Birje.   View to FML Changes       */
/*  28-Dec-2015        Ver 1.9        Samip M.				ADM Block till limit		  */
/*																										change									  */
/*  16-Feb-2016        Ver 2.0        Samip M.				Change for Bank amt			  */
/*  01-Jul-2016        Ver 2.1        Samip M.				Check Session IP Common   */
/*																											Function							  */
/*  18-Oct-2016        Ver 2.2        Vishal B.      IBR product code changes   */
/*  07-MAR-2018        Ver 2.3        Varadraj G   Block amount error handling  */
/*  06-APR-2018        Ver 2.4        Varadraj G   Updation in case of success  */
/*                                                 case only                    */
/*  25-APR-2018        Ver 2.5        Varadraj G   Updation of correct amount   */
/*                                                 in AMC and handling of       */
/*                                                 failure in rerun             */
/*  18-Jul-2018        Ver 2.6        Samip M.      Run no for Bank Service     */
/*                                                                              */
/*  09-Sep -2019       Ver 2.7        Anuj Pancholi  Deposit Model Changes      */
/*                                                                              */
/*  22-Jul-2019        Ver 2.8        Anuj Pancholi   Block delivery margin     */
/*                                                    on ITM long Call & Put    */
/*                                                    options from Expry-4 days */
/*                                                    till  Expiry              */
/*  24-Oct-2019        Ver 2.9        Tanmay Patel    Ipv6 Format               */
/*  08-Oct-2021        Ver 3.0        Abhinav Kumbhar IDFC Changes              */
/*  09-Mar-2023        Ver 3.1        Ravi Malla			FNO Lock Changes          */
/*  09-Aug-2023        Ver TOL        Agam            Tux on Linux              */
/********************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fml_def.h>
#include <fo_fml_def.h>  
/*** #include <fo_view_def.h> ** Ver 1.8 **/
#include <fo_view_def.h>   /** Ver 1.8 **/
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_tuxlib.h>
#include <fo.h>
#include <fo_bank.h>
#include <fn_session.h>
#include <fn_ddr.h>
#include <fn_log.h> 
#include <fml_rout.h> 
#include <fn_read_debug_lvl.h> 
#include <fn_val_ord.h>

struct vw_usr_prfl st_usr_prfl;
struct vw_err_msg st_err_msg;			/** Ver 2.1 **/
char c_rerun_handle_flg = 'N';          /*** Added in Ver 2.5 ***/
int fn_upd_amc_tbl( char   *c_ServiceName,	
						  		  char   *c_xchng_cd, 
			   						char   *c_cln_mtch_accnt, 
										char    c_path,
										char   c_view_st,
										char   c_release_st,
			   						char   *c_run_dt,
										long	 li_run_no,
									  char   *c_tag,
                    char   c_blk_deposit_flg ); /** Added new parameter for Fund Model Flag in Ver 2.7 **/

int fn_ins_amc_tbl(	char *,	char *, char *, char *, char *, 
									  double, double, double, double, double, double,
									  char *, long, double, double, double, double, double,
									  char, char, double, double, char);  /*** Ver 1.7 provision for FDR old and new amount **/
                                                        /*** Ver 2.7 Added new parameter for Fund Model Flag  ***/


int fn_insrt_adm_pipo_rpt_tbl(  char *c_ServiceName,
 				                        char *c_xchng_cd,
                          			char *c_cln_mtch_accnt,
                          			char *c_run_dt,
                          			double d_payout_amt,
                          			double d_blk4trd_amt,
                          			double d_payin_amt,
                          			double d_intadj_amt,
                          			double d_bnk_pipo_amt,
                          			double d_eba_pipo_amt,
                          			double d_bnk_bft_amt,
                          			double d_eba_bft_amt,
                          			long  li_run_no, 
																double d_bnk_adm_allc_amt,
																double d_eba_adm_allc_amt,
																char *c_bnk_narration,  /** Adedd last parameter in Ver 1.2 **/
                                char c_blk_deposit_flg  /** Added in Ver 2.7 **/
															);

int fn_ins_adm_flr_tbl(	char *,	char *, char *, long, char *, char *, char, int	, char, double , char, char,char, char*, char* ,char* ,char, char*);  /**Added last parameter in Ver 1.2 **//** Added Fund Model Flag and ROWID in Ver 2.7 **/


int fn_call_upd_fab ( char   *c_ServiceName,	
			   							char   *c_xchng_cd, 
			   							char   *c_cln_mtch_accnt, 
											char   *c_bnk_accnt,
											char   c_path,
											char   c_view_st,
											char   c_release_st,
											char   c_dbcr_ind,
			   							char   *c_run_dt,
											char   *c_trd_dt,
			   							double d_p_old_plg_amt,				   
			   							double d_p_old_alctd_amt,
			   							double d_p_old_bft_amt,	
			   							double d_p_old_isec_mrgn_amt,	
			   							double d_p_new_plg_amt,				   
											double d_p_to_cr_alctd_amt,				   
											double d_p_to_db_alctd_amt,
			   							double d_p_to_db_bft_amt,
			   							double d_p_new_isec_mrgn_amt,
											long	li_run_no,
											char   *c_tag,
                      double d_p_old_fdr_amt,  /** Ver 1.7 **/
                      double d_p_new_fdr_amt,   /** Ver 1.7 **/
                      char   c_blk_deposit_flg  /*** Ver 2.7 ***/
                    );	

int fn_ins_mbs(char *,char *,char *,char *,char *,char *,long ,char *,double,char *,char *,char,char *,char,char *,char *,char *,char *,char, char *,char *,char *,char *,char);  /*** Added in Ver 2.7 ***/

int fn_ins_seg_log(char *,long,char *,char *,double,char,char *,double,char,char *,char *,long,char *,char *); /*** Added in ver 2.7 ***/

int fn_ins_pbp( char *c_ServiceName,
                char *c_xchng_cd,
                char *c_cln_mtch_accnt,
                char *c_run_dt,
                double d_payout_amt,
                double d_payin_amt,
                double d_bnk_pipo_amt,
                long  li_run_no,
                char *c_payin_pool_ac_adm_nse,
                char *c_payout_pool_ac_adm_nse,
                char *c_payin_pool_ac_adm_bse,
                char *c_payout_pool_ac_adm_bse,
                char *c_payin_pool_nse_ac,
                char *c_payout_pool_nse_ac 
               ); /** Added in Ver 2.7 **/ 

 char c_payin_pool_ac_adm_nse[20];             /*** Ver 2.7 ***/
 char c_payout_pool_ac_adm_nse[20];            /*** Ver 2.7 ***/
 char c_payin_pool_ac_adm_bse[20];             /*** Ver 2.7 ***/
 char c_payout_pool_ac_adm_bse[20];            /*** Ver 2.7 ***/
 char c_payin_pool_nse_ac[20];                 /*** Ver 2.7 ***/
 char c_payout_pool_nse_ac[20];                /*** Ver 2.7 ***/

 long l_seg_log_ssn_id;                        /*** Ver 2.7 ***/
 char c_seg_log_user_id[11];                   /*** Ver 2.7 ***/
 char c_blk_deposit_flg='\0';                  /*** Ver 2.7 ***/
 

void SFO_ADM_PIPO( TPSVCINFO *rqst )
{ /** Start of main function SFO_ADM_PIPO **/
	FBFR32 *ptr_fml_Ibuf;   /* Pointer to FML input buffer	*/
	FBFR32 *ptr_fml_Obuf;	/* Pointer to FML output buffer	*/
	
	char c_ServiceName [ 33 ];
	char c_err_msg [ 256 ];
	char c_tag [ 256 ]; 
	char c_msg [ 256 ];
	char c_rout [ 4 ];
	char c_path;
	char c_view_st    = 'N';
	char c_release_st = 'N';
	char c_timestamp [ 14 + 1 ]; 
	int i_returncode;
	int i_ret_val;
	int i_ch_val;
	int i;
	int i_trnsctn;
	int i_ret_state = 0;
  int i_err[14];         /*** Ver 3.0 13 to 14 ***/
  int i_ferr[14];        /*** Ver 3.0 13 to 14 ***/

	char c_trd_psswd[LEN_USR_TRDNG_PSSWRD];		/** Ver 2.1 **/
	char c_trd_psswd_flg = 'N';								/** Ver 2.1 **/
	char c_txn_flg='Y';												/** Ver 2.1 **/
	char c_ip_address[45+1]; /** Changed to 45 from 15 in Ver 2.9 **/	/** Ver 2.1 **/

	varchar   sql_urd_usr_user_id[10+1]; 
  long   l_sssn_id;
	long   l_sssn_id_chk;

	long	li_run_no;

 	EXEC SQL BEGIN DECLARE SECTION;
	
	char c_xchng_cd[4];
	char c_cln_mtch_accnt[11];
	char c_run_dt[12];
  char c_bank_nm [ 11 ];          /*** Ver 3.0 ***/
	char c_input_dt[12];
	char c_clnt_release_flg;
   

	EXEC SQL END DECLARE SECTION;

	ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
	strcpy( c_ServiceName, "SFO_ADM_PIPO" );
	INITDBGLVL(c_ServiceName);
	ptr_fml_Obuf = (FBFR32 *)NULL;

	fn_userlog(c_ServiceName,"Started SFO_ADM_PIPO..");
	
	MEMSET(sql_urd_usr_user_id);
	MEMSET(st_usr_prfl);					/** Ver 2.1 **/
	MEMSET(st_err_msg);						/** Ver 2.1 **/

  /** Ver 2.7 starts **/
  MEMSET(c_payin_pool_ac_adm_nse);
  MEMSET(c_payout_pool_ac_adm_nse);
  MEMSET(c_payin_pool_ac_adm_bse);
  MEMSET(c_payout_pool_ac_adm_bse);
  MEMSET(c_payin_pool_nse_ac);
  MEMSET(c_payout_pool_nse_ac);
  MEMSET(c_seg_log_user_id);
  /** Ver 2.7  ends **/
	MEMSET(c_bank_nm);  /** Ver 3.0 **/



  strcpy( c_timestamp, "01-Jan-1980" );			

	i_err[0]  = Fget32( ptr_fml_Ibuf, FFO_XCHNG_CD, 0, (char *)c_xchng_cd, 0 );
  i_ferr[0] = Ferror32;
	i_err[1]  = Fget32( ptr_fml_Ibuf, FFO_TRD_DT, 0, (char *)c_input_dt, 0 );
  i_ferr[1] = Ferror32;
	i_err[2]  = Fget32( ptr_fml_Ibuf, FFO_EBA_MTCH_ACT_NO, 0, (char *)c_cln_mtch_accnt, 0 );
  i_ferr[2] = Ferror32;
	i_err[3]  = Fget32( ptr_fml_Ibuf, FFO_RUN_NUM, 0, (char *)&li_run_no, 0 );
  i_ferr[3] = Ferror32;
	i_err[4]  = Fget32( ptr_fml_Ibuf, FFO_BAT_TAG, 0, (char *)c_tag, 0 );
  i_ferr[4] = Ferror32;
	i_err[5]  = Fget32( ptr_fml_Ibuf, FFO_ROUT_CRT, 0, (char *)c_rout, 0 );
  i_ferr[5] = Ferror32;
	i_err[6]  = Fget32( ptr_fml_Ibuf, FFO_SOURCE_FLG, 0, (char *)&c_path, 0 );
  i_ferr[6] = Ferror32;
  i_err[7]  = Fget32(ptr_fml_Ibuf, FFO_STRIKE1, 0, (char *)c_payin_pool_ac_adm_nse, 0 );   /*** Ver 2.7 ***/
  i_ferr[7] = Ferror32;
  i_err[8]  = Fget32(ptr_fml_Ibuf, FFO_STRIKE2, 0, (char *)c_payout_pool_ac_adm_nse, 0 );  /*** Ver 2.7 ***/
  i_ferr[8] = Ferror32;
  i_err[9]  = Fget32(ptr_fml_Ibuf, FFO_STRIKE3, 0, (char *)c_payin_pool_ac_adm_bse, 0 );   /*** Ver 2.7 ***/
  i_ferr[9] = Ferror32;
  i_err[10]  = Fget32(ptr_fml_Ibuf, FFO_STRIKE4, 0, (char *)c_payout_pool_ac_adm_bse, 0 ); /*** Ver 2.7 ***/
  i_ferr[10] = Ferror32;
  i_err[11]  = Fget32(ptr_fml_Ibuf, FFO_LOW_PT, 0, (char *)c_payin_pool_nse_ac, 0 );       /*** Ver 2.7 ***/
  i_ferr[11] = Ferror32;
  i_err[12]  = Fget32(ptr_fml_Ibuf, FFO_HIGH_PT, 0, (char *)c_payout_pool_nse_ac, 0 );     /*** Ver 2.7 ***/
  i_ferr[12] = Ferror32;
  i_err[13]  = Fget32(ptr_fml_Ibuf, FFO_QUEUE_NAME, 0, (char *)c_bank_nm, 0 );    /** Ver 3.0 **/
  i_ferr[13] = Ferror32;                                                          /** Ver 3.0 **/

	for (i=0;i<14;i++)          /** Ver 3.0 , 13 to 14 **/
	{
 		if (i_err[i] == -1)
  	{
      if(Ferror32 == FNOTPRES && (i==7||i==8||i==9||i==10||i==11||i==12||i==13)) /** Ver 3.0, 13**/
      {
        fn_userlog(c_ServiceName,"call from front end");
      }
      else
      {
  		 fn_userlog(c_ServiceName,"Error in Fget at [%d],[%s]", i,Fstrerror32( i_ferr[i]));
    	 fn_errlog(c_ServiceName, "S31005", FMLMSG, c_err_msg  );
       fn_userlog(c_ServiceName,"Error in fget value at initial ");	
			 Fadd32(ptr_fml_Obuf,FFO_ERR_MSG,c_err_msg,0 );
    	 tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
  	}
  }

  /** Only in case of Front end call -- check for below fml's**/
  if (c_path == 'S')
  {
     if(DEBUG_MSG_LVL_5)
     {
      fn_userlog(c_ServiceName,"Checking input FMLs from front end");	
     }
     i_err[7]  = Fget32(ptr_fml_Ibuf,FFO_USR_ID,0,(char *)sql_urd_usr_user_id.arr,0);
     i_ferr[7] = Ferror32;
     i_err[8]=Fget32(ptr_fml_Ibuf,FFO_SSSN_ID,0,(char *)&l_sssn_id,0);
     i_ferr[8] = Ferror32;
		 i_err[9]  = Fget32( ptr_fml_Ibuf, FFO_SPL_FLG, 0, (char *)&c_view_st, 0 );
		 i_ferr[9] = Ferror32;
		 i_err[10]  = Fget32( ptr_fml_Ibuf, FFO_BK_UBK_FLG, 0, (char *)&c_release_st, 0 );
		 i_ferr[10] = Ferror32;

		 for (i=7;i<11;i++)
		 {
 			if (i_err[i] == -1)
  		{
  			fn_userlog(c_ServiceName,"Error in Fget at in service call [%d],[%s]", i,Fstrerror32( i_ferr[i]));
    		fn_errlog(c_ServiceName, "S31010", FMLMSG, c_err_msg  );
				Fadd32(ptr_fml_Obuf,FFO_ERR_MSG,c_err_msg,0 );
    		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  		}
		 }

     if(DEBUG_MSG_LVL_3)
     {
      fn_userlog(c_ServiceName,"Val of c_view_st from site <%c>",c_view_st );
      fn_userlog(c_ServiceName,"Val of c_release_st from site <%c>",c_release_st );
     }
     /*** Session Check part only for site  ***/
     /*** Added for Order Routing ***/
     fn_init_ddr_val ( c_rout );

	 	 /** l_sssn_id_chk = chk_sssn(c_ServiceName,sql_urd_usr_user_id.arr,l_sssn_id,c_err_msg); ** Commented for Ver 2.1 **/

		 /** Added for Ver 2.1 **/

		 strcpy(st_usr_prfl.c_user_id,sql_urd_usr_user_id.arr);
		 st_usr_prfl.l_session_id = l_sssn_id;
		 strcpy(st_usr_prfl.c_cln_mtch_accnt,c_cln_mtch_accnt);
  
    /** Ver 2.7 starts **/
    strcpy(c_seg_log_user_id,sql_urd_usr_user_id.arr); /** added for segment log entry  **/
    rtrim(c_seg_log_user_id);
    l_seg_log_ssn_id = l_sssn_id;
    /** Ver 2.7 ends  **/

     if(DEBUG_MSG_LVL_3)
     {
		 	fn_userlog(c_ServiceName,"Val of st_usr_prfl.c_user_id :%s:",st_usr_prfl.c_user_id);
		 	fn_userlog(c_ServiceName,"Val of st_usr_prfl.l_session_id :%ld:",st_usr_prfl.l_session_id);
		 	fn_userlog(c_ServiceName,"Val of st_usr_prfl.c_cln_mtch_accnt :%s:",st_usr_prfl.c_cln_mtch_accnt);
		 }
		 l_sssn_id_chk = fn_check_user_ip ( c_ServiceName,
																				&st_usr_prfl ,
																				c_trd_psswd,
																				c_trd_psswd_flg,
																				c_ip_address,
																				c_txn_flg,
																				&st_err_msg );

		 /*** Ver 2.1 ***/

  	 if(l_sssn_id_chk == -1)
  	 {	
			fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg  );
		  fn_userlog(c_ServiceName,"Error in session id check ");	
			strcpy(c_err_msg,"Session Timed Out");
			Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_err_msg, 0 );
			tpreturn(TPFAIL,0L, (char *)ptr_fml_Ibuf, 0L, 0);
  	 }	

    /** Ver 2.7 starts **/
     EXEC SQL
       SELECT  FSP_ISECPAYIN_ACC,
               FSP_ISECPAYOUT_ACC,
               FSP_BSE_ISECPAYIN_ACC,
               FSP_BSE_ISECPAYOUT_ACC,
               FSP_PAYIN_ACC,
               FSP_PAYOUT_ACC
       INTO    :c_payin_pool_ac_adm_nse,
               :c_payout_pool_ac_adm_nse,
               :c_payin_pool_ac_adm_bse,
               :c_payout_pool_ac_adm_bse,
               :c_payin_pool_nse_ac,
               :c_payout_pool_nse_ac
       FROM    FSP_FO_SYSTM_PRMTR;

      if ( SQLCODE != 0 )
       {
        fn_errlog( c_ServiceName, "S31020",SQLMSG,c_err_msg);
        Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
        tpreturn(TPFAIL,0L, (char *)ptr_fml_Obuf, 0L, 0);
       }
     /** Ver 2.7 Ends **/
  }
  
  /** Ver 2.7 Block to get the Model Flag of Customer Starts **/ 
 
       c_blk_deposit_flg='\0';
 
       EXEC SQL
       SELECT NVL(USR_FUND_MODEL_FLG,'N')
       INTO   :c_blk_deposit_flg
       FROM    USR_USER_MASTER,
               UAC_USR_ACCNTS
       WHERE  UAC_USR_ID = USR_USR_ID
       AND    UAC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt;

       if ( SQLCODE != 0 )
       {
        fn_errlog( c_ServiceName, "S31025",SQLMSG,c_err_msg);
        Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
        tpreturn(TPFAIL,0L, (char *)ptr_fml_Obuf, 0L, 0);
       }
  
  /******  Ver 2.7  CONDITION ADDED TO CHECK FOR VALID FUND MODEL FLAG **********/

       if ( c_blk_deposit_flg != 'B' &&  c_blk_deposit_flg != 'D')
       {
        fn_userlog(c_ServiceName,"Invalid Fund Model flag : <%c>",c_blk_deposit_flg); 
        fn_errlog( c_ServiceName, "S31030",SQLMSG,c_err_msg);
        Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
        tpreturn(TPFAIL,0L, (char *)ptr_fml_Obuf, 0L, 0);  
       }


     if(DEBUG_MSG_LVL_3)
     {
      fn_userlog(c_ServiceName,"Val of BLOCK_DEPOSIT_FLAG is  :%c:",c_blk_deposit_flg);
     }

  /** Ver 2.7 Block to get the Model Flag of Customer Ends **/ 

  /********************************************************************************************/
  /*** Start of  Block to get run date   ****/
	EXEC SQL
			SELECT to_char( SYSDATE, 'DD-Mon-YYYY' )
			INTO	 :c_run_dt
			FROM 	 DUAL;

	if ( SQLCODE != 0 )
	{
		fn_errlog( c_ServiceName, "S31035",SQLMSG,c_err_msg);
		fn_userlog(c_ServiceName,"Error in selecting run dt from dual <%ld>", SQLCODE);
		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
		tpreturn(TPFAIL,0L, (char *)ptr_fml_Obuf, 0L, 0);
	}
  /*** End of  Block to get run date  ****/

	/*******************   Note Starts  ***************************/
	/** Here value c_clnt_release_flg is not to be used in service 
	    It was just introduced in development phase 
	    and may be used in future.
	    Currently The required logic is maintained at front end 
	    whether to show margin release link or not 
	    based on trade date & sysdate matches.
	**/
	/*******************   Note Ends  ***************************/
	rtrim( c_run_dt );
	rtrim(c_input_dt);

  /** Ver 2.7 **/
  rtrim(c_payin_pool_ac_adm_nse);
  rtrim(c_payout_pool_ac_adm_nse);
  rtrim(c_payin_pool_ac_adm_bse);
  rtrim(c_payout_pool_ac_adm_bse);
  rtrim(c_payin_pool_nse_ac);
  rtrim(c_payout_pool_nse_ac);
  /** Ver 2.7 Ends **/

	if (strcmp(c_run_dt, c_input_dt) == 0)
	{
	 c_clnt_release_flg = 'Y';
	 if(DEBUG_MSG_LVL_5)
   {
    fn_userlog(c_ServiceName,"Val of c_clnt_release_flg :<%c> ", c_clnt_release_flg);
	 }
  }
	else 
	{
	 c_clnt_release_flg = 'N';
	 if(DEBUG_MSG_LVL_5)
   {
    fn_userlog(c_ServiceName,"Val of c_clnt_release_flg -Not to release:<%c> ", c_clnt_release_flg);
   }
	}
	/************************************************************************/

  if(DEBUG_MSG_LVL_3)
  {
		fn_userlog(c_ServiceName,"INPUT for SFO_ADM_PIPO..");
		fn_userlog(c_ServiceName,"c_user_id [%s]",sql_urd_usr_user_id.arr);
		fn_userlog(c_ServiceName,"session_id [%ld]",l_sssn_id);
		fn_userlog(c_ServiceName,"c_view_st from site [%c]",c_view_st);
		fn_userlog(c_ServiceName,"c_release_st from site[%c]",c_release_st);
		fn_userlog(c_ServiceName,"c_xchng_cd [%s]",c_xchng_cd);
		fn_userlog(c_ServiceName,"c_input_dt [%s]",c_input_dt);
		fn_userlog(c_ServiceName,"c_run_dt [%s]",c_run_dt);
		fn_userlog(c_ServiceName,"c_cln_mtch_accnt [%s]",c_cln_mtch_accnt);
		fn_userlog(c_ServiceName,"li_run_no [%ld]",li_run_no);
		fn_userlog(c_ServiceName,"c_tag [%s]",c_tag);
		fn_userlog(c_ServiceName,"c_rout [%s]",c_rout);
		fn_userlog(c_ServiceName,"c_path [%c]",c_path);
		fn_userlog(c_ServiceName,"c_clnt_release_flg [%c]",c_clnt_release_flg);
    fn_userlog(c_ServiceName,"c_blk_deposit_flg [%c]",c_blk_deposit_flg); /** Ver 2.7 **/
  }
	/****************************************************************************************/
	/* function fn_upd_amc_tbl is called with match act and source path as input parameter  */
	/****************************************************************************************/
  ptr_fml_Obuf = (FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);

  i_ret_val = fn_upd_amc_tbl( c_ServiceName,
			    									  c_xchng_cd,
			     										c_cln_mtch_accnt,
															c_path,
															c_view_st,
															c_release_st,
			     										c_run_dt,
															li_run_no,
															c_tag,
                              c_blk_deposit_flg  /** Ver 2.7 **/
			   										 ); 

	if ( i_ret_val != 0 )
	{
		if (i_ret_val == -3)  /** Adedd for proper msg for no amt to be released **/
		{
		  strcpy ( c_msg, "No amount to be released or blocked from Batch for BSE & NSE");
		  fn_userlog(c_ServiceName,"No amount to be released or blocked from Batch for BSE & NSE for <%s>", c_cln_mtch_accnt);
		  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
		  tpreturn(TPSUCCESS, 0, (char *)ptr_fml_Obuf, 0L, 0); 
		}
    else if (i_ret_val == -2)  /*** Added in Ver 2.5 ***/
    {
     strcpy ( c_msg, "System error. Contact system support" );
     fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
     fn_userlog(c_ServiceName,"Error in call to fn_upd_amc_tbl ");
     fn_errlog(c_ServiceName, "S89112", "Error in Calc", c_err_msg  );
     strcpy (c_err_msg,"You already have an unconfirmed I-Sec Margin release request. Request you to wait till end of day for your request to get processed.");
     Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
     tpreturn(TPFAIL,0L,(char *)ptr_fml_Obuf,0L,0);
    }
		else
		{
			strcpy ( c_msg, "System error. Contact system support" );
			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    	fn_userlog(c_ServiceName,"Error in call to fn_upd_amc_tbl ");
  		fn_errlog(c_ServiceName, "S89112", "Error in Calc", c_err_msg  );
    	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
			tpreturn(TPFAIL,0L,(char *)ptr_fml_Obuf,0L,0);
		}
	}

  /***************************************************************************************/
  fn_userlog(c_ServiceName,"End of program SFO_ADM_PIPO ");
	tpreturn(TPSUCCESS, 0, (char *)ptr_fml_Obuf, 0L, 0); 

} /** End of main function SFO_ADM_PIPO **/

/* #############################################################################################  */
/*************************************************************************************************/

int fn_upd_amc_tbl ( char   *c_ServiceName,	
			   						 char   *c_xchng_cd, 
			   						 char   *c_cln_mtch_accnt,
									 	 char   c_path,
										 char   c_view_st,
										 char   c_release_st,
			   						 char   *c_run_dt,
									 	 long	  li_run_no,
									   char   *c_tag,
                     char   c_blk_deposit_flg) /** Ver 2.7 **/
{  /** Start of fn_upd_amc_tbl function **/
	EXEC SQL BEGIN DECLARE SECTION;

	char c_bnk_accnt[21];
	char c_spn_flg = 'N';            /*** Ver 1.3 ***/
	char c_bsespn_flg = 'N';         /*** Ver 1.4 ***/
	double d_old_alctd_amt 			= 0.0;
	double d_old_bft_amt   			= 0.0;
	double d_old_plg_amt   			= 0.0;
	double d_old_plg_amt_nse   	= 0.0;
	double d_old_alctd_amt_nse 	= 0.0;
	double d_old_bft_amt_nse   	= 0.0;
	double d_old_isec_mrgn_amt_nse  = 0.00;  /** Changed in Ver 1.4 **/ 
	double d_old_isec_mrgn_amt_bse	= 0.00;  /** Added Ver 1.4  **/
	double d_nwb_amt 				= 0.00;

	double d_diff_isec_mrgn_amt_nse = 0.00;  /** Changed in Ver 1.4 **/ 
	double d_diff_isec_mrgn_amt_bse = 0.00;  /** Added in Ver 1.4 **/ 
	double d_to_cr_alctd_amt = 0.00;
	double d_to_cr_alctd_amt_nse = 0.00;
	double d_alctd_amt_aftr_bse  = 0.00;
	double d_bft_amt_aftr_bse    = 0.00;
	double d_to_db_alctd_amt 		 = 0.00;
	double d_to_db_alctd_amt_nse = 0.00;
	double d_to_db_bft_amt 			 = 0.00;
	double d_to_db_bft_amt_nse   = 0.00;
	double d_new_alctd_amt 			 = 0.00;
	double d_new_bft_amt 				 = 0.00;
	double d_new_plg_amt 				 = 0.00;
	double d_new_isec_mrgn_amt_nse  = 0.00;  /** Changed in Ver 1.4 **/ 
	double d_new_isec_mrgn_amt_bse  = 0.00;  /** Added in Ver 1.4 **/
	double d_new_nwb_amt 				= 0.00;
	double d_isec_mrgn_amt_bse  = 0.00;
	double d_isec_mrgn_amt_nse  = 0.00;

	double d_fut_mrgn_req_nse 		= 0.00; /** Changed in Ver 1.4 **/
	double d_fut_mrgn_req_bse 		= 0.00; /** Added in Ver 1.4 **/
	double d_opt_mrgn_req_nse  		= 0.00; /** Changed in Ver 1.4 **/
	double d_opt_mrgn_req_bse  		= 0.00; /** Added in Ver 1.4 **/
	double d_total_mrgn_req_nse   = 0.00;   /** Changed in Ver 1.4 **/
	double d_total_mrgn_req_bse   = 0.00;   /** Added in Ver 1.4 **/

	double d_appl_mrgn_amt_nse 		= 0.00;
	double d_appl_mrgn_amt_bse 		= 0.00;

  double d_fdr_amt_nse          = 0.00;   /** Ver 1.7 **/
  double d_old_fdr_amt          = 0.00;   /** Ver 1.7 **/
  double d_old_fdr_amt_nse      = 0.00;   /** Ver 1.7 **/
  double d_new_fdr_amt          = 0.00;   /** Ver 1.7 **/

	/***************************
	int i_fut_opnpstn_qty = 0; 
	int i_opt_opnpstn_qty = 0; 
	int i_tot_opnpstn_qty = 0; 
	char c_opnpstn_flg = '\0';
	****************************/

	char  c_trd_dt[12];
	char  c_trd_dt_nse[12];
	char  c_trd_dt_bse[12];
	int i_err_cnt = 0;

	EXEC SQL END DECLARE SECTION;

	int i;
	int i_trnsctn ;
	char c_err_msg[256];
	int i_returncode;
	char c_msg [ 256 ];
	int i_ret_val;
	char c_dbcr_ind_bse = '\0';
	char c_dbcr_ind_nse = '\0';
	FBFR32 *ptr_fml_Ibuf;
	FBFR32 *ptr_fml_Obuf;
	ptr_fml_Obuf = (FBFR32 *)NULL; 

	int i_err[11];
	int i_ferr[11];
  int i_cstmr_release_cnt=0;  /********** Added in Ver 2.5 *************/
  fn_userlog(c_ServiceName,"Value of c_path -Batch/Site in fn_upd_amc_tbl <%c>", c_path);

  /***********************************************************************************************/
  /*** Block to Check Non-Updated records present in AMC table for EBA-Failure cases from Site  **/
  /*** In case of EBA failure from site, rerun process is required 
       to be run to keep EBA & BANK data in sinc **/ 
  /***********************************************************************************************/

  EXEC SQL
   SELECT count(1) 
   INTO : i_err_cnt
   FROM AMC_ADM_MRGN_CALC
   WHERE AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
   AND AMC_BILL_NO is not null
   AND AMC_BATCH_SITE_IND = 'S'
   AND AMC_STATUS_FLG = 'N';

   if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
	 {
	   fn_errlog( c_ServiceName, "S31040",SQLMSG,c_err_msg);
	   fn_userlog(c_ServiceName,"Error in selecting Error count for AMC for site-EBA failure <%ld>", SQLCODE);
	   Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	   return ( FAILURE );
	 }

  if (i_err_cnt > 0)
  {
	   fn_userlog(c_ServiceName,"Error records present in AMC for site-EBA failure --Hence First run Rerun");
	   fn_errlog(c_ServiceName, "B91070",(char *)(char *)c_cln_mtch_accnt,c_err_msg);
	   fn_userlog(c_ServiceName,"Val of Business error: <%s>", c_err_msg);
	   Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
     return ( FAILURE );
  }

  /********************************************************************************************/
  /*** Block to Check Non-Updated records present in AMC table for Site-EBA Failure Ends 		 **/
  /********************************************************************************************/
  /********************************************************************************************/
  /*** Block to get Trade date Starts  **/
  /********************************************************************************************/

	EXEC SQL
			SELECT to_char( EXG_NXT_TRD_DT, 'DD-Mon-YYYY' )
			INTO	 :c_trd_dt_nse			         
			FROM 	 EXG_XCHNG_MSTR
			WHERE	 EXG_XCHNG_CD = 'NFO'; 

	if ( SQLCODE != 0 )
	{
		fn_errlog( c_ServiceName, "S31045",SQLMSG,c_err_msg);
		fn_userlog(c_ServiceName,"Error in selecting trade dt for NSE  <%ld>", SQLCODE);
		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
		return ( FAILURE );
	}
	EXEC SQL
			SELECT to_char( EXG_NXT_TRD_DT, 'DD-Mon-YYYY' )
			INTO	 :c_trd_dt_bse
			FROM 	 EXG_XCHNG_MSTR
			WHERE	 EXG_XCHNG_CD = 'BFO'; 

	if ( SQLCODE != 0 )
	{
		fn_errlog( c_ServiceName, "S31050",SQLMSG,c_err_msg);
		fn_userlog(c_ServiceName,"Error in selecting trade dt for BSE  <%ld>", SQLCODE);
		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
		return ( FAILURE );
	}

	if(DEBUG_MSG_LVL_3)
	{
	 fn_userlog(c_ServiceName,"Val of trade dt for NSE<%s> & BSE<%s> ", c_trd_dt_nse, c_trd_dt_bse);
	}

	if (strcmp(c_trd_dt_bse , c_trd_dt_nse) != 0)
	{
		strcpy ( c_msg, "Exchage trade date are different for NSE & BSE");
		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
		fn_userlog(c_ServiceName,"Exchage trade date are different for NSE & BSE");
		fn_errlog(c_ServiceName, "S89110", "Mismatch in trade date", c_err_msg );
		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
		tpreturn(TPFAIL,0L,(char *)ptr_fml_Obuf,0L,0);
	}

	else if (strcmp(c_trd_dt_bse ,c_trd_dt_nse) == 0)
	{
	 strcpy(c_trd_dt, c_trd_dt_nse);
	 fn_userlog(c_ServiceName,"Val of trade dt for both NSE & BSE <%s>", c_trd_dt);
	}
  /********************************************************************************************/
  /*** Block to get Trade date Ends  **/
  /********************************************************************************************/

	i_trnsctn = fn_begintran( c_ServiceName, c_err_msg ); 
	if ( i_trnsctn == -1 )
	{
		fn_errlog(c_ServiceName, "S31055",LIBMSG,c_err_msg);
		return ( FAILURE );
	}

	i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
	if ( i_returncode != 0 )
	{
	  fn_errlog(c_ServiceName, "L31270",LIBMSG,c_err_msg);
	  fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
	  return ( -1 );
	}
	
	/** Ver 3.1 Start */
	i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
	if ( i_returncode != 0 )
	{
	  fn_errlog(c_ServiceName, "L31271",LIBMSG,c_err_msg);
	  fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
	  return ( -1 );
	}
	/** Ver 3.1 End */
	
	EXEC SQL 
		SELECT  FAB_BNK_ACCNT, 
			 			nvl(FAB_ALCTD_AMT,0),
			 			nvl(FAB_BFT_AMT,0),
			 			nvl(FAB_PLG_AMT,0),
			 			nvl(FAB_ISEC_MRGN_AMT,0),
						nvl(FAB_ISEC_MRGN_AMT_BSE,0),
            nvl(FAB_FDR_AMT,0)    /** Ver 1.7 **/
		INTO    :c_bnk_accnt,
			 			:d_old_alctd_amt,       
			 			:d_old_bft_amt,         
			 			:d_old_plg_amt,         
			 			:d_old_isec_mrgn_amt_nse,
						:d_old_isec_mrgn_amt_bse,
            :d_old_fdr_amt           /** Ver 1.7 **/
		FROM	 FAB_FO_ALC_BFT_SMRY 
		WHERE	 FAB_CLM_MTCH_ACCNT = :c_cln_mtch_accnt;

	if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
	{
	   fn_errlog( c_ServiceName, "S31060",SQLMSG,c_err_msg);
	   fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FAB <%ld>", SQLCODE);
	   fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	   Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	   return ( FAILURE );
	}
	if ( SQLCODE == NO_DATA_FOUND )
	{
	   fn_userlog(c_ServiceName,"No entry in FAB for match id <%s>", c_cln_mtch_accnt);
	   fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	   Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	   return ( FAILURE );
	}

 	rtrim(c_bnk_accnt); 
	strcpy(st_usr_prfl.c_user_id,"system");
	strcpy(st_usr_prfl.c_cln_mtch_accnt,c_cln_mtch_accnt);
	strcpy(st_usr_prfl.c_bnk_accnt_nmbr[0],c_bnk_accnt);
	st_usr_prfl.l_session_id = 0;

  if(DEBUG_MSG_LVL_3)
  {
		fn_userlog(c_ServiceName,"Val of d_old_alctd_amt after FAB initial select [%lf]",d_old_alctd_amt);
		fn_userlog(c_ServiceName,"Val of d_old_bft_amt after FAB initial select [%lf]",d_old_bft_amt);
		fn_userlog(c_ServiceName,"Val of d_old_plg_amt after FAB initial select [%lf]",d_old_plg_amt);
		fn_userlog(c_ServiceName,"Val of d_old_isec_mrgn_amt_nse after FAB initial select [%lf]",d_old_isec_mrgn_amt_nse);
		fn_userlog(c_ServiceName,"Val of d_old_isec_mrgn_amt_bse after FAB initial select [%lf]",d_old_isec_mrgn_amt_bse);
		fn_userlog(c_ServiceName,"Val of d_old_fdr_amt after FAB initial select [%lf]",d_old_fdr_amt);  /*** Ver 1.7 ***/
	}

  /***   Get the Span Flag to Check *****/

  EXEC SQL                          
    SELECT  NVL(CLM_SPAN_ALLWD,'N'),
            NVL(CLM_BSESPAN_ALLWD,'N')  /** Added post UAT **/
    INTO    :c_spn_flg,
	    :c_bsespn_flg	
    FROM    CLM_CLNT_MSTR
    WHERE   CLM_MTCH_ACCNT  = :c_cln_mtch_accnt;

  if ( SQLCODE != 0 )
  {
     fn_errlog( c_ServiceName, "S31065",SQLMSG,c_err_msg);
     fn_userlog(c_ServiceName,"Error in selecting SPAN flag <%ld>", SQLCODE);
     fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
     return ( FAILURE );
  }

  if(DEBUG_MSG_LVL_3)               /*** Ver 1.3 ***/
  {
     fn_userlog(c_ServiceName," The SPAN Flag <%c> & SPAN BSE Flag <%c> For Customer <%s> Is ", c_spn_flg,c_bsespn_flg, c_cln_mtch_accnt);
  }

  /************************************************************************/
  /** Process to compute run_no for site Starts     **/
  /************************************************************************/

	if (c_path == 'S' && c_release_st == 'Y')
	{
		EXEC SQL 
					SELECT ARC_RUN_NO
			 				 INTO :li_run_no
			 				 FROM ARC_ADM_RUNNO_CALC 
			 				 WHERE ARC_TRD_DT = :c_run_dt;  

		if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
		{
			fn_errlog( c_ServiceName, "S31070",SQLMSG,c_err_msg);
			fn_userlog(c_ServiceName,"Error in selecting run no from ARC_ADM_RUNNO_CALC <%ld>", SQLCODE);
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
			Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
			return ( FAILURE );
		}

		if (SQLCODE == NO_DATA_FOUND)
		{

			EXEC SQL 
					SELECT adm_runno_seq.nextval
			    INTO :li_run_no
				  FROM DUAL;

      if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31075",SQLMSG,c_err_msg);
        fn_userlog(c_ServiceName,"Error in selecting run no  from seq<%ld>", SQLCODE);
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
        return ( FAILURE );
      }
			EXEC SQL 
					INSERT INTO ARC_ADM_RUNNO_CALC (ARC_TRD_DT,ARC_RUN_NO)
					VALUES (:c_run_dt,:li_run_no);

			if ( SQLCODE != 0 )
			{
				fn_errlog( c_ServiceName, "S31080",SQLMSG,c_err_msg);
				fn_userlog(c_ServiceName,"Error in inserting run no in ARC <%ld>", SQLCODE);
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
				Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
				return ( FAILURE );
			}
			if(DEBUG_MSG_LVL_3)
      {	 
			 fn_userlog(c_ServiceName,"Generated new Run No<%ld> for Date <%s> from site ", li_run_no, c_run_dt);
      }
		}
     /************** Ver 2.5 starts ****************/
      EXEC SQL
           SELECT  COUNT(FBM_CLM_MTCH_ACCNT)
             INTO  :i_cstmr_release_cnt
             FROM  FBM_FO_BNK_FLR_MSG
             WHERE FBM_RUN_NO = :li_run_no
             AND   FBM_DC_FLG = 'C'
             AND   FBM_TRNSCTN_TYP ='C'
             AND   FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt 
             AND   FBM_STTS IN  ('F','N')
             AND   FBM_PRDCT_CD='ADM'; 

      if( SQLCODE != 0 )
      {
       fn_errlog( c_ServiceName, "S31085",SQLMSG,c_err_msg);
       fn_userlog(c_ServiceName,"No records are found which has 'F' status for credit case");
      }

      if( i_cstmr_release_cnt > 0 )
      {
       fn_userlog(c_ServiceName,"You are not allowed to release amount");
       fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
       return(-2);
      }

    /**************** Ver 2.5 Ends ******************/        	
}	

  /************************************************************************/
  /** Process to compute run_no for site Ends  **/
  /************************************************************************/

  /************************************************************************/
  /** Block to obtain required margin for NSE & BSE Starts  **/
  /************************************************************************/
  if ( c_spn_flg == 'N' )   
  {	
		if(DEBUG_MSG_LVL_3)
		{
		 fn_userlog(c_ServiceName,"Inside Normal Customer <%s> For Computing Margin Req ",c_cln_mtch_accnt);
		}
	  /*** Ver 1.3 -- Log Added ***/
     /*********  Margin Requirement calculation for BSE for Normal client Start **********/
			EXEC SQL 
				SELECT trunc(nvl( sum((FUP_UTRD_MRGN + FUP_ADD_MRGN_VAL)), 0)) /** Ver 1.1 **/
			 		INTO :d_fut_mrgn_req_bse
			 		FROM  FUP_FUT_UNDRLYNG_PSTN
			 		WHERE FUP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FUP_XCHNG_CD = 'BFO'; /** Ver 1.4 **/

			if ( SQLCODE != 0 )
			{
	  		fn_errlog( c_ServiceName, "S31090",SQLMSG,c_err_msg);
	  		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FUP for BSE <%ld>", SQLCODE);
	  		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	  		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	  		return ( FAILURE );
			}

			EXEC SQL 
					SELECT trunc(nvl(sum(FOP_UEXCTD_MRGN + NVL(FOP_UDLVRY_MRGN,0)),0)) /** Ver 1.1 ** Ver 2.8 Added Dlvry mrgn **/
					INTO  :d_opt_mrgn_req_bse
					FROM  FOP_FO_OPTIONS_PSTN 
					WHERE FOP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FOP_XCHNG_CD = 'BFO'; /** Ver 1.4 **/

			if ( SQLCODE != 0 )
			{
	   		fn_errlog( c_ServiceName, "S31095",SQLMSG,c_err_msg);
	   		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FOP for BSE <%ld>", SQLCODE);
	   		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	   		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	   		return ( FAILURE );
			}

			d_total_mrgn_req_bse = d_fut_mrgn_req_bse + d_opt_mrgn_req_bse;
			if(DEBUG_MSG_LVL_3)
			{
			 fn_userlog(c_ServiceName,"total margin-bse(f+o)<%lf+ %lf>=<%lf> For Normal client",d_fut_mrgn_req_bse,d_opt_mrgn_req_bse,d_total_mrgn_req_bse);
			}
			/*********  Margin Requirement calculation for BSE for Normal client End **********/

			/*********  Margin Requirement calculation for NSE for Normal client Start **********/
			EXEC SQL 
				SELECT trunc(nvl( sum((FUP_UTRD_MRGN + FUP_ADD_MRGN_VAL)), 0)) /** Ver 1.1 **/
			 		INTO :d_fut_mrgn_req_nse
			 		FROM  FUP_FUT_UNDRLYNG_PSTN
			 		WHERE FUP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FUP_XCHNG_CD = 'NFO'; /** Ver 1.4 **/

			if ( SQLCODE != 0 )
			{
	  		fn_errlog( c_ServiceName, "S31100",SQLMSG,c_err_msg);
	  		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FUP for NSE <%ld>", SQLCODE);
	  		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	  		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	  		return ( FAILURE );
			}

			EXEC SQL 
					SELECT trunc(nvl(sum(FOP_UEXCTD_MRGN +  NVL(FOP_UDLVRY_MRGN,0)),0)) /** Ver 1.1 * Ver 2.8 Added Dlvry Mrgn **/
					INTO  :d_opt_mrgn_req_nse
					FROM  FOP_FO_OPTIONS_PSTN 
					WHERE FOP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FOP_XCHNG_CD = 'NFO'; /** Ver 1.4 **/

			if ( SQLCODE != 0 )
			{
	   		fn_errlog( c_ServiceName, "S31105",SQLMSG,c_err_msg);
	   		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FOP for NSE <%ld>", SQLCODE);
	   		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	   		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	   		return ( FAILURE );
			}

			d_total_mrgn_req_nse = d_fut_mrgn_req_nse + d_opt_mrgn_req_nse;
			if(DEBUG_MSG_LVL_3)
			{
			 fn_userlog(c_ServiceName,"total margin-nse(f+o)<%lf+ %lf>=<%lf>-Normal Client",d_fut_mrgn_req_nse,d_opt_mrgn_req_nse,d_total_mrgn_req_nse);
			}
			/*********  Margin Requirement calculation for NSE for Normal client End **********/
  }
	else if (c_spn_flg == 'Y' ) /*** Ver 1.3 ***/
  {
      if(DEBUG_MSG_LVL_3)
      {
       fn_userlog(c_ServiceName,"Inside SPAN Customer <%s>  For Computing Margin Req ",c_cln_mtch_accnt);
      }

      /*********  Margin Requirement calculation for BSE & NSE for SPAN client Start **********/
      if (c_bsespn_flg == 'Y')  /** Added condition -POST UAT - for SPAN BSE Orders **/
      {
      
			/*** Commented in Ver 1.5 ***
			** Added trunc in Ver 1.4 ****
      EXEC SQL
          SELECT trunc(nvl(sum( (FUS_INITIAL_MRGN + FUS_BLCKD_PL )),0)) *** Blocked PL is Add Mrgn In SPAN ***
          INTO  :d_total_mrgn_req_bse
          FROM  FUS_FO_UNDRLYNG_SPN_PSTN
          WHERE FUS_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FUS_XCHNG_CD = 'BFO';
			***/

			/*** Ver 1.5 starts ***/
			EXEC SQL
					SELECT nvl(sum(TOT_MRGN_BSE),0) 
 				  INTO	 :d_total_mrgn_req_bse
					FROM 
					(
						SELECT trunc(nvl(sum( (FUS_INITIAL_MRGN + FUS_BLCKD_PL )),0)) 	AS TOT_MRGN_BSE	 /*** Blocked PL is Add Mrgn In SPAN ***/
						FROM  FUS_FO_UNDRLYNG_SPN_PSTN
						WHERE FUS_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
						AND   FUS_XCHNG_CD = 'BFO'
						UNION ALL
						SELECT trunc(nvl( sum((FUP_UTRD_MRGN + FUP_ADD_MRGN_VAL)), 0))	AS TOT_MRGN_BSE	/*** SPAN FuturePLUS margin ***/
						FROM  FUP_FUT_UNDRLYNG_PSTN
						WHERE FUP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
						AND   FUP_PRDCT_TYP = 'P'
						AND   FUP_XCHNG_CD = 'BFO'
            /** Ver 2.8 Starts **/
            UNION ALL
            SELECT trunc(nvl(sum(NVL(FCP_UDLVRY_MRGN,0)), 0)) AS TOT_MRGN_BSE
            FROM FCP_FO_SPN_CNTRCT_PSTN
            WHERE FCP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
            AND   FCP_PRDCT_TYP = 'O'
            AND   FCP_XCHNG_CD  ='BFO'
            AND   FCP_OPNPSTN_FLW ='B'
            /** Ver 2.8 Ends **/
					); 
			/*** Ver 1.5 ends ***/			

      if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31110",SQLMSG,c_err_msg);
        fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FUS for BSE <%ld>", SQLCODE);
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
        return ( FAILURE );
      }
      }
      /** Added part -POST UAT - for SPAN BSE Orders -- Starts  **/
      if (c_bsespn_flg == 'N')
      {
			EXEC SQL 
				SELECT trunc(nvl( sum((FUP_UTRD_MRGN + FUP_ADD_MRGN_VAL)), 0)) /** Ver 1.1 **/
			 		INTO :d_fut_mrgn_req_bse
			 		FROM  FUP_FUT_UNDRLYNG_PSTN
			 		WHERE FUP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FUP_XCHNG_CD = 'BFO'; 

			if ( SQLCODE != 0 )
			{
	  		fn_errlog( c_ServiceName, "S31115",SQLMSG,c_err_msg);
	  		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FUP for BSE -SPAN <%ld>", SQLCODE);
	  		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	  		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	  		return ( FAILURE );
			}

			EXEC SQL 
					SELECT trunc(nvl(sum(FOP_UEXCTD_MRGN + NVL(FOP_UDLVRY_MRGN,0)),0)) /** Ver 1.1 **  Ver 2.8 Added Dlvry Mrgn **/
					INTO  :d_opt_mrgn_req_bse
					FROM  FOP_FO_OPTIONS_PSTN 
					WHERE FOP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FOP_XCHNG_CD = 'BFO';

			if ( SQLCODE != 0 )
			{
	   		fn_errlog( c_ServiceName, "S31120",SQLMSG,c_err_msg);
	   		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FOP for BSE _SPAN<%ld>", SQLCODE);
	   		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	   		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	   		return ( FAILURE );
			}

			d_total_mrgn_req_bse = d_fut_mrgn_req_bse + d_opt_mrgn_req_bse;
			if(DEBUG_MSG_LVL_3)
			{
			 fn_userlog(c_ServiceName,"total margin-bse(f+o)<%lf+ %lf>=<%lf> For SPAN client with Norm-BSE",d_fut_mrgn_req_bse,d_opt_mrgn_req_bse,d_total_mrgn_req_bse);
			}
      }
      /** Added part -POST UAT - for SPAN BSE Orders -- Ends  **/

			/*** Commented in Ver 1.5 ***
      ** Added trunc in Ver 1.4  **
      EXEC SQL
          SELECT trunc(nvl(sum( (FUS_INITIAL_MRGN + FUS_BLCKD_PL )),0)) *** Blocked PL is Add Mrgn In SPAN ***
          INTO  :d_total_mrgn_req_nse
          FROM  FUS_FO_UNDRLYNG_SPN_PSTN
          WHERE FUS_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FUS_XCHNG_CD = 'NFO';
			***/

			/*** Ver 1.5 starts ***/
			EXEC SQL
					SELECT nvl(sum(TOT_MRGN_NSE),0) 
					INTO  :d_total_mrgn_req_nse
					FROM
					(
						SELECT trunc(nvl(sum( (FUS_INITIAL_MRGN + FUS_BLCKD_PL )),0)) AS TOT_MRGN_NSE /*** Blocked PL is Add Mrgn In SPAN ***/
						FROM  FUS_FO_UNDRLYNG_SPN_PSTN
						WHERE FUS_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
						AND   FUS_XCHNG_CD = 'NFO'
						UNION ALL
						SELECT trunc(nvl( sum((FUP_UTRD_MRGN + FUP_ADD_MRGN_VAL)), 0)) AS TOT_MRGN_NSE	/*** SPAN FuturePLUS margin ***/
						FROM  FUP_FUT_UNDRLYNG_PSTN
						WHERE FUP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
						AND   FUP_PRDCT_TYP = 'P'
						AND   FUP_XCHNG_CD = 'NFO'
            /** Ver 2.8 Started **/
            UNION ALL
            SELECT trunc(nvl(sum(NVL(FCP_UDLVRY_MRGN,0)), 0)) AS TOT_MRGN_NSE
            FROM FCP_FO_SPN_CNTRCT_PSTN
            WHERE FCP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
            AND   FCP_PRDCT_TYP = 'O'
            AND   FCP_XCHNG_CD  ='NFO'
            AND   FCP_OPNPSTN_FLW ='B'
            /** Ver 2.8 Ends **/
					);
			/*** Ver 1.5 ends ***/

      if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31125",SQLMSG,c_err_msg);
        fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FUS for BSE <%ld>", SQLCODE);
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
        return ( FAILURE );
      }
      
      if(DEBUG_MSG_LVL_3)
      {
       fn_userlog(c_ServiceName,"Total margin required -SPAN(BSE =<%lf>",d_total_mrgn_req_bse);
       fn_userlog(c_ServiceName,"Total margin required -SPAN(NSE =<%lf>",d_total_mrgn_req_nse);
      }
      /*********  Margin Requirement calculation for BSE & NSE for SPAN client End **********/
  }

  /************************************************************************/
  /** Block to obtain required margin of SPAN client for NSE & BSE Ends  **/
  /************************************************************************/

	/* #################################################################################################### */
	/**************   Main Block for Calculation of Margin to be blocked under BSE & NSE Starts *************/ 
	/* #################################################################################################### */

	/************************************** STEP -1 ******************************************/		
	/*******    To Adjust required ISEC margin amount from Pledge amount           ***********/
	/*****************************************************************************************/
  /******************************************************************************************
    d_appl_mrgn_amt_bse => Amount left to be blocked after considering pledge amount for BSE 	
    d_old_plg_amt_nse   => Amount left in Pledge for NSE margin to consider after used in BSE requirement
    d_appl_mrgn_amt_nse => Amount left to be blocked after considering pledge amount for NSE	
  ******************************************************************************************/
 
  /***** Commented in Ver 1.7 *****
  d_appl_mrgn_amt_bse =   (d_total_mrgn_req_bse == 0) ? 0 : (d_total_mrgn_req_bse - d_old_plg_amt);
  d_old_plg_amt_nse   =   ((d_old_plg_amt - d_total_mrgn_req_bse) <= 0 ) ? 0 :  (d_old_plg_amt - d_total_mrgn_req_bse);
  d_appl_mrgn_amt_nse =   (d_total_mrgn_req_nse == 0) ? 0 : (d_total_mrgn_req_nse - d_old_plg_amt_nse);
  *********************************/
 
  /*** Ver 1.7 Starts Here ***********************************************************************************
  Since from FDR Module, the ordering of Isec Margin adjustment is changed, first FDR amount shall be consider
  followed by existing pledge amount.
  ************************************************************************************************************/

  d_appl_mrgn_amt_bse = (d_total_mrgn_req_bse == 0) ? 0 : (d_total_mrgn_req_bse - d_old_fdr_amt);

  if( d_appl_mrgn_amt_bse <= 0 )
  {
   d_old_fdr_amt_nse = d_old_fdr_amt - d_total_mrgn_req_bse;
   d_old_plg_amt_nse = d_old_plg_amt;
  }
  else
  {
    d_old_fdr_amt_nse = 0;
    d_appl_mrgn_amt_bse = d_appl_mrgn_amt_bse - d_old_plg_amt;
    if( d_appl_mrgn_amt_bse <= 0 )
    {
      d_old_plg_amt_nse = d_old_plg_amt - d_appl_mrgn_amt_bse;
    }
    else
    {
      d_old_plg_amt_nse = 0;
    }
  }

  if(DEBUG_MSG_LVL_3)
  {
   fn_userlog(c_ServiceName," d_appl_mrgn_amt_bse :%lf:", d_appl_mrgn_amt_bse);
   fn_userlog(c_ServiceName," d_old_fdr_amt_nse   :%lf:", d_old_fdr_amt_nse );
   fn_userlog(c_ServiceName," d_old_plg_amt_nse   :%lf:", d_old_plg_amt_nse );
  }

  d_appl_mrgn_amt_nse =   (d_total_mrgn_req_nse == 0) ? 0 : (d_total_mrgn_req_nse - d_old_fdr_amt_nse - d_old_plg_amt_nse);

  /*** Ver 1.7 Ends Here ****/
 
  
  d_new_plg_amt       = d_old_plg_amt;
  d_new_fdr_amt       = d_old_fdr_amt;  /** Ver 1.7 **/  
 
  if(d_appl_mrgn_amt_bse <= 0)  /** If required bse isec mrgn is adjusted only from pledge amount **/
  {
	  fn_userlog(c_ServiceName,"Required margin for BSE is adjusted totally from plg amt ");
	  d_appl_mrgn_amt_bse = 0; 		  
	}
  if(d_appl_mrgn_amt_nse <= 0)  /** If required nse isec mrgn is adjusted only from pledge amount **/
  {
	  fn_userlog(c_ServiceName,"Required margin for NSE is adjusted totally from plg amt ");
	  d_appl_mrgn_amt_nse = 0; 
	}
	if(DEBUG_MSG_LVL_3)
	{
	 fn_userlog(c_ServiceName,"Val of d_appl_mrgn_amt_bse aftr considering plg amt <%lf>", d_appl_mrgn_amt_bse);
	 fn_userlog(c_ServiceName,"Val of d_appl_mrgn_amt_nse aftr considering plg amt <%lf>", d_appl_mrgn_amt_nse);
	}

	/************************************** STEP -2 ******************************************/		
	/*****    To Adjust Left ISEC margin amount to be blocked from Old ISEC amount    ********/
	/*****************************************************************************************/
	/* First Check the diff of Old and new required ISEC margin */

	if(DEBUG_MSG_LVL_3)
	{
	 fn_userlog(c_ServiceName,"Val of d_old_isec_mrgn_amt_bse  <%lf>", d_old_isec_mrgn_amt_bse);
	 fn_userlog(c_ServiceName,"Val of d_old_isec_mrgn_amt_nse  <%lf>", d_old_isec_mrgn_amt_nse);
	}
    
  d_diff_isec_mrgn_amt_bse = d_old_isec_mrgn_amt_bse - d_appl_mrgn_amt_bse ;
  d_diff_isec_mrgn_amt_nse = d_old_isec_mrgn_amt_nse - d_appl_mrgn_amt_nse ;

  if (d_diff_isec_mrgn_amt_bse > 0)
  {
    c_dbcr_ind_bse = 'C';
    fn_userlog(c_ServiceName,"Diff OLD ISEC & new reqd ISEC for BSE is positive<%lf> :CREDIT CASE-BSE", d_diff_isec_mrgn_amt_bse);
  }
  if (d_diff_isec_mrgn_amt_nse > 0)
  { 
     c_dbcr_ind_nse = 'C';
     fn_userlog(c_ServiceName,"Diff OLD ISEC & new reqd ISEC for NSE is positive<%lf> :CREDIT CASE-NSE", d_diff_isec_mrgn_amt_nse);
  }
  /***************************************************************************************************/
  if (d_diff_isec_mrgn_amt_bse < 0)
  {
     c_dbcr_ind_bse = 'D';
     fn_userlog(c_ServiceName,"Diff OLD ISEC & new reqd ISEC for BSE is Negative<%lf> :DEBIT CASE-BSE", d_diff_isec_mrgn_amt_bse);
  }
  if (d_diff_isec_mrgn_amt_nse < 0)
  {
     c_dbcr_ind_nse = 'D';
     fn_userlog(c_ServiceName,"Diff OLD ISEC & new reqd ISEC for NSE is Negative<%lf> :DEBIT CASE-NSE", d_diff_isec_mrgn_amt_nse);
  }
  /***************************************************************************************************/
  if (d_diff_isec_mrgn_amt_bse == 0)
  {
     c_dbcr_ind_bse = 'N';
     fn_userlog(c_ServiceName,"Diff OLD ISEC & new reqd ISEC for BSE is Zero<%lf> :NA CASE-BSE", d_diff_isec_mrgn_amt_bse);
  }
  if (d_diff_isec_mrgn_amt_nse == 0)
  {
     c_dbcr_ind_nse = 'N';
     fn_userlog(c_ServiceName,"Diff OLD ISEC & new reqd ISEC for BSE is Zero <%lf> :NA CASE-BSE", d_diff_isec_mrgn_amt_nse);
  }
  if ( (d_diff_isec_mrgn_amt_bse == 0  && d_diff_isec_mrgn_amt_nse == 0 ) && (c_path == 'B' || c_path == 'S'))
  {
      fn_userlog(c_ServiceName,"No amount to be released or blocked from Batch for-BSE & NSE for <%s>", c_cln_mtch_accnt);
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      return ( -3 );
  }
  /***************************************************************************************************/
 
	/************************************** STEP -3 ******************************************/		
	/*****    Insert data into AMC for CREDIT Case of BSE & NSE Starts                ********/
	/*****************************************************************************************/
	if (( c_path == 'B' || c_path == 'S')  && (c_dbcr_ind_bse == 'C' || c_dbcr_ind_nse == 'C') ) 
	{  /** Outer If for - Credit Part for Batch-BSE OR NSE  Starts **/

		if (c_dbcr_ind_bse == 'C' ) 
		{/** If for - AMC-Insert Part for BSE-CR Starts **/
		/************************************** STEP - 3.1 ****************************************/		
		/*****    Insert data into AMC for CREDIT Case of BSE Starts                       ********/
		/*****************************************************************************************/
	
		d_isec_mrgn_amt_bse =  d_diff_isec_mrgn_amt_bse;  /** Amount to hit for BSE **/	   
		d_to_cr_alctd_amt   =  d_isec_mrgn_amt_bse ;
		d_new_bft_amt   = d_old_bft_amt;   /** As BFT amt will not change in Credit Case **/		
		d_to_db_alctd_amt = 0;
		d_to_db_bft_amt = 0;
		d_new_plg_amt = d_old_plg_amt;
    d_new_fdr_amt = d_old_fdr_amt;  /** Ver 1.7 **/

		if(DEBUG_MSG_LVL_3)
		{
	 		fn_userlog(c_ServiceName,"Val of d_isec_mrgn_amt_bse in case of BSE-CR <%lf> with batch-site<%c>", d_isec_mrgn_amt_bse, c_path);
	 		fn_userlog(c_ServiceName,"Val of d_to_cr_alctd_amt in case of BSE-CR <%lf> with batch-site<%c>", d_to_cr_alctd_amt, c_path);
	 		fn_userlog(c_ServiceName,"Val of d_new_bft_amt in case of BSE-CR <%lf> with batch-site<%c>", d_new_bft_amt, c_path);
		}
		strcpy(c_xchng_cd,"BFO");

		if (c_view_st != 'Y' && d_isec_mrgn_amt_bse != 0)  
     /*** Should not do any updates in case of only view to ISEC Margin amt from site ***/
		{  /** If for actual AMC insert Starts **/

       i_ret_val = fn_ins_amc_tbl(c_ServiceName,
															    c_xchng_cd,
																  c_cln_mtch_accnt,
																  c_bnk_accnt,
																  c_trd_dt,
			        									  d_total_mrgn_req_bse,
																	d_old_plg_amt,            
																  d_old_alctd_amt,          
																	d_old_bft_amt,            
															    d_old_isec_mrgn_amt_bse,  
																  d_appl_mrgn_amt_bse,      
																	c_run_dt,
																	li_run_no,
																	d_new_plg_amt,       
																	d_to_cr_alctd_amt,   
																	d_to_db_alctd_amt,   
																	d_to_db_bft_amt,     
																	d_isec_mrgn_amt_bse,                       
																	c_dbcr_ind_bse,
																	c_path,
                                  d_old_fdr_amt,     /** Ver 1.7 **/
                                  d_new_fdr_amt,      /** Ver 1.7 **/
                                  c_blk_deposit_flg /** Ver 2.7 **/ 
		  														);


	 		 if ( i_ret_val != 0 )
			 {
	    	fn_errlog(c_ServiceName, "L31780",LIBMSG,c_err_msg);
	    	fn_userlog(c_ServiceName,"Error in fn call fn_ins_amc_tbl for BSE-CR");
	    	fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
	    	Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	    	return ( -1 );
	 		 }

   		 if(DEBUG_MSG_LVL_5)
       {
        fn_userlog(c_ServiceName,"After inserting data in AMC-Credit-BSE for <%s>", c_cln_mtch_accnt); 
       } 
    }/** If for actual AMC insert Ends **/
	 } /** If for - AMC-Insert Part for -BSE-CR Ends **/

	 /* ###############################################################################  */
	 /************************************** STEP - 3.2  ******************************************/		
	 /*****    Insert data into AMC for CREDIT Case of NSE      ********/
	 /*****************************************************************************************/

	 if (( c_path == 'B' || c_path == 'S' )  && c_dbcr_ind_nse == 'C' ) 
	 {/** If for - AMC-Insert Part for NSE-CR Starts **/
		 d_isec_mrgn_amt_nse =  d_diff_isec_mrgn_amt_nse;  /** Amount to hit for NSE **/	   
		 d_to_cr_alctd_amt_nse = d_isec_mrgn_amt_nse ;
		 d_new_bft_amt   = d_old_bft_amt;   /** As BFT amt will not change in Credit Case **/		
		 d_to_db_alctd_amt = 0;
		 d_to_db_bft_amt = 0;

		 if(DEBUG_MSG_LVL_3)
		 {
	 		fn_userlog(c_ServiceName,"Val of d_isec_mrgn_amt_nse in case of NSE-CR <%lf> with batch-site<%c>", d_isec_mrgn_amt_nse, c_path);
	 		fn_userlog(c_ServiceName,"Val of d_to_cr_alctd_amt_nse in case of NSE-CR <%lf> with batch-site<%c>", d_to_cr_alctd_amt_nse, c_path);
	 		fn_userlog(c_ServiceName,"Val of d_new_bft_amt in case of NSE-CR <%lf> with batch-site<%c>", d_new_bft_amt, c_path);
		 }
		 strcpy(c_xchng_cd,"NFO");
		 
     if (c_view_st != 'Y' && d_isec_mrgn_amt_nse != 0)   
     /*** Should not do any updates in case of only view to ISEC Margin amt from site ***/
		 {  /** If for actual AMC insert -NSE Starts **/

      	i_ret_val = fn_ins_amc_tbl(c_ServiceName,
																		c_xchng_cd,
																		c_cln_mtch_accnt,
																		c_bnk_accnt,
																		c_trd_dt,
			        											d_total_mrgn_req_nse,
																		d_old_plg_amt,            
																		d_old_alctd_amt,          
																		d_old_bft_amt,            
																		d_old_isec_mrgn_amt_nse,  
																		d_appl_mrgn_amt_nse,      
																		c_run_dt,
																		li_run_no,
																		d_new_plg_amt,       
																		d_to_cr_alctd_amt_nse,   
																		d_to_db_alctd_amt,   
																		d_to_db_bft_amt,     
																		d_isec_mrgn_amt_nse,                          
																		c_dbcr_ind_nse,
																		c_path,
                                    d_old_fdr_amt,      /** Ver 1.7 **/
                                    d_new_fdr_amt,      /** Ver 1.7 **/
                                    c_blk_deposit_flg   /** Ver 2.7 **/
		  														 );

	 			if ( i_ret_val != 0 )
	 			{
	    		fn_errlog(c_ServiceName, "L31780",LIBMSG,c_err_msg);
	    		fn_userlog(c_ServiceName,"Error in fn call fn_ins_amc_tbl for NSE-CR");
	    		fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
	    		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	    		return ( -1 );
			  }

  	 		if(DEBUG_MSG_LVL_5)
     		{
      		fn_userlog(c_ServiceName,"After inserting data in AMC-Credit-NSE for <%s>", c_cln_mtch_accnt);
     		} 
		 } /** If for actual AMC insert-NSE  Ends **/
   }  /** If for - Credit Part for NSE Ends  **/

   if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
   {
    fn_errlog( c_ServiceName, "S31130",LIBMSG,c_err_msg);
    fn_userlog(c_ServiceName,"Error in initial commit tran --1 ");
   	Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    return ( -1 );
   }

   fn_userlog(c_ServiceName,"After Commit transaction for inserting data in AMC-Credit Case for <%s>", c_cln_mtch_accnt); 

   /* ###########   After computaion and insert in AMC- Call actual bank hits for BSE first ########  */

	 /************************************** STEP - 4 ****************************************/		
	 /*****    Actual Bank hits for BSE & NSE for Credit Case                         ********/
	 /*****************************************************************************************/
	 /************************************** STEP - 4.1 ***************************************/		
	 /*****    Actual Bank hits for BSE for Credit Case                                ********/
	 /*****************************************************************************************/

   if (c_dbcr_ind_bse == 'C'  && (c_view_st != 'Y' && d_isec_mrgn_amt_bse != 0)) 
   {  /** If for - Bank hits Part for -BSE-CR Starts **/

  	  strcpy(c_xchng_cd, "BFO");
	 		i_ret_val = fn_call_upd_fab( c_ServiceName,
													       c_xchng_cd,
					     								   c_cln_mtch_accnt,
													 		   c_bnk_accnt,
													 		   c_path,
															   c_view_st,
															   c_release_st,
															   c_dbcr_ind_bse,
					     								   c_run_dt,
															   c_trd_dt,
					     								   d_old_plg_amt,
					     								   d_old_alctd_amt,
					     							     d_old_bft_amt,
					     								   d_old_isec_mrgn_amt_bse,
													 		   d_new_plg_amt,
															   d_to_cr_alctd_amt,   
					     							     d_to_db_alctd_amt,
														     d_to_db_bft_amt,
					    	 							   d_isec_mrgn_amt_bse,
													 		   li_run_no,
													 		   c_tag,
                                 d_old_fdr_amt,   /*** Ver 1.7 ***/
                                 d_new_fdr_amt,  /*** Ver 1.7 ***/
                                 c_blk_deposit_flg);  /*** Ver 2.7 ***/

	  	if ( i_ret_val != 0 )
	    {
	    	fn_errlog(c_ServiceName, "L31450",LIBMSG,c_err_msg);
	    	fn_userlog(c_ServiceName,"Error in fn call fn_call_upd_fab ");
	   	  fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );

        /****** Ver 1.6 Starts Here *******/
        /*** Below patch is written to mark the NFO record as failure in case if the fn_call_upd_fab is failed for
             BFO. *****/

        if (c_dbcr_ind_nse == 'C' && (c_view_st != 'Y' && d_isec_mrgn_amt_nse != 0)) 
        {

         fn_userlog(c_ServiceName,"Inside Update NSE Record as fail");
         strcpy(c_xchng_cd,"NFO");
         i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
         if ( i_trnsctn == -1 )
         {
          fn_errlog(c_ServiceName, "S31135",LIBMSG,c_err_msg);
          return ( FAILURE );
         }

         EXEC SQL
                UPDATE AMC_ADM_MRGN_CALC
                SET    AMC_STATUS_FLG =  'F'
                WHERE  AMC_XCHNG_CD = :c_xchng_cd
                AND    AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                AND   trunc(AMC_RUN_DT) = trunc(sysdate)
                AND   AMC_TRD_DT = :c_trd_dt
                AND   AMC_RUN_NO  = :li_run_no
                AND   AMC_BILL_NO  is NULL
                AND   AMC_BATCH_SITE_IND = :c_path;
        if( SQLCODE != 0 )
        {
         fn_errlog( c_ServiceName, "S31140",SQLMSG,c_err_msg);
         fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         return ( FAILURE );
        }

        if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
        {
         fn_errlog( c_ServiceName, "S31145",LIBMSG,c_err_msg);
         fn_userlog(c_ServiceName,"Error in commit tran for AMC insert in Debit ");
         Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
         fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         strcpy ( c_msg, "System error. Contact system support" );
         fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
         return ( -1 );
        }
       }
       /****** Ver 1.6 Ends Here ********/

	      Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	    	return ( -1 );
	 		}

   	  if(DEBUG_MSG_LVL_3)
      {
       fn_userlog(c_ServiceName,"After release of old isec margin in-Batch-Credit-BSE for <%s>", c_cln_mtch_accnt); 
      }
   } /** If for - Bank hits Part for BSE-CR Ends **/

	 /* ###########   After computaion and insert in AMC- Call actual bank hits for NSE Now ########  */

	 /************************************** STEP - 4.2 ****************************************/		
	 /*****    Actual Bank hits for NSE for Credit Case                        ********/
	 /*****************************************************************************************/

   if (c_dbcr_ind_nse == 'C' && (c_view_st != 'Y' && d_isec_mrgn_amt_nse != 0)) 
   {  /** If for - Bank hits Part for Batch-NSE-CR Starts **/
	 	  strcpy(c_xchng_cd, "NFO");
	  	fn_userlog(c_ServiceName,"Call release of old isec margin in-Batch-Credit-NSE for <%s> -Xchng_cd<%s>", c_cln_mtch_accnt, c_xchng_cd); 
	  	i_ret_val = fn_call_upd_fab( c_ServiceName,
													       c_xchng_cd,
					     								   c_cln_mtch_accnt,
													 		   c_bnk_accnt,
													 		   c_path,
															   c_view_st,
															   c_release_st,
															   c_dbcr_ind_nse,
					     								   c_run_dt,
															   c_trd_dt,
					     								   d_old_plg_amt,
					     								   d_old_alctd_amt,
					     							     d_old_bft_amt,
					     								   d_old_isec_mrgn_amt_nse,
													 		   d_new_plg_amt,
															   d_to_cr_alctd_amt_nse,   
					     							     d_to_db_alctd_amt,
														     d_to_db_bft_amt,
					     								   d_isec_mrgn_amt_nse,
													 		   li_run_no,
													 		   c_tag,
                                 d_old_fdr_amt,   /*** Ver 1.7 ***/
                                 d_new_fdr_amt,  /*** Ver 1.7 ***/
                                 c_blk_deposit_flg);  /*** Ver 2.7 ***/

	 		if ( i_ret_val != 0 )
	 		{
	    	fn_errlog(c_ServiceName, "L31450",LIBMSG,c_err_msg);
	    	fn_userlog(c_ServiceName,"Error in fn call fn_call_upd_fab ");
	    	fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
	    	Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	    	return ( -1 );
	 		}

  	  fn_userlog(c_ServiceName,"After release of old isec margin in-Batch-Credit-NSE for <%s>", c_cln_mtch_accnt); 

  } /** If for - Bank hits Part for Batch-NSE-CR Ends **/

  }  /** Outer If for - Credit Part for Batch-BSE OR NSE  Ends **/

	/* #################################################################################################### */
	/**************   Credit Block for Calculation of Margin & Insert in AMC under BSE & NSE Ends *************/ 
	/* #################################################################################################### */

	/* #################################################################################################### */
	/************************************** STEP - 5 ****************************************/		
		/* #######################    DEBIT CASE ####################### */
	/* #################################################################################################### */
	/*****************************************************************************************/

	if( (c_dbcr_ind_bse == 'D' || c_dbcr_ind_nse == 'D') ) 
	{ /** Start of If -for DEBIT Case in any of the exchange  **/
  	/****************************************************************************
  	* Above if condition implies =>
  	* Debit part is left for Either or Both of exchange
  	****************************************************************************/
		if ((c_dbcr_ind_bse == 'C' || c_dbcr_ind_nse == 'C') && (c_dbcr_ind_bse == 'D' || c_dbcr_ind_nse == 'D') )
    {
			/****************************************************************************
			* Above if condition implies =>
			* Credit part is complete for Either of exchange
			* Hence , get the updated allocated amount for debit in other exchange
			****************************************************************************/
	
			i_trnsctn = fn_begintran( c_ServiceName, c_err_msg ); 
			if ( i_trnsctn == -1 )
			{
				fn_errlog(c_ServiceName, "S31150",LIBMSG,c_err_msg);
				return ( FAILURE );
			}

			i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
			if ( i_returncode != 0 )
			{
	  		fn_errlog(c_ServiceName, "L31270",LIBMSG,c_err_msg);
	  		fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
	  		return ( -1 );
			}
			/** Ver 3.1 Start */
			i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
			if ( i_returncode != 0 )
			{
				fn_errlog(c_ServiceName, "L31271",LIBMSG,c_err_msg);
				fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
				return ( -1 );
			}
			/** Ver 3.1 End */

			fn_userlog(c_ServiceName,"After begin Transaction with lock- For Debit case in Recomputation for match id <%s>", c_cln_mtch_accnt);
			/*****    Recompute FAB status of allocation after Credit Leg            ********/

			EXEC SQL 
				SELECT  FAB_BNK_ACCNT, 
			 					nvl(FAB_ALCTD_AMT,0),
			 					nvl(FAB_BFT_AMT,0),
			 					nvl(FAB_PLG_AMT,0),
			 					nvl(FAB_ISEC_MRGN_AMT,0),
								nvl(FAB_ISEC_MRGN_AMT_BSE,0),
                nvl(FAB_FDR_AMT,0)         /** Ver 1.7 **/
		  INTO      :c_bnk_accnt,
			 					:d_old_alctd_amt,       
			 					:d_old_bft_amt,         
			 					:d_old_plg_amt,         
			 					:d_old_isec_mrgn_amt_nse,
								:d_old_isec_mrgn_amt_bse,
                :d_old_fdr_amt              /** Ver 1.7 **/
			FROM	 		FAB_FO_ALC_BFT_SMRY 
			WHERE	 		FAB_CLM_MTCH_ACCNT = :c_cln_mtch_accnt;

			if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
			{
	   		fn_errlog( c_ServiceName, "S31155",SQLMSG,c_err_msg);
	   		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FAB for Debit <%ld>", SQLCODE);
	   		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	   		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	   		return ( FAILURE );
			}
			if ( SQLCODE == NO_DATA_FOUND )
			{
	   		fn_userlog(c_ServiceName,"No entry in FAB for match id <%s>", c_cln_mtch_accnt);
	   		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	   		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	   		return ( FAILURE );
			}
 			rtrim(c_bnk_accnt); 
			strcpy(st_usr_prfl.c_user_id,"system");
			strcpy(st_usr_prfl.c_cln_mtch_accnt,c_cln_mtch_accnt);
			strcpy(st_usr_prfl.c_bnk_accnt_nmbr[0],c_bnk_accnt);
			st_usr_prfl.l_session_id = 0;

  		if(DEBUG_MSG_LVL_3)
  		{
				fn_userlog(c_ServiceName,"Val of d_old_alctd_amt after FAB 2nd time select [%lf]",d_old_alctd_amt);
				fn_userlog(c_ServiceName,"Val of d_old_bft_amt after FAB 2nd time select [%lf]",d_old_bft_amt);
				fn_userlog(c_ServiceName,"Val of d_old_plg_amt after FAB 2nd time select [%lf]",d_old_plg_amt);
				fn_userlog(c_ServiceName,"Val of d_old_fdr_amt after FAB 2nd time select [%lf]",d_old_fdr_amt);   /*** ver 1.7 ***/
				fn_userlog(c_ServiceName,"Val of d_old_isec_mrgn_amt_nse after FAB 2nd time select [%lf]",d_old_isec_mrgn_amt_nse);
				fn_userlog(c_ServiceName,"Val of d_old_isec_mrgn_amt_bse after FAB 2nd time select [%lf]",d_old_isec_mrgn_amt_bse);
			}

    }
		/************************************** STEP - 5.1 ******************************************/		
		/*****    Insert data into AMC for Debit Case of BSE Starts                ********/
		/*****************************************************************************************/

		if (c_dbcr_ind_bse == 'D' ) 
		{/** If for - AMC-Insert Part for BSE-DR Starts **/
			/************************************** STEP - 5.1.1 ****************************************/		
			/*****    Insert data into AMC for DEBIT Case of BSE Starts                       ********/
			/*****************************************************************************************/
			strcpy(c_xchng_cd,"BFO");
			d_isec_mrgn_amt_bse =  (-1) * d_diff_isec_mrgn_amt_bse;  /** Amount to hit for BSE to Debit **/	   
			d_to_cr_alctd_amt = 0;
			/* Here , multiplied by (-1) as difference is negative in case of Debit */
	  
	  	if (d_old_alctd_amt >= d_isec_mrgn_amt_bse )
	  	{
		  	d_to_db_alctd_amt   =  d_isec_mrgn_amt_bse ;
		  	d_to_db_bft_amt     =  0 ;
		  	if(DEBUG_MSG_LVL_3)
		  	{		   
					fn_userlog(c_ServiceName,"Val of d_isec_mrgn_amt_bse adjusted from  Only Alloc amt <%lf> ",d_isec_mrgn_amt_bse);
					fn_userlog(c_ServiceName,"Val of d_to_db_alctd_amt adjusted from Only Alloc amt <%lf>",d_to_db_alctd_amt);
					fn_userlog(c_ServiceName,"Val of d_to_db_bft_amt adjusted from Only Alloc amt <%lf>",d_to_db_bft_amt);
		  	}
	  	}
	  	else
	  	{
		  	d_to_db_alctd_amt   =  d_old_alctd_amt ;
		  	d_to_db_bft_amt =  (d_old_bft_amt > (d_isec_mrgn_amt_bse - d_old_alctd_amt)) ? (d_isec_mrgn_amt_bse - d_old_alctd_amt) : d_old_bft_amt ;
		  	
			/*****   Changes added Post Live on 21-Jun-2012 for proper update of d_isec_mrgn_amt_bse Start **************/
      if (d_isec_mrgn_amt_bse >= (d_old_alctd_amt + d_old_bft_amt ))
      {
			   d_isec_mrgn_amt_bse = d_old_alctd_amt + d_old_bft_amt ;
			   fn_userlog(c_ServiceName,"BSE-In case of d_isec_mrgn_amt_bse -not covered totally from Both Alloc & BFT<%lf> ",d_isec_mrgn_amt_bse);
      } 
			/*******   Changes added Post Live on 21-Jun-2012 for proper update of d_isec_mrgn_amt_bse End ***************/
	
			if(DEBUG_MSG_LVL_3)
		  	{		   
					fn_userlog(c_ServiceName,"Val of d_isec_mrgn_amt_bse adjusted from  Both Alloc & BFT<%lf> ",d_isec_mrgn_amt_bse);
					fn_userlog(c_ServiceName,"Val of d_to_db_alctd_amt adjusted from  Both Alloc & BFT<%lf>",d_to_db_alctd_amt);
					fn_userlog(c_ServiceName,"Val of d_to_db_bft_amt adjusted from  Both Alloc & BFT<%lf>",d_to_db_bft_amt);
		  	}
	  	}
	  	d_alctd_amt_aftr_bse = d_old_alctd_amt - d_to_db_alctd_amt;
	  	d_bft_amt_aftr_bse   = d_old_bft_amt - d_to_db_bft_amt;
	  
	  	fn_userlog(c_ServiceName,"Val of d_alctd_amt_aftr_bse After used for BSE margin requirement <%lf>",d_alctd_amt_aftr_bse);
	  	fn_userlog(c_ServiceName,"Val of d_bft_amt_aftr_bse After used for BSE margin requirement <%lf>",d_bft_amt_aftr_bse);


			if (c_view_st != 'Y' && d_isec_mrgn_amt_bse != 0)  
       /*** Should not do any updates in case of only view to ISEC Margin amt from site ***/
		  {  /** If for actual AMC insert Starts **/

      	 i_ret_val = fn_ins_amc_tbl(c_ServiceName,
																	  c_xchng_cd,
																		c_cln_mtch_accnt,
																	  c_bnk_accnt,
																	  c_trd_dt,
			        										  d_total_mrgn_req_bse,
																	  d_old_plg_amt,            
																	  d_old_alctd_amt,          
															      d_old_bft_amt,            
																		d_old_isec_mrgn_amt_bse,  
																	  d_appl_mrgn_amt_bse,      
																		c_run_dt,
																	  li_run_no,
																		d_new_plg_amt,       
																	  d_to_cr_alctd_amt,   
																		d_to_db_alctd_amt,   
																	  d_to_db_bft_amt,     
																	  d_isec_mrgn_amt_bse,                           
																	  c_dbcr_ind_bse,
																	  c_path,
                                    d_old_fdr_amt,     /** Ver 1.7 **/
                                    d_new_fdr_amt,      /** Ver 1.7 **/
		   														  c_blk_deposit_flg   /** Ver 2.7 **/
                                    );

	 			 if ( i_ret_val != 0 )
				 {
	    			fn_errlog(c_ServiceName, "L31780",LIBMSG,c_err_msg);
	    			fn_userlog(c_ServiceName,"Error in fn call fn_ins_amc_tbl for BSE-dR");
	    			fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
	    			Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	    			return ( -1 );
	 			 }
   		 fn_userlog(c_ServiceName,"After inserting data in AMC-DEBIT-BSE for <%s>", c_cln_mtch_accnt); 
       }/** If for actual AMC insert Ends **/
	  } /** If for - AMC-Insert Part for -BSE-DR Ends **/

 	  /* ###############################################################################  */

		if (c_dbcr_ind_nse == 'D' ) 
		{/** If for - AMC-Insert Part for NSE-DR Starts **/
			/************************************** STEP - 5.1.2 ****************************************/		
			/*****    Insert data into AMC for DEBIT Case of NSE Starts                       ********/
			/*****************************************************************************************/
			strcpy(c_xchng_cd,"NFO");
			d_isec_mrgn_amt_nse =  (-1) * d_diff_isec_mrgn_amt_nse;  /** Amount to hit for NSE to Debit **/	   
			d_to_cr_alctd_amt = 0;
			/* Here , multiplied by (-1) as difference is negative in case of Debit */
	  
	  	if (c_dbcr_ind_bse == 'D')
	  	{
	   		/** If Debit leg for BSE is already run then use updated Alloc & BFT amt for NSE **/
	   		d_old_alctd_amt_nse = d_alctd_amt_aftr_bse;
	   		d_old_bft_amt_nse = d_bft_amt_aftr_bse;
	   		fn_userlog(c_ServiceName,"Val of d_old_alctd_amt_nse after BSE debit <%lf> ",d_old_alctd_amt_nse);
	   		fn_userlog(c_ServiceName,"Val of d_old_bft_amt_nse after BSE debit <%lf>",d_old_bft_amt_nse);
	  	}
	  	else
	  	{
	   		d_old_alctd_amt_nse = d_old_alctd_amt;
	   	  d_old_bft_amt_nse = d_old_bft_amt;
	   		fn_userlog(c_ServiceName,"Val of d_old_alctd_amt_nse for fresh NSE debit <%lf> ",d_old_alctd_amt_nse);
	   		fn_userlog(c_ServiceName,"Val of d_old_bft_amt_nse for NSE debit <%lf>",d_old_bft_amt_nse);
	  	}
	  
	  	if (d_old_alctd_amt_nse >= d_isec_mrgn_amt_nse )
	  	{
		  	d_to_db_alctd_amt_nse   =  d_isec_mrgn_amt_nse ;
		  	d_to_db_bft_amt_nse     =  0 ;
		  	if(DEBUG_MSG_LVL_3)
		  	{		   
					fn_userlog(c_ServiceName,"NSE-Val of d_isec_mrgn_amt_nse adjusted from  Only Alloc amt <%lf> ",d_isec_mrgn_amt_nse);
					fn_userlog(c_ServiceName,"NSE-Val of d_to_db_alctd_amt_nse adjusted from Only Alloc amt <%lf>",d_to_db_alctd_amt_nse);
					fn_userlog(c_ServiceName,"NSE-Val of d_to_db_bft_amt_nse adjusted from Only Alloc amt <%lf>",d_to_db_bft_amt_nse);
		  	}
	  	}
	  	else
	  	{
		  	d_to_db_alctd_amt_nse   =  d_old_alctd_amt_nse ;
		  	d_to_db_bft_amt_nse =  (d_old_bft_amt_nse > (d_isec_mrgn_amt_nse - d_old_alctd_amt_nse)) ? (d_isec_mrgn_amt_nse - d_old_alctd_amt_nse) : d_old_bft_amt_nse ;

			/********   Changes added Post Live on 21-Jun-2012 for proper update of d_isec_mrgn_amt_nse Start **********/
      if (d_isec_mrgn_amt_nse >= (d_old_alctd_amt_nse + d_old_bft_amt_nse ))
      {
			   d_isec_mrgn_amt_nse = d_old_alctd_amt_nse + d_old_bft_amt_nse;
			   fn_userlog(c_ServiceName,"NSE-In case of d_isec_mrgn_amt_nse -not covered totally from Both Alloc & BFT<%lf> ",d_isec_mrgn_amt_nse);
      } 
			/********   Changes added Post Live on 21-Jun-2012 for proper update of d_isec_mrgn_amt_nse End ***********/

		  	if(DEBUG_MSG_LVL_3)
		  	{		   
					fn_userlog(c_ServiceName,"NSE-Val of d_isec_mrgn_amt_nse adjusted from  Both Alloc & BFT<%lf> ",d_isec_mrgn_amt_nse);
					fn_userlog(c_ServiceName,"NSE-Val of d_to_db_alctd_amt_nse adjusted from  Both Alloc & BFT<%lf>",d_to_db_alctd_amt_nse);
					fn_userlog(c_ServiceName,"NSE-Val of d_to_db_bft_amt_nse adjusted from  Both Alloc & BFT<%lf>",d_to_db_bft_amt_nse);
		  	}
	  	}

 

			if (c_view_st != 'Y' && d_isec_mrgn_amt_nse != 0)   
			/*** Should not do any updates in case of only view to ISEC Margin amt from site ***/
			{  /** If for actual AMC insert Starts **/

       i_ret_val = fn_ins_amc_tbl(c_ServiceName,
																  c_xchng_cd,
																  c_cln_mtch_accnt,
																  c_bnk_accnt,
																  c_trd_dt,
			        										d_total_mrgn_req_nse,
																	d_old_plg_amt_nse,            
																	d_old_alctd_amt_nse,          
																	d_old_bft_amt_nse,            
																	d_old_isec_mrgn_amt_nse,  
																	d_appl_mrgn_amt_nse,      
																	c_run_dt,
																	li_run_no,
																	d_new_plg_amt,       
																	d_to_cr_alctd_amt,   
																	d_to_db_alctd_amt_nse,   
																	d_to_db_bft_amt_nse,     
																	d_isec_mrgn_amt_nse,                           
																	c_dbcr_ind_nse,
																	c_path,
                                  d_old_fdr_amt_nse,     /** Ver 1.7 **/
                                  d_new_fdr_amt,      /** Ver 1.7 **/
                                  c_blk_deposit_flg   /** Ver 2.7 **/
		  														);


			 if ( i_ret_val != 0 )
	 		 {
	   		 fn_errlog(c_ServiceName, "L31780",LIBMSG,c_err_msg);
	   		 fn_userlog(c_ServiceName,"Error in fn call fn_ins_amc_tbl for NSE-DR");
	   		 fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
	   		 Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	    		return ( -1 );
	 		 }

   		 fn_userlog(c_ServiceName,"After inserting data in AMC-DEBIT-NSE for <%s>", c_cln_mtch_accnt); 
      }/** If for actual AMC insert Ends **/
	  } /** If for - AMC-Insert Part for -BSE-DR Ends **/
   
    if ( (c_dbcr_ind_nse == 'C') || (c_dbcr_ind_bse == 'C') )
    {
	  	if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
	  	{
	    	fn_errlog( c_ServiceName, "S31160",LIBMSG,c_err_msg);
	    	fn_userlog(c_ServiceName,"Error in commit tran for AMC insert in Debit ");
				Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	    	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
	    	strcpy ( c_msg, "System error. Contact system support" );
	    	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
	    	return ( -1 );
	  	}
	  	fn_userlog(c_ServiceName,"After Commit transaction- Insert data in AMC-1-Credit, 1-Debit for <%s>", c_cln_mtch_accnt);
    }
    
		if ( (c_dbcr_ind_nse == 'D' || c_dbcr_ind_nse == 'N') && (c_dbcr_ind_bse == 'D' || c_dbcr_ind_bse == 'N') )   
     /** Added post UAT-04-Jun-2012  **/
		{
  		if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  		{
    		fn_errlog( c_ServiceName, "S31165",LIBMSG,c_err_msg);
    		fn_userlog(c_ServiceName,"Error in commit tran for AMC insert in Debit ");
   			Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
    		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    		strcpy ( c_msg, "System error. Contact system support" );
    		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    		return ( -1 );
  		}
  		fn_userlog(c_ServiceName,"After Commit transaction- Insert data in AMC-Both DEBIT-Case for <%s>", c_cln_mtch_accnt); 
		}
 
  	/* ###########   After computaion and insert in AMC for Debit - Call actual bank hits for BSE first ########  */

		/************************************** STEP - 5.2  ****************************************/		
		/*****    Actual Bank hits for BSE & NSE for debit Case                        ********/
		/*****************************************************************************************/

		/************************************** STEP - 5.2.1 ****************************************/		
		/*****    Actual Bank hits for BSE for Debit Case                        ********/
		/*****************************************************************************************/

  	if (c_dbcr_ind_bse == 'D' && (c_view_st != 'Y' && d_isec_mrgn_amt_bse != 0)) 
  	{  /** If for - Bank hits Part for -BSE-Debit Starts **/

  	  strcpy(c_xchng_cd,"BFO");
	  	i_ret_val = fn_call_upd_fab( c_ServiceName,
													       c_xchng_cd,
					     								   c_cln_mtch_accnt,
													 		   c_bnk_accnt,
													 		   c_path,
															   c_view_st,
															   c_release_st,
															   c_dbcr_ind_bse,
					     								   c_run_dt,
															   c_trd_dt,
					     								   d_old_plg_amt,
					     								   d_old_alctd_amt,
					     							     d_old_bft_amt,
					     								   d_old_isec_mrgn_amt_bse,
													 		   d_new_plg_amt,
															   d_to_cr_alctd_amt,   
					     							     d_to_db_alctd_amt,
														     d_to_db_bft_amt,
					     								   d_isec_mrgn_amt_bse,
													 		   li_run_no,
													 		   c_tag, 
                                 d_old_fdr_amt,       /*** Ver 1.7 ***/
                                 d_new_fdr_amt,       /*** Ver 1.7 ***/
                                 c_blk_deposit_flg);  /*** Ver 2.7 ***/  

	 		if ( i_ret_val != 0 )
		  {
	   	  fn_errlog(c_ServiceName, "L31450",LIBMSG,c_err_msg);
	    	fn_userlog(c_ServiceName,"Error in fn call fn_call_upd_fab for BSE-Debit");
	    	fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
        /****** Ver 1.6 Starts Here *******/
        /*** Below patch is written to mark the NFO record as failure in case if the fn_call_upd_fab is failed for 
             BFO. *****/ 

        if (c_dbcr_ind_nse == 'D' && (c_view_st != 'Y' && d_isec_mrgn_amt_nse != 0)) 
        {

         fn_userlog(c_ServiceName,"Inside Update NSE Record as fail");  
         strcpy(c_xchng_cd,"NFO");
         i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
         if ( i_trnsctn == -1 )
         {
          fn_errlog(c_ServiceName, "S31170",LIBMSG,c_err_msg);
          return ( FAILURE );
         }
        
         EXEC SQL
                UPDATE AMC_ADM_MRGN_CALC
                SET    AMC_STATUS_FLG =  'F'
                WHERE  AMC_XCHNG_CD = :c_xchng_cd
                AND    AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                AND   trunc(AMC_RUN_DT) = trunc(sysdate)
                AND   AMC_TRD_DT = :c_trd_dt
                AND   AMC_RUN_NO  = :li_run_no
                AND   AMC_BILL_NO  is NULL
                AND   AMC_BATCH_SITE_IND = :c_path;
        if( SQLCODE != 0 )
        {
         fn_errlog( c_ServiceName, "S31175",SQLMSG,c_err_msg);
         fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         return ( FAILURE );
        }
 
        if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
        { 
         fn_errlog( c_ServiceName, "S31180",LIBMSG,c_err_msg);
         fn_userlog(c_ServiceName,"Error in commit tran for AMC insert in Debit ");
         Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
         fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         strcpy ( c_msg, "System error. Contact system support" );
         fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
         return ( -1 );
        }
       }
       /****** Ver 1.6 Ends Here ********/
	    	Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	    	return ( -1 );
	 		}

   		fn_userlog(c_ServiceName,"After release of old isec margin in-Debit-BSE for <%s>", c_cln_mtch_accnt); 

    } /** If for - Bank hits Part for BSE-Debit Ends **/

		/* ###########   After computaion and insert in AMC-NSE-Debit- Call actual bank hits for NSE Now ########  */

		/************************************** STEP - 5.2.2 ****************************************/		
		/*****    Actual Bank hits for NSE for Debit Case                        ********/
		/*****************************************************************************************/
    if (c_dbcr_ind_nse == 'D' && (c_view_st != 'Y' && d_isec_mrgn_amt_nse != 0)) 
  	{  /** If for - Bank hits Part for NSE-Debit Starts **/
	  	 strcpy(c_xchng_cd,"NFO");
	  	 i_ret_val = fn_call_upd_fab( c_ServiceName,
													       c_xchng_cd,
					     								   c_cln_mtch_accnt,
													 		   c_bnk_accnt,
													 		   c_path,
															   c_view_st,
															   c_release_st,
															   c_dbcr_ind_nse,
					     								   c_run_dt,
															   c_trd_dt,
					     								   d_old_plg_amt_nse,
					     								   d_old_alctd_amt_nse,
					     							     d_old_bft_amt_nse,
					     								   d_old_isec_mrgn_amt_nse,
													 		   d_new_plg_amt,
															   d_to_cr_alctd_amt_nse,   
					     							     d_to_db_alctd_amt_nse,
														     d_to_db_bft_amt_nse,
					     								   d_isec_mrgn_amt_nse,
													 		   li_run_no,
													 		   c_tag,
                                 d_old_fdr_amt_nse,   /*** Ver 1.7 ***/
                                 d_new_fdr_amt,       /*** Ver 1.7 ***/
                                 c_blk_deposit_flg);  /*** Ver 2.7 ***/ 

			 if ( i_ret_val != 0 )
			 {
	    		fn_errlog(c_ServiceName, "L31450",LIBMSG,c_err_msg);
	    		fn_userlog(c_ServiceName,"Error in fn call fn_call_upd_fab -For NSE-Debit");
	    		fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
	    		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	    		return ( -1 );
	 		 }

  		 fn_userlog(c_ServiceName,"After release of old isec margin in-Debit-NSE for <%s>", c_cln_mtch_accnt); 

    } /** If for - Bank hits Part for NSE-Debit Ends **/

  } /** End of If -for DEBIT Case in any of the exchange  **/
  /* #################################################################################################### */
	/************************       END of -  STEP - 5 ****************************************/		
  /* #################################################################################################### */


} /** End of fn_upd_amc_tbl function **/

/* #################################################################################################### */
/*                Function  fn_ins_amc_tbl                                                              */
/* #################################################################################################### */

int fn_ins_amc_tbl( char *c_ServiceName,
                    char *c_xchng_cd,
                    char *c_cln_mtch_accnt,
                    char *c_bnk_accnt,
		    					  char *c_trd_dt,
		    					  double  d_total_mrgn_req,
		    						double  d_old_plg_amt,            
		    						double  d_old_alctd_amt,          
		    					  double  d_old_bft_amt,            
		    						double  d_old_isec_mrgn_amt,  
		    						double  d_appl_mrgn_amt,      
		    						char *c_run_dt,
                    long  li_run_no,
		    						double d_new_plg_amt,       		    
		    						double d_to_cr_alctd_amt,   
		    						double d_to_db_alctd_amt,   
		    						double d_to_db_bft_amt,     
		    						double d_isec_mrgn_amt,
		    						char   c_dbcr_flg,
		    						char  c_path,
                    double d_old_fdr_amt,     /** Ver 1.7 **/
                    double d_new_fdr_amt,      /** Ver 1.7 **/
                    char c_blk_deposit_flg     /** Ver 2.7 **/ 
		  						 )
{

  char c_err_msg[256];
  int i_returncode;
  int i_trnsctn = 0;
  char c_msg [ 256 ];

	if(DEBUG_MSG_LVL_5)
	{
  	fn_userlog(c_ServiceName,"INSIDE AMC Insert function........Start");
  	fn_userlog(c_ServiceName,"c_xchng_cd [%s]",c_xchng_cd);
  	fn_userlog(c_ServiceName,"c_cln_mtch_accnt [%s]",c_cln_mtch_accnt);
		fn_userlog(c_ServiceName,"c_bnk_accnt [%s]",c_bnk_accnt);
		fn_userlog(c_ServiceName,"c_trd_dt [%s]",c_trd_dt);
		fn_userlog(c_ServiceName,"d_total_mrgn_req [%lf]",d_total_mrgn_req);
		fn_userlog(c_ServiceName,"d_old_plg_amt [%lf]",d_old_plg_amt);
		fn_userlog(c_ServiceName,"d_old_alctd_amt [%lf]",d_old_alctd_amt);
		fn_userlog(c_ServiceName,"d_old_bft_amt [%lf]",d_old_bft_amt);
		fn_userlog(c_ServiceName,"d_old_isec_mrgn_amt [%lf]",d_old_isec_mrgn_amt);
		fn_userlog(c_ServiceName,"d_appl_mrgn_amt [%lf]",d_appl_mrgn_amt);
		fn_userlog(c_ServiceName,"c_run_dt [%s]",c_run_dt);
  	fn_userlog(c_ServiceName,"li_run_no [%d]",li_run_no);
		fn_userlog(c_ServiceName,"d_new_plg_amt [%lf]",d_new_plg_amt);
		fn_userlog(c_ServiceName,"d_to_cr_alctd_amt [%lf]",d_to_cr_alctd_amt);
		fn_userlog(c_ServiceName,"d_to_db_alctd_amt [%lf]",d_to_db_alctd_amt);
		fn_userlog(c_ServiceName,"d_to_db_bft_amt [%lf]",d_to_db_bft_amt);
		fn_userlog(c_ServiceName,"d_isec_mrgn_amt [%lf]",d_isec_mrgn_amt);
		fn_userlog(c_ServiceName,"c_dbcr_flg [%c]",c_dbcr_flg);
		fn_userlog(c_ServiceName,"c_path [%c]",c_path);
    fn_userlog(c_ServiceName,"c_blk_deposit_flg [%c]",c_blk_deposit_flg); /** Ver 2.7 **/
  	fn_userlog(c_ServiceName,"INSIDE AMC Insert function ........End");
  }

	 EXEC SQL
		 INSERT INTO AMC_ADM_MRGN_CALC 
			      ( AMC_XCHNG_CD,         
							AMC_CLM_MTCH_ACCNT,   
							AMC_BNK_ACCNT,        
							AMC_TRD_DT,           
							AMC_TOTAL_MRGN_REQ,   
							AMC_OLD_PLG_AMT,      
							AMC_OLD_ALCTD_AMT,    
							AMC_OLD_BFT_AMT,      
							AMC_OLD_ISEC_MRGN_AMT,
							AMC_APPL_AMT,         
							AMC_RUN_DT,           
							AMC_RUN_NO,           
							AMC_NEW_PLG_AMT,      
							AMC_TO_CR_ALCTD_AMT,  
							AMC_TO_DB_ALCTD_AMT,  
							AMC_TO_DB_BFT_AMT,
							AMC_NEW_ISEC_MRGN_AMT,
							AMC_DBCR_CD,          
							AMC_BILL_NO,          
							AMC_BILL_PST_FLG,     
							AMC_BILL_PST_DT,      
							AMC_NWB_AMT,          
							AMC_BATCH_SITE_IND,   
							AMC_STATUS_FLG,
              AMC_OLD_FDR_AMT,  /** Ver 1.7 **/
              AMC_NEW_FDR_AMT,   /** Ver 1.7 **/
              AMC_FUND_MODEL_FLG  /** Ver 2.7 **/      
			      )
			VALUES 
			      (
			      :c_xchng_cd,
			      :c_cln_mtch_accnt,   
			      :c_bnk_accnt,        
			      :c_trd_dt,           							      
			      :d_total_mrgn_req,
			      :d_old_plg_amt,      
			      :d_old_alctd_amt,    
			      :d_old_bft_amt,      
			      :d_old_isec_mrgn_amt,
			      :d_appl_mrgn_amt,
			      sysdate,             
			      :li_run_no,          							      
			      :d_new_plg_amt,      
			      :d_to_cr_alctd_amt,
			      :d_to_db_alctd_amt,
			      :d_to_db_bft_amt,  
			      /***  :d_isec_mrgn_amt, commented in Ver 2.5   ***/
            0,                                                      /*** Added in Ver 2.5 ***/
			      :c_dbcr_flg,  
			      NULL,
			      'N',
			      NULL,
			      NULL,
			      :c_path,
			      'N',
            :d_old_fdr_amt,      /** Ver 1.7 **/
            :d_new_fdr_amt,      /** Ver 1.7 **/
            :c_blk_deposit_flg   /** Ver 2.7 **/ 
			      );

	 if ( SQLCODE != 0 )
	 {
	   fn_errlog( c_ServiceName, "S31185",SQLMSG,c_err_msg);
	   fn_userlog(c_ServiceName,"Error-<%ld> in inserting AMC for xchng_cd<%s>,mtch_accnt<%s>, dr_cr_flg<%c>", SQLCODE, c_xchng_cd,c_cln_mtch_accnt, c_dbcr_flg);
	   fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	   return ( FAILURE );
	 }
  return ( SUCCESS );
}

/* #################################################################################################### */
/*                Function  fn_call_upd_fab                                                             */
/* #################################################################################################### */

int fn_call_upd_fab ( char   *c_ServiceName,	
			   							char   *c_xchng_cd, 
			   							char   *c_cln_mtch_accnt, 
											char   *c_bnk_accnt,
											char   c_path,
											char   c_view_st,
											char   c_release_st,
											char   c_dbcr_ind,
			   							char   *c_run_dt,
											char   *c_trd_dt,
			   							double d_p_old_plg_amt,				   
			   							double d_p_old_alctd_amt,
			   							double d_p_old_bft_amt,	
			   							double d_p_old_isec_mrgn_amt,	
			   							double d_p_new_plg_amt,				   
											double d_p_to_cr_alctd_amt,				   
											double d_p_to_db_alctd_amt,
			   							double d_p_to_db_bft_amt,
			   							double d_p_new_isec_mrgn_amt,
											long	li_run_no,
											char   *c_tag,
                      double d_p_old_fdr_amt,    /*** Ver 1.7 **/  
                      double d_p_new_fdr_amt,    /*** Ver 1.7 **/
                      char c_blk_deposit_flg     /*** Ver 2.7 ***/
                    )   

{  /** Start of fn_call_upd_fab function **/

  char c_msg [ 256 ];
	int i_ret_val;
	char c_err_msg [ 256 ];
	char c_dr_cr_flg;
	char c_timestamp [ 14 + 1 ]; 
	int i_returncode;
	int i_ret_state = 0;
	int i_rc;
	int i_ch_val;
	int i_trnsctn;
	int i_adm_blk_case = 0;		/*** Ver 1.9 ***/
	char c_xchng_input[10];   /** Ver 2.2 **/
  MEMSET(c_xchng_input);    /** Ver 2.2 **/
	
	double d_amount 	  = 0.00;
	double d_amount_nse = 0.00;
	double d_amount_bse = 0.00;

	double d_payin_amt	  = 0.0; 
	double d_payout_amt	  = 0.0; 
	double d_intadj_amt	  = 0.0; 
	double d_blk4trd_amt	= 0.0; 
	double d_bnk_pipo_amt	= 0.0; 
	double d_eba_pipo_amt	= 0.0; 
	double d_bnk_bft_amt	= 0.0; 
	double d_eba_bft_amt	= 0.0; 
	double d_dr_tds_amt	  = 0.0;

	double d_bnk_adm_allc_amt = 0.0;
	double d_eba_adm_allc_amt = 0.0;

	double d_pipo_amt  = 0.0;
	double d_limit     = 0.0;
	double d_ia_amt    = 0.0;
	double d_val_bal   = 0.0;
	double d_bal_amt   = 0.0;
	double d_amt       = 0.0;

	double d_p_new_isec_mrgn_amt_bse = 0.0;
	double d_p_new_isec_mrgn_amt_nse = 0.0;
  
  /********** Ver 2.7 Started **************/
  char c_narration[101];
  char c_prdct_cd[20+1];
  char c_pipo_src[20+1];
  char c_accntng_typ[20+1];
  char c_trace[13];
  char c_bnk_acct_nmbr[21];
  char c_sgmnt_cd[20+1];
  char c_instrument_nmbr[20+1];
  char c_mdc_crdt_nmbr[20+1];
  char c_mtch_series[20+1];
  char c_class_svc[20+1];
  char c_src_rowid[20+1];
  char c_run_nmbr[20+1];
  char c_tran_date[23];
  double d_trnsctn_amt=0.0;
  double d_tot_alc_amt=0.0;
  char c_accntng_for;
  char c_txn_type='\0';
  char c_channel[4];
  char c_usr_typ='\0';
  char c_do_commit = 'Y'; /**** Ver 2.7 ***/ 
  char c_narration_seg_log[101];/** for entry in segment log **/
  char c_user_id_seg_log[9]; /** for entry in segment log **/
  long l_session_id_seg_log; /** for entry in segment log **/
  long li_run_no_seg_log; /** for entry in segment log **/

  strcpy(c_accntng_typ,"MARGIN");
  strcpy(c_sgmnt_cd,"NFO");
  strcpy(c_run_nmbr,"");
  strcpy(c_instrument_nmbr,"");
  strcpy(c_mdc_crdt_nmbr,"");
  strcpy(c_mtch_series,"");
  strcpy(c_class_svc,"SFO_ADM_UPLD");
  strcpy(c_src_rowid,"NA");
  strcpy(c_tran_date,c_trd_dt);
  strcpy(c_bnk_acct_nmbr,c_bnk_accnt);

  MEMSET(c_prdct_cd);

  rtrim(c_xchng_cd);
  rtrim(c_prdct_cd);
  rtrim(c_sgmnt_cd);
  rtrim(c_run_nmbr);
  rtrim(c_instrument_nmbr);
  rtrim(c_mdc_crdt_nmbr);
  rtrim(c_mtch_series);
  rtrim(c_class_svc);
  rtrim(c_src_rowid);

  /********** Ver 2.7 Ended ****************/


	char c_bill_no[18];
	strcpy(c_bill_no,"");
	char c_bnk_narration[21];  /*** Aded in Ver 1.2 ***/

	FBFR32 *ptr_fml_Ibuf;
	FBFR32 *ptr_fml_Obuf;
  
  char c_bank_block_flg='N';  /* Added in Ver 2.4 */

	EXEC SQL BEGIN DECLARE SECTION;
	char c_reference[16];
	int i_credit_status = 0 ;
	int i_block_status =0 ;
	char c_amc_cr_status_flg = '\0';

	EXEC SQL END DECLARE SECTION;

	  if(DEBUG_MSG_LVL_3)
	  {
		 fn_userlog(c_ServiceName,"INPUT inside fn_call_upd_fab  Start");
		 fn_userlog(c_ServiceName,"c_xchng_cd [%s]",c_xchng_cd);
		 fn_userlog(c_ServiceName,"c_cln_mtch_accnt [%s]",c_cln_mtch_accnt);
		 fn_userlog(c_ServiceName,"c_path [%c]",c_path);
		 fn_userlog(c_ServiceName,"c_view_st [%c]",c_view_st);
		 fn_userlog(c_ServiceName,"c_release_st [%c]",c_release_st);
		 fn_userlog(c_ServiceName,"c_dbcr_ind [%c]",c_dbcr_ind);
		 fn_userlog(c_ServiceName,"c_run_dt [%s]",c_run_dt);
		 fn_userlog(c_ServiceName,"c_trd_dt [%s]",c_trd_dt);
		 fn_userlog(c_ServiceName,"d_p_old_plg_amt [%lf]",d_p_old_plg_amt);
		 fn_userlog(c_ServiceName,"d_p_old_fdr_amt [%lf]",d_p_old_fdr_amt);  /** Ver 1.7 **/
		 fn_userlog(c_ServiceName,"d_p_old_alctd_amt [%lf]",d_p_old_alctd_amt);
		 fn_userlog(c_ServiceName,"d_p_old_bft_amt [%lf]",d_p_old_bft_amt);
		 fn_userlog(c_ServiceName,"d_p_old_isec_mrgn_amt [%lf]",d_p_old_isec_mrgn_amt);
		 fn_userlog(c_ServiceName,"d_p_new_plg_amt [%lf]",d_p_new_plg_amt);
		 fn_userlog(c_ServiceName,"d_p_new_fdr_amt [%lf]",d_p_new_fdr_amt);  /** Ver 1.7 **/
		 fn_userlog(c_ServiceName,"d_p_to_cr_alctd_amt [%lf]",d_p_to_cr_alctd_amt);
		 fn_userlog(c_ServiceName,"d_p_to_db_alctd_amt [%lf]",d_p_to_db_alctd_amt);
		 fn_userlog(c_ServiceName,"d_p_to_db_bft_amt [%lf]",d_p_to_db_bft_amt);
		 fn_userlog(c_ServiceName,"d_p_new_isec_mrgn_amt [%lf]",d_p_new_isec_mrgn_amt);
		 fn_userlog(c_ServiceName,"c_tag [%s]",c_tag);
		 fn_userlog(c_ServiceName,"li_run_no [%ld]",li_run_no);
		 fn_userlog(c_ServiceName,"c_bill_no set to null initially [%s]",c_bill_no);
     fn_userlog(c_ServiceName,"c_blk_deposit_flg [%c]",c_blk_deposit_flg); /** Ver 2.7 **/
		 fn_userlog(c_ServiceName,"INPUT inside fn_call_upd_fab  End");
	  }

		/** Ver 2.2 starts here **/

  	strcat(c_xchng_input,c_xchng_cd);
  	strcat(c_xchng_input,"ADM");
  	rtrim(c_xchng_input);

		
    if(DEBUG_MSG_LVL_3)
    {
  		fn_userlog(c_ServiceName,"Exchange Input :%s:",c_xchng_input);
		}

  /** Ver 2.2 Ends here **/

	  /** Ver 1.2 Changes starts ***/
	  fn_userlog(c_ServiceName," Run Date for narration[%s]",c_run_dt);
	  MEMSET(c_bnk_narration);
	  sprintf(c_bnk_narration,"F&OMargin%s",c_run_dt);
    rtrim(c_bnk_narration);
	  fn_userlog(c_ServiceName,"Value of Narration for ADM [%s]",c_bnk_narration); 
  	/** Ver 1.2 Changes Ends ***/
 
   /******************* commented in  Ver 2.7 starts  ******************

	  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg ); 
		if ( i_trnsctn == -1 )
	  {
			fn_errlog(c_ServiceName, "S31190",LIBMSG,c_err_msg);
			return ( FAILURE );
	  }

	 i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
	 if ( i_returncode != 0 )
	 {
	  fn_errlog(c_ServiceName, "L31270",LIBMSG,c_err_msg);
	  fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
	  return ( FAILURE );
	 }

	 fn_userlog(c_ServiceName,"Transaction begins with User level lock in fn_call_upd_fab ");

   ******************** comment Ends for Ver 2.7 ************************/

  /**  #########################     CASE : 1 Starts   ############################### ***/
	/**  A : Credit case from Batch Program run for clearing isec amt  ***/
	/**  B : Credit case from Site for clearing computed isec amt   ***/

	if ( ( (c_path == 'B')  && (c_dbcr_ind == 'C' )) || ((c_path == 'S') && (c_dbcr_ind == 'C' ) && (c_release_st == 'Y')) )  
	{
	 	c_dr_cr_flg    = CR ;
	 	c_reference[0] = '\0';
	 	d_payin_amt    = 0;
		d_payout_amt   = d_p_new_isec_mrgn_amt;
	 	d_intadj_amt   = 0;
		strcpy( c_timestamp, "01-Jan-1980" ); 

		fn_userlog(c_ServiceName,"Inside credit case from Site or Batch for xchng_cd <%s>", c_xchng_cd);

		i_credit_status = 0 ;     /** It states as Credit status initially  **/
		i_block_status  = 0 ;     /** It states as Block status  initially **/

			fn_userlog(c_ServiceName,"Case 1.1 for Credit from Batch program Stars ");

			d_payout_amt   = d_p_new_isec_mrgn_amt;
			d_pipo_amt     = d_p_new_isec_mrgn_amt;        
	 		fn_userlog(c_ServiceName,"Val of d_payout_amt <%lf> & d_pipo_amt<%lf> at initial", d_payout_amt, d_pipo_amt);

    /******************************************************/
    /***   STEP -1  - in Credit Starts                     */
    /******************************************************/
    /*  Sending Payout message to Bank                    */   
    /******************************************************
    Convensitions Used: 
    1: i_credit_status = 00  => Initial State
    2: i_credit_status = 10  => Bank Success- EBA Left
    3: i_credit_status = -10 => Bank Fail- EBA Left
    4: i_credit_status = -11 => Bank Success- EBA Fail

    1: i_block_status = 00  => Initial State
    2: i_block_status = 10  => Bank Success- EBA Left
    3: i_block_status = -10 => Bank Fail- EBA Left
    4: i_block_status = -11 => Bank Success- EBA Fail

    *******************************************************/
    /******************************************************/
   
    /****  Ver 2.7  Starts ***/
    i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
    if ( i_trnsctn == -1 )
    {
     fn_errlog(c_ServiceName, "S31195",LIBMSG,c_err_msg);
     return ( FAILURE );
    }
    i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
    if ( i_returncode != 0 )
    {
     fn_errlog(c_ServiceName, "L31270",LIBMSG,c_err_msg);
     fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
     return ( FAILURE );
    }
		/** Ver 3.1 Start */
		i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
		if ( i_returncode != 0 )
		{
			fn_errlog(c_ServiceName, "L31271",LIBMSG,c_err_msg);
			fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
			return ( -1 );
		}
		/** Ver 3.1 End */
    fn_userlog(c_ServiceName,"Transaction begins with User level lock for sending payout Bank and update allocation "); 
   
    /*** Ver 2.7 Ends ***/
    
    if ( c_blk_deposit_flg == 'B') /** If-Else  added to check Block or Deposit Model Flag in Ver 2.7 **/ 
    {
      i_returncode =  fn_send_bnk_msg (&st_usr_prfl,
			 		  													 c_dr_cr_flg,
				 		 		  										 "  ",
							 		  									 d_pipo_amt,
										  								 BACKOFFICE,
											  							 c_ServiceName,
												  						 c_err_msg,
													  					 &d_val_bal,
														  				 c_reference,
															  			 c_timestamp,
																  		 c_bnk_narration,
                                       c_xchng_input,     /** Ver 2.2 **/
                                       li_run_no);        /** Added for Ver 2.6 **/
    }
    else /** Marked success for Deposit Model **/
    { 
     i_returncode = SUCCESS;  
    }
      	switch ( i_returncode )
        { /** Start of Swith -1 **/
        	case SUCCESS :
			
						i_ret_state 	 = FROM_CREDIT_SUCCESS ;
            d_bnk_pipo_amt = d_pipo_amt;

						i_credit_status = 10 ;   /** It states as Bank Success EBA Left **/
						
            if(DEBUG_MSG_LVL_3)
            {	
				      fn_userlog(c_ServiceName,"In Bank Success after Sending Credit-Payout message to Bank");
						  fn_userlog(c_ServiceName,"Val of i_credit_status for Bank Success EBA Left <%d>", i_credit_status);
            }
			      /*** Bill no generation part comes here ****/

	        	EXEC SQL
								SELECT 'ADM'||to_char(sysdate,'YYYYMMDD')||LPAD(pipoadmseq.nextval,6,0)
								INTO :c_bill_no
								FROM   DUAL;

						if ( SQLCODE != 0 )
						{
				  		  fn_errlog(c_ServiceName, "S31200",SQLMSG,c_err_msg);
	        		  fn_userlog(c_ServiceName,"Error in generating bill no ...for credit case");
				 		    strcpy ( c_msg, "System error.while generating bill no: Contact system support" );
						    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
						    return ( -1 );
				 		}

					  if(DEBUG_MSG_LVL_5)  
						{
							fn_userlog(c_ServiceName,"Val of c_bill_no <%s> Before AMC update ", c_bill_no);
							fn_userlog(c_ServiceName,"Val of c_xchng_cd <%s> Before AMC update ", c_xchng_cd);
							fn_userlog(c_ServiceName,"Val of c_cln_mtch_accnt <%s> Before AMC update ", c_cln_mtch_accnt);
							fn_userlog(c_ServiceName,"Val of c_dbcr_ind <%c> Before AMC update ", c_dbcr_ind);
							fn_userlog(c_ServiceName,"Val of c_trd_dt <%s> Before AMC update ", c_trd_dt);
							fn_userlog(c_ServiceName,"Val of li_run_no <%ld> Before AMC update ", li_run_no);
							fn_userlog(c_ServiceName,"Val of c_path <%c> Before AMC update ", c_path);
						}


						EXEC SQL 
							UPDATE AMC_ADM_MRGN_CALC
							SET AMC_BILL_NO = :c_bill_no,
              AMC_NEW_ISEC_MRGN_AMT =AMC_NEW_ISEC_MRGN_AMT + :d_pipo_amt,/*** Added in Ver 2.5 ***/
              AMC_STATUS_FLG =  'Y'                                    /*** Added in Ver 2.5 ***/
							WHERE AMC_XCHNG_CD = :c_xchng_cd
							AND AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
							AND AMC_DBCR_CD = :c_dbcr_ind
							AND trunc(AMC_RUN_DT) = trunc(sysdate)
							AND AMC_TRD_DT = :c_trd_dt  /** Added for issue of ADM process on same run date for different trade dates **/
							AND AMC_RUN_NO = :li_run_no
							AND AMC_BATCH_SITE_IND = :c_path
							AND AMC_STATUS_FLG != 'F' 							
							AND AMC_BILL_NO is null  /** This condition is used when multiple credit entry from site **/
							RETURNING ROWID				   /** in part sq off and releasing margin each time **/
              INTO :c_src_rowid;       /** Added in Ver 2.7 **/

						if ( SQLCODE != 0 )
						{
	   					fn_errlog( c_ServiceName, "S31205",SQLMSG,c_err_msg);
	   					fn_userlog(c_ServiceName,"Error-<%ld> in updating AMC-Bill -after Bank success for credit for mtch_accnt<%s>", SQLCODE, c_cln_mtch_accnt);
	   					fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	   					return ( FAILURE );
						}
					break;

        	case GENERAL_FAILURE :
								fn_userlog(c_ServiceName,"In GENERAL_FAILURE  for Sending Payout message to Bank");
        	case INSUF_FUNDS :
								fn_userlog(c_ServiceName,"In INSUF_FUNDS  for Sending Payout message to Bank");
        	case BLOCK_NOT_EXISTING :
								fn_userlog(c_ServiceName,"In BLOCK_NOT_EXISTING  for Sending Payout message to Bank");
								i_ret_state = FROM_CREDIT_FAILURE ;
    						fn_errlog(c_ServiceName, "S31210",LIBMSG,c_err_msg);
      					sprintf ( c_msg,"Error while sending credit message to bank for %s",c_cln_mtch_accnt);
					  		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

						i_credit_status =  -10 ;   /** It states as Bank Fail EBA Left **/
						fn_userlog(c_ServiceName,"Val of i_credit_status in case of Bank fail Eba Left <%d>", i_credit_status);

						EXEC SQL 
	  					UPDATE AMC_ADM_MRGN_CALC
	  					SET    AMC_STATUS_FLG =  'F'    /* Updated F for BAnk fail for credit */
	  					WHERE  AMC_XCHNG_CD = :c_xchng_cd
	  					AND   AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
	  					AND 	trunc(AMC_RUN_DT) = trunc(sysdate)
	  					AND   AMC_TRD_DT = :c_trd_dt  /** Added for  running ADM process on same run date for different trade dates **/
	  					AND 	AMC_RUN_NO  = :li_run_no
	  					AND   AMC_BILL_NO  is NULL   /** Added during BSE-ADM change **/
	  					AND   AMC_BATCH_SITE_IND = :c_path;

					  if ( SQLCODE != 0 )
						{
							fn_errlog( c_ServiceName, "S31215",SQLMSG,c_err_msg);
							fn_userlog(c_ServiceName,"Error in updating AMC for failire flag--1 <%ld>", SQLCODE);
							fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
							return ( FAILURE );
						}					
            
	    			d_bnk_pipo_amt = 0; /** Set to 0 in case of Bank fail **/
	    			i_rc 	=	fn_insrt_adm_pipo_rpt_tbl(	c_ServiceName,	
																								c_xchng_cd, 
																								c_cln_mtch_accnt, 
																								c_run_dt, 
											    										  d_payout_amt,
											    											0,
											   												d_payin_amt,
											    											d_intadj_amt,
											   											  d_bnk_pipo_amt,
											    										  d_eba_pipo_amt,
											  											  d_bnk_bft_amt,
											   												d_eba_bft_amt,
									                              li_run_no,
												      								  d_bnk_adm_allc_amt,
												      									d_eba_adm_allc_amt,
																								c_bnk_narration,
                                                c_blk_deposit_flg  /** Ver 2.7 **/
												      								);

						if ( i_rc != 0 )
						{
    					fn_errlog(c_ServiceName, "S31220",LIBMSG,c_err_msg);
      				strcpy( c_msg, "System error. Contact system support" );
  						fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
						  fn_userlog(c_ServiceName,"Error in FTR insert for <%s> in Bank fail -Credit case ",c_cln_mtch_accnt);
							return(-1);
						}
			      fn_userlog(c_ServiceName,"For General Bank fail- FTR insert for <%s>",c_cln_mtch_accnt);

						
						if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
						{
						fn_errlog( c_ServiceName, "S31225",LIBMSG,c_err_msg);
						fn_userlog(c_ServiceName,"Error in commit tran --In case of return---1 ");
						Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
						strcpy ( c_msg, "System error. Contact system support" );
						fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
						return ( -1 );
						}						
						return(-1);

						break;

        	case INDERMINATE_FAILURE :
							fn_userlog(c_ServiceName,"In INDERMINATE_FAILURE -Credit Case-for Sending Payout message");

					case RERUN_FAILURE :																				
							fn_userlog(c_ServiceName,"In RERUN_FAILURE -Credit Case-for Sending Payout message to Bank");
					default :
							fn_userlog(c_ServiceName,"In default--Credit Case- for Sending Payout message to Bank");

							i_ret_state = FROM_CREDIT_INDERMINATE_FAILURE ;
      				sprintf(c_msg,"Indet. failure for <%s> while sending credit messageto bank",c_cln_mtch_accnt); 
  						fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
					
						i_credit_status = -10 ;   /** It states as Bank Fail EBA Left **/
						fn_userlog(c_ServiceName,"Val of i_credit_status for Bank Intermediate fail <%d>", i_credit_status);
						
         EXEC SQL 
	  					UPDATE AMC_ADM_MRGN_CALC
	  			/***SET    AMC_STATUS_FLG =  'F'  * Updated F for BAnk fail for credit * commented in Ver 2.5 ***/
              SET    AMC_STATUS_FLG =  'N'        /*** Added in Ver 2.5 ***/
	  					WHERE  AMC_XCHNG_CD = :c_xchng_cd
	  					AND AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
	  					AND AMC_TRD_DT = :c_trd_dt  /** Added for issue of running ADM process on same run date for diff trd dates **/
	  					AND 	trunc(AMC_RUN_DT) = trunc(sysdate)
	  					AND 	AMC_RUN_NO  = :li_run_no
	  					AND   AMC_BILL_NO  is NULL   /** Added during BSE-ADM change **/
	  					AND   AMC_BATCH_SITE_IND = :c_path;

						if ( SQLCODE != 0 )
						{
							fn_errlog( c_ServiceName, "S31230",SQLMSG,c_err_msg);
							fn_userlog(c_ServiceName,"Error in updating AMC for failire flag--1 <%ld>", SQLCODE);
							fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
							return ( FAILURE );
						}


						/** Inserting data in FBM in case of Intermidiate Bank fail **/
						i_ret_val = fn_ins_adm_flr_tbl(	c_ServiceName,								
																						c_xchng_cd,
																						c_cln_mtch_accnt,
																						li_run_no,
																						c_run_dt,
																						c_bnk_accnt,
																						CREDIT,
																						CREDIT_ON_PAYOUT,
																						CREDIT, 
																						d_pipo_amt,
																						NOT_UPDATED,
                                            NOT_UPDATED,
																						BANK_FAILED, /* Should not be picked up in Rerun case for Bank Failire*/
																						c_reference,
																						c_timestamp,
																						c_bnk_narration,
                                            c_blk_deposit_flg, /** Ver 2.7 **/
                                            c_src_rowid);      /** Ver 2.7 **/ 
						if ( i_ret_val != 0 )
						{
							strcpy ( c_msg, "System error. Contact system support" );
							fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
							fn_errlog(c_ServiceName, "S31235",LIBMSG,c_err_msg);
							fn_userlog(c_ServiceName,"Error-<%ld> in inserting into FBM for Bank failire-Credit case for xchng_cd<%s>", SQLCODE, c_xchng_cd);

							if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
							{
							fn_errlog( c_ServiceName, "S31240",LIBMSG,c_err_msg);
							fn_userlog(c_ServiceName,"Error in commit tran --In case of return---2 ");
							Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
							fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
							strcpy ( c_msg, "System error. Contact system support" );
							fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
							return ( -1 );
							}
							return(-1);
						}
            fn_userlog(c_ServiceName,"After inserting into FBM-Intermediate Bank fail for Credit from site case for xchng_cd<%s> & mtch_id<%s>", c_xchng_cd, c_cln_mtch_accnt);

					/****This condition was under supervision in existing pipo process *************************/
					/*********** Keeping it for ADM process also																					 ****/
						
					d_bnk_pipo_amt = 0; /** Set to 0 in case of Bank fail **/
					i_rc 	 =	fn_insrt_adm_pipo_rpt_tbl(	c_ServiceName,	   
																	 							c_xchng_cd, 
																								c_cln_mtch_accnt, 
																								c_run_dt, 
											 												  d_payout_amt,
																						    0,
																						    d_payin_amt,
																						    d_intadj_amt,
																						    d_bnk_pipo_amt,
																						    d_eba_pipo_amt,
																						    d_bnk_bft_amt,
																						    d_eba_bft_amt,
											                          li_run_no,
							 							  									d_bnk_adm_allc_amt,
														  									d_eba_adm_allc_amt,
																								c_bnk_narration,
                                                c_blk_deposit_flg  /** Ver 2.7 **/
														  								);

							if ( i_rc != 0 )
							{
    						fn_errlog(c_ServiceName, "S31245",LIBMSG,c_err_msg);
      					strcpy( c_msg, "System error. Contact system support" );
  							fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
							  fn_userlog(c_ServiceName,"Error<%ld> in fn_insrt_adm_pipo_rpt_tbl- in default case of Bank Fail-Credit", SQLCODE);

							if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
							{
								fn_errlog( c_ServiceName, "S31250",LIBMSG,c_err_msg);
								fn_userlog(c_ServiceName,"Error in commit tran --In case of return---3 ");
								Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
								fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
								strcpy ( c_msg, "System error. Contact system support" );
								fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
								return ( -1 );
							}
					    return(-1);
							}

							fn_userlog(c_ServiceName,"Terminate fn -Error in case of Inter-Bank Fail for Credit ");
							if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
							{
								fn_errlog( c_ServiceName, "S31255",LIBMSG,c_err_msg);
								fn_userlog(c_ServiceName,"Error in commit tran --In case of return---4 ");
								Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
								fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
								strcpy ( c_msg, "System error. Contact system support" );
								fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
								return ( -1 );
							}
       
							return(-1);

					 		break;				
        }/** End of Swith -1 **/
				/***************************************************************************/
				/*** ISEC Margin to be released after CR success START	************************/
				/***************************************************************************/
				/*****  only  isec margin fornall fn_upd_adm_alloc_dtls to minus only  isec margin  *****************/

	   	  if (strcmp(c_xchng_cd,"NFO") == 0 )
	   	  {
	       d_amount = d_p_new_isec_mrgn_amt;
	       d_payout_amt = d_p_new_isec_mrgn_amt;
	       d_p_new_isec_mrgn_amt_bse = 0;
	       d_p_new_isec_mrgn_amt_nse = d_p_new_isec_mrgn_amt;
	   	  }
	   	  if (strcmp(c_xchng_cd,"BFO") == 0 )
	   	  {
	       d_amount = d_p_new_isec_mrgn_amt;
	       d_payout_amt = d_p_new_isec_mrgn_amt;
	       d_p_new_isec_mrgn_amt_nse = 0;
	       d_p_new_isec_mrgn_amt_bse = d_p_new_isec_mrgn_amt;
	   	  }

			fn_userlog(c_ServiceName,"Call fn_upd_adm_alloc_dtls to minus only  isec margin for <%s> with xchng_cd<%s>",c_cln_mtch_accnt, c_xchng_cd);
     
	if( c_blk_deposit_flg == 'B')	/*** Added IF-Else for BLOCK and DEPOSIT MODEL FLAG in Ver 2.7 ***/	
   {
     i_returncode = fn_upd_adm_alloc_dtls (c_ServiceName,
      			                                c_err_msg,
            			                          c_cln_mtch_accnt,
                  			                    c_bnk_accnt,
                        			              c_tag,
                              			        0,
                                   				  0,
                             			          d_p_new_isec_mrgn_amt_nse * (-1),
							  													  d_p_new_isec_mrgn_amt_bse * (-1),
                                            &d_tot_alc_amt                    /** Added in 2.7 **/
							  													 );
    }
    else  /*** Deposit Model ***/
    {
     i_returncode = fn_upd_adm_alloc_dtls (c_ServiceName,
                                            c_err_msg,
                                            c_cln_mtch_accnt,
                                            c_bnk_accnt,
                                            c_tag,
                                            0,
                                            /*** 0, **** Ver 2.7 ****/
                                            d_amount,  /*** Ver 2.7 ***/
                                            d_p_new_isec_mrgn_amt_nse * (-1),
                                            d_p_new_isec_mrgn_amt_bse * (-1),
                                            &d_tot_alc_amt                    /** Added in 2.7  **/
                                           );  
    
    }
  
		if ( i_returncode != 0 )
    {	   

	    	i_credit_status = -11;   /** It states as Bank Success EBA Fail **/
	    	fn_userlog(c_ServiceName,"Val of i_credit_status - Bank success EBA fail for Credit-<%d>", i_credit_status);
        fn_errlog(c_ServiceName, "S31260",LIBMSG,c_err_msg);
        strcpy ( c_msg, "System error. Contact system support" );
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /** Added in Ver 2.7 **/  
        fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      
			  i_ret_val = fn_ins_adm_flr_tbl( c_ServiceName,
                                          c_xchng_cd,
                                          c_cln_mtch_accnt,
                                          li_run_no,
                                          c_run_dt,
                                          c_bnk_accnt,
                                          CREDIT,
                                          CREDIT_ON_PAYOUT, 
                                          CREDIT, /* ignore */
                                          d_amount,
                                          UPDATED,
                                          NOT_UPDATED ,
                                          NOT_UPDATED,
                                          c_reference,
                                          c_timestamp,
			    														  	c_bnk_narration,
                                          c_blk_deposit_flg, /** Ver 2.7 **/
                                          c_src_rowid        /** Ver 2.7 **/
                                        );

           if ( i_ret_val != 0 )
           {
	    	    	fn_userlog(c_ServiceName,"Error in FBM insert for Bank Success-EBA Fail for ISEC -Credit ");
	      			fn_errlog(c_ServiceName, "S31265",LIBMSG,c_err_msg);
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
						  i_rc  = fn_insrt_adm_pipo_rpt_tbl (c_ServiceName,
             			                               c_xchng_cd,
                  			                         c_cln_mtch_accnt,
                        		                     c_run_dt,
                            		                 d_payout_amt,
                               		               d_blk4trd_amt,
                                 		             d_payin_amt,
                                   		           d_intadj_amt,
                                     		         d_bnk_pipo_amt,
                                       		       d_eba_pipo_amt,
                                         		     0,
                                           		   0,
                                             		 li_run_no,
							 																	 d_bnk_adm_allc_amt,
							 																	 d_eba_adm_allc_amt,
																								 c_bnk_narration,
                                                 c_blk_deposit_flg); /**Ver 2.7 **/

              if ( i_rc != 0 )
              {
                fn_errlog(c_ServiceName, "S31270",LIBMSG,c_err_msg);
                strcpy( c_msg, "System error. Contact system support" );
                fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                fn_userlog(c_ServiceName,"Error-FTR insert- Bank Success-EBA failed in credit case");
                return(-1);
              }
              fn_userlog(c_ServiceName,"Terminate fn-Error FBM insert for Bank Success-EBA failed while debit Isec in credit case ");
              return(-1);
           }
	   			fn_userlog(c_ServiceName,"After FBM insert for Bank Success-EBA failed for ISEC-DB-in credit case ");
          return(-1);
      }
     fn_userlog(c_ServiceName,"End of fn_upd_adm_alloc_dtls to minus only  isec margin"); 
     /***** End of fn_upd_adm_alloc_dtls to minus only  isec margin  *****************/
 
   /*** Accounting Entries common for Deposit And Block Model Starts here Ver 2.7 ***/
     if( DEBUG_MSG_LVL_0 )
     {
      fn_userlog(c_ServiceName,"Total FAB Allocated Amount |%lf|", d_tot_alc_amt );
      fn_userlog( c_ServiceName, "Before fn_ins_mbs call" );
     }

    /***** Entry in MBS Table *****/
    if( c_blk_deposit_flg == 'B')
    {
     strcpy(c_pipo_src,"CLEAR_BAL");  
    }
    else 
    {
     strcpy(c_pipo_src,"LIMIT");
    } 

    if(strcmp(c_xchng_cd,"NFO")==0)
    {
     strcpy(c_prdct_cd,"NFOADMO");
     c_accntng_for='O';
    }
    else if(strcmp(c_xchng_cd,"BFO")==0)
    {
     strcpy(c_prdct_cd,"BFOADMO");
     c_accntng_for='O';
    }

     d_trnsctn_amt=d_amount/100;
     sprintf(c_narration,"Being Cash Margin Credited Against Open Position in NSE %s",c_run_dt);
     strcpy(c_trace,c_reference);
     strcpy(c_mtch_series,c_bill_no);
     sprintf(c_run_nmbr, "%lu" ,li_run_no);
     rtrim(c_src_rowid);
     rtrim(c_pipo_src);
      
     if(fn_ins_mbs(c_ServiceName,c_cln_mtch_accnt,c_xchng_cd,c_prdct_cd,c_pipo_src,c_sgmnt_cd,0,c_tran_date,d_trnsctn_amt,c_run_nmbr,c_instrument_nmbr,'\0',c_mdc_crdt_nmbr, c_accntng_for, c_accntng_typ,c_trace,c_bnk_acct_nmbr, c_narration, 'C', c_mtch_series,c_class_svc, c_src_rowid,c_err_msg,c_blk_deposit_flg) == -1) /* \0 Added in Ver TOL */
    {
      /*** Error Handling goes Here **/
    
       i_credit_status = -11;   /** It states as Bank Success EBA Fail **/
       fn_userlog(c_ServiceName,"Val of i_credit_status - Bank success EBA fail for Credit-<%d>", i_credit_status);
       fn_errlog(c_ServiceName, "S31275",LIBMSG,c_err_msg);
       fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
       strcpy ( c_msg, "System error. Contact system support" );
       fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

       i_ret_val = fn_ins_adm_flr_tbl( c_ServiceName,
                                       c_xchng_cd,
                                       c_cln_mtch_accnt,
                                       li_run_no,
                                       c_run_dt,
                                       c_bnk_accnt,
                                       CREDIT,
                                       CREDIT_ON_PAYOUT,
                                       CREDIT, /* ignore */
                                       d_amount,
                                       UPDATED,
                                       NOT_UPDATED ,
                                       NOT_UPDATED,
                                       c_reference,
                                       c_timestamp,
                                       c_bnk_narration,
                                       c_blk_deposit_flg, /** Ver 2.7 **/
                                       c_src_rowid);      /** Ver 2.7 **/

        if ( i_ret_val != 0 )
        {
         fn_userlog(c_ServiceName,"Error in FBM insert for Bank Success-EBA Fail for ISEC -Credit ");
         fn_errlog(c_ServiceName, "S31280",LIBMSG,c_err_msg);
         strcpy ( c_msg, "System error. Contact system support" );
         fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

         i_rc  = fn_insrt_adm_pipo_rpt_tbl (c_ServiceName,
                                             c_xchng_cd,
                                             c_cln_mtch_accnt,
                                             c_run_dt,
                                             d_payout_amt,
                                             d_blk4trd_amt,
                                             d_payin_amt,
                                             d_intadj_amt,
                                             d_bnk_pipo_amt,
                                             d_eba_pipo_amt,
                                             0,
                                             0,
                                             li_run_no,
                                             d_bnk_adm_allc_amt,
                                             d_eba_adm_allc_amt,
                                             c_bnk_narration,
                                             c_blk_deposit_flg); /** Ver 2.7 **/

           if ( i_rc != 0 )
           {
             fn_errlog(c_ServiceName, "S31285",LIBMSG,c_err_msg);
             strcpy( c_msg, "System error. Contact system support" );
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
             fn_userlog(c_ServiceName,"Error-FTR insert- Bank Success-EBA failed in credit case");
             return(-1);
           }
           fn_userlog(c_ServiceName,"Terminate fn-Error FBM insert for Bank Success-EBA failed while debit Isec in credit case ");
           return(-1);
         }
        fn_userlog(c_ServiceName,"After FBM insert for Bank Success-EBA failed for ISEC-DB-in credit case "); 
        return(-1); 
     /*** Error Handling Ends Here **/
    }   

   /*** Accounting Entries  Ends here Ver 2.7 ***/
   
  /**** Entry in Segment Transaction Details For Deposit Model Starts Ver 2.7 *****/ 
   if ( c_blk_deposit_flg == 'D')
   {
    if( DEBUG_MSG_LVL_0 )
    {  
     fn_userlog( c_ServiceName, "Before fn_ins_seg_log call" );
    }
     
     if(c_path == 'S')
     {
      strcpy(c_user_id_seg_log ,c_seg_log_user_id);
      l_session_id_seg_log = l_seg_log_ssn_id;
      li_run_no_seg_log=0;

      EXEC SQL
      SELECT NVL(USM_SUP_USR_TYP,'*')
      INTO :c_usr_typ
      FROM USM_SSSN_MNGR
      WHERE USM_USR_ID=:st_usr_prfl.c_user_id
      AND USM_SSSN_ID=:st_usr_prfl.l_session_id;

      if( (SQLCODE != NO_DATA_FOUND) && (SQLCODE != 0))
      {
       fn_errlog( c_ServiceName, "S31290",SQLMSG,c_err_msg);
       Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
       strcpy ( c_msg, "System error. Contact system support" );
       fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
       return ( -1 );
      }

      fn_get_channel( c_usr_typ, (char *)c_channel );
 
      fn_userlog( c_ServiceName, "Channel Name |%s|", c_channel );
    }
    
    else if(c_path == 'B')
    {
     strcpy(c_user_id_seg_log ,"system");
     l_session_id_seg_log =0;
     strcpy(c_channel,"SYS");
     li_run_no_seg_log=li_run_no;
    }
    
     MEMSET(c_narration_seg_log);
     sprintf(c_narration_seg_log,"NFO ADM Payout %s",c_run_dt);  
     fn_userlog( c_ServiceName, "Narration for Segment log for ADM payout is |%s|",c_narration_seg_log );
     i_returncode = fn_ins_seg_log(c_user_id_seg_log,
                                   l_session_id_seg_log,
                                   c_ServiceName,
                                   c_cln_mtch_accnt,
                                   d_amount*0.01,
                                   'O', /**** To reduce  allocation **/
                                   c_sgmnt_cd,
                                   d_tot_alc_amt*0.01,
                                   'N',
                                   c_channel,
                                   c_narration_seg_log,
                                   li_run_no_seg_log,
                                   c_prdct_cd,
                                   c_pipo_src);
  
     if(i_returncode!=0)
     {
      /*** Error Handling goes Here **/ 
       i_credit_status = -11;   /** It states as Bank Success EBA Fail **/
       fn_userlog(c_ServiceName,"Val of i_credit_status - Bank success EBA fail for Credit-<%d>", i_credit_status);
       fn_errlog(c_ServiceName, "S31295",LIBMSG,c_err_msg);
       fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
       strcpy ( c_msg, "System error. Contact system support" );
       fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
 
       i_ret_val = fn_ins_adm_flr_tbl( c_ServiceName,
                                       c_xchng_cd,
                                       c_cln_mtch_accnt,
                                       li_run_no,
                                       c_run_dt,
                                       c_bnk_accnt,
                                       CREDIT,
                                       CREDIT_ON_PAYOUT,
                                       CREDIT, /* ignore */
                                       d_amount,
                                       UPDATED,
                                       NOT_UPDATED ,
                                       NOT_UPDATED,
                                       c_reference,
                                       c_timestamp,
                                       c_bnk_narration,
                                       c_blk_deposit_flg,   /** Ver 2.7 **/
                                       c_src_rowid);        /** Ver 2.7 **/

        if ( i_ret_val != 0 )
        {
         fn_userlog(c_ServiceName,"Error in FBM insert for Bank Success-EBA Fail for ISEC -Credit ");
         fn_errlog(c_ServiceName, "S31300",LIBMSG,c_err_msg);
         strcpy ( c_msg, "System error. Contact system support" );
         fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

         i_rc  = fn_insrt_adm_pipo_rpt_tbl (c_ServiceName,
                                             c_xchng_cd,
                                             c_cln_mtch_accnt,
                                             c_run_dt,
                                             d_payout_amt,
                                             d_blk4trd_amt,
                                             d_payin_amt,
                                             d_intadj_amt,
                                             d_bnk_pipo_amt,
                                             d_eba_pipo_amt,
                                             0,
                                             0,
                                             li_run_no,
                                             d_bnk_adm_allc_amt,
                                             d_eba_adm_allc_amt,
                                             c_bnk_narration,
                                             c_blk_deposit_flg); /** Ver 2.7 **/

           if ( i_rc != 0 )
           {
             fn_errlog(c_ServiceName, "S31305",LIBMSG,c_err_msg);
             strcpy( c_msg, "System error. Contact system support" );
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
             fn_userlog(c_ServiceName,"Error-FTR insert- Bank Success-EBA failed in credit case");
             return(-1);
           }
           fn_userlog(c_ServiceName,"Terminate fn-Error FBM insert for Bank Success-EBA failed while debit Isec in credit case ");
           return(-1);
         }
        fn_userlog(c_ServiceName,"After FBM insert for Bank Success-EBA failed for ISEC-DB-in credit case "); 
        return(-1);
      /*** Error Handling Ends Here **/
     }  
 
   } 
  /**** Entry in Segment Transaction Details For Deposit Model Ends  Ver 2.7 *****/ 
  
      if (i_returncode == 0)
      {
       i_credit_status = 11 ;   /** It states as Bank Success EBA Success for Credit**/
       fn_userlog(c_ServiceName,"Val of i_credit_status Bank-EBA Success in credit case<%d> ", i_credit_status);
      }
   
    /*** Ver 2.7  Insert Into PBP Table Starts ****/
    if ( c_blk_deposit_flg == 'D')
    {
     i_rc  = fn_ins_pbp ( c_ServiceName,
                         c_xchng_cd,
                         c_cln_mtch_accnt,
                         c_run_dt,
                         d_payout_amt,
                         d_payin_amt,
                         d_bnk_pipo_amt,
                         li_run_no,
                         c_payin_pool_ac_adm_nse,
                         c_payout_pool_ac_adm_nse,
                         c_payin_pool_ac_adm_bse,
                         c_payout_pool_ac_adm_bse,
                         c_payin_pool_nse_ac,
                         c_payout_pool_nse_ac
                        );
 
       if ( i_rc != 0 )
       {   
       /*** Error Handling goes Here **/
       i_credit_status = -11;   /** It states as Bank Success EBA Fail **/
       fn_userlog(c_ServiceName,"Val of i_credit_status - Bank success EBA fail for Credit-<%d>", i_credit_status);
       fn_errlog(c_ServiceName, "S31310",LIBMSG,c_err_msg);
       fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
       strcpy ( c_msg, "System error. Contact system support" );
       fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

       i_ret_val = fn_ins_adm_flr_tbl( c_ServiceName,
                                       c_xchng_cd,
                                       c_cln_mtch_accnt,
                                       li_run_no,
                                       c_run_dt,
                                       c_bnk_accnt,
                                       CREDIT,
                                       CREDIT_ON_PAYOUT,
                                       CREDIT, /* ignore */
                                       d_amount,
                                       UPDATED,
                                       NOT_UPDATED ,
                                       NOT_UPDATED,
                                       c_reference,
                                       c_timestamp,
                                       c_bnk_narration,
                                       c_blk_deposit_flg,   /** Ver 2.7 **/
                                       c_src_rowid);        /** Ver 2.7 **/

        if ( i_ret_val != 0 )
        {
         fn_userlog(c_ServiceName,"Error in FBM insert for Bank Success-EBA Fail for ISEC -Credit ");
         fn_errlog(c_ServiceName, "S31315",LIBMSG,c_err_msg);
         strcpy ( c_msg, "System error. Contact system support" );
         fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

         i_rc  = fn_insrt_adm_pipo_rpt_tbl (c_ServiceName,
                                             c_xchng_cd,
                                             c_cln_mtch_accnt,
                                             c_run_dt,
                                             d_payout_amt,
                                             d_blk4trd_amt,
                                             d_payin_amt,
                                             d_intadj_amt,
                                             d_bnk_pipo_amt,
                                             d_eba_pipo_amt,
                                             0,
                                             0,
                                             li_run_no,
                                             d_bnk_adm_allc_amt,
                                             d_eba_adm_allc_amt,
                                             c_bnk_narration,
                                             c_blk_deposit_flg); /** Ver 2.7 **/
           if ( i_rc != 0 )
           {
             fn_errlog(c_ServiceName, "S31320",LIBMSG,c_err_msg);
             strcpy( c_msg, "System error. Contact system support" );
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
             fn_userlog(c_ServiceName,"Error-FTR insert- Bank Success-EBA failed in credit case");
             return(-1);
           }
           fn_userlog(c_ServiceName,"Terminate fn-Error FBM insert for Bank Success-EBA failed while debit Isec in credit case ");
           return(-1);
         } 
         return(-1);
        }  
     }
    /*** Ver 2.7 Insert Into PBP Table Ends *****/
  
    /***** Ver 2.7  starts ******/ 
    if( c_blk_deposit_flg == 'D') 
    {
     d_eba_pipo_amt =  d_pipo_amt; 
     d_eba_adm_allc_amt = d_pipo_amt;      
    }
    /**** Ver 2.7  Ends *****/

    /*** Ver 2.7  Starts for inserting FTR ****/
    i_rc  = fn_insrt_adm_pipo_rpt_tbl(c_ServiceName,
                                      c_xchng_cd,
                                      c_cln_mtch_accnt,
                                      c_run_dt,
                                      d_payout_amt,
                                      d_blk4trd_amt,
                                      d_payin_amt,
                                      d_intadj_amt,
                                      d_bnk_pipo_amt,
                                      d_eba_pipo_amt,
                                      d_bnk_bft_amt,
                                      d_eba_bft_amt,
                                      li_run_no,
                                      d_bnk_adm_allc_amt,
                                      d_eba_adm_allc_amt,
                                      c_bnk_narration,
                                      c_blk_deposit_flg); /** Ver 2.7 **/ 
     if ( i_rc != 0 )
     {
      fn_errlog(c_ServiceName, "S31325",LIBMSG,c_err_msg);
      strcpy( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
      {
       fn_errlog( c_ServiceName, "S31330",LIBMSG,c_err_msg);
       fn_userlog(c_ServiceName,"Error in commit tran --In case of return---13 ");
       Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
       fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
       strcpy ( c_msg, "System error. Contact system support" );
       fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
       return ( -1 );
      }
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     } 
   
    /*** Ver 2.7  Ends for inserting FTR   ****/
    
   /** Ver 2.7 starts -   Trasaction End for Sending payout to bank and updating allocation **/
 
    if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
    {
     fn_errlog( c_ServiceName, "S31335",LIBMSG,c_err_msg);
     fn_userlog(c_ServiceName,"Error in commit tran --In case of return---7 ");
     Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
     fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     strcpy ( c_msg, "System error. Contact system support" );
     fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
     return ( -1 );
    }
    
    /** Ver 2.7 Ends **/ 
    
     /** FOR BLOCK MODEL Starts **/ 
    if ( c_blk_deposit_flg == 'B')
    {

      /** d_eba_pipo_amt = (-1 * d_pipo_amt);  **/
      i_ret_state = 0 ;

      /** Part of proces of Credit To add amount in allocation starts  **/

      if (strcmp(c_xchng_cd,"NFO") == 0 )
      {
        d_amount = d_p_new_isec_mrgn_amt;
        d_payout_amt = d_p_new_isec_mrgn_amt;
        d_p_new_isec_mrgn_amt_bse = 0;
        d_p_new_isec_mrgn_amt_nse = d_p_new_isec_mrgn_amt;
        c_dr_cr_flg = BK ;
        c_reference[0] = '\0';
        d_payin_amt    = 0;
        strcpy( c_timestamp, "01-Jan-1980" );
      }
      if (strcmp(c_xchng_cd,"BFO") == 0 )
      {
        d_amount = d_p_new_isec_mrgn_amt;
        d_payout_amt = d_p_new_isec_mrgn_amt;
        d_p_new_isec_mrgn_amt_nse = 0;
        d_p_new_isec_mrgn_amt_bse = d_p_new_isec_mrgn_amt;
        c_dr_cr_flg = BK ;
        c_reference[0] = '\0';
        d_payin_amt    = 0;
        strcpy( c_timestamp, "01-Jan-1980" );
      }
      
      /** Ver 2.7  starts - Begin Transaction for block allocation **/

      i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
      if ( i_trnsctn == -1 )
      {
       fn_errlog(c_ServiceName, "S31340",LIBMSG,c_err_msg);
       return ( FAILURE );
      } 
      i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt ); 
      if ( i_returncode != 0 )
      {
       fn_errlog(c_ServiceName, "L31270",LIBMSG,c_err_msg);
       fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
       return ( FAILURE );
      }
			/** Ver 3.1 Start */
			i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
			if ( i_returncode != 0 )
			{
				fn_errlog(c_ServiceName, "L31271",LIBMSG,c_err_msg);
				fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
				return ( -1 );
			}
			/** Ver 3.1 End */
     
      /** Ver 2.7 Ends ***/ 
    
      /***************************************************************************/
      /***      BLOCK Allocation call                     ************************/
      /***************************************************************************/
      fn_userlog(c_ServiceName,"Part of proces To add amount in allocation starts");

      i_block_status = 0 ;   /** It is Bank & EBA Status initilizer **/

      i_ch_val =  fn_send_bnk_msg (&st_usr_prfl,
                                  c_dr_cr_flg,
                                  FO_BLK_CD,
                                  d_amount,
                                  BACKOFFICE,
                                  c_ServiceName,
                                  c_err_msg,
                                  &d_val_bal,
                                  c_reference,
                                  c_timestamp,
                                  c_bnk_narration,
                                  c_xchng_input,     /** Ver 2.2 **/
                                  li_run_no);        /** Added for Ver 2.6 **/
      switch ( i_ch_val)
      {

            case SUCCESS :
                 d_bnk_bft_amt  =  0;
                 d_bnk_adm_allc_amt = d_amount;
                 i_block_status = 10 ;   /** It is Bank Success EBA left **/
                 fn_userlog(c_ServiceName,"Bank Success for block- Val of i_block_status <%d>-Credit Case", i_block_status);
                 c_bank_block_flg='Y'; /* added in ver 2.4 */
                break;

            case INSUF_FUNDS :        /*** Position taken before GENERAL_FAILURE for Ver 1.9 ***/
                fn_userlog(c_ServiceName,"In INSUF_FUNDS  for add amount in allocation");

               if(d_val_bal > 0) /* Ver 2.3 if condition is added */
                 {
                  i_adm_blk_case = 1;   /*** Ver 1.9 ***/
                 }
                break;                /*** Ver 1.9 ***/

            case GENERAL_FAILURE :
                fn_userlog(c_ServiceName,"In GENERAL_FAILURE  for add amount in allocation");
            case BLOCK_NOT_EXISTING :
                fn_userlog(c_ServiceName,"In BLOCK_NOT_EXISTING  for add amount in allocation");
            case INDERMINATE_FAILURE :
                fn_userlog(c_ServiceName,"In INDERMINATE_FAILURE  for add amount in allocation");
            case RERUN_FAILURE :
                fn_userlog(c_ServiceName,"In RERUN_FAILURE  for add amount in allocation");
            default :
                fn_userlog(c_ServiceName,"In default  for add amount in allocation");
                fn_errlog(c_ServiceName, "S31345",LIBMSG,c_err_msg);
                i_block_status = -10 ;   /** It is Bank fail  EBA left **/
                fn_userlog(c_ServiceName,"Inside Bank Fail for block- Val of i_block_status <%d> in credit Case", i_block_status);

              i_ret_val = fn_ins_adm_flr_tbl( c_ServiceName,
                                              c_xchng_cd,
                                              c_cln_mtch_accnt,
                                              li_run_no,
                                              c_run_dt,
                                              c_bnk_accnt,
                                              BLOCK,
                                              ALLC_FOR_ADM, /* Changed for ADM as  ALLC_FOR_ADM */
                                              CREDIT, /* ignore */
                                              d_amount,
                                              NOT_UPDATED,
                                              NOT_UPDATED,
                                              NOT_UPDATED,
                                              c_reference,
                                              c_timestamp,
                                              c_bnk_narration,
                                              c_blk_deposit_flg,   /** Ver 2.7 **/
                                              c_src_rowid);        /** Ver 2.7 **/
              if ( i_ret_val != 0 )
              {
                strcpy ( c_msg, "System error. Contact system support" );
                fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                fn_userlog(c_ServiceName,"Error in inserting into FBM for Bank in blocking of Credit case");

                i_rc  = fn_insrt_adm_pipo_rpt_tbl(  c_ServiceName,
                                                    c_xchng_cd,
                                                    c_cln_mtch_accnt,
                                                    c_run_dt,
                                                    d_payout_amt,
                                                    0,
                                                    d_payin_amt,
                                                    d_intadj_amt,
                                                    d_bnk_pipo_amt,
                                                    d_eba_pipo_amt,
                                                    d_bnk_bft_amt,
                                                    d_eba_bft_amt,
                                                    li_run_no,
                                                    d_bnk_adm_allc_amt,
                                                    d_eba_adm_allc_amt,
                                                    c_bnk_narration,
                                                    c_blk_deposit_flg  /** Ver 2.7 **/
                                                  );

                if ( i_rc != 0 )
                {
                  fn_errlog(c_ServiceName, "S31350",LIBMSG,c_err_msg);
                  strcpy( c_msg, "System error. Contact system support" );
                  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                  fn_userlog(c_ServiceName,"Terminate fn-Error in fn FTR insert for Bank fail in Block condn");
                  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
                  {
                  fn_errlog( c_ServiceName, "S31355",LIBMSG,c_err_msg);
                  fn_userlog(c_ServiceName,"Error in commit tran --In case of return---7 ");
                  Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
                  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                  strcpy ( c_msg, "System error. Contact system support" );
                  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                  return ( -1 );
                  }
                  return(-1);
                }
                fn_userlog(c_ServiceName,"Error in FBM insert for Bank fail in Block condn");
                if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
                {
                fn_errlog( c_ServiceName, "S31360",LIBMSG,c_err_msg);
                fn_userlog(c_ServiceName,"Error in commit tran --In case of return---8 ");
                Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
                fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                strcpy ( c_msg, "System error. Contact system support" );
                fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                return ( -1 );
                }
                return(-1);
              }
              sprintf (c_msg,"Error in blocking alloc amount to EBA for <%s>- Data entry in FBM ", c_cln_mtch_accnt);
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
        
  /*********** VER 2.7 NOT REQUIRED FTR INSERT IS ALRDY DONE IN ABOVE TRANSCTION *************

              i_rc  = fn_insrt_adm_pipo_rpt_tbl(  c_ServiceName,
                                                  c_xchng_cd,
                                                  c_cln_mtch_accnt,
                                                  c_run_dt,
                                                  d_payout_amt,
                                                  0,
                                                  d_payin_amt,
                                                  d_intadj_amt,
                                                  d_bnk_pipo_amt,
                                                  d_eba_pipo_amt,
                                                  d_bnk_bft_amt,
                                                  d_eba_bft_amt,
                                                  li_run_no,
                                                  d_bnk_adm_allc_amt,
                                                  d_eba_adm_allc_amt,
                                                  c_bnk_narration,
                                                  c_blk_deposit_flg ** Ver 2.7 **
                                                );

              if ( i_rc != 0 )
              {
                fn_errlog(c_ServiceName, "S31365",LIBMSG,c_err_msg);
                strcpy( c_msg, "System error. Contact system support" );
                fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                fn_userlog(c_ServiceName,"Error in FTR insert for Bank fail in Block condn-Credit case ");
                if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
                {
                fn_errlog( c_ServiceName, "S31370",LIBMSG,c_err_msg);
                fn_userlog(c_ServiceName,"Error in commit tran --In case of return---9 ");
                Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
                fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                strcpy ( c_msg, "System error. Contact system support" );
                fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                return ( -1 );
                }
                return(-1);
              }
              fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---6 ");

    ******************************** COMMENT ENDS FOR VER 2.7 ******************************/

              if (   i_credit_status == 11)  /** CRedit success --bank and EBA  */
              {

                fn_userlog(c_ServiceName,"Val of i_credit_status before final AMC update in case of Block fail biut Credit Success <%d>", i_credit_status);
                EXEC SQL
                    UPDATE AMC_ADM_MRGN_CALC
                    SET    AMC_STATUS_FLG =  'Y'    /* Updated Y for EBA & BAnk success for credit */
                    WHERE  AMC_XCHNG_CD = :c_xchng_cd
                    AND AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                    AND trunc(AMC_RUN_DT) = trunc(sysdate)
                    AND AMC_TRD_DT = :c_trd_dt  /** Added for issue of running ADM process on same run date for different trade dates **/
                    AND   AMC_RUN_NO  = :li_run_no
                    AND   AMC_BILL_NO = :c_bill_no;

                 if ( SQLCODE != 0 )
                 {
                  fn_errlog( c_ServiceName, "S31375",SQLMSG,c_err_msg);
                  fn_userlog(c_ServiceName,"Error in updating AMC for success flag--1 after Credit <%ld>", SQLCODE);
                  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                  return ( FAILURE );
                 }

              }
              if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
              {
               fn_errlog( c_ServiceName, "S31380",LIBMSG,c_err_msg);
               fn_userlog(c_ServiceName,"Error in commit tran --In case of return---10 ");
               Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
               fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
               strcpy ( c_msg, "System error. Contact system support" );
               fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
               return ( -1 );
              }
              return(-1);
              break;

       }  /*End of switch*/   
  
      /*** Start of Ver 1.9 ***/
      if (i_adm_blk_case == 1)
      {
        fn_userlog(c_ServiceName,"Inside case of Insufficient fund for ADM Blocking");

         d_amount = d_val_bal;

         i_ch_val =  fn_send_bnk_msg (&st_usr_prfl,
                                      c_dr_cr_flg,
                                      FO_BLK_CD,
                                      d_amount,
                                      BACKOFFICE,
                                      c_ServiceName,
                                      c_err_msg,
                                      &d_val_bal,
                                      c_reference,
                                      c_timestamp,
                                      c_bnk_narration,
                                      c_xchng_input,     /** Ver 2.2 **/
                                      li_run_no);        /** Added for Ver 2.6 **/
          switch ( i_ch_val)
          {

                case SUCCESS :
                     /** d_bnk_pipo_amt =  d_amount; ** Commented for Ver 2.0 **/
                     fn_userlog(c_ServiceName,"Value of d_bnk_pipo_amt :%lf:",d_bnk_pipo_amt); /** Ver 2.0 **/
                     d_bnk_bft_amt  =  0;
                     d_bnk_adm_allc_amt = d_amount;
                     i_block_status = 10 ;   /** It is Bank Success EBA left **/
                     fn_userlog(c_ServiceName,"Bank Success for block- Val of i_block_status <%d>-Credit Case", i_block_status);
                     c_bank_block_flg='Y'; /* added in ver 2.4 */
                    break;

                case INSUF_FUNDS :
                    fn_userlog(c_ServiceName,"In INSUF_FUNDS  for add amount in allocation");

                   if(d_val_bal > 0) /* Ver 2.3 if condition is added */
                     {
                      i_adm_blk_case = 1;
                     }
                    break;

                case GENERAL_FAILURE :
                    fn_userlog(c_ServiceName,"In GENERAL_FAILURE  for add amount in allocation");
                case BLOCK_NOT_EXISTING :
                    fn_userlog(c_ServiceName,"In BLOCK_NOT_EXISTING  for add amount in allocation");
                case INDERMINATE_FAILURE :
                    fn_userlog(c_ServiceName,"In INDERMINATE_FAILURE  for add amount in allocation");
                case RERUN_FAILURE :
                    fn_userlog(c_ServiceName,"In RERUN_FAILURE  for add amount in allocation");
                default :
                    fn_userlog(c_ServiceName,"In default  for add amount in allocation");
                    fn_errlog(c_ServiceName, "S31385",LIBMSG,c_err_msg);
                    i_block_status = -10 ;   /** It is Bank fail  EBA left **/
                    fn_userlog(c_ServiceName,"Inside Bank Fail for block- Val of i_block_status <%d> in credit Case", i_block_status);

                  i_ret_val = fn_ins_adm_flr_tbl( c_ServiceName,
                                                  c_xchng_cd,
                                                  c_cln_mtch_accnt,
                                                  li_run_no,
                                                  c_run_dt,
                                                  c_bnk_accnt,
                                                  BLOCK,
                                                  ALLC_FOR_ADM, /* Changed for ADM as  ALLC_FOR_ADM */
                                                  CREDIT, /* ignore */
                                                  d_amount,
                                                  NOT_UPDATED,
                                                  NOT_UPDATED,
                                                  NOT_UPDATED,
                                                  c_reference,
                                                  c_timestamp,
                                                  c_bnk_narration,
                                                  c_blk_deposit_flg,   /** Ver 2.7 **/
                                                  c_src_rowid);        /** Ver 2.7 **/
                  if ( i_ret_val != 0 )
                  {
                    strcpy ( c_msg, "System error. Contact system support" );
                    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                    fn_userlog(c_ServiceName,"Error in inserting into FBM for Bank in blocking of Credit case");

                    i_rc  = fn_insrt_adm_pipo_rpt_tbl(  c_ServiceName,
                                                        c_xchng_cd,
                                                        c_cln_mtch_accnt,
                                                        c_run_dt,
                                                        d_payout_amt,
                                                        0,
                                                        d_payin_amt,
                                                        d_intadj_amt,
                                                        d_bnk_pipo_amt,
                                                        d_eba_pipo_amt,
                                                        d_bnk_bft_amt,
                                                        d_eba_bft_amt,
                                                        li_run_no,
                                                        d_bnk_adm_allc_amt,
                                                        d_eba_adm_allc_amt,
                                                        c_bnk_narration,
                                                        c_blk_deposit_flg /** Ver 2.7 **/
                                                      );

                    if ( i_rc != 0 )
                    {
                      fn_errlog(c_ServiceName, "S31390",LIBMSG,c_err_msg);
                      strcpy( c_msg, "System error. Contact system support" );
                      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                      fn_userlog(c_ServiceName,"Terminate fn-Error in fn FTR insert for Bank fail in Block condn");
                      if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
                      {
                      fn_errlog( c_ServiceName, "S31395",LIBMSG,c_err_msg);
                      fn_userlog(c_ServiceName,"Error in commit tran --In case of return---7 ");
                      Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
                      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                      strcpy ( c_msg, "System error. Contact system support" );
                      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                      return ( -1 );
                      }
                      return(-1);
                    }
                    fn_userlog(c_ServiceName,"Error in FBM insert for Bank fail in Block condn");
                    if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
                    {
                    fn_errlog( c_ServiceName, "S31400",LIBMSG,c_err_msg);
                    fn_userlog(c_ServiceName,"Error in commit tran --In case of return---8 ");
                    Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
                    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                    strcpy ( c_msg, "System error. Contact system support" );
                    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                    return ( -1 );
                    }
                    return(-1);
                  }
                  sprintf (c_msg,"Error in blocking alloc amount to EBA for <%s>- Data entry in FBM ", c_cln_mtch_accnt);
                  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

 /********* VER 2.7 COMMENTED SINCE FTR IS ALRDY DONE IN ABOVE TRANSCTION ********************

                  i_rc  = fn_insrt_adm_pipo_rpt_tbl(  c_ServiceName,
                                                      c_xchng_cd,
                                                      c_cln_mtch_accnt,
                                                      c_run_dt,
                                                      d_payout_amt,
                                                      0,
                                                      d_payin_amt,
                                                      d_intadj_amt,
                                                      d_bnk_pipo_amt,
                                                      d_eba_pipo_amt,
                                                      d_bnk_bft_amt,
                                                      d_eba_bft_amt,
                                                      li_run_no,
                                                      d_bnk_adm_allc_amt,
                                                      d_eba_adm_allc_amt,
                                                      c_bnk_narration,
                                                      c_blk_deposit_flg ** Ver 2.7 ** 
                                                    );

                  if ( i_rc != 0 )
                  {
                    fn_errlog(c_ServiceName, "S31405",LIBMSG,c_err_msg);
                    strcpy( c_msg, "System error. Contact system support" );
                    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                    fn_userlog(c_ServiceName,"Error in FTR insert for Bank fail in Block condn-Credit case ");
                    if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
                    {
                    fn_errlog( c_ServiceName, "S31410",LIBMSG,c_err_msg);
                    fn_userlog(c_ServiceName,"Error in commit tran --In case of return---9 ");
                    Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
                    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                    strcpy ( c_msg, "System error. Contact system support" );
                    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                    return ( -1 );
                    }
                    return(-1);
                  }
                  fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---6 ");

    ***************************** COMMENTED ENDS FOR VER 2.7 ***********************************/


                  if (   i_credit_status == 11)  /** CRedit success --bank and EBA  */
                  {

                    fn_userlog(c_ServiceName,"Val of i_credit_status before final AMC update in case of Block fail biut Credit Success <%d>", i_credit_status);

                    EXEC SQL
                        UPDATE AMC_ADM_MRGN_CALC
                        SET    AMC_STATUS_FLG =  'Y'    /* Updated Y for EBA & BAnk success for credit */
                        WHERE  AMC_XCHNG_CD = :c_xchng_cd
                        AND AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                        AND trunc(AMC_RUN_DT) = trunc(sysdate)
                        AND AMC_TRD_DT = :c_trd_dt  /** Added for issue of running ADM process on same run date for different trade dates *
*/
                        AND   AMC_RUN_NO  = :li_run_no
                        AND   AMC_BILL_NO = :c_bill_no;

                     if ( SQLCODE != 0 )
                     {
                      fn_errlog( c_ServiceName, "S31415",SQLMSG,c_err_msg);
                      fn_userlog(c_ServiceName,"Error in updating AMC for success flag--1 after Credit <%ld>", SQLCODE);
                      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                      return ( FAILURE );
                     }

                    }
                    if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
                    {
                      fn_errlog( c_ServiceName, "S31420",LIBMSG,c_err_msg);
                      fn_userlog(c_ServiceName,"Error in commit tran --In case of return---10 ");
                      Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
                      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                      strcpy ( c_msg, "System error. Contact system support" );
                      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                      return ( -1 );
                    }
                    return(-1);
                    break;

           }  /*End of switch*/
            i_adm_blk_case = 0;
      }
     /*** End of Ver 1.9 ***/   
     /***************************************************************************/
     /*** On Success BLOCK Allocation call update FAB accordingly ***************/
     /***************************************************************************/

     /***** Call fn_upd_adm_alloc_dtls to add only fab_alloc    *****************/

     if(c_bank_block_flg == 'Y') /* if condition is added in ver 2.4 */
     {
       fn_userlog(c_ServiceName,"Call fn_upd_adm_alloc_dtls to add only fab_alloc ");
       i_returncode =  fn_upd_adm_alloc_dtls (c_ServiceName,
                                            c_err_msg,
                                            c_cln_mtch_accnt,
                                            c_bnk_accnt,
                                            c_tag,
                                            0,
                                            d_amount ,
                                            0,
                                            0,
                                            &d_tot_alc_amt); /** Added in 2.7 **/

       if ( i_returncode != 0 )
       {
            i_block_status = -11 ;   /** It is Bank Success  EBA failed **/
            fn_userlog(c_ServiceName,"Val of i_block_status when Block success EBA failed <%d>", i_block_status);
            fn_errlog(c_ServiceName, "S31425",LIBMSG,c_err_msg);
            strcpy ( c_msg, "System error. Contact system support" );
            fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );      /** Added in Ver 2.7 **/
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

            i_ret_val = fn_ins_adm_flr_tbl( c_ServiceName,
                                            c_xchng_cd,
                                            c_cln_mtch_accnt,
                                            li_run_no,
                                            c_run_dt,
                                            c_bnk_accnt,
                                            BLOCK,
                                            ALLC_FOR_ADM,   /**** New ALLC_FOR_ADM  */
                                            CREDIT, /* ignore */
                                            d_amount,
                                            UPDATED,
                                            NOT_UPDATED ,
                                            NOT_UPDATED,
                                            c_reference,
                                            c_timestamp,
                                            c_bnk_narration,
                                            c_blk_deposit_flg,   /** Ver 2.7 **/
                                            c_src_rowid );       /** Ver 2.7 **/ 

           if ( i_ret_val != 0 )
           {
              fn_userlog(c_ServiceName, "Error in inserting FBM for bank Success-Eba Fail for Block in Credit case");
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

              i_rc  = fn_insrt_adm_pipo_rpt_tbl ( c_ServiceName,
                                                c_xchng_cd,
                                                c_cln_mtch_accnt,
                                                c_run_dt,
                                                d_payout_amt,
                                                0,
                                                d_payin_amt,
                                                d_intadj_amt,
                                                d_bnk_pipo_amt,
                                                d_eba_pipo_amt,
                                                d_amount,
                                                0,
                                                li_run_no,
                                                d_bnk_adm_allc_amt,
                                                d_eba_adm_allc_amt,
                                                c_bnk_narration,
                                                c_blk_deposit_flg /** Ver 2.7 **/
                                                );
                                          
              if ( i_rc != 0 )
              {
                fn_errlog(c_ServiceName, "S31430",LIBMSG,c_err_msg);
                strcpy( c_msg, "System error. Contact system support" );
                fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---7 ");
                return(-1);
              }
              fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---8 ");
              return(-1);
           }
          return(-1);
        }

        if (i_returncode == 0)
        {
          i_block_status = 11 ;   /** It states Bank & EBA Success **/
          fn_userlog(c_ServiceName,"Val of i_block_status for Bank & EBA Success<%d>", i_block_status);
          d_eba_adm_allc_amt = d_amount;
          fn_userlog(c_ServiceName,"Val of d_eba_adm_allc_amt after EBA success for alloc<%lf>",d_eba_adm_allc_amt);
        }
      } /* if condition is ended in ver 2.4 */
  
     /***** Ver 2.7 Starts *****/
    
     EXEC SQL
     UPDATE FTR_FO_TRNSCTN_RCRD
     SET FTR_ADM_BNK_ALLC_AMT = :d_bnk_adm_allc_amt,
         FTR_ADM_EBA_ALLC_AMT = :d_eba_adm_allc_amt
     WHERE FTR_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
     AND   FTR_RUN_NO = :li_run_no 
     AND   FTR_XCHNG_CD = :c_xchng_cd
     AND   FTR_PRDCT_CD = 'ADM'
     AND   FTR_PO_AMT   = :d_payout_amt
     AND   FTR_BNK_AMT  = :d_bnk_pipo_amt
     AND   FTR_FUND_MODEL_FLG = :c_blk_deposit_flg; 
   
     if ( SQLCODE != 0 )
     {
       fn_errlog( c_ServiceName, "S31435",SQLMSG,c_err_msg);
       fn_userlog(c_ServiceName,"Error in updating Final FTR update for Block Credit Success <%ld>", SQLCODE);
       fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
      {
        fn_errlog( c_ServiceName, "S31440",LIBMSG,c_err_msg);
        fn_userlog(c_ServiceName,"Error in commit tran --In case of return---14 ");
        Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        strcpy ( c_msg, "System error. Contact system support" );
        fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
        return ( -1 );
      }
       return ( FAILURE );
     } 
   
     /***** Ver 2.7  Ends *****/

        /* d_payout_amt = d_p_new_isec_mrgn_amt; */
    
      fn_userlog(c_ServiceName,"Val of i_credit_status before final AMC update <%d>", i_credit_status);
      if (   i_credit_status == 11)  /** CRedit success --bank and EBA  */
      {
       c_amc_cr_status_flg = 'Y';
      }
      else
      {
       c_amc_cr_status_flg = 'N';
      }   
      
      EXEC SQL
        UPDATE AMC_ADM_MRGN_CALC
        SET  AMC_STATUS_FLG =  :c_amc_cr_status_flg    /* Updated Y for EBA & BAnk success for credit */
        WHERE AMC_XCHNG_CD = :c_xchng_cd
        AND AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
        AND trunc(AMC_RUN_DT) = trunc(sysdate)
        AND AMC_TRD_DT = :c_trd_dt  /** Added for issue of ADM process on same run date for different trade dates **/
        AND AMC_RUN_NO = :li_run_no
        AND AMC_BILL_NO = :c_bill_no; 
      
       if ( SQLCODE != 0 )
       {
        fn_errlog( c_ServiceName, "S31445",SQLMSG,c_err_msg);
        fn_userlog(c_ServiceName,"Error in updating final AMC for ststus flag for Credit <%ld>", SQLCODE);
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
        {
         fn_errlog( c_ServiceName, "S31450",LIBMSG,c_err_msg);
         fn_userlog(c_ServiceName,"Error in commit tran --In case of return---14 ");
         Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
         fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         strcpy ( c_msg, "System error. Contact system support" );
         fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
         return ( -1 );
        }
         return ( FAILURE );
       }    
    
    /*** Ver 2.7  starts - Transaction Ends for Blocking Allocation **/ 
     if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
     {
      fn_errlog( c_ServiceName, "S31455",LIBMSG,c_err_msg);
      fn_userlog(c_ServiceName,"Error in commit tran --In case of return---7 ");
      Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      return ( -1 );
     }  
    /*** Ver 2.7  Ends ***/  
 
   } /** FOR BLOCK MODEL Ends **/

	}

/**  ###############     CASE : 1 ENDS     #######################                 ***/


/**  ###############     CASE : 2 STARTS      #######################                 ***/
/*** Case to adjust computed ISEC Margin from FAB-Alloc/FAB-BFT amount in Case of Batch Program run  ***/

	if ( ( (c_path == 'B')  && (c_dbcr_ind == 'D' )) || ((c_path == 'S') && (c_dbcr_ind == 'D' ) ) )  
	/* This option is for debit FAB when ISEC margin is blocked in account */
	{
	  char c_unblk_db_flg[3] ={0};
	  char c_alloc_bft_flg[3] ;  /* Size changed from 2 to 3 in Ver TOL */
	 
	  fn_userlog(c_ServiceName," for xchng_cdnside debit from Alloc or BFT starts for xchng_cd <%s>", c_xchng_cd);
	  strcpy(c_unblk_db_flg ,"NN");
	  fn_userlog(c_ServiceName,"Val of c_unblk_db_flg initially  <%s >",c_unblk_db_flg);

	/*************************************************************************************************/
	/******** Case -Debit from Allocation and BFT debit Starts ****/
	/********	This option is for debit FAB when ISEC margin is blocked in  pgm run **************/
	/*************************************************************************************************/
	/***********************     Debit from allocation start   ***************************************/

		/********** Notation for c_alloc_bft_flg ****************/
		/*******  YY: Debit from Alloc and BFT Both *************/
		/*******  YN: Debit from Only Alloc         *************/
		/*******  NY: Debit from only BFT           *************/
		if (d_p_to_db_alctd_amt > 0 && d_p_to_db_bft_amt > 0)
		{
	  	strcpy(c_alloc_bft_flg, "YY");
		}

		if (d_p_to_db_alctd_amt > 0 && d_p_to_db_bft_amt == 0)
		{
	  	strcpy(c_alloc_bft_flg, "YN");
		}

		if (d_p_to_db_alctd_amt == 0 && d_p_to_db_bft_amt > 0)
		{
	  	strcpy(c_alloc_bft_flg, "NY");
		}

		/** d_payin_amt = d_p_new_isec_mrgn_amt; commented for Ver 2.7 **/
    d_payin_amt = d_p_to_db_alctd_amt; /** Ver 2.7 **/ 

		fn_userlog(c_ServiceName,"Val of d_payin_amt  <%lf>", d_payin_amt);


		if( (d_p_to_db_alctd_amt > 0  ) && c_dbcr_ind == 'D' )
		{
		  c_reference[0] = '\0';
	 	  c_dr_cr_flg = UD ;
		  d_amount = d_p_to_db_alctd_amt;
		  d_payout_amt = 0;
      c_do_commit = 'Y';  /** Ver 2.7 **/

		  if (strcmp(c_xchng_cd ,"NFO") == 0 )
		  {
		   d_amount_nse = d_amount;
		   d_amount_bse = 0;
		  }
		  if (strcmp(c_xchng_cd ,"BFO") == 0 )
		  {
		   d_amount_bse = d_amount;
		   d_amount_nse = 0;
		  }

      if(DEBUG_MSG_LVL_3) 
		 	{
		  	fn_userlog(c_ServiceName,"Val of d_amount to fn_send_bnk_msg case-2 <%lf>", d_amount); 
				fn_userlog(c_ServiceName,"Val of d_amount_nse  case-2 <%lf>", d_amount_nse); 
				fn_userlog(c_ServiceName,"Val of d_amount_bse  case-2 <%lf>", d_amount_bse); 
		  	fn_userlog(c_ServiceName,"Val of c_dr_cr_flg to fn_send_bnk_msg case-2<%c>", c_dr_cr_flg);
		  	fn_userlog(c_ServiceName,"Val of c_reference to fn_send_bnk_msg case-2 <%s>", c_reference); 
		  	fn_userlog(c_ServiceName,"Val of c_timestamp to fn_send_bnk_msg case-2 <%s>", c_timestamp);
		 	}
      /** Ver 2.7 starts -  Begin Transaction for Unblock Debit from Allocation ***/
 
      i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
      if ( i_trnsctn == -1 )
      {
       fn_errlog(c_ServiceName, "S31460",LIBMSG,c_err_msg);
       return ( FAILURE );
      } 
      i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
      if ( i_returncode != 0 )
      {
       fn_errlog(c_ServiceName, "L31270",LIBMSG,c_err_msg);
       fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
       return ( FAILURE );
      } 
      /** Ver 2.7 Ends *****/
			/** Ver 3.1 Start */
			i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
			if ( i_returncode != 0 )
			{
				fn_errlog(c_ServiceName, "L31271",LIBMSG,c_err_msg);
				fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
				return ( -1 );
			}
			/** Ver 3.1 End */

			/******************************************************/
      /*  Sending Unblock Debit message to Bank             */   
      /******************************************************/
  		strcpy( c_timestamp, "01-Jan-1980" ); 
     if ( c_blk_deposit_flg == 'B') /** If-Else  added to check Block or Deposit Model Flag in Ver 2.7 **/
     {
		  i_ch_val =  fn_send_bnk_msg (&st_usr_prfl,
						                       c_dr_cr_flg, 
						                       FO_BLK_CD, 
		                     		  	   d_amount,    
				                    	 	   BACKOFFICE,
						    								 	 c_ServiceName,
															  	 c_err_msg,
							                     &d_val_bal,
						                     	 c_reference,
							                     c_timestamp,
									     					   c_bnk_narration,  /** Added in Ver 1.2 **/
                                   c_xchng_input,     /** Ver 2.2 **/
                                   li_run_no);        /** Added for Ver 2.6 **/ 
     }
     else 
     {
      i_ch_val = SUCCESS ; /** Set Success for Deposit Model **/
     }

      switch ( i_ch_val )
	   	{			/** Switch for UD starts */
		 
      		case SUCCESS :
								d_bnk_pipo_amt =  d_amount * (-1.0);
        				fn_userlog(c_ServiceName,"Inside  Unblock Debit message to Bank  -- BANK SUCCESS");
					
					
					EXEC SQL
								SELECT 'ADM'||to_char(sysdate,'YYYYMMDD')||LPAD(pipoadmseq.nextval,6,0)
								INTO :c_bill_no
								FROM   DUAL;

	        fn_userlog(c_ServiceName,"Val of c_bill_no only in allocation ...for allocation<%s>", c_bill_no);


					if ( SQLCODE != 0 )
				  {
				 	  fn_errlog(c_ServiceName, "S31465",SQLMSG,c_err_msg);
	      	  fn_userlog(c_ServiceName,"Error in generating bill no ...for Debit from allocation");
				    strcpy ( c_msg, "System error.while generating Bill no: Contact system support" );
				    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
				    return ( -1 );
					}

					EXEC SQL 
						UPDATE AMC_ADM_MRGN_CALC
						SET AMC_BILL_NO = :c_bill_no,
						AMC_BATCH_SITE_IND = :c_path,
						AMC_DBCR_CD = 'D',
            AMC_NEW_ISEC_MRGN_AMT =AMC_NEW_ISEC_MRGN_AMT + :d_amount, /*** Added in Ver 2.5 ***/
            AMC_STATUS_FLG =  'Y'                                     /*** Added in Ver 2.5 ***/
						WHERE AMC_XCHNG_CD = :c_xchng_cd
						AND AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
						AND trunc(AMC_RUN_DT) = trunc(sysdate)
						AND AMC_TRD_DT = :c_trd_dt  /** Added for issue of ADM process on same run date for different trade dates **/
						AND AMC_RUN_NO = :li_run_no
						AND AMC_BATCH_SITE_IND = :c_path
            AND AMC_STATUS_FLG != 'F'    /*** Ver 1.6 ***/
						AND AMC_BILL_NO is null
            RETURNING ROWID              /** Added in Ver 2.7 **/
            INTO :c_src_rowid;


					if ( SQLCODE != 0 )
					{
	   				fn_errlog( c_ServiceName, "S31470",SQLMSG,c_err_msg);
	   				fn_userlog(c_ServiceName,"Error in updating AMC for bill-for Debit from alloc <%ld>", SQLCODE); 
	   				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	   				return ( FAILURE );
					}
   
	      	i_returncode =  fn_upd_adm_alloc_dtls ( c_ServiceName,
	                                    						c_err_msg,
										                              c_cln_mtch_accnt,
									                                c_bnk_accnt,
								                                  c_tag,
							                                    0,
									                                d_amount * (-1),
							                                    d_amount_nse,
											    												d_amount_bse,
                                                  &d_tot_alc_amt);   /** Added in 2.7 **/
	    			if ( i_returncode != 0 )
			    	{ 
              c_do_commit = 'N'; /** Ver 2.7 **/
      				fn_errlog(c_ServiceName, "S31475",LIBMSG,c_err_msg);
	        		fn_userlog(c_ServiceName,"Error in fn_upd_adm_alloc_dtls ...for debit from allocation");
					    strcpy ( c_msg, "System error. Error in Updating allocation --inserting failier rec" );
              fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
							fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

		  				/*** Insert into Failure table ***/
			  			i_ret_val = fn_ins_adm_flr_tbl(	c_ServiceName,
																							c_xchng_cd,
																							c_cln_mtch_accnt,
																							li_run_no,
																							c_run_dt,
																							c_bnk_accnt,
																							UNBLOCK_DEBIT,
																							ALLOCATION_DEBIT_ON_PAYIN,
																							DEBIT, /* ignore */
																							d_amount,
																							UPDATED,   /** Bank status properly updated**/							
																							NOT_UPDATED, 
																							NOT_UPDATED,						
																							c_reference,
																							c_timestamp,
																							c_bnk_narration, /** Added in Ver 1.2 **/
                                              c_blk_deposit_flg,   /** Ver 2.7 **/
                                              c_src_rowid);        /** Ver 2.7 **/ 

		           if ( i_ret_val != 0 )
						   {			        				
									fn_userlog(c_ServiceName,"Error in fn_ins_adm_flr_tbl ...for Debit from allocation");
									strcpy ( c_msg, "System error. Contact system support -for Debit from allocation" );
  								fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
									
									i_rc 	= fn_insrt_adm_pipo_rpt_tbl(c_ServiceName,	
						         						                    c_xchng_cd, 
							    												     			c_cln_mtch_accnt, 
								    																c_run_dt, 
													 													d_payout_amt,
																										d_blk4trd_amt,
																								  	d_payin_amt,
																										d_intadj_amt,
																										d_bnk_pipo_amt,
																										d_eba_pipo_amt,
																										d_bnk_bft_amt,
																										d_eba_bft_amt,
									              			              li_run_no,
															  										d_bnk_adm_allc_amt,
															  										d_eba_adm_allc_amt,
																									  c_bnk_narration, /** Added in Ver 1.2 **/
															  										c_blk_deposit_flg /** Ver 2.7 **/
                                                    );


									  if ( i_rc != 0 )
										{
	    								fn_errlog(c_ServiceName, "S31480",LIBMSG,c_err_msg);
											fn_userlog(c_ServiceName,"Error in fn_insrt_adm_pipo_rpt_tbl in EBA fail case.for allocation");
  										strcpy( c_msg, "System error. Contact system support" );
  										fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
										  fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---9 ");
										  return(-1);
										}
										fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---10 ");	
										return(-1);
							  }

								fn_userlog(c_ServiceName,"After Only bank Success and eba fail of upd_adm_alloc_dtls"); 
								fn_userlog(c_ServiceName,"After Only bank Success and eba fail for debit from alloc-");
								/*** strcpy(c_unblk_db_flg, "NN");  ***ver 2.5 ***/
                strcpy(c_unblk_db_flg, "YN"); /** Ver 2.5 ** Allocation Bank Success ***/
								break; 
  						}
              /** Accounting Entries for DEPOSIT MODEL Starts ***/
               if( DEBUG_MSG_LVL_0 )
               {
                fn_userlog(c_ServiceName,"Total FAB Allocated Amount |%lf|", d_tot_alc_amt );
                fn_userlog( c_ServiceName, "Before fn_ins_mbs call" ); 
               }   
             
               if( c_blk_deposit_flg == 'B')
               {
                strcpy(c_pipo_src,"DEBIT");
               }
               else
               {
                strcpy(c_pipo_src,"LIMIT");
               }        
              
               if(strcmp(c_xchng_cd,"NFO")==0)
               {
                strcpy(c_prdct_cd,"NFOADMI");
                c_accntng_for='I';
               } 
               else if(strcmp(c_xchng_cd,"BFO")==0)
               {
                strcpy(c_prdct_cd,"BFOADMI");
                c_accntng_for='I';
               }
        
               d_trnsctn_amt=d_amount/100;
               sprintf(c_narration,"Being Cash Margin Debited Against Open Position in NSE %s",c_run_dt); 
               strcpy(c_trace,c_reference);
               strcpy(c_mtch_series,c_bill_no);
               rtrim(c_src_rowid);
               rtrim(c_pipo_src);
               sprintf(c_run_nmbr, "%lu" ,li_run_no);
               
              if(fn_ins_mbs(c_ServiceName,c_cln_mtch_accnt,c_xchng_cd,c_prdct_cd,c_pipo_src,c_sgmnt_cd,0,c_tran_date,d_trnsctn_amt,c_run_nmbr,c_instrument_nmbr,'\0',c_mdc_crdt_nmbr, c_accntng_for, c_accntng_typ,c_trace,c_bnk_acct_nmbr, c_narration, 'D', c_mtch_series,c_class_svc, c_src_rowid,c_err_msg,c_blk_deposit_flg) == -1)   /* \0 Added in Ver TOL */
               {
                c_do_commit  = 'N'; /** Ver 2.7 **/
                fn_errlog(c_ServiceName, "S31485",LIBMSG,c_err_msg); 
                fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                strcpy ( c_msg, "System error. Error in inserting into mbs --inserting failier rec" );
                fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
               /*** Insert into Failure table ***/
               i_ret_val = fn_ins_adm_flr_tbl( c_ServiceName,
                                               c_xchng_cd,
                                               c_cln_mtch_accnt,
                                               li_run_no,
                                               c_run_dt,
                                               c_bnk_accnt,
                                               UNBLOCK_DEBIT,
                                               ALLOCATION_DEBIT_ON_PAYIN,
                                               DEBIT, /* ignore */
                                               d_amount,
                                               UPDATED,   /** Bank status properly updated**/
                                               NOT_UPDATED,
                                               NOT_UPDATED,
                                               c_reference,
                                               c_timestamp,
                                               c_bnk_narration,  /** Added in Ver 1.2 **/
                                               c_blk_deposit_flg,   /** Ver 2.7 **/
                                               c_src_rowid);        /** Ver 2.7 **/ 
               if ( i_ret_val != 0 )
               {
                 fn_userlog(c_ServiceName,"Error in fn_ins_adm_flr_tbl ...for Debit from allocation");
                 strcpy ( c_msg, "System error. Contact system support -for Debit from allocation" );
                 fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                 i_rc  = fn_insrt_adm_pipo_rpt_tbl(c_ServiceName,
                                                    c_xchng_cd,
                                                    c_cln_mtch_accnt,
                                                    c_run_dt,
                                                    d_payout_amt,
                                                    d_blk4trd_amt,
                                                    d_payin_amt,
                                                    d_intadj_amt,
                                                    d_bnk_pipo_amt,
                                                    d_eba_pipo_amt,
                                                    d_bnk_bft_amt,
                                                    d_eba_bft_amt,
                                                    li_run_no,
                                                    d_bnk_adm_allc_amt,
                                                    d_eba_adm_allc_amt,
                                                    c_bnk_narration, /** Added in Ver 1.2 **/
                                                    c_blk_deposit_flg  /** Ver 2.7 **/
                                                    ); 
             

                    if ( i_rc != 0 )
                    {
                      fn_errlog(c_ServiceName, "S31490",LIBMSG,c_err_msg);
                      fn_userlog(c_ServiceName,"Error in fn_insrt_adm_pipo_rpt_tbl in EBA fail case.for allocation");
                      strcpy( c_msg, "System error. Contact system support" );
                      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                      fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---9 ");
                      return(-1);
                    }
                    fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---10 ");
                    return(-1);
                }
                fn_userlog(c_ServiceName,"After Only bank Success and eba fail of fn_ins_mbs");
                break;   
             }          
   /*** Accounting Entries Ends ***/  
   /**** Entry in Segment Transaction Details For Deposit Model Starts Ver 2.7 *****/
       if ( c_blk_deposit_flg == 'D')
       {
         if( DEBUG_MSG_LVL_0 )
         {
          fn_userlog( c_ServiceName, "Before fn_ins_seg_log call" );
         }
  
         if(c_path == 'S')
         {
          strcpy(c_user_id_seg_log ,c_seg_log_user_id);
          l_session_id_seg_log = l_seg_log_ssn_id;
          li_run_no_seg_log=0;

          EXEC SQL
          SELECT NVL(USM_SUP_USR_TYP,'*')
          INTO :c_usr_typ
          FROM USM_SSSN_MNGR
          WHERE USM_USR_ID=:st_usr_prfl.c_user_id
          AND USM_SSSN_ID=:st_usr_prfl.l_session_id;

         if( (SQLCODE != NO_DATA_FOUND) && (SQLCODE != 0))
         {
          fn_errlog( c_ServiceName, "S31495",SQLMSG,c_err_msg);
          Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
          strcpy ( c_msg, "System error. Contact system support" );
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          return ( -1 );
         }

          fn_get_channel( c_usr_typ, (char *)c_channel );

          fn_userlog( c_ServiceName, "Channel Name |%s|", c_channel );
         }
     
        else if(c_path == 'B')
        {
         strcpy(c_user_id_seg_log ,"system");
         l_session_id_seg_log =0;
 
         li_run_no_seg_log=li_run_no;
         MEMSET(c_channel);
         strcpy(c_channel,"SYS");
        } 
    
        MEMSET(c_narration_seg_log);
        sprintf(c_narration_seg_log,"NFO ADM Payin %s",c_run_dt); 
        fn_userlog( c_ServiceName, "Narration for Segment log for ADM payin is |%s|",c_narration_seg_log ); 
        i_returncode = fn_ins_seg_log(c_user_id_seg_log,
                                      l_session_id_seg_log,
                                      c_ServiceName,
                                      c_cln_mtch_accnt,
                                      d_amount*0.01,
                                      'I', /**** To reduce  allocation **/
                                      c_sgmnt_cd,
                                      d_tot_alc_amt*0.01,
                                      'N',
                                      c_channel,
                                      c_narration_seg_log,
                                      li_run_no_seg_log,
                                      c_prdct_cd,
                                      c_pipo_src);
 
        if(i_returncode!=0)
        { 
          c_do_commit  = 'N'; /** Ver 2.7 **/
          fn_errlog(c_ServiceName, "S31500",LIBMSG,c_err_msg);
          fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
          strcpy ( c_msg, "System error. Error in Updating segment log --inserting failier rec" );
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          /*** Insert into Failure table ***/
           i_ret_val = fn_ins_adm_flr_tbl( c_ServiceName,
                                           c_xchng_cd,
                                           c_cln_mtch_accnt,
                                           li_run_no,
                                           c_run_dt,
                                           c_bnk_accnt,
                                           UNBLOCK_DEBIT,
                                           ALLOCATION_DEBIT_ON_PAYIN,
                                           DEBIT, /* ignore */
                                           d_amount,
                                           UPDATED,   /** Bank status properly updated**/
                                           NOT_UPDATED,
                                           NOT_UPDATED,
                                           c_reference,
                                           c_timestamp,
                                           c_bnk_narration,     /** Added in Ver 1.2 **/
                                           c_blk_deposit_flg,    /** Ver 2.7 **/
                                           c_src_rowid);         /** Ver 2.7 **/ 

            if ( i_ret_val != 0 )
            {
               fn_userlog(c_ServiceName,"Error in fn_ins_adm_flr_tbl ...for Debit from allocation");
               strcpy ( c_msg, "System error. Contact system support -for Debit from allocation" );
               fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

                i_rc  = fn_insrt_adm_pipo_rpt_tbl(c_ServiceName,
                                                    c_xchng_cd,
                                                    c_cln_mtch_accnt,
                                                    c_run_dt,
                                                    d_payout_amt,
                                                    d_blk4trd_amt,
                                                    d_payin_amt,
                                                    d_intadj_amt,
                                                    d_bnk_pipo_amt,
                                                    d_eba_pipo_amt,
                                                    d_bnk_bft_amt,
                                                    d_eba_bft_amt,
                                                    li_run_no,
                                                    d_bnk_adm_allc_amt,
                                                    d_eba_adm_allc_amt,
                                                    c_bnk_narration, /** Added in Ver 1.2 **/
                                                    c_blk_deposit_flg /** Ver 2.7 **/
                                                    );


                    if ( i_rc != 0 )
                    {
                      fn_errlog(c_ServiceName, "S31505",LIBMSG,c_err_msg);
                      fn_userlog(c_ServiceName,"Error in fn_insrt_adm_pipo_rpt_tbl in EBA fail case.for allocation");
                      strcpy( c_msg, "System error. Contact system support" );
                      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                      fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---9 ");
                      return(-1);
                    }
                    fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---10 ");
                    return(-1);
                }
                /*** strcpy(c_unblk_db_flg, "NN");  ***ver 2.5 ***/
                strcpy(c_unblk_db_flg, "YN"); /** Ver 2.5 ** Allocation Bank Success ***/ 
                break; 
             }
            
             /*** Ver 2.7  Insert Into PBP Table Starts ****/
               i_rc  = fn_ins_pbp ( c_ServiceName,
                                    c_xchng_cd,
                                    c_cln_mtch_accnt,
                                    c_run_dt,
                                    d_payout_amt,
                                    d_payin_amt,
                                    d_bnk_pipo_amt,
                                   li_run_no,
                                   c_payin_pool_ac_adm_nse,
                                   c_payout_pool_ac_adm_nse,
                                   c_payin_pool_ac_adm_bse,
                                   c_payout_pool_ac_adm_bse,
                                   c_payin_pool_nse_ac,
                                   c_payout_pool_nse_ac
                                  );	
              if ( i_rc != 0 )
              {
               c_do_commit  = 'N'; /** Ver 2.7 **/ 
               fn_errlog(c_ServiceName, "S31510",LIBMSG,c_err_msg);
               fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
               strcpy ( c_msg, "System error. Error in Updating segment log --inserting failier rec" );
               fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
               /*** Insert into Failure table ***/
                i_ret_val = fn_ins_adm_flr_tbl( c_ServiceName,
                                                c_xchng_cd,
                                                c_cln_mtch_accnt,
                                                li_run_no,
                                                c_run_dt,
                                                c_bnk_accnt,
                                                UNBLOCK_DEBIT,
                                                ALLOCATION_DEBIT_ON_PAYIN,
                                                DEBIT, /* ignore */
                                                d_amount,
                                                UPDATED,   /** Bank status properly updated**/
                                                NOT_UPDATED,
                                                NOT_UPDATED,
                                                c_reference,
                                                c_timestamp,
                                                c_bnk_narration,     /** Added in Ver 1.2 **/
                                                c_blk_deposit_flg,    /** Ver 2.7 **/
                                                c_src_rowid);         /** Ver 2.7 **/

              if ( i_ret_val != 0 )
              {
               fn_userlog(c_ServiceName,"Error in fn_ins_adm_flr_tbl ...for Debit from allocation");
               strcpy ( c_msg, "System error. Contact system support -for Debit from allocation" );
               fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

                i_rc  = fn_insrt_adm_pipo_rpt_tbl(c_ServiceName,
                                                    c_xchng_cd,
                                                    c_cln_mtch_accnt,
                                                    c_run_dt,
                                                    d_payout_amt,
                                                    d_blk4trd_amt,
                                                    d_payin_amt,
                                                    d_intadj_amt,
                                                    d_bnk_pipo_amt,
                                                    d_eba_pipo_amt,
                                                    d_bnk_bft_amt,
                                                    d_eba_bft_amt,
                                                    li_run_no,
                                                    d_bnk_adm_allc_amt,
                                                    d_eba_adm_allc_amt,
                                                    c_bnk_narration, /** Added in Ver 1.2 **/
                                                    c_blk_deposit_flg /** Ver 2.7 **/
                                                    );
                  if ( i_rc != 0 )
                  {
                   fn_errlog(c_ServiceName, "S31515",LIBMSG,c_err_msg);
                   fn_userlog(c_ServiceName,"Error in fn_insrt_adm_pipo_rpt_tbl in EBA fail case.for allocation");
                   strcpy( c_msg, "System error. Contact system support" );
                   fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                   fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---9 ");
                   return(-1);
                  }
                  fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---10 ");
                  return(-1);
                } 
                strcpy(c_unblk_db_flg, "YN"); /** Ver 2.5 ** Allocation Bank Success ***/
                break;  
              } 
             /*** Ver 2.7  Insert Into PBP Table ENds   ****/ 
            }
          /**** Entry in Segment Transaction Details For Deposit Model Ends  Ver 2.7 *****/   
              
							d_eba_pipo_amt =  d_amount * (-1.0) ;
				     	d_bal_amt = d_bal_amt + d_amount;
							fn_userlog(c_ServiceName,"After bank and EBA Success of fn_upd_adm_alloc_dtls for Alloc-debit");

							if (strcmp(c_alloc_bft_flg, "YY") == 0)
							{
							   strcpy(c_unblk_db_flg, "YN");
							}

							if (strcmp(c_alloc_bft_flg, "YN") == 0)
							{
							   strcpy(c_unblk_db_flg, "YY");
							}
   
						break;

        	case GENERAL_FAILURE :
        				fn_userlog(c_ServiceName,"Inside  Unblock Debit message to Bank  -- GENERAL_FAILURE");
        	case INSUF_FUNDS :
        				fn_userlog(c_ServiceName,"Inside  Unblock Debit message to Bank  -- INSUF_FUNDS");
    						fn_errlog(c_ServiceName, "S31520",LIBMSG,c_err_msg);

                /**** Ver 1.6 Starts Here ****/
                EXEC SQL
                UPDATE AMC_ADM_MRGN_CALC
                SET    AMC_STATUS_FLG =  'F'   
                WHERE  AMC_XCHNG_CD = :c_xchng_cd
                AND    AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                AND   trunc(AMC_RUN_DT) = trunc(sysdate)
                AND   AMC_TRD_DT = :c_trd_dt 
                AND   AMC_RUN_NO  = :li_run_no
                AND   AMC_BILL_NO  is NULL 
                AND   AMC_BATCH_SITE_IND = :c_path;

                if ( SQLCODE != 0 )
                {
                 fn_errlog( c_ServiceName, "S31525",SQLMSG,c_err_msg);
                 fn_userlog(c_ServiceName,"Error in updating AMC for Fail flag <%ld>", SQLCODE);
                 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                 return ( FAILURE );
                }
	              /**** Ver 1.6 Ends Here *****/ 						

								i_rc 	=	fn_insrt_adm_pipo_rpt_tbl(	c_ServiceName,	
								    			                        c_xchng_cd, 
									    		                        c_cln_mtch_accnt, 
								  		  	                        c_run_dt, 
                      		                        d_payout_amt,
                          		                    d_blk4trd_amt,
                              		                d_payin_amt,
                                  		            d_intadj_amt,
                                      		        d_bnk_pipo_amt,
                                          		    d_eba_pipo_amt,
                                              		d_bnk_bft_amt,
                               		    	           d_eba_bft_amt,
									                		            li_run_no,
												    										  d_bnk_adm_allc_amt,
																							    d_eba_adm_allc_amt,
																							    c_bnk_narration,  /** Added in Ver 1.2 **/
                                                  c_blk_deposit_flg /** Ver 2.7 **/
																							    );

						  	if ( i_rc != 0 )
							  {
    						 fn_errlog(c_ServiceName, "S31530",LIBMSG,c_err_msg);
      					 strcpy( c_msg, "System error. Contact system support" );
  							 fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
								 fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---13 ");
								if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
								{
								fn_errlog( c_ServiceName, "S31535",LIBMSG,c_err_msg);
								fn_userlog(c_ServiceName,"Error in commit tran --In case of return---17 ");
								Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
								fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
								strcpy ( c_msg, "System error. Contact system support" );
								fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
								return ( -1 );
								}
								 return(-1);
							  }
							  fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---14 ");
							if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
							{
							fn_errlog( c_ServiceName, "S31540",LIBMSG,c_err_msg);
							fn_userlog(c_ServiceName,"Error in commit tran --In case of return---18 ");
							Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
							fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
							strcpy ( c_msg, "System error. Contact system support" );
							fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
							return ( -1 );
							}							  
							  return(-1);
							  break;

					case 100 :
						fn_userlog(c_ServiceName,"Inside  Unblock Debit message to Bank  -- 100");
               /**** Ver 1.6 Starts Here ****/
               if(strcmp(c_alloc_bft_flg,"YN") == 0 )
               {
                EXEC SQL
                UPDATE AMC_ADM_MRGN_CALC
                SET    AMC_STATUS_FLG =  'F'
                WHERE  AMC_XCHNG_CD = :c_xchng_cd
                AND    AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                AND   trunc(AMC_RUN_DT) = trunc(sysdate)
                AND   AMC_TRD_DT = :c_trd_dt
                AND   AMC_RUN_NO  = :li_run_no
                AND   AMC_BILL_NO  is NULL
                AND   AMC_BATCH_SITE_IND = :c_path;

                if ( SQLCODE != 0 )
                {
                 fn_errlog( c_ServiceName, "S31545",SQLMSG,c_err_msg);
                 fn_userlog(c_ServiceName,"Error in updating AMC for Fail flag <%ld>", SQLCODE);
                 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                 return ( FAILURE );
                } 
               }
                /**** Ver 1.6 Ends Here *****/
						break ;

       		case BLOCK_NOT_EXISTING :
							fn_userlog(c_ServiceName,"Inside  Unblock Debit message to Bank  -- BLOCK_NOT_EXISTING");
      				sprintf(c_msg,"Inside  Unblock Debit message to Bank  for <%s>-- BLOCK_NOT_EXISTING", c_cln_mtch_accnt);

              /**** Ver 1.6 Starts Here ****/
               if(strcmp(c_alloc_bft_flg,"YN") == 0 )
               {
                EXEC SQL
                UPDATE AMC_ADM_MRGN_CALC
                SET    AMC_STATUS_FLG =  'F'
                WHERE  AMC_XCHNG_CD = :c_xchng_cd
                AND    AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                AND   trunc(AMC_RUN_DT) = trunc(sysdate)
                AND   AMC_TRD_DT = :c_trd_dt
                AND   AMC_RUN_NO  = :li_run_no
                AND   AMC_BILL_NO  is NULL
                AND   AMC_BATCH_SITE_IND = :c_path;

                if ( SQLCODE != 0 )
                {
                 fn_errlog( c_ServiceName, "S31550",SQLMSG,c_err_msg);
                 fn_userlog(c_ServiceName,"Error in updating AMC for Fail flag <%ld>", SQLCODE);
                 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                 return ( FAILURE );
                }
               }
                /**** Ver 1.6 Ends Here *****/
 
  						fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
							break;

      		case INDERMINATE_FAILURE :
							fn_userlog(c_ServiceName,"Inside  Unblock Debit message to Bank  -- INDERMINATE_FAILURE");

       		case RERUN_FAILURE :										
							fn_userlog(c_ServiceName,"Inside  Unblock Debit message to Bank  -- RERUN_FAILURE");
					default :
							fn_userlog(c_ServiceName,"Inside  Unblock Debit message to Bank  -- default");

                /**** Ver 1.6 Starts Here ****/
                EXEC SQL
                UPDATE AMC_ADM_MRGN_CALC
                /*** SET    AMC_STATUS_FLG =  'F'   commented in Ver 2.5 ***/
                SET    AMC_STATUS_FLG =  'N'   /*** Added in Ver 2.5 ***/
                WHERE  AMC_XCHNG_CD = :c_xchng_cd
                AND    AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                AND   trunc(AMC_RUN_DT) = trunc(sysdate)
                AND   AMC_TRD_DT = :c_trd_dt
                AND   AMC_RUN_NO  = :li_run_no
                AND   AMC_BILL_NO  is NULL
                AND   AMC_BATCH_SITE_IND = :c_path;

                if ( SQLCODE != 0 )
                {
                 fn_errlog( c_ServiceName, "S31555",SQLMSG,c_err_msg);
                 fn_userlog(c_ServiceName,"Error in updating AMC for flag <%ld>", SQLCODE);
                 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                 return ( FAILURE );
                }
                /**** Ver 1.6 Ends Here *****/
                
                c_rerun_handle_flg = 'Y';               /*** Added in Ver 2.5 ***/

								/*** Insert into Failure table ***/
								i_ret_val = fn_ins_adm_flr_tbl(	c_ServiceName,
																							c_xchng_cd,
																							c_cln_mtch_accnt,
																							li_run_no,
																							c_run_dt,
																							c_bnk_accnt,
																							UNBLOCK_DEBIT,
																							ALLOCATION_DEBIT_ON_PAYIN,
																							DEBIT, /* ignore */
																							d_amount,
																							NOT_UPDATED,
																							NOT_UPDATED,
																							BANK_FAILED,	/* Should not be picked up in Rerun */							
																							c_reference,
																							c_timestamp,
																							c_bnk_narration,     /** Added in Ver 1.2 **/
                                              c_blk_deposit_flg,   /** Ver 2.7 **/
                                              c_src_rowid);        /** Ver 2.7  **/
            		if ( i_ret_val != 0 )
								{
      						strcpy ( c_msg, "System error. Contact system support" );
  								fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
									i_rc 	=	fn_insrt_adm_pipo_rpt_tbl(	c_ServiceName,	
									      			                        c_xchng_cd, 
										      		                        c_cln_mtch_accnt, 
											      	                        c_run_dt, 
                    			                            d_payout_amt,
                          			                      d_blk4trd_amt,
                                			                d_payin_amt,
                                      			          d_intadj_amt,
                                            			    d_bnk_pipo_amt,
            			                                    d_eba_pipo_amt,
                  			                              d_bnk_bft_amt,
                        			                        d_eba_bft_amt,
									            			                  li_run_no,
															  										  d_bnk_adm_allc_amt,
															  										  d_eba_adm_allc_amt,
																									    c_bnk_narration, /** Added in Ver 1.2 **/
                                                      c_blk_deposit_flg /** Ver 2.7 **/
															 											 );

									if ( i_rc != 0 )
									{
    								fn_errlog(c_ServiceName, "S31560",LIBMSG,c_err_msg);
      							strcpy( c_msg, "System error. Contact system support" );
  									fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
										fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---16 ");
										if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
										{
											fn_errlog( c_ServiceName, "S31565",LIBMSG,c_err_msg);
											fn_userlog(c_ServiceName,"Error in commit tran --In case of return---19 ");
											Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
											fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
											strcpy ( c_msg, "System error. Contact system support" );
											fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
											return ( -1 );
										}
										return(-1);
									}

									fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---17 ");
									if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
									{
										fn_errlog( c_ServiceName, "S31570",LIBMSG,c_err_msg);
										fn_userlog(c_ServiceName,"Error in commit tran --In case of return---20 ");
										Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
										fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
										strcpy ( c_msg, "System error. Contact system support" );
										fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
										return ( -1 );
									}
									return(-1);
								}
      					sprintf(c_msg,"Indet failure for %s in unblock  debit on Payin to bank",c_cln_mtch_accnt); 
  							fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

								i_rc 	=	fn_insrt_adm_pipo_rpt_tbl(	c_ServiceName,	
																										c_xchng_cd, 
																										c_cln_mtch_accnt, 
																										c_run_dt, 
																										d_payout_amt,
																										d_blk4trd_amt,
																										d_payin_amt,
																										d_intadj_amt,
																										d_bnk_pipo_amt,
																										d_eba_pipo_amt,
																										d_bnk_bft_amt,
																										d_eba_bft_amt,
																										li_run_no,
																										d_bnk_adm_allc_amt,
																										d_eba_adm_allc_amt,
																										c_bnk_narration, /** Added in Ver 1.2 **/
                                                    c_blk_deposit_flg /** Ver 2.7 **/
																										);

								if ( i_rc != 0 )
								{
    							fn_errlog(c_ServiceName, "S31575",LIBMSG,c_err_msg);
      						strcpy( c_msg, "System error. Contact system support" );
  								fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
									fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---18 ");
									if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
									{
										fn_errlog( c_ServiceName, "S31580",LIBMSG,c_err_msg);
										fn_userlog(c_ServiceName,"Error in commit tran --In case of return---21 ");
										Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
										fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
										strcpy ( c_msg, "System error. Contact system support" );
										fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
										return ( -1 );
									}									
									return(-1);
								}
								fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---19 ");
								if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
								{
									fn_errlog( c_ServiceName, "S31585",LIBMSG,c_err_msg);
									fn_userlog(c_ServiceName,"Error in commit tran --In case of return---22 ");
									Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
									fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
									strcpy ( c_msg, "System error. Contact system support" );
									fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
									return ( -1 );
								}								
								return(-1);
								break;
				}/*End of switch*/
   /** Ver 2.7 Insert Into  FTR for Debit Allocation **/
   d_payout_amt = 0;
   fn_userlog(c_ServiceName,"Val of d_payin_amt- ftr insert after UD- <%lf> --- 2", d_payin_amt);
   
   if ( c_do_commit == 'Y' ) /** Ver 2.7  This condition ensures that  FTR is only insrtd when there is no failure in above process ***/  
   {
   i_rc  = fn_insrt_adm_pipo_rpt_tbl(c_ServiceName,
                                     c_xchng_cd,
                                     c_cln_mtch_accnt,
                                     c_run_dt,
                                     d_payout_amt,
                                     d_blk4trd_amt,
                                     d_payin_amt,
                                     d_intadj_amt,
                                     d_bnk_pipo_amt,
                                     d_eba_pipo_amt,
                                     d_bnk_bft_amt,
                                     d_eba_bft_amt,
                                     li_run_no,
                                     d_bnk_adm_allc_amt,
                                     d_eba_adm_allc_amt,
                                     c_bnk_narration, /** Added in Ver 1.2 **/
                                     c_blk_deposit_flg /** Ver 2.7 **/
                                   );  
    if ( i_rc != 0 )
    {
     fn_errlog(c_ServiceName, "S31590",LIBMSG,c_err_msg);
     strcpy( c_msg, "System error. Contact system support" );
     fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
     if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
     {
      fn_errlog( c_ServiceName, "S31595",LIBMSG,c_err_msg);
      fn_userlog(c_ServiceName,"Error in commit tran --In case of return---35 ");
      Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      return ( -1 );
     }
     tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

   }  
 
   /** Ver 2.7 Insert Into FTR Ends ***/
 
   /*** Ver 2.7 - Transaction Ends for Debit from Allocation ***/
   if ( c_do_commit == 'Y' ) /** Added to perform commit only when there is no Failure in Above cases ***/
   {
    if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
    {
      fn_errlog( c_ServiceName, "S31600",LIBMSG,c_err_msg);
      fn_userlog(c_ServiceName,"Error in commit tran --In case of return---7 ");
      Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      return ( -1 );
    }
   }  
  
	} 
 /***********************     Debit from allocation End   *************************************/ 
   
  if ( c_blk_deposit_flg == 'B') /** Added Conditional to check  for Block Model in Ver 2.7 **/ 
  { 
   if(  (d_p_to_db_bft_amt > 0) && (c_dbcr_ind == 'D') ) /** Unblock Debit from BFT start **/
   {
      c_reference[0] = '\0';
      c_dr_cr_flg = UD ;
      d_amount = d_p_to_db_bft_amt;
  	  d_payout_amt = 0;
      d_bnk_pipo_amt = 0; /** Ver 2.7 **/
      d_eba_pipo_amt = 0; /** Ver 2.7 **/
      d_payin_amt = d_p_to_db_bft_amt; /** Ver 2.7 **/ 
      
		  if (strcmp(c_xchng_cd ,"NFO") == 0 )
		  {
		   d_amount_nse = d_amount;
		   d_amount_bse = 0;
		  }
		  if (strcmp(c_xchng_cd ,"BFO") == 0 )
		  {
		   d_amount_bse = d_amount;
		   d_amount_nse = 0;
		  }
    
      /*** Ver 2.7  Starts -  Begin Transaction for Unlock Debit from BFT ***/
      i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
      if ( i_trnsctn == -1 )
      {
       fn_errlog(c_ServiceName, "S31605",LIBMSG,c_err_msg);
       return ( FAILURE );
      }
      i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
      if ( i_returncode != 0 )
      {
       fn_errlog(c_ServiceName, "L31270",LIBMSG,c_err_msg);
       fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
       return ( FAILURE );
      }  
      /*** Ver 2.7 Ends ****/
			/** Ver 3.1 Start */
			i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
			if ( i_returncode != 0 )
			{
				fn_errlog(c_ServiceName, "L31271",LIBMSG,c_err_msg);
				fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
				return ( -1 );
			}
			/** Ver 3.1 End */

      /******************************************************/
      /*  Sending Unblock Debit message to Bank             */
      /******************************************************/
       strcpy( c_timestamp, "01-Jan-1980" );	

		 	if(DEBUG_MSG_LVL_3)
		 	{
		  	fn_userlog(c_ServiceName,"Val of d_amount to fn_send_bnk_msg in case-2 for BFT <%lf>", d_amount);
				fn_userlog(c_ServiceName,"Val of d_amount_bse in case-2 for BFT <%lf>", d_amount_bse);
				fn_userlog(c_ServiceName,"Val of d_amount_nse in case-2 for BFT <%lf>", d_amount_nse);
		  	fn_userlog(c_ServiceName,"Val of c_dr_cr_flg to fn_send_bnk_msg in case-2 for BFT <%c>", c_dr_cr_flg);
		  	fn_userlog(c_ServiceName,"Val of c_reference to fn_send_bnk_msg in case-2 for BFT <%s>", c_reference);
		  	fn_userlog(c_ServiceName,"Val of c_timestamp to fn_send_bnk_msg in case-2 for BFT <%s>", c_timestamp);
		 	}

      i_ch_val =  fn_send_bnk_msg ( &st_usr_prfl,
                                    c_dr_cr_flg,
                                    FO_BFT_BLK_CD,
                                    d_amount,
                                    BACKOFFICE,
                                    c_ServiceName,
                                    c_err_msg,
                                    &d_val_bal,
                                    c_reference,
                                    c_timestamp,
				    										    c_bnk_narration,  /** Added in Ver 1.2 **/
                                    c_xchng_input,    /** Ver 2.2 **/
                                    li_run_no );      /** Added for Ver 2.6 **/ 
 
          switch ( i_ch_val )
          {
            case SUCCESS :
							fn_userlog(c_ServiceName,"Inside  Unblock Debit from BFT --BANK SUCCESS");			
							/** commented in Ver 2.7 d_bnk_pipo_amt = d_bnk_pipo_amt + ( d_amount * (-1.0) ); **/
              d_bnk_pipo_amt  = d_amount * (-1.0);   /*** Ver 2.7 ***/
              d_bnk_bft_amt = d_amount * (-1.0); /* Ver 2.7 */

							if (strcmp(c_alloc_bft_flg, "NY") == 0)
										/** If its for only BFT debit then generate new bill  **/
										/** As for allocation already generated bill  **/
							{
								EXEC SQL
										SELECT 'ADM'||to_char(sysdate,'YYYYMMDD')||LPAD(pipoadmseq.nextval,6,0)
										INTO : c_bill_no
										FROM   DUAL;

								if ( SQLCODE != 0 )
								{
									fn_errlog(c_ServiceName, "L31180",SQLMSG,c_err_msg);
									fn_userlog(c_ServiceName,"Error in generating bill no -- in BFT case");
									strcpy ( c_msg, "System error. Contact system support" );
									fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
									if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
									{
										fn_errlog( c_ServiceName, "S31610",LIBMSG,c_err_msg);
										fn_userlog(c_ServiceName,"Error in commit tran --In case of return---23 ");
										Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
										fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
										strcpy ( c_msg, "System error. Contact system support" );
										fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
										return ( -1 );
									}									
									return ( -1 );
								}

								EXEC SQL 
									UPDATE AMC_ADM_MRGN_CALC
									SET AMC_BILL_NO = :c_bill_no,
									AMC_BATCH_SITE_IND = :c_path,
									AMC_DBCR_CD = 'D',
                  AMC_NEW_ISEC_MRGN_AMT= AMC_NEW_ISEC_MRGN_AMT + :d_amount,  /*** Added in Ver 2.5 ***/
                  AMC_STATUS_FLG =  'Y'                                      /*** Added in Ver 2.5 ***/
									WHERE AMC_XCHNG_CD = :c_xchng_cd
									AND AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
									AND trunc(AMC_RUN_DT) = trunc(sysdate)
									AND AMC_TRD_DT = :c_trd_dt  /** Added for issue of ADM process on same run date for diff trade dates **/
									AND AMC_RUN_NO = :li_run_no
									AND AMC_BATCH_SITE_IND = :c_path
                  AND AMC_STATUS_FLG != 'F'    /*** Ver 1.6 ***/
									AND AMC_BILL_NO is null
                  RETURNING ROWID    /** Ver 2.7 ***/
                  INTO :c_src_rowid;


								if ( SQLCODE != 0 )
								{
								 fn_errlog( c_ServiceName, "S31615",SQLMSG,c_err_msg);
								 fn_userlog(c_ServiceName,"Error in updating AMC Bill -debit from bft <%ld>", SQLCODE); 
								if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
								{
									fn_errlog( c_ServiceName, "S31620",LIBMSG,c_err_msg);
									fn_userlog(c_ServiceName,"Error in commit tran --In case of return---24 ");
									Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
									fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
									strcpy ( c_msg, "System error. Contact system support" );
									fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
									return ( -1 );
								}								 
								 return ( FAILURE );
								}
						} 
             /*** Ver 1.6 Starts Here **/
             /*** This case is handled in case, if there was unblock debit from both Allocation and BFT, but 
                  Unblock debit from Allocation fails and UD from BFT success then the record in AMC table
                  need to be marked as success with BFT success amount. ***************/  
            else if( strcmp(c_alloc_bft_flg, "YY") == 0  && strcmp(c_unblk_db_flg,"NN") == 0 )
            {
              strcpy(c_alloc_bft_flg,"NY");  /** Since the UD from Allocation is is failed, so here it is considered as UD from only BFT ****/
            
              EXEC SQL
                    SELECT 'ADM'||to_char(sysdate,'YYYYMMDD')||LPAD(pipoadmseq.nextval,6,0)
                    INTO : c_bill_no
                    FROM   DUAL;

                if ( SQLCODE != 0 )
                {
                  fn_errlog(c_ServiceName, "L31180",SQLMSG,c_err_msg);
                  fn_userlog(c_ServiceName,"Error in generating bill no -- in BFT case");
                  strcpy ( c_msg, "System error. Contact system support" );
                  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
                  {
                    fn_errlog( c_ServiceName, "S31625",LIBMSG,c_err_msg);
                    fn_userlog(c_ServiceName,"Error in commit tran --In case of return---23 ");
                    Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
                    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                    strcpy ( c_msg, "System error. Contact system support" );
                    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                    return ( -1 );
                  }
                  return ( -1 );
                }

                EXEC SQL
                  UPDATE AMC_ADM_MRGN_CALC
                  SET AMC_BILL_NO = :c_bill_no,
                  AMC_BATCH_SITE_IND = :c_path,
                  AMC_DBCR_CD = 'D',
       /***       AMC_NEW_ISEC_MRGN_AMT = :d_amount, **commented in Ver 2.5 */
                  AMC_NEW_ISEC_MRGN_AMT =AMC_NEW_ISEC_MRGN_AMT + :d_amount, /*** Added in Ver 2.5 ***/
                  AMC_STATUS_FLG =  'Y'                                     /*** Added in Ver 2.5 ***/
                  WHERE AMC_XCHNG_CD = :c_xchng_cd
                  AND AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                  AND trunc(AMC_RUN_DT) = trunc(sysdate)
                  AND AMC_TRD_DT = :c_trd_dt 
                  AND AMC_RUN_NO = :li_run_no
                  AND AMC_BATCH_SITE_IND = :c_path
                  AND AMC_STATUS_FLG != 'F'  
                  AND AMC_BILL_NO is null
                  RETURNING ROWID
                  INTO :c_src_rowid;   /** Ver 2.7 **/ 
    
                if ( SQLCODE != 0 )
                {
                 fn_errlog( c_ServiceName, "S31630",SQLMSG,c_err_msg);
                 fn_userlog(c_ServiceName,"Error in updating AMC Bill -debit from bft <%ld>", SQLCODE);
                 if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
                 {
                  fn_errlog( c_ServiceName, "S31635",LIBMSG,c_err_msg);
                  fn_userlog(c_ServiceName,"Error in commit tran --In case of return---24 ");
                  Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
                  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                  strcpy ( c_msg, "System error. Contact system support" );
                  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                  return ( -1 );
                 }
                 return ( FAILURE );
                }    

            }  /*** Ver 1.6 Ends Here ***/
 
            else  /*** Else block is added in ver 2.5 ****/
            {
               EXEC SQL
                    UPDATE AMC_ADM_MRGN_CALC
                    SET    AMC_BATCH_SITE_IND = :c_path,
                           AMC_STATUS_FLG ='Y',
                           AMC_NEW_ISEC_MRGN_AMT = AMC_NEW_ISEC_MRGN_AMT + :d_amount
                    WHERE  AMC_XCHNG_CD = :c_xchng_cd
                           AND AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                           AND trunc(AMC_RUN_DT) = trunc(sysdate)
                           AND AMC_TRD_DT = :c_trd_dt
                           AND AMC_RUN_NO = :li_run_no
                           AND AMC_BILL_NO = :c_bill_no
                           AND AMC_DBCR_CD = 'D';
            
                if ( SQLCODE != 0 )
                   {
                    fn_errlog( c_ServiceName, "S31640",SQLMSG,c_err_msg);
                    fn_userlog(c_ServiceName,"Error in updating AMC amount -debit from bft <%ld>", SQLCODE);
                    if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
                    {
                     fn_errlog( c_ServiceName, "S31645",LIBMSG,c_err_msg);
                     fn_userlog(c_ServiceName,"Error in commit tran --In case of return---x24 ");
                     Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
                     fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                     strcpy ( c_msg, "System error. Contact system support" );
                     fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                     return ( -1 );
                    }
                    return ( FAILURE );
                    }
               
              
            }  /**** Else block is ended in ver 2.5 ***/


            		i_returncode =  fn_upd_adm_alloc_dtls ( c_ServiceName,
               		                                      c_err_msg,
                  	                                    c_cln_mtch_accnt,
                    	                                  c_bnk_accnt,
                      	                                c_tag,
                        	                              d_amount * (-1),
                          	                            0,
                            	                          d_amount_nse,
							  																			  d_amount_bse,
                                                        &d_tot_alc_amt);   /** Added in 2.7 **/
                
                if ( i_returncode != 0 )
                {
                 fn_errlog(c_ServiceName, "S31650",LIBMSG,c_err_msg);
								 fn_userlog(c_ServiceName,"Error in updating BFT in fn_upd_adm_alloc_dtls-- in BFT case");
								 strcpy ( c_msg, "System error. Contact system support" );
                 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 2.7 **/
		 					   fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

                 /*** Insert into Failure table ***/
                 i_ret_val = fn_ins_adm_flr_tbl( c_ServiceName,
    			                                       c_xchng_cd,
 		      	                                     c_cln_mtch_accnt,
            			                               li_run_no,
                  			                         c_run_dt,
                        			                   c_bnk_accnt,
                              			             UNBLOCK_DEBIT,
                                    			       BFT_DEBIT_ON_PAYIN,
                                          			 DEBIT,
                                    			       d_amount,
 			                                         	 UPDATED,          
      			                                     NOT_UPDATED,
            			                               NOT_UPDATED,    
                  			                         c_reference,
                        			                   c_timestamp,
								   														   c_bnk_narration,  /** Added in Ver 1.2 **/
                                                 c_blk_deposit_flg,    /** Ver 2.7 **/
                                                 c_src_rowid);         /** Ver 2.7  **/

      
                 if ( i_ret_val != 0 )
                 {
		  							fn_userlog(c_ServiceName,"Error in fn_ins_adm_flr_tbl for failire rec-- in BFT case");
		  							strcpy ( c_msg, "System error. Contact system support" );
                  	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
   
		               	i_rc  = fn_insrt_adm_pipo_rpt_tbl(  c_ServiceName,
                      		    	                        c_xchng_cd,
                    	    		                          c_cln_mtch_accnt,
                                			                  c_run_dt,
                                      		    	        d_payout_amt,
                                          		  	      d_blk4trd_amt,
               				                                   d_payin_amt,
                    			                              d_intadj_amt,
                          			                        d_bnk_pipo_amt,
                                			                  d_eba_pipo_amt,
                                      			            d_bnk_bft_amt,
                                            			      d_eba_bft_amt,
                                                  			li_run_no,
																												d_bnk_adm_allc_amt,
																												d_eba_adm_allc_amt,
																												c_bnk_narration, /** Added in Ver 1.2 **/
                                                        c_blk_deposit_flg /** Ver 2.7 **/
																											);
                    if ( i_rc != 0 )

                    {
                   	  fn_errlog(c_ServiceName, "S31655",LIBMSG,c_err_msg);
		    						  fn_userlog(c_ServiceName,"Error in fn_insrt_adm_pipo_rpt_tbl for failire rec--1 in BFT case");
                    	strcpy( c_msg, "System error. Contact system support" );
                    	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
											return(-1);
                    }
		  						  fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---20 ");
		  						  return(-1);
                 }		
 /*********** VER 2.7  COMMNTD SINCE NOT REQUIRED AS FTR ENTRY ALRDY MADE IN ABOVE TRNSCTION **************
 
	        			 i_rc  = fn_insrt_adm_pipo_rpt_tbl(  c_ServiceName,
  		                                              c_xchng_cd,
	    	                                            c_cln_mtch_accnt,
        		                                        c_run_dt,
            		                                    d_payout_amt,
                		                                d_blk4trd_amt,
                    		                            d_payin_amt,
                        		                        d_intadj_amt,
                            		                    d_bnk_pipo_amt,
                                		                d_eba_pipo_amt,
                                    		            d_bnk_bft_amt,
                                        		        d_eba_bft_amt,
                                            		    li_run_no,
							    																	d_bnk_adm_allc_amt,
																								    d_eba_adm_allc_amt,
																								    c_bnk_narration,  ** Added in Ver 1.2 **
                                                    c_blk_deposit_flg  ** Ver 2.7 **
																							    );
 
                if ( i_rc != 0 )
                {
                 fn_errlog(c_ServiceName, "S31660",LIBMSG,c_err_msg);
	            	 fn_userlog(c_ServiceName,"Error in fn_insrt_adm_pipo_rpt_tbl for failire rec--2 in BFT case");
                 strcpy( c_msg, "System error. Contact system support" );
                 fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
		 						 return(-1);
                }
    ************************************** COMMENT END FOR VER 2.7 ************************************/
								 return(-1);
              }

              /** Ver 2.7   Insert MBS goes here **/
              if( DEBUG_MSG_LVL_0 )
              {
               fn_userlog( c_ServiceName, "Before fn_ins_mbs call" );
              }
              if( c_blk_deposit_flg == 'B')
              {
               strcpy(c_pipo_src,"DEBIT");
              }
              else
              {
               strcpy(c_pipo_src,"LIMIT");
              }
              if(strcmp(c_xchng_cd,"NFO")==0)
              {
               strcpy(c_prdct_cd,"NFOADMI");
               c_accntng_for='I';
              }
              else if(strcmp(c_xchng_cd,"BFO")==0)
              {
               strcpy(c_prdct_cd,"BFOADMI");
               c_accntng_for='I';
              } 
              
              d_trnsctn_amt=d_amount/100;
              sprintf(c_narration,"Being Cash Margin Debited Against Open Position in NSE %s",c_run_dt); 
              strcpy(c_trace,c_reference);
              strcpy(c_mtch_series,c_bill_no);
              rtrim(c_src_rowid);
              rtrim(c_pipo_src);
              sprintf(c_run_nmbr, "%lu" ,li_run_no);
              
              if(fn_ins_mbs(c_ServiceName,c_cln_mtch_accnt,c_xchng_cd,c_prdct_cd,c_pipo_src,c_sgmnt_cd,0,c_tran_date,d_trnsctn_amt,c_run_nmbr,c_instrument_nmbr,'\0',c_mdc_crdt_nmbr, c_accntng_for, c_accntng_typ,c_trace,c_bnk_acct_nmbr, c_narration, 'D', c_mtch_series,c_class_svc, c_src_rowid,c_err_msg,c_blk_deposit_flg) == -1)  /* \0 Added in Ver TOL */
              {
               fn_errlog(c_ServiceName, "S31665",LIBMSG,c_err_msg);
               fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
               strcpy ( c_msg, "System error. Error in inserting into mbs --inserting failier rec" );
               fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
               
               /*** Insert into Failure table ***/
               i_ret_val = fn_ins_adm_flr_tbl(c_ServiceName,
                                              c_xchng_cd,
                                              c_cln_mtch_accnt,
                                              li_run_no,
                                              c_run_dt,
                                              c_bnk_accnt,
                                              UNBLOCK_DEBIT,
                                              BFT_DEBIT_ON_PAYIN,
                                              DEBIT, /* ignore */
                                              d_amount,
                                              UPDATED,   /** Bank status properly updated**/
                                              NOT_UPDATED,
                                              NOT_UPDATED,
                                              c_reference,
                                              c_timestamp,
                                              c_bnk_narration,  /** Added in Ver 1.2 **/
                                              c_blk_deposit_flg,    /** Ver 2.7 **/
                                              c_src_rowid);         /** Ver 2.7 **/ 

              {
               fn_userlog(c_ServiceName,"Error in fn_ins_adm_flr_tbl ...for Debit from allocation");
               strcpy ( c_msg, "System error. Contact system support -for Debit from allocation" );
               fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
               i_rc  = fn_insrt_adm_pipo_rpt_tbl(c_ServiceName,
                                                 c_xchng_cd,
                                                 c_cln_mtch_accnt,
                                                 c_run_dt,
                                                 d_payout_amt,
                                                 d_blk4trd_amt,
                                                 d_payin_amt,
                                                 d_intadj_amt,
                                                 d_bnk_pipo_amt,
                                                 d_eba_pipo_amt,
                                                 d_bnk_bft_amt,
                                                 d_eba_bft_amt,
                                                 li_run_no,
                                                 d_bnk_adm_allc_amt,
                                                 d_eba_adm_allc_amt,
                                                 c_bnk_narration, /** Added in Ver 1.2 **/
                                                 c_blk_deposit_flg  /** Ver 2.7 **/
                                                 );
               {
                fn_errlog(c_ServiceName, "S31670",LIBMSG,c_err_msg);
                fn_userlog(c_ServiceName,"Error in fn_insrt_adm_pipo_rpt_tbl in EBA fail case.for allocation");
                strcpy( c_msg, "System error. Contact system support" );
                fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---9 ");
                return(-1); 
               }
               fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---10 ");
               return(-1); 
              }
            
              fn_userlog(c_ServiceName,"After Only bank Success and eba fail of fn_ins_mbs");
              return(-1); 
              break;
              
             }  
            /** Insert MBS Ends Here **/

	      		/** commented in Ver 2.7 d_eba_pipo_amt = d_eba_pipo_amt + ( d_amount * (-1.0) ); **/
              d_eba_bft_amt = d_amount * (-1.0); /* Ver 2.7 */
	      			d_bal_amt = d_bal_amt + d_amount;
    			    fn_userlog(c_ServiceName,"Val of d_eba_pipo_amt-EBA sucess-BFT-  <%lf>",d_eba_pipo_amt);  
    			    fn_userlog(c_ServiceName,"Val of d_bal_amt in case of EBA sucess from BFT debit <%lf>",d_bal_amt);

							if (strcmp(c_alloc_bft_flg, "YY") == 0)
							{
				   			if (strcmp(c_unblk_db_flg ,"YN") == 0 )
				   			{
				     			strcpy(c_unblk_db_flg , "YY");
				   			}
							}

							if (strcmp(c_alloc_bft_flg, "NY") == 0)
							{
				     		strcpy(c_unblk_db_flg , "YY");
							}

         
              break;

          case GENERAL_FAILURE :
								fn_userlog(c_ServiceName,"Inside  Unblock Debit from BFT  -- GENERAL_FAILURE");			
          case INSUF_FUNDS :
									fn_userlog(c_ServiceName,"Inside  Unblock Debit from BFT  -- INSUF_FUNDS");			
              		fn_errlog(c_ServiceName, "S31675",LIBMSG,c_err_msg);
              		sprintf(c_msg,"Error sending BFT debit message on Pay in to bank for %s",c_cln_mtch_accnt);
              		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                 
                  /***** Ver 1.6 Starts Here *******/
                  /******************** Commented in Ver 2.5 *****************************
                  if ( strcmp(c_alloc_bft_flg,"YY") ==0 && strcmp(c_unblk_db_flg,"YN")==0 )
                  {
                   EXEC SQL
                     UPDATE AMC_ADM_MRGN_CALC
                        SET AMC_BILL_NO = :c_bill_no,
                            AMC_BATCH_SITE_IND = :c_path,
                            AMC_STATUS_FLG ='Y',     
                            AMC_NEW_ISEC_MRGN_AMT = AMC_NEW_ISEC_MRGN_AMT - :d_amount 
                      WHERE AMC_XCHNG_CD = :c_xchng_cd
                        AND AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                        AND trunc(AMC_RUN_DT) = trunc(sysdate)
                        AND AMC_TRD_DT = :c_trd_dt 
                        AND AMC_RUN_NO = :li_run_no
                        AND AMC_BILL_NO = :c_bill_no
                        AND AMC_DBCR_CD = 'D';
                   if ( SQLCODE != 0 )
                   {
                    fn_errlog( c_ServiceName, "S31680",SQLMSG,c_err_msg);
                    fn_userlog(c_ServiceName,"Error in updating AMC for flag <%ld>", SQLCODE);
                    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                    return ( FAILURE );
                   }  
                  }
                  ******************** Comment ends in Ver 2.5 *****************************/
                 /****** commented in ver 2.5 ***
                  else if( (strcmp(c_alloc_bft_flg, "NY") == 0) || 
                           ( strcmp(c_alloc_bft_flg,"YY")==0 && strcmp(c_unblk_db_flg,"NN") == 0 ) )
                  ********** comment ends *****/
                  if( (strcmp(c_alloc_bft_flg, "NY") == 0) ||
                      ( strcmp(c_alloc_bft_flg,"YY")==0 && strcmp(c_unblk_db_flg,"NN") == 0 ) )/*** Added in ver 2.5 **/   
                  {
                   EXEC SQL
                   UPDATE AMC_ADM_MRGN_CALC
                   SET    AMC_STATUS_FLG =  'F'
                   WHERE  AMC_XCHNG_CD = :c_xchng_cd
                   AND    AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                   AND   trunc(AMC_RUN_DT) = trunc(sysdate)
                   AND   AMC_TRD_DT = :c_trd_dt
                   AND   AMC_RUN_NO  = :li_run_no
                   AND   AMC_BILL_NO  is NULL
                   AND   AMC_BATCH_SITE_IND = :c_path;

                   if ( SQLCODE != 0 )
                   {
                    fn_errlog( c_ServiceName, "S31685",SQLMSG,c_err_msg);
                    fn_userlog(c_ServiceName,"Error in updating AMC for flag <%ld>", SQLCODE);
                    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                    return ( FAILURE );
                   }

                  }
                  /**** Ver 1.6 Ends Here **********/              		

									i_rc  = fn_insrt_adm_pipo_rpt_tbl(  c_ServiceName,
              				                                c_xchng_cd,
                    	    		                      c_cln_mtch_accnt,
                    			                          c_run_dt,
                        	    		                  d_payout_amt,
                          	      		              d_blk4trd_amt,
                            	        		          d_payin_amt,
                              	          		      d_intadj_amt,
                                	            		  d_bnk_pipo_amt,
                                  	            		d_eba_pipo_amt,
                                    	          		d_bnk_bft_amt,
                                      	        		d_eba_bft_amt,
                                        	      		li_run_no,
																										d_bnk_adm_allc_amt,
																										d_eba_adm_allc_amt,
																										c_bnk_narration, /** Added in Ver 1.2 **/
                                                    c_blk_deposit_flg /** Ver 2.7 **/
																									);

             			 if ( i_rc != 0 )
              		 {
                			fn_errlog(c_ServiceName, "S31690",LIBMSG,c_err_msg);
                			strcpy( c_msg, "System error. Contact system support" );
                			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
											fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---23 ");
											if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
											{
												fn_errlog( c_ServiceName, "S31695",LIBMSG,c_err_msg);
												fn_userlog(c_ServiceName,"Error in commit tran --In case of return---29 ");
												Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
												fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
												strcpy ( c_msg, "System error. Contact system support" );
												fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
												return ( -1 );
											}											
											return(-1);
              			}
	      						fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---24 ");
										if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
										{
											fn_errlog( c_ServiceName, "S31700",LIBMSG,c_err_msg);
											fn_userlog(c_ServiceName,"Error in commit tran --In case of return---30 ");
											Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
											fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
											strcpy ( c_msg, "System error. Contact system support" );
											fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
											return ( -1 );
										}							
	      						return(-1);
              			break;

						case 100 :
								fn_userlog(c_ServiceName,"Inside  Unblock Debit from BFT  -- 100");	
                /***** Ver 1.6 Starts Here *******/
                /*** commented in ver 2.5 ********
                if ( strcmp(c_alloc_bft_flg,"YY") ==0 && strcmp(c_unblk_db_flg,"YN")==0 )
                {
                   strcpy(c_unblk_db_flg,"YY");
                   EXEC SQL
                     UPDATE AMC_ADM_MRGN_CALC
                        SET AMC_BILL_NO = :c_bill_no,
                            AMC_NEW_ISEC_MRGN_AMT = AMC_NEW_ISEC_MRGN_AMT - :d_amount  
                      WHERE AMC_XCHNG_CD = :c_xchng_cd
                        AND AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                        AND trunc(AMC_RUN_DT) = trunc(sysdate)
                        AND AMC_TRD_DT = :c_trd_dt
                        AND AMC_RUN_NO = :li_run_no
                        AND AMC_BILL_NO = :c_bill_no
                        AND AMC_DBCR_CD = 'D';
                   if ( SQLCODE != 0 )
                   {
                    fn_errlog( c_ServiceName, "S31705",SQLMSG,c_err_msg);
                    fn_userlog(c_ServiceName,"Error in updating AMC for flag <%ld>", SQLCODE);
                    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                    return ( FAILURE );
                   }

                }
                *********** comment ends in ver 2.5****/
                /********** commented in ver 2.5 ************
                else if( (strcmp(c_alloc_bft_flg, "NY") == 0) ||
                          ( strcmp(c_alloc_bft_flg,"YY")==0 && strcmp(c_unblk_db_flg,"NN") == 0 ) ) ***/
                if( (strcmp(c_alloc_bft_flg, "NY") == 0) ||
                    ( strcmp(c_alloc_bft_flg,"YY")==0 && strcmp(c_unblk_db_flg,"NN") == 0 ) ) /*** Added in ver 2.5 ***/
                {
                   EXEC SQL
                   UPDATE AMC_ADM_MRGN_CALC
                   SET    AMC_STATUS_FLG =  'F'
                   WHERE  AMC_XCHNG_CD = :c_xchng_cd
                   AND    AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                   AND   trunc(AMC_RUN_DT) = trunc(sysdate)
                   AND   AMC_TRD_DT = :c_trd_dt
                   AND   AMC_RUN_NO  = :li_run_no
                   AND   AMC_BILL_NO  is NULL
                   AND   AMC_BATCH_SITE_IND = :c_path;

                   if ( SQLCODE != 0 )
                   {
                    fn_errlog( c_ServiceName, "S31710",SQLMSG,c_err_msg);
                    fn_userlog(c_ServiceName,"Error in updating AMC for flag <%ld>", SQLCODE);
                    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                    return ( FAILURE );
                   }
                 }
                  /**** Ver 1.6 Ends Here **********/
	
								break ;

            case BLOCK_NOT_EXISTING :
								fn_userlog(c_ServiceName,"Inside  Unblock Debit from BFT  -- BLOCK_NOT_EXISTING");			
            		sprintf (c_msg,"Error sending BFT debit message on Pay in to bank for %s",c_cln_mtch_accnt);
                /**** Ver 1.6 Starts Here ********/
                /**** commented in ver 2.5 ****
                if ( strcmp(c_alloc_bft_flg,"YY") ==0 && strcmp(c_unblk_db_flg,"YN")==0 )
                {
                   strcpy(c_unblk_db_flg,"YY");  
                   EXEC SQL
                     UPDATE AMC_ADM_MRGN_CALC
                        SET AMC_BILL_NO = :c_bill_no,
                            AMC_NEW_ISEC_MRGN_AMT = AMC_NEW_ISEC_MRGN_AMT - :d_amount   
                      WHERE AMC_XCHNG_CD = :c_xchng_cd
                        AND AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                        AND trunc(AMC_RUN_DT) = trunc(sysdate)
                        AND AMC_TRD_DT = :c_trd_dt
                        AND AMC_RUN_NO = :li_run_no
                        AND AMC_BILL_NO = :c_bill_no
                        AND AMC_DBCR_CD = 'D';
                   if ( SQLCODE != 0 )
                   {
                    fn_errlog( c_ServiceName, "S31715",SQLMSG,c_err_msg);
                    fn_userlog(c_ServiceName,"Error in updating AMC for flag <%ld>", SQLCODE);
                    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                    return ( FAILURE );
                   }

                }
              *********** comment ends in ver 2.5 ***/
              /****** commented in ver 2.5 **********
                else if( (strcmp(c_alloc_bft_flg, "NY") == 0)  || 
                          ( strcmp(c_alloc_bft_flg,"YY")==0 && strcmp(c_unblk_db_flg,"NN") == 0 ) ) ****/
                if( (strcmp(c_alloc_bft_flg, "NY") == 0)  ||
                    ( strcmp(c_alloc_bft_flg,"YY")==0 && strcmp(c_unblk_db_flg,"NN") == 0 ) )/*** Added in ver 2.5 ***/ 
                {
                  EXEC SQL
                  UPDATE AMC_ADM_MRGN_CALC
                  SET    AMC_STATUS_FLG =  'F'
                  WHERE  AMC_XCHNG_CD = :c_xchng_cd
                  AND    AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                  AND   trunc(AMC_RUN_DT) = trunc(sysdate)
                  AND   AMC_TRD_DT = :c_trd_dt
                  AND   AMC_RUN_NO  = :li_run_no
                  AND   AMC_BILL_NO  is NULL
                  AND   AMC_BATCH_SITE_IND = :c_path;

                  if ( SQLCODE != 0 )
                  {
                   fn_errlog( c_ServiceName, "S31720",SQLMSG,c_err_msg);
                   fn_userlog(c_ServiceName,"Error in updating AMC for flag <%ld>", SQLCODE);
                   fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                   return ( FAILURE );
                  }
                }
                /**** Ver 1.6 Ends Here **********/
            		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            		break;


            case INDERMINATE_FAILURE :
								fn_userlog(c_ServiceName,"Inside  Unblock Debit from BFT  -- INDERMINATE_FAILURE");			
            case RERUN_FAILURE :
								fn_userlog(c_ServiceName,"Inside  Unblock Debit from BFT  -- RERUN_FAILURE");			
            default :
								fn_userlog(c_ServiceName,"Inside  Unblock Debit from BFT  -- default");
			
                /***** Ver 1.6 Starts Here *******/
               /******* commented in ver 2.5 *************
                if ( strcmp(c_alloc_bft_flg,"YY") ==0 && strcmp(c_unblk_db_flg,"YN")==0 )
                {
                   EXEC SQL
                     UPDATE AMC_ADM_MRGN_CALC
                        SET AMC_BILL_NO = :c_bill_no,
                            AMC_BATCH_SITE_IND = :c_path,
                            AMC_STATUS_FLG ='Y',
                            AMC_NEW_ISEC_MRGN_AMT = AMC_NEW_ISEC_MRGN_AMT - :d_amount  
                      WHERE AMC_XCHNG_CD = :c_xchng_cd
                        AND AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                        AND trunc(AMC_RUN_DT) = trunc(sysdate)
                        AND AMC_TRD_DT = :c_trd_dt
                        AND AMC_RUN_NO = :li_run_no
                        AND AMC_BILL_NO = :c_bill_no
                        AND AMC_DBCR_CD = 'D';
                   if ( SQLCODE != 0 )
                   {
                    fn_errlog( c_ServiceName, "S31725",SQLMSG,c_err_msg);
                    fn_userlog(c_ServiceName,"Error in updating AMC for flag <%ld>", SQLCODE);
                    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                    return ( FAILURE );
                   }

                }
               *************** comment ends in ver 2.5 ******/
               /********* commented in ver 2.5 ***********
                else if( (strcmp(c_alloc_bft_flg, "NY") == 0) || 
                        ( strcmp(c_alloc_bft_flg,"YY")==0 && strcmp(c_unblk_db_flg,"NN") == 0 ) )
                {
                EXEC SQL
                     UPDATE AMC_ADM_MRGN_CALC
                     SET    AMC_STATUS_FLG =  'F'
                     WHERE  AMC_XCHNG_CD = :c_xchng_cd
                     AND    AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                     AND   trunc(AMC_RUN_DT) = trunc(sysdate)
                     AND   AMC_TRD_DT = :c_trd_dt
                     AND   AMC_RUN_NO  = :li_run_no
                     AND   AMC_BILL_NO  is NULL
                     AND   AMC_BATCH_SITE_IND = :c_path;
 
                 if ( SQLCODE != 0 )
                    {
                     fn_errlog( c_ServiceName, "S31730",SQLMSG,c_err_msg);
                     fn_userlog(c_ServiceName,"Error in updating AMC for flag <%ld>", SQLCODE);
                     fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                     return ( FAILURE );
                    }               
                 }
               *********** comment ends in ver 2.5***/
                /**** Ver 1.6 Ends Here **********/
          	
								i_ret_val = fn_ins_adm_flr_tbl( c_ServiceName,
    		                                      c_xchng_cd,
		                                          c_cln_mtch_accnt,
        		                                  li_run_no,
            		                              c_run_dt,
                		                          c_bnk_accnt,
                    		                      UNBLOCK_DEBIT,
                        		                  BFT_DEBIT_ON_PAYIN,
                            		              DEBIT, /* ignore */
                                		          d_amount,
                                    		      NOT_UPDATED,
                                        		  NOT_UPDATED,
             			                            BANK_FAILED,   /* Should not be picked up in Rerun */     
                  		                        c_reference,
                      		                    c_timestamp,
						    															c_bnk_narration,    /** Added in Ver 1.2 **/
                                              c_blk_deposit_flg,   /** Ver 2.7 **/
                                              c_src_rowid);        /** Ver 2.7 **/ 

              if ( i_ret_val != 0 )
              {
                strcpy ( c_msg, "System error. Contact system support" );
                fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                
								i_rc  = fn_insrt_adm_pipo_rpt_tbl(  c_ServiceName,
    			                                          c_xchng_cd,
 		      		                                      c_cln_mtch_accnt,
              			                                c_run_dt,
                    			                          d_payout_amt,
                          			                    d_blk4trd_amt,
                                			              d_payin_amt,
                                      			        d_intadj_amt,
                                            			  d_bnk_pipo_amt,
              			                                d_eba_pipo_amt,
         			                                      d_bnk_bft_amt,
                          			                    d_eba_bft_amt,
                    			                          li_run_no,
								  																	d_bnk_adm_allc_amt,
																									  d_eba_adm_allc_amt,
																									  c_bnk_narration, /** Added in Ver 1.2 **/
                                                    c_blk_deposit_flg /** Ver 2.7 **/
																								  );

                if ( i_rc != 0 )
                {
            	    fn_errlog(c_ServiceName, "S31735",LIBMSG,c_err_msg);
              	  strcpy( c_msg, "System error. Contact system support" );
               	  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
									fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---25 ");
									if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
									{
										fn_errlog( c_ServiceName, "S31740",LIBMSG,c_err_msg);
										fn_userlog(c_ServiceName,"Error in commit tran --In case of return---31 ");
										Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
										fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
										strcpy ( c_msg, "System error. Contact system support" );
										fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
										return ( -1 );
									}
									return(-1);
                }
								fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---26 ");
								if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
								{
									fn_errlog( c_ServiceName, "S31745",LIBMSG,c_err_msg);
									fn_userlog(c_ServiceName,"Error in commit tran --In case of return---32 ");
									Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
									fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
									strcpy ( c_msg, "System error. Contact system support" );
									fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
									return ( -1 );
								}
								return(-1);
              }

              sprintf(c_msg,"Indet. failure for %s at  BFT debit  on Pay in to bank",c_cln_mtch_accnt);
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              
							i_rc  = fn_insrt_adm_pipo_rpt_tbl(  c_ServiceName,
    		                                          c_xchng_cd,
		                                              c_cln_mtch_accnt,
        		                                      c_run_dt,
            		                                  d_payout_amt,
                		                              d_blk4trd_amt,
                    		                          d_payin_amt,
                        		                      d_intadj_amt,
                            		                  d_bnk_pipo_amt,
                                		              d_eba_pipo_amt,
                                    		          d_bnk_bft_amt,
                                        		      d_eba_bft_amt,
                                            		  li_run_no,
							  																	d_bnk_adm_allc_amt,
																								  d_eba_adm_allc_amt,
																								  c_bnk_narration,  /** Added in Ver 1.2 **/
                                                  c_blk_deposit_flg /** Ver 2.7 **/
																								);
              if ( i_rc != 0 )
              {
                fn_errlog(c_ServiceName, "S31750",LIBMSG,c_err_msg);
                strcpy( c_msg, "System error. Contact system support" );
                fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
								fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---26 ");
								if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
								{
									fn_errlog( c_ServiceName, "S31755",LIBMSG,c_err_msg);
									fn_userlog(c_ServiceName,"Error in commit tran --In case of return---33 ");
									Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
									fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
									strcpy ( c_msg, "System error. Contact system support" );
									fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
									return ( -1 );
								}
								return(-1);
              }
	      			fn_userlog(c_ServiceName,"Error in fn call fn_insrt_adm_pipo_rpt_tbl ---27 ");
							if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
							{
								fn_errlog( c_ServiceName, "S31760",LIBMSG,c_err_msg);
								fn_userlog(c_ServiceName,"Error in commit tran --In case of return---34 ");
								Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
								fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
								strcpy ( c_msg, "System error. Contact system support" );
								fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
								return ( -1 );
							}
	      			return(-1);
              break;
          } /*** End of Switch ***/
    /** Ver 2.7  Insert Into FTR for Unblock Debit from Allocation **/
     d_payout_amt = 0;
     fn_userlog(c_ServiceName,"Val of d_payin_amt- ftr insert after UD- <%lf> --- 2", d_payin_amt);
     i_rc  = fn_insrt_adm_pipo_rpt_tbl(c_ServiceName,
                                       c_xchng_cd,
                                       c_cln_mtch_accnt,
                                       c_run_dt,
                                       d_payout_amt,
                                       d_blk4trd_amt,
                                       d_payin_amt,
                                       d_intadj_amt,
                                       d_bnk_pipo_amt,
                                       d_eba_pipo_amt,
                                       d_bnk_bft_amt,
                                       d_eba_bft_amt,
                                       li_run_no,
                                       d_bnk_adm_allc_amt,
                                       d_eba_adm_allc_amt,
                                       c_bnk_narration, /** Added in Ver 1.2 **/
                                       c_blk_deposit_flg /** Ver 2.7 **/
                                      );  
     if ( i_rc != 0 )
     {
      fn_errlog(c_ServiceName, "S31765",LIBMSG,c_err_msg);
      strcpy( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
      {
       fn_errlog( c_ServiceName, "S31770",LIBMSG,c_err_msg);
       fn_userlog(c_ServiceName,"Error in commit tran --In case of return---35 ");
       Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
       fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
       strcpy ( c_msg, "System error. Contact system support" );
       fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
       return ( -1 );
      }
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     }   
    /** Insert Into FTR Ends ***/ 
  
    /*** Ver 2.7 - Transaction Ends for Unblock Debit from BFT **/
     if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
     {
      fn_errlog( c_ServiceName, "S31775",LIBMSG,c_err_msg);
      fn_userlog(c_ServiceName,"Error in commit tran --In case of return---7 ");
      Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      return ( -1 );
     }
   } /*** End of BFT Block ***/
  }

    fn_userlog(c_ServiceName,"Val of c_bill_no b4 updating AMC for status- <%s> --- 2", c_bill_no); 
    fn_userlog(c_ServiceName,"Val of c_path b4 updating AMC for status in alloc/bft debit <%c> --- 2", c_path);
    fn_userlog(c_ServiceName,"Val of c_unblk_db_flg b4 updating AMC-<%s> - 2", c_unblk_db_flg);  
/************ commented in ver 2.5 ************
		EXEC SQL 
			UPDATE AMC_ADM_MRGN_CALC
			SET AMC_BILL_NO = :c_bill_no,
		  	  AMC_BATCH_SITE_IND = :c_path,
		    	AMC_STATUS_FLG = decode(:c_unblk_db_flg,'YY','Y','N')
			WHERE AMC_XCHNG_CD = :c_xchng_cd
			AND AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
			AND trunc(AMC_RUN_DT) = trunc(sysdate)
			AND AMC_TRD_DT = :c_trd_dt  ** Added for issue of running ADM process on same run date for different trade dates **
			AND AMC_RUN_NO = :li_run_no
			AND AMC_BILL_NO = :c_bill_no
			AND AMC_DBCR_CD = 'D';


		if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
		{
	   fn_errlog( c_ServiceName, "S31780",SQLMSG,c_err_msg);
	   fn_userlog(c_ServiceName,"Error in updating AMC for final flag in -debit <%ld> --- 2", SQLCODE);
		 if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
		 {
			fn_errlog( c_ServiceName, "S31785",LIBMSG,c_err_msg);
			fn_userlog(c_ServiceName,"Error in commit tran --In case of return---36 ");
			Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			strcpy ( c_msg, "System error. Contact system support" );
			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
			return ( -1 );
		 }	   
	   return ( FAILURE );
		}
 *********************** comment ends in ver 2.5 ******************/
  } /* Close for c_path = B with open positions */
/**  ###############     CASE : 2 ENDS      #######################                 ***/

/***************** commented in Ver 2.7 **********************
  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
    fn_errlog( c_ServiceName, "S31790",LIBMSG,c_err_msg);
    fn_userlog(c_ServiceName,"Error in commit tran for fn_call_upd_fab function ");
   	Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    return ( -1 );
  }
 ***************** comment Ends for Ver 2.7 *****************/
  fn_userlog(c_ServiceName,"Transaction Ends in fn_call_upd_fab ");
return ( SUCCESS );
}  /** End of fn_call_upd_fab function **/

/* ############################ Function- fn_insrt_adm_pipo_rpt_tbl     #######################################  */ 

int fn_insrt_adm_pipo_rpt_tbl( char *c_ServiceName,
                         			 char *c_xchng_cd,
                          		 char *c_cln_mtch_accnt,
                          		 char *c_run_dt,
                          		 double d_payout_amt,
                          		 double d_blk4trd_amt,
                         			 double d_payin_amt,
                          		 double d_intadj_amt,
                          		 double d_bnk_pipo_amt,
                          		 double d_eba_pipo_amt,
                          		 double d_bnk_bft_amt,
                          		 double d_eba_bft_amt,
                          		 long  li_run_no,
															 double d_bnk_adm_allc_amt,
															 double	d_eba_adm_allc_amt,
															 char *c_bnk_narration,
                               char c_blk_deposit_flg /** Ver 2.7 **/
														 )
{

  int i_trnsctn ;
  char c_err_msg[256];
  char c_msg [ 256 ];
  char c_tag[256];  /** Ver 2.7 **/
  int i_returncode; /** Ver 2.7 **/
  
  /*** Ver 2.7 Starts ***/
  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
   fn_errlog(c_ServiceName, "S31795",LIBMSG,c_err_msg);
   return ( FAILURE );
  }
  /*** Ver 2.7 Ends ***/

  EXEC SQL
    INSERT INTO FTR_FO_TRNSCTN_RCRD
    (
      FTR_CLM_MTCH_ACCNT,
      FTR_XCHNG_CD,
      FTR_PIPO_DT,
      FTR_PO_AMT,
      FTR_BFT_AMT,
      FTR_PI_AMT,
      FTR_INT_ADJ_AMT,
      FTR_BNK_AMT,
      FTR_EBA_AMT,
      FTR_BFT_BNK_AMT,
      FTR_BFT_EBA_AMT,
      FTR_RUN_NO,
      FTR_PRDCT_CD,
      FTR_ADM_BNK_ALLC_AMT,
      FTR_ADM_EBA_ALLC_AMT,
      FTR_NARRATION,  /** Added in Ver 1.2 **/
      FTR_FUND_MODEL_FLG  /** Ver 2.7 **/
    )
    VALUES
    (
      :c_cln_mtch_accnt,
      :c_xchng_cd,
      to_date(:c_run_dt,'DD-Mon-YYYY'), 
      :d_payout_amt,
      :d_blk4trd_amt,
      :d_payin_amt,
      :d_intadj_amt,
      :d_bnk_pipo_amt,
      :d_eba_pipo_amt,
      :d_bnk_bft_amt,
      :d_eba_bft_amt,
      :li_run_no,
      'ADM',
      :d_bnk_adm_allc_amt,
      :d_eba_adm_allc_amt,
      :c_bnk_narration,   /** Added in Ver 1.2 **/
      :c_blk_deposit_flg  /** Ver 2.7 **/ 
    );

   if ( SQLCODE != 0 )
   {
      fn_errlog( c_ServiceName, "S31800",SQLMSG,c_err_msg);
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      return ( FAILURE );
   }
   /*** Ver 2.7 Starts ***/
   if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
   {
    fn_errlog( c_ServiceName, "S31805",LIBMSG,c_err_msg);
    fn_userlog(c_ServiceName,"Error in commit tran for FBM insert ");
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    return ( -1 );
   }
   /**** Ver 2.7 Ends ***/
   return ( SUCCESS );
} 

/* ##############################################################################  */
/*                       Function -fn_ins_pbp    Ver 2.7 starts                    */
/* ##############################################################################  */
int fn_ins_pbp( char *c_ServiceName,
                char *c_xchng_cd,
                char *c_cln_mtch_accnt,
                char *c_run_dt,
                double d_payout_amt,
                double d_payin_amt,
                double d_bnk_pipo_amt,
                long  li_run_no,
                char *c_payin_pool_ac_adm_nse,
                char *c_payout_pool_ac_adm_nse,
                char *c_payin_pool_ac_adm_bse,
                char *c_payout_pool_ac_adm_bse,
                char *c_payin_pool_nse_ac,
                char *c_payout_pool_nse_ac
              )
{ 
  int i_trnsctn ; 
  char c_prdct_cd[4];
  char c_ibr_prdct_cd[11];
  char c_pipo_typ='\0';
  char c_pool_acc[21];
  double d_bnk_pipo_amt_pbp= 0.0;
  strcpy(c_pool_acc,"12345");

  MEMSET(c_prdct_cd);
  MEMSET(c_ibr_prdct_cd);

  char c_othr_pool_acc[20]; 
  if(strcmp(c_xchng_cd,"NFO")==0)
  {
   strcpy(c_prdct_cd,"ADM");
   /* strcpy(c_ibr_prdct_cd,"FNO"); */

   if(d_payin_amt!=0)
   {
    c_pipo_typ='I';
    strcpy(c_ibr_prdct_cd,"NFOADMID");
    strcpy(c_pool_acc,c_payin_pool_ac_adm_nse);
    strcpy(c_othr_pool_acc,c_payin_pool_nse_ac);
    d_bnk_pipo_amt_pbp= (-1) * d_bnk_pipo_amt; /** for inserting only +ve values inn pbp table **/
   }
   else
   {
    fn_userlog(c_ServiceName,"pool acount adm NSE :%s: ", c_payout_pool_nse_ac);
    c_pipo_typ='O';
    strcpy(c_ibr_prdct_cd,"NFOADMOD");
    strcpy(c_pool_acc,c_payout_pool_ac_adm_nse);
    strcpy(c_othr_pool_acc,c_payout_pool_nse_ac);
    d_bnk_pipo_amt_pbp= d_bnk_pipo_amt;
   }
  }
  else
  {
   strcpy(c_prdct_cd,"ADB");
   /* strcpy(c_ibr_prdct_cd,"BFO"); */

   if(d_payin_amt!=0)
   {
    c_pipo_typ='I';
    strcpy(c_ibr_prdct_cd,"BFOADMID");
    strcpy(c_pool_acc,c_payin_pool_ac_adm_bse);
    strcpy(c_othr_pool_acc,c_payin_pool_nse_ac);
    d_bnk_pipo_amt_pbp= (-1) * d_bnk_pipo_amt; /** for inserting only +ve values inn pbp table **/
   }
   else
   {
    c_pipo_typ='O';
    strcpy(c_ibr_prdct_cd,"BFOADMOD");
    strcpy(c_pool_acc,c_payout_pool_ac_adm_bse);
    strcpy(c_othr_pool_acc,c_payout_pool_nse_ac);
    d_bnk_pipo_amt_pbp=  d_bnk_pipo_amt;
   }
  }
 
  fn_userlog(c_ServiceName,"before pbp insert");
  fn_userlog(c_ServiceName,"product code is c_prdct_cd:%s: ", c_prdct_cd );
  fn_userlog(c_ServiceName,"run number is li_run_no:%ld: ", li_run_no );
  fn_userlog(c_ServiceName,"pool acccount is c_pool_acc:%s: ", c_pool_acc );
  rtrim(c_pool_acc);
  rtrim(c_othr_pool_acc);
  rtrim(c_ibr_prdct_cd);
  rtrim(c_prdct_cd); 
  
   EXEC SQL
        INSERT INTO PBP_PRD_BNK_PIPO
        (
          PBP_PROD_CD,
          PBP_RUN_NO,
          PBP_RUN_DATE,
          PBP_PIPO_TYP,
          PBP_AMT,
          PBP_POOL_ACC,
          PBP_DBCR_FLG,
          PBP_PRCSS_FLG,
          PBP_TRACE,
          PBP_TIMESTAMP,
          PBP_DC_DATE,
          PBP_IBR_PRDCT_CD,
          PBP_INS_DATE,
          PBP_OTH_POOL_ACC
        )
        VALUES
        (
          :c_prdct_cd,
          :li_run_no,
          to_date(:c_run_dt,'DD-Mon-YYYY'),
          :c_pipo_typ,
          :d_bnk_pipo_amt_pbp*0.01,
          :c_pool_acc,
          'N',
          'N',
          '',
          '',
          '',
          :c_ibr_prdct_cd,
          SYSDATE,
          :c_othr_pool_acc
        ); 
  
    if ( SQLCODE != 0 )
    {
     fn_errlog( c_ServiceName, "S31810",SQLMSG,c_err_msg);
     return ( FAILURE );
    }
 
  return ( SUCCESS );
 
}


/* ###############################################################################   */
/**     Function - fn_ins_adm_flr_tbl						    **/	
/* ###############################################################################   */

int fn_ins_adm_flr_tbl( char *c_ServiceName,
                    char *c_xchng_cd,
                    char *c_cln_mtch_accnt,
                    long  li_run_no,
                    char *c_run_dt,
                    char *c_bnk_accnt_no,
                    char  c_trn_typ,
                    int   i_block_cd,
                    char  c_dr_cr_flg,
                    double d_amount,
                    char  c_bank_status,
                    char  c_eba_status,
                    char  c_process_status,       
                    char  *c_reference,
                    char  *c_time,
		                char  *c_bnk_narration,
                    char  c_blk_deposit_flg,  /*** Ver 2.7 ***/
                    char  *c_src_rowid)       /*** Ver 2.7 ***/
{

  int i_trnsctn ;
  char c_err_msg[256];
  int i_returncode;
  char c_msg [ 256 ];
  char c_tag[256];

	if(DEBUG_MSG_LVL_3)
	{
  	fn_userlog(c_ServiceName,"INSIDE Failier function........Start");
  	fn_userlog(c_ServiceName,"c_xchng_cd [%s]",c_xchng_cd);
  	fn_userlog(c_ServiceName,"c_cln_mtch_accnt [%s]",c_cln_mtch_accnt);
  	fn_userlog(c_ServiceName,"li_run_no [%d]",li_run_no);
  	fn_userlog(c_ServiceName,"c_run_dt [%s]",c_run_dt);
  	fn_userlog(c_ServiceName,"c_bnk_accnt_no [%s]",c_bnk_accnt_no);
  	fn_userlog(c_ServiceName,"c_trn_typ [%c]",c_trn_typ);
  	fn_userlog(c_ServiceName,"i_block_cd [%d]",i_block_cd);
  	fn_userlog(c_ServiceName,"c_dr_cr_flg [%c]",c_dr_cr_flg);
  	fn_userlog(c_ServiceName,"d_amount [%lf]",d_amount);
  	fn_userlog(c_ServiceName,"c_bank_status [%c]",c_bank_status);
  	fn_userlog(c_ServiceName,"c_eba_status [%c]",c_eba_status);
  	fn_userlog(c_ServiceName,"c_process_status [%c]",c_process_status);
  	fn_userlog(c_ServiceName,"c_reference [%s]",c_reference);
  	fn_userlog(c_ServiceName,"c_time [%s]",c_time);
		fn_userlog(c_ServiceName,"c_bnk_narration [%s]",c_bnk_narration);
    fn_userlog(c_ServiceName,"c_blk_deposit_flg [%c]",c_blk_deposit_flg); /** Ver 2.7 **/
    fn_userlog(c_ServiceName,"c_src_rowid [%s]",c_src_rowid); /** Ver 2.7 **/
  	fn_userlog(c_ServiceName,"INSIDE Failier function........End");
  }
  /** Ver 2.7 starts **/
 
  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
   fn_errlog(c_ServiceName, "S31815",LIBMSG,c_err_msg);
   return ( FAILURE );
  } 
  /** Ver 2.7 Ends **/

  rtrim(c_src_rowid);
  
    EXEC SQL
  	INSERT INTO FBM_FO_BNK_FLR_MSG
  	(
      FBM_XCHNG_CD,
      FBM_CLM_MTCH_ACCNT,
      FBM_RUN_NO,
      FBM_RUN_DT,
      FBM_BNK_ACCNT_NMBR,
      FBM_TRNSCTN_TYP,
      FBM_BLK_CD,
      FBM_DC_FLG,
      FBM_AMT,
      FBM_BNK_STTS,
      FBM_EBA_STTS,
      FBM_STTS,
      FBM_TRACE ,
      FBM_TIMESTAMP, 
      FBM_PRDCT_CD,
      FBM_NARRATION,  /** Added in Ver 1.2 **/
      FBM_FUND_MODEL_FLG, /** Added in Ver 2.7 **/
      FBM_RMRKS           /** Added in Ver 2.7 **/
    )
    VALUES
    (
      :c_xchng_cd,
      :c_cln_mtch_accnt,
      :li_run_no,  
      to_date(:c_run_dt,'DD-Mon-YYYY'), 
      :c_bnk_accnt_no,
      :c_trn_typ,
      :i_block_cd,  
      :c_dr_cr_flg,
      :d_amount ,  
      :c_bank_status,
      :c_eba_status,
      :c_process_status,
      :c_reference ,
      decode(:c_blk_deposit_flg,'B',to_date(:c_time,'yyyymmddhh24miss'),NULL),  /** Ver 2.7 **/
      'ADM',
      :c_bnk_narration, /** Added in Ver 1.2 **/
      :c_blk_deposit_flg, /** Added in Ver 2.7 **/
      :c_src_rowid        /** Added in Ver 2.7 **/
    );

   fn_userlog(c_ServiceName, "After NO ERROR in INSERT ");

   if ( SQLCODE != 0 )
   {
      fn_errlog( c_ServiceName, "S31820",SQLMSG,c_err_msg);
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      return ( FAILURE );
   }
  
   if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
   {
    fn_errlog( c_ServiceName, "S31825",LIBMSG,c_err_msg);
    fn_userlog(c_ServiceName,"Error in commit tran for FBM insert ");
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    return ( -1 );
   } 

  return ( SUCCESS );
}



