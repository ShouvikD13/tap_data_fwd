/******************************************************************************/
/*	Program	    			:	SFO_UPD_EQOI                                          */
/*                                                                            */
/*  Input             :                                                       */
/*                                                                            */
/*  Output            :                                                       */
/*                                                                            */
/*  Description       : To updated the open intereset of an underlying        */
/*                                                                            */
/*  Log               : 1.0   21-Aug-2002   J.Raghavan                        */
/*                    : 1.1   18-Dec-2007   Vidyayini Krish                   */
/*										:	1.2		27-Jul-2010		Sandeep Patil                     */
/*                    : 1.4   28-Mar-2017   Mrinal Kishore                    */
/*																																						*/
/******************************************************************************/
/*  1.0  -  New release                                                       */
/*  1.1  -  IBM CHANGES                                                       */
/*	1.2	 -  Log Added																													*/
/*  1.4  -  fn_aborttran is added for failed update                           */
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <sqlca.h>
#include <fml32.h>
#include <fo.h>
#include <fo_fml_def.h>
#include <fo_view_def.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_log.h> /* Ver 1.1 */
#include <fn_read_debug_lvl.h> /* Ver 1.1 */

void SFO_UPD_EQOI( TPSVCINFO *rqst )
{
	char c_ServiceName[ 33];
	char c_errmsg[256];
	FBFR32 *ptr_fml_ebuf;
	int i_ch_val;
	int i_trn_val;

	EXEC SQL BEGIN DECLARE SECTION;
		char c_exch_cd [ 4 ];
		char c_stck_cd [ 8 ];
		double d_oi;
	EXEC SQL END DECLARE SECTION;

	strcpy( c_ServiceName, rqst->name );
	INITDBGLVL(c_ServiceName); 

	ptr_fml_ebuf = NULL;

	i_ch_val = fn_unpack_fmltovar ( c_ServiceName,
                                  c_errmsg,
                                  (FBFR32 *)rqst->data,
                                  3,
                        FFO_XCHNG_CD, c_exch_cd, NULL,
                        FFO_UNDRLYNG, c_stck_cd, NULL,
                        FFO_CRNT_OI, (char *)&d_oi, NULL );
	if ( i_ch_val == SYSTEM_ERROR )
	{
    fn_errlog ( c_ServiceName, "S31005", SQLMSG, c_errmsg );
		fn_pack_vartofml ( c_ServiceName, c_errmsg, &ptr_fml_ebuf, 1,
                       FFO_ERR_MSG, c_errmsg );
   	tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_ebuf, 0, 0 );
	}

	/***	Ver	1.2	Starts	***/
	fn_userlog(c_ServiceName,"Exchange Code Is :%s:",c_exch_cd);
	fn_userlog(c_ServiceName,"Underlying Is :%s:",c_stck_cd);
	fn_userlog(c_ServiceName,"Open Interest Is :%lf:",d_oi);

	/***	Ver 1.2 Ends ***/

	i_trn_val = fn_begintran ( c_ServiceName, c_errmsg );
	if ( i_trn_val == -1 )
	{
    fn_errlog ( c_ServiceName, "S31010", SQLMSG, c_errmsg );
		fn_pack_vartofml ( c_ServiceName, c_errmsg, &ptr_fml_ebuf, 1,
                       FFO_ERR_MSG, c_errmsg );
   	tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_ebuf, 0, 0 );
	}

	EXEC SQL
		UPDATE fum_fo_undrlyng_mstr
		SET fum_oi = :d_oi
		WHERE fum_xchng_cd = :c_exch_cd
		AND fum_undrlyng = :c_stck_cd;
	if ( SQLCODE != 0 )
	{
    fn_errlog ( c_ServiceName, "S31015", SQLMSG, c_errmsg );
		fn_pack_vartofml ( c_ServiceName, c_errmsg, &ptr_fml_ebuf, 1,
                       FFO_ERR_MSG, c_errmsg );
    fn_aborttran(c_ServiceName, i_trn_val, c_errmsg);         /*** ver 1.4 ****/
   	tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_ebuf, 0, 0 );
	}

	i_trn_val = fn_committran ( c_ServiceName, i_trn_val, c_errmsg );
	if ( i_trn_val != 0 )
	{
    fn_errlog ( c_ServiceName, "S31020", SQLMSG, c_errmsg );
		fn_pack_vartofml ( c_ServiceName, c_errmsg, &ptr_fml_ebuf, 1,
                       FFO_ERR_MSG, c_errmsg );
   	tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_ebuf, 0, 0 );
	}

 	tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )NULL, 0, 0 ); 
}
