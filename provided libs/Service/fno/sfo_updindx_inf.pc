/******************************************************************************/
/*	Program	    			:	SFO_UPDINDX_INF                                       */
/*                                                                            */
/*  Input             : vw_indx_qt                                            */
/*                                                                            */
/*  Output            : Success/vw_err_msg                                    */
/*                                                                            */
/*  Description       :	To insert/update index details like index code,       */
/*                      index value, high value, open value, low value,       */
/*                      close value, percentage change, yearly high,          */
/*                      yearly low, index indicator and market                */
/*                      capitalization                                        */
/*                                                                            */
/*  Log               : 1.0   21-Sep-2001   S. Swaminathan                    */
/*  Log               : 1.1   19-Jul-2007   Shamili/Infotech									*/
/*                    : 1.2   19-Dec-2007   Sushil Sharma - IBM Migration     */
/*                                                                            */
/******************************************************************************/
/*  1.0     -  New Release                                                    */
/*  1.1     -  Blocking wrong LTQ updates for Nifty														*/
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fo.h>
#include <fo_fml_def.h>
#include <fo_view_def.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_log.h>             /*  Ver 1.2 : Added */
#include <fn_read_debug_lvl.h>  /*  Ver 1.2 : Added */

void SFO_UPDINDX_INF( TPSVCINFO *rqst )
{
	char c_ServiceName[33];
	char c_errmsg[256];
	int  i_diff;
	int  i_trnsctn;
	long li_tot_recs;

	EXEC SQL BEGIN DECLARE SECTION;
		struct vw_indx_qt *ptr_i_st_indx_qt;
		char c_date_stamp[22+1];
	EXEC SQL END DECLARE SECTION;

	struct vw_err_msg *ptr_st_err_msg;

	ptr_i_st_indx_qt = ( struct vw_indx_qt *)rqst->data;
	strcpy( c_ServiceName, rqst->name );
	INITDBGLVL(c_ServiceName);            /*  Ver 1.2 : Added   */

	ptr_st_err_msg = ( struct vw_err_msg * ) tpalloc( "VIEW32",
                                                    "vw_err_msg",
                                               sizeof( struct vw_err_msg ) );

	if ( ptr_st_err_msg == NULL )
	{
		fn_errlog( c_ServiceName, "S31005", TPMSG, c_errmsg );
		tpreturn ( TPFAIL, NO_BFR, NULL, 0 , 0 );
	}
	memset( ptr_st_err_msg, 0, sizeof( struct vw_err_msg ) );

  /*** Added for Order Routing ***/
  fn_init_ddr_val ( ptr_i_st_indx_qt->c_rout_crt );

	i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
	if ( i_trnsctn == -1 )
	{
      strcpy( ptr_st_err_msg->c_err_msg, c_errmsg );
			tpreturn ( TPFAIL, ERR_BFR, (char *)ptr_st_err_msg , 0, 0 );
	}

	switch(ptr_i_st_indx_qt->c_rqst_typ)
	{
		case UPDATE_INDX_QT_1:

				EXEC SQL
					UPDATE 	fiq_fo_indx_qt
					SET			fiq_indx_val 			= :ptr_i_st_indx_qt->l_indx_val,
									fiq_hgh_indx_val	= :ptr_i_st_indx_qt->l_high_indx_val,
									fiq_opn_indx_val	= :ptr_i_st_indx_qt->l_open_indx_val,
									fiq_low_indx_val	= :ptr_i_st_indx_qt->l_low_indx_val,
									fiq_cls_indx_val	= :ptr_i_st_indx_qt->l_close_indx_val,
									fiq_prcntg_chng		= :ptr_i_st_indx_qt->l_prcntg_chng_indx,
									fiq_yrly_hgh_val	= :ptr_i_st_indx_qt->l_indx_yrly_high_val,
									fiq_yrly_low_val	= :ptr_i_st_indx_qt->l_indx_yrly_low_val,
									fiq_indctr 				= :ptr_i_st_indx_qt->c_indx_indctr,
									fiq_mkt_cptltn		= :ptr_i_st_indx_qt->d_mkt_cptltn,
									fiq_tm_stmp				= to_date(:ptr_i_st_indx_qt->c_indx_tm_stmp,
                                      'dd-mon-yyyy hh24:mi:ss' )
					WHERE 	fiq_indx_cd = :ptr_i_st_indx_qt->c_index_cd;

				if ( SQLCODE != 0 )
				{
					fn_errlog( c_ServiceName, "S31010", SQLMSG, 
                                                ptr_st_err_msg->c_err_msg );
					fn_aborttran( c_ServiceName, i_trnsctn, c_errmsg );
					tpreturn ( TPFAIL, ERR_BFR, NULL, 0 , 0 );
				}

				EXEC SQL
					UPDATE 	ltq_trd_qt
					SET			ltq_rt 			= :ptr_i_st_indx_qt->l_indx_val,
									ltq_hgh_prc	= :ptr_i_st_indx_qt->l_high_indx_val,
									ltq_opn_prc	= :ptr_i_st_indx_qt->l_open_indx_val,
									ltq_low_prc	= :ptr_i_st_indx_qt->l_low_indx_val,
									ltq_cls_prc	= :ptr_i_st_indx_qt->l_close_indx_val,
									ltq_prcntg_chng_pcls	= :ptr_i_st_indx_qt->l_prcntg_chng_indx,
									ltq_52_wk_hgh	= :ptr_i_st_indx_qt->l_indx_yrly_high_val,
									ltq_52_wk_lw	= :ptr_i_st_indx_qt->l_indx_yrly_low_val,
									ltq_chng_indctr 				= :ptr_i_st_indx_qt->c_indx_indctr,
									ltq_dt				= to_date(:ptr_i_st_indx_qt->c_indx_tm_stmp,
                                      'dd-mon-yyyy hh24:mi:ss' )
					WHERE 	ltq_stck_cd = :ptr_i_st_indx_qt->c_index_cd;

				if ( SQLCODE != 0 )
				{
					fn_errlog( c_ServiceName, "S31015", SQLMSG, 
                                                ptr_st_err_msg->c_err_msg );
					fn_aborttran( c_ServiceName, i_trnsctn, c_errmsg );
					tpreturn ( TPFAIL, ERR_BFR, NULL, 0 , 0 );
				}
			break;

		case UPDATE_INDX_QT_2:

				  EXEC SQL
					UPDATE 	fiq_fo_indx_qt
					SET			fiq_indx_val 			= :ptr_i_st_indx_qt->l_indx_val,
									fiq_tm_stmp				= to_date(:ptr_i_st_indx_qt->c_indx_tm_stmp,
                                      'dd-mon-yyyy hh24:mi:ss' )
					WHERE 	fiq_indx_cd = :ptr_i_st_indx_qt->c_index_cd;

				if ( SQLCODE != 0 )
				{
					fn_errlog( c_ServiceName, "S31020", SQLMSG, 
                                                ptr_st_err_msg->c_err_msg );
					fn_aborttran( c_ServiceName, i_trnsctn, c_errmsg );
					tpreturn ( TPFAIL, ERR_BFR, NULL, 0 , 0 );
				}
/******************************************************************************************/
/*** V1.1 Commented on 19th July 2007 to prevent wrong updates of NIFTY and Other Indexes.*/
/******************************************************************************************/
/*
				EXEC SQL
					UPDATE 	ltq_trd_qt
					SET			ltq_rt 			= :ptr_i_st_indx_qt->l_indx_val,
									ltq_dt			= to_date(:ptr_i_st_indx_qt->c_indx_tm_stmp,
                                      'dd-mon-yyyy hh24:mi:ss' )
					WHERE 	ltq_stck_cd = :ptr_i_st_indx_qt->c_index_cd;

				if ( SQLCODE != 0 )
				{
					fn_errlog( c_ServiceName, "S31025", SQLMSG, 
                                                ptr_st_err_msg->c_err_msg );
					fn_aborttran( c_ServiceName, i_trnsctn, c_errmsg );
					tpreturn ( TPFAIL, ERR_BFR, NULL, 0 , 0 );
				}
*/
			break;

		default:
					fn_errlog( c_ServiceName, "S31030", "Protocol error", 
                                                ptr_st_err_msg->c_err_msg );
					fn_aborttran( c_ServiceName, i_trnsctn, c_errmsg );
					tpreturn ( TPFAIL, ERR_BFR, NULL, 0 , 0 );
			break;
	}

	if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
	{
    strcpy( ptr_st_err_msg->c_err_msg, c_errmsg );
		tpreturn ( TPFAIL, ERR_BFR, (char *)ptr_st_err_msg ,0 , 0 );
	}
	tpfree  ( ( char * ) ptr_st_err_msg );
	tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )ptr_i_st_indx_qt, 0, 0 );

}

