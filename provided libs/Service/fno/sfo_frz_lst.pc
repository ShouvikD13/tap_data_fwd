/******************************************************************************/
/*	Program	    			:	SFO_FRZ_LST                                           */
/*                                                                            */
/*  Input             : vw_xchngbook                                          */
/*                                                                            */
/*  Output            : vw_xchngbook                                          */
/*                      vw_err_msg                                            */
/*                                                                            */
/*  Description       : To get the freeze order details from the              */
/*                      Exchange Book for the                                 */
/*                      given input Exchange Code, Pipe ID                    */
/*                                                                            */
/*  Log               : 1.0   19-Aug-2002   J.Raghavan                        */
/*  Log               : 1.1   09-Jan-2008   Smitha Nuti                       */
/*                                                                            */
/******************************************************************************/
/*  1.0  -  New release                                                       */
/*  1.1  -  IBM Changes 																											*/
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <sqlca.h>
#include <fml32.h>
#include <fo.h>
#include <fo_fml_def.h>
#include <fo_view_def.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fml_rout.h> /* Ver 1.1 */
#include <string.h> 	/* Ver 1.1 */
#include <errno.h> 		/* Ver 1.1 */
#include <fn_log.h> 	/* Ver 1.1 */
#include <fn_read_debug_lvl.h>  /*  Ver 1.1 : Added */

void SFO_FRZ_LST( TPSVCINFO *rqst )
{
	char c_ServiceName[ 33];
	char c_errmsg[256];
	char c_msg[256];
	FBFR32 *ptr_fml_obuf;
	FBFR32 *ptr_fml_ebuf;
	int i_rec;
	int i_ch_val;

	EXEC SQL BEGIN DECLARE SECTION;
		struct vw_xchngbook st_xchngbook;
		short	i_qt_tm;
		short	i_frwrd_tm;
		short	i_rms_prcs_flg;
		short	i_ors_msg_typ;
		short	i_ack_tm;
		short	i_xchng_rmrks;
		short	i_xchng_can_qty;
		varchar c_rmrks [ 256 ];
		char c_ordr_stts;
		char c_ack_nmbr [ 17 ];
	EXEC SQL END DECLARE SECTION;

	strcpy( c_ServiceName, rqst->name );
	ptr_fml_ebuf = NULL;

	INITDBGLVL(c_ServiceName);            /*  Ver 1.1 : Added   */
	i_ch_val = fn_unpack_fmltovar ( c_ServiceName,
                                  c_errmsg,
                                  (FBFR32 *)rqst->data,
                                  2,
                        FFO_XCHNG_CD, st_xchngbook.c_xchng_cd, NULL,
                        FFO_PIPE_ID, st_xchngbook.c_pipe_id, NULL );
	if ( i_ch_val == SYSTEM_ERROR )
	{
    fn_errlog ( c_ServiceName, "S31005", SQLMSG, c_errmsg );
		fn_pack_vartofml ( c_ServiceName, c_errmsg, &ptr_fml_ebuf, 1,
                       FFO_ERR_MSG, c_errmsg );
   	tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_ebuf, 0, 0 );
	}

  /*** Added for Order Routing ***/
  fn_init_ddr_val ( st_xchngbook.c_rout_crt );

	ptr_fml_obuf = NULL;
	i_rec = 0;

	c_ordr_stts = FREEZED; 
	EXEC SQL
		DECLARE sql_ord_ref_lst CURSOR FOR
			SELECT fod_ordr_rfrnc,
             fod_mdfctn_cntr,
             fod_ack_nmbr
			FROM fod_fo_ordr_dtls
			WHERE		fod_xchng_cd	= :st_xchngbook.c_xchng_cd
			AND			fod_pipe_id		=	:st_xchngbook.c_pipe_id
			AND			fod_ordr_stts	=	:c_ordr_stts;

	EXEC SQL
		OPEN sql_ord_ref_lst;
	if ( SQLCODE != 0 )
	{
    fn_errlog ( c_ServiceName, "S31010", SQLMSG, c_errmsg );
		fn_pack_vartofml ( c_ServiceName, c_errmsg, &ptr_fml_ebuf, 1,
                       FFO_ERR_MSG, c_errmsg );
   	tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_ebuf, 0, 0 );
	}

	EXEC SQL
		FETCH sql_ord_ref_lst
		INTO :st_xchngbook.c_ordr_rfrnc,
		     :st_xchngbook.l_mdfctn_cntr,
		     :c_ack_nmbr;
	if ( SQLCODE !=0 && SQLCODE != NO_DATA_FOUND )
	{
    fn_errlog ( c_ServiceName, "S31015", SQLMSG, c_errmsg );
		fn_pack_vartofml ( c_ServiceName, c_errmsg, &ptr_fml_ebuf, 1,
                       FFO_ERR_MSG, c_errmsg );
   	tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_ebuf, 0, 0 );
	}

	while ( SQLCODE != NO_DATA_FOUND )
	{
		rtrim ( c_ack_nmbr );

		if( DEBUG_MSG_LVL_3 )		/* Ver 1.1 */
		{
			fn_userlog ( c_ServiceName, "Freeze list |%s|-|%ld|-|%s|",
             st_xchngbook.c_ordr_rfrnc, 
             st_xchngbook.l_mdfctn_cntr, c_ack_nmbr );
		}
		EXEC SQL
				SELECT 	fxb_ordr_rfrnc,
								fxb_lmt_mrkt_sl_flg,
								fxb_dsclsd_qty,
								fxb_ordr_tot_qty,
								fxb_lmt_rt,
								fxb_stp_lss_tgr,
	              fxb_mdfctn_cntr,
								to_char( fxb_ordr_valid_dt, 'dd-mon-yyyy' ),
								fxb_ordr_type,
								fxb_sprd_ord_ind,
								fxb_rqst_typ,
								fxb_quote,
								to_char( fxb_qt_tm, 'dd-mon-yyyy hh24:mi:ss' ),
								to_char ( fxb_rqst_tm, 'dd-mon-yyyy hh24:mi:ss' ),
								to_char ( fxb_frwd_tm, 'dd-mon-yyyy hh24:mi:ss' ),
								fxb_plcd_stts,
								fxb_rms_prcsd_flg,
								fxb_ors_msg_typ,
								to_char ( fxb_ack_tm, 'dd-mon-yyyy hh24:mi:ss' ),
								fxb_xchng_rmrks,
								fxb_ex_ordr_typ,
								fxb_xchng_cncld_qty,
								fxb_spl_flag
				INTO 		:st_xchngbook.c_ordr_rfrnc,
								:st_xchngbook.c_slm_flg,
								:st_xchngbook.l_dsclsd_qty,
								:st_xchngbook.l_ord_tot_qty,
								:st_xchngbook.l_ord_lmt_rt,
								:st_xchngbook.l_stp_lss_tgr,
								:st_xchngbook.l_mdfctn_cntr,
								:st_xchngbook.c_valid_dt,
								:st_xchngbook.c_ord_typ,
								:st_xchngbook.c_sprd_ord_ind,
								:st_xchngbook.c_req_typ,
								:st_xchngbook.l_quote,
								:st_xchngbook.c_qt_tm:i_qt_tm,
								:st_xchngbook.c_rqst_tm,
								:st_xchngbook.c_frwrd_tm:i_frwrd_tm,
								:st_xchngbook.c_plcd_stts,
								:st_xchngbook.c_rms_prcsd_flg:i_rms_prcs_flg,
								:st_xchngbook.l_ors_msg_typ:i_ors_msg_typ,
								:st_xchngbook.c_ack_tm:i_ack_tm,
								:c_rmrks:i_xchng_rmrks,
								:st_xchngbook.c_ex_ordr_typ,
								:st_xchngbook.l_xchng_can_qty:i_xchng_can_qty,
								:st_xchngbook.c_spl_flg
				FROM	 	fxb_fo_xchng_book
				WHERE		fxb_xchng_cd	= :st_xchngbook.c_xchng_cd
				AND			fxb_pipe_id		=	:st_xchngbook.c_pipe_id
				AND			fxb_ordr_rfrnc	=	:st_xchngbook.c_ordr_rfrnc
				AND     fxb_mdfctn_cntr = :st_xchngbook.l_mdfctn_cntr;
		if ( SQLCODE != 0 )
		{
    	fn_errlog ( c_ServiceName, "S31020", SQLMSG, c_errmsg );
			tpfree ( (char *)ptr_fml_obuf );
			fn_pack_vartofml ( c_ServiceName, c_errmsg, &ptr_fml_ebuf, 1,
                         FFO_ERR_MSG, c_errmsg );
   		tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_ebuf, 0, 0 );
		}

		if ( i_xchng_rmrks == -1 )
		{
			memset ( st_xchngbook.c_xchng_rmrks, 0, 
               sizeof ( st_xchngbook.c_xchng_rmrks ) );
		}
		else
		{
			SETNULL ( c_rmrks );
			strcpy ( st_xchngbook.c_xchng_rmrks, (char *)c_rmrks.arr );
		}

		i_ch_val = fn_pack_vartofml ( c_ServiceName,
                                  c_errmsg,
                                  &ptr_fml_obuf,
                                  24,
              FFO_ORDR_RFRNC, (char *)st_xchngbook.c_ordr_rfrnc,
              FFO_LMT_MKT_SL_FLG, (char *)&st_xchngbook.c_slm_flg,
              FFO_DSCLSD_QTY, (char *)&st_xchngbook.l_dsclsd_qty,
              FFO_ORD_TOT_QTY, (char *)&st_xchngbook.l_ord_tot_qty,
              FFO_LMT_RT, (char *)&st_xchngbook.l_ord_lmt_rt,
              FFO_STP_LSS_TGR, (char *)&st_xchngbook.l_stp_lss_tgr,
              FFO_MDFCTN_CNTR, (char *)&st_xchngbook.l_mdfctn_cntr,
              FFO_ORD_VALID_DT, (char *)st_xchngbook.c_valid_dt,
              FFO_ORD_TYP, (char *)&st_xchngbook.c_ord_typ,
              FFO_SPRD_ORD_IND, (char *)&st_xchngbook.c_sprd_ord_ind,
              FFO_REQ_TYP, (char *)&st_xchngbook.c_req_typ,
              FFO_QUOTE, (char *)&st_xchngbook.l_quote,
              FFO_QT_TM, (char *)st_xchngbook.c_qt_tm,
              FFO_RQST_TM, (char *)st_xchngbook.c_rqst_tm,
              FFO_FRWD_TM, (char *)st_xchngbook.c_frwrd_tm,
              FFO_PLCD_STTS, (char *)&st_xchngbook.c_plcd_stts,
              FFO_RMS_PRCSD_FLG, (char *)&st_xchngbook.c_rms_prcsd_flg,
              FFO_ORS_MSG_TYP, (char *)&st_xchngbook.l_ors_msg_typ,
              FFO_ACK_TM, (char *)st_xchngbook.c_ack_tm,
              FFO_XCHNG_RMRKS, (char *)st_xchngbook.c_xchng_rmrks,
              FFO_EX_ORDR_TYP, (char *)&st_xchngbook.c_ex_ordr_typ,
              FFO_XCHNG_CAN_QTY, (char *)&st_xchngbook.l_xchng_can_qty,
              FFO_SPL_FLG, (char *)&st_xchngbook.c_spl_flg,
              FFO_ACK_NMBR, (char *)c_ack_nmbr );
		if ( i_ch_val == SYSTEM_ERROR )
		{
    	fn_errlog ( c_ServiceName, "S31025", LIBMSG, c_errmsg );
			fn_pack_vartofml ( c_ServiceName, c_errmsg, &ptr_fml_ebuf, 1,
                         FFO_ERR_MSG, c_errmsg );
   		tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_ebuf, 0, 0 );
		}

		i_rec = 1;

		EXEC SQL
			FETCH sql_ord_ref_lst
			INTO :st_xchngbook.c_ordr_rfrnc,
			     :st_xchngbook.l_mdfctn_cntr;
		if ( SQLCODE !=0 && SQLCODE != NO_DATA_FOUND )
		{
	    fn_errlog ( c_ServiceName, "S31030", SQLMSG, c_errmsg );
			tpfree ( (char *)ptr_fml_obuf );
			fn_pack_vartofml ( c_ServiceName, c_errmsg, &ptr_fml_ebuf, 1,
	                       FFO_ERR_MSG, c_errmsg );
	   	tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_ebuf, 0, 0 );
		}
	}

	EXEC SQL
		CLOSE sql_ord_ref_lst;
	if ( SQLCODE !=0 )
	{
    fn_errlog ( c_ServiceName, "S31035", SQLMSG, c_errmsg );
		tpfree ( (char *)ptr_fml_obuf );
		fn_pack_vartofml ( c_ServiceName, c_errmsg, &ptr_fml_ebuf, 1,
                       FFO_ERR_MSG, c_errmsg );
   	tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_ebuf, 0, 0 );
	}

	if ( i_rec == 0 )
	{
   	tpreturn ( TPSUCCESS, NO_DATA_FOUND, ( char * )NULL, 0, 0 );
	}
	else
	{
  	tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_obuf, 0, 0 ); 
	}
}
