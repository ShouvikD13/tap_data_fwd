/******************************************************************************/
/*  Program           : SFO_TCKR                                              */
/*                                                                            */
/*  Input             : FFO_XCHNG_CD                                          */
/*                      FFO_PRDCT_TYP                                         */
/*                                                                            */
/*  Output            : FFO_XCHNG_CD                                          */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_OPT_TYP                                           */
/*                      FFO_EXPRY_DT                                          */
/*                      FFO_EXER_TYP                                          */
/*                      FFO_STRK_PRC                                          */
/*                      FFO_CTGRY_INDSTK                                      */
/*                      FFO_LST_TRD_PRC                                       */
/*                      FFO_CLS_PRC                                           */
/*                                                                            */
/*  Description       : This service will get the contracts and quotes for    */
/*                      ticker                                                */
/*                                                                            */
/******************************************************************************/
/* 1.0  -  New release   J.Raghavan         22-02-2002                        */
/* 1.1	-	 IBM Migration S.K.S.							19-12-2007												*/
/* 1.2	-	 View to FML Changes  Sachin Birje	19-12-2007											*/
/******************************************************************************/
#include <stdio.h>
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fml_def.h>
#include <fo.h>
/*** #include <fo_view_def.h> ** Ver 1.2 **/
#include <fo_view_def.h>  /*** Ver 1.2 ***/
#include <fo_fml_def.h>
#include <fn_tuxlib.h>
#include <fn_log.h>             /*  Ver 1.1 : Added 	*/
#include <strings.h>         		/*  Ver 1.1 : Added 	*/
#include <fn_read_debug_lvl.h>  /*  Ver 1.1 : Added   */

void SFO_TCKR ( TPSVCINFO *rqst )
{
	FBFR32 *ptr_fml_ibuf;
  FBFR32 *ptr_fml_obuf;

	char  c_ServiceName[33];
  char  c_err_msg[256];

	int i_ch_val;

  EXEC SQL BEGIN DECLARE SECTION;
    struct vw_cntrct_qt st_cntrct_qt;
		varchar c_lst_trd_tm [ LEN_DATE ];
	EXEC SQL END DECLARE SECTION;

	struct vw_err_msg st_err_msg;

	ptr_fml_ibuf = (FBFR32 *)rqst->data;
  strcpy( c_ServiceName, rqst->name );
	INITDBGLVL(c_ServiceName);            /*  Ver 1.1 : Added   */

	i_ch_val = fn_unpack_fmltovar ( c_ServiceName,
                                  c_err_msg,
                                  ptr_fml_ibuf,
                                  3,
                      FFO_XCHNG_CD,  (char *)st_cntrct_qt.c_xchng_cd,  NULL,
                      FFO_PRDCT_TYP, (char *)&st_cntrct_qt.c_prd_typ, NULL,
                      FFO_UNDRLYNG,  (char *)st_cntrct_qt.c_undrlyng,  NULL);
	if ( i_ch_val == -1 )
	{
    fn_errlog( c_ServiceName, "S31005", LIBMSG, c_err_msg  );
    Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
	}
if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
fn_userlog(c_ServiceName, "c_xchng_cd |%s|",st_cntrct_qt.c_xchng_cd);
fn_userlog(c_ServiceName, "c_prd_typ |%c|",st_cntrct_qt.c_prd_typ);
fn_userlog(c_ServiceName, "c_undrlyng |%s|",st_cntrct_qt.c_undrlyng);
}

	if(strcmp(st_cntrct_qt.c_undrlyng, "*") == 0)
	{
		strcpy(st_cntrct_qt.c_undrlyng, "%");
	}

	EXEC SQL
		DECLARE sql_tckr_cur CURSOR FOR
		SELECT ftq_xchng_cd,
           ftq_prdct_typ,
           ftq_undrlyng,
           to_char ( ftq_expry_dt, 'dd-Mon-yyyy' ),
           ftq_exer_typ,
           ftq_opt_typ,
           NVL(ftq_strk_prc, 0 ),
           ftq_indstk,
           NVL(ftq_lst_trd_prc, 0 ),
           NVL(to_char (ftq_lst_trd_tm, 'dd-mon-yyyy hh24:mi:ss'), 'X' )
		FROM ftq_fo_trd_qt
		WHERE ftq_prdct_typ = :st_cntrct_qt.c_prd_typ
		AND   ftq_xchng_cd  = :st_cntrct_qt.c_xchng_cd
		AND   ftq_undrlyng  LIKE :st_cntrct_qt.c_undrlyng
		ORDER BY FTQ_UNDRLYNG, 
             FTQ_EXPRY_DT,
             FTQ_OPT_TYP,
             FTQ_EXER_TYP,
             FTQ_STRK_PRC;

	EXEC SQL
		OPEN sql_tckr_cur;
	if ( SQLCODE != 0 )
	{
    fn_errlog( c_ServiceName, "S31010", SQLMSG, c_err_msg  );
    Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
	}

	EXEC SQL
		FETCH sql_tckr_cur
		INTO :st_cntrct_qt.c_xchng_cd,
         :st_cntrct_qt.c_prd_typ,
         :st_cntrct_qt.c_undrlyng,
         :st_cntrct_qt.c_expry_dt,
         :st_cntrct_qt.c_exrc_typ,
         :st_cntrct_qt.c_opt_typ,
         :st_cntrct_qt.l_strike_prc,
         :st_cntrct_qt.c_ctgry_indstk,
         :st_cntrct_qt.l_lst_trdd_prc,
         :c_lst_trd_tm;
	if ( SQLCODE != 0 )
	{
		if ( SQLCODE != NO_DATA_FOUND )
		{
    	fn_errlog( c_ServiceName, "S31015", SQLMSG, c_err_msg  );
			EXEC SQL
				CLOSE sql_tckr_cur;
    	Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
		}
	}

	ptr_fml_obuf = NULL;
	while ( SQLCODE != NO_DATA_FOUND )
	{
		SETNULL ( c_lst_trd_tm );
		strcpy ( st_cntrct_qt.c_lst_trdd_time, (char *)c_lst_trd_tm.arr );

		i_ch_val = fn_pack_vartofml ( c_ServiceName,
                                  c_err_msg,
                                  &ptr_fml_obuf,
                                  10,
       FFO_XCHNG_CD,      (char *)st_cntrct_qt.c_xchng_cd,
       FFO_PRDCT_TYP,     (char *)&st_cntrct_qt.c_prd_typ,
       FFO_UNDRLYNG,      st_cntrct_qt.c_undrlyng,
       FFO_EXPRY_DT,      st_cntrct_qt.c_expry_dt,
       FFO_EXER_TYP,      (char *)&st_cntrct_qt.c_exrc_typ,
       FFO_OPT_TYP,       (char *)&st_cntrct_qt.c_opt_typ,
       FFO_STRK_PRC,      (char *)&st_cntrct_qt.l_strike_prc,
       FFO_CTGRY_INDSTK,  (char *)&st_cntrct_qt.c_ctgry_indstk,
       FFO_LST_TRD_PRC,   (char *)&st_cntrct_qt.l_lst_trdd_prc,
       FFO_LST_TRD_TM,    st_cntrct_qt.c_lst_trdd_time
                                 );
		if ( i_ch_val == -1 )
		{
    	fn_errlog( c_ServiceName, "S31020", LIBMSG, c_err_msg  );
			EXEC SQL
				CLOSE sql_tckr_cur;
    	Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
		}

		EXEC SQL
			FETCH sql_tckr_cur
			INTO :st_cntrct_qt.c_xchng_cd,
	         :st_cntrct_qt.c_prd_typ,
	         :st_cntrct_qt.c_undrlyng,
	         :st_cntrct_qt.c_expry_dt,
	         :st_cntrct_qt.c_exrc_typ,
	         :st_cntrct_qt.c_opt_typ,
	         :st_cntrct_qt.l_strike_prc,
	         :st_cntrct_qt.c_ctgry_indstk,
	         :st_cntrct_qt.l_lst_trdd_prc,
         	 :c_lst_trd_tm;
		if ( SQLCODE != 0 )
		{
			if ( SQLCODE != NO_DATA_FOUND )
			{
	    	fn_errlog( c_ServiceName, "S31025", SQLMSG, c_err_msg  );
				EXEC SQL
					CLOSE sql_tckr_cur;
				tpfree ( ( char * )ptr_fml_obuf );
	    	Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_err_msg, 0 );
	    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_ibuf, 0, 0 );
			}
		}
	}

	EXEC SQL
		CLOSE sql_tckr_cur;
	tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_obuf, 0, 0 );
}
