/******************************************************************************/
/*	Program	    			:	SFO_PRCS_EODMTM                                       */
/*                                                                            */
/*  Input             : FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_XCHNG_CD                                          */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_EXPRY_DT                                          */
/*                      FFO_EXER_TYP                                          */
/*                      FFO_CNTRCT_TAG                                        */
/*                      FFO_CTGRY_INDSTK                                      */
/*                      FFO_TRD_DT                                            */
/*                      FFO_RUN_NUM                                           */
/*                                                                            */
/*  Output            : Success / Failure                                     */
/*                                                                            */
/*  Description       : To process the records in End of Day (EOD ) MTM       */
/*                      called by the batch program                           */
/*                                                                            */
/*  Log               : Ver 1.1   AIX Migration(SKS)  - 19-Dec-2007           */
/*                    : Ver 1.2   Game Simulator Changes -Sachin - 22-Feb-2013*/
/*                    : Ver 1.3   Result_cache hint used                      */
/*                    : Ver 1.4   Contract Master and Trade Quote Table Merger*/
/* 																Changes			  															*/ 
/*                    : Ver 1.5   CR-ISEC10-156987 MarginShotfall_Communication */
/*                    : Ver 1.6   Changes for Client level lock								*/
/******************************************************************************/
/* 18-Dec-2001     Ver 1.0        Vinod Banjan      Release 1.0               */
/* 05-Mar-2015     Ver 1.3        Anand Dhopte                                */
/* 13-Aug-2015     Ver 1.4        Ritesh Deolekar                             */
/* 27-Jul-2021     Ver 1.5        Tanmay Patel                                */
/* 07-Mar-2023     Ver 1.6        Samip M																			*/
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
/*Add header files here */
/*Add header files here */
#include <fml_def.h>
/* COMMENTED IN VER TOL : TUX on LINUX (Ravindra) * #include <fo_view_def.h> */
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_tuxlib.h>
#include <fo.h>
#include <fn_ddr.h>
#include <fn_log.h>             /*  Ver 1.1 : Added 	*/
#include <fn_session.h>         /*  Ver 1.1 : Added 	*/
#include <fn_read_debug_lvl.h>  /*  Ver 1.1 : Added   */
#include <fn_pos.h>             /*  Ver 1.2 : Added   */

void SFO_PRCS_EODMTM( TPSVCINFO *rqst )
{
  FBFR32 *ptr_fml_Ibuf;

  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];
  int i_returncode;
  int i_ip_len;
  int i_op_len;
  int i_trnsctn;

  char c_tag [ 256 ];
  char c_msg [ 256 ];
  char c_run_mode ='N'; /** Ver 1.5 **/
  
  /*** Ver 1.2 ****/
  char c_program_nm[33];
  char c_xchng_cd_tmp[4];
  char c_match_id[11];
  char c_error_txt[256];

  MEMSET(c_program_nm);
  MEMSET(c_xchng_cd_tmp);
  MEMSET(c_match_id);
  MEMSET(c_error_txt);
  /*** Ver 1.2 ***/

  EXEC SQL BEGIN DECLARE SECTION;
  	struct vw_pstn_actn st_pstn_actn;
  	varchar   c_trd_dt[LEN_DATE];
  EXEC SQL END DECLARE SECTION;

  ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
  strcpy( c_ServiceName, rqst->name );
	INITDBGLVL(c_ServiceName);            /*  Ver 1.1 : Added   */

  strcpy(c_program_nm,"bat_eod_mtm");  /*** Ver 1.2 ***/

  i_returncode = Fvftos32( ptr_fml_Ibuf,
                         ( char * )&st_pstn_actn,
                         "vw_pstn_actn" );

  if( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  /*** Added for Order Routing ***/
  fn_init_ddr_val ( st_pstn_actn.c_rout_crt );

  i_returncode = Fget32( ptr_fml_Ibuf, FFO_TRD_DT, 0,
                                   (char *)c_trd_dt.arr, 0 );
  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31010", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
	SETLEN ( c_trd_dt );

  i_returncode = Fget32( ptr_fml_Ibuf, FFO_BAT_TAG, 0,
                                   (char *)c_tag, 0 );
  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31015", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  /*** Ver 1.5 Starts ***/
  i_returncode = Fget32( ptr_fml_Ibuf,FFO_IS_FLG, 0,(char *)&c_run_mode,0 );

  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31020", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy(c_error_txt,"System error. Contact System Support");  
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  /*** Ver 1.5 Ends ***/

  if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
    fn_userlog( c_ServiceName, "Match Account :%s:",
                                  st_pstn_actn.c_cln_mtch_accnt );
    fn_userlog( c_ServiceName, "Exchange code :%s:",
                                  st_pstn_actn.c_xchng_cd );
    fn_userlog( c_ServiceName, "Product Type  :%c:",
                                  st_pstn_actn.c_prd_typ );
    fn_userlog( c_ServiceName, "Underlyng     :%s:",
                                  st_pstn_actn.c_undrlyng );
    fn_userlog( c_ServiceName, "Expiry date   :%s:",
                                  st_pstn_actn.c_expry_dt );
    fn_userlog( c_ServiceName, "Excercise Type:%c:",
                                  st_pstn_actn.c_exrc_typ );
    fn_userlog( c_ServiceName, "Category      :%c:",
                                 st_pstn_actn.c_ctgry_indstk );
    fn_userlog( c_ServiceName, "Contract tag  :%c:",
                                 st_pstn_actn.c_cntrct_tag );
    fn_userlog( c_ServiceName, "Trade date    :%s:",
                                 c_trd_dt.arr );
    fn_userlog( c_ServiceName, "Report number :%ld:",
                                 st_pstn_actn.l_report_no );
    fn_userlog( c_ServiceName, "Run Mode :%c:",
                                 c_run_mode );   /** Ver 1.5 **/

  }
  sprintf ( c_msg, "Processing match a/c - [%s], Underlying - [%s], Expiry dt - [%s], Tag - [%c] ",
        st_pstn_actn.c_cln_mtch_accnt,
        st_pstn_actn.c_undrlyng,
        st_pstn_actn.c_expry_dt,
        st_pstn_actn.c_cntrct_tag );
  /*fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag ); */

  /** Ver 1.2 starts ****/
   strcpy(c_xchng_cd_tmp,st_pstn_actn.c_xchng_cd);
   strcpy(c_match_id,st_pstn_actn.c_cln_mtch_accnt);
  /** Ver 1.2 Ends Here ***/

  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/ 
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	/** Commented and changed below for Ver 1.6 **

  i_returncode = fn_lock_usr( c_ServiceName,
                              st_pstn_actn.c_cln_mtch_accnt ); 
	** Ver 1.6 **/

  i_returncode = fn_lock_fno( c_ServiceName,
                              st_pstn_actn.c_cln_mtch_accnt ); 
  if ( i_returncode == -1 )
  {
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
 
	/*** Commented in Ver 1.4  *** 

  EXEC SQL
    SELECT 	*+RESULT_CACHE*fcm_eba_cntrct_id,  *** result_cache added in ver 1.3 ***
						fcm_ca_lvl,
						fcm_cls_prc
		INTO		:st_pstn_actn.l_eba_cntrct_id,
						:st_pstn_actn.l_ca_lvl,
						:st_pstn_actn.l_curr_rt
		FROM		fcm_fo_cntrct_mstr
		WHERE		fcm_xchng_cd 		=	:st_pstn_actn.c_xchng_cd
		AND			fcm_prdct_typ		=	:st_pstn_actn.c_prd_typ
		AND			fcm_undrlyng		=	:st_pstn_actn.c_undrlyng
		AND			fcm_expry_dt		=	:st_pstn_actn.c_expry_dt
		AND			fcm_exer_typ		= :st_pstn_actn.c_exrc_typ
		AND			fcm_cls_prc_dt	=	to_date(:c_trd_dt,'dd-mon-yyyy');

	*** Ver 1.4 comment Ends ***/

  /*** Ver 1.5 Starts ***/
  if ( c_run_mode == 'R' )
  {
    EXEC SQL
    SELECT  ftq_eba_cntrct_id, 
            ftq_ca_lvl,
            FTQ_LST_TRD_PRC 
    INTO    :st_pstn_actn.l_eba_cntrct_id,
            :st_pstn_actn.l_ca_lvl,
            :st_pstn_actn.l_curr_rt
    FROM    ftq_fo_trd_qt
    WHERE   ftq_xchng_cd    = :st_pstn_actn.c_xchng_cd
    AND     ftq_prdct_typ   = :st_pstn_actn.c_prd_typ
    AND     ftq_undrlyng    = :st_pstn_actn.c_undrlyng
    AND     ftq_expry_dt    = :st_pstn_actn.c_expry_dt
    AND     ftq_exer_typ    = :st_pstn_actn.c_exrc_typ;
   /**  AND     ftq_cls_prc_dt  = to_date(:c_trd_dt,'dd-mon-yyyy'); **/
  }
  else
  {
  /*** Ver 1.5 Ends ***/

	  /*** Ver 1.4 Starts ***/

    EXEC SQL
    SELECT  ftq_eba_cntrct_id,  /*** result_cache is removed as now we are fetching data from Trade Quote table in ver 1.4 ***/
            ftq_ca_lvl,
            ftq_cls_prc
    INTO    :st_pstn_actn.l_eba_cntrct_id,
            :st_pstn_actn.l_ca_lvl,
            :st_pstn_actn.l_curr_rt
    FROM    ftq_fo_trd_qt
    WHERE   ftq_xchng_cd    = :st_pstn_actn.c_xchng_cd
    AND     ftq_prdct_typ   = :st_pstn_actn.c_prd_typ
    AND     ftq_undrlyng    = :st_pstn_actn.c_undrlyng
    AND     ftq_expry_dt    = :st_pstn_actn.c_expry_dt
    AND     ftq_exer_typ    = :st_pstn_actn.c_exrc_typ
    AND     ftq_cls_prc_dt  = to_date(:c_trd_dt,'dd-mon-yyyy');

  }  /** Ver 1.5 **/	
	/*** Ver 1.4 Ends ***/

  if ( SQLCODE != 0 )
  {
		if ( SQLCODE == NO_DATA_FOUND )
		{
    	fn_errlog( c_ServiceName, "B28546",DEFMSG,c_err_msg);
    	strcpy ( c_msg, "Closing price not available for the contract" );
      sprintf(c_error_txt,"Closing price not available for the contract - %s-%c-%s-%s-%s",
      st_pstn_actn.c_xchng_cd,st_pstn_actn.c_prd_typ,st_pstn_actn.c_undrlyng,st_pstn_actn.c_expry_dt,c_trd_dt.arr );/* Ver 1.2 */
		}
		else
		{
    	fn_errlog( c_ServiceName, "S31025",SQLMSG,c_err_msg);
    	strcpy ( c_msg, "System error. Contact system support" );
      strcpy(c_error_txt,"System error. Contact system support" );	/* Ver 1.2 */
		}
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
  if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
  	fn_userlog(c_ServiceName,"l_curr_rt[%ld]",st_pstn_actn.l_curr_rt);
  }

  fn_userlog(c_ServiceName,"Closing Price Is :%ld:",st_pstn_actn.l_curr_rt);

  strcpy(st_pstn_actn.c_user_id,"system");
  st_pstn_actn.l_session_id  = 0;
  st_pstn_actn.c_opt_typ = '*';
  st_pstn_actn.l_strike_prc  = 0;

  if ( c_run_mode == 'R' )  /** If condition added in Ver 1.5 **/
  st_pstn_actn.l_actn_typ = EOD_MRGN_REP;
  else 
  st_pstn_actn.l_actn_typ = EOD_MTM;

  st_pstn_actn.c_trnsctn_flw = '*';
  st_pstn_actn.l_orgnl_qty = 0;
  st_pstn_actn.l_orgnl_rt  = 0;
  st_pstn_actn.l_new_qty = 0;
  st_pstn_actn.l_new_rt  = 0;
  st_pstn_actn.l_exec_qty  = 0;
  st_pstn_actn.l_exec_rt  = 0;
  st_pstn_actn.l_fresh_qty  = 0;
  st_pstn_actn.l_cover_qty  = 0;
  st_pstn_actn.d_add_mrgn_amt = 0;
	fn_cpy_ddr(st_pstn_actn.c_rout_crt);

  i_ip_len = sizeof ( struct vw_pstn_actn );
  i_op_len = sizeof ( struct vw_pstn_actn );

  i_returncode = fn_call_svc( c_ServiceName,
                            	c_err_msg,
                              &st_pstn_actn,
                              &st_pstn_actn,
                              "vw_pstn_actn",
                              "vw_pstn_actn",
                              i_ip_len,
                              i_op_len,
                              0,
                              "SFO_UPD_FUT_POS" );

  if ( i_returncode == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
  sprintf ( c_msg, "Successfully Processed match a/c - [%s], Underlying - [%s], Expiry dt - [%s], Tag - [%c] ",
        st_pstn_actn.c_cln_mtch_accnt,
        st_pstn_actn.c_undrlyng,
        st_pstn_actn.c_expry_dt,
        st_pstn_actn.c_cntrct_tag );
  /*fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );*/

  tpreturn( TPSUCCESS, 0, (char *)ptr_fml_Ibuf, 0 , 0 );
}

