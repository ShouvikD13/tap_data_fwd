/********************************************************************************************************************
*	Service Name : sfo_gt_cpdtls.pc																																										*
*	Input : FFO_USR_ID																																																*
*					FFO_SSSN_ID																																																*
*					FFO_MTCH_ACCNT																																														*
*																																																										*
*	Version :																																																					*
*	Initial release : Sandip Tambe. 23-Jun-2015																																				*
*         ver 1.1 : Agam          27-Apr-2023                                                                       *
********************************************************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fo.h>
#include <fo_fml_def.h>
#include <fml_def.h>
#include <fn_log.h>
#include <fn_session.h>
#include <fn_read_debug_lvl.h>
#include <fo_view_def.h>
#include <fml_rout.h>

void SFO_GT_CPDTLS(TPSVCINFO *rqst)
{
	FBFR32 *ptr_fml_Ibuf;
	FBFR32 *ptr_fml_Obuf;
	char c_ServiceName [ 33 ];
	char c_mtch_accnt[10]= {'\0'};
	char c_frst_hldr_nm[90]= {'\0'};
	char c_place[90]= {'\0'};
	char c_iid_no[30]={'\0'};
	char c_rqst_no[19]={'\0'};
	char c_err_msg [ 256 ]={'\0'} ;
	char c_user_id [ 9 ];
	long li_sssn_id;
	double d_serial_no;
	long li_sssn_id_chk;
	int  i_trnsctn=0;
	int  i_cnt=0;
	int  i_err[21];
	int  i_ferr[20];
	int  i_pssprt_valid=0;
	int  i_rec_cnt;
		
	EXEC SQL INCLUDE "table/icd_info_client_dtls.h";
	EXEC SQL INCLUDE "table/uac_usr_accnts.h";

	struct vw_usr_prfl ptr_st_usr_prfl;	
	struct vw_err_msg st_err_msg;
	strcpy( c_ServiceName, "SFO_GT_CPDTLS");
	INITDBGLVL(c_ServiceName);
	memset(&ptr_st_usr_prfl,'\0',sizeof(struct vw_usr_prfl));
	ptr_fml_Ibuf = (FBFR32 *)rqst->data;
	ptr_fml_Obuf = (FBFR32*)NULL ;

	memset(c_place,'\0',sizeof(c_frst_hldr_nm));
	memset(c_frst_hldr_nm,'\0',sizeof(c_place));

	i_err [ 0 ] = Fget32(ptr_fml_Ibuf, FFO_USR_ID, 0, (char *)ptr_st_usr_prfl.c_user_id, 0);
	i_ferr[ 0 ] = Ferror32;
	i_err [ 1 ] = Fget32(ptr_fml_Ibuf,FFO_SSSN_ID,0,(char *)&ptr_st_usr_prfl.l_session_id, 0);
	i_ferr[ 1 ] = Ferror32;
	i_err [ 2 ] = Fget32(ptr_fml_Ibuf, FFO_EBA_MTCH_ACT_NO, 0, (char *)ptr_st_usr_prfl.c_cln_mtch_accnt, 0);
  i_ferr[ 2 ] = Ferror32;
	i_err [ 3 ] = Fget32(ptr_fml_Ibuf, FFO_CHANNEL, 0, (char *)c_place, 0);
  i_ferr[ 3 ] = Ferror32;
	i_err [ 4 ] = Fget32(ptr_fml_Ibuf, FFO_QUEUE_NAME, 0, (char *)c_frst_hldr_nm, 0);
  i_ferr[ 4 ] = Ferror32;

	for ( i_cnt = 0;  i_cnt <= 5; i_cnt++ )
  {
    if ( (i_err[i_cnt] == -1) && (i_ferr[i_cnt] != FNOTPRES ))
    {
      fn_userlog(c_ServiceName,"i_cnt[%ld]",i_cnt);
      fn_errlog( c_ServiceName, "S31005", Fstrerror32( i_ferr[i_cnt] ), c_err_msg  );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf,0, 0 );
    }
  }
	if(DEBUG_MSG_LVL_0)
	{
		fn_userlog(c_ServiceName,"User id is :%s:",ptr_st_usr_prfl.c_user_id);
		fn_userlog(c_ServiceName,"Match account :%s:",ptr_st_usr_prfl.c_cln_mtch_accnt);
		fn_userlog(c_ServiceName,"session Id    :%ld:",ptr_st_usr_prfl.l_session_id);
		fn_userlog(c_ServiceName,"First Holder  :%s:",c_frst_hldr_nm);
		fn_userlog(c_ServiceName,"Plac eof appl :%s:",c_place);
	}
	ptr_fml_Obuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN * 100 );

  if ( ptr_fml_Obuf == NULL )
  {
    fn_errlog( c_ServiceName, "S31010", TPMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }


  /* if ( ptr_st_usr_prfl.l_session_id != 0 )
  {
    li_sssn_id_chk = fn_chk_sssn(c_ServiceName,&ptr_st_usr_prfl,&st_err_msg);

    if(li_sssn_id_chk ==  -1)
    {
      fn_errlog(c_ServiceName,"S31015","Session Time Out.", c_err_msg);
      Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_err_msg, 0 );
		 	tpfree(( char * ) ptr_fml_Obuf); 
      tpreturn(TPFAIL,ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0);
    }
  } */
	d_serial_no =0.0;

	EXEC SQL
	SELECT count(1) 
	INTO 	 :i_rec_cnt
	FROM 	 CRD_CPCODE_RQST_DTLS
	WHERE  CRD_USER_ID=:ptr_st_usr_prfl.c_user_id
	AND  	 CRD_RQST_STTS not in ('F','Y');

	if(SQLCODE != 0)
	{
		fn_userlog(c_ServiceName,"S31100",SQLMSG,c_err_msg);
    Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_err_msg, 0 );
		tpfree(( char * ) ptr_fml_Obuf); 
    tpreturn(TPFAIL,ERR_BFR, (char *)ptr_fml_Ibuf,0, 0);
	} 
	
	if(i_rec_cnt >0)
	{
     fn_errlog(c_ServiceName,"S31020","Pending request Present.Plz Try Later.", c_err_msg);
		 sprintf(c_err_msg,"Pending request Present.Plz Try Later.");
     Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_err_msg, 0 );
		 tpfree(( char * ) ptr_fml_Obuf);
     tpreturn(TPFAIL,ERR_BFR, (char *)ptr_fml_Ibuf,0, 0); 
	}

	fn_userlog(c_ServiceName,"Now checkinhg Passport details.");

	MEMSET(sql_icd_cust_type);
	MEMSET(sql_icd_cust_nri_flg);
	MEMSET(sql_icd_nri_category_type);
	MEMSET(sql_icd_nri_base_scheme);
	MEMSET(sql_icd_nri_current_scheme);
	MEMSET(c_rqst_no);
	sql_uac_fno_allwd ='N';
	sql_uac_act_deact_flg='N';

	EXEC SQL
	SELECT ICD_SERIAL_NO,
				 ICD_CUST_TYPE,
				 ICD_CUST_NRI_FLG,
				 ICD_NRI_CATEGORY_TYPE,
				 ICD_NRI_BASE_SCHEME,
				 ICD_NRI_CURRENT_SCHEME,
				 UAC_FNO_ALLWD,
				 UAC_ACT_DEACT_FLG ,
				 to_char(sysdate,'YYYYMMDD')|| to_char(ICD_SERIAL_NO),
				 IID_NO,
				 case when IID_EXPIRY_DT >= trunc(sysdate)
							then 1
							else 0
				 end passpord_val
	INTO   :d_serial_no,
				 :sql_icd_cust_type,
				 :sql_icd_cust_nri_flg,
				 :sql_icd_nri_category_type,
				 :sql_icd_nri_base_scheme,
				 :sql_icd_nri_current_scheme,
				 :sql_uac_fno_allwd,
				 :sql_uac_act_deact_flg,
				 :c_rqst_no,
				 :c_iid_no,
				 :i_pssprt_valid
	FROM 	ICD_INFO_CLIENT_DTLS,
				UAC_USR_ACCNTS,
				IID_INFO_IDENTIFICATION_DTLS 
	WHERE ICD_SERIAL_NO = IID_SERIAL_NO
	AND   UAC_USR_ID = ICD_USER_ID
	AND   IID_TYPE = 'PASSPORT_APP_PMT'
  AND   nvl(IID_VERIFY_FLG,'N')='Y'
	AND   UAC_USR_ID = :ptr_st_usr_prfl.c_user_id
  /*	AND   UAC_CLM_MTCH_ACCNT like '751%'  commented in ver 1.1 */
  AND   UAC_CLM_MTCH_ACCNT = :ptr_st_usr_prfl.c_cln_mtch_accnt   /* added in ver 1.1 */
  AND   ICD_CUST_TYPE='NRI'    /* added in ver 1.1 */
	AND EXISTS
	(
		SELECT 1
		FROM 	ICD_INFO_CLIENT_DTLS,IAI_INFO_ACCOUNT_INFO
		WHERE ICD_SERIAL_NO=IAI_SERIAL_NO
		AND 	ICD_USER_ID =:ptr_st_usr_prfl.c_user_id
		AND 	IAI_TYPE in ('NRE_NON_PINS','NRO_NON_PINS','NRE_PINS','NRO_PINS')
		AND 	months_between(SYSDATE,IAI_BNK_ACCOUNT_OPEN_DT) >= 6
	);

	if(SQLCODE !=0  && SQLCODE != NO_DATA_FOUND )
	{
     fn_errlog(c_ServiceName,"S31025",SQLMSG,c_err_msg);
     Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		 tpfree(( char * ) ptr_fml_Obuf); 
     tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}
	if(SQLCODE == NO_DATA_FOUND)
	{
		EXEC SQL
		SELECT ICD_SERIAL_NO,
				 ICD_CUST_TYPE,
				 ICD_CUST_NRI_FLG,
				 ICD_NRI_CATEGORY_TYPE,
				 ICD_NRI_BASE_SCHEME,
				 ICD_NRI_CURRENT_SCHEME,
				 UAC_FNO_ALLWD,
				 UAC_ACT_DEACT_FLG ,
				 to_char(sysdate,'YYYYMMDD')|| to_char(ICD_SERIAL_NO),
				 IID_NO,
				 case when IID_EXPIRY_DT >= trunc(sysdate)
							then 1
							else 0
				 end passpord_val
		INTO :d_serial_no,
				 :sql_icd_cust_type,
				 :sql_icd_cust_nri_flg,
				 :sql_icd_nri_category_type,
				 :sql_icd_nri_base_scheme,
				 :sql_icd_nri_current_scheme,
				 :sql_uac_fno_allwd,
				 :sql_uac_act_deact_flg,
				 :c_rqst_no,
				 :c_iid_no,
				 :i_pssprt_valid
		FROM ICD_INFO_CLIENT_DTLS,
				 UAC_USR_ACCNTS,
				 IID_INFO_IDENTIFICATION_DTLS
		WHERE ICD_SERIAL_NO = IID_SERIAL_NO
		AND   UAC_USR_ID = ICD_USER_ID
		AND   IID_TYPE = 'PASSPORT_APP_CORR'
  	AND   nvl(IID_VERIFY_FLG,'N')='Y'
		AND   UAC_USR_ID = :ptr_st_usr_prfl.c_user_id
		/*  AND   UAC_CLM_MTCH_ACCNT like '751%'  commented in ver 1.1 */
    AND   UAC_CLM_MTCH_ACCNT = :ptr_st_usr_prfl.c_cln_mtch_accnt   /* added in ver 1.1 */
    AND   ICD_CUST_TYPE='NRI'    /* added in ver 1.1 */  
		AND EXISTS
		(
			SELECT 1
			FROM 	ICD_INFO_CLIENT_DTLS,IAI_INFO_ACCOUNT_INFO
			WHERE ICD_SERIAL_NO=IAI_SERIAL_NO
			AND 	ICD_USER_ID =:ptr_st_usr_prfl.c_user_id
			AND 	IAI_TYPE in ('NRE_NON_PINS','NRO_NON_PINS')
			AND 	months_between(SYSDATE,IAI_BNK_ACCOUNT_OPEN_DT) >= 6
		);

		if(SQLCODE !=0  && SQLCODE != NO_DATA_FOUND )
		{
     	fn_errlog(c_ServiceName,"S31030",SQLMSG,c_err_msg);
     	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		 	tpfree(( char * ) ptr_fml_Obuf); 
     	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
		if(SQLCODE == NO_DATA_FOUND)
		{
			fn_userlog(c_ServiceName,"No Valid passport details exists OR Bank Accoount less than 6 Months!!");
			sprintf(c_err_msg,"No valid passport details exists OR Bank Accoount less than 6 Months. Pls check");
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			tpfree(( char * ) ptr_fml_Obuf);
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
	}
	
	if(DEBUG_MSG_LVL_3)
	{	
		fn_userlog(c_ServiceName,"d_serial_no=:%ld",d_serial_no);
		fn_userlog(c_ServiceName,"sql_icd_cust_type=:%s",sql_icd_cust_type.arr);
		fn_userlog(c_ServiceName,"sql_icd_nri_category_type=:%s:",sql_icd_nri_category_type.arr);
		fn_userlog(c_ServiceName,"sql_uac_fno_allwd=:%c:",sql_uac_fno_allwd);
		fn_userlog(c_ServiceName,"sql_uac_act_deact_flg=:%c:",sql_uac_act_deact_flg);
		fn_userlog(c_ServiceName,"c_iid_no=:%s:",c_iid_no);
		fn_userlog(c_ServiceName,"Passport Validity=:%s:",i_pssprt_valid==1?"Valid":"Expired");
	}
	if(i_pssprt_valid == 0)
	{
     fn_errlog(c_ServiceName,"S31035","Passport Expired. Pls confirm the passport details provided.", c_err_msg);
		 sprintf(c_err_msg,"No valid passport details exists OR Bank Accoount less than 6 Months. Pls check");
     Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_err_msg, 0 );
		 tpfree(( char * ) ptr_fml_Obuf); 
     tpreturn(TPFAIL,ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0);
	}
  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
    fn_userlog (c_ServiceName,"Failed in begin transaction for CRD Insert ");
    fn_errlog ( c_ServiceName, "S31040", TPMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		tpfree(( char * ) ptr_fml_Obuf); 
    tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
  }	

	EXEC SQL
	insert into CRD_CPCODE_RQST_DTLS
	(
		CRD_USER_ID,
		CRD_SERIAL_NO,
		CRD_CUST_TYP,
		CRD_FNO_ALLWD,
		CRD_ACC_ACTV_FLG,
		CRD_PASSPORT_NO,
		CRD_PASSPORT_VILIDITY,
	  CRD_RQST_DT,
		CRD_RQST_STTS	,
		CRD_RQST_NO
	)
	values
	(
		:ptr_st_usr_prfl.c_user_id,
		:d_serial_no,
		:sql_icd_cust_type,
		:sql_uac_fno_allwd,
		:sql_uac_act_deact_flg,
		:c_iid_no,
		'Y',
		sysdate,
		'N',
		:c_rqst_no
	);
	if(SQLCODE !=0 )
	{
     fn_errlog(c_ServiceName,"S31045",SQLMSG,c_err_msg);
     Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		 tpfree(( char * ) ptr_fml_Obuf); 
     tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}
  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
     fn_userlog (c_ServiceName,"Failed in commit transaction for CRD Insert- ");
     fn_errlog ( c_ServiceName, "S31050", SQLMSG, c_err_msg);
     Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		 tpfree(( char * ) ptr_fml_Obuf); 
     tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
  }

	Fadd32( ptr_fml_Obuf,FFO_ORDR_RFRNC,c_rqst_no,0);
	fn_userlog(c_ServiceName,"Successfully placed CP code registration request.");
	tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_Obuf, 0, 0 ) ; 
}
