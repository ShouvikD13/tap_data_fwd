
/*  Program           : SFO_VWDLVR_OBL                                            */
/*                                                                                */
/*  Description :     This service will display delivery mode stock obligations   */
/*                                                                                */     
/*                                                                                */
/*  Log               : 1.0  Akash B ( 06-Apr-2021)                               */
/**********************************************************************************/


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fn_log.h>
#include <fo_fml_def.h>
#include <fn_session.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_read_debug_lvl.h>
#include <eba.h>
#include <fml_rout.h>


void SFO_VWDLVR_OBL( TPSVCINFO *rqst )
{
  char c_ServiceName[33];
  char c_cln_mtch_accnt [11];
  char c_frm_dt[12];
  char c_to_dt[12]; 
  char c_xchng_cd[4];
  char c_user_id[15];
  char c_undrlyng[7];
  char c_undrlyn[7];
  char c_expry_dt[12];
  char c_exer_typ='\0';
  char c_opt_typ='\0';
  char c_opn_flw='\0';
  char c_prdct_typ='\0';
  char c_indstk='\0';
  char c_stts_flg='\0';
  varchar c_errmsg[256];
  char c_oblg_dt[12];
  long l_dlvry_shares_Recovered=0;
  long l_dlvry_shares_Outstanding=0;

  long l_stk_prc=0;
  long l_bufferlength=0;
  double d_dlvry_prc=0;
  long l_dlvry_qty=0;
  double d_dlvry_obl_amt=0;
  double d_recoverd_val=0;
  double d_outstnd_val=0;


  int i_fml_count=0;
  int i_err[30]; 
  int i_counter=1;

  MEMSET(c_ServiceName);
  MEMSET(c_cln_mtch_accnt);
  MEMSET(c_frm_dt);
  MEMSET(c_to_dt);
  MEMSET(c_xchng_cd);
  MEMSET(c_user_id);
  MEMSET(c_errmsg);

  long l_session_id=0;

  FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;

  ptr_fml_Ibuf = (FBFR32 *)rqst->data;
  strcpy( c_ServiceName, rqst->name );
  INITDBGLVL(c_ServiceName);

  ptr_fml_Obuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN );


  i_err[0]  = Fget32(ptr_fml_Ibuf,FFO_UNDRLYNG,0,(char *)c_undrlyn,0);
  i_err[1]  = Fget32(ptr_fml_Ibuf,FFO_EBA_MTCH_ACT_NO,0,(char *)c_cln_mtch_accnt,0);
  i_err[2]  = Fget32(ptr_fml_Ibuf,FFO_FROM_DT,0,(char *)c_frm_dt,0);
  i_err[3]  = Fget32(ptr_fml_Ibuf,FFO_USR_ID,0,(char *)c_user_id,0);
  i_err[4]  = Fget32(ptr_fml_Ibuf,FFO_TO_DT,0,(char *)&c_to_dt,0);
  i_err[5]  = Fget32(ptr_fml_Ibuf,FFO_SSSN_ID,0,(char *)&l_session_id,0);
  
  for(i_fml_count=0; i_fml_count < 6; i_fml_count++)
  {
   if(i_err[i_fml_count] == -1)
   {
    fn_userlog(c_ServiceName,"value of i_fml_count is :%d:",i_fml_count);
    fn_errlog( c_ServiceName , "S31005", FMLMSG, c_errmsg.arr);
    tpfree((char *)ptr_fml_Obuf);
    Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,(char*)c_errmsg.arr,0);
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
   }
  }
  
  l_bufferlength = sizeof(c_prdct_typ)+
                   sizeof(c_indstk)+
                   sizeof(c_undrlyng)+
                   sizeof(c_expry_dt)+
                   sizeof(l_stk_prc)+
                   sizeof(c_exer_typ)+
                   sizeof(c_opt_typ)+
                   sizeof(c_opn_flw)+
                   sizeof(d_dlvry_prc)+
                   sizeof(l_dlvry_qty)+
                   sizeof(d_dlvry_obl_amt)+
                   sizeof(c_stts_flg) +
                   sizeof(l_dlvry_shares_Outstanding)+ 
                   sizeof(l_dlvry_shares_Recovered) +1024; 

                  
  rtrim(c_cln_mtch_accnt);
  rtrim(c_xchng_cd);
  rtrim(c_frm_dt);
  rtrim(c_to_dt);
  rtrim(c_undrlyn);

 if(DEBUG_MSG_LVL_3)
 {
  fn_userlog(c_ServiceName,"c_cln_mtch_accnt :%s:",c_cln_mtch_accnt);
  fn_userlog(c_ServiceName,"c_frm_dt:%s:",c_frm_dt);
  fn_userlog(c_ServiceName,"c_to_dt:%s:",c_to_dt);
  fn_userlog(c_ServiceName,"c_undrlyn :%s:",c_undrlyn);
 }
 
  if ( strcmp(c_undrlyn,"%")!= 0)
  { 
   EXEC SQL
   SELECT UPPER(:c_undrlyn)
   INTO :c_undrlyn
   FROM DUAL ;

   if( SQLCODE != 0 )
   {
    fn_userlog(c_ServiceName,"Error in Fetching Customer details from ELM Table");
    fn_errlog( c_ServiceName, "S31010", SQLMSG, c_errmsg.arr );
    tpfree((char *)ptr_fml_Obuf);
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg.arr, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
   }
  } 


  rtrim(c_undrlyn);
  if(DEBUG_MSG_LVL_3)
  {
  fn_userlog(c_ServiceName,"c_undrlyn :%s:",c_undrlyn);
  }

  EXEC SQL
   DECLARE cur_stkobldtl CURSOR FOR
   SELECT 
   FFD_OBLGN_DT Oblg_Date,
 	 NVL(FFD_UNDRLYNG,' ') Underlying,
   NVL(DECODE(FFD_BUY_AMT,0,'S','B'),0) Action,
   NVL(DECODE(FFD_BUY_VOLUME,0,FFD_SELL_VOLUME,FFD_BUY_VOLUME),0) Quantity,
   NVL(DECODE(FFD_BUY_AMT,0,FFD_SELL_AMT,FFD_BUY_AMT),0) Amount,
   NVl(FFD_SELL_QTYTIFD,0) Shares_Recovered,
   NVL(FFD_SELL_VOLUME,0) - NVl(FFD_SELL_QTYTIFD,0) Shares_Outstanding,
   DECODE(sign(NVL(FFD_BUY_PYNSUCC_AMT,0)),1,0,NVL(FFD_BUY_PYNSUCC_AMT,0)) Amount_Recovered,
   DECODE(sign(NVL(FFD_BUY_PYNSUCC_AMT,0)),1,0,NVL(FFD_TOT_PYNAMT,0) - NVL(FFD_BUY_PYNSUCC_AMT,0)) Amount_Outstanding 
   FROM FFD_FOEXG_FOBG02_DTLS 
   WHERE FFD_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
   AND   FFD_OBLGN_DT >= to_date(:c_frm_dt,'dd-mon-yyyy')
   and   FFD_OBLGN_DT <= to_date(:c_to_dt,'dd-mon-yyyy')
   and TRIM(FFD_UNDRLYNG) like :c_undrlyn
   ORDER BY FFD_OBLGN_DT asc ;

  EXEC SQL OPEN cur_stkobldtl;


  if( SQLCODE != 0 )
  {
   fn_userlog(c_ServiceName,"Error in Fetching Customer details from ELM Table");
   fn_errlog( c_ServiceName, "S31015", SQLMSG, c_errmsg.arr );
   EXEC SQL CLOSE cur_stkobldtl;
   tpfree((char *)ptr_fml_Obuf);
   Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg.arr, 0 );
   tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  while(1)
  {
   MEMSET(c_undrlyng);
   MEMSET(c_oblg_dt);
   c_opn_flw='\0';
   l_dlvry_qty=0;
   d_dlvry_obl_amt=0;
   d_recoverd_val=0;
   d_outstnd_val=0;
   l_dlvry_shares_Recovered=0;
   l_dlvry_shares_Outstanding=0;

    EXEC SQL
    FETCH cur_stkobldtl
    INTO :c_oblg_dt, 
         :c_undrlyng,
         :c_opn_flw,
         :l_dlvry_qty,
         :d_dlvry_obl_amt,
         :l_dlvry_shares_Recovered,
         :l_dlvry_shares_Outstanding,
         :d_recoverd_val,
         :d_outstnd_val; 

   
    if(( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
     fn_errlog( c_ServiceName, "S31020", SQLMSG, c_errmsg.arr );
     EXEC SQL CLOSE cur_stkobldtl ;
     tpfree((char *)ptr_fml_Obuf);
     Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg.arr, 0 );
     tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    if(SQLCODE == NO_DATA_FOUND )
    {
     fn_userlog(c_ServiceName,"All records fetched or Inside No data found for Match Account");
     EXEC SQL CLOSE cur_stkobldtl;
     break;
    } 

   if(DEBUG_MSG_LVL_3)
   { 
    fn_userlog(c_ServiceName,"Match Account :%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"From date :%s:",c_frm_dt);
    fn_userlog(c_ServiceName,"TO Date :%s:",c_to_dt);
    fn_userlog(c_ServiceName,"Underlying :%s:",c_undrlyng);
    fn_userlog(c_ServiceName,"opn pstn flw :%c:",c_opn_flw);
    fn_userlog(c_ServiceName,"Delivery qty :%ld:",l_dlvry_qty);
    fn_userlog(c_ServiceName,"Delivery obligation amount :%lf:",d_dlvry_obl_amt);
    fn_userlog(c_ServiceName,"Delivery shares Recovered:%ld:",l_dlvry_shares_Recovered); 
    fn_userlog(c_ServiceName,"Delivery shares Pending:%ld:",l_dlvry_shares_Outstanding); 
    fn_userlog(c_ServiceName,"Recovered :%lf:",d_recoverd_val);
    fn_userlog(c_ServiceName,"Outstanding :%lf:",d_outstnd_val);

    fn_userlog(c_ServiceName,"Buffer length :%ld:",l_bufferlength);
    fn_userlog(c_ServiceName,"Funused32 :%ld:",Funused32(ptr_fml_Obuf));
   }

    if(Fneeded32(1,l_bufferlength) > Funused32(ptr_fml_Obuf))
    {
     i_counter++;
     ptr_fml_Obuf=(FBFR32 *)tprealloc((char *)ptr_fml_Obuf,i_counter*l_bufferlength*5);

     if(ptr_fml_Obuf == NULL)
     {
      fn_errlog( c_ServiceName, "S31025", SQLMSG, c_errmsg.arr );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg.arr, 0 );
      tpfree((char *)ptr_fml_Obuf);
      EXEC SQL CLOSE cur_stkobldtl; 
      tpreturn(TPFAIL,0L, (char *)ptr_fml_Ibuf, 0L, 0);
     }
    }

 
    i_err[0]= Fadd32 (ptr_fml_Obuf,FFO_ORDR_FLW,( char *)&c_opn_flw,0);
    i_err[1]= Fadd32 (ptr_fml_Obuf,FFO_UNDRLYNG,( char *)c_undrlyng,0);
    i_err[2]= Fadd32 (ptr_fml_Obuf,FFO_C_OPNPSTN_QTY,( char *)&l_dlvry_qty,0);
    i_err[3]= Fadd32(ptr_fml_Obuf,FFO_PSTN_AMT_BLKD,( char *)&d_dlvry_obl_amt,0);
    i_err[4]= Fadd32(ptr_fml_Obuf,FFO_CE_BUY_MRGN,( char *)&d_recoverd_val,0);
    i_err[5]= Fadd32(ptr_fml_Obuf,FFO_CE_SELL_MRGN,( char *)&d_outstnd_val,0);
    i_err[6]= Fadd32(ptr_fml_Obuf,FFO_RCRD_DT,( char *)c_oblg_dt,0);
    i_err[7]= Fadd32(ptr_fml_Obuf,FFO_TIFP_QTY,( char *)&l_dlvry_shares_Recovered,0);
    i_err[8]= Fadd32(ptr_fml_Obuf,FFO_AVL_QTY,( char *)&l_dlvry_shares_Outstanding,0);

 
    for(i_fml_count=0; i_fml_count < 9; i_fml_count++)
    {
     if(i_err[i_fml_count] == -1)
     {
      fn_userlog(c_ServiceName,"value of i_fml_count is :%d:",i_fml_count);
      fn_errlog( c_ServiceName , "S31030", FMLMSG, c_errmsg.arr);
      tpfree((char *)ptr_fml_Obuf);
      Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,(char*)c_errmsg.arr,0);
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     }
    }
 
  } 


 tpreturn(TPSUCCESS, SUCC_BFR, (char *)ptr_fml_Obuf, 0, 0 );
}
