/******************************************************************************/
/*  Program           : SFO_PRC_DLVRCAN                                     */
/*                                                                            */
/*  Input             : FFO_XCHNG_CD                                          */
/*                      FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_CTGRY_INDSTK                                      */
/*                      FFO_CNTRCT_TAG                                        */
/*                      FFO_IMTM_RMRKS                                        */
/*                      FFO_PIPE_ID                                           */
/*                                                                            */
/*  Output            :                                                       */
/*                                                                            */
/*  Description       : This program calls the appropiate service to cancel 	*/
/*                      the order.                                     				*/
/*                                                                            */
/*  Log               :                                                       */
/*                                                                            */
/******************************************************************************/
/*  04-Jul-2018     Ver 1.0        Parag Kanojia   	Initial Release           */
/*	24-Jun-2019			Ver 1.1    Bhushan Harekar  (Rollover With Spread changes)*/
/*	06-Mar-2023			Ver 1.2    Ravi Malla  changing fn_lock_usr to fn_lock_fno*/
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
/*Add header files here */
#include <fo_view_def.h>
#include <fn_log.h>
#include <fo_fml_def.h>
#include <fn_tuxlib.h>
#include <fo.h>
#include <fn_ddr.h>
#include <fml_rout.h>
#include <fn_session.h>
#include <string.h>
#include <fn_read_debug_lvl.h>


void SFO_PRC_DLVRCAN( TPSVCINFO *rqst )
{
  FBFR32 *ptr_fml_Ibuf;

  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];
  char c_fno_dmn_nm [ 16 ];
  char c_fno_trg_nm [ 16 ];
  char c_fno_trg_dat [ 256 ];
  char c_sys_msg[4];
	char c_rqst_typ = '\0'; /** Ver 1.1 **/
	char c_oprn_typ = '\0'; /** Ver 1.1 **/
	char c_dam_trn = '\0';	/** Ver 1.1 **/

  EXEC SQL INCLUDE "table/ffp_fo_futures_pstn.h";
  EXEC SQL INCLUDE "table/fod_fo_ordr_dtls.h";
  EXEC SQL INCLUDE "table/usr_user_master.h";
  EXEC SQL INCLUDE "table/clm_clnt_mstr.h";

  int i_returncode;
  int i_trnsctn;

  long int li_cnt = 0;

  char c_tag [ 256 ];
  char c_msg [ 256 ];

	char c_dlvry_eos_flg = 'E';

	MEMSET(c_sys_msg);
  MEMSET(sql_fod_xchng_cd);
  MEMSET(sql_ffp_clm_mtch_accnt);
  MEMSET(sql_ffp_undrlyng);
  MEMSET(c_tag);
  MEMSET(sql_fod_pipe_id);
  MEMSET(sql_fod_ordr_rfrnc);
	sql_fod_prdct_typ = '\0';
	sql_ffp_indstk = '\0';
	sql_fod_spl_flag = '\0';   /** Ver 1.1 **/
	MEMSET(sql_fod_remarks);
	MEMSET(sql_ffp_expry_dt);
	MEMSET(sql_fod_channel);
	MEMSET(sql_clm_alias_name);
	MEMSET(sql_fod_usr_id);

  ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
  strcpy( c_ServiceName, rqst->name );

  INITDBGLVL(c_ServiceName);

  if (DEBUG_MSG_LVL_4)
  {
    fn_userlog(c_ServiceName, " STEP 1");
	}
	if (DEBUG_MSG_LVL_3)
  {
    fn_userlog (c_ServiceName,"Inside Physical Settlement Process Cancellation" );
  }

	i_returncode = fn_unpack_fmltovar ( c_ServiceName,
                                    c_err_msg,
                                    ptr_fml_Ibuf,
                                    11, /** Changes from 10 to 11 in Ver 1.1 **/
                                    FFO_XCHNG_CD, ( char * )sql_fod_xchng_cd, NULL,
                                    FFO_EBA_MTCH_ACT_NO, ( char * )sql_ffp_clm_mtch_accnt, NULL,
                                    FFO_PRDCT_TYP, ( char * )&sql_fod_prdct_typ, NULL,
                                    FFO_UNDRLYNG, ( char * )sql_ffp_undrlyng, NULL,
                                    FFO_CTGRY_INDSTK, ( char * )&sql_ffp_indstk, NULL,
                                    FFO_ORDR_RFRNC, (char * ) sql_fod_ordr_rfrnc,NULL,
                                    FFO_BAT_TAG, ( char * )c_tag, NULL,
                                    FFO_REC_NO, ( char * )&li_cnt, NULL,
                                    FFO_EXPRY_DT, (char * )sql_ffp_expry_dt.arr, NULL,
                                    FFO_PIPE_ID, ( char * )sql_fod_pipe_id, NULL,
																		FFO_SPL_FLG, ( char * )&sql_fod_spl_flag, NULL );	/** Ver 1.1 **/

  if( i_returncode != 0 )
  {
    fn_errlog( c_ServiceName, "S31005", LIBMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	if (DEBUG_MSG_LVL_4)
  {
  	fn_userlog(c_ServiceName, " STEP 2");
	}

  SETLEN(sql_ffp_expry_dt);

  rtrim(sql_fod_xchng_cd);
  rtrim(sql_ffp_clm_mtch_accnt);
  rtrim(sql_ffp_undrlyng);
  rtrim(c_tag);
  rtrim(sql_fod_pipe_id);
  rtrim(sql_fod_ordr_rfrnc);

	if (DEBUG_MSG_LVL_4)
  {
  	fn_userlog(c_ServiceName, " STEP 3");
	}

  /*** Added for Order Routing ***/
  fn_init_ddr_pop( sql_fod_pipe_id, TRADING_SECTION, F_CS );

  if (DEBUG_MSG_LVL_3)
  {
    fn_userlog( c_ServiceName, "Match Account :%s:",
                                  sql_ffp_clm_mtch_accnt );
    fn_userlog( c_ServiceName, "Exchange code :%s:",
                                  sql_fod_xchng_cd );
    fn_userlog( c_ServiceName, "Product Type  :%c:",
                                  sql_fod_prdct_typ );
    fn_userlog( c_ServiceName, "Underlyng     :%s:",
                                  sql_ffp_undrlyng );
    fn_userlog( c_ServiceName, "Category      :%c:",
                                  sql_ffp_indstk );
    fn_userlog( c_ServiceName, "Pipe ID :%s:",sql_fod_pipe_id);
		fn_userlog( c_ServiceName, "SPL FLAG :%c:",sql_fod_spl_flag);	/** Ver 1.1 **/
  }

	sprintf ( c_msg, "Processing match a/c - [%s], Underlying - [%s], Tag - [%s]",
        		sql_ffp_clm_mtch_accnt,
        		sql_ffp_undrlyng,
        		sql_ffp_expry_dt.arr);

	if (DEBUG_MSG_LVL_4)
  {
  	fn_userlog(c_ServiceName, " STEP 4");
	}

	if (DEBUG_MSG_LVL_3)
	{
  	fn_userlog(c_ServiceName, " c_msg :%s:",c_msg);
	}

  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog( c_ServiceName, "S31010", LIBMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  /* i_returncode = fn_lock_usr( c_ServiceName,
                              sql_ffp_clm_mtch_accnt ); commented in 1.2 */
  i_returncode = fn_lock_fno( c_ServiceName, sql_ffp_clm_mtch_accnt ); /* Added in 1.2 */
  if ( i_returncode == -1 )
  {
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	if (DEBUG_MSG_LVL_4)
  {
  	fn_userlog(c_ServiceName, " STEP 5");
	}

	strcpy((char *)sql_fod_channel.arr,"SYS");
  sql_fod_channel.len = strlen((char *)sql_fod_channel.arr);

  strcpy((char *)sql_clm_alias_name.arr,"*");
  sql_clm_alias_name.len = strlen((char *)sql_clm_alias_name.arr);

  strcpy((char *)sql_fod_usr_id.arr,"system");
  sql_fod_usr_id.len = strlen((char *)sql_fod_usr_id.arr);
  sql_usr_sssn_id = 0;

	if (DEBUG_MSG_LVL_4)
  {
  	fn_userlog(c_ServiceName, " STEP 6");
	}

	strcpy((char *)sql_fod_remarks.arr,"Physical Settlement EOS System placed Cancellation");
  sql_fod_remarks.len = strlen((char *)sql_fod_remarks.arr);
  strcpy(c_sys_msg,"EOS");

  if (DEBUG_MSG_LVL_3)
  {
    fn_userlog ( c_ServiceName,"USER ID IS :%s:",sql_fod_usr_id.arr );
    fn_userlog ( c_ServiceName,"SESSION ID IS :%ld:",sql_usr_sssn_id );
    fn_userlog ( c_ServiceName,"EXCHANGE CODE IS :%s:",sql_fod_xchng_cd );
    fn_userlog ( c_ServiceName,"MATCH ACCOUNT IS :%s:",sql_ffp_clm_mtch_accnt );
    fn_userlog ( c_ServiceName,"ORDER REFERENCE IS :%s:",sql_fod_ordr_rfrnc );
    fn_userlog ( c_ServiceName,"REMARKS IS :%s:",sql_fod_remarks.arr );
    fn_userlog ( c_ServiceName,"CHANNEL IS :%s:",sql_fod_channel.arr );
    fn_userlog ( c_ServiceName,"ALIAS IS :%s:",sql_clm_alias_name.arr );
    fn_userlog (c_ServiceName,"PIPE IS :%s:",sql_fod_pipe_id );
    fn_userlog (c_ServiceName,"SYS MSG IS :%s:",c_sys_msg );
  }

	sql_clm_span_allwd = '\0';

	EXEC SQL
		SELECT NVL(CLM_SPAN_ALLWD,'N')
		INTO   :sql_clm_span_allwd
		FROM   CLM_CLNT_MSTR
		WHERE  CLM_MTCH_ACCNT = :sql_ffp_clm_mtch_accnt;

	if( SQLCODE != 0 )
	{
		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
		fn_errlog( c_ServiceName, "S31020", SQLMSG, c_err_msg  );
		strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	if (DEBUG_MSG_LVL_3)
  {
		fn_userlog (c_ServiceName,"CLM_SPAN_ALLWD IS :%c:",sql_clm_span_allwd);
	}
	/*** Ver 1.1 Started ***/
	if(sql_fod_spl_flag == ROLLOVER_WITH_SPREAD)
	{
		fn_userlog( c_ServiceName,"Inside rollover with spread for 1st leg order :%s:",sql_fod_ordr_rfrnc);

		c_rqst_typ = CANCEL;
		c_oprn_typ = 'S';
		c_dam_trn = 'C';

    MEMSET(sql_fod_sltp_ordr_rfrnc);

		EXEC SQL
			SELECT FOD_ORDR_RFRNC 
			INTO :sql_fod_sltp_ordr_rfrnc 
			FROM FOD_FO_ORDR_DTLS
			WHERE FOD_SLTP_ORDR_RFRNC =:sql_fod_ordr_rfrnc;

		if( SQLCODE != 0 )
		{
			fn_errlog( c_ServiceName, "S31025",SQLMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

		rtrim(sql_fod_sltp_ordr_rfrnc);
		fn_userlog( c_ServiceName,"2st leg order reference :%s:",sql_fod_sltp_ordr_rfrnc);

    if( atoll(sql_fod_sltp_ordr_rfrnc) < atoll(sql_fod_ordr_rfrnc))
    {
          fn_userlog( c_ServiceName,"DESTINATION MONTH ORDER");
  tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )NULL, 0, 0 );
    }

		i_returncode = fn_call_svc_fml (	c_ServiceName,
																		 	c_err_msg,
																		 	"SFO_PLC_ROLLORD",
																			0,
																			13,
																			0,
																			FFO_USR_ID,(char *)sql_fod_usr_id.arr,
																			FFO_SSSN_ID, (char *)&sql_usr_sssn_id,
																			FFO_XCHNG_CD, (char *)sql_fod_xchng_cd,
																			FFO_EBA_MTCH_ACT_NO, (char *)sql_ffp_clm_mtch_accnt,
																			FFO_OPERATION_TYP, (char *)&c_oprn_typ,
																			FFO_RQST_TYP, (char *)&c_rqst_typ,
																			FFO_ORDR_RFRNC, (char *)sql_fod_ordr_rfrnc,
                       FFO_DAM_TRNSCTN,( char *)&c_dam_trn,
																			FFO_XCHNG_RMRKS, (char *)sql_fod_remarks.arr,
																			FFO_PIPE_ID, (char *)sql_fod_pipe_id,
																			FFO_XCHNG_CD,( char *)sql_fod_xchng_cd,
																			FFO_ORDR_RFRNC,( char *)sql_fod_sltp_ordr_rfrnc,
																			FFO_DAM_TRNSCTN,( char *)&c_dam_trn);
		if(i_returncode != SUCC_BFR)
		{
		  strcpy ( c_msg, "System error. Contact system support" );
     	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
     	fn_errlog( c_ServiceName, "S31030", LIBMSG, c_err_msg  );
     	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
	}
	else
	{
	/*** Ver 1.1 Ends ***/
	if ( sql_clm_span_allwd == 'Y' )
	{

    i_returncode = fn_call_svc_fml ( c_ServiceName,
                                     c_err_msg,
                                     "SFO_SPN_CANCEL",
                                     0,
                                     11,
                                     0,
                                     FFO_USR_ID, (char *)sql_fod_usr_id.arr,
                                     FFO_SSSN_ID, (char *)&sql_usr_sssn_id,
                                     FFO_XCHNG_CD, (char *)sql_fod_xchng_cd,
                                     FFO_EBA_MTCH_ACT_NO, (char *)sql_ffp_clm_mtch_accnt,
                                     FFO_ORDR_RFRNC, (char *)sql_fod_ordr_rfrnc,
                                     FFO_XCHNG_RMRKS, (char *)sql_fod_remarks.arr,
                                     FFO_CHANNEL, (char *)sql_fod_channel.arr,
                                     FFO_ALIAS,(char *)sql_clm_alias_name.arr,
                                     FFO_PIPE_ID, (char *)sql_fod_pipe_id,
                                     FFO_SYS_MSG,(char *)c_sys_msg,
																		 FFO_BK_UBK_FLG, (char *)&c_dlvry_eos_flg);

    if ( i_returncode != SUCC_BFR )
    {
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      fn_errlog( c_ServiceName, "S31035", LIBMSG, c_err_msg  );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
    else
    {
      sprintf(c_msg, "SENT CANCELLATION REQUEST FOR [%s]",sql_fod_ordr_rfrnc);
      fn_userlog(c_ServiceName ,"SENT CANCELLATION REQUEST FOR [%s], For MTCH [%s]",sql_fod_ordr_rfrnc,sql_ffp_clm_mtch_accnt);
    }

	}
	else if ( sql_clm_span_allwd == 'N' )
	{
		if ( sql_fod_prdct_typ == 'F' )
		{

		i_returncode = fn_call_svc_fml ( c_ServiceName,
                                     c_err_msg,
                                     "SFO_CANCEL_FUT",
                                     0,
                                     11,
                                     0,
                                     FFO_USR_ID, (char *)sql_fod_usr_id.arr,
                                     FFO_SSSN_ID, (char *)&sql_usr_sssn_id,
                                     FFO_XCHNG_CD, (char *)sql_fod_xchng_cd,
                                     FFO_EBA_MTCH_ACT_NO, (char *)sql_ffp_clm_mtch_accnt,
                                     FFO_ORDR_RFRNC, (char *)sql_fod_ordr_rfrnc,
                                     FFO_XCHNG_RMRKS, (char *)sql_fod_remarks.arr,
                                     FFO_CHANNEL, (char *)sql_fod_channel.arr,
                                     FFO_ALIAS,(char *)sql_clm_alias_name.arr,
                                     FFO_PIPE_ID, (char *)sql_fod_pipe_id,
                                     FFO_SYS_MSG,(char *)c_sys_msg,
																		 FFO_BK_UBK_FLG, (char *)&c_dlvry_eos_flg);

    if ( i_returncode != SUCC_BFR )
    {
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      fn_errlog( c_ServiceName, "S31040", LIBMSG, c_err_msg  );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
		else
		{
      sprintf(c_msg, "SENT CANCELLATION REQUEST FOR [%s]",sql_fod_ordr_rfrnc);
      fn_userlog(c_ServiceName ,"SENT CANCELLATION REQUEST FOR [%s], For MTCH [%s]",sql_fod_ordr_rfrnc,sql_ffp_clm_mtch_accnt);
    }

		}
		else if( sql_fod_prdct_typ == 'O' )
		{

    i_returncode = fn_call_svc_fml ( c_ServiceName,
                                     c_err_msg,
                                     "SFO_CANCEL_OPT",
                                     0,
                                     11,
                                     0,
                                     FFO_USR_ID, (char *)sql_fod_usr_id.arr,
                                     FFO_SSSN_ID, (char *)&sql_usr_sssn_id,
                                     FFO_XCHNG_CD, (char *)sql_fod_xchng_cd,
                                     FFO_EBA_MTCH_ACT_NO, (char *)sql_ffp_clm_mtch_accnt,
                                     FFO_ORDR_RFRNC, (char *)sql_fod_ordr_rfrnc,
                                     FFO_XCHNG_RMRKS, (char *)sql_fod_remarks.arr,
                                     FFO_CHANNEL, (char *)sql_fod_channel.arr,
                                     FFO_ALIAS,(char *)sql_clm_alias_name.arr,
                                     FFO_PIPE_ID, (char *)sql_fod_pipe_id,
                                     FFO_SYS_MSG,(char *)c_sys_msg,
																		 FFO_BK_UBK_FLG, (char *)&c_dlvry_eos_flg);

    if ( i_returncode != SUCC_BFR )
    {
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      fn_errlog( c_ServiceName, "S31045", LIBMSG, c_err_msg  );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
    else
    {
      sprintf(c_msg, "SENT CANCELLATION REQUEST FOR [%s]",sql_fod_ordr_rfrnc);
      fn_userlog(c_ServiceName ,"SENT CANCELLATION REQUEST FOR [%s], For MTCH [%s]",sql_fod_ordr_rfrnc,sql_ffp_clm_mtch_accnt);
    }

		}
		else
		{
			strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      fn_errlog( c_ServiceName, "S31050", "Invalid Product Type", c_err_msg  );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
	}
	else
	{
		strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    fn_errlog( c_ServiceName, "S31055", "Invalid SPAN Flag", c_err_msg  );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}
	}/** else Ver 1.1 **/

  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    fn_errlog( c_ServiceName, "S31060", LIBMSG, c_err_msg  );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	/* To post the Trigger in Tux3 Domain Call the service SFO_FOS_TRG */
    strcpy ( c_fno_dmn_nm, "FNO" );
    strcpy ( c_fno_trg_nm, "TRG_LOOK_TAB" );
    strcpy ( c_fno_trg_dat, "TRG_LOOK_TAB" );

    i_returncode = fn_call_svc_fml ( c_ServiceName,
                                    c_err_msg,
                                    "SFO_FOS_TRG",
                                    0,
                                    4,
                                    0,
                                    FFO_DMN_NM, (char *)c_fno_dmn_nm,
                                    FFO_TRG_NM, (char *)c_fno_trg_nm,
                                    FFO_ABT_TRG_DATA, (char *)c_fno_trg_dat,
                                    FFO_ABT_FILTER, (char *)sql_fod_pipe_id);

    if ( i_returncode != SUCC_BFR )
    {
      fn_errlog( c_ServiceName, "S31065", LIBMSG, c_err_msg  );
    }

  tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )NULL, 0, 0 );
}



