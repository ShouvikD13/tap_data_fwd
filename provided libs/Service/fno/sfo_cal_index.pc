/******************************************************************************/
/*	Program	    			:	sfo_cal_index                                         */
/*  Description       : This service calculates the index price based 				*/
/*											on the scripts selected  by client. 								  */
/*  ver 1.1   :				:	change done for CR125WTM1491													*/
/*											(change of calculation logic by manish) 							*/
/*  ver 1.2   :       : IBM changes by Vidyayini Krish  and             			*/
/*											CR125WTM1491 changes by Ranjit												*/
/*  ver 1.3   :       : View to FML CHanges - Sachin Birje              			*/
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <sqlca.h>
#include <fml32.h>
#include <fo.h>
#include <fo_fml_def.h>
/** #include <fo_view_def.h> ** Ver 1.3 **/
#include <fo_view_def.h>     /** Ver 1.3 **/
#include <fml_rout.h>          /** Ver 1.3 **/
#include <userlog.h>    
#include <Usysflds.h>
#include <fn_tuxlib.h>
#include <fn_log.h> /* Ver 1.2 */
#include <fn_session.h>		/* Ver 1.2 */
#include <fn_read_debug_lvl.h> /* Ver 1.2 */


EXEC SQL INCLUDE "table/fsc_fo_stck_cap.h";
EXEC SQL INCLUDE "table/ltq_trd_qt.h";
/*EXEC SQL INCLUDE "table/fiq_fo_indx_qt.h";		****  ver 1.2 ***/
EXEC SQL INCLUDE "table/sem_stck_map.h";


#define TOTAL_FML   3
/*#define TOTAL_STCK  100	* ver 1.2 */
#define TOTAL_STCK  50	/* ver 1.2 */
/** #define INDEX_VAL  	1000  	*on request of vishal g. *  **ver 1.2 */
struct templet
{
	char 		c_arr_stck_cd[7];
	double 	d_arr_capital ;
	double 	d_arr_price ;
	double 	d_cls_prc;			/* ver 1.2 */
	double 	d_wtg;					/* ver 1.2 */
};

/*double	fn_cal_index(struct templet *,double ,double,int); ** ver 1.2 */
void SFO_CAL_INDEX( TPSVCINFO *rqst )
{
  /************************************************
  * Declare Tuxedo specific variables             *
  ************************************************/

  FBFR32    *ptr_fml_Ibuffer;
  FBFR32    *ptr_fml_Obuffer;

  /************************************************
  * Declare Application variables                 *
  ************************************************/

	char 		c_ServiceName[ 33];
	char 		c_errmsg[256];
	char 		c_usr_id[256];
	char 		c_stck_cd[7];
	char 		c_var1;
	char 		c_var2;
	char 		c_var3;
  struct 	templet arr_stck_prc[TOTAL_STCK];
	struct 	vw_err_msg 	*ptr_st_err_msg;
	int 		i_count;
	int 		i_fml_count =0;
	int			i,j,k;
	int			i_base_index;
	int			i_mkt_cap;
	int			i_err[4];
	int 		i_returncode ;		/* ver 1.2 */
	double	d_index =0.0;
	long		l_sssn_id =0;
  double  sql_ltq_nifty = 0.0;  		/*1.1 variable to capture nifty value*/
	double  d_cls_price = 0.0;			/* ver 1.2 */
	double  d_wtg = 0.0 ;						/* ver 1.2 */
	double  d_nifty_cls_prc = 0.0;	/* ver 1.2 */
	double  d_pv_prdt = 0.0 ;				/* ver 1.2 */
	double	d_nifty_chng	= 0.0;    /* ver 1.2 */
	double	d_nifty_chng_per = 0.0;	/* ver 1.2 */
	double	d_cont	= 0.0;   				/* ver 1.2 */
	double 	d_my_nifty	=	0.0;			/* ver 1.2 */
	double  d_multiplier = 0.0;			/* ver 1.2 */

	struct vw_usr_prfl st_usr_prfl;			/* ver 1.2 */
  struct vw_err_msg st_err_msg;				/* ver 1.2 */

	ptr_fml_Ibuffer = (FBFR32 *)rqst->data;
	strcpy( c_ServiceName, rqst->name );

	INITDBGLVL(c_ServiceName); /* Ver 1.2 */

  /*** Commented in Ver 1.3 ********************************************
	i_returncode = Fvftos32( ptr_fml_Ibuffer,						* ver 1.2 *
                           (char *)&st_usr_prfl,
                           "vw_usr_prfl" );

	if ( i_returncode == -1 )
  {	
		fn_errlog ( c_ServiceName, "S31005", TPMSG, c_errmsg );
    Fadd32( ptr_fml_Obuffer, FFO_ERR_MSG, c_errmsg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuffer, 0, 0 );
	}
  ************** Ver 1.3 Ends Here **************************************/

  /***** Ver 1.3 Starts Here ******/
  i_returncode = fn_unpack_fmltovar_dflt ( c_ServiceName,
                                      c_errmsg,
                                      ptr_fml_Ibuffer,
                                      4,
                                      FFO_USR_ID,(char *)st_usr_prfl.c_user_id, "NULL",
                                      FFO_SSSN_ID,(char*)&st_usr_prfl.l_session_id, "NULL",
                                      FFO_EBA_MTCH_ACT_NO,(char*)st_usr_prfl.c_cln_mtch_accnt, "NULL",
                                      FFO_ROUT_CRT,(char*)st_usr_prfl.c_rout_crt, "***" );
  if ( i_returncode == -1 )
  {
    fn_errlog ( c_ServiceName, "S31010", TPMSG, c_errmsg );
    Fadd32( ptr_fml_Obuffer, FFO_ERR_MSG, c_errmsg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuffer, 0, 0 );
  }

  /***** Ver 1.3 Ends Here *******/

  ptr_fml_Obuffer = (FBFR32 *)tpalloc("FML32",NULL,100*1024);
	if(ptr_fml_Obuffer == NULL)
	{
		fn_errlog ( c_ServiceName, "S31015", TPMSG, c_errmsg );
    Fadd32( ptr_fml_Obuffer, FFO_ERR_MSG, c_errmsg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuffer, 0, 0 );
	}

	Finit32(ptr_fml_Obuffer, Fsizeof32(ptr_fml_Obuffer)); 
	
	
	i_err[0] = Fget32(ptr_fml_Ibuffer , FFO_USR_ID , 0, (char *)c_usr_id,0);
	i_err[1] = Fget32(ptr_fml_Ibuffer , FFO_SSSN_ID , 0, (char *)&l_sssn_id,0);
	i_err[2] = Fget32(ptr_fml_Ibuffer , FFO_XCHNG_CD , 0, (char *)sql_ltq_xchng_cd,0);
	/*i_err[3] = Fget32(ptr_fml_Ibuffer , FFO_INDX_CD , 0 ,(char *)sql_fiq_indx_cd,0);	** ver 1.2 */
		
	/* rtrim(sql_fiq_indx_cd); ver 1.2 */

	if(DEBUG_MSG_LVL_3)
	{	
		fn_userlog(c_ServiceName, "The value of FFO_USR_ID is %s",c_usr_id);
		fn_userlog(c_ServiceName, "The value of FFO_SSSN_ID is %ld",l_sssn_id);
		fn_userlog(c_ServiceName, "The value of FFO_XCHNG_CD is %s",sql_ltq_xchng_cd);
		/*fn_userlog(c_ServiceName, "The value of FFO_INDX_CD is %s",sql_fiq_indx_cd);	** ver 1.2 */
	}

	for(i=0;i<3;i++)
	{
		if(i_err[i]==-1)
		{
			fn_userlog(c_ServiceName, "Error in Fget at :%d:",i);
			fn_errlog ( c_ServiceName, "S31020", FMLMSG, c_errmsg );
			Fadd32( ptr_fml_Obuffer, FFO_ERR_MSG, c_errmsg, 0 );
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuffer, 0, 0 );
		}
	}	

	i_returncode = fn_chk_sssn( c_ServiceName, &st_usr_prfl,&st_err_msg ) ;		/* ver 1.2 */
	if ( i_returncode == -1 )
  {
    fn_errlog ( c_ServiceName, "S31025", TPMSG, c_errmsg );
    Fadd32( ptr_fml_Obuffer, FFO_ERR_MSG, c_errmsg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuffer, 0, 0 );
  }
	

	/***************************************************************/
  /* Initializing the array */
	/***************************************************************/
	
	for(i=0;i<TOTAL_STCK;i++)
	{
     arr_stck_prc[i].d_arr_capital = 0;
     arr_stck_prc[i].d_arr_price = 0;
     strcpy(arr_stck_prc[i].c_arr_stck_cd,"");
		 arr_stck_prc[i].d_cls_prc = 0.0;		/* ver 1.2 */
		 arr_stck_prc[i].d_wtg = 0.0; 			/* ver 1.2 */
		 
	}
	
	EXEC SQL
	SELECT count(*)
	INTO : i_count
	FROM FSC_FO_STCK_CAP;

	if(SQLCODE != 0)
  {
  	fn_errlog(c_ServiceName, "S31030", SQLMSG, c_errmsg);
		Fadd32( ptr_fml_Obuffer, FFO_ERR_MSG, c_errmsg, 0 );
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuffer, 0, 0 );
  }
	
	if(DEBUG_MSG_LVL_3)
	{	
		fn_userlog(c_ServiceName, "The count is %d",i_count);
	}

	/*1.1 starts commented

	EXEC SQL
		SELECT	FIQ_INDX_VAL
		FIQ_MKT_CPTLTN 
		INTO		:sql_fiq_indx_val
						:sql_fiq_mkt_cptltn  
		FROM 		FIQ_FO_INDX_QT
		WHERE	
		FIQ_INDX_CD = :sql_fiq_indx_cd ;

	1.1 comment ends */

         
	/*************** ver 1.2 ****  
	EXEC SQL
	SELECT	FIQ_INDX_VAL
	INTO		:sql_fiq_indx_val
	FROM 		FIQ_FO_INDX_QT
	WHERE	
	FIQ_INDX_CD = :sql_fiq_indx_cd ; *1.1*
		
	if(SQLCODE != 0)
  {
  	fn_errlog(c_ServiceName, "S31035", SQLMSG,c_errmsg);
		Fadd32( ptr_fml_Obuffer, FFO_ERR_MSG, c_errmsg, 0 );
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuffer, 0, 0 );
  }
  sql_fiq_indx_val = INDEX_VAL ; *On request of vishal g. *

	fn_userlog(c_ServiceName, "The fiq_base_indx is %ld",sql_fiq_indx_val);
	************ver 1.2 ********/	

	/*1.1 change starts */

	/****** ver 1.2 *******
	EXEC SQL SELECT  LTQ_CLS_PRC
	INTO		:sql_ltq_nifty
	FROM		LTQ_TRD_QT
	WHERE		LTQ_XCHNG_CD	= 'NSE' and
	LTQ_STCK_CD 	= 'NIFTY';
			
	if(SQLCODE != 0)
	{
		fn_errlog(c_ServiceName, "S31040", SQLMSG,c_errmsg);
	 	Fadd32( ptr_fml_Obuffer, FFO_ERR_MSG, c_errmsg, 0 );
	 	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuffer, 0, 0 );
	}
	******** ver 1.2 ******/

	/* Get Latest Nifty Quotes ver 1.2 */	
	
	EXEC SQL 
		SELECT LTQ_RT 
		INTO :sql_ltq_nifty
		FROM LTQ_TRD_QT 
		WHERE LTQ_XCHNG_CD  = 'NSE' and
		LTQ_STCK_CD   = 'NIFTY';
	
	if(SQLCODE != 0)
  {
   	fn_errlog(c_ServiceName, "S31045", SQLMSG,c_errmsg);
   	Fadd32( ptr_fml_Obuffer, FFO_ERR_MSG, c_errmsg, 0 );
   	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuffer, 0, 0 );
  }

	/* Get Nifty close price ver 1.2 */

	EXEC SQL
  	SELECT (FUM_CLS_PRC/100.0) 
 	 	INTO :d_nifty_cls_prc
  	FROM FUM_FO_UNDRLYNG_MSTR
		WHERE FUM_UNDRLYNG = 'NIFTY'
		AND FUM_PRDCT_TYP = 'O';

	if(SQLCODE != 0)
  {
   	fn_errlog(c_ServiceName, "S31050", SQLMSG,c_errmsg);
   	Fadd32( ptr_fml_Obuffer, FFO_ERR_MSG, c_errmsg, 0 );
   	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuffer, 0, 0 );
  }
	
	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog(c_ServiceName, "The closing sql_ltq_nifty is %lf",sql_ltq_nifty);
		fn_userlog(c_ServiceName, "The nifty value from ltq table is %lf",sql_ltq_nifty);
		fn_userlog(c_ServiceName, "The nifty close price from fsc table is %lf",d_nifty_cls_prc);	
	}

	/*1.1 ends*/

 	/* EXEC SQL		********* ver 1.2 ***
   DECLARE cur_stck_cap CURSOR FOR
   SELECT  FSC_STCK_CD,
           nvl(FSC_ISSUE_CAP,0)
   FROM    FSC_FO_STCK_CAP;
	*****ver 1.2  */

	/** added in ver 1.2***/
	EXEC SQL
  	DECLARE cur_stck_cap CURSOR FOR
   	SELECT  FSC_EBA_STCK_CD,
           nvl(FSC_CLS_PRC,0),
					 nvl(FSC_WTG,0)
   	FROM    FSC_FO_STCK_CAP;

 	EXEC SQL
  OPEN cur_stck_cap;

	if(SQLCODE != 0)
 	{
  	fn_errlog(c_ServiceName, "S31055", SQLMSG,c_errmsg);
   	Fadd32( ptr_fml_Obuffer, FFO_ERR_MSG, c_errmsg, 0 );
   	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuffer, 0, 0 );
  }	

	/*	EXEC SQL
	FETCH	cur_stck_cap
	INTO	:sql_fsc_stck_cd,
				:sql_fsc_issue_cap;

	if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
	{
		fn_errlog(c_ServiceName, "S31060", SQLMSG, c_errmsg);
		EXEC SQL
		CLOSE cur_stck_cap;
		Fadd32( ptr_fml_Obuffer, FFO_ERR_MSG, c_errmsg, 0 );
		tpreturn(TPFAIL, 0L, (char *)ptr_fml_Obuffer, 0, 0 );
	}
	*/

 	/*i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );*/                  
			
	for(i=0;i<i_count ;i++)		/*** ranjit **/
	{
	
		/*EXEC SQL		******* ver 1.2 *****
  	FETCH cur_stck_cap
    INTO  :sql_fsc_stck_cd,
          :sql_fsc_issue_cap;	*****/

		/** added in ver 1.2 ****/
		EXEC SQL
		FETCH cur_stck_cap	
		INTO :sql_fsc_eba_stck_cd,
				 :d_cls_price,
				 :d_wtg;
		
    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
    	fn_errlog(c_ServiceName, "S31065", SQLMSG, c_errmsg);
      EXEC SQL
      	CLOSE cur_stck_cap;
      break;
    }	
		if ( SQLCODE == NO_DATA_FOUND )	
		{
			fn_userlog(c_ServiceName,"Inside No Data Found ....");
			EXEC SQL
      CLOSE cur_stck_cap;
      break;
		}
		
		if (d_cls_price == 0 || d_wtg == 0)
		{
			fn_userlog(c_ServiceName,"File not uploaded properly...");
			fn_errlog(c_ServiceName, "S31070", SQLMSG, c_errmsg);
			EXEC SQL
      CLOSE cur_stck_cap;
     	Fadd32( ptr_fml_Obuffer, FFO_ERR_MSG, c_errmsg, 0 );
    	tpreturn(TPFAIL, 0L, (char *)ptr_fml_Obuffer, 0, 0 ); 
		}
		/*SETNULL(sql_fsc_stck_cd);	ver 1.2 **
		rtrim((char *)sql_fsc_stck_cd.arr);
		** ver 1.2 */
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName,"Processing %dth no of record in for loop",i+1);
			fn_userlog(c_ServiceName,"The value of sql_fsc_stck_cd is :%s:",sql_fsc_eba_stck_cd);
			fn_userlog(c_ServiceName,"The value of sql_fsc_issue_cap is :%lf:",sql_fsc_issue_cap);
		}
		
		/*** commented in ver 1.2 ********	
		c_var3 = sql_fsc_stck_cd.arr[1] ;
		if(c_var3 == '&')
		{
			c_var1 = sql_fsc_stck_cd.arr[0];
			c_var2 = sql_fsc_stck_cd.arr[2];
			EXEC SQL
			SELECT rtrim(SEM_STCK_CD)
			INTO  :sql_sem_stck_cd
			FROM SEM_STCK_MAP
			WHERE
			SEM_ENTTY = 1 and
			SEM_MAP_VL = :c_var1||'&'||:c_var2 ;
			
			if(SQLCODE != 0)
     	{
         fn_errlog(c_ServiceName, "S31075", SQLMSG, c_errmsg);
         EXEC SQL
         CLOSE cur_stck_cap;
         break;
     	}
		}
		else
		{
			EXEC SQL
			SELECT rtrim(SEM_STCK_CD)
			INTO	:sql_sem_stck_cd
			FROM SEM_STCK_MAP
			WHERE
			SEM_ENTTY = 1 and
			SEM_MAP_VL = :sql_fsc_stck_cd;
			if(SQLCODE != 0)
			{
				fn_errlog(c_ServiceName, "S31080", SQLMSG, c_errmsg);
				EXEC SQL
				CLOSE cur_stck_cap;
				break;	
			}
		}
		fn_userlog(c_ServiceName, "The value of sql_sem_stck_cd is :%s:",sql_sem_stck_cd);


		EXEC SQL
		SELECT 	LTQ_RT
		INTO		:sql_ltq_rt
		FROM		LTQ_TRD_QT
		WHERE		LTQ_XCHNG_CD	= 'NSE' and
		LTQ_STCK_CD 	= :sql_sem_stck_cd
		and rownum < 2 ; *This has to be removed when data is perfect*
		******* ver 1.2 ********/

		/* Get the latest quotes of the stocks */
		EXEC SQL
    SELECT  LTQ_RT
    INTO    :sql_ltq_rt
    FROM    LTQ_TRD_QT
    WHERE   LTQ_XCHNG_CD  = 'NSE' and
    LTQ_STCK_CD   = :sql_fsc_eba_stck_cd;

		if(SQLCODE != 0)
		{
			fn_errlog(c_ServiceName, "S31085", SQLMSG,c_errmsg);
			EXEC SQL
			CLOSE cur_stck_cap;
			break;	
		}

		/**********************************/
		/*Inserting values into structure*/
		/**********************************/

		/* strcpy(arr_stck_prc[i].arr_stck_cd , sql_sem_stck_cd); **** ver 1.2 **/
		strcpy(arr_stck_prc[i].c_arr_stck_cd ,sql_fsc_eba_stck_cd);		/* ver	1.2 */
		arr_stck_prc[i].d_arr_capital = sql_fsc_issue_cap;
		arr_stck_prc[i].d_arr_price = sql_ltq_rt;
		arr_stck_prc[i].d_cls_prc = d_cls_price;		/* ver 1.2 */
		arr_stck_prc[i].d_wtg	=	d_wtg;							/* ver 1.2 */
/********************************************************************/
/********************************************************************/
		/*Fadd32(ptr_fml_Obuffer,FFO_STCK_CD,(char *)sql_sem_stck_cd,0); ** ver 1.2 */
		Fadd32(ptr_fml_Obuffer,FFO_STCK_CD,(char *)sql_fsc_eba_stck_cd,0);	/* ver 1.2 */
		Fadd32(ptr_fml_Obuffer,FFO_STCK_PRICE,(char *)&sql_ltq_rt,0);
/********************************************************************/
/********************************************************************/

		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName,"sem_stck_cd into structure :%s:",arr_stck_prc[i].c_arr_stck_cd);
			fn_userlog(c_ServiceName, "fsc_issue_cap is %lf",arr_stck_prc[i].d_arr_capital);
			fn_userlog(c_ServiceName, "sql_ltq_rt is %lf",arr_stck_prc[i].d_arr_price);
			fn_userlog(c_ServiceName, "close price is :%lf:",arr_stck_prc[i].d_cls_prc);		/* ver 1.2 */
			fn_userlog(c_ServiceName, "weightage is   :%lf:",arr_stck_prc[i].d_wtg);				/* ver 1.2 */
		}
		
		/************	ver 1.2 ****
		EXEC SQL
			FETCH	cur_stck_cap
			INTO	:sql_fsc_stck_cd,
						:sql_fsc_issue_cap;

		if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
		{
			fn_errlog(c_ServiceName, "S31090", SQLMSG, c_errmsg);
			EXEC SQL
				CLOSE cur_stck_cap;
			break;
		}************** ver 1.2  **********/

	}/*end of for*/

	i_fml_count = Foccur32(ptr_fml_Ibuffer ,FFO_STCK_CD);

	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog(c_ServiceName, "The index before calculation  is  %lf",d_index);
		fn_userlog(c_ServiceName, "The count of records from user is %d",i_fml_count);
	}

	d_index = sql_ltq_nifty	;		/* ver  1.2 */
	d_my_nifty = 0.0 ; /* Initialize my Nifty   ver 1.2 **/

	if(i_fml_count == 0)
	{

		/*d_index = fn_cal_index(arr_stck_prc ,d_nifty_cls_prc,sql_ltq_nifty,i_fml_count); ver 1.2 */
		if(Fadd32(ptr_fml_Obuffer,FFO_INDEX,(char *)&d_index,0) == -1)
		{
			fn_userlog(c_ServiceName,"%s",FMLMSG);
		}
		tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_Obuffer,0L,0);
	}
	else if(i_fml_count > 0)
	{
		d_index = d_nifty_cls_prc ;
		/* calculate Nifty difference */
		d_nifty_chng = sql_ltq_nifty - d_nifty_cls_prc  ;
		d_nifty_chng_per = (d_nifty_chng / d_nifty_cls_prc )*100.00;
		d_multiplier = d_nifty_chng / d_nifty_chng_per ;
		
		if(DEBUG_MSG_LVL_3)
    {	
			fn_userlog(c_ServiceName,"Nifty point diff :%lf:",d_nifty_chng);
			fn_userlog(c_ServiceName,"Nifty point diff per  :%lf:",d_nifty_chng_per);
			fn_userlog(c_ServiceName,"Nifty MULT :%lf:",d_multiplier);
		}
		for(i = 0;i < i_fml_count; i++)
		{
			/* i_err[0] = Fget32(ptr_fml_Ibuffer , FFO_STCK_CD , i ,(char *)sql_sem_stck_cd,0);** ver 1.2 **/
			i_err[0] = Fget32(ptr_fml_Ibuffer , FFO_STCK_CD , i ,(char *)sql_fsc_eba_stck_cd,0);	/* ver 1.2 */
			i_err[1] = Fget32(ptr_fml_Ibuffer , FFO_STCK_PRICE , i ,(char *)&sql_ltq_rt,0);

			/* sprintf(sql_sem_stck_cd,"%-6s",sql_sem_stck_cd); ** ver 1.2 */
			for(k=0;k<2;k++)
			{
				if(i_err[k]==-1)
				{
					fn_userlog(c_ServiceName, "Error in Fget at %d ",k);
					fn_errlog ( c_ServiceName, "S31095", FMLMSG, c_errmsg );
					Fadd32( ptr_fml_Obuffer, FFO_ERR_MSG, c_errmsg, 0 );
					tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuffer, 0, 0 );
				}
			}
			if(DEBUG_MSG_LVL_3)
      {
     		fn_userlog(c_ServiceName, "The stock code inside else  is :%s:",sql_fsc_eba_stck_cd);
       	fn_userlog(c_ServiceName, "The price of stock inside else is %lf",sql_ltq_rt);
      }

			/* Copy my rate in CMP */
			for( i = 0; i< TOTAL_STCK ; i++ )
			{
				if (strncmp(arr_stck_prc[i].c_arr_stck_cd , sql_fsc_eba_stck_cd,strlen(sql_fsc_eba_stck_cd))== 0 ) 
				/*if (strcmp( arr_stck_prc[i].c_arr_stck_cd , sql_fsc_eba_stck_cd )== 0 ) */
				{
					fn_userlog(c_ServiceName," in srcp cmp......:%d:",strlen(sql_fsc_eba_stck_cd));
					arr_stck_prc[i].d_arr_price = sql_ltq_rt;
					break;
				}
			}
		}	
		for(i =0 ; i < TOTAL_STCK ;i++ )
		{
			/** calculate my Nifty ***/
			/* calculate price variation  product */
     	/* product = (current price - close price )close price * 100 */

     	/*d_pv_prdt = ((sql_ltq_rt - arr_stck_prc[i].cls_prc)/arr_stck_prc[i].cls_prc)*100; */
			d_pv_prdt = ((arr_stck_prc[i].d_arr_price - arr_stck_prc[i].d_cls_prc )/arr_stck_prc[i].d_cls_prc)*100;  

     	d_cont = ( d_pv_prdt * arr_stck_prc[i].d_wtg )* d_multiplier/100.00;

			d_my_nifty = d_my_nifty + d_cont ;				

			if(DEBUG_MSG_LVL_3)
      {
				fn_userlog(c_ServiceName,"cont :%lf:",d_cont);
        fn_userlog(c_ServiceName,"old :%lf: ,New :%lf: ,PV  :%lf: ,Prdt :%lf:",arr_stck_prc[i].d_cls_prc,
                                    arr_stck_prc[i].d_arr_price ,d_pv_prdt,d_cont);
				fn_userlog(c_ServiceName,"my_nifty :%lf:",d_my_nifty );
			}


			/** calculate my Nifty **/
	
			/** ver 1.2 **
			for(j=0 ; j <i_count ; j++)
			{
		    if(strcmp(arr_stck_prc[j].arr_stck_cd , sql_sem_stck_cd)== 0)
				{
					arr_stck_prc[j].arr_price = sql_ltq_rt;
				}
			}		*** ver 1.2 */
		}/*End of For*/
				
		/****
		for(j=0 ; j <i_count ; j++)
		{
			if(DEBUG_MSG_LVL_3)
			{
				fn_userlog(c_ServiceName,"The struct price is :%lf:",arr_stck_prc[j].arr_price);
				fn_userlog(c_ServiceName,"The struct stock is :%s:",arr_stck_prc[j].arr_stck_cd);
			}
		}
		* ver 1.2   d_index = fn_cal_index(arr_stck_prc , sql_fiq_indx_val ,sql_ltq_nifty,i_count);*1.1*
		fn_userlog(c_ServiceName, "The index before sending to ASP is %lf",d_index);
		fn_userlog(c_ServiceName,"The struct price is :%lf:",arr_stck_prc[j].arr_price);
		fn_userlog(c_ServiceName,"The struct stock is :%s:",arr_stck_prc[j].arr_stck_cd);
		************ ver 1.2 **********/

		/**Fadd32(ptr_fml_Obuffer,FFO_USER_INDEX,(char *)&d_index,0);
		tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_Obuffer,0L,0);	*** ver 1.2 **/
	}	
	fn_userlog(c_ServiceName, "Old nifty :%lf:",d_index );
	
	d_index = d_index + d_my_nifty ;

	fn_userlog(c_ServiceName, "index is :%lf:, New nifty :%lf:",d_my_nifty , d_index);
	Fadd32(ptr_fml_Obuffer,FFO_USER_INDEX,(char *)&d_index,0);
  tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_Obuffer,0L,0);
}

/*********** commented in ver 1.2 *************

* double fn_cal_index( arr_stck_prc1 , d_base_index1 ,d_nifty,i_count1) *1.1*  ver 1.2****
struct  templet arr_stck_prc1[TOTAL_STCK];
double	d_base_index1;
double d_nifty;  *1.1 replaced from existing d_base_mkt_cap1*
int	i_count1;
{
double  d_index1 = 0.0;
double  d_index = 0.0;
*double	d_cap = 0;	*
*double	d_base_mkt_cap1 =0;	*
double 	d_pv_prdt = 0.0;

int	i;

			
			for(i=0 ; i<i_count1 ;	i++)
			{
			d_cap = d_cap + (arr_stck_prc1[i].arr_capital*arr_stck_prc1[i].arr_price ) ;
 			fn_userlog("CALCULATOR" ,"d_cap cycle is :%lf:",d_cap);
			}
		
			*1.1 starts *
			fn_userlog("CALCULATOR","d_cap is :%lf:",d_cap);
			fn_userlog("CALCULATOR","Ltq price of nifty :%lf:",d_nifty); 
			fn_userlog("CALCULATOR","INDEX_VAL is :%d:", INDEX_VAL);
			fn_userlog("CALCULATOR","d_cap is :%lf:", d_cap);
			fn_userlog("CALCULATOR","d_nifty is :%lf:", d_nifty);
			d_base_mkt_cap1 = (INDEX_VAL  *  d_cap ) /  (d_nifty) ; 
			*1.1 base capitalization=(base index*market cap)/(nifty value)*
			fn_userlog("CALCULATOR","market capitalisation of the day :%lf:",d_base_mkt_cap1);
		*1.1 ends*
			*d_index = (d_cap*d_base_index1/d_base_mkt_cap1) ;
			fn_userlog("CALCULATOR" ,"d_cap final is :%lf:",d_cap);
			fn_userlog("CALCULATOR" ,"d_index  is :%lf:",d_index);
			fn_userlog("CALCULATOR" ,"d_base_mkt_cap1  is :%lf:",d_base_mkt_cap1);
			fn_userlog("CALCULATOR" ,"d_base_index1  is :%lf:",d_base_index1);
	
			fn_userlog("CALCULATOR" ,"Claculated index is :%lf:",d_index );
			
			return(d_index);
}

***************** ver 1.2 */

