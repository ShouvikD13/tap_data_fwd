/*********************************************************************************/
/*  Program	    			:	SFO_ADM_MRGNDTL                                			     */
/*                                                                               */
/*  Input             : FFO_XCHNG_CD                                             */
/*                      FFO_TRD_DT                                               */
/*                      FFO_EBA_MTCH_ACT_NO                                      */
/*                      FFO_RUN_NUM                                              */
/*                      FFO_BAT_TAG                                              */
/*                                                                               */
/*  Output            :                                                          */
/*                                                                               */
/*  Desription        : To compute ISEC margin required			     						     */
/*											for match act provided in i/p from fromt end only        */
/*                                                                               */
/*  Log               :                                                          */
/*                                                                               */
/*********************************************************************************/
/*     12-MAy-2011      Ver 1.0        Nitin Save     Release 1.0	      			   */
/*     03-Feb-2012      Ver 1.1        Swati A.B     	SPAN Changes 						   */
/*     30-May-2012      Ver 1.2        Nitin Save     BSE-ADM Changes 				   */
/*     08-Feb-2013      Ver 1.3        Navina D.      SPAN FuturePLUS            */
/*     11-Feb-2014      Ver 1.4        Swati A.B 			Isce Mrgn dtls in       	 */ 
/*																										DL.net Chnges              */
/*     26-Mar-2014      Ver 1.5        Sachin Birje   FDR Module Changes         */
/*     09-Sep-2014      Ver 1.6        Samip M				View to FML Changes			   */
/*     24-Oct-2016      Ver 1.8        Kishor B.      Check Session IP PHASE_III */
/*     14-Jul-2017      Ver 1.9        Mrinal Kishore Error handling(Live Issue) */
/*     07-Aug-2017      Ver 2.0        Anand Dhopte   Logs introduced to check   */
/*                                                    for spike in response time */  
/*     12-Sep-2017			Ver 2.1				 Afzal K.				Optimization Changes       */ 
/*     15-Nov-2017      Ver 2.2        Anand Dhopte   Optimization Changes       */
/*		 10-Aug-2018			Ver VQC				 Parag Kanojia	Version Quality Control		 */
/*     23-Jul-2019      Ver 2.3        Anuj Pancholi  Block delivery margin      */
/*                                                    on ITM long Call & Put     */
/*                                                    options from Expry-4 days  */
/*                                                    till  Expiry               */
/*     06-Jul-2021      Ver 2.4        Mahesh R       Debiting Peak Margin Amount*/ 
/*     07-Mar-2023      Ver 2.5    -   FNO lock user changes - Mahesh            */
/*********************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
/*** #include <fml_def.h> ** Commented in VQC ***/
#include <fo_fml_def.h>  
/*** #include <fo_view_def.h> **/	/** Ver 1.6 **/
/*** #include <fn_battmpt.h> ** Commented in VQC ***/
/*** #include <fo_fml_def.h> ** Commented in VQC as header already added ***/
#include <fn_tuxlib.h>
#include <fo.h>
/*** #include <fo_bank.h>	** Commented in VQC ***/
#include <fn_session.h>
#include <fn_ddr.h>
#include <fn_log.h>
#include <fml_rout.h>
#include <fn_read_debug_lvl.h> 
#include <fo_view_def.h> /* Added in Ver 1.8 */
/*** #include <fml_rout.h>     * Added in Ver 1.8 * Commented in VQC as header already added ***/

/** struct vw_usr_prfl st_usr_prfl;	**/	/** Ver 1.6 **/
char c_show_link = '\0';	/** Initialized in VQC **/

int fn_upd_amc_tbl( char   *c_ServiceName,	
						  		  char   *c_xchng_cd, 
			   						char   *c_cln_mtch_accnt, 
										char    c_path,
										char   c_view_st,
										char   c_release_st,
                    char   *c_trd_dt_nse);   /**  Added in Ver 2.4 **/ 
/***			   						char   *c_input_dt,	*** Commented in VQC ***/
/***										long	 li_run_no );	*** Commented in VQC ***/
/***									  char   *c_tag );		*** Commented in VQC ***/

double d_old_alctd_amt 			= 0.0;
double d_old_bft_amt   			= 0.0;
double d_old_plg_amt   			= 0.0;
/** double d_old_plg_amt_bse		= 0.0;  ** Added in ver 1.2 ** Commented in VQC ***/
double d_old_plg_amt_nse		= 0.0;  /** Added in ver 1.2 **/
double d_old_isec_mrgn_amt  = 0.00;
double d_new_isec_mrgn_amt  = 0.00;
double d_old_isec_mrgn_amt_bse = 0.00; /** Added in Ver 1.2 **/
double d_old_isec_mrgn_amt_nse = 0.00; /** Added in Ver 1.2 **/
double d_old_fdr_amt          = 0.00;   /** Ver 1.5 **/
double d_old_fdr_amt_nse      = 0.00;   /** Ver 1.5 **/
double d_peak_margin_amount   = 0.00;          /** Ver 2.4 **/
double d_peak_margin_to_be_debited  = 0.00;    /** Ver 2.4 **/
double d_peak_mrgn_alrd_debit = 0.00;          /** Ver 2.4 **/

char c_dbcr_ind_bse = '\0';  /** Added in Ver 1.2 **/	/** Initialized in VQC **/
char c_dbcr_ind_nse = '\0';  /** Added in Ver 1.2 **/	/** Initialized in VQC **/
char c_show_PayPeak_Margin_link = '\0';        /** Ver 2.4 **/
char c_peak_enblflg = '\0';                    /** Ver 2.4 **/ 

void SFO_ADM_MRGNDTL( TPSVCINFO *rqst )
{
	FBFR32 *ptr_fml_Ibuf;   /* Pointer to FML input buffer	*/
	FBFR32 *ptr_fml_Obuf;		/* Pointer to FML output buffer	*/

	char c_ServiceName [ 33 ];
	varchar c_err_msg [ 256 ];	/*** Variable type changed from char to varchar in VQC ***/
/***	char c_tag [ 256 ];		** Commented in VQC ***/
/***	char c_msg [ 256 ];		** Commented in VQC ***/
	char c_rout [ 4 ];
	char c_path = '\0';			/** Initialized in VQC **/
	char c_view_st    = 'N';
	char c_release_st = 'N';

	int i_returncode = 0;		/** Initialized in VQC **/
	int i_ret_val = 0;			/** Initialized in VQC **/
/***	int i_ch_val;					** Commented in VQC ***/
/***	int i_ch_val_1 = 0;		** Commented in VQC ***/
	int i = 0;							/** Initialized in VQC **/
/***	int i_ip_len;					** Commented in VQC ***/
/***	int i_op_len;					** Commented in VQC ***/
	int i_trnsctn = 0;			/** Initialized in VQC **/
/***	int i_ret_state = 0;	** Commented in VQC ***/
	int i_err[10];			/*** Size changed from 11 to 7 in VQC ***//** Ver 2.4 changed from 7 to 10 **/
	int i_ferr[10];		/*** Size changed from 11 to 7 in VQC ***//** Ver 2.4 changed from 7 to 10 **/

/***	varchar   sql_urd_usr_user_id[10+1];  Commented in VQC **/
/***  long   l_sssn_id;				Commented in VQC **/
/***	long   l_sssn_id_chk;		Commented in VQC **/
/***	long	li_run_no ;				** Commented in VQC **/


  /*** Ver 2.4 Starts ****/
  d_old_isec_mrgn_amt=0;
  d_old_alctd_amt=0;
  d_old_bft_amt=0;
  d_old_plg_amt=0;
  d_new_isec_mrgn_amt=0;
  c_show_link='\0';
  d_old_fdr_amt=0;
  /*** Ver 2.4 Ends Here **/
 	EXEC SQL BEGIN DECLARE SECTION;
	
	char c_xchng_cd[4];
	char c_cln_mtch_accnt[11];
	char c_input_dt[12];
	char c_sys_dt[12];
	char  c_trd_dt_nse[12];
	char  c_trd_dt_bse[12];
	char c_nfo_xchng_cd[4] = "NFO";			/*** Added in VQC ***/
	char c_bfo_xchng_cd[4] = "BFO";			/*** Added in VQC ***/

	EXEC SQL END DECLARE SECTION;

  /*** Ver 1.8 Starts Here ***/
  struct vw_usr_prfl st_usr_prfl;
  struct vw_err_msg st_err_msg;

  MEMSET(st_usr_prfl);
  MEMSET(st_err_msg);
  /*** Ver 1.8 Ends Here ***/

  c_show_PayPeak_Margin_link='\0';  /*** Ver 2.4 ***/
  c_peak_enblflg='\0';    /*** Ver 2.4 ***/
  d_peak_margin_amount   = 0.00;          /** Ver 2.4 **/
  d_peak_margin_to_be_debited  = 0.00;    /** Ver 2.4 **/
  d_peak_mrgn_alrd_debit = 0.00;          /** Ver 2.4 **/

	/*** MEMSET done in VQC Starts ***/
	MEMSET(c_err_msg);
	MEMSET(c_rout);
	MEMSET(c_xchng_cd);
	MEMSET(c_cln_mtch_accnt);
	MEMSET(c_input_dt);
	MEMSET(c_sys_dt);
	MEMSET(c_trd_dt_nse);
	MEMSET(c_trd_dt_bse);
	c_nfo_xchng_cd[3] = '\0';
	c_bfo_xchng_cd[3] = '\0';
	/*** MEMSET done in VQC Ends ***/

	ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
	strcpy( c_ServiceName, rqst->name ); 
	INITDBGLVL(c_ServiceName);
	ptr_fml_Obuf = (FBFR32 *)NULL;

	if(DEBUG_MSG_LVL_3)    /** Added Debug Level in VQC **/
  {
		fn_userlog(c_ServiceName,"Started SFO_ADM_MRGNDTL..,,,,");
	}
	
/***	MEMSET(sql_urd_usr_user_id);	*** Commented in VQC ***/

	i_err[0]  = Fget32( ptr_fml_Ibuf, FFO_XCHNG_CD, 0, (char *)c_xchng_cd, 0 );
  i_ferr[0] = Ferror32;
/***	i_err[1]  = Fget32( ptr_fml_Ibuf, FFO_TRD_DT, 0, (char *)c_input_dt, 0 );	*** Commented in VQC
  i_ferr[1] = Ferror32;		*** VQC ***/
	i_err[1]  = Fget32( ptr_fml_Ibuf, FFO_EBA_MTCH_ACT_NO, 0, (char *)c_cln_mtch_accnt, 0 );	/*** Index Changed from 2 to 1 in VQC ***/
  i_ferr[1] = Ferror32;			/*** Index Changed from 2 to 1 in VQC ***/
/***	i_err[3]  = Fget32( ptr_fml_Ibuf, FFO_RUN_NUM, 0, (char *)&li_run_no, 0 ); ** Commented in VQC
  i_ferr[3] = Ferror32;		*** VQC ***
***	i_err[4]  = Fget32( ptr_fml_Ibuf, FFO_BAT_TAG, 0, (char *)c_tag, 0 );	*** Commened In VQC ***
  i_ferr[4] = Ferror32;		*** VQC ***
***	i_err[5]  = Fget32( ptr_fml_Ibuf, FFO_ROUT_CRT, 0, (char *)c_rout, 0 );	*** Commented in VQC *
  i_ferr[5] = Ferror32;		*** VQC ***/
	i_err[2]  = Fget32( ptr_fml_Ibuf, FFO_SOURCE_FLG, 0, (char *)&c_path, 0 );	/*** Index Changed from 6 to 2 in VQC ***/
  i_ferr[2] = Ferror32;		/*** Index Changed from 6 to 2 in VQC ***/

	for (i=0;i<3;i++)		/*** Index Changed from 7 to 3 in VQC ***/
	{
 		if (i_err[i] == -1)
  	{
  		fn_userlog(c_ServiceName,"Error in Fget at [%d],[%s]", i,Fstrerror32( i_ferr[i]));
    	fn_errlog(c_ServiceName, "S31005", FMLMSG, c_err_msg.arr  );	/*** .arr added in VQC ***/
        fn_userlog(c_ServiceName,"Error in fget value at initial ");	
/***			Fadd32(ptr_fml_Obuf,FFO_ERR_MSG,c_err_msg,0 );	Commented in VQC ***/
			Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg.arr,0 );		/*** Added in VQC ***/
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  	}
  }
  strcpy(c_xchng_cd,"NA");

  /** Only in case of Front end call --check for below fml's**/
  if (c_path == 'S')
  {
		 if(DEBUG_MSG_LVL_3)    /** Added Debug Level in VQC **/
     {
   	 	 fn_userlog(c_ServiceName,"Checking input FMLs from front end");	
		 }

/***     i_err[7]  = Fget32(ptr_fml_Ibuf,FFO_USR_ID,0,(char *)sql_urd_usr_user_id.arr,0);	*** Commented in VQC ***
     i_ferr[7] = Ferror32;	*** VQC ***
***     i_err[8]=Fget32(ptr_fml_Ibuf,FFO_SSSN_ID,0,(char *)&l_sssn_id,0);	*** Commented in VQC ***
     i_ferr[8] = Ferror32;	*** VQC ***/
		 i_err[3]  = Fget32( ptr_fml_Ibuf, FFO_SPL_FLG, 0, (char *)&c_view_st, 0 );	/*** Index Changed from 9 to 3 in VQC ***/
		 i_ferr[3] = Ferror32;	/*** Index Changed from 9 to 3 in VQC ***/
		 i_err[4]  = Fget32( ptr_fml_Ibuf, FFO_BK_UBK_FLG, 0, (char *)&c_release_st, 0 );	/*** Index Changed from 10 to 4 in VQC ***/
		 i_ferr[4] = Ferror32;	/*** Index Changed from 10 to 4 in VQC ***/

		 for (i=3;i<5;i++)		/*** Stars Index changed from 7 to 3 $ Index Changed from 11 to 5 in VQC ***/
		 {
 			if (i_err[i] == -1)
  		{
  			fn_userlog(c_ServiceName,"Error in Fget at in service call [%d],[%s]", i,Fstrerror32( i_ferr[i]));
    		fn_errlog(c_ServiceName, "S31010", FMLMSG, c_err_msg.arr  );	/*** .arr added in VQC ***/
/***				Fadd32(ptr_fml_Obuf,FFO_ERR_MSG,c_err_msg,0 );	Commented in VQC ***/
				Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg.arr,0 );			/*** Added in VQC ***/
    		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  		}
		 }

		if(DEBUG_MSG_LVL_3)    /** Added Debug Level in VQC **/
    {
     fn_userlog(c_ServiceName,"Val of c_view_st from site <%c>",c_view_st );
     fn_userlog(c_ServiceName,"Val of c_release_st from site <%c>",c_release_st );
		}

    /*** Session Check part only for site  ***/

    /*** Added for Order Routing  ***** Commented in Ver 1.8
     fn_init_ddr_val ( c_rout ); ******/

    /*** Ver 1.8 Starts Here ***/
    i_returncode = Fvftos32( ptr_fml_Ibuf,
                           (char *) &st_usr_prfl,
                           "vw_usr_prfl" );

  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31015", FMLMSG, c_err_msg.arr  );	/*** .arr added in VQC ***/
/***    Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	Commented in VQC ***/
		Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_err_msg.arr, 0 );			/*** Added in VQC ***/
    tpreturn(TPFAIL,0L, (char *)ptr_fml_Ibuf, 0L, 0);
  }

  /*** Added for Order Routing ***/
  fn_init_ddr_val ( st_usr_prfl.c_rout_crt );

  i_returncode = fn_chk_sssn( c_ServiceName, &st_usr_prfl,
                                             &st_err_msg ) ;

  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31020", LIBMSG, st_err_msg.c_err_msg);
/***    Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, st_err_msg.c_err_msg, 0 );	Commented in VQC ***/
		Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, st_err_msg.c_err_msg, 0 );     /*** Added in VQC ***/
    tpreturn(TPFAIL,0L, (char *)ptr_fml_Ibuf, 0L, 0);
  }
    /*** Ver 1.8 Ends Here ***/

    /*** Commented in Ver 1.8
  	 l_sssn_id_chk = chk_sssn(c_ServiceName,sql_urd_usr_user_id.arr,l_sssn_id,c_err_msg);

  	 if(l_sssn_id_chk == -1)
  	 {	
			fn_errlog( c_ServiceName, "S31025", FMLMSG, c_err_msg  );
		  fn_userlog(c_ServiceName,"Error in session id check ");	
			strcpy(c_err_msg,"Session Timed Out");
			Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
			tpreturn(TPFAIL,0L, (char *)ptr_fml_Ibuf, 0L, 0);
  	 }
   Comment Ends for Ver 1.8 ****/
  }

  if(DEBUG_MSG_LVL_0)		/*** DEBUG Level changed from 3 to 0 in VQC ***/
  {
		fn_userlog(c_ServiceName,"INPUT for SFO_ADM_MRGNDTL..");
/***	  fn_userlog(c_ServiceName,"c_user_id [%s]",sql_urd_usr_user_id.arr);	** Commented in VQC ***/
/***		fn_userlog(c_ServiceName,"session_id [%ld]",l_sssn_id);	*** Commented in VQC ***/
		fn_userlog(c_ServiceName,"c_view_st [%c]",c_view_st);
		fn_userlog(c_ServiceName,"c_release_st [%c]",c_release_st);
		fn_userlog(c_ServiceName,"c_xchng_cd [%s]",c_xchng_cd);
/***		fn_userlog(c_ServiceName,"c_input_dt [%s]",c_input_dt);	*** Commented in VQC ***/
		fn_userlog(c_ServiceName,"c_cln_mtch_accnt [%s]",c_cln_mtch_accnt);
/***		fn_userlog(c_ServiceName,"li_run_no [%ld]",li_run_no);	*** Commented in VQC ***/
/***		fn_userlog(c_ServiceName,"c_tag [%s]",c_tag);	*** Commented in VQC ***/
/***		fn_userlog(c_ServiceName,"c_rout [%s]",c_rout);	*** Commented in VQC ***/
		fn_userlog(c_ServiceName,"c_path [%c]",c_path);
  }

/****************************************************************************************/
/* function fn_upd_amc_tbl is called with match act and source path as input parameter  */
/****************************************************************************************/

  ptr_fml_Obuf = (FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);

	if (ptr_fml_Obuf == NULL)		/*** Error Condtition Handled in VQC ***/
	{
     fn_errlog( c_ServiceName, "S31030",TPMSG,c_err_msg.arr);
     fn_userlog(c_ServiceName,"Error in allocating size for obuf  ");
     Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0);
     tpreturn(TPFAIL, 0, (char *)ptr_fml_Ibuf, 0, 0);
  }

   /** Added in Ver 2.4 **/
  EXEC SQL
      SELECT TO_CHAR( EXG_NXT_TRD_DT, 'DD-Mon-YYYY' )
      INTO   :c_trd_dt_nse
      FROM   EXG_XCHNG_MSTR
      WHERE  EXG_XCHNG_CD = :c_nfo_xchng_cd ;
  
 if ( SQLCODE != 0 )
  {
    fn_errlog( c_ServiceName, "S31035",SQLMSG,c_err_msg.arr); /*** .arr added in VQC ***/
    fn_userlog(c_ServiceName,"Error in selecting trade dt for NSE  <%ld>", SQLCODE);
    Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_err_msg.arr, 0 );
    tpfree((char *)ptr_fml_Obuf);                           /*** Added in VQC ***/
    tpreturn(TPFAIL,0L, (char *)ptr_fml_Ibuf, 0L, 0);
  }
   /** Ver 2.4  **/      

  i_ret_val = fn_upd_amc_tbl( c_ServiceName,
			    									  c_xchng_cd,
			     										c_cln_mtch_accnt,
															c_path,
															c_view_st,
															c_release_st,
                              c_trd_dt_nse  /** Added in ver 2.4 **/
/***			     										c_input_dt,		*** Commented in VQC ***/
/***															li_run_no	*** Commented in VQC ***/
/***															c_tag		*** Commented in VQC ***/
			   										 ); 

	if ( i_ret_val != 0 && i_ret_val != -2 && i_ret_val != -3)		/** ver 1.9 **/
	{
/***		strcpy ( c_msg, "System error. Contact system support" );		*** Commented in VQC ***/
/***		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );		*** Commented in VQC ***/
    fn_userlog(c_ServiceName,"Error in call to fn_upd_amc_tbl ");
   	fn_errlog(c_ServiceName, "S89110", "Error in Calc", c_err_msg.arr  ); /*** .arr added in VQC ***/
/***    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );	Commented in VQC ***/
/***		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	Commented in VQC ***/
		Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_err_msg.arr, 0 );		/*** Added in VQC ***/
/***		tpreturn(TPFAIL,0L,(char *)ptr_fml_Obuf,0L,0);	Commented in VQC ***/
		tpfree((char *)ptr_fml_Obuf);														/*** Added in VQC ***/
		tpreturn(TPFAIL,0L,(char *)ptr_fml_Ibuf,0L,0);					/*** Added in VQC ***/
	}

	if ( i_ret_val == -2)
	{
/***		strcpy (c_msg, "System error. Contact system support");		*** Commented in VQC ***/
/***		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );		*** Commented in VQC ***/
    fn_userlog(c_ServiceName,"Error in call to fn_upd_amc_tbl--Business Error ");
	  fn_errlog( c_ServiceName, "B91070", DEFMSG, c_err_msg.arr );	/*** .arr added in VQC ***/
/***    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );	Commented in VQC ***/
/***		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	*** Commented in VQC ***/
		Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_err_msg.arr, 0 );		/*** Added in VQC ***/
/***		tpreturn(TPFAIL,0L,(char *)ptr_fml_Obuf,0L,0);	*** Commented in VQC ***/
		tpfree((char *)ptr_fml_Obuf);                           /*** Added in VQC ***/
		tpreturn(TPFAIL,0L,(char *)ptr_fml_Ibuf,0L,0);					/*** Added in VQC ***/
	}

  /** Error handling for no data found added ver 1.9 **/
  if ( i_ret_val == -3)
	{
		tpreturn( TPSUCCESS, 0L, (char *)ptr_fml_Obuf,0L,0 );
  }
  /** Add End **/

  /*** Block to get Trade date Starts  **/
  /********************************************************************************************/

	/*** VQC Hard Parse Changes ***/
  /*** Commented in Ver 2.4  
	EXEC SQL
			SELECT TO_CHAR( EXG_NXT_TRD_DT, 'DD-Mon-YYYY' )
			INTO	 :c_trd_dt_nse			         
			FROM 	 EXG_XCHNG_MSTR
***			WHERE	 EXG_XCHNG_CD = 'NFO'; 		*** Commented in VQC ***
			WHERE  EXG_XCHNG_CD = :c_nfo_xchng_cd ;		*** Added in VQC ***

	if ( SQLCODE != 0 )
	{
		fn_errlog( c_ServiceName, "S31040",SQLMSG,c_err_msg.arr);	*** .arr added in VQC ***
		fn_userlog(c_ServiceName,"Error in selecting trade dt for NSE  <%ld>", SQLCODE);
***		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	Commented in VQC ***
		Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_err_msg.arr, 0 );		*** Added in VQC ***
***    tpreturn(TPFAIL,0L,(char *)ptr_fml_Obuf,0L,0);  *** Commented in VQC ***
		tpfree((char *)ptr_fml_Obuf);                           *** Added in VQC ***
		tpreturn(TPFAIL,0L, (char *)ptr_fml_Ibuf, 0L, 0);
	}
  ***/

	/*** VQC Hard Parse Changes ***/
	EXEC SQL
			SELECT TO_CHAR( EXG_NXT_TRD_DT, 'DD-Mon-YYYY' )
			INTO	 :c_trd_dt_bse
			FROM 	 EXG_XCHNG_MSTR
/***			WHERE	 EXG_XCHNG_CD = 'BFO'; 		*** Commented in VQC ***/
			WHERE	 EXG_XCHNG_CD = :c_bfo_xchng_cd; 			/*** Added in VQC ***/

	if ( SQLCODE != 0 )
	{
		fn_errlog( c_ServiceName, "S31045",SQLMSG,c_err_msg.arr);	/*** .arr added in VQC ***/
		fn_userlog(c_ServiceName,"Error in selecting trade dt for BSE  <%ld>", SQLCODE);
/***		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	Commented in VQC ***/
		Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_err_msg.arr, 0 );   /*** Added in VQC ***/
/***    tpreturn(TPFAIL,0L,(char *)ptr_fml_Obuf,0L,0);  *** Commented in VQC ***/
		tpfree((char *)ptr_fml_Obuf);                           /*** Added in VQC ***/
		tpreturn(TPFAIL,0L, (char *)ptr_fml_Ibuf, 0L, 0);
	}

	if(DEBUG_MSG_LVL_3)
	{
	 fn_userlog(c_ServiceName,"Val of trade dt for NSE<%s> & BSE<%s> ", c_trd_dt_nse, c_trd_dt_bse);
	}

	if (strcmp(c_trd_dt_bse , c_trd_dt_nse) != 0)
	{
/***		strcpy ( c_msg, "Exchage trade date are different for NSE & BSE"); *** Commented in VQC ***/
		fn_userlog(c_ServiceName,"Exchage trade date are different for NSE & BSE");
		fn_errlog(c_ServiceName, "S89110", "Mismatch in trade date", c_err_msg.arr );	/*** .arr added in VQC ***/
/***		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	Commented in VQC ***/
		Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_err_msg.arr, 0 );   /*** Added in VQC ***/
/***    tpreturn(TPFAIL,0L,(char *)ptr_fml_Obuf,0L,0);  *** Commented in VQC ***/
		tpfree((char *)ptr_fml_Obuf);                           /*** Added in VQC ***/
		tpreturn(TPFAIL,0L, (char *)ptr_fml_Ibuf, 0L, 0);
	}

	else if (strcmp(c_trd_dt_bse ,c_trd_dt_nse) == 0)
	{
	 strcpy(c_input_dt, c_trd_dt_nse);
	 fn_userlog(c_ServiceName,"Val of trade dt for both NSE & BSE <%s>", c_input_dt);
	}
  /********************************************************************************************/
  /*** Block to get Trade date Ends  **/
  /********************************************************************************************/
   /*** Start of  Block to get run date  ****/

	/*** VQC Hard Parse Changes ***/
	EXEC SQL
			SELECT TO_CHAR( SYSDATE, 'DD-Mon-YYYY' )
			INTO	 :c_sys_dt
			FROM 	 DUAL;

	if ( SQLCODE != 0 )
	{
		fn_errlog( c_ServiceName, "S31050",SQLMSG,c_err_msg.arr);	/*** .arr added in VQC ***/
		fn_userlog(c_ServiceName,"Error in selecting run dt from dual <%ld>", SQLCODE);
/***		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	Commented in VQC ***/
		Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_err_msg.arr, 0 );   /*** Added in VQC ***/
/***    tpreturn(TPFAIL,0L,(char *)ptr_fml_Obuf,0L,0);  *** Commented in VQC ***/
		tpfree((char *)ptr_fml_Obuf);                           /*** Added in VQC ***/
		tpreturn(TPFAIL,0L, (char *)ptr_fml_Ibuf, 0L, 0);
	}
	rtrim( c_sys_dt );
	rtrim(c_input_dt);
	/* Here , c_input_dt is trade date of exchange common for both - as per revised logic  .. */

	if(DEBUG_MSG_LVL_3)       /*** Added debug level in VQC ***/
  {
		fn_userlog(c_ServiceName,"Val of c_sys_dt <%s>", c_sys_dt);
		fn_userlog(c_ServiceName,"Val of c_input_dt <%s>", c_input_dt);
	}

	if (strcmp(c_sys_dt, c_input_dt) == 0 && c_show_link == 'Y') /** Ver 1.2 **/
	{
	 c_show_link = 'Y';
	 fn_userlog(c_ServiceName,"Val of c_show_link :<%c> ", c_show_link);
	}
	else 
	{
	 c_show_link = 'N';
	 fn_userlog(c_ServiceName,"Val of c_show_link -Not to release:<%c> ", c_show_link);
	}
			
	/************************************************************************/

   if((c_path == 'S') && (c_view_st == 'Y') && (c_release_st == 'N') )
   {
			if(DEBUG_MSG_LVL_3)    /** Added Debug Level in VQC **/
      {
      	fn_userlog(c_ServiceName,"Call in View details");
			}

/***      ptr_fml_Obuf = (FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);		*** Commented in VQC ***
      if (ptr_fml_Obuf == NULL)
      {
				fn_errlog( c_ServiceName, "S31055",LIBMSG,c_err_msg);
				fn_userlog(c_ServiceName,"Error in allocating size for obuf  ");
				Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0);
				tpreturn(TPFAIL, 0, (char *)ptr_fml_Ibuf, 0, 0);
      }		Commented in VQC ***/

      i_err[0]  = Fadd32(ptr_fml_Obuf,FFO_BAL_AMT, (char *)&d_old_alctd_amt,0);
      i_ferr[0] = Ferror32;
      i_err[1]  = Fadd32(ptr_fml_Obuf,FFO_ORD_AMT_BLKD, (char *)&d_old_bft_amt,0);
      i_ferr[1] = Ferror32;
      i_err[2]  = Fadd32(ptr_fml_Obuf,FFO_PLG_AMT, (char *)&d_old_plg_amt,0);
      i_ferr[2] = Ferror32;
      i_err[3]  = Fadd32(ptr_fml_Obuf,FFO_ADD_MRGN_AMT, (char *)&d_old_isec_mrgn_amt,0);
      i_ferr[3] = Ferror32;
      i_err[4]  = Fadd32(ptr_fml_Obuf,FFO_U_TRD_MRGN, (char *)&d_new_isec_mrgn_amt,0);
      i_ferr[4] = Ferror32;
      i_err[5]  = Fadd32(ptr_fml_Obuf,FFO_STATUS_FLG, (char *)&c_show_link,0);
      i_ferr[5] = Ferror32;
      i_err[6]  = Fadd32(ptr_fml_Obuf,FFO_BO_AMT_BLKD, (char *)&d_old_fdr_amt,0);  /** Ver 1.5 **/
      i_ferr[6] = Ferror32;
      i_err[7]  = Fadd32(ptr_fml_Obuf,FFO_IS_FLG, (char *)&c_show_PayPeak_Margin_link,0);  /** Ver 2.4 **/
      i_ferr[7] = Ferror32;
      i_err[8]  = Fadd32(ptr_fml_Obuf,FFO_SO_AMT_BLKD, (char *)&d_peak_margin_amount,0);  /** Ver 2.4 **/
      i_ferr[8] = Ferror32;
      i_err[9]  = Fadd32(ptr_fml_Obuf,FFO_ADDL_AMT_BLKD, (char *)&d_peak_margin_to_be_debited,0);  /** Ver 2.4  **/
      i_ferr[9] = Ferror32; 

      for ( i = 0; i < 10 ; i++)    /*** Ver 1.5 ** Changed from 6 to 7 ***//** Ver 2.4 changed from 7 to 10 **/
      {
        if(i_err[i] == -1)
        {
/***					fn_errlog( c_ServiceName, "S31060",LIBMSG,c_err_msg);	*** Commented in VQC ***/
					fn_errlog( c_ServiceName, "S31065",FMLMSG,c_err_msg.arr);	/*** .arr added and LIBMSG changed to FMLMSG in VQC ***/
					fn_userlog(c_ServiceName,"Error in fadd in case of view site  ");
			  	fn_userlog(c_ServiceName,"Error in Fget at [%d],[%s]", i,Fstrerror32( i_ferr[i]));
      		tpfree((char *)ptr_fml_Obuf);
      		Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_err_msg.arr, 0 );	/*** .arr added in VQC ***/
      		tpreturn(TPFAIL, 0L, (char *)ptr_fml_Ibuf, 0L, 0);
        }
      }

   }

	if(DEBUG_MSG_LVL_3)    /** Added Debug Level in VQC **/
  {
  	fn_userlog(c_ServiceName,"End of program SFO_ADM_MRGNDTL ");
	}

	tpreturn(TPSUCCESS,0,(char *)ptr_fml_Obuf,0L,0);
}

/* End of Service  */


int fn_upd_amc_tbl ( char   *c_ServiceName,	
			   						 char   *c_xchng_cd, 
			   						 char   *c_cln_mtch_accnt,
									 	 char   c_path,
										 char   c_view_st,
										 char   c_release_st,
                     char   *c_trd_dt_nse)   /**  Added in Ver 2.4  **/
/***			   						 char   *c_input_dt,	*** Commented in VQC ***/
/***									 	 long	  li_run_no)		*** Commented in VQC ***/
/***									   char   *c_tag)		*** Commennted in VQC ***/
{

	EXEC SQL BEGIN DECLARE SECTION;

	char c_bnk_accnt[21];
	char c_spn_flg = 'N'; 		/*** Ver 1.1 ***/
	char c_bsespn_flg = 'N'; 		/*** Ver 1.2 ***/

/***	double d_old_nwb_amt 				= 0.00;		** Commented in VQC ***/
/***	double d_diff_isec_mrgn_amt = 0.00;		** Commented in VQC ***/
	double d_diff_isec_mrgn_amt_bse = 0.00;   /** Added in Ver 1.2 **/
	double d_diff_isec_mrgn_amt_nse = 0.00;   /** Added in Ver 1.2 **/

/***	double d_new_alctd_amt 			= 0.00;		** Commented in VQC ***/
/***	double d_new_bft_amt 				= 0.00;		** Commented in VQC ***/
	double d_new_plg_amt 				= 0.00;

/***	double d_new_nwb_amt 				= 0.00;		** Commented in VQC ***/

/***	double d_fut_mrgn_req 		= 0.00;			** Commented in VQC ***/
/***	double d_opt_mrgn_req 		= 0.00;			** Commented in VQC ***/
/***	double d_total_mrgn_req   = 0.00;			** Commented in VQC ***/
	double d_total_mrgn_req_bse   = 0.00;  /** Added in Ver 1.2 **/
	double d_total_mrgn_req_nse   = 0.00;  /** Added in Ver 1.2 **/


/***	double d_appl_mrgn_amt 		= 0.00;			** Commented in VQC ***/
	double d_appl_mrgn_amt_bse	= 0.00; /** Added in Ver 1.2 **/
	double d_appl_mrgn_amt_nse	= 0.00; /** Added in Ver 1.2 **/
	double d_fut_mrgn_req_bse = 0.00;  /** Added in Ver 1.2 **/
	double d_fut_mrgn_req_nse = 0.00;  /** Added in Ver 1.2 **/

	double d_opt_mrgn_req_bse = 0.00;  /** Added in Ver 1.2 **/
	double d_opt_mrgn_req_nse = 0.00;  /** Added in Ver 1.2 **/

  double d_new_fdr_amt          = 0.00;   /** Ver 1.5 **/

	/*** Commented in VQC ***
	int i_fut_opnpstn_qty = 0;
	int i_opt_opnpstn_qty = 0;
	int i_tot_opnpstn_qty = 0;

	char c_opnpstn_flg = '\0';
	
	varchar  c_trd_dt[22+1];	*** Commented in VQC ***/
	int i_err_cnt = 0;

	char c_nfo_xchng_cd[4] = "NFO";     /*** Added in VQC ***/
  /** char c_input_dt[12] = "\0";         Ver 2.4  **/

	EXEC SQL END DECLARE SECTION;

/***	int i;		*** Commented in VQC ***/
	int i_trnsctn ;
	varchar c_err_msg[256];	/*** Variable type changed from char to varchar in VQC ***/
	int i_returncode = 0;		/*** Initialized in VQC ***/
/***	char c_msg [ 256 ];	** Commneted in VQC ***/
	/*** Commented in VQC ***
	int i_ret_val;
	char c_batch_dbcr_ind;
	FBFR32 *ptr_fml_Ibuf;
	FBFR32 *ptr_fml_Obuf;
	ptr_fml_Obuf = (FBFR32 *)NULL;
	*** Commented in VQC ***/

	/*** MEMSET done in VQC Starts ***/
	MEMSET(c_bnk_accnt);
	MEMSET(c_err_msg);
	c_nfo_xchng_cd[3] = '\0';
	/*** MEMSET done in VQC Ends ***/

/***	int i_err[11];	** Commented in VQC ***/
/***	int i_ferr[11];		** Commented in VQC ***/

	if( DEBUG_MSG_LVL_3)		/** Added Debug Level in VQC **/
  {
  	fn_userlog(c_ServiceName,"Value of c_path -Batch/Site in fn_upd_amc_tbl <%c>", c_path);
	}

  /********************************************************************************************/
	/*** Block to Check Non-Updated records present in AMC table for Credit Failure **/
  /********************************************************************************************/

/***  if( DEBUG_MSG_LVL_2)	*** Commented in VQC ***
  {
    fn_userlog( c_ServiceName,"ISEC Before Memory Allocation for Match Account :%s:", c_cln_mtch_accnt);  *** Added in Ver 2.0 ***
  }		*** VQC ***/

/***  ptr_fml_Obuf = (FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN); 	*** Commented in VQC ***/

  if( DEBUG_MSG_LVL_2)
  {
    fn_userlog( c_ServiceName,"ISEC Before Select on AMC_ADM_MRGN_CALC");  /*** Added in Ver 2.0 ***/
  }

 /******commented in ver 2.1*****   *** Uncommented in Ver 2.2 ***/
  EXEC SQL
   SELECT count(1) 
   INTO : i_err_cnt
   FROM AMC_ADM_MRGN_CALC
   WHERE AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
   AND AMC_BILL_NO is not null
   AND AMC_BATCH_SITE_IND = 'S'
   AND AMC_STATUS_FLG = 'N';

 /*** *** commented in ver 2.1  uncommented in Ver 2.2 *********/

 /*** Commented in Ver 2.2 ***
 *******added in ver 2.1******
  EXEC SQL
	    SELECT 1
      INTO :i_err_cnt
      FROM DUAL
      WHERE EXISTS
      (
	      SELECT 1
	      FROM AMC_ADM_MRGN_CALC
	      WHERE AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
	      AND AMC_BILL_NO is not null
	      AND AMC_BATCH_SITE_IND = 'S'
        AND AMC_STATUS_FLG = 'N' 
      );

 ****** added in Ver 2.1****/

  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
	{
	   fn_errlog( c_ServiceName, "S31070",SQLMSG,c_err_msg.arr);	/*** .arr added in VQC ***/
	   fn_userlog(c_ServiceName,"Error in selecting Error count for AMC <%ld>", SQLCODE);
/***	   Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	*** Commented in VQC ***/
	   return ( FAILURE );
	}
  if (i_err_cnt > 0)
  {
	   fn_userlog(c_ServiceName,"Error records present in AMC --Hence First run Rerun");
/***	   fn_errlog(c_ServiceName, "B91070",(char *)(char *)c_cln_mtch_accnt,c_err_msg);		*** Commented in VQC ***/
/***	   fn_userlog(c_ServiceName,"Val of Business error: <%s>", c_err_msg);	*** Commented in VQC ***/
/***	   Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	*** Commented in VQC ***/
	   return ( -2 );
  }

  if( DEBUG_MSG_LVL_2)
  {
  	fn_userlog( c_ServiceName,"ISEC Before Begin Transaction");  /*** Added in Ver 2.0 ***/ 
  }

	i_trnsctn = fn_begintran( c_ServiceName, c_err_msg.arr ); 	/*** .arr added in VQC ***/
	if ( i_trnsctn == -1 )
	{
		fn_errlog(c_ServiceName, "S31075",LIBMSG,c_err_msg.arr);	/*** .arr added in VQC ***/
		return ( FAILURE );
	}

  if( DEBUG_MSG_LVL_2)
  { 
  	fn_userlog( c_ServiceName,"ISEC Before fn_lock_usr call "); /*** Added in Ver 2.0 ***/ 
  }

	/* i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt ); Ver 2.5 ***/
	i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt ); /*** Ver 2.5 ***/
	if ( i_returncode != 0 )
	{
	  fn_errlog(c_ServiceName, "S31080",LIBMSG,c_err_msg.arr);	/*** .arr added in VQC  and errno changed from L to S ***/
	  fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg.arr );	/*** .arr added in VQC ***/
	  return ( -1 );
	}

  if( DEBUG_MSG_LVL_2)
  {
  	fn_userlog( c_ServiceName,"ISEC After fn_lock_usr call "); /*** Added in Ver 2.0 ***/ 
  }

	/*** VQC Hard Parse Changes ***/	
	 EXEC SQL 
		SELECT  FAB_BNK_ACCNT, 
			 			NVL(FAB_ALCTD_AMT,0),
			 			NVL(FAB_BFT_AMT,0),
			 			NVL(FAB_PLG_AMT,0),
			 			NVL(FAB_ISEC_MRGN_AMT,0),
						NVL(FAB_ISEC_MRGN_AMT_BSE,0),  /** Added in ver 1.2 **/
            NVL(FAB_FDR_AMT,0)            /** Added in Ver 1.5 **/
		INTO    :c_bnk_accnt,
			 			:d_old_alctd_amt,       
			 			:d_old_bft_amt,         
			 			:d_old_plg_amt,         
			 			:d_old_isec_mrgn_amt_nse,    /** Changed in Ver 1.2 **/
						:d_old_isec_mrgn_amt_bse,    /** Added in Ver 1.2 **/
            :d_old_fdr_amt               /** Added in Ver 1.5 **/  
		FROM	 FAB_FO_ALC_BFT_SMRY 
		WHERE	 FAB_CLM_MTCH_ACCNT = :c_cln_mtch_accnt;

	if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )		/** ver 1.9 **/
	{
	   fn_errlog( c_ServiceName, "S31085",SQLMSG,c_err_msg.arr);	/*** .arr added in VQC ***/
	   fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FAB<%ld>", SQLCODE);
	   fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr ); 	/*** .arr added in VQC ***/
/***	   Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	Commented in VQC ***/
	   return ( FAILURE );
	}
	/** added in ver 1.9 **/
  if ( SQLCODE == NO_DATA_FOUND )
  {
		 fn_errlog( c_ServiceName, "S31090",SQLMSG,c_err_msg.arr);	/*** .arr added in VQC ***/
     fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FAB<%ld>", SQLCODE);
     fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );	/*** .arr added in VQC ***/
/***     Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	Commented in VQC ***/
   	 return ( -3 );
  }
	/** Ver 1.9 End **/

  if( DEBUG_MSG_LVL_2)
  {
  	fn_userlog(c_ServiceName," ISEC After select from FAB ");  /*** Added in Ver 2.0 ***/ 
  }
  
	d_old_isec_mrgn_amt = d_old_isec_mrgn_amt_nse + d_old_isec_mrgn_amt_bse;  /** Added in ver 1.2 **/

	if( DEBUG_MSG_LVL_3)			/*** DEBUG_MSG_LVL Added in VQC ***/
  {
		fn_userlog(c_ServiceName,"Val of d_old_isec_mrgn_amt considering NSE & BSE both <%lf>", d_old_isec_mrgn_amt);
	}

 	rtrim(c_bnk_accnt); 

/****	Commented for Ver 1.6 ****
	strcpy(st_usr_prfl.c_user_id,"system");
	strcpy(st_usr_prfl.c_cln_mtch_accnt,c_cln_mtch_accnt);
	strcpy(st_usr_prfl.c_bnk_accnt_nmbr[0],c_bnk_accnt);
	st_usr_prfl.l_session_id = 0;
******* Ver 1.6 ********/

  /***   Get the Span Flag to Check for any Open Position present Accordingly								 *****/ 

	EXEC SQL                          /*** Ver 1.1 ***/
    SELECT  NVL(CLM_SPAN_ALLWD,'N'),
	    NVL(CLM_BSESPAN_ALLWD,'N')	/** Added in Ver 1.2  **/
    INTO    :c_spn_flg,                 
            :c_bsespn_flg	/** Added in Ver 1.2  **/
    FROM    CLM_CLNT_MSTR
    WHERE   CLM_MTCH_ACCNT  = :c_cln_mtch_accnt;

	if ( SQLCODE != 0 )
  {
     fn_errlog( c_ServiceName, "S31095",SQLMSG,c_err_msg.arr);	/*** .arr added in VQC ***/
     fn_userlog(c_ServiceName,"Error in selecting SPAN flag <%ld> ", SQLCODE);
     fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );	/*** .arr added in VQC ***/
/***     Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	Commented in VQC ***/
     return ( FAILURE );
  }

	if(DEBUG_MSG_LVL_3)								/*** Ver 1.1 ***/
  {
	   fn_userlog(c_ServiceName," The SPAN Flag For Customer <%s> Is :%c: & BSE-SPAN flag<%c>",c_cln_mtch_accnt,c_spn_flg, c_bsespn_flg);
	}

	/**************************   Commented below part for Version 1.2 Starts ***********************/
	/*****   Open position quantity check removed ***************************************************/
	/************************************************************************************************
	if ( c_spn_flg == 'N')		
	{
	  fn_userlog(c_ServiceName," Inside Normal Customer For Open Qty Check "); 

		EXEC SQL 
			SELECT 1 
			INTO :i_fut_opnpstn_qty
			FROM DUAL 
			WHERE exists 
			(
				SELECT 1 FROM 
				(
			 	SELECT sum(FFP_OPNPSTN_QTY) qty, FFP_UNDRLYNG underlying
			 	FROM FFP_FO_FUTURES_PSTN
			 	WHERE FFP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
			 	GROUP BY FFP_XCHNG_CD,FFP_PRDCT_TYP,FFP_INDSTK,FFP_UNDRLYNG,FFP_EXPRY_DT,FFP_EXER_TYP,FFP_CNTRCT_TAG
				)
				WHERE qty !=0
			);

		if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
		{
	  	 fn_errlog( c_ServiceName, "S31100",SQLMSG,c_err_msg);
	     fn_userlog(c_ServiceName,"Error in selecting open position sts from FUP <%ld>", SQLCODE);
	  	 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	  	 Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	  	 return ( FAILURE );
		}

		if ( SQLCODE == NO_DATA_FOUND)
		{
	  	 i_fut_opnpstn_qty = 0;
	  	 fn_userlog(c_ServiceName,"No open position present for Future ");
		}

  	EXEC SQL 
			SELECT 1 
			INTO :i_opt_opnpstn_qty		
			FROM DUAL 
			WHERE EXISTS 
			(
				SELECT 1 FROM 
				(
			 	SELECT SUM(FOP_OPNPSTN_QTY) qty, FOP_UNDRLYNG underlying
			 	FROM FOP_FO_OPTIONS_PSTN
			 	WHERE FOP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
			 	GROUP BY FOP_XCHNG_CD,FOP_PRDCT_TYP,FOP_INDSTK,FOP_UNDRLYNG,FOP_EXPRY_DT,FOP_STRK_PRC,FOP_EXER_TYP,FOP_OPT_TYP
				)
				WHERE qty !=0
			);

		if ( SQLCODE != 0  && SQLCODE != NO_DATA_FOUND )
		{
	  	 fn_errlog( c_ServiceName, "S31105",SQLMSG,c_err_msg);
	  	 fn_userlog(c_ServiceName,"Error in selecting open position sts from FOP <%ld>", SQLCODE);
	  	 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	  	 Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	  	 return ( FAILURE );
		}

		if ( SQLCODE == NO_DATA_FOUND)
		{	
	  	 i_opt_opnpstn_qty = 0;
	  	 fn_userlog(c_ServiceName,"No open position present for Options ");
		}

  	i_tot_opnpstn_qty =  i_fut_opnpstn_qty  +  i_opt_opnpstn_qty ;
		fn_userlog(c_ServiceName,"Opn position present status<%d><greater than 0 states open position exists>",i_tot_opnpstn_qty);

		if (i_tot_opnpstn_qty == 0)
		{
  		 c_opnpstn_flg =  'N';
	 			fn_userlog(c_ServiceName,"In case of no Opn position present set c_opnpstn_flg as <%c>",c_opnpstn_flg);
		}
	}
	else if (  c_spn_flg == 'Y' )  
	{
	  fn_userlog(c_ServiceName," Inside SPAN Customer <%s>  For Open Qty Check ",c_cln_mtch_accnt); 
 
		EXEC SQL 
			SELECT 1 
				INTO :i_tot_opnpstn_qty		
				FROM DUAL 
				WHERE EXISTS 
				(
					SELECT 1 FROM 
					(
			 		SELECT SUM(FCP_OPNPSTN_QTY) qty, FCP_UNDRLYNG underlying
			 		FROM FCP_FO_SPN_CNTRCT_PSTN
			 		WHERE FCP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FCP_XCHNG_CD       = :c_xchng_cd
			 		GROUP BY FCP_XCHNG_CD,FCP_PRDCT_TYP,FCP_INDSTK,FCP_UNDRLYNG,FCP_EXPRY_DT,
									 FCP_STRK_PRC,FCP_EXER_TYP,FCP_OPT_TYP
					)
					WHERE qty !=0
				);

		if ( SQLCODE != 0  && SQLCODE != NO_DATA_FOUND )
		{
	  	 fn_errlog( c_ServiceName, "S31110",SQLMSG,c_err_msg);
	  	 fn_userlog(c_ServiceName,"Error in selecting open position sts from FOP <%ld>", SQLCODE);
	  	 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	  	 Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	  	 return ( FAILURE );
		}

		if ( SQLCODE == NO_DATA_FOUND)
		{	
	  	 i_tot_opnpstn_qty = 0;
	  	 fn_userlog(c_ServiceName,"No open position present  ");
		}

		fn_userlog(c_ServiceName,"Opn position present status<%d><greater than 0 states open position exists>",i_tot_opnpstn_qty);

		if (i_tot_opnpstn_qty == 0)
		{
  		 c_opnpstn_flg =  'N';
	 			fn_userlog(c_ServiceName,"In case of no Opn position present set c_opnpstn_flg as <%c>",c_opnpstn_flg);
		}
	}
	***********************************************************************************/
	/**************************   Commented part for Version 1.2 Ends ***********************/

	/*** Start of  Block to compute applicable ISEC MARGIN Amount w.r.t available FAB values ****/

	if (c_path == 'B' || c_path == 'S' )   /*  Start of condition for called from batch program or site */
	{ 


		if ( c_spn_flg == 'N' )  /*** Ver 1.1 ***/ /*** Span Check Added to Compute Margin Req Separately ***/
		{
		   /*** Commented below part in Ver 1.2 Starts **************/
	 	  /***********************************************************
		  fn_userlog(c_ServiceName,"Inside Normal Customer <%s>  For Computing Margin Req ",c_cln_mtch_accnt);

			EXEC SQL 
				SELECT nvl( sum((FUP_UTRD_MRGN + FUP_ADD_MRGN_VAL)), 0)
			 		INTO :d_fut_mrgn_req
			 		FROM  FUP_FUT_UNDRLYNG_PSTN
			 		WHERE FUP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt;


			if ( SQLCODE != 0 )
			{
	  		fn_errlog( c_ServiceName, "S31115",SQLMSG,c_err_msg);
	  		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FUP<%ld>", SQLCODE);
	  		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	  		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	  		return ( FAILURE );
			}


			EXEC SQL 
					SELECT nvl(sum(FOP_UEXCTD_MRGN),0)
					INTO  :d_opt_mrgn_req
					FROM  FOP_FO_OPTIONS_PSTN 
					WHERE FOP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt;

			if ( SQLCODE != 0 )
			{
	   		fn_errlog( c_ServiceName, "S31120",SQLMSG,c_err_msg);
	   		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FOP<%ld>", SQLCODE);
	   		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	   		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	   		return ( FAILURE );
			}

			d_total_mrgn_req = d_fut_mrgn_req + d_opt_mrgn_req;
			fn_userlog(c_ServiceName,"Val of total margin (future+option)required <%lf + %lf>= <%lf>", 
																d_fut_mrgn_req , d_opt_mrgn_req, d_total_mrgn_req);

       ***********************************************************************/
			/*****  Comment Part ends for Ver 1.2    ****/

			/*** Ver 1.2 Starts ***/

						if(DEBUG_MSG_LVL_3)
			{
			 fn_userlog(c_ServiceName,"Inside Normal Customer <%s> For Computing Margin Req ",c_cln_mtch_accnt);
			}
     /*********  Margin Requirement calculation for BSE for Normal client Start **********/

    if( DEBUG_MSG_LVL_2)
    {
     fn_userlog( c_ServiceName,"ISEC Before Select NON SPAN FUP_FUT_UNDRLYNG_PSTN BFO");  /*** Added in Ver 2.0 ***/
    }
 
  /***** Commeneted in Ver 2.1******
			EXEC SQL 
				SELECT trunc(nvl( sum((FUP_UTRD_MRGN + FUP_ADD_MRGN_VAL)), 0)) ** Ver 1.1 **
			 		INTO :d_fut_mrgn_req_bse
			 		FROM  FUP_FUT_UNDRLYNG_PSTN
			 		WHERE FUP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FUP_XCHNG_CD = 'BFO'; 

			if ( SQLCODE != 0 )
			{
	  		fn_errlog( c_ServiceName, "S31125",SQLMSG,c_err_msg);
	  		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FUP for BSE <%ld>", SQLCODE);
	  		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	  		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	  		return ( FAILURE );
			}

    if( DEBUG_MSG_LVL_2)
    {
     fn_userlog( c_ServiceName,"ISEC Before NON SPAN FOP_FO_OPTIONS_PSTN select BFO");  *** Added in Ver 2.0 ***
    }

			EXEC SQL 
					SELECT trunc(nvl(sum(FOP_UEXCTD_MRGN),0)) ** Ver 1.1 **
					INTO  :d_opt_mrgn_req_bse
					FROM  FOP_FO_OPTIONS_PSTN 
					WHERE FOP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FOP_XCHNG_CD = 'BFO'; 

			if ( SQLCODE != 0 )
			{
	   		fn_errlog( c_ServiceName, "S31130",SQLMSG,c_err_msg);
	   		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FOP for BSE <%ld>", SQLCODE);
	   		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	   		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	   		return ( FAILURE );
			}
     *************************/


			d_total_mrgn_req_bse = d_fut_mrgn_req_bse + d_opt_mrgn_req_bse;
			if(DEBUG_MSG_LVL_3)
			{
			 fn_userlog(c_ServiceName,"total margin-bse(f+o)<%lf+ %lf>=<%lf> For Normal client",d_fut_mrgn_req_bse,d_opt_mrgn_req_bse,d_total_mrgn_req_bse);
			}
			/*********  Margin Requirement calculation for BSE for Normal client End **********/

			/*********  Margin Requirement calculation for NSE for Normal client Start **********/

    if( DEBUG_MSG_LVL_2)
    {
     fn_userlog( c_ServiceName,"ISEC Before NON SPAN FUP_FUT_UNDRLYNG_PSTN select NFO");  /*** Added in Ver 2.0 ***/
    }

		/*** VQC Hard Parse Changes ***/
			EXEC SQL 
				SELECT TRUNC(NVL( SUM((FUP_UTRD_MRGN + FUP_ADD_MRGN_VAL)), 0)) /** Ver 1.1 **/
			 		INTO :d_fut_mrgn_req_nse
			 		FROM  FUP_FUT_UNDRLYNG_PSTN
			 		WHERE FUP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
/***					AND   FUP_XCHNG_CD = 'NFO'; 	*** Commented in VQC ***/
					AND   FUP_XCHNG_CD = :c_nfo_xchng_cd; 	/*** Added in VQC ***/

			if ( SQLCODE != 0 )
			{
	  		fn_errlog( c_ServiceName, "S31135",SQLMSG,c_err_msg.arr);	/*** .arr added in VQC ***/
	  		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FUP for NSE <%ld>", SQLCODE);
	  		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr ); 	/*** .arr added in VQC ***/
/***	  		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	Commented in VQC ***/
	  		return ( FAILURE );
			}

    if( DEBUG_MSG_LVL_2)
    {
     fn_userlog( c_ServiceName,"ISEC Before NON SPAN FOP_FO_OPTIONS_PSTN select NFO");  /*** Added in Ver 2.0 ***/
    }

	/*** VQC Hard Parse Changes ***/
			EXEC SQL 
					SELECT TRUNC(NVL(SUM(FOP_UEXCTD_MRGN + NVL(FOP_UDLVRY_MRGN,0)),0)) /** Ver 1.1 * Ver2.3 Added dlvry margin **/
					INTO  :d_opt_mrgn_req_nse
					FROM  FOP_FO_OPTIONS_PSTN 
					WHERE FOP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
/***					AND   FOP_XCHNG_CD = 'NFO'; 	*** Commented in VQC ***/
					AND   FOP_XCHNG_CD = :c_nfo_xchng_cd; 		/*** Added in VQC ***/

			if ( SQLCODE != 0 )
			{
	   		fn_errlog( c_ServiceName, "S31140",SQLMSG,c_err_msg.arr);	/*** .arr added in VQC ***/
	   		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FOP for NSE <%ld>", SQLCODE);
	   		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr ); 	/*** .arr added in VQC ***/
/***	   		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	Commented in VQC ***/
	   		return ( FAILURE );
			}

    if( DEBUG_MSG_LVL_2)
    {
     fn_userlog( c_ServiceName,"ISEC After NON SPAN FOP_FO_OPTIONS_PSTN select NFO");  /*** Added in Ver 2.0 ***/
    }

			d_total_mrgn_req_nse = d_fut_mrgn_req_nse + d_opt_mrgn_req_nse;
			if(DEBUG_MSG_LVL_3)
			{
			 fn_userlog(c_ServiceName,"total margin-nse(f+o)<%lf+ %lf>=<%lf>-Normal Client",d_fut_mrgn_req_nse,d_opt_mrgn_req_nse,d_total_mrgn_req_nse);
			}
			/*********  Margin Requirement calculation for NSE for Normal client End **********/
			/** Ver 1.2 Ends **/
	
		}
		else if (c_spn_flg == 'Y' ) /*** Ver 1.1 ***/
		{
	 	  
		  /*************  Commented Below part for Ver 1.2 Starts   *************/
		  /***********************************************************************
		  fn_userlog(c_ServiceName,"Inside SPAN Customer <%s>  For Computing Margin Req ",c_cln_mtch_accnt);

			EXEC SQL
          SELECT nvl(sum( (FUS_INITIAL_MRGN + FUS_BLCKD_PL )),0)   
          INTO  :d_total_mrgn_req
          FROM  FUS_FO_UNDRLYNG_SPN_PSTN
          WHERE FUS_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND		FUS_XCHNG_CD 			 = :c_xchng_cd;

      if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31145",SQLMSG,c_err_msg);
        fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FUS<%ld>", SQLCODE);
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
        return ( FAILURE );
      }

      fn_userlog(c_ServiceName,"Val of total margin (future+option)required = <%lf>", d_total_mrgn_req);
      *****************************************************************/
      /***** Commented part Ends for Ver 1.2   *****/
    
      /** Ver 1.2 Starts **/

      if(DEBUG_MSG_LVL_3)
      {
       fn_userlog(c_ServiceName,"Inside SPAN Customer <%s>  For Computing Margin Req ",c_cln_mtch_accnt);
      }

      /*********  Margin Requirement calculation for BSE & NSE for SPAN client Start **********/

      if (c_bsespn_flg == 'Y')  /** Added condition -POST UAT - for SPAN BSE Orders **/
      {
			/*** Commented in ver 1.3 ***
      EXEC SQL
          SELECT nvl(sum( (FUS_INITIAL_MRGN + FUS_BLCKD_PL )),0) *** Blocked PL is Add Mrgn In SPAN ***
          INTO  :d_total_mrgn_req_bse
          FROM  FUS_FO_UNDRLYNG_SPN_PSTN
          WHERE FUS_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FUS_XCHNG_CD = 'BFO';
			***/

     if( DEBUG_MSG_LVL_2)
     {
       fn_userlog( c_ServiceName,"ISEC Before Select SPAN  FUS_FO_UNDRLYNG_SPN_PSTN BFO");  /*** Added in Ver 2.0 ***/
     }   

      /*******Commented in Ver 2.1***
			*** Ver 1.3 starts ***
			 EXEC SQL
					SELECT nvl(sum(TOT_MRGN_BSE),0) 
 				  INTO	 :d_total_mrgn_req_bse
					FROM 
					(
						SELECT nvl(sum( (FUS_INITIAL_MRGN + FUS_BLCKD_PL )),0)  AS TOT_MRGN_BSE *** Blocked PL is Add Mrgn In SPAN **
						FROM  FUS_FO_UNDRLYNG_SPN_PSTN
						WHERE FUS_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
						AND   FUS_XCHNG_CD = 'BFO'
						UNION ALL
						SELECT trunc(nvl( sum((FUP_UTRD_MRGN + FUP_ADD_MRGN_VAL)), 0))	AS TOT_MRGN_BSE	*** SPAN FuturePLUS margin **
						FROM  FUP_FUT_UNDRLYNG_PSTN
						WHERE FUP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
						AND   FUP_PRDCT_TYP = 'P'
						AND   FUP_XCHNG_CD = 'BFO'
					); 
			*** Ver 1.3 ends ***

      if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog( c_ServiceName, "S31150",SQLMSG,c_err_msg);
        fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FUS for BSE <%ld>", SQLCODE);
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
        return ( FAILURE );
      }

     **********************************************/

     if( DEBUG_MSG_LVL_2)
     {
       fn_userlog( c_ServiceName,"ISEC After Select SPAN  FUS_FO_UNDRLYNG_SPN_PSTN BFO");  /*** Added in Ver 2.0 ***/
     }  
   
      }

      /** Added part -POST UAT - for SPAN BSE Orders -- Starts  **/
      if (c_bsespn_flg == 'N')
      {

     if(DEBUG_MSG_LVL_2)
     {
       fn_userlog(c_ServiceName,"ISEC Before FUP_FUT_UNDRLYNG_PSTN select BFO  "); /*** Added in Ver 2.0 ***/
     }


   /******Commented  in Ver 2.1 ****** 

			EXEC SQL 
				SELECT trunc(nvl( sum((FUP_UTRD_MRGN + FUP_ADD_MRGN_VAL)), 0)) ** Ver 1.1 **
			 		INTO :d_fut_mrgn_req_bse
			 		FROM  FUP_FUT_UNDRLYNG_PSTN
			 		WHERE FUP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FUP_XCHNG_CD = 'BFO'; 

			if ( SQLCODE != 0 )
			{
	  		fn_errlog( c_ServiceName, "S31155",SQLMSG,c_err_msg);
	  		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FUP for BSE -SPAN <%ld>", SQLCODE);
	  		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	  		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	  		return ( FAILURE );
			}

      if(DEBUG_MSG_LVL_2)
      {
        fn_userlog(c_ServiceName,"ISEC Before FOP_FO_OPTIONS_PSTN select BFO "); *** Added in Ver 2.0 ***
      }    

			EXEC SQL 
					SELECT trunc(nvl(sum(FOP_UEXCTD_MRGN),0)) ** Ver 1.1 **
					INTO  :d_opt_mrgn_req_bse
					FROM  FOP_FO_OPTIONS_PSTN 
					WHERE FOP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FOP_XCHNG_CD = 'BFO';

			if ( SQLCODE != 0 )
			{
	   		fn_errlog( c_ServiceName, "S31160",SQLMSG,c_err_msg);
	   		fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FOP for BSE _SPAN<%ld>", SQLCODE);
	   		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
	   		Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );
	   		return ( FAILURE );
			}
     
    *********************************************************/ 

			d_total_mrgn_req_bse = d_fut_mrgn_req_bse + d_opt_mrgn_req_bse;
			if(DEBUG_MSG_LVL_3)
			{
			 fn_userlog(c_ServiceName,"total margin-bse(f+o)<%lf+ %lf>=<%lf> For SPAN client with Norm-BSE",d_fut_mrgn_req_bse,d_opt_mrgn_req_bse,d_total_mrgn_req_bse);
			}
      }
      /** Added part -POST UAT - for SPAN BSE Orders -- Ends  **/

			/*** Commented in Ver 1.3 ***
      EXEC SQL
          SELECT nvl(sum( (FUS_INITIAL_MRGN + FUS_BLCKD_PL )),0) *** Blocked PL is Add Mrgn In SPAN ***
          INTO  :d_total_mrgn_req_nse
          FROM  FUS_FO_UNDRLYNG_SPN_PSTN
          WHERE FUS_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
					AND   FUS_XCHNG_CD = 'NFO';
			***/

     if(DEBUG_MSG_LVL_2)
     {
       fn_userlog(c_ServiceName,"ISEC Before FUS_FO_UNDRLYNG_SPN_PSTN select NFO "); /*** Added in Ver 2.0 ***/
     }

	/*** VQC Hard Parse Changes ***/
			/*** Ver 1.3 starts ***/
			EXEC SQL
					SELECT NVL(SUM(TOT_MRGN_NSE),0) 
					INTO  :d_total_mrgn_req_nse
					FROM
					(
						SELECT NVL(SUM( (FUS_INITIAL_MRGN + FUS_BLCKD_PL )),0) AS TOT_MRGN_NSE /*** Blocked PL is Add Mrgn In SPAN ***/
						FROM  FUS_FO_UNDRLYNG_SPN_PSTN
						WHERE FUS_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
/***						AND   FUS_XCHNG_CD = 'NFO'	*** Commented in VQC ***/
						AND   FUS_XCHNG_CD = :c_nfo_xchng_cd    /*** Added in VQC ***/
						UNION ALL
						SELECT TRUNC(NVL( SUM((FUP_UTRD_MRGN + FUP_ADD_MRGN_VAL)), 0)) AS TOT_MRGN_NSE	/*** SPAN FuturePLUS margin ***/
						FROM  FUP_FUT_UNDRLYNG_PSTN
						WHERE FUP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
						AND   FUP_PRDCT_TYP = 'P'
/***						AND   FUP_XCHNG_CD = 'NFO'	*** Commented in VQC ***/
						AND   FUP_XCHNG_CD = :c_nfo_xchng_cd		/*** Added in VQC ***/
            /** Ver 2.3 Starts **/
            UNION ALL
            SELECT trunc(nvl( sum(NVL(FCP_UDLVRY_MRGN,0)),0)) AS TOT_MRGN_NSE
            FROM FCP_FO_SPN_CNTRCT_PSTN
            WHERE FCP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
            AND   FCP_PRDCT_TYP = 'O'
/***            AND   FCP_XCHNG_CD  ='NFO'  *** Commented in VQC  ***/
            AND  FCP_XCHNG_CD  = :c_nfo_xchng_cd
            AND   FCP_OPNPSTN_FLW ='B'
            /** Ver 2.3 Ends **/
					);
			/*** Ver 1.3 ends ***/
			
      if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31165",SQLMSG,c_err_msg.arr);	/*** .arr added in VQC ***/
        fn_userlog(c_ServiceName,"Error in selecting mrgn amt from FUS for BSE <%ld>", SQLCODE);
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );	/*** .arr added in VQC ***/
/***        Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	Commented in VQC ***/
        return ( FAILURE );
      }
     
      if(DEBUG_MSG_LVL_2)
      {
        fn_userlog(c_ServiceName,"ISEC After FUS_FO_UNDRLYNG_SPN_PSTN select NFO "); /*** Added in Ver 2.0 ***/
      }
 
      if(DEBUG_MSG_LVL_3)
      fn_userlog(c_ServiceName,"Total margin required -SPAN(BSE =<%lf>",d_total_mrgn_req_bse);
      fn_userlog(c_ServiceName,"Total margin required -SPAN(NSE =<%lf>",d_total_mrgn_req_nse);
      /*********  Margin Requirement calculation for BSE & NSE for SPAN client End **********/

      /****** Ver 1.2 Ends *********/
		}
    
    /*****   Commented below part for Ver 1.2   Starts    ****************/
    /**********************************************************************
    d_appl_mrgn_amt =  (d_total_mrgn_req == 0) ? 0 : (d_total_mrgn_req - d_old_plg_amt);
   
    if(d_appl_mrgn_amt <= 0)      {
		  fn_userlog(c_ServiceName,"Val of d_appl_mrgn_amt in case all is adjusted from plg amt <%lf>", d_appl_mrgn_amt);
		  d_appl_mrgn_amt = 0; 
		}
		fn_userlog(c_ServiceName,"Val of d_appl_mrgn_amt aftr considering plg amt <%lf>", d_appl_mrgn_amt);

		d_diff_isec_mrgn_amt = d_old_isec_mrgn_amt - d_appl_mrgn_amt ; 
		if(( d_diff_isec_mrgn_amt  >=  ( d_old_alctd_amt + d_old_bft_amt + d_old_isec_mrgn_amt )) && c_path == 'B')
		{
		   d_appl_mrgn_amt = 	(d_old_alctd_amt + d_old_bft_amt + d_old_isec_mrgn_amt);
		   d_new_alctd_amt = 0 ; 
		   d_new_bft_amt = 0;
       d_new_isec_mrgn_amt = d_diff_isec_mrgn_amt;
		   
			 fn_userlog(c_ServiceName,"Val of d_appl_mrgn_amt in case of exceeding applicable amt <%lf>", d_appl_mrgn_amt);
		   fn_userlog(c_ServiceName,"Val of d_new_alctd_amt in case of exceeding applicable amt <%lf>", d_new_alctd_amt);
		   fn_userlog(c_ServiceName,"Val of d_new_bft_amt   in case of exceeding applicable amt <%lf>", d_new_bft_amt);
		   fn_userlog(c_ServiceName,"Val of d_new_isec_mrgn_amt in case of exceeding applicable amt <%lf>",d_new_isec_mrgn_amt);
		}
		else
		{
			d_new_plg_amt		=  d_old_plg_amt;

			d_diff_isec_mrgn_amt = d_old_isec_mrgn_amt - d_appl_mrgn_amt ; 
			if (d_diff_isec_mrgn_amt > 0)
			{
			  c_batch_dbcr_ind = 'C';
			  fn_userlog(c_ServiceName,"Difference of  OLD ISEC and new required ISEC is positive<%lf>:Release amt", d_diff_isec_mrgn_amt);
			}	
			if (d_diff_isec_mrgn_amt < 0)
			{
  			c_batch_dbcr_ind = 'D';
			  fn_userlog(c_ServiceName,"Difference of OLD ISEC and new required ISEC is negative<%lf>:Block ISEC", d_diff_isec_mrgn_amt);
			}	
		
			if (c_path == 'S')  
			{
		 		d_new_bft_amt = d_old_bft_amt ;
		  	fn_userlog(c_ServiceName,"Val of d_new_bft_amt if c_path =S  <%lf>", d_new_bft_amt);

				d_new_isec_mrgn_amt  = (d_diff_isec_mrgn_amt <= 0 ) ? 0 : d_diff_isec_mrgn_amt;
				fn_userlog(c_ServiceName,"Val of releasable d_new_isec_mrgn_amt aftr all calculatn for site level<%lf>", d_new_isec_mrgn_amt);

				d_new_alctd_amt = d_old_alctd_amt + d_new_isec_mrgn_amt;
				fn_userlog(c_ServiceName,"Val of d_new_alctd_amt to be reflected after margin release for site <%lf>", d_new_alctd_amt);
			} 
		}
		*************************************************************************/
		/********* Commented Part for Ver 1.2 Ends   ****************************/

		/**********  Ver 1.2 Starts  ***************************/
    /* #################################################################################################### */
    /**************   Main Block for Calculation of Margin to be blocked under BSE & NSE Starts *************/ 
    /* #################################################################################################### */

    /************************************** STEP -1 ******************************************/		
    /*******    To Adjust required ISEC margin amount from Pledge amount           ***********/
    /*****************************************************************************************/

    /******************************************************************************************
    d_appl_mrgn_amt_bse => Amount left to be blocked after considering pledge amount for BSE 	
    d_old_plg_amt_nse   => Amount left in Pledge for NSE margin to consider after used in BSE requirement
    d_appl_mrgn_amt_nse => Amount left to be blocked after considering pledge amount for NSE	
    ******************************************************************************************/

    /*** Comment in Ver 1.5 Starts Here *****************************
    d_appl_mrgn_amt_bse =   (d_total_mrgn_req_bse == 0) ? 0 : (d_total_mrgn_req_bse - d_old_plg_amt);
    d_old_plg_amt_nse   =   ((d_old_plg_amt - d_total_mrgn_req_bse) <= 0 ) ? 0 :  (d_old_plg_amt - d_total_mrgn_req_bse);
    d_appl_mrgn_amt_nse =   (d_total_mrgn_req_nse == 0) ? 0 : (d_total_mrgn_req_nse - d_old_plg_amt_nse);
    ************ Ver 1.5 Comment Ends here **********************************/

    /************* Ver 1.5 Starts here
    Since from FDR Module, the ordering of Isec Margin adjustment is changed, first FDR amount shall be consider
    followed by existing pledge amount.
    ************************************************************************************************************/

    d_appl_mrgn_amt_bse = (d_total_mrgn_req_bse == 0) ? 0 : (d_total_mrgn_req_bse - d_old_fdr_amt);

    if( d_appl_mrgn_amt_bse <= 0 )
    {
      d_old_fdr_amt_nse = d_old_fdr_amt - d_total_mrgn_req_bse;
      d_old_plg_amt_nse = d_old_plg_amt;
    }
    else
    {
      d_old_fdr_amt_nse = 0;
      d_appl_mrgn_amt_bse = d_appl_mrgn_amt_bse - d_old_plg_amt;
      if( d_appl_mrgn_amt_bse <= 0 )
      {
        d_old_plg_amt_nse = d_old_plg_amt - d_appl_mrgn_amt_bse;
      }
      else
      {
        d_old_plg_amt_nse = 0;
      }
    }

		if(DEBUG_MSG_LVL_3)			/** Added Debug Level in VQC **/
		{
    	fn_userlog(c_ServiceName," d_appl_mrgn_amt_bse :%lf:", d_appl_mrgn_amt_bse);
    	fn_userlog(c_ServiceName," d_old_fdr_amt_nse   :%lf:", d_old_fdr_amt_nse );
    	fn_userlog(c_ServiceName," d_old_plg_amt_nse   :%lf:", d_old_plg_amt_nse );
		}

    d_appl_mrgn_amt_nse =   (d_total_mrgn_req_nse == 0) ? 0 : (d_total_mrgn_req_nse - d_old_fdr_amt_nse - d_old_plg_amt_nse);

    /*** Ver 1.5 Ends Here ****/

    d_new_plg_amt       = d_old_plg_amt;
    d_new_fdr_amt       = d_old_fdr_amt;   /** Ver 1.5 **/
    
    if(d_appl_mrgn_amt_bse <= 0)  /** If required bse isec mrgn is adjusted only from pledge amount **/
    {
		  fn_userlog(c_ServiceName,"Required margin for BSE is adjusted totally from plg amt ");
		  d_appl_mrgn_amt_bse = 0; 		  
		}
    if(d_appl_mrgn_amt_nse <= 0)  /** If required nse isec mrgn is adjusted only from pledge amount **/
    {
		  fn_userlog(c_ServiceName,"Required margin for NSE is adjusted totally from plg amt ");
		  d_appl_mrgn_amt_nse = 0; 
		}
		if(DEBUG_MSG_LVL_3)
		{
		 fn_userlog(c_ServiceName,"Val of d_appl_mrgn_amt_bse aftr considering plg amt <%lf>", d_appl_mrgn_amt_bse);
		 fn_userlog(c_ServiceName,"Val of d_appl_mrgn_amt_nse aftr considering plg amt <%lf>", d_appl_mrgn_amt_nse);
		}

		/************************************** STEP -2 ******************************************/		
		/*****    To Adjust Left ISEC margin amount to be blocked from Old ISEC amount    ********/
		/*****************************************************************************************/
		/* First Check the diff of Old and new required ISEC margin */

		if(DEBUG_MSG_LVL_3)
		{
	 		fn_userlog(c_ServiceName,"Val of d_old_isec_mrgn_amt_bse  <%lf>", d_old_isec_mrgn_amt_bse);
	 		fn_userlog(c_ServiceName,"Val of d_old_isec_mrgn_amt_nse  <%lf>", d_old_isec_mrgn_amt_nse);
		}
	
    d_diff_isec_mrgn_amt_bse = d_old_isec_mrgn_amt_bse - d_appl_mrgn_amt_bse ;
    d_diff_isec_mrgn_amt_nse = d_old_isec_mrgn_amt_nse - d_appl_mrgn_amt_nse ;

    if (d_diff_isec_mrgn_amt_bse > 0)
    {
       c_dbcr_ind_bse = 'C';
       fn_userlog(c_ServiceName,"Diff OLD ISEC & new reqd ISEC for BSE is positive<%lf> :CREDIT CASE-BSE", d_diff_isec_mrgn_amt_bse);
    }
    if (d_diff_isec_mrgn_amt_nse > 0)
    {
       c_dbcr_ind_nse = 'C';
       fn_userlog(c_ServiceName,"Diff OLD ISEC & new reqd ISEC for NSE is positive<%lf> :CREDIT CASE-NSE", d_diff_isec_mrgn_amt_nse);
    }

    if (d_diff_isec_mrgn_amt_bse >=0 && d_diff_isec_mrgn_amt_nse >= 0 )
    {
    	d_new_isec_mrgn_amt = d_diff_isec_mrgn_amt_bse + d_diff_isec_mrgn_amt_nse;
			if ( d_new_isec_mrgn_amt > 0.0 )  /*** Ver 1.4 If condition added  ***/            
			{
    		c_show_link = 'Y';
			}
			else 
			{
    		c_show_link = 'N';
			}

    		fn_userlog(c_ServiceName,"Val of d_new_isec_mrgn_amt & c_show_link <%lf> <%c>", d_new_isec_mrgn_amt, c_show_link);
    }
    else
    {
    	c_show_link = 'N';

    		fn_userlog(c_ServiceName,"Val of c_show_link <%c>", c_show_link);
    }
    /***************************************************************************************************/
    if (d_diff_isec_mrgn_amt_bse < 0)
    {
       c_dbcr_ind_bse = 'D';
       fn_userlog(c_ServiceName,"Diff OLD ISEC & new reqd ISEC for BSE is Negative<%lf> :DEBIT CASE-BSE", d_diff_isec_mrgn_amt_bse);
    }
    if (d_diff_isec_mrgn_amt_nse < 0)
    {
       c_dbcr_ind_nse = 'D';
       fn_userlog(c_ServiceName,"Diff OLD ISEC & new reqd ISEC for NSE is Negative<%lf> :DEBIT CASE-NSE", d_diff_isec_mrgn_amt_nse);
    }
    /***************************************************************************************************/
    if ( (d_diff_isec_mrgn_amt_bse == 0  && d_diff_isec_mrgn_amt_nse == 0 ) && (c_path == 'B' || c_path == 'S'))
    {
      fn_userlog(c_ServiceName,"No amount to be released or blocked from Site for-BSE & NSE for <%s>", c_cln_mtch_accnt);      
    }
    /***************************************************************************************************/

		/**********  Ver 1.2 Ends  ***************************/

	} 

    /**********  Ver 2.4 Starts Here  ********************/
  EXEC SQL
  select NVL(FSP_PEAKMRGN_ENBLFLG,'N')
  INTO :c_peak_enblflg
  FROM FSP_FO_SYSTM_PRMTR;

  if ( SQLCODE != 0 )
  {
     fn_errlog( c_ServiceName, "S31170",SQLMSG,c_err_msg.arr);
      fn_userlog(c_ServiceName,"Error in fetching data");
  }
  if( c_peak_enblflg == 'Y')
  {

  if(DEBUG_MSG_LVL_3)
  {
   fn_userlog(c_ServiceName,"To Select Peak Margin Amount ");
	 fn_userlog(c_ServiceName,"c_trd_dt_nse :%s:",c_trd_dt_nse);
  }
   EXEC SQL
    SELECT NVL(FCB_DAY_PEAK_MARGIN,0),
           NVL(FCB_PEAK_MARGIN_DEBIT,0)
    INTO   :d_peak_margin_amount,
           :d_peak_mrgn_alrd_debit
    FROM   FCB_FO_CLNT_BLNCS
    WHERE  FCB_XCHNG_CD = 'NFO'
    AND    FCB_TRD_DT = :c_trd_dt_nse
    AND    FCB_GRP_ID = '1'
    AND    FCB_CLM_MTCH_ACCNT = :c_cln_mtch_accnt;
  
  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
  {
     fn_errlog( c_ServiceName, "S31175",SQLMSG,c_err_msg.arr);  
     fn_userlog(c_ServiceName,"Error in selecting FCB_DAY_PEAK_MARGIN <%ld> ", SQLCODE);
     fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr ); 
     return ( FAILURE );
  }
	if( SQLCODE == NO_DATA_FOUND )
	{
		d_peak_margin_amount=0.00;
	}
  if(DEBUG_MSG_LVL_3)              
  {
     fn_userlog(c_ServiceName," The FCB_DAY_PEAK_MARGIN is <%lf>",d_peak_margin_amount);
  }

     if(DEBUG_MSG_LVL_3)
  {
   fn_userlog(c_ServiceName,"To Calculate Peak Margin Amount to be Debited");
   fn_userlog(c_ServiceName," The Value of d_peak_margin_amount is <%lf>",d_peak_margin_amount);
   fn_userlog(c_ServiceName," The Value of d_old_isec_mrgn_amt  is <%lf>",d_old_isec_mrgn_amt); 
   fn_userlog(c_ServiceName," The Value of d_old_fdr_amt is <%lf>",d_old_fdr_amt); 
   fn_userlog(c_ServiceName," The Value of d_old_plg_amt is <%lf>",d_old_plg_amt);
  }

    d_peak_margin_to_be_debited = d_peak_margin_amount - d_old_isec_mrgn_amt - d_old_fdr_amt - d_old_plg_amt;
  
    if ( d_peak_margin_to_be_debited  < 0 )
    {
    d_peak_margin_to_be_debited = 0.00;
    }
    
    if(DEBUG_MSG_LVL_3)
  {
     fn_userlog(c_ServiceName," The Value of d_peak_margin_to_be_debited is <%lf>",d_peak_margin_to_be_debited);
  }
 
 
	  if(DEBUG_MSG_LVL_3)
    {
      fn_userlog(c_ServiceName,"To get c_show_PayPeak_Margin_link");
      fn_userlog(c_ServiceName,"Val of d_peak_margin_to_be_debited  <%lf>",d_peak_margin_to_be_debited );
    }

    if ( d_peak_margin_to_be_debited  > d_peak_mrgn_alrd_debit )  
      {
        c_show_PayPeak_Margin_link  = 'Y';
      }
      else
      {
        c_show_PayPeak_Margin_link = 'N';
      }  
      fn_userlog(c_ServiceName,"Val of c_show_PayPeak_Margin_link <%c>", c_show_PayPeak_Margin_link );
    }
   
    /**********  Ver 2.4 Ends Here  ********************/   

  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg.arr ) == -1 )	/*** .arr added in VQC ***/
  {
    fn_errlog( c_ServiceName, "S31180",LIBMSG,c_err_msg.arr);	/*** .arr added in VQC ***/
    fn_userlog(c_ServiceName,"Error in initial commit tran --1 ");
/***   	Fadd32( ptr_fml_Obuf,FFO_ERR_MSG, c_err_msg, 0 );	Commented in VQC ***/
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );	/*** .arr added in VQC ***/
/***    strcpy ( c_msg, "System error. Contact system support" );		*** Commented in VQC ***/
/***    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );		*** Commented in VQC ***/
    return ( -1 );
  }


	if(DEBUG_MSG_LVL_3)     /*** DEBUG_MSG_LVL Added in VQC ***/
 	{
		fn_userlog(c_ServiceName,"After Completion of fn_upd_amc_tbl");           
	}
 return ( SUCCESS );             
                              
}

