/******************************************************************************/
/*	Program	    			:	SFO_GT_TMPORDRC                                       */
/*                                                                            */
/*  Input             : FFO_XCHNG_CD                                          */
/*                      FFO_TRD_DT                                            */
/*                                                                            */
/*  Output            : FFO_SPRD_ORD_REF                                      */
/*                      FFO_EBA_MTCH_ACT_NO                                   */
/*                                                                            */
/*  Description       : To get the records for validating the temp order      */
/*                      and pass it on to the Calling batch program           */
/*                                                                            */
/*  Log               :                                                       */
/*                                                                            */
/******************************************************************************/
/* 29-May-2002     Ver 1.0        Vinod Banjan      Release 1.0               */
/* 03-Mar-2008		 Ver 1.1			  Sandeep Patil			IBM CHANGES								*/
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
/*Add header files here */

#include <fo.h>
#include <fo_fml_def.h>
#include <fml_def.h>
#include <fn_battmpt.h>
#include <fn_tuxlib.h>							 /*** Ver 1.1 ***/
#include <fn_log.h>									 /*** Ver 1.1 ***/
#include <fn_read_debug_lvl.h>			/*** Ver 1.1 ***/

void SFO_GT_TMPORDRC( TPSVCINFO *rqst )
{

  FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;

  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];

  int i_returncode;

  EXEC SQL BEGIN DECLARE SECTION;
    char c_xchng_cd [ 4 ];
    char sql_tmp_ordr_rfrnc [ 19 ];
    char sql_clm_mtch_accnt [ 11 ];
    char c_trd_dt [ LEN_DATE ];
  EXEC SQL END DECLARE SECTION;

  ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
  strcpy( c_ServiceName, rqst->name );

	INITDBGLVL(c_ServiceName);			 /*** Ver 1.1 ***/

  i_returncode = fn_unpack_fmltovar ( c_ServiceName,
                                    c_err_msg,
                                    ptr_fml_Ibuf,
                                    2,
                                    FFO_XCHNG_CD, ( char * )c_xchng_cd, NULL,
                                    FFO_TRD_DT, (char * )c_trd_dt, NULL);

  if( i_returncode != 0 )
  {
    fn_errlog( c_ServiceName, "S31005", LIBMSG , c_err_msg );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
  }

  if (DEBUG_MSG_LVL_3)			 /*** Ver 1.1 ***/
	{
  	fn_userlog( c_ServiceName, "I/P Exchange code :%s:", c_xchng_cd );
    fn_userlog( c_ServiceName, "I/P Trade date   :%s:", c_trd_dt );
  }

	ptr_fml_Obuf = NULL;

  EXEC SQL
   DECLARE cur_tmpord_rec CURSOR FOR
   	SELECT  fto_tmp_ordr_rfrnc,
						fto_clm_mtch_accnt
		FROM		fto_fo_tmp_ord_dtls
    WHERE   fto_xchng_cd = :c_xchng_cd
    AND     fto_trd_dt = to_date (:c_trd_dt,'DD-Mon-YYYY')
    AND     fto_ordr_stts  =  'U'
    AND     fto_rms_prcsd_flg  !=  'P'
    ORDER BY fto_tmp_ordr_rfrnc ASC;

  EXEC SQL
   OPEN cur_tmpord_rec;

  if( SQLCODE != 0 )
  {
    fn_errlog( c_ServiceName, "S31010", SQLMSG, c_err_msg );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  while(1)
  {
    EXEC SQL
     FETCH cur_tmpord_rec
     INTO :sql_tmp_ordr_rfrnc,
					:sql_clm_mtch_accnt;

		if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog( c_ServiceName, "S31015", SQLMSG, c_err_msg );
      EXEC SQL
      	CLOSE cur_tmpord_rec;
      tpfree ( ( char * ) ptr_fml_Obuf );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    if( SQLCODE == NO_DATA_FOUND )
    {
      break;
    }

		rtrim(sql_tmp_ordr_rfrnc);

    i_returncode = fn_pack_vartofml( c_ServiceName,
                                     c_err_msg,
                                     &ptr_fml_Obuf,
                                     2,
                           FFO_SPRD_ORD_REF, ( char * )sql_tmp_ordr_rfrnc,
                           FFO_EBA_MTCH_ACT_NO, ( char * )sql_clm_mtch_accnt);

    if( i_returncode == -1 )
    {
      fn_errlog( c_ServiceName, "S31020", LIBMSG, c_err_msg );
      EXEC SQL
         CLOSE cur_tmpord_rec;
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
    }
  }

  EXEC SQL
    CLOSE cur_tmpord_rec;

  fn_userlog( c_ServiceName, "Successfuly fetched records" );
  tpreturn(TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_Obuf, 0, 0 );
}
