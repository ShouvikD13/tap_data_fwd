/************************************************************************************/
/*	Program	    			:	SFO_EXREQ_TCONF                                       			*/
/*                                                                            			*/
/*  Input             : FFO_EBA_MTCH_ACT_NO                                  	 			*/
/*                      FFO_XCHNG_CD                                          			*/
/*                      FFO_INSTRMNT_TYP                                      			*/
/*                      FFO_SYMBOL                                            			*/
/*                      FFO_EXPRY_DT                                          			*/
/*                      FFO_OPTION_TYP                                        			*/
/*                      FFO_STRIKE_PRC                                       		  	*/
/*                      FFO_CA_LVL                                            			*/
/*                      FFO_TRD_DT                                           			  */
/*                      FFO_EXEC_QTY                                         			  */
/*                      FFO_OPNPSTN_QTY                                      			  */
/*                      FFO_EXER_INIT                                        			  */
/*                      FFO_BAT_TAG                                                 */
/*                      FFO_REC_NO                                                  */
/*                      FFO_ROUT_CRT                                                */
/*                                                                                  */
/*  Output            :                                                             */
/*                                                                                  */
/*  Description       : This service inserts the exercise confirmation data         */
/*                      received from Match in exercise confirmation table          */
/*                      and then calls the update position service to update        */
/*                      the position.                                               */
/*                                                                                  */
/*  Log               :                                                             */
/*                                                                                  */
/************************************************************************************/
/*     18-Jan-2002       Ver 1.0        S.Balamurugan      Release 1.0              */
/*		 20-Dec-2007			 Ver 1.1				Ranjit						 IBM Migration			      */			
/*		 29-Nov-2008			 Ver 1.2				Shailesh 					 Provision  Adhoc-expiry  */
/*		 21-Sep-2010			 Ver 1.3				Venture/Shamili    Lot size changes         */
/*		 20-Jul-2011			 Ver 1.4				Navina D.					 Span changes							*/
/*		 24-Feb-2012			 Ver 1.5				Sandip T.					 BSE changes							*/
/*     23-Feb-2013       Ver 1.6        Sachin B.     Game backoffice Automation    */     
/*     13-Jul-2015       Ver 1.7        Anand Dhopte  FCM-FTQ Merger Changes        */
/*     07-Mar-2023       Ver 1.8        Vipul Sharma  Changing fn_lock_usr to 			*/
/*																										fn_lock_fno									  */
/************************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
/*Add header files here */
#include <fo_fml_def.h>
#include <fo.h>
#include <fn_log.h>
#include <fo_view_def.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_session.h>  /* Ver 1.1 */
#include <fn_read_debug_lvl.h>	/* ver 1.1 */
#include <fml_rout.h>		/* Ver 1.4 */
#include <fn_pos.h>       /** Ver 1.6 ***/

void SFO_EXREQ_TCONF( TPSVCINFO *rqst )
{

	FBFR32 *ptr_fml_Ibuf;

	char c_ServiceName [33];
  char c_err_msg [256];
	int i_returncode;
	int i_trnsctn;
	int i_ip_len;
	int i_op_len;
	char c_tag [ 256 ];
	char c_msg [ 256 ];
	long int li_rec_no;

	EXEC SQL BEGIN DECLARE SECTION; 
	struct vw_mtch_cntrct st_mtch_cntrct;
	struct vw_exrcbook st_exrcbook;
	struct vw_contract st_contract;
	struct vw_pstn_actn st_pstn_actn;
	
	int i_rec_exists;
	int i_date_diff;
	long int li_und_close_prc;
	char c_exer_init;
	long l_lot_size=0;				/* Ver 1.3 */
	char c_span_flag = '\0';  /* Ver 1.4 */
	char c_bse_span_flag = '\0';  /* Ver 1.5 */
	EXEC SQL END DECLARE SECTION;

  /**** Ver 1.6 Starts ****/
  char c_program_nm[33];
  char c_xchng_cd_tmp[4];
  char c_match_id[11];
  char c_error_txt[256];

  MEMSET(c_program_nm);
  MEMSET(c_xchng_cd_tmp);
  MEMSET(c_match_id);
  MEMSET(c_error_txt);
  
  strcpy(c_program_nm,"bat_exer_pstn");

  /**** Ver 1.6 Ends ***/

	ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
	strcpy( c_ServiceName, "SFO_EXREQ_TCONF" );
	INITDBGLVL(c_ServiceName);	/* ver 1.1 */

	i_returncode = Fvftos32( ptr_fml_Ibuf,
													 ( char * )&st_mtch_cntrct,
                           "vw_mtch_cntrct" );
	if( i_returncode == -1 )
	{
    fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
		tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );		
	}

  /*** Added for Order Routing ***/
  fn_init_ddr_val ( st_mtch_cntrct.c_rout_crt );
	
  i_returncode = fn_unpack_fmltovar ( c_ServiceName,
                                      c_err_msg,
																		  ptr_fml_Ibuf,
																		  7,
					 FFO_EBA_MTCH_ACT_NO, ( char * )st_exrcbook.c_cln_mtch_accnt, NULL,
					 FFO_TRD_DT, ( char * )st_exrcbook.c_trd_dt, NULL,
					 FFO_EXEC_QTY, (char * )&st_exrcbook.l_exrc_qty, NULL,
					 FFO_OPNPSTN_QTY, ( char * )&st_exrcbook.l_opnpstn_qty, NULL,
					 FFO_EXER_INIT, ( char * )&c_exer_init,NULL,
					 FFO_BAT_TAG, ( char * )c_tag, NULL,
					 FFO_REC_NO, (char * )&li_rec_no, NULL);

	if( i_returncode != 0 )
	{
		fn_errlog( c_ServiceName, "S31010", LIBMSG , c_err_msg );
		Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
		tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
	}
																
	i_ip_len = sizeof( struct vw_mtch_cntrct );
	i_op_len = sizeof( struct vw_contract );

	st_mtch_cntrct.c_rqst_typ = MATCH_ID_TO_CONTRACT;

	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog( c_ServiceName, "c_cln_mtch_accnt [%s]",
																		st_exrcbook.c_cln_mtch_accnt );
		fn_userlog( c_ServiceName, "c_trd_dt [%s]",
																		st_exrcbook.c_trd_dt );
		fn_userlog( c_ServiceName, "l_exrc_qty [%ld]",
																		st_exrcbook.l_exrc_qty );
		fn_userlog( c_ServiceName, "l_opnpstn_qty [%ld]",
																		st_exrcbook.l_opnpstn_qty );
		fn_userlog( c_ServiceName, "c_exer_init [%c]",
																		c_exer_init);
		fn_userlog( c_ServiceName, "c_xchng_cd [%s]",
																		st_mtch_cntrct.c_xchng_cd );
		fn_userlog( c_ServiceName, "c_instrmnt_typ [%s]",
																		st_mtch_cntrct.c_instrmnt_typ );
		fn_userlog( c_ServiceName, "d_strike_prc:%lf", 
																		st_mtch_cntrct.d_strike_prc );
		fn_userlog( c_ServiceName, "c_symbol [%s]",
																		st_mtch_cntrct.c_symbol );
		fn_userlog( c_ServiceName, "c_expry_dt [%s]",
																		st_mtch_cntrct.c_expry_dt );
		fn_userlog( c_ServiceName, "c_opt_typ [%s]",
																		st_mtch_cntrct.c_opt_typ );
		fn_userlog( c_ServiceName, "l_ca_lvl [%ld]",
																		st_mtch_cntrct.l_ca_lvl );
		fn_userlog( c_ServiceName, "c_rqst_typ [%c]",
																		st_mtch_cntrct.c_rqst_typ );
	}
  
  strcpy(c_xchng_cd_tmp,st_mtch_cntrct.c_xchng_cd);   /** Ver 1.6 ***/
  strcpy(c_match_id,st_exrcbook.c_cln_mtch_accnt);    /** Ver 1.6 ***/

  /*** Added for Order Routing ***/
	fn_cpy_ddr ( st_mtch_cntrct.c_rout_crt );

	i_returncode = fn_call_svc( c_ServiceName,
                              c_err_msg,
                              &st_mtch_cntrct,
                              &st_contract,
                              "vw_mtch_cntrct",
                              "vw_contract",
                              i_ip_len,
                              i_op_len,
                              0,
                              "SFO_CNT_FOR_ENT" );

	if( i_returncode != SUCC_BFR )
	{
		fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    sprintf ( c_msg, "%ld - %s", li_rec_no, c_err_msg );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/ 
		tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
	}

	strcpy( st_exrcbook.c_xchng_cd, st_contract.c_xchng_cd );
	strcpy( st_exrcbook.c_undrlyng, st_contract.c_undrlyng );
	strcpy( st_exrcbook.c_expry_dt, st_contract.c_expry_dt );
	st_exrcbook.l_eba_cntrct_id = st_contract.l_eba_cntrct_id;
	st_exrcbook.c_prd_typ = st_contract.c_prd_typ;
	st_exrcbook.c_opt_typ = st_contract.c_opt_typ;
	st_exrcbook.l_strike_prc = st_contract.l_strike_prc;
	st_exrcbook.c_ctgry_indstk = st_contract.c_ctgry_indstk;
	st_exrcbook.l_ca_lvl = st_contract.l_ca_lvl;
	st_exrcbook.c_exrc_typ = st_contract.c_exrc_typ;

	EXEC SQL
		SELECT to_date (:st_exrcbook.c_expry_dt,'DD-Mon-YYYY') -
					 to_date (:st_exrcbook.c_trd_dt,'DD-Mon-YYYY')
		INTO :i_date_diff
		FROM DUAL ;

	if( SQLCODE != 0 )
 	{
   	fn_errlog( c_ServiceName, "S31020", SQLMSG, c_err_msg);
   	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
   	sprintf ( c_msg, "%ld record System error. Contact system support", 
																														li_rec_no );
   	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
   	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
 	}

	if ( c_exer_init == 'E' )
	{
		/***Commented for Ver 1.2
		if ( i_date_diff != 0 )
		{
    	fn_errlog( c_ServiceName,"S31025","Today is not the last day of contract",
																																	 c_err_msg);
    	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    	sprintf ( c_msg, "%ld record - Today is not the last day of contract", 
																																	li_rec_no );
    	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
		***/
		fn_userlog(c_ServiceName,"Skipped the check of date difference for record:%ld:",li_rec_no);
	}
	else if ( c_exer_init == 'C' )
	{
		if ( i_date_diff == 0 )
		{
    	fn_errlog( c_ServiceName,"S31030","Today is the last day of contract",
																																	 c_err_msg);
    	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    	sprintf ( c_msg, "%ld record - Today is the last day of contract", 
																																	li_rec_no );
    	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
	}
	else
	{
   	fn_errlog( c_ServiceName,"S31035","Invalid Exercise initiator type",
																																	 c_err_msg);
   	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
   	sprintf ( c_msg, "%ld record - Invalid Exercise initiator type", 
																																	li_rec_no );
   	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
   	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );

  if ( i_trnsctn == -1 )
  {
    fn_errlog( c_ServiceName, "S31040", LIBMSG, c_err_msg);
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    sprintf ( c_msg, "%ld record System error. Contact system support", 
																														li_rec_no );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/ 
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  /*i_returncode = fn_lock_usr( c_ServiceName,
                              st_exrcbook.c_cln_mtch_accnt ); Commneted in Ver 1.8*/
  i_returncode = fn_lock_fno( c_ServiceName,st_exrcbook.c_cln_mtch_accnt); /* Added in Ver 1.8 */
  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31045", LIBMSG, c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    sprintf ( c_msg, "%ld record System error. Contact system support", 
																														li_rec_no );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	/* Check whether the record received as input is already processed. */
	
	i_rec_exists = 0;

	EXEC SQL
		SELECT 1
		INTO :i_rec_exists
		FROM DUAL 
		WHERE EXISTS
			( SELECT 1
				FROM fec_fo_exrc_conf
				WHERE fec_clm_mtch_accnt = :st_exrcbook.c_cln_mtch_accnt
				AND 	fec_xchng_cd = :st_exrcbook.c_xchng_cd
				AND 	fec_prdct_typ = :st_exrcbook.c_prd_typ
				AND 	fec_undrlyng = :st_exrcbook.c_undrlyng
				AND 	fec_expry_dt = to_date (:st_exrcbook.c_expry_dt,'DD-Mon-YYYY')
				AND 	fec_exer_typ = :st_exrcbook.c_exrc_typ
				AND 	fec_opt_typ = :st_exrcbook.c_opt_typ
				AND 	fec_strk_prc = :st_exrcbook.l_strike_prc
				AND 	fec_exrc_dt = to_date (:st_exrcbook.c_trd_dt,'DD-Mon-YYYY')
			);

	if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog( c_ServiceName, "S31050", SQLMSG, c_err_msg );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    sprintf ( c_msg, "%ld record System error. Contact system support", 
																														li_rec_no );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/ 
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	if ( i_rec_exists == 1 )
	{
    fn_errlog( c_ServiceName, "S31055", "Record already processed", c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    sprintf ( c_msg, "%ld Record already processed", li_rec_no );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
    tpreturn(TPSUCCESS, SUCC_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	/*  From the input of the client match account, contract and Exercise 
	date find the exercise request reference no. */

	EXEC SQL
		SELECT feb_exrc_rfrnc_no
		INTO :st_exrcbook.c_exrc_ordr_rfrnc
		FROM 	feb_fo_exrc_rqst_book
		WHERE feb_clm_mtch_accnt = :st_exrcbook.c_cln_mtch_accnt
		AND 	feb_xchng_cd = :st_exrcbook.c_xchng_cd
		AND 	feb_prdct_typ = :st_exrcbook.c_prd_typ
		AND 	feb_undrlyng = :st_exrcbook.c_undrlyng
		AND 	feb_expry_dt = to_date (:st_exrcbook.c_expry_dt,'DD-Mon-YYYY')
		AND 	feb_exer_typ = :st_exrcbook.c_exrc_typ
		AND 	feb_opt_typ = :st_exrcbook.c_opt_typ
		AND 	feb_strk_prc = :st_exrcbook.l_strike_prc
		AND 	feb_trd_dt = to_date (:st_exrcbook.c_trd_dt,'DD-Mon-YYYY')
		AND 	feb_exrc_stts = 'O';

	if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog( c_ServiceName, "S31060", SQLMSG, c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    sprintf ( c_msg, "%ld record System error. Contact system support", 
																														li_rec_no );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	if( SQLCODE == NO_DATA_FOUND )
	{
/**Commented for Ver 2.1
		if ( i_date_diff != 0 )
		{
    	fn_errlog( c_ServiceName,"S31065","Today is not the last day of contract",
																																	 c_err_msg);
    	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    	sprintf ( c_msg, "%ld Today is not the last day of contract", li_rec_no );
    	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
		else
		{
			strcpy( st_exrcbook.c_exrc_ordr_rfrnc, "Exchange Initiated" );
		}
****/
			strcpy( st_exrcbook.c_exrc_ordr_rfrnc, "Exchange Initiated" );
	}
	else
	{
		if ( i_date_diff == 0 )
		{
    	fn_errlog( c_ServiceName,"S31070","Today is the last day of contract",
																																	 c_err_msg);
    	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    	sprintf ( c_msg, "%ld Today is not the last day of contract", li_rec_no );
    	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
	}
	
	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog(c_ServiceName, "c_xchng_cd :%s:",st_exrcbook.c_xchng_cd);
		fn_userlog(c_ServiceName, "c_prd_typ :%c:",st_exrcbook.c_prd_typ);
		fn_userlog(c_ServiceName, "c_ctgry_indstk :%c:",st_exrcbook.c_ctgry_indstk);
		fn_userlog(c_ServiceName, "c_undrlyng :%s:",st_exrcbook.c_undrlyng);
		fn_userlog(c_ServiceName, "c_trd_dt :%s:",st_exrcbook.c_trd_dt);
	}

	EXEC SQL
  	SELECT  fum_cls_prc
  	INTO    :li_und_close_prc
  	FROM    fum_fo_undrlyng_mstr
  	WHERE   fum_xchng_cd = :st_exrcbook.c_xchng_cd
  	AND     fum_prdct_typ = :st_exrcbook.c_prd_typ
  	AND     fum_ctgry_indstk = :st_exrcbook.c_ctgry_indstk
  	AND     fum_undrlyng = :st_exrcbook.c_undrlyng
  	AND			fum_cls_prc_dt = to_date(:st_exrcbook.c_trd_dt,'dd-Mon-yyyy');

	if ( SQLCODE != 0 )
  {
		if ( SQLCODE == NO_DATA_FOUND )
		{
    	fn_errlog( c_ServiceName, "S31075", SQLMSG, c_err_msg);
		}
		else
		{
    	fn_errlog( c_ServiceName, "S31080", SQLMSG, c_err_msg);
		}
   	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
   	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    sprintf ( c_msg, "%ld record System error. Contact system support", 
																														li_rec_no );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
   	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	st_exrcbook.c_oprn_typ = INSERT_ON_NEW_EXERCISE_REQUEST;
	

/******************************************************************************/
/*	Ver 1.3 start	*/

	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog(c_ServiceName, "c_xchng_cd :%s:",st_exrcbook.c_xchng_cd);
		fn_userlog(c_ServiceName, "c_prd_typ :%c:",st_exrcbook.c_prd_typ);
		fn_userlog(c_ServiceName, "c_ctgry_indstk :%c:",st_exrcbook.c_ctgry_indstk);
		fn_userlog(c_ServiceName, "c_undrlyng :%s:",st_exrcbook.c_undrlyng);
		fn_userlog(c_ServiceName, "c_expry_dt :%s:",st_exrcbook.c_expry_dt);		
		fn_userlog(c_ServiceName, "c_exrc_typ :%c:",st_exrcbook.c_exrc_typ);
		fn_userlog(c_ServiceName, "c_opt_typ :%c:",st_exrcbook.c_opt_typ);
		fn_userlog(c_ServiceName, "l_strike_prc :%ld:",st_exrcbook.l_strike_prc);
	}

  /*** Commented in Ver 1.7 ***
	
	EXEC SQL
		SELECT 		FCM_LOT_SZ
		INTO  		:l_lot_size
		FROM			FCM_FO_CNTRCT_MSTR
		WHERE	FCM_XCHNG_CD			= :st_exrcbook.c_xchng_cd                        
		AND 	FCM_PRDCT_TYP     =	:st_exrcbook.c_prd_typ                        
		AND 	FCM_INDSTK        =	:st_exrcbook.c_ctgry_indstk                    
		AND 	FCM_UNDRLYNG      =	:st_exrcbook.c_undrlyng                        
		AND 	FCM_EXPRY_DT      =	to_date (:st_exrcbook.c_expry_dt,'DD-Mon-YYYY')
		AND 	FCM_EXER_TYP      =	:st_exrcbook.c_exrc_typ                        
		AND 	FCM_OPT_TYP       =	:st_exrcbook.c_opt_typ                         
		AND 	FCM_STRK_PRC      =	:st_exrcbook.l_strike_prc;                      

  ******/
  /*** Ver 1.7 Starts ***/
  
   EXEC SQL
     SELECT FTQ_MIN_LOT_QTY
     INTO   :l_lot_size
     FROM   FTQ_FO_TRD_QT
     WHERE  FTQ_XCHNG_CD      = :st_exrcbook.c_xchng_cd
     AND    FTQ_PRDCT_TYP     = :st_exrcbook.c_prd_typ
     AND    FTQ_INDSTK        = :st_exrcbook.c_ctgry_indstk
     AND    FTQ_UNDRLYNG      = :st_exrcbook.c_undrlyng
     AND    FTQ_EXPRY_DT      = to_date (:st_exrcbook.c_expry_dt,'DD-Mon-YYYY')
     AND    FTQ_EXER_TYP      = :st_exrcbook.c_exrc_typ
     AND    FTQ_OPT_TYP       = :st_exrcbook.c_opt_typ
     AND    FTQ_STRK_PRC      = :st_exrcbook.l_strike_prc;

 
  /*** Ver 1.7 Ends   ***/ 

	if(DEBUG_MSG_LVL_0)
	{
  	fn_userlog(c_ServiceName,"Lot size :%ld:",l_lot_size);   
	}
   

	if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog( c_ServiceName, "S31085", SQLMSG, c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    sprintf ( c_msg, "%ld record System error. Contact system support", 
																														li_rec_no );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

		
/*	Ver 1.3 ends	*/	
/******************************************************************************/

	/* Insert the input data into FEC_FO_EXRC_CONF  */

  EXEC SQL
		INSERT INTO FEC_FO_EXRC_CONF
    (
    	fec_clm_mtch_accnt,
    	fec_xchng_cd,
    	fec_prdct_typ,
    	fec_indstk,
    	fec_undrlyng,
    	fec_expry_dt,
    	fec_exer_typ,
    	fec_opt_typ,
    	fec_strk_prc,
    	fec_ca_lvl,
    	fec_exrc_qty,
    	fec_exrc_dt,
    	fec_exrc_rfrnc_no,
    	fec_exrc_init,
    	fec_opn_pos_qty,
			fec_curr_mkt_prc,
			FEC_MIN_LOT_SIZE              /** 1.3 **/
    )
    VALUES 
    (
    	:st_exrcbook.c_cln_mtch_accnt,
    	:st_exrcbook.c_xchng_cd,
    	:st_exrcbook.c_prd_typ,
    	:st_exrcbook.c_ctgry_indstk,
    	:st_exrcbook.c_undrlyng,
    	to_date (:st_exrcbook.c_expry_dt,'DD-Mon-YYYY'),
    	:st_exrcbook.c_exrc_typ,
    	:st_exrcbook.c_opt_typ,
    	:st_exrcbook.l_strike_prc,
    	:st_exrcbook.l_ca_lvl,
    	:st_exrcbook.l_exrc_qty,
    	to_date (:st_exrcbook.c_trd_dt,'DD-Mon-YYYY'),
    	:st_exrcbook.c_exrc_ordr_rfrnc,
    	:c_exer_init,
    	:st_exrcbook.l_opnpstn_qty,
			:li_und_close_prc,
			:l_lot_size									/** 1.3 **/
    );

	if( SQLCODE != 0 )
  {
    fn_errlog( c_ServiceName, "S31090", SQLMSG, c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    sprintf ( c_msg, "%ld record System error. Contact system support", 
																														li_rec_no );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	/* Populate the structure vw_pstn_actn with the following values: */

  strcpy(st_pstn_actn.c_user_id,"system");
  st_pstn_actn.l_session_id  = 0;

  strcpy( st_pstn_actn.c_cln_mtch_accnt, st_exrcbook.c_cln_mtch_accnt);
  strcpy( st_pstn_actn.c_xchng_cd, st_exrcbook.c_xchng_cd);
  strcpy( st_pstn_actn.c_undrlyng, st_exrcbook.c_undrlyng);
  strcpy( st_pstn_actn.c_expry_dt, st_exrcbook.c_expry_dt);

  st_pstn_actn.l_new_qty   = 0;
  st_pstn_actn.l_new_rt    = 0;
  st_pstn_actn.l_exec_rt   = 0;
  st_pstn_actn.l_orgnl_qty = 0;
  st_pstn_actn.l_orgnl_rt  = 0;
  st_pstn_actn.d_add_mrgn_amt  = 0;
  st_pstn_actn.l_actn_typ = EXER_CONF;
  st_pstn_actn.l_ca_lvl  = st_exrcbook.l_ca_lvl;
  st_pstn_actn.c_prd_typ = st_exrcbook.c_prd_typ;
  st_pstn_actn.c_opt_typ = st_exrcbook.c_opt_typ;
  st_pstn_actn.c_exrc_typ  = st_exrcbook.c_exrc_typ;
  st_pstn_actn.c_trnsctn_flw = EXERCISE;
  st_pstn_actn.l_exec_qty  = st_exrcbook.l_exrc_qty;
  st_pstn_actn.l_strike_prc = st_exrcbook.l_strike_prc;
  st_pstn_actn.c_ctgry_indstk = st_exrcbook.c_ctgry_indstk;
  st_pstn_actn.l_eba_cntrct_id = st_exrcbook.l_eba_cntrct_id;

	i_ip_len = sizeof( struct vw_pstn_actn );

  /*** Added for Order Routing ***/
	fn_cpy_ddr ( st_pstn_actn.c_rout_crt );

	/*** Commented for Ver 1.4 change ***
	i_returncode = fn_call_svc( c_ServiceName,
															c_err_msg,
															&st_pstn_actn,
															&st_pstn_actn,
															"vw_pstn_actn",
															"vw_pstn_actn",
															i_ip_len,
															i_ip_len,
															0,
															"SFO_UPD_OPT_POS" );
	*** Commented for Ver 1.4 change ***/

	/*** Start Ver 1.4 change here ***/

	EXEC SQL
		SELECT	NVL(CLM_SPAN_ALLWD,'N'),
						NVL(CLM_BSESPAN_ALLWD,'N')			/*** Ver 1.5 **/ 
		INTO		:c_span_flag,
						:c_bse_span_flag				/*** Ver 1.5 **/ 
		FROM		CLM_CLNT_MSTR 
		WHERE		CLM_MTCH_ACCNT = :st_pstn_actn.c_cln_mtch_accnt;

	if( SQLCODE != 0 )
  {
    fn_errlog( c_ServiceName, "S31095", SQLMSG, c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    sprintf ( c_msg, "%ld record System error. Contact system support", li_rec_no );    
		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	fn_userlog(c_ServiceName,"c_span_flag = :%c:", c_span_flag);
	fn_userlog(c_ServiceName,"c_bse_span_flag = :%c:", c_bse_span_flag);/** Ver 1.5 **/

	/*if (c_span_flag == 'N')		** Ver 1.5 **/											
	if ( ( c_span_flag == 'N' 		&& strcmp(st_pstn_actn.c_xchng_cd,"NFO") == 0 ) ||
			 ( c_bse_span_flag == 'N' && strcmp(st_pstn_actn.c_xchng_cd,"BFO") == 0 )
		 )										/*** Ver 1.5 **/	
	{
		fn_userlog(c_ServiceName,"***** NORMAL CUSTOMER *****");
		i_returncode = fn_call_svc( c_ServiceName,
																c_err_msg,
																&st_pstn_actn,
																&st_pstn_actn,
																"vw_pstn_actn",
																"vw_pstn_actn",
																i_ip_len,
																i_ip_len,
																0,
																"SFO_UPD_OPT_POS" );
	}
	/**else if (c_span_flag == 'Y')		** Ver 1.5 comment **/

	if ( ( c_span_flag == 'Y' 		&& strcmp(st_pstn_actn.c_xchng_cd,"NFO") == 0 ) ||
			 ( c_bse_span_flag == 'Y' && strcmp(st_pstn_actn.c_xchng_cd,"BFO") == 0 )
		 )										/*** Ver 1.5 **/	
	{
		fn_userlog(c_ServiceName,"***** SPAN CUSTOMER *****");
	  i_returncode = fn_call_svc_fml ( c_ServiceName,
																		 c_err_msg,
                                     "SFO_SPN_EXERPOS",
                                     0,
                                     15,
                                     0,
                                     FFO_USR_ID, (char *)st_pstn_actn.c_user_id,									    
                                     FFO_SSSN_ID, (char *)&st_pstn_actn.l_session_id,							    
                                     FFO_EBA_MTCH_ACT_NO, (char *)st_pstn_actn.c_cln_mtch_accnt,	    
                                     FFO_XCHNG_CD, (char *)st_pstn_actn.c_xchng_cd,								    
																 		 FFO_PRDCT_TYP, (char *)&st_pstn_actn.c_prd_typ,				
																		 FFO_UNDRLYNG, (char *)st_pstn_actn.c_undrlyng,				
																		 FFO_EXPRY_DT, (char *)st_pstn_actn.c_expry_dt,				
																		 FFO_STRK_PRC, (char *)&st_pstn_actn.l_strike_prc,			
																		 FFO_EXER_TYP, (char *)&st_pstn_actn.c_exrc_typ,				
																		 FFO_OPT_TYP, (char *)&st_pstn_actn.c_opt_typ,					
																		 FFO_ACTN_TYP, (char *)&st_pstn_actn.l_actn_typ,				
																		 FFO_TRD_FLW, (char *)&st_pstn_actn.c_trnsctn_flw,			
																		 FFO_EXEC_QTY, (char *)&st_pstn_actn.l_exec_qty,	
																		 FFO_CTGRY_INDSTK, (char *)&st_pstn_actn.c_ctgry_indstk,       
																		 FFO_ROUT_CRT, (char *)st_pstn_actn.c_rout_crt				
																		);																														    
	}																																																    
	/*** End Ver 1.4 change here ***/

	if( i_returncode != SUCC_BFR )
	{
		fn_errlog( c_ServiceName, "S31100", LIBMSG , c_err_msg );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
		Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    sprintf ( c_msg, "%ld record System error. Contact system support", 
																														li_rec_no );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
		tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
	}

	if( strcmp(st_exrcbook.c_exrc_ordr_rfrnc, "Exchange Initiated") != 0 )
	{
		st_exrcbook.c_exrc_stts = EXERCISED;
		st_exrcbook.c_oprn_typ = UPD_EXER_STTS_CLS_PRC;
		st_exrcbook.l_cur_mkt_prc = li_und_close_prc;
		
		i_ip_len = sizeof( struct vw_exrcbook );

  	/*** Added for Order Routing ***/
		fn_cpy_ddr ( st_exrcbook.c_rout_crt );


		/*** Commented for Ver 1.4 change ***
		i_returncode = fn_call_svc( c_ServiceName,
                              	c_err_msg,
   															&st_exrcbook,
   															&st_exrcbook,
																"vw_exrcbook",
																"vw_exrcbook",
 																i_ip_len,
 																i_ip_len,
																0,
																"SFO_UPD_EXBK" );

		if( i_returncode != SUCC_BFR )
		{
			fn_errlog( c_ServiceName, "S31105", LIBMSG , c_err_msg );
    	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    	sprintf ( c_msg, "%ld record System error. Contact system support", 
																														li_rec_no );
    	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
			tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
		}
		*** Commented for Ver 1.4 change ***/

	  /*** Ver 1.4 Change starts here ***/
		EXEC SQL
		UPDATE 	feb_fo_exrc_rqst_book
		SET 		feb_exrc_stts = :st_exrcbook.c_exrc_stts,
						feb_curr_mkt_prc = :st_exrcbook.l_cur_mkt_prc
		WHERE 	feb_exrc_rfrnc_no = :st_exrcbook.c_exrc_ordr_rfrnc;

		if( SQLCODE != 0 )
		{
			fn_errlog( c_ServiceName, "S31110", LIBMSG , c_err_msg );
    	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    	sprintf ( c_msg, "%ld record System error. Contact system support", li_rec_no );
    	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
			tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
		}
		/*** Ver 1.4 Change ends here ***/
	}

	if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
    fn_errlog( c_ServiceName, "S31115", LIBMSG, c_err_msg);
		Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    sprintf ( c_msg, "%ld record System error. Contact system support", 
																														li_rec_no );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    strcpy(c_error_txt,c_msg);  /*** Ver 1.6 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.6 ***/
    tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
  }

	tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
}

