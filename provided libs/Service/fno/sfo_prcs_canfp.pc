/******************************************************************************/
/*  Program           : SFO_PRCS_CANFP                                        */
/*                                                                            */
/*  Input             : FFO_XCHNG_CD                                          */
/*                      FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_CTGRY_INDSTK                                      */
/*                      FFO_CNTRCT_TAG                                        */
/*                      FFO_IMTM_RMRKS                                        */
/*                      FFO_PIPE_ID                                           */
/*                                                                            */
/*  Output            :                                                       */
/*                                                                            */
/*  Description       : This program calls the cancel_futplus service to			*/
/*										  cancel the order.																			*/	
/*                                                                            */
/*  Log               :                                                       */
/*                                                                            */
/******************************************************************************/
/*  13-Mar-2008     Ver 1.0        Vidyayini Krish   Initial Release          */
/*  13-Jun-2008     Ver 1.1        Shailesh|Sandeep	 Revamp										*/
/*  20-Jun-2008		  Ver 1.2		     Sandeep					 IBM Changes							*/
/*  13-Feb-2015		  Ver 1.3		     Navina D.				 Fix for tpreturn 				*/
/*  07-Mar-2023		  Ver 1.4		     Samip M.				 		Changes for Client lock */
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
/*Add header files here */
#include <fml_def.h>
/* COMMENTED IN VER TOL : TUX on LINUX (Ravindra) * #include <fo_view_def.h> */
#include <fn_log.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_tuxlib.h>
#include <fo.h>
#include <fn_pos.h>
#include <fn_ddr.h>
#include <fml_rout.h>
#include <fn_session.h>
#include <string.h>
#include <fn_read_debug_lvl.h>			/** Ver 1.2 **/

void SFO_PRCS_CANFP( TPSVCINFO *rqst )
{
  FBFR32 *ptr_fml_Ibuf;

  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];
  char c_fno_dmn_nm [ 16 ];
  char c_fno_trg_nm [ 16 ];
  char c_fno_trg_dat [ 256 ];
	char c_sys_msg[4];

	EXEC SQL INCLUDE "table/ffp_fo_futures_pstn.h";
  EXEC SQL INCLUDE "table/fod_fo_ordr_dtls.h";
  EXEC SQL INCLUDE "table/usr_user_master.h";
  EXEC SQL INCLUDE "table/clm_clnt_mstr.h";

  int i_returncode;
  int i_returnval;
  int i_ip_len;
  int i_op_len;
  int i_trnsctn;
/**	Ver 1.1 int i_order_in_queue_exists; **/
	
	long int li_cnt;

  char c_tag [ 256 ];
  char c_msg [ 256 ];

  EXEC SQL BEGIN DECLARE SECTION;
    struct vw_pstn_actn st_pstn_actn;
    varchar   c_trd_dt[LEN_DATE];
  EXEC SQL END DECLARE SECTION;

	memset(c_sys_msg,'\0',sizeof(c_sys_msg));
	memset(sql_fod_xchng_cd,'\0',sizeof(sql_fod_xchng_cd));
	memset(sql_ffp_clm_mtch_accnt,'\0',sizeof(sql_ffp_clm_mtch_accnt));
	memset(sql_ffp_undrlyng,'\0',sizeof(sql_ffp_undrlyng));
	memset(c_tag,'\0',sizeof(c_tag));
	memset(sql_fod_pipe_id,'\0',sizeof(sql_fod_pipe_id));
	memset(sql_fod_ordr_rfrnc,'\0',sizeof(sql_fod_ordr_rfrnc));			/**Ver 1.1 **/

/*	
SETNULL(sql_fod_remarks);
SETNULL(sql_ffp_expry_dt);
SETNULL(sql_fod_usr_id);
*/


  ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
  strcpy( c_ServiceName, rqst->name );

  INITDBGLVL(c_ServiceName);      /*** Ver 1.2 ***/
	
	if (DEBUG_MSG_LVL_3)      /*** Ver 1.2 ***/
	{
		fn_userlog(c_ServiceName, " STEP 1");
		fn_userlog (c_ServiceName,"Inside Process Cancellation" );
	}

  i_returncode = fn_unpack_fmltovar ( c_ServiceName,
                                    c_err_msg,
                                    ptr_fml_Ibuf,
                                    11,
                                    FFO_XCHNG_CD, ( char * )sql_fod_xchng_cd, NULL,
                                    FFO_EBA_MTCH_ACT_NO, ( char * )sql_ffp_clm_mtch_accnt, NULL,
																		FFO_PRDCT_TYP, ( char * )&sql_fod_prdct_typ, NULL,
																		FFO_UNDRLYNG, ( char * )sql_ffp_undrlyng, NULL,
																		FFO_CTGRY_INDSTK, ( char * )&sql_ffp_indstk, NULL,
																		/**Commented for Ver 1.1 FFO_CNTRCT_TAG, ( char * )&sql_ffp_cntrct_tag, NULL,**/
																		FFO_ORDR_RFRNC, (char * ) sql_fod_ordr_rfrnc,NULL,		/**Ver 1.1 **/
																		FFO_IMTM_RMRKS, ( char * )sql_fod_remarks.arr, NULL,
																		FFO_BAT_TAG, ( char * )c_tag, NULL,
																		FFO_REC_NO, ( char * )&li_cnt, NULL,
																		FFO_EXPRY_DT, (char * )sql_ffp_expry_dt.arr, NULL,
																		FFO_PIPE_ID, ( char * )sql_fod_pipe_id, NULL );

  if( i_returncode != 0 )
  {
    fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	fn_userlog(c_ServiceName, " STEP 2");

	SETLEN(sql_fod_remarks);		/** Ver 1.2 **/
	SETLEN(sql_ffp_expry_dt);  /** Ver 1.2 **/

	rtrim(c_sys_msg);
	rtrim(sql_fod_xchng_cd);
	rtrim(sql_ffp_clm_mtch_accnt);
	rtrim(sql_ffp_undrlyng);
	rtrim(c_tag);
	rtrim(sql_fod_pipe_id);
	rtrim(sql_fod_ordr_rfrnc);			/**Ver 1.1 **/

	fn_userlog(c_ServiceName, " STEP 3");

  /*** Added for Order Routing ***/
  fn_init_ddr_pop( sql_fod_pipe_id, TRADING_SECTION, F_CS );	

  if (DEBUG_MSG_LVL_3)      /*** Ver 1.2 ***/
	{
    fn_userlog( c_ServiceName, "Match Account :%s:",
                                  sql_ffp_clm_mtch_accnt );
    fn_userlog( c_ServiceName, "Exchange code :%s:",
                                  sql_fod_xchng_cd );
    fn_userlog( c_ServiceName, "Product Type  :%c:",
                                  sql_fod_prdct_typ );
    fn_userlog( c_ServiceName, "Underlyng     :%s:",
                                  sql_ffp_undrlyng );
    fn_userlog( c_ServiceName, "Category      :%c:",
                                 sql_ffp_indstk );
    fn_userlog( c_ServiceName, "IMTM Remarks  :%s:",
                                  sql_fod_remarks.arr );
		fn_userlog( c_ServiceName, "Pipe ID :%s:",sql_fod_pipe_id);
  }

  sprintf ( c_msg, "Processing match a/c - [%s], Underlying - [%s], Tag - [%s]",
        sql_ffp_clm_mtch_accnt,
        sql_ffp_undrlyng,
        sql_ffp_expry_dt.arr);

	fn_userlog(c_ServiceName, " STEP 4");
	fn_userlog(c_ServiceName, " c_msg :%s:",c_msg);			/* Ver 1.2 */

  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog( c_ServiceName, "S31010", LIBMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error I. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	/** Commented and changed below for Ver 1.4 **
  i_returncode = fn_lock_usr( c_ServiceName,
                              sql_ffp_clm_mtch_accnt );
	** Ver 1.4 **/

  i_returncode = fn_lock_fno( c_ServiceName,
                              sql_ffp_clm_mtch_accnt );
  if ( i_returncode == -1 )
  {
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error II. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	fn_userlog(c_ServiceName, " STEP 5");

  strcpy((char *)sql_fod_channel.arr,"SYS");
	sql_fod_channel.len = strlen((char *)sql_fod_channel.arr);

	/*
SETNULL(sql_fod_channel);
SETNULL(sql_clm_alias_name);
*/
  strcpy((char *)sql_clm_alias_name.arr,"*");
	sql_clm_alias_name.len = strlen((char *)sql_clm_alias_name.arr);

  strcpy((char *)sql_fod_usr_id.arr,"system");
	sql_fod_usr_id.len = strlen((char *)sql_fod_usr_id.arr);
  sql_usr_sssn_id = 0;

	fn_userlog(c_ServiceName, " STEP 6");

/****Commented for Ver 1.1
  i_order_in_queue_exists = 0;

	memset(sql_fod_ordr_rfrnc,'\0',sizeof(sql_fod_ordr_rfrnc));

  EXEC SQL
       SELECT  1
       INTO    :i_order_in_queue_exists
       FROM    dual
       WHERE   exists
  (
     SELECT  1
     FROM    fod_fo_ordr_dtls
     WHERE   fod_clm_mtch_accnt  = :sql_ffp_clm_mtch_accnt
     AND     fod_xchng_cd        = :sql_fod_xchng_cd
     AND     fod_prdct_typ       = :sql_fod_prdct_typ
     AND     fod_indstk          = :sql_ffp_indstk
     AND     fod_undrlyng        = :sql_ffp_undrlyng
     AND     fod_ordr_stts       =  'Q'
     AND     fod_pipe_id         = :sql_fod_pipe_id
     AND     fod_expry_dt        = :sql_ffp_expry_dt
  );

  if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    strcpy ( c_msg, "System error III . Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    fn_errlog( c_ServiceName, "S31020", SQLMSG, c_err_msg  );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    return;
  }

	fn_userlog(c_ServiceName," STATUS of QUEUE is :%d:",i_order_in_queue_exists );

  if ( i_order_in_queue_exists == 1 )
  {

    if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
    {
       fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
       tpreturn ( TPFAIL, ERR_BFR, ( char * )c_err_msg, 0, 0 );
    }

    tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )NULL, 0, 0 );	
  }


  EXEC SQL
       DECLARE cur_can_ordr  CURSOR FOR
       SELECT  fod_ordr_rfrnc
       FROM    fod_fo_ordr_dtls
       WHERE   fod_clm_mtch_accnt = :sql_ffp_clm_mtch_accnt
       AND     fod_xchng_cd = :sql_fod_xchng_cd
       AND     fod_prdct_typ = :sql_fod_prdct_typ
       AND     fod_indstk = :sql_ffp_indstk
       AND     fod_undrlyng = :sql_ffp_undrlyng
       AND     fod_ordr_stts in ( 'R','O','P')
       AND     fod_pipe_id = :sql_fod_pipe_id
			 AND     FOD_EXPRY_DT = :sql_ffp_expry_dt;


  EXEC SQL
       OPEN cur_can_ordr;

  if ( SQLCODE != 0 )
  {
    strcpy ( c_msg, "System error IV. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    fn_errlog( c_ServiceName, "S31025", SQLMSG, c_err_msg  );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    return;
  }

	fn_userlog ( c_ServiceName,"After creating cursor" );

	while(1)
  {

		memset(sql_fod_ordr_rfrnc,'\0',sizeof(sql_fod_ordr_rfrnc));
    EXEC SQL
         FETCH cur_can_ordr
         INTO  :sql_fod_ordr_rfrnc;

    if ( SQLCODE != 0 )
    {
      if ( SQLCODE == NO_DATA_FOUND )
      {
        break;
      }
      strcpy ( c_msg, "System error V. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      fn_errlog( c_ServiceName, "S31030", SQLMSG, c_err_msg  );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );

      EXEC SQL
           CLOSE cur_can_ordr;
      return;
    }

		memset(sql_fod_ordr_rfrnc,'\0',sizeof(sql_fod_ordr_rfrnc));
****************/

    strcpy((char *)sql_fod_remarks.arr,"EOS System placed Cancellation");
	  sql_fod_remarks.len = strlen((char *)sql_fod_remarks.arr);
		strcpy(c_sys_msg,"EOS");

		if (DEBUG_MSG_LVL_3)      /*** Ver 1.2 ***/
		{
			fn_userlog ( c_ServiceName,"USER ID IS :%s:",sql_fod_usr_id.arr );
			fn_userlog ( c_ServiceName,"SESSION ID IS :%ld:",sql_usr_sssn_id );
			fn_userlog ( c_ServiceName,"EXCHANGE CODE IS :%s:",sql_fod_xchng_cd );
			fn_userlog ( c_ServiceName,"MATCH ACCOUNT IS :%s:",sql_ffp_clm_mtch_accnt );
			fn_userlog ( c_ServiceName,"ORDER REFERENCE IS :%s:",sql_fod_ordr_rfrnc );
			fn_userlog ( c_ServiceName,"REMARKS IS :%s:",sql_fod_remarks.arr );
			fn_userlog ( c_ServiceName,"CHANNEL IS :%s:",sql_fod_channel.arr );
			fn_userlog ( c_ServiceName,"ALIAS IS :%s:",sql_clm_alias_name.arr );
			fn_userlog (c_ServiceName,"PIPE IS :%s:",sql_fod_pipe_id );
			fn_userlog (c_ServiceName,"SYS MSG IS :%s:",c_sys_msg );
		}

    i_returncode = fn_call_svc_fml ( c_ServiceName,
                                     c_err_msg,
                                     "SFO_CANCEL_FUT",
                                     0,
                                     10,
                                     0,
                                     FFO_USR_ID, (char *)sql_fod_usr_id.arr,
                                     FFO_SSSN_ID, (char *)&sql_usr_sssn_id,
                                     FFO_XCHNG_CD, (char *)sql_fod_xchng_cd,
                                     FFO_EBA_MTCH_ACT_NO, (char *)sql_ffp_clm_mtch_accnt,
                                     FFO_ORDR_RFRNC, (char *)sql_fod_ordr_rfrnc,
                                     FFO_XCHNG_RMRKS, (char *)sql_fod_remarks.arr,
                                     FFO_CHANNEL, (char *)sql_fod_channel.arr,
                                     FFO_ALIAS,(char *)sql_clm_alias_name.arr,
                                     FFO_PIPE_ID, (char *)sql_fod_pipe_id,
                                     FFO_SYS_MSG,(char *)c_sys_msg);

    if ( i_returncode != SUCC_BFR )
    {
      strcpy ( c_msg, "System error VI. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      fn_errlog( c_ServiceName, "S31035", LIBMSG, c_err_msg  );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      /**Ver 1.1 EXEC SQL CLOSE cur_can_ordr; **/
      /*** return; Commented in Ver 1.3 ***/
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );	/*** Ver 1.3 ***/
    }
	  else
    {
      sprintf(c_msg, "SENT CANCELLATION REQUEST FOR [%s]",sql_fod_ordr_rfrnc);
			fn_userlog(c_ServiceName ,"SENT CANCELLATION REQUEST FOR [%s], For MTCH [%s]",sql_fod_ordr_rfrnc,sql_ffp_clm_mtch_accnt);			/** Ver 1.2 **/
    }
/****Commented for Ver 1.1
  }
  EXEC SQL
       CLOSE cur_can_ordr;
*********/

  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
    strcpy ( c_msg, "System error VII. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    fn_errlog( c_ServiceName, "S31040", LIBMSG, c_err_msg  );
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    /*** return; Commented in Ver 1.3 ***/
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );	/*** Ver 1.3 ***/
  }					
  /* To post the Trigger in Tux3 Domain Call the service SFO_FOS_TRG */
    strcpy ( c_fno_dmn_nm, "FNO" );
    strcpy ( c_fno_trg_nm, "TRG_LOOK_TAB" );
    strcpy ( c_fno_trg_dat, "TRG_LOOK_TAB" );

    i_returncode = fn_call_svc_fml ( c_ServiceName,
                                    c_err_msg,
                                    "SFO_FOS_TRG",
                                    0,
                                    4,
                                    0,
                                    FFO_DMN_NM, (char *)c_fno_dmn_nm,
                                    FFO_TRG_NM, (char *)c_fno_trg_nm,
                                    FFO_ABT_TRG_DATA, (char *)c_fno_trg_dat,
                                    FFO_ABT_FILTER, (char *)sql_fod_pipe_id);

    if ( i_returncode != SUCC_BFR )
    {
      fn_errlog( c_ServiceName, "S31045", LIBMSG, c_err_msg  );
    }

	tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )NULL, 0, 0 );
}	
