/******************************************************************************/
/*  Program           : SFO_DSP_INC                                           */
/*                                                                            */
/*  Input             :                                                       */
/*                                                                            */
/*  Output            :FFO_EBA_MTCH_ACT_NO                                    */
/*                     FFO_FROM_DT                                            */         
/*                     FFO_TO_DT                                              */           
/*                     FFO_TOTAL_COST                                         */      
/*                     FFO_TOT_BID_QTY                                        */     
/*                     FFO_TOT_OFFR_QTY                                       */    
/*                     FFO_CHNG_OI                                            */         
/*                     FFO_CRNT_OI                                            */         
/*                     FFO_MKT_CPTLTN                                         */      
/*                     FFO_STRIKE_PRC                                         */      
/*                     FFO_STCK_PRICE                                         */      
/*                     FFO_RCRD_DT                                            */         
/*                     FFO_THRS_VAR_PRCNT                                     */
/*                                                                            */
/*  Description       : To get the records for running the End-of-day MTM     */
/*                      process and passing it to the calling batch program   */
/*                                                                            */
/******************************************************************************/
/* 11-Dec-2009     Ver 1.0        Venture M         Release 1.0               */
/******************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fo.h>
#include <fo_fml_def.h>
#include <fml_def.h>
#include <fn_battmpt.h>
#include <fn_tuxlib.h>
#include <fn_log.h>
#include <fn_read_debug_lvl.h>

EXEC SQL INCLUDE "table/tmp_fut_inc_smry.h";

#define DEFLOG0 if (DEBUG_MSG_LVL_0)
#define DEFLOG3 if (DEBUG_MSG_LVL_3) 
#define DEFLOG5 if (DEBUG_MSG_LVL_5)

void SFO_DSP_INC( TPSVCINFO *rqst )
{
  FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;

  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];
  char c_new_cntrct_tag ;

  int i_returncode=0;

  EXEC SQL BEGIN DECLARE SECTION;

  EXEC SQL END DECLARE SECTION;

  ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
  strcpy( c_ServiceName, rqst->name );

  INITDBGLVL(c_ServiceName);

  /*open a cursor*/
  ptr_fml_Obuf = NULL;

  EXEC SQL
    DECLARE cur_tmp_fut_inc_smry CURSOR FOR
    SELECT  fis_match_acnt       ,
            fis_from_dt          ,
            fis_to_dt            ,
            fis_turnover         ,
            fis_fut_brkrg        ,
            fis_nrml_brkrg       ,
            fis_upfront_brkrg    ,
            fis_offline_brkrg    ,
            fis_net_incnt_amt    ,
            fis_incnt_amt        ,
            fis_incnt_refund_amt ,
            fis_incnt_date       ,
            fis_prcntg           ,
            fis_disp_flag        ,
            fis_prcs_flag        
    FROM    TMP_FUT_INC_SMRY
    WHERE   fis_disp_flag='Y';
    
    EXEC SQL
      OPEN cur_tmp_fut_inc_smry;

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31005", SQLMSG, c_err_msg );
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    while(1)
    {
      DEFLOG0 fn_userlog (c_ServiceName," Looping  ... ");
      
      EXEC SQL
        FETCH cur_tmp_fut_inc_smry
        INTO                 
         :sql_fis_match_acnt, 
         :sql_fis_from_dt,    
         :sql_fis_to_dt,      
         :sql_fis_turnover,         
         :sql_fis_fut_brkrg,        
         :sql_fis_nrml_brkrg,       
         :sql_fis_upfront_brkrg,    
         :sql_fis_offline_brkrg,    
         :sql_fis_net_incnt_amt,    
         :sql_fis_incnt_amt,        
         :sql_fis_incnt_refund_amt, 
         :sql_fis_incnt_date, 
         :sql_fis_prcntg,           
         :sql_fis_disp_flag,        
         :sql_fis_prcs_flag;

        if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
        {
          fn_errlog( c_ServiceName, "S31010", SQLMSG, c_err_msg );
          EXEC SQL
            CLOSE cur_tmp_fut_inc_smry;
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
        if ( SQLCODE == NO_DATA_FOUND )
        {
          break;
        }

        SETNULL ( sql_fis_from_dt );
        SETNULL ( sql_fis_to_dt );
                
    /*add cursor values to the FML BUff*/
        i_returncode = fn_pack_vartofml(
                    c_ServiceName,
                    c_err_msg,
                    &ptr_fml_Obuf,
                    13,
                    FFO_EBA_MTCH_ACT_NO   , (char *) sql_fis_match_acnt,        
                    FFO_FROM_DT           , (char *) sql_fis_from_dt.arr,           
                    FFO_TO_DT             , (char *) sql_fis_to_dt.arr,             
                    FFO_TOTAL_COST        , (char *) &sql_fis_turnover,          
                    FFO_TOT_BID_QTY       , (char *) &sql_fis_fut_brkrg,          
                    FFO_TOT_OFFR_QTY      , (char *) &sql_fis_nrml_brkrg,        
                    FFO_CHNG_OI           , (char *) &sql_fis_upfront_brkrg,     
                    FFO_CRNT_OI           , (char *) &sql_fis_offline_brkrg,     
                    FFO_MKT_CPTLTN        , (char *) &sql_fis_net_incnt_amt,     
                    FFO_STRIKE_PRC        , (char *) &sql_fis_incnt_amt,         
                    FFO_STCK_PRICE        , (char *) &sql_fis_incnt_refund_amt,  
                    FFO_RCRD_DT           , (char *) sql_fis_incnt_date.arr,        
                    FFO_THRS_VAR_PRCNT    , (char *) &sql_fis_prcntg  );  
                    
        if( i_returncode == -1 )
        {
          fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg );
          EXEC SQL
            CLOSE cur_tmp_fut_inc_smry;
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
        }

  } /* End of while*/
  
  /*close cursor*/
  EXEC SQL
    CLOSE cur_tmp_fut_inc_smry; 

  tpreturn(TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_Obuf, 0, 0 );
}

/******************************************************************************/
/******************************************************************************/
