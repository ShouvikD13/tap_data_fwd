/*************************************************************************************
SERVICE : sfo_rsk_display.pc

Purpose : To get the risk profile status from SCM_STRTGY_CLASS_MSTR table and store it in output FML's

Input Parameters :
FFO_USR_ID
FFO_SSSN_ID

Output Parameters :

FFO_INSTRMNT_TYP		String  Risk profile
FFO_OPT_TYP			Char  Status.

Author  - Indrajit Bhadange

Created on  14-Apr-2009
**********************************************************************************/
/**** C header ****/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/* Include the SQL Communications Area */
#include <sqlca.h>

/**** Tuxedo header ****/
#include <atmi.h>
#include <fml32.h>

/**** Application header ****/
#include <fo.h>
#include <fn_log.h>     


/**** Process specific header ****/
#include <fo_fml_def.h>
#include <fo_view_def.h>
#include <fn_session.h>
#include <fn_read_debug_lvl.h>  

int Z;
#define INIT(x,y)  for(Z=0; Z< y; Z++) x[Z] =0
#define TOTAL_FML  3 
#define MEMSET(A)  memset(&A,'\0',sizeof(A))

/* EXEC SQL INCLUDE "table/scm_strtgy_class_mstr.h"; */

/*********Declare Cursor Varaible************/
EXEC SQL BEGIN DECLARE SECTION;
  sql_cursor cur_risk_profile;
EXEC SQL END DECLARE SECTION;

/*********Declare global Varaible************/
char	c_servicename[33];
char    c_errmsg[256];
varchar	sql_scm_class_typ[4];
char	sql_scm_typ_stts[2];
int   i_err[TOTAL_FML];
int   i_ferr[TOTAL_FML];
int   i_loop;

/*********Declare FML buffer************/
FBFR32  *ptr_Obuf;
FBFR32  *ptr_Ibuf;

void SFO_RSK_DISPLAY(TPSVCINFO *rqst)
{
	char    c_user_id[9];
  long    l_sssn_id = 0;
  int     i_chk_val;
  struct vw_usr_prfl st_usr_prfl;
  struct vw_err_msg st_err_msg;
  EXEC SQL INCLUDE "table/exg_xchng_mstr.h";

  /**********Allocate memory for FML buffers *********/
  ptr_Ibuf = (FBFR32*)rqst->data; 
  ptr_Obuf    = (FBFR32 *)NULL;

	strcpy(c_servicename,"SFO_RSK_DISPLAY");

	INITDBGLVL(c_servicename);
  INIT( i_err, TOTAL_FML );
  INIT( i_ferr, TOTAL_FML );

  MEMSET(c_user_id);
 
	fn_userlog(c_servicename,"************ SFO_RSK_DISPLAY Started *****************");

  /* GET USER ID, SESSION ID FOR ACTIVE SESSION CHECK */
  i_err[0]  = Fget32( ptr_Ibuf, FFO_USR_ID, 0, (char *)c_user_id, 0 );
  i_ferr[0] = Ferror32;
  i_err[1]  = Fget32( ptr_Ibuf, FFO_SSSN_ID, 0, (char *)&l_sssn_id, 0 );
  i_ferr[1] = Ferror32;

  for( i_loop=0; i_loop<2; i_loop++ )
  {
    if( i_err[i_loop] == -1 )
    {
      fn_userlog( c_servicename, "i_loop :%ld:", i_loop );
      fn_errlog( c_servicename, "S31005", Fstrerror32( i_ferr[i_loop] ), c_errmsg );
      Fadd32( ptr_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn( TPFAIL, ERR_BFR, (char *)ptr_Ibuf, 0, 0 );
    }
  }

  if(Fget32( ptr_Ibuf, FFO_EBA_MTCH_ACT_NO, 0, (char *)sql_exg_mtch_bnk_accnt.arr,0 ) == -1)
  {
    if(Ferror32 == FNOTPRES)
    {
      strcpy((char *) sql_exg_mtch_bnk_accnt.arr,"*");
    }
    else
    {
      fn_userlog( c_servicename, "Error while fetching match accnt");
      fn_errlog( c_servicename, "S31010", FMLMSG, c_errmsg );
      Fadd32( ptr_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn( TPFAIL, ERR_BFR, (char *)ptr_Ibuf, 0, 0 );
    }
  }

  SETLEN(sql_exg_mtch_bnk_accnt);


    if(DEBUG_MSG_LVL_3)
	{
    fn_userlog( c_servicename, "User Id :%s:"         , c_user_id );
    fn_userlog( c_servicename, "Session Id :%ld:"     , l_sssn_id );
    fn_userlog( c_servicename, "Match Account No :%s:", sql_exg_mtch_bnk_accnt.arr );
  }

  /* ACTIVE SESSION CHECK HANDLING START */
  strcpy( st_usr_prfl.c_user_id,c_user_id );
  st_usr_prfl.l_session_id = l_sssn_id;
  strcpy( st_usr_prfl.c_cln_mtch_accnt,(char *)sql_exg_mtch_bnk_accnt.arr);

  i_chk_val = fn_chk_sssn( c_servicename, &st_usr_prfl, &st_err_msg ) ;
  if( i_chk_val ==  -1 )
  {
    fn_errlog( c_servicename, "S31015", LIBMSG, st_err_msg.c_err_msg );
    Fadd32( ptr_Ibuf,FFO_ERR_MSG, st_err_msg.c_err_msg, 0 );
    tpreturn(TPFAIL,ERR_BFR, (char *)ptr_Ibuf, 0, 0);
  }
  /* ACTIVE SESSION CHECK HANDLING OVER */

  

	EXEC SQL ALLOCATE :cur_risk_profile;

	EXEC SQL EXECUTE
	BEGIN
		OPEN :cur_risk_profile for 
			SELECT SCM_CLASS_TYP,SCM_TYP_STTS FROM SCM_STRTGY_CLASS_MSTR;

	END;
	END-EXEC;


	if( SQLCODE != 0 )
	{
		if( SQLCODE == NO_DATA_FOUND )
		{
			if(DEBUG_MSG_LVL_3)
			{
				fn_userlog( c_servicename, " NO DATA FOUND OPEN CURSOR   " );
			}
		}
		else
		{
			fn_errlog( c_servicename, "S56020", SQLMSG, c_errmsg );
			EXEC SQL CLOSE :cur_risk_profile;
			EXEC SQL FREE :cur_risk_profile;
		  
      Fadd32( ptr_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn( TPFAIL, ERR_BFR, (char *)ptr_Ibuf, 0, 0 );

   }
	}
	/*  ALLOCATE MEMORY FOR OUTPUT BUFFER           */

	ptr_Obuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN );

	if ( ptr_Obuf == NULL )
	{
		fn_errlog( c_servicename, "S56030", TPMSG, c_errmsg );
		EXEC SQL CLOSE :cur_risk_profile;
	  EXEC SQL FREE :cur_risk_profile;
    Fadd32( ptr_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    tpreturn( TPFAIL, ERR_BFR, (char *)ptr_Ibuf, 0, 0 ); 	

  }


	while(1)
	{
		MEMSET(sql_scm_class_typ);
		MEMSET(sql_scm_typ_stts);

		EXEC SQL FETCH :cur_risk_profile
			 INTO :sql_scm_class_typ,
			      :sql_scm_typ_stts;

		if( SQLCODE != 0 )
		{
			if( SQLCODE == NO_DATA_FOUND && sqlca.sqlerrd[2] == 0 )
			{
				if(DEBUG_MSG_LVL_3)
				{
					fn_userlog( c_servicename, "NO DATA FOUND WHILE FETCH" );
				}
				break;
	    } 	
	
			else if( SQLCODE == NO_DATA_FOUND && sqlca.sqlerrd[2] != 0 )
			{
				break;
			}
			else
			{
				fn_errlog( c_servicename, "S56040", SQLMSG, c_errmsg );
				EXEC SQL CLOSE :cur_risk_profile;
				EXEC SQL FREE :cur_risk_profile;
				tpfree( (char *)ptr_Obuf );
        Fadd32( ptr_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        tpreturn( TPFAIL, ERR_BFR, (char *)ptr_Ibuf, 0, 0 );

			}
		}

		SETNULL(sql_scm_class_typ);
		
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_servicename,"value of market type [%s]",sql_scm_class_typ.arr);
			fn_userlog(c_servicename,"value of ststus is [%c]",&sql_scm_typ_stts);
		}

		/*  ADD VALUES TO OUTPUT FML BUFFER */

		i_err[0]  = Fadd32(ptr_Obuf,FFO_INSTRMNT_TYP,(char *)sql_scm_class_typ.arr,0) ;
		i_err[1]  = Fadd32(ptr_Obuf,FFO_OPT_TYP,(char *)&sql_scm_typ_stts ,0) ;

		for(i_loop=0;i_loop<2;i_loop++)
		{
			if(i_err[i_loop] == -1)
			{
				fn_userlog(c_servicename,"ERROR WHILE ADDING DATA :%d:", i_loop );
				fn_errlog( c_servicename, "S56050", FMLMSG, c_errmsg  );
				EXEC SQL CLOSE :cur_risk_profile;
				EXEC SQL FREE  :cur_risk_profile;
				tpfree ( ( char * ) ptr_Obuf);
        Fadd32( ptr_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_Ibuf, 0, 0 );

			}
		}

	}
	EXEC SQL CLOSE :cur_risk_profile;
	EXEC SQL FREE  :cur_risk_profile;

	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog(c_servicename,"SFO_RSK_DISPLAY SERVICE CALL SUCCESFULL");
	}

	tpreturn( TPSUCCESS, 0, (char *)ptr_Obuf, 0, 0 );

}
