/******************************************************************************/
/*  Program           : SFO_DLVRY_DTLS                                        */
/*                                                                            */
/*  Input             : FFO_SSSN_ID                                           */
/*                      FFO_USR_ID                                            */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_XCHNG_CD                                          */
/*                      FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_EXPRY_DT                                          */
/*                     	FFO_FROM_DT																						*/
/*											FFO_TO_DT																							*/
/*                                                                            */
/*  Description       : */
/*                                                                            */
/*  Log               : 1.0 31-Mar-2021   Kiran Itkar                         */
/*                                                                            */
/******************************************************************************/
/*  1.0     -   New Release                                                   */
/*                                                                            */
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <math.h>
/*Add header files here */
#include <fml_def.h>
/*#include <fo_view_def.h>*/
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_tuxlib.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_session.h>
#include <fn_ddr.h>
#include <fo_view_def.h>
#include <fn_read_debug_lvl.h>

#define DLVRY_DTLS 1
#define DLVRYLOG_DTLS 2

void SFO_DLVRY_DTLS( TPSVCINFO *rqst )
{
  FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;

  int   i_err[10];
  int   i_ferr[10];
  int   i_trnsctn=0;
  int   i=0;
	int 	i_ch_val=0;
	char  c_ServiceName[33]="\0";
  char  c_err_msg[256]="\0";
	char  c_usr_id[15]="\0";
  char  c_xchng_cd[4]="\0";
  char  c_cln_mtch_accnt[11]="\0";
	char  c_undrlyng[7]="\0";
  char  c_expry_dt[23]="\0";
	char	c_prd_typ='\0';
	char	c_ctgry_indstk='\0';
	char	c_dlvry_flg='\0';
	char	c_channel[4]="\0";
	char	c_ord_dt[23]="\0";
	char	c_exrc_typ='\0';
	char	c_opt_typ='\0';
	char	c_opnpstn_flw='\0';
	
	long  l_dlvry_prc=0;
  long  l_dlvry_qty=0;
  long  li_sssn_id=0;
	long	l_actn_typ=0;
	long	l_strike_prc=0;
	long	l_shares_blckd=0;
	long	l_funds_blckd=0;
  double  d_dlvry_amnt=0;
	long l_bufferlength=0;

	varchar c_frm_dt[ LEN_DATE ];
  varchar c_to_dt[ LEN_DATE ];
	int i_returncode=0;

  MEMSET(c_to_dt);
  MEMSET(c_frm_dt);

	EXEC SQL BEGIN DECLARE SECTION;
    struct vw_usr_prfl st_usr_prfl;
		struct vw_contract st_contract;
    struct vw_err_msg st_err_msg;
		sql_cursor  sys_cursor;
  EXEC SQL END DECLARE SECTION;	

	ptr_fml_Ibuf = (FBFR32 *)rqst->data;
  strcpy( c_ServiceName, rqst->name );
  /*INITDBGLVL(c_ServiceName); */

	MEMSET(c_err_msg);

	i_err   [ 0 ]   = Fget32( ptr_fml_Ibuf ,FFO_USR_ID,0,(char *) c_usr_id,0);
  i_ferr  [ 0 ]   = Ferror32;
  i_err   [ 1 ]   = Fget32( ptr_fml_Ibuf ,FFO_SSSN_ID,0,(char *) &li_sssn_id,0);
  i_ferr  [ 1 ]   = Ferror32;
	i_err   [ 2 ]   = Fget32( ptr_fml_Ibuf ,FFO_EBA_MTCH_ACT_NO,0,(char *) c_cln_mtch_accnt,0);
  i_ferr  [ 2 ]   = Ferror32;
	i_err   [ 3 ]   = Fget32( ptr_fml_Ibuf ,FFO_ACTN_TYP,0,(char *) &l_actn_typ,0);
  i_ferr  [ 3 ]   = Ferror32;

	for(i=0;i<4;i++)
  {
    if(i_err[i] == -1 )
    {
      fn_userlog( c_ServiceName, " Error in field no %d", i);
      fn_errlog(c_ServiceName, "S31005", Fstrerror32(i_ferr[i]), c_err_msg);
      Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL, 0L, (char *)ptr_fml_Ibuf, 0L, 0);
    }
  }


	if( l_actn_typ == DLVRY_DTLS )
	{
		i_err   [ 4 ]   = Fget32( ptr_fml_Ibuf ,FFO_FROM_DT,0,(char *) c_frm_dt.arr,0);
  	i_ferr  [ 4 ]   = Ferror32;
  	i_err   [ 5 ]   = Fget32( ptr_fml_Ibuf ,FFO_TO_DT,0,(char *) c_to_dt.arr,0);
  	i_ferr  [ 5 ]   = Ferror32;
		i_err   [ 6 ]   = Fget32( ptr_fml_Ibuf,FFO_UNDRLYNG,0,(char *)c_undrlyng,0);
		i_ferr  [ 6 ]   = Ferror32;

		for(i=4;i<6;i++)
    {
      if(i_err[i] == -1 )
      {
        fn_userlog( c_ServiceName, " Error in field no %d", i);
        fn_errlog(c_ServiceName, "S31010", Fstrerror32(i_ferr[i]), c_err_msg);
        Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL, 0L, (char *)ptr_fml_Ibuf, 0L, 0);
      }
    }

		if(Fget32( ptr_fml_Ibuf,FFO_UNDRLYNG,0,(char *)c_undrlyng,0) == -1)
		{
			if( i_ferr [ 6 ] == FNOTPRES )
			{
				fn_userlog( c_ServiceName,"For all underlyings");
				strcpy(c_undrlyng, "%");
			}
			else
			{
				fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg);
				Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0);
				tpreturn(TPFAIL, 0L, (char *)ptr_fml_Ibuf, 0L, 0);			
			}
		}	
		
	}
	else if( l_actn_typ == DLVRYLOG_DTLS ) 
	{
  	i_err   [ 4 ]   = Fget32( ptr_fml_Ibuf ,FFO_XCHNG_CD,0,(char *) c_xchng_cd,0);
  	i_ferr  [ 4 ]   = Ferror32;
		i_err   [ 5 ]   = Fget32( ptr_fml_Ibuf ,FFO_EXPRY_DT,0,(char *) c_expry_dt,0);
  	i_ferr  [ 5 ]   = Ferror32;
		i_err   [ 6 ]   = Fget32( ptr_fml_Ibuf ,FFO_UNDRLYNG,0,(char *) c_undrlyng,0);
  	i_ferr  [ 6 ]   = Ferror32;
		i_err   [ 7 ]   = Fget32( ptr_fml_Ibuf ,FFO_PRDCT_TYP,0,(char *) &c_prd_typ,0);
		i_ferr  [ 7 ]   = Ferror32;
		i_err   [ 8 ]   = Fget32( ptr_fml_Ibuf ,FFO_OPT_TYP,0, (char *) &c_opt_typ,0);
		i_ferr  [ 8 ]   = Ferror32;
		i_err   [ 9 ]   = Fget32( ptr_fml_Ibuf ,FFO_STRK_PRC,0, (char *) &l_strike_prc,0);
		i_ferr  [ 9 ]   = Ferror32;


		for(i=4;i<9;i++)
  	{
    	if(i_err[i] == -1 )
    	{
      	fn_userlog( c_ServiceName, " Error in field no %d", i);
      	fn_errlog(c_ServiceName, "S31020", Fstrerror32(i_ferr[i]), c_err_msg);
      	Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0);
      	tpreturn(TPFAIL, 0L, (char *)ptr_fml_Ibuf, 0L, 0);
    	}
  	}	
	}

	rtrim(c_cln_mtch_accnt);
	rtrim(c_expry_dt);
	rtrim(c_undrlyng);
	rtrim(c_xchng_cd);
	SETLEN(c_frm_dt);
	SETLEN(c_to_dt);

  if( DEBUG_MSG_LVL_3 )
  {
	fn_userlog(c_ServiceName,"c_cln_mtch_accnt :%s:",c_cln_mtch_accnt);
	fn_userlog(c_ServiceName,"c_xchng_cd :%s:",c_xchng_cd);
	fn_userlog(c_ServiceName,"c_expry_dt :%s:",c_expry_dt);
	fn_userlog(c_ServiceName,"c_undrlyng :%s:",c_undrlyng);
	fn_userlog(c_ServiceName,"c_frm_dt :%s:",c_frm_dt.arr);
	fn_userlog(c_ServiceName,"c_to_dt :%s:",c_to_dt.arr);	
	fn_userlog(c_ServiceName,"c_prd_typ :%s:",c_prd_typ);
	fn_userlog(c_ServiceName,"l_strike_prc :%ld:",l_strike_prc);
	fn_userlog(c_ServiceName,"c_opt_typ :%c:",c_opt_typ);
  }

	strcpy( st_usr_prfl.c_user_id, c_usr_id );
  st_usr_prfl.l_session_id = li_sssn_id;
  strcpy( st_usr_prfl.c_cln_mtch_accnt,c_cln_mtch_accnt);
  fn_cpy_ddr ( st_usr_prfl.c_rout_crt );

	/* Check the session */
  i_returncode = fn_chk_sssn( c_ServiceName, &st_usr_prfl,
                                             &st_err_msg ) ;

  if ( i_returncode == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, st_err_msg.c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }


	ptr_fml_Obuf = NULL;
	EXEC SQL ALLOCATE :sys_cursor;

	if( l_actn_typ == DLVRY_DTLS)
	{
		fn_userlog(c_ServiceName,"In Fetch cur DLVRY_DTLS");
		EXEC SQL EXECUTE
    	BEGIN
      	OPEN  :sys_cursor FOR
					SELECT 		FDD_PRDCT_TYP,
										FDD_INDSTK,
										FDD_UNDRLYNG,
										FDD_EXPRY_DT,
										FDD_STRK_PRC,
										FDD_EXER_TYP,
										FDD_OPT_TYP,
										FDD_OPNPSTN_FLW,
										FDD_DLVRY_PRC,
										FDD_DLVRY_NONDLVRY_QTY,
										FDD_DLVERY_AMT,
										FDD_DLVRY_MODE_FLG,
										FDD_CHANNEL,
										FDD_RMRKS,
										TO_CHAR(FDD_UPD_DT,'DD-Mon-yyyy hh24:mi:ss'),
										FDD_XCHNG_CD,
										FDD_FUNDS_BLCKD,
										FDD_SHARES_BLCKD	
					FROM			FDD_FO_DLVRYMODE_DTLS
					WHERE			FDD_CLM_MTCH_ACCNT 		= :c_cln_mtch_accnt
					AND				TRIM(FDD_UNDRLYNG)		LIKE :c_undrlyng
					AND				trunc(FDD_UPD_DT) 	>= to_date(:c_frm_dt,'dd-Mon-yyyy')
					AND				trunc(FDD_UPD_DT)  <= to_date(:c_to_dt,'dd-Mon-yyyy')
					ORDER BY	FDD_PRDCT_TYP,
										FDD_UNDRLYNG,
										FDD_EXPRY_DT,
										FDD_STRK_PRC ASC;
			END;
      END-EXEC;

											
	}
	else if( l_actn_typ == DLVRYLOG_DTLS )
	{
		fn_userlog(c_ServiceName,"In Fetch cur DLVRYLOG_DTLS");
    EXEC SQL EXECUTE
      BEGIN
        OPEN  :sys_cursor FOR
          SELECT    FDD_PRDCT_TYP,
                    FDD_INDSTK,
                    FDD_UNDRLYNG,
                    FDD_EXPRY_DT,
                    FDD_STRK_PRC,
                    FDD_EXER_TYP,
                    FDD_OPT_TYP,
                    FDD_OPNPSTN_FLW,
                    FDD_DLVRY_PRC,
                    FDD_DLVRY_NONDLVRY_QTY,
                    FDD_DLVERY_AMT,
                    FDD_DLVRY_MODE_FLG,
                    FDD_CHANNEL,
                    FDD_RMRKS,
                   	TO_CHAR(FDD_UPD_DT,'DD-Mon-yyyy hh24:mi:ss'), 
										FDD_XCHNG_CD,
										FDD_FUNDS_BLCKD,
										FDD_SHARES_BLCKD
          FROM      FDD_FO_DLVRYMODE_DTLSLOG
          WHERE     FDD_CLM_MTCH_ACCNT= :c_cln_mtch_accnt
          AND       FDD_XCHNG_CD      = :c_xchng_cd
          AND       FDD_EXPRY_DT      = :c_expry_dt
          AND       FDD_UNDRLYNG      = :c_undrlyng
					AND				FDD_PRDCT_TYP			= :c_prd_typ
					AND				FDD_OPT_TYP				= :c_opt_typ
					AND				FDD_STRK_PRC			=	:l_strike_prc
          ORDER BY  FDD_PRDCT_TYP,
                    FDD_UNDRLYNG,
                    FDD_EXPRY_DT,
                    FDD_STRK_PRC ASC;
      END;
      END-EXEC;
	}

	if ( SQLCODE != 0 )
    {
      fn_userlog(c_ServiceName,"Failed While Selecting Record From DLVRYLOG_DTLS Table.");
      fn_errlog( c_ServiceName, "S31025", SQLMSG, c_err_msg );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      EXEC SQL CLOSE :sys_cursor;
      EXEC SQL FREE :sys_cursor;
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }	

 if( DEBUG_MSG_LVL_3 )
 {
	fn_userlog(c_ServiceName,"l_actn_typ :%ld:",l_actn_typ);
 }

	if( l_actn_typ == DLVRY_DTLS)
	{	
		while(1)
		{
			c_prd_typ='\0';
			c_ctgry_indstk='\0';
			MEMSET(c_undrlyng);
			MEMSET(c_expry_dt);
			MEMSET(c_xchng_cd);
			l_strike_prc=0;
			c_exrc_typ='\0';
			c_opt_typ='\0';
			c_opnpstn_flw='\0';
			l_dlvry_prc=0;
			l_dlvry_qty=0;
			l_shares_blckd=0;
			l_funds_blckd=0;
			d_dlvry_amnt=0;
			c_dlvry_flg='\0';
			MEMSET(c_ord_dt);
			MEMSET(c_err_msg);
			MEMSET(c_channel);
	
			fn_userlog(c_ServiceName,"In while for DLVRY_DTLS condition");
			EXEC SQL
        FETCH :sys_cursor
				INTO	:c_prd_typ,
							:c_ctgry_indstk,
							:c_undrlyng,
							:c_expry_dt,
							:l_strike_prc,
							:c_exrc_typ,
							:c_opt_typ,
							:c_opnpstn_flw,
							:l_dlvry_prc,
							:l_dlvry_qty,
							:d_dlvry_amnt,
							:c_dlvry_flg,
							:c_channel,
							:c_err_msg,
							:c_ord_dt,
							:c_xchng_cd,
							:l_funds_blckd,
							:l_shares_blckd;		

		if ( SQLCODE != 0 )
    {
      if ( SQLCODE == NO_DATA_FOUND )
      {
        break;
      }

     	fn_errlog( c_ServiceName, "S31030", SQLMSG, c_err_msg  );
      EXEC SQL CLOSE :sys_cursor;
      EXEC SQL FREE :sys_cursor;
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
			rtrim(c_expry_dt);

     if( DEBUG_MSG_LVL_3 )
     {
			fn_userlog(c_ServiceName,"c_prd_typ :%c:",c_prd_typ);
			fn_userlog(c_ServiceName,"c_ctgry_indstk :%c:",c_ctgry_indstk);
			fn_userlog(c_ServiceName,"c_undrlyng :%s:",c_undrlyng);
			fn_userlog(c_ServiceName,"c_expry_dt :%s:",c_expry_dt);
			fn_userlog(c_ServiceName,"l_strike_prc :%ld:",l_strike_prc);
			fn_userlog(c_ServiceName,"c_exrc_typ :%c:",c_exrc_typ);
			fn_userlog(c_ServiceName,"c_opt_typ :%c:",c_opt_typ);
			fn_userlog(c_ServiceName,"c_opnpstn_flw :%c:",c_opnpstn_flw);
			fn_userlog(c_ServiceName,"l_dlvry_qty :%ld:",l_dlvry_qty);
			fn_userlog(c_ServiceName,"c_xchng_cd	:%s:",c_xchng_cd);
			fn_userlog(c_ServiceName,"l_funds_blckd :%ld:",l_funds_blckd);
			fn_userlog(c_ServiceName,"l_shares_blckd :%ld:",l_shares_blckd);

			fn_userlog(c_ServiceName,"In pack var to fml");
     }
			i_ch_val = fn_pack_vartofml ( c_ServiceName,
                                    c_err_msg,
                                    &ptr_fml_Obuf,
                                    17,
                                   	FFO_PRDCT_TYP, (char *) &c_prd_typ,
                                    FFO_CTGRY_INDSTK, (char *) &c_ctgry_indstk,
                                    FFO_UNDRLYNG, (char *)c_undrlyng,
                                    FFO_EXPRY_DT, (char *)c_expry_dt,
                                    FFO_STRK_PRC,  (char *)&l_strike_prc,
                                    FFO_EXER_TYP,  (char *)&c_exrc_typ,
                                    FFO_OPT_TYP, (char *)&c_opt_typ,
                                    FFO_OPNPSTN_FLW, (char *)&c_opnpstn_flw,
                                    FFO_LST_TRD_QTY, (char *)&l_dlvry_qty,
                                    FFO_ORD_AMT_BLKD, (char *)&d_dlvry_amnt,
                                    FFO_DLVRY_ALLWD,       (char *)&c_dlvry_flg,
                                    FFO_CHANNEL, (char *)c_channel,
                                    FFO_XCHNG_RMRKS, (char *)c_err_msg,
                                    FFO_ORD_DT,       (char *)c_ord_dt,
																		FFO_XCHNG_CD,	(char *)c_xchng_cd,
																		FFO_AVRG_TRD_PRC, (char *)&l_dlvry_prc,
																		FFO_BOARD_LOT_QTY, (char *)&l_shares_blckd 
                                  );	
		
		
			if ( i_ch_val != 0 )
    	{
        fn_errlog( c_ServiceName, "S31035", LIBMSG, c_err_msg );
        EXEC SQL CLOSE :sys_cursor;                                   
        EXEC SQL FREE :sys_cursor;                                    
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );       
        tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
    	}
		
		}
	}
	else if( l_actn_typ == DLVRYLOG_DTLS )
	{
    while(1)
    {
      c_prd_typ='\0';
      c_ctgry_indstk='\0';
      MEMSET(c_undrlyng);
      MEMSET(c_expry_dt);
			MEMSET(c_xchng_cd);
      l_strike_prc=0;
      c_exrc_typ='\0';
      c_opt_typ='\0';
      c_opnpstn_flw='\0';
      l_dlvry_prc=0;
      l_dlvry_qty=0;
			l_shares_blckd=0;
			l_funds_blckd=0;
      d_dlvry_amnt=0;
      c_dlvry_flg='\0';
      MEMSET(c_ord_dt);
      MEMSET(c_err_msg);
      MEMSET(c_channel);

      fn_userlog(c_ServiceName,"In while for DLVRYLOG_DTLS condition");
      EXEC SQL
        FETCH :sys_cursor
        INTO  :c_prd_typ,
              :c_ctgry_indstk,
              :c_undrlyng,
              :c_expry_dt,
              :l_strike_prc,
              :c_exrc_typ,
              :c_opt_typ,
              :c_opnpstn_flw,
              :l_dlvry_prc,
              :l_dlvry_qty,
              :d_dlvry_amnt,
              :c_dlvry_flg,
              :c_channel,
              :c_err_msg,
              :c_ord_dt,
							:c_xchng_cd,
							:l_funds_blckd,
							:l_shares_blckd;



    if ( SQLCODE != 0 )
    {
      if ( SQLCODE == NO_DATA_FOUND )
      {
        break;
      }

      fn_errlog( c_ServiceName, "S31040", SQLMSG, c_err_msg  );
      EXEC SQL CLOSE :sys_cursor;
      EXEC SQL FREE :sys_cursor;
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
    if( DEBUG_MSG_LVL_3 )
    {
      fn_userlog(c_ServiceName,"c_prd_typ :%c:",c_prd_typ);
      fn_userlog(c_ServiceName,"c_ctgry_indstk :%c:",c_ctgry_indstk);
      fn_userlog(c_ServiceName,"c_undrlyng :%s:",c_undrlyng);
      fn_userlog(c_ServiceName,"c_expry_dt :%s:",c_expry_dt);
      fn_userlog(c_ServiceName,"l_strike_prc :%ld:",l_strike_prc);
      fn_userlog(c_ServiceName,"c_exrc_typ :%c:",c_exrc_typ);
      fn_userlog(c_ServiceName,"c_opt_typ :%c:",c_opt_typ);
      fn_userlog(c_ServiceName,"c_opnpstn_flw :%c:",c_opnpstn_flw);
      fn_userlog(c_ServiceName,"l_dlvry_qty :%ld:",l_dlvry_qty);
			fn_userlog(c_ServiceName,"c_xchng_cd :%s:",c_xchng_cd);
			fn_userlog(c_ServiceName,"l_funds_blckd :%ld:",l_funds_blckd);
			fn_userlog(c_ServiceName,"l_shares_blckd :%ld:",l_shares_blckd);	

      fn_userlog(c_ServiceName,"In DLVRYLOG_DTLS pack var to fml");
    }
      i_ch_val = fn_pack_vartofml ( c_ServiceName,
                                    c_err_msg,
                                    &ptr_fml_Obuf,
                                    17,
                                    FFO_PRDCT_TYP, (char *) &c_prd_typ,
                                    FFO_CTGRY_INDSTK, (char *) &c_ctgry_indstk,
                                    FFO_UNDRLYNG, (char *)c_undrlyng,
                                    FFO_EXPRY_DT, (char *)c_expry_dt,
                                    FFO_STRK_PRC,  (char *)&l_strike_prc,
                                    FFO_EXER_TYP,  (char *)&c_exrc_typ,
                                    FFO_OPT_TYP, (char *)&c_opt_typ,
                                    FFO_OPNPSTN_FLW, (char *)&c_opnpstn_flw,
                                    FFO_LST_TRD_QTY, (char *)&l_dlvry_qty,
                                    FFO_ORD_AMT_BLKD, (char *)&d_dlvry_amnt,
                                    FFO_DLVRY_ALLWD,       (char *)&c_dlvry_flg,
                                    FFO_CHANNEL, (char *)c_channel,
                                    FFO_XCHNG_RMRKS, (char *)c_err_msg,
                                    FFO_ORD_DT,       (char *)c_ord_dt,
																		FFO_XCHNG_CD,			(char *)c_xchng_cd,
																		FFO_AVRG_TRD_PRC, (char *)&l_dlvry_prc,
                                    FFO_BOARD_LOT_QTY, (char *)&l_shares_blckd
                                  );


      if ( i_ch_val != 0 )
      {
        fn_errlog( c_ServiceName, "S31045", LIBMSG, c_err_msg );
        EXEC SQL CLOSE :sys_cursor;
        EXEC SQL FREE :sys_cursor;
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
      }

    }
  }


	fn_userlog(c_ServiceName,"before close cursor");	
	EXEC SQL CLOSE :sys_cursor;
	EXEC SQL FREE :sys_cursor;
	fn_userlog(c_ServiceName,"after close cursor");

	tpreturn(TPSUCCESS, SUCC_BFR, (char *)ptr_fml_Obuf, 0, 0 );	
}
