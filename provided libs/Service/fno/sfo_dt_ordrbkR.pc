/******************************************************************************/
/*  Program           : SFO_DT_ORDRBKR                                        */
/*  Input             : FFO_USR_ID                                            */
/*                      FFO_SSSN_ID                                           */
/*                      FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_XCHNG_CD                                          */
/*                      FFO_FROM_DT                                           */
/*                      FFO_TO_DT                                             */
/*                                                                            */
/*  Output            : FFO_ORDR_RFRNC                                        */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_EXPRY_DT                                          */
/*                      FFO_STRR_PRC                                          */
/*                      FFO_OPT_TYP                                           */
/*                      FFO_EXER_TYP                                          */
/*                      FFO_ORD_VALID_DT                                      */
/*                      FFO_SPL_FLG                                           */
/*                      FFO_ORDR_FLW                                          */
/*                      FFO_ACK_NMBR                                          */
/*                      FFO_XCHNG_CD                                          */
/*                      FFO_ORDR_STTS                                         */
/*                      FFO_XCHNG_RMRKS                                       */
/*                      FFO_ORD_TOT_QTY                                       */
/*                      FFO_LMT_MKT_SL_FLG                                    */
/*                      FFO_LMT_RT                                            */
/*                      FFO_EXEC_QTY                                          */
/*                      FFO_EXEC_QTY_DAY                                      */
/*                      FFO_DSCLSD_QTY                                        */
/*                      FFO_STP_LSS_TGR                                       */
/*                      FFO_PIPE_ID                                           */
/*                      FFO_ORD_TYP                                           */
/*                      FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_TRD_DT                                            */
/*                      FFO_MOD_CAN_FLG                                       */
/*                      FFO_CANCL_QTY                                         */
/*                      FFO_EXPRD_QTY                                         */
/*                      FFO_CHANNEL                                           */
/*                      FFO_BP_ID                                             */
/*                      FFO_SUB_BUF_CNT                                       */
/*                      FFO_TRD_SUB_BUF_CNT                                   */
/*                      FFO_ERR_MSG                                           */
/*                      FFO_ACTN_ID                                           */
/*                                                                            */
/*  Description       : This Service is to get the input from Applet and in   */
/*                      turn forward the call to SFO_ORDR_BOOK 	to get the    */
/*                      Order details.		   				                          */
/*                                                                            */
/*  Log               : 11-Sep-2002  1.0  Mohit Mehrotra                      */
/*  Log               : 19-Dec-2002  1.1. Zubin Limjerwala                    */
/*  Log               : 08-Jan-2007  1.2  Vikash Kumar/Sushil Sharma          */
/*				     													  TO allow the order book download to */
/*				     														DL customers only when the download */
/*				     														is enabled for DL customers		      */
/*										: 20-Dec-2007	 1.3	IBM Migration 											*/
/*                    : 18-Jun-2012  1.4  FNO BSE Changes | Sachin            */
/*                    : 28-Aug-2014  1.5  View to FML Changes | Sachin        */
/*                    : 23-Jun-2016  VQC  VERSION QUALITY CONTROL	| Ritesh D. */
/*                    : 12-Dec-2017	 1.6  DL.Net Order and Trade History   	  */
/*                                        changes	| Afzal K.							    */
/******************************************************************************/
/*  Release 1.0       :DT						      																		*/
/******************************************************************************/

#include <stdio.h>      /* C Header File                */
#include <stdlib.h>     /* C Header File                */
#include <string.h>     /* C Header File                */
#include <sqlca.h>      /* Oracle header file           */
#include <atmi.h>       /* TUXEDO Header File           */
#include <userlog.h>    /* TUXEDO Header File           */
#include <fml32.h>      /* TUXEDO Header File           */
#include <Usysflds.h>   /* TUXEDO Field Definitions     */
#include <fo_fml_def.h> /* created for FML handling     */
/**** #include <fo_view_def.h> *** Ver 1.5 ***/  /* created for FML to/from VIEW conversion */
#include <fo_view_def.h> /*** Ver 1.5 ***/
#include <fo.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_log.h>			/* ver 1.3 */
#include <fml_rout.h>		/* ver 1.3 */
#include <fn_read_debug_lvl.h>	/* ver 1.3 */


#define TOTAL_FML   4				/*********  Ver 1.2 ADDED**********/

/***	char c_ServiceName[33];			*** Commented in VQC ***/

void SFO_DT_ORDRBKR( TPSVCINFO *rqst )
{

  /* Tuxedo specific variables  */
  FBFR32  *ptr_fml_Ibuf;     /* Pointer to FML Input buffer    */
  FBFR32  *ptr_fml_Obuf;     /*  Pointer to FML Output buffer */

  /**** Ver 1.5 Commented *******
  EXEC SQL BEGIN DECLARE SECTION;
    struct vw_usr_prfl st_usr_prfl;
    struct vw_err_msg st_err_msg;
  EXEC SQL END DECLARE SECTION;
  ****** Ver 1.5 *****************/

  /* Application specific variables   */
  int i_err [TOTAL_FML];
  int i_ferr [TOTAL_FML];
  int i_returncode;
  int i_cnt;
  /***	char c_usr_id [ 9 ];			*** Commented in VQC ***/
  char c_err_msg [ 256 ];
  char c_fno_to_dt [ 12 ];
  char c_fno_from_dt [ 12 ];
 	/** 	long l_sssn_id;						*** Commented in VQC ***/
  long l_actn_id;
  char c_fno_prdct_typ;
  char c_fno_operation_typ;
  char c_fno_ordr_stts;
	/***	char c_pipe_id [3];				*** Commented in VQC ***/	
	char c_rout_crt[4];
	char c_ServiceName[33];					/*** changed Global variable to Local variable in VQC ***/

  EXEC SQL INCLUDE "table/exg_xchng_mstr.h";      /*********  Ver 1.2 **********/

  /* Initialisation of Variables */
 /*** sql_exg_dl_dwnld_allwd = 'N';  *****Commeneted in Ver 1.6*****/
     sql_exg_dl_dwnld_allwd = 'Y';  /***Added in Ver 1.6****/
  ptr_fml_Ibuf = (FBFR32 *)rqst->data;
  strcpy(c_ServiceName, rqst->name);
	INITDBGLVL(c_ServiceName);	/*ver  1.3 */

	if(DEBUG_MSG_LVL_3)
	{
    fn_userlog(c_ServiceName,"SERVICE %s STARTING",c_ServiceName);
 	}

  i_returncode  = fn_unpack_fmltovar (
                          c_ServiceName,
                          c_err_msg,
                          ptr_fml_Ibuf,
                  /*        6,							*** Commented in VQC **/
                          4,								/*** Added in VQC ***/
                  /**        FFO_USR_ID, ( char * )c_usr_id, NULL,		** Commented in VQC **/
                  /**        FFO_SSSN_ID, ( char * )&l_sssn_id, NULL,	** Commented in VQC **/
                          FFO_EBA_MTCH_ACT_NO,(char *)sql_exg_mtch_bnk_accnt.arr, NULL,
                          FFO_XCHNG_CD, ( char * )sql_exg_xchng_cd, NULL,
                          FFO_FROM_DT, ( char * )c_fno_from_dt,NULL,
                          FFO_TO_DT, ( char * )c_fno_to_dt, NULL );

  if (i_returncode == SYSTEM_ERROR )
  {
    fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    l_actn_id = -1;
    Fadd32( ptr_fml_Ibuf, FFO_ACTN_ID, (char *)&l_actn_id, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  SETLEN(sql_exg_mtch_bnk_accnt);
 
	c_fno_prdct_typ     = 'A';
	c_fno_operation_typ = STATUS_PRODUCT_AND_DATE_IP;
	c_fno_ordr_stts     = 'A';

  strcpy(c_rout_crt,"100");

	if(DEBUG_MSG_LVL_3)
	{
 /** 	fn_userlog(c_ServiceName, "c_usr_id <%s>", c_usr_id);			** Commented in VQC ***/
 /** 	fn_userlog(c_ServiceName, "l_sssn_id <%ld>", l_sssn_id);	** Commented in VQC ***/
  	fn_userlog(c_ServiceName, "sql_exg_mtch_bnk_accnt.arr <%s>", sql_exg_mtch_bnk_accnt.arr);
  	fn_userlog(c_ServiceName, "sql_exg_xchng_cd <%s>", sql_exg_xchng_cd);
  	fn_userlog(c_ServiceName, "c_fno_prdct_typ <%c>", c_fno_prdct_typ);
  	fn_userlog(c_ServiceName, "c_fno_operation_typ <%c>", c_fno_operation_typ);
  	fn_userlog(c_ServiceName, "c_fno_ordr_stts <%c>", c_fno_ordr_stts);
  	fn_userlog(c_ServiceName, "c_fno_from_dt <%s>", c_fno_from_dt);
  	fn_userlog(c_ServiceName, "c_fno_to_dt <%s>", c_fno_to_dt);
	}



  /**************************************************** VER 1.2 ADDITION STARTS ********/

/****** Commented in Ver 1.6***

  EXEC SQL
  SELECT EXG_DL_DWNLD_ALLWD into :sql_exg_dl_dwnld_allwd
  FROM   EXG_XCHNG_MSTR
  WHERE  EXG_MKT_TYP = 'D'
  AND    EXG_XCHNG_CD LIKE :sql_exg_xchng_cd
  AND    EXG_XCHNG_CD != 'BFO';                *** Ver 1.4 ***
 
  if ( SQLCODE != 0 && SQLCODE != TOO_MANY_ROWS_FETCHED )
  {
    fn_errlog( c_ServiceName, "S31010", SQLMSG, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    l_actn_id = -1;
    Fadd32( ptr_fml_Ibuf, FFO_ACTN_ID ,(char*)&l_actn_id, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
  else if ( SQLCODE == TOO_MANY_ROWS_FETCHED ) 
  {
    fn_errlog( c_ServiceName, "B56037", DEFMSG, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    l_actn_id = -1;
    Fadd32( ptr_fml_Ibuf, FFO_ACTN_ID ,(char*)&l_actn_id, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

*****Comment ends for Ver 1.6 *******/

  if (sql_exg_dl_dwnld_allwd == 'Y')
  {

 /***   if (strcmp((char*)sql_exg_mtch_bnk_accnt.arr,"*") != 0 || (strcmp((char*)sql_exg_mtch_bnk_accnt.arr,"*") == 0 && strcmp(c_fno_from_dt,c_fno_to_dt) == 0))
    {	**Commented In Ver 1.6 To view ORder Book History Report during Market Hours	***/
			
			if(DEBUG_MSG_LVL_0)	/*** Added in VQC ***/
			{
				fn_userlog(c_ServiceName, "INSIDE DOWNLOAD ALLOWED");
			}

		  i_err[0]   = Fadd32(ptr_fml_Ibuf,FFO_PRDCT_TYP,(char *)&c_fno_prdct_typ,0);
  		i_ferr [0] = Ferror32;
  		i_err[1] 	 = Fadd32(ptr_fml_Ibuf,FFO_OPERATION_TYP,(char *)&c_fno_operation_typ,0);
  		i_ferr [1] = Ferror32;
  		i_err[2] 	 = Fadd32(ptr_fml_Ibuf,FFO_ORDR_STTS,(char *)&c_fno_ordr_stts,0);
  		i_ferr [2] = Ferror32;
  		i_err[3] 	 = Fadd32(ptr_fml_Ibuf,FFO_ROUT_CRT,(char *)&c_rout_crt,0);
  		i_ferr [3] = Ferror32;

  		for(i_cnt=0;i_cnt<4;i_cnt++)
  		{
    		if ( i_err[i_cnt] == -1 )
    		{
      		fn_errlog( c_ServiceName, "S31015", FMLMSG, c_err_msg  );
      		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      		l_actn_id = -1;
      		Fadd32( ptr_fml_Ibuf, FFO_ACTN_ID, (char *)&l_actn_id, 0 );
      		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  			}
			}
		
			if(DEBUG_MSG_LVL_0)	/*** Added in VQC ***/
			{
				fn_userlog(c_ServiceName, "FORWARDING TO SERVICE SFO_ORDR_BOOK"); 
			}
 
      tpforward ( "SFO_ORDR_BOOK", ( char * )ptr_fml_Ibuf, 0, 0 );
/***	Commented In Ver 1.6
    else
    {
      fn_userlog( c_ServiceName, "B56042", DEFMSG, c_err_msg);
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn( TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    } *comment ends for ver 1.6**/
 }
  else
  {
		fn_errlog( c_ServiceName, "B56037", DEFMSG, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    l_actn_id = -1;
    Fadd32( ptr_fml_Ibuf, FFO_ACTN_ID ,(char*)&l_actn_id, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }


  /**************************************** VER 1.2 ADDITION ENDS ********/

  tpreturn(TPSUCCESS, 0L, (char *)ptr_fml_Obuf, 0, 0);

}
