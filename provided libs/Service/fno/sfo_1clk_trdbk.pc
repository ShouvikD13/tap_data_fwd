
/*  Program           : SFO_1CLK_TRDBK                                        */
/*                                                                            */
/*  Input             : Required                                              */
/*                      FFO_USR_ID                                            */
/*                      FFO_SSSN_ID                                           */
/*                      FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_XCHNG_CD                                          */
/*                      FFO_OPERATION_TYP                                     */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_EXER_TYP                                          */
/*                      FFO_FROM_DT                                           */
/*                      FFO_TO_DT                                             */
/*                      FFO_SPL_FLG                                           */
/*                      FFO_ORDR_RFRNC                                        */
/*                                                                            */
/*  Output            : FFO_ORDR_RFRNC                                        */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_EXPRY_DT                                          */
/*                      FFO_EXER_TYP                                          */
/*                      FFO_OPT_TYP                                           */
/*                      FFO_STRK_PRC                                          */
/*                      FFO_EXEC_QTY                                          */
/*                      FFO_EXCTD_RT                                          */
/*                      FFO_TRD_DT                                            */
/*                      FFO_INSTRMNT_TYP                                      */
/*                      FFO_TRD_FLW                                           */
/*                      FFO_TRD_RFRNC                                         */
/*                      FFO_BRKRG_VL                                          */
/*                      FFO_AMOUNT                                            */
/*                                                                            */
/*  Description       : This service retrieves the values of the entire trade */
/*                      book when given different input parameters based on   */
/*                      different needs. The different needs are described    */
/*                      as different operation types.                         */
/*                      A - Underlying(Stock Code) as Input                   */
/*                      B - Without Underlying(Stock Code)                    */
/*                                                                            */
/*  Log               : 1.0		11-Oct-2021	Shlok Ghan                          */
/*                    : TOL   07-Aug-2023 Agam                                */
/******************************************************************************/
/******************************************************************************/
/* 1.0    -   New Release                                                     */
/* TOL    -   Tux on Linux                                                    */
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fo.h>
#include <fo_fml_def.h>
#include <fo_view_def.h> 
#include <fn_session.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_log.h>       
#include <fn_read_debug_lvl.h>  
#include <fml_rout.h>   
#include <sys/time.h>
#include <time.h>      
char c_time[12];      
void fn_gettime(void);  

void SFO_1CLK_TRDBK(TPSVCINFO *rqst)
{

	EXEC SQL INCLUDE "table/ifx_usr_mstr.h"; 
	EXEC SQL INCLUDE "table/pism_prepaid_info_sch_mstr.h"; 

  FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;

  char c_ServiceName[33];
  char c_errmsg[256];
  char c_spl_flg;
  char c_user_id[9];

  long l_sssn_id = 0;
  int  counter;
	int  i_err[23];  
  int  i_ferr[20];   
  int  i_cnt;
  int  i;
  int  cnt_sysdt;
  int  i_hist_flg ;
  int i_error[4];
  int i_serr[19];   
	int	i_berr[22];	
	int	i_rec_cnt  = 1 ;   
	int  i_returncode;  
	
   EXEC SQL BEGIN DECLARE SECTION;
  long    li_sssn_id_chk;
   sql_cursor  sys_cursor;
   sql_cursor  sys_iod_cursor;   
   char c_opr_typ;
   char c_ordr_rfrnc [ 19 ];
   char c_ord_rfr [ 19 ];
   char c_trd_rfrnc [ 19 ];
   varchar c_trd_date [ 19 ];
   varchar c_prev_trd_date [ 19 ];			
   varchar c_exp_date [ 19 ];
   varchar c_frm_dt[ LEN_DATE ];
   varchar c_to_dt[ LEN_DATE ];
   varchar c_trdbk_seq[25];		
   char c_product_typ = '\0';	
   char c_prd_typ;
   char c_mtch_accnt_no[11];
   char c_exchange_cd[4];
   char c_xchng_cd[4]; 
	 char c_indstk[2];	
	long  cnt_rec=0;  
   char c_exrc_typ;
   char c_opt_typ;
   char c_trd_flw;
	 char c_rec_flg='\0';	
   char c_trade_flw;
   char c_trade_flow;
   char c_underlying[7];
   char c_unlying[7];
   char c_exercise_type;
	 char c_cntrctnt_nmbr[25];		
	 char c_strtgy_id;
	 char c_prtfl_name[50];
	
   char c_clm_brkr_cmpt_flg;   
   varchar c_clm_fno_schm_code[10];  
   char c_clm_igain_op_flg;      		
   varchar c_clm_igain_op_schm[10];  
   char c_clm_igain_fp_flg;      		
   varchar c_clm_igain_fp_schm[10];  
   char c_prepaid_flg;  						
   char c_source_flg;   
   char c_advisor_id[20];  
   char c_sys_order = 'N';  

   long l_strk_prc;
   long l_exctd_qty;
   long l_exctd_rt;
   long l_brkg_val;

   long l_stt;					
   long l_srv_tax;		
   long l_sebi_tt;	
   long l_tran_chrg;	
	 long	l_stmp_duty;	
   long l_incl_all =0;
	 long	l_ltp;			
   long l_sum_tax = 0; 


   double d_value =0.0; 
	 double d_exctd_rt = 0.0 ;			
	 double d_ltp = 0.0 ;					



	 int i_total_lots = 0;
	 int i_intra_day_lots = 0;
	 int i_inrange_lots = 0;
	 int i_below_range_lots = 0;
	 int i_above_range_lots = 0;
	 int i_obc_carry_fwd_lot = 0;
	 long l_inrange_charges = 0;
	 double l_below_range_charges = 0;
	 long l_above_range_charges = 0;
	 double l_carry_fwd_charges = 0;
	 long l_total_charges = 0;


	 int i_loop_cnt = 0;
	 varchar c_osm_schm_code[10];
	 varchar c_period[50];
	 varchar c_osd_lwr_rng_lotsz[30];
	 varchar c_osd_upr_rng_lotsz[30];
	 varchar c_osd_brkr_rng_rate[30];
	 varchar c_osd_chrg_base[30];
	 varchar c_osm_carry_frwd[30];

	 varchar c_below_range_charges[30];
	 varchar c_schm_desc[30];
	 varchar c_below_range[30];
	 varchar c_lot_range[30];
	 varchar c_lot_range_charges[30];
	 varchar c_above_range[30];
	 varchar c_above_range_charges[30];
	 varchar c_carry_fwd_charges[30];

	 varchar c_lot_charges_range[150];
	 varchar c_lot_charges_min[150];
	 varchar c_lot_charges_max[150];

	 int 		i_buf_len=0;
   int    i_buffer_len = 0;      
 

	 varchar c_igain_schm_code[10];			
	 varchar c_igain_schm_desc[30];		
   varchar c_igain_ordr_rfrnc [ 100 ];
	 varchar c_igain_ordr_dtls[300];	
	 varchar c_igain_ordr_dtls1[300];		
	 double	 d_profit_rate=0;					
	 double  d_loss_rate = 0;				
	 int  i_ordr_cnt=0;	

   EXEC SQL END DECLARE SECTION;

  struct vw_usr_prfl st_usr_prfl;
  struct vw_err_msg st_err_msg;

  MEMSET(st_usr_prfl);
  MEMSET(st_err_msg);

  if (DEBUG_MSG_LVL_2)
  { 
   fn_gettime(); 
   fn_userlog(c_ServiceName,"  - TIME_STATS  Service SFO_TRADE_BOOK Starts  :%s:",c_time); 
  }

  ptr_fml_Ibuf = (FBFR32 *)rqst->data;
  strcpy( c_ServiceName, rqst->name );
	INITDBGLVL(c_ServiceName);   


  i_error[0] = Fget32(ptr_fml_Ibuf,FFO_USR_ID,0,(char *)c_user_id,0);
  i_error[1] = Fget32(ptr_fml_Ibuf,FFO_SSSN_ID,0,(char *)&l_sssn_id,0);

	if( DEBUG_MSG_LVL_3 )
	{
  	fn_userlog(c_ServiceName,"User iD is:    [%s] ",c_user_id);
  	fn_userlog(c_ServiceName,"Session iD is: [%ld] ",l_sssn_id);
	}


	MEMSET(c_indstk);			
	MEMSET(c_unlying);	
  for (i=0; i<2; i++)
  {
    if (i_error[i] == -1 )
    {
       fn_errlog(c_ServiceName,"S31005",FMLMSG, c_errmsg); 
      if( DEBUG_MSG_LVL_3 ) {      
            fn_userlog(c_ServiceName,"Error in loop : |%d| ",i);  
      }
      Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,(char *)c_errmsg,0);
      tpreturn(TPFAIL,0L,(char *)ptr_fml_Ibuf,0L,0);
    }
  }

	if( DEBUG_MSG_LVL_5 )
	{
  	fn_userlog(c_ServiceName,"Before session validation");
	}



  i_err[0] = Fget32( ptr_fml_Ibuf, FFO_OPERATION_TYP, 0,
                                   (char *)&c_opr_typ, 0 );
  i_ferr [0] = Ferror32;	

  i_err[1] = Fget32( ptr_fml_Ibuf, FFO_XCHNG_CD, 0,
                                   (char *)c_exchange_cd, 0 );
  i_ferr [1] = Ferror32;

  i_err[2] = Fget32( ptr_fml_Ibuf, FFO_UNDRLYNG, 0,
                                   (char *)c_underlying, 0 );
  i_ferr [2] = Ferror32;

  i_err[3] = Fget32( ptr_fml_Ibuf, FFO_FROM_DT, 0,
                                   (char *)c_frm_dt.arr, 0 );
  i_ferr[3] = Ferror32;

  i_err[4] = Fget32( ptr_fml_Ibuf, FFO_TO_DT, 0,
                                   (char *)c_to_dt.arr, 0 );
  i_ferr[4] = Ferror32;

  i_err[5] = Fget32( ptr_fml_Ibuf, FFO_PRDCT_TYP, 0,
                                   (char *)&c_product_typ, 0 );
  i_ferr[5] = Ferror32;

  i_err[6] = Fget32( ptr_fml_Ibuf, FFO_TRD_FLW, 0,
                                   (char *)&c_trd_flw, 0 );
  i_ferr[6] = Ferror32;

  i_err[7] = Fget32( ptr_fml_Ibuf, FFO_EBA_MTCH_ACT_NO, 0,
                                   (char *)c_mtch_accnt_no, 0 );
  i_ferr[7] = Ferror32;

  i_err[8] = Fget32( ptr_fml_Ibuf, FFO_SPL_FLG, 0,
                                   (char *)&c_spl_flg, 0 );
  i_ferr[8] = Ferror32;

  i_err[9] = Fget32( ptr_fml_Ibuf, FFO_ORDR_RFRNC, 0,
                                   (char *)c_ord_rfr, 0 );
  i_ferr[9] = Ferror32;

  i_err[10] = Fget32( ptr_fml_Ibuf, FFO_OPERATION_TYP, 0,
                                   (char *)&c_opr_typ, 0 );
  i_ferr [10] = Ferror32;
	
  i_err[11] = Fget32( ptr_fml_Ibuf, FFO_EX_ORDR_TYP, 0,
                                   (char *)&c_sys_order, 0 );
  i_ferr [11] = Ferror32;
	
	i_err[12] = Fget32( ptr_fml_Ibuf, FFO_NKD_BLKD_FLG, 0,
                                   (char *)&c_rec_flg, 0 );
  i_ferr [12] = Ferror32;

  for ( i_cnt = 0;  i_cnt <= 12; i_cnt++ )           
  {
    if ( (i_err[i_cnt] == -1) && (i_ferr[i_cnt] != FNOTPRES ))
    {
      fn_userlog(c_ServiceName,"i_cnt[%ld]",i_cnt);
      fn_errlog( c_ServiceName, "S31010", Fstrerror32( i_ferr[i_cnt] ),
                 c_errmsg  );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
    
  }

  if (strcmp( c_exchange_cd, "ALL") == 0 )
  { 
    strcpy(c_exchange_cd , "%");   
    rtrim(c_exchange_cd);
  }

 	if( DEBUG_MSG_LVL_0 )
	{
    fn_userlog(c_ServiceName,"operation type is    [%c]",c_opr_typ);
    fn_userlog(c_ServiceName,"exchange code is     [%s]",c_exchange_cd);
    fn_userlog(c_ServiceName,"underlying is        [%s]",c_underlying);
    fn_userlog(c_ServiceName,"product type is      [%c]",c_product_typ);
    fn_userlog(c_ServiceName,"trade flow is        [%c]",c_trd_flw);
    fn_userlog(c_ServiceName,"match account no is  [%s]",c_mtch_accnt_no);
    fn_userlog(c_ServiceName,"Special Flag is      [%c]",c_spl_flg);
    fn_userlog(c_ServiceName,"Order ref no is      [%s]",c_ord_rfr);
		fn_userlog(c_ServiceName,"Recommendation Flag is[%c]",c_rec_flg);
	}

	if(c_rec_flg == 'A')
	{
		c_rec_flg = '%';
	}

  SETLEN(c_frm_dt) ;	
  SETLEN(c_to_dt) ;	
	
	if( DEBUG_MSG_LVL_1)		
	{
		fn_userlog(c_ServiceName," The From Date is :%s: and To Date is :%s:",c_frm_dt.arr,c_to_dt.arr); 
		fn_userlog(c_ServiceName,"Match Acocunt :%s: | Operation Type :%c: | Underlying :%s: | Product TYp :%c: | Trade Flow :%c: | Special Flag :%c: ",c_mtch_accnt_no,c_opr_typ,c_underlying,c_product_typ,c_trd_flw,c_spl_flg);	
 	}

  if( DEBUG_MSG_LVL_5 )          
	{
    fn_userlog(c_ServiceName,"from date is  [%s]",c_frm_dt.arr);
    fn_userlog(c_ServiceName,"to date is    [%s]",c_to_dt.arr);
  }


  
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();  
   fn_userlog(c_ServiceName,"  - TIME_STATS Before fn_chk_sssn  :%s:",c_time);  
  }

	if ( l_sssn_id != 0 )
	{
  i_returncode = Fvftos32( ptr_fml_Ibuf,
                           (char *) &st_usr_prfl,
                           "vw_usr_prfl" ); 

  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31015", FMLMSG, c_errmsg);
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  /*** Added for Order Routing ***/
  fn_init_ddr_val ( st_usr_prfl.c_rout_crt );

  i_returncode = fn_chk_sssn( c_ServiceName, &st_usr_prfl,
                                             &st_err_msg ) ;

  if ( i_returncode == -1 )
  {
    fn_errlog(c_ServiceName,"S31020",LIBMSG, st_err_msg.c_err_msg);
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, st_err_msg.c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  if (DEBUG_MSG_LVL_2)
  { 
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS after fn_chk_sssn  :%s:",c_time);  
	}
  }
   


  if ( c_trd_flw == 'A' )
  {
    c_trade_flw = '%';
  }
  else
  {
    c_trade_flw = c_trd_flw;
  }


  SETLEN( c_frm_dt );
  SETLEN( c_to_dt );

   /* converting the date into dd-mon-yyyy */

	if(c_spl_flg != 'B' )		
	{

  	if (DEBUG_MSG_LVL_2)
  	{ 
   		fn_gettime();   
   		fn_userlog(c_ServiceName,"  - TIME_STATS Before select from DUAL  :%s:",c_time);  
  	}

  	EXEC SQL
  	SELECT to_char(to_date(:c_frm_dt,'dd-mm-yyyy'),'dd-mon-yyyy'),
    	     to_char(to_date(:c_to_dt,'dd-mm-yyyy'),'dd-mon-yyyy')
  	INTO	 :c_frm_dt,
         	 :c_to_dt
  	FROM   DUAL;

   	if (SQLCODE != 0 )
  	{
    	fn_errlog( c_ServiceName, "S31025", SQLMSG, c_errmsg );
    	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpcommit(0);		
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  	}

  	if (DEBUG_MSG_LVL_2)
  	{
   		fn_gettime();   
   		fn_userlog(c_ServiceName,"  - TIME_STATS After select from DUAL  :%s:",c_time);  
  	}

 		SETNULL(c_frm_dt);
 		SETNULL(c_to_dt);

	}
 
	if( DEBUG_MSG_LVL_5 )
	{      
  	fn_userlog( c_ServiceName, " c_frm_dt after converting into dd-mon-yyyy : [%s] ",c_frm_dt.arr );
  	fn_userlog( c_ServiceName, " c_to_dt after converting into dd-mon-yyyy : [%s] ",c_to_dt.arr );
	}


  MEMSET(c_advisor_id);
  if (Fget32(ptr_fml_Ibuf,FFO_USER_CODE,0,(char *)c_advisor_id,0)==-1)
  {
    if( Ferror32 == FNOTPRES )
    {
      strcpy((char *)c_advisor_id, "NA");
    }
    else
    {
      fn_errlog(c_ServiceName,"S31030",FMLMSG,c_errmsg);
      Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,(char *)c_errmsg,0);
      tpcommit(0);
      tpreturn(TPFAIL,0L,(char *)ptr_fml_Ibuf,0L,0);
    }
  }
  


  if (Fget32(ptr_fml_Ibuf,FFO_BAT_TAG,0,(char *)sql_ifx_acc_id.arr,0)==-1)
  {
    if( Ferror32 == FNOTPRES )
    {
      strcpy((char *)sql_ifx_acc_id.arr, "0");
    }
    else
    {
      fn_errlog(c_ServiceName,"S31035",FMLMSG,c_errmsg);
      Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,(char *)c_errmsg,0);
      tpcommit(0);      
      tpreturn(TPFAIL,0L,(char *)ptr_fml_Ibuf,0L,0);
    }
  }
  SETLEN(sql_ifx_acc_id);

	if( DEBUG_MSG_LVL_5 )
	{
  	fn_userlog(c_ServiceName,"ifx ac id  is      [%s]",sql_ifx_acc_id.arr);
  	fn_userlog(c_ServiceName,"match acc is   [%s]",c_mtch_accnt_no);
	}


  if (strcmp((char *)sql_ifx_acc_id.arr,"0")!=0)
  {
  
  	if (DEBUG_MSG_LVL_2)
  	{
   		fn_gettime();   
   		fn_userlog(c_ServiceName,"  - TIME_STATS Before select ifx join uac  :%s:",c_time);  
  	} 
  
  EXEC SQL
      SELECT  count(*)
      INTO    :cnt_rec
      FROM    uac_usr_accnts,ifx_usr_mstr
      WHERE   ifx_acc_id          = :sql_ifx_acc_id
      AND     ifx_usr_id          = uac_usr_id
			AND     uac_clm_mtch_accnt  = :c_mtch_accnt_no;

    if (SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31040", SQLMSG, c_errmsg );
      fn_userlog(c_ServiceName,"in 1");
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

  	if (DEBUG_MSG_LVL_2)
  	{ 
   		fn_gettime();   
   		fn_userlog(c_ServiceName,"  - TIME_STATS after  select ifx join uac  :%s:",c_time);  
  	}

    if (cnt_rec==0)
    {
      strcpy ( c_errmsg, "Not matching");
      fn_errlog( c_ServiceName, "B31029",DEFMSG, c_errmsg  );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpcommit(0);      
      tpreturn( TPFAIL, 0L, (char *)ptr_fml_Ibuf, 0L, 0 );
    }

     EXEC SQL ALLOCATE :sys_cursor ;
  
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before select cursor FTD for ifx  :%s:",c_time);  
  } 

    EXEC SQL  EXECUTE
           BEGIN
            OPEN  :sys_cursor FOR
              SELECT
	        		  ftd_xchng_cd,   
                ltrim(rtrim(ftd_undrlyng)),
                ftd_prdct_typ,
                ftd_strk_prc,
                ftd_opt_typ,
                ftd_exer_typ,
                ftd_expry_dt,
                to_char ( ftd_trd_dt, 'dd-Mon-yyyy' ),
                ftd_trd_flw,
                ftd_exctd_qty,
                ftd_exctd_rt,
                ftd_indstk,
                ftd_ordr_rfrnc,
								ftd_eba_trd_ref,
                NVL(ftd_brkg,0)
                FROM  ftd_fo_trd_dtls,FDM_DT_MTCH
            		WHERE  ftd_clm_mtch_accnt = :c_mtch_accnt_no	
                AND  ftd_xchng_cd       LIKE :c_exchange_cd   
                AND  ftd_prdct_typ      = :c_product_typ
                AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                AND  trunc(ftd_trd_dt) <= to_date(:c_to_dt,'dd-mon-yyyy')
                AND  ftd_trd_flw     LIKE :c_trade_flw
              UNION ALL
              SELECT
	      			 ftd_xchng_cd,      
               ltrim(rtrim(ftd_undrlyng)),
               ftd_prdct_typ,
               ftd_strk_prc,
               ftd_opt_typ,
               ftd_exer_typ,
               ftd_expry_dt,
               to_char ( ftd_trd_dt, 'dd-Mon-yyyy' ),
               ftd_trd_flw,
               ftd_exctd_qty,
               ftd_exctd_rt,
               ftd_indstk,
               ftd_ordr_rfrnc,
               ftd_eba_trd_ref,
               NVL(ftd_brkg,0)
               FROM  ftd_fo_trd_dtls_hstry,FDM_DT_MTCH
               WHERE ftd_clm_mtch_accnt = :c_mtch_accnt_no	
               AND  ftd_xchng_cd       LIKE :c_exchange_cd  
               AND  ftd_prdct_typ      = :c_product_typ
               AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
               AND  trunc(ftd_trd_dt) <= to_date(:c_to_dt,'dd-mon-yyyy')
               AND  ftd_trd_flw     LIKE :c_trade_flw
	       ORDER BY 13,8,2,9 DESC;	    
          END;
    END-EXEC;
    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31045", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :sys_cursor; 
      EXEC SQL FREE :sys_cursor;
			 Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpcommit(0);      
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

  if (DEBUG_MSG_LVL_2)
  {     
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS after select cursor FTD for ifx  :%s:",c_time);  
  }

    ptr_fml_Obuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN * 10 );				

    if ( ptr_fml_Obuf == NULL )
    {
      fn_errlog( c_ServiceName, "S31050", FMLMSG, c_errmsg  );
      EXEC SQL CLOSE :sys_cursor;
      EXEC SQL FREE :sys_cursor;
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpcommit(0);      
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    for( ; ; )
    {
			if( DEBUG_MSG_LVL_5 )
			{
      	fn_userlog(c_ServiceName," Value of counter is [%d] ",counter);
			}

  if (DEBUG_MSG_LVL_2)
  {
  fn_gettime();   
  fn_userlog(c_ServiceName,"  - TIME_STATS before fetch  cursor FTD for ifx  :%s:",c_time);  
  } 
 
      EXEC SQL FETCH :sys_cursor
                INTO :c_xchng_cd,   
		    						:c_unlying,
                    :c_prd_typ,
                    :l_strk_prc,
                    :c_opt_typ,
                    :c_exrc_typ,
                    :c_exp_date,
                    :c_trd_date,
                    :c_trade_flow,
										:l_exctd_qty,
                    :l_exctd_rt,
                    :c_indstk,
                    :c_ordr_rfrnc,
                     :c_trd_rfrnc,
                    :l_brkg_val ;

      if ( SQLCODE != 0 )
      {

        if ( SQLCODE == NO_DATA_FOUND )
        {
          fn_userlog(c_ServiceName," Inside NO DATA FOUND ");
          break;
        }
        else
        {
          fn_errlog( c_ServiceName, "S31055", SQLMSG, c_errmsg  );
          EXEC SQL CLOSE :sys_cursor;
          EXEC SQL FREE :sys_cursor;
          tpfree ( ( char * ) ptr_fml_Obuf );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      		tpcommit(0);     
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }

      }

  		if (DEBUG_MSG_LVL_2)
  		{
   			fn_gettime();   
   			fn_userlog(c_ServiceName,"  - TIME_STATS after  fetch  cursor FTD for ifx  :%s:",c_time);  
  		}
      SETNULL(c_exp_date);
      SETNULL(c_trd_date);

			if( DEBUG_MSG_LVL_5 )
			{
      	fn_userlog(c_ServiceName," Before Fadd312 ");
				fn_userlog(c_ServiceName," order ref is %s",c_ordr_rfrnc);
			}

      i_err[0] = Fadd32(ptr_fml_Obuf,FFO_UNDRLYNG,(char *)c_unlying,0) ;
      i_err[1] = Fadd32(ptr_fml_Obuf,FFO_ORDR_RFRNC,(char *)c_ordr_rfrnc,0) ;
      i_err[2] = Fadd32(ptr_fml_Obuf,FFO_TRD_RFRNC,(char *)c_trd_rfrnc,0) ;
      i_err[3] = Fadd32(ptr_fml_Obuf,FFO_PRDCT_TYP,(char *)&c_prd_typ,0) ;
      i_err[4] = Fadd32(ptr_fml_Obuf,FFO_EXPRY_DT,(char *)c_exp_date.arr,0) ;
      i_err[5] = Fadd32(ptr_fml_Obuf,FFO_EXER_TYP,(char *)&c_exrc_typ,0) ;
			i_err[6] = Fadd32(ptr_fml_Obuf,FFO_OPT_TYP,(char *)&c_opt_typ,0) ;
      i_err[7] = Fadd32(ptr_fml_Obuf,FFO_STRK_PRC,(char *)&l_strk_prc,0) ;
      i_err[8] = Fadd32(ptr_fml_Obuf,FFO_EXEC_QTY,(char *)&l_exctd_qty,0) ;
      i_err[9] = Fadd32(ptr_fml_Obuf,FFO_EXCTD_RT,(char *)&l_exctd_rt,0) ;
      i_err[10] = Fadd32(ptr_fml_Obuf,FFO_INSTRMNT_TYP,(char *)&c_indstk,0) ;
      i_err[11] = Fadd32(ptr_fml_Obuf,FFO_TRD_DT,(char *)c_trd_date.arr,0) ;
      i_err[12] = Fadd32(ptr_fml_Obuf,FFO_TRD_FLW,(char *)&c_trade_flow,0) ;
      i_err[13] = Fadd32(ptr_fml_Obuf,FFO_BRKRG_VL,(char *)&l_brkg_val,0) ;
      i_err[14] = Fadd32(ptr_fml_Obuf,FFO_XCHNG_CD,(char *)c_xchng_cd,0) ;   

      for(i=0;i<15;i++)    
      {
        if(i_err[i] == -1)
        {
          fn_userlog(c_ServiceName,"Error in Fadd for i [%d]",i);
          fn_errlog( c_ServiceName, "S31060", FMLMSG, c_errmsg  );
          EXEC SQL CLOSE :sys_cursor;
          EXEC SQL FREE  :sys_cursor; 
          tpfree ( ( char * ) ptr_fml_Obuf );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      		tpcommit(0);      
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
      }

      if(Fneeded32(1,MIN_FML_BUF_LEN) > Funused32(ptr_fml_Obuf))
    {
      counter ++;
      ptr_fml_Obuf = (FBFR32 *)tprealloc( (char *)ptr_fml_Obuf, Fsizeof32(ptr_fml_Obuf) +
                                                                counter * MIN_FML_BUF_LEN * 5 ); 
      if ( ptr_fml_Obuf == NULL )
      {
        fn_errlog( c_ServiceName, "S31065", TPMSG, c_errmsg  );
        EXEC SQL CLOSE :sys_cursor;
        EXEC SQL FREE  :sys_cursor; 
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      	tpcommit(0);      
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
    }

   } /* For loop */

   EXEC SQL CLOSE :sys_cursor;
   EXEC SQL FREE :sys_cursor;

    tpreturn( TPSUCCESS, 0, (char *)ptr_fml_Obuf, 0 , 0 );


  }

	c_prepaid_flg='N';				
	sql_pism_futures_prcntg=0; 
	sql_pism_options_lot=0;		
  cnt_sysdt = 0;

  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before select from DUAL  :%s:",c_time);  
  }
 
 EXEC SQL
 	SELECT 1
	INTO :cnt_sysdt FROM DUAL
 	WHERE trunc(SYSDATE) = to_date(:c_to_dt,'DD-MON-YYYY')
 	AND trunc(SYSDATE) = to_date(:c_frm_dt,'DD-MON-YYYY') ;

 if(( SQLCODE != 0) && ( SQLCODE != NO_DATA_FOUND ))
   {
      fn_errlog( c_ServiceName, "S31070", SQLMSG, c_errmsg  );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpcommit(0);      
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
   }

  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS after select from DUAL  :%s:",c_time);  
  }
  
  if(cnt_sysdt == 1)
   {

     i_hist_flg = 0;

   }
  else if(cnt_sysdt == 0)
   {

     i_hist_flg = 1;

   }

 SETNULL(c_frm_dt);
 SETNULL(c_to_dt);
 
	if( DEBUG_MSG_LVL_5 )
	{
  	fn_userlog( c_ServiceName, " cnt_sysdt is:    [%d] ",cnt_sysdt);
  	fn_userlog( c_ServiceName, " History Flag is: [%d] ",i_hist_flg);
  	fn_userlog(c_ServiceName,"Before Allocating Cursor ");
	}


  EXEC SQL ALLOCATE :sys_cursor ;

/************** handling for special flag = p and 1click trade book **************/

  if ( c_spl_flg == 'P' )
  {
		 fn_userlog(c_ServiceName,"Inside 'P'- Primary page of trade book.");
		if( DEBUG_MSG_LVL_3)
		{
    	fn_userlog(c_ServiceName,"Inside 'P'- Primary page of trade book.");
		}

    if(i_hist_flg == 0)
    {
       switch(c_opr_typ)
        {
          case 'A':

					if( DEBUG_MSG_LVL_3)
					{
          	fn_userlog(c_ServiceName," Inside Case 'A' for Today ");
					}
					 fn_userlog(c_ServiceName,"Inside 'P'- Primary page of trade book.");

  				if( DEBUG_MSG_LVL_5 )
				 	{  
    				fn_userlog(c_ServiceName,"from date is         [%s]",c_frm_dt.arr);
    				fn_userlog(c_ServiceName,"to date is           [%s]",c_to_dt.arr);
    				fn_userlog(c_ServiceName,"operation type is    [%c]",c_opr_typ);
    				fn_userlog(c_ServiceName,"exchange code is     [%s]",c_exchange_cd);
    				fn_userlog(c_ServiceName,"underlying is        [%s]",c_underlying);
    				fn_userlog(c_ServiceName,"product type is      [%c]",c_product_typ);
    				fn_userlog(c_ServiceName,"trade flow is        [%c]",c_trd_flw);
    				fn_userlog(c_ServiceName,"match account no is  [%s]",c_mtch_accnt_no);
    				fn_userlog(c_ServiceName,"Special Flag is      [%c]",c_spl_flg);
    				fn_userlog(c_ServiceName,"Order ref no is      [%s]",c_ord_rfr);
  				}

					if( strcmp(c_mtch_accnt_no, "*" ) == 0 )
					{
					 if(strcmp(c_advisor_id, "NA") == 0)		
					 {
    				if( c_user_id[0] == BPID )
						{
 
  if (DEBUG_MSG_LVL_2)
  {  
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before select FTD BPID case A spl_flg P   :%s:",c_time); 
  }

          		EXEC SQL  EXECUTE
           			BEGIN
            		OPEN  :sys_cursor FOR
              	SELECT
		      						ftd_xchng_cd,
											ftd_clm_mtch_accnt,   
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
          						ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), 
                      sum(ftd_exctd_rt * ftd_exctd_qty),
											sum(nvl(ftd_stt,0)),            
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),    
                      sum(nvl(ftd_sebi_tt,0)),      
                      sum(nvl(ftd_tran_chrg,0)),     
                      sum(nvl(ftd_stamp_duty,0)),      
											FSB_STRGY_ID,
											FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls,CLM_CLNT_MSTR,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
								WHERE	ftd_clm_mtch_accnt	=	CLM_MTCH_ACCNT
                AND		CLM_BP_ID	=	:c_user_id
								AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
								AND		FOD_1CLICK_FLG      = 'Y'
								AND	  FSB_PRTFL_ID				=	FOD_1CLICK_PRTFL_ID
                AND  ftd_xchng_cd       LIKE :c_exchange_cd  
                AND  ftd_undrlyng       = :c_underlying
                AND  ftd_prdct_typ      LIKE :c_product_typ
                AND  trunc(ftd_trd_dt)  = :c_to_dt
                AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
								AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             		GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd, 
											ftd_clm_mtch_accnt,     
											ftd_ordr_rfrnc,
											ftd_trd_flw,
											ftd_undrlyng,
											ftd_indstk,
											trunc(ftd_trd_dt),
											trunc(ftd_expry_dt),
											ftd_prdct_typ,
											ftd_opt_typ,
											ftd_exer_typ,
											ftd_strk_prc,
											FSB_STRGY_ID 
								ORDER BY ftd_ordr_rfrnc DESC;								
          		END;
        		END-EXEC;

  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS after select FTD BPID case A spl_flg P   :%s:",c_time);  
  }
					}
					else
					{
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();  
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD NOT BPID case A spl_flg P   :%s:",c_time); 
  }

  					EXEC SQL  EXECUTE
              BEGIN
                OPEN  :sys_cursor FOR
                SELECT
		      						ftd_xchng_cd, 
											ftd_clm_mtch_accnt, 
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), 
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),      
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),
                      sum(nvl(ftd_sebi_tt,0)),   
                      sum(nvl(ftd_tran_chrg,0)),  
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME   
                FROM  ftd_fo_trd_dtls,UAC_USR_ACCNTS,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
                WHERE ftd_clm_mtch_accnt  = UAC_CLM_MTCH_ACCNT
                AND		UAC_USR_ID	= :c_user_id
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                AND  ftd_xchng_cd       LIKE  :c_exchange_cd 
                AND  ftd_undrlyng       = :c_underlying
                AND  ftd_prdct_typ      LIKE :c_product_typ
                AND  trunc(ftd_trd_dt)  = :c_to_dt
                AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
                GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,  
		        					ftd_clm_mtch_accnt, 
										  ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
                ORDER BY ftd_ordr_rfrnc DESC;     
              END;
            END-EXEC;

					}

  if (DEBUG_MSG_LVL_2)
  { 
   fn_gettime();  
   fn_userlog(c_ServiceName,"  - TIME_STATS after  select FTD NOT BPID case A spl_flg P   :%s:",c_time);
  }
				 }
				 else if(strcmp(c_advisor_id, "NA") != 0)
				 {
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD Advisor case A spl_flg P   :%s:",c_time);  
  }      
            if (c_sys_order == 'S')  
            {
            EXEC SQL  EXECUTE
              BEGIN
                OPEN  :sys_cursor FOR
                SELECT
                      ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),        
                      sum(nvl(ftd_sebi_tt,0)),
                      sum(nvl(ftd_tran_chrg,0)),
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME									
                FROM  ftd_fo_trd_dtls,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS , ACM_ADV_CLNT_MAP   
                WHERE FOD_ORDR_RFRNC     = ftd_ordr_rfrnc
                AND   FOD_CLM_MTCH_ACCNT = ACM_MTCH_ACCNT
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID	                  
                AND   FOD_CHANNEL        = 'SYS'                           
                AND   ACM_ACTV_FLG       = 'A'                             
                AND   ACM_ADVISOR_ID     = :c_advisor_id                   
                AND   ftd_xchng_cd       LIKE :c_exchange_cd
                AND   ftd_undrlyng       = :c_underlying
                AND   ftd_prdct_typ      LIKE :c_product_typ
                AND   FOD_TRD_DT         = :c_to_dt
                AND   FTD_TRD_FLW        LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
                GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID							
                ORDER BY 2,7,5,3;
              END;
            END-EXEC;                 
            }  

            else   
            {   
  					EXEC SQL  EXECUTE
              BEGIN
                OPEN  :sys_cursor FOR
                SELECT
                      ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),			
                      sum(nvl(ftd_sebi_tt,0)),
                      sum(nvl(ftd_tran_chrg,0)),
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS, CNT_CSE_MAST
                WHERE FOD_ORDR_RFRNC = ftd_ordr_rfrnc
								AND FOD_CSE_ID = CCM_CSE_ID
								AND CCM_LOGIN_NAME = :c_advisor_id
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                AND  ftd_xchng_cd       LIKE :c_exchange_cd
                AND  ftd_undrlyng       = :c_underlying
                AND  ftd_prdct_typ      LIKE :c_product_typ
                AND  FOD_TRD_DT  = :c_to_dt
                AND  FTD_TRD_FLW     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
                GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID					
                ORDER BY 2,7,5,3;
              END;
            END-EXEC;
				   }
        } 

  if (DEBUG_MSG_LVL_2)
  {	
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS after  select FTD Advisor case A spl_flg P   :%s:",c_time);  
	}
      }
				else
				{
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD Normal case A spl_flg P   :%s:",c_time); 
  }

    			EXEC SQL  EXECUTE
            BEGIN
            	OPEN  :sys_cursor FOR
              SELECT
		      					  ftd_xchng_cd, 
							  			ftd_clm_mtch_accnt, 
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), 
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),         
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)), 
                      sum(nvl(ftd_sebi_tt,0)),        
                      sum(nvl(ftd_tran_chrg,0)),     
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME    
                FROM  ftd_fo_trd_dtls,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
             		WHERE  ftd_clm_mtch_accnt = :c_mtch_accnt_no
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID 
                AND  ftd_xchng_cd       LIKE :c_exchange_cd 
                AND  ftd_undrlyng       = :c_underlying
                AND  ftd_prdct_typ      LIKE :c_product_typ
                AND  trunc(ftd_trd_dt)  = :c_to_dt
                AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
                GROUP BY  FSB_PRTFL_NAME,
											ftd_xchng_cd, 
											ftd_clm_mtch_accnt,   
		      					  ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
                ORDER BY ftd_ordr_rfrnc DESC;                
              END;
            END-EXEC;


  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS after select FTD Normal case A spl_flg P   :%s:",c_time);  
  }

				}
        break ;

        case 'B':

					if( DEBUG_MSG_LVL_3)
					{
          	fn_userlog(c_ServiceName," Inside Case 'B' for Today ");
					}


  				if( DEBUG_MSG_LVL_5 )
				 	{          
    				fn_userlog(c_ServiceName,"from date is         [%s]",c_frm_dt.arr);
    				fn_userlog(c_ServiceName,"to date is           [%s]",c_to_dt.arr);
    				fn_userlog(c_ServiceName,"operation type is    [%c]",c_opr_typ);
    				fn_userlog(c_ServiceName,"exchange code is     [%s]",c_exchange_cd);
    				fn_userlog(c_ServiceName,"underlying is        [%s]",c_underlying);
    				fn_userlog(c_ServiceName,"product type is      [%c]",c_product_typ);
    				fn_userlog(c_ServiceName,"trade flow is        [%c]",c_trd_flw);
    				fn_userlog(c_ServiceName,"match account no is  [%s]",c_mtch_accnt_no);
  				}

					if( strcmp(c_mtch_accnt_no, "*" ) == 0 )
					{
           if(strcmp(c_advisor_id, "NA") == 0)    
					 {
				  	if( c_user_id[0] == BPID )
						{
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD BPID case B spl_flg P   :%s:",c_time); 
  }
          		EXEC SQL  EXECUTE
           			BEGIN
            		OPEN  :sys_cursor FOR
              		SELECT
		      						ftd_xchng_cd, 
											ftd_clm_mtch_accnt,  
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), 
                      sum(ftd_exctd_rt * ftd_exctd_qty),
											sum(nvl(ftd_stt,0)),  
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)), 
                      sum(nvl(ftd_sebi_tt,0)),      
                      sum(nvl(ftd_tran_chrg,0)),   
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME  	
                FROM  ftd_fo_trd_dtls,CLM_CLNT_MSTR,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
								WHERE	ftd_clm_mtch_accnt	=	CLM_MTCH_ACCNT
                AND		CLM_BP_ID	=	:c_user_id
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID	
                AND  ftd_xchng_cd       LIKE  :c_exchange_cd 
                AND  ftd_prdct_typ       LIKE :c_product_typ
                AND  trunc(ftd_trd_dt)  = :c_to_dt
                AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
           			GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd, 
											ftd_clm_mtch_accnt,   
											ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
											ftd_strk_prc,
											FSB_STRGY_ID
						 ORDER BY ftd_ordr_rfrnc DESC; 					
          	END;
         	END-EXEC;

  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS after  select FTD BPID case B spl_flg P   :%s:",c_time);  
  }
					}
					else
					{
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD NOT BPID case B spl_flg P   :%s:",c_time);  
  }
 
              EXEC SQL  EXECUTE
                BEGIN
                OPEN  :sys_cursor FOR
                  SELECT
		      						ftd_xchng_cd, 
											ftd_clm_mtch_accnt,   
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), 
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),           
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)), 
                      sum(nvl(ftd_sebi_tt,0)),      
                      sum(nvl(ftd_tran_chrg,0)),   
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME  
                FROM  ftd_fo_trd_dtls,UAC_USR_ACCNTS,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
                WHERE  ftd_clm_mtch_accnt  = UAC_CLM_MTCH_ACCNT
                AND		UAC_USR_ID	= :c_user_id
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID	
                AND  ftd_xchng_cd       LIKE :c_exchange_cd 
                AND  ftd_prdct_typ      LIKE :c_product_typ
                AND  trunc(ftd_trd_dt)  = :c_to_dt
                AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
                GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,  
			 								ftd_clm_mtch_accnt,    
		     							ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
										  FSB_STRGY_ID
             ORDER BY ftd_ordr_rfrnc DESC;                   
            END;
          END-EXEC;

					}
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS after  select FTD NOT BPID case B spl_flg P   :%s:",c_time);  
  }
				 }
				 else if(strcmp(c_advisor_id, "NA") != 0)
				 {
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD Advisor case B spl_flg P   :%s:",c_time); 
   }          
             if ( c_sys_order == 'S')     
            {
               EXEC SQL  EXECUTE
                BEGIN
                OPEN  :sys_cursor FOR
                  SELECT
                      ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)), 
                      sum(nvl(ftd_sebi_tt,0)),
                      sum(nvl(ftd_tran_chrg,0)),
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME			
                FROM  ftd_fo_trd_dtls,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS, ACM_ADV_CLNT_MAP     
                WHERE  FOD_ORDR_RFRNC    = ftd_ordr_rfrnc                    
                AND   FOD_CLM_MTCH_ACCNT = ACM_MTCH_ACCNT
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID                   
                AND   FOD_CHANNEL        = 'SYS'                           
                AND   ACM_ACTV_FLG       = 'A'                            
                AND   ACM_ADVISOR_ID     = :c_advisor_id                 
                AND   ftd_xchng_cd    LIKE :c_exchange_cd
                AND   ftd_prdct_typ      LIKE :c_product_typ
                AND   FOD_TRD_DT         = :c_to_dt
                AND   ftd_trd_flw  LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
                GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
            ORDER BY 2,7,5,3;
                      END;
          END-EXEC;
              
            } 
              
            else   
                {
                EXEC SQL  EXECUTE
                BEGIN
                OPEN  :sys_cursor FOR
                  SELECT
                      ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)), 
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),	
                      sum(nvl(ftd_sebi_tt,0)),
                      sum(nvl(ftd_tran_chrg,0)),
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS, CNT_CSE_MAST
                WHERE  FOD_ORDR_RFRNC = ftd_ordr_rfrnc
                AND FOD_CSE_ID = CCM_CSE_ID
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                AND CCM_LOGIN_NAME = :c_advisor_id
								AND ftd_xchng_cd   LIKE :c_exchange_cd
                AND ftd_prdct_typ  LIKE :c_product_typ
                AND FOD_TRD_DT  = :c_to_dt
                AND ftd_trd_flw  LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
                GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
						ORDER BY 2,7,5,3;
            END;
          END-EXEC;
				 }
       } 
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();  
   fn_userlog(c_ServiceName,"  - TIME_STATS after  select FTD Advisor case B spl_flg P   :%s:",c_time); 
  }
				}
				else
				{

  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD Normal User case B spl_flg P   :%s:",c_time); 
  }
  
              EXEC SQL  EXECUTE
                BEGIN
                OPEN  :sys_cursor FOR
                  SELECT
		      						ftd_xchng_cd, 
											ftd_clm_mtch_accnt,   
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), 
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),           
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)), 
                      sum(nvl(ftd_sebi_tt,0)),      
                      sum(nvl(ftd_tran_chrg,0)),      
                      sum(nvl(ftd_stamp_duty,0)),      
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
             		WHERE  ftd_clm_mtch_accnt = :c_mtch_accnt_no
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID	  
                AND  ftd_xchng_cd       LIKE :c_exchange_cd 
                AND  ftd_prdct_typ      LIKE :c_product_typ
                AND  trunc(ftd_trd_dt)  = :c_to_dt
                AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
                GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,  
		 									ftd_clm_mtch_accnt,    
		       						ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
             ORDER BY ftd_ordr_rfrnc DESC;                  
            END;
          END-EXEC;

  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS after  select FTD Advisor case B spl_flg P   :%s:",c_time);
  }
				}
         break ;

      default:

      fn_userlog(c_ServiceName," Inside Default for Today ");

      strcpy( c_errmsg, "Invalid Operation Type" );
      fn_errlog ( c_ServiceName, "S31075", DEFMSG, c_errmsg );
      EXEC SQL CLOSE :sys_cursor; 
      EXEC SQL FREE  :sys_cursor; 
      tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
      break;

    }/***********end of switch case ************/

 }/****end of if for today ********/
 else
 {
 	switch(c_opr_typ)
        {
          case 'A':

						if( DEBUG_MSG_LVL_3)
						{
          		fn_userlog(c_ServiceName," Inside 'A' for History ");
						}


  					if( DEBUG_MSG_LVL_5 )
					  {      
    					fn_userlog(c_ServiceName,"from date is        [%s]",c_frm_dt.arr);
    					fn_userlog(c_ServiceName,"to date is          [%s]",c_to_dt.arr);
    					fn_userlog(c_ServiceName,"operation type is   [%c]",c_opr_typ);
    					fn_userlog(c_ServiceName,"exchange code is    [%s]",c_exchange_cd);
    					fn_userlog(c_ServiceName,"underlying is       [%s]",c_underlying);
    					fn_userlog(c_ServiceName,"product type is     [%c]",c_product_typ);
    					fn_userlog(c_ServiceName,"trade flow is       [%c]",c_trd_flw);
    					fn_userlog(c_ServiceName,"match account no is [%s]",c_mtch_accnt_no);
  					}

						if( strcmp(c_mtch_accnt_no, "*" ) == 0 )
						{
           	 if(strcmp(c_advisor_id, "NA") == 0)    
						 {
							if( c_user_id[0] == BPID )
							{
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD and FTD HSTRY  BPID case A spl_flg P   :%s:",c_time); 
  }
          			EXEC SQL  EXECUTE
           				BEGIN
            			OPEN  :sys_cursor FOR
              			SELECT
		  							  ftd_xchng_cd, 
									    ftd_clm_mtch_accnt,  
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), 
                      sum(ftd_exctd_rt * ftd_exctd_qty),
											sum(nvl(ftd_stt,0)),         
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),
                      sum(nvl(ftd_sebi_tt,0)),      
                      sum(nvl(ftd_tran_chrg,0)),      
                      sum(nvl(ftd_stamp_duty,0)),      
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls,CLM_CLNT_MSTR,FOD_FO_ORDR_DTLS_HSTRY,FSB_FO1CLICK_STRTGY_BUCKTDTLS
								WHERE ftd_clm_mtch_accnt	=	CLM_MTCH_ACCNT
                AND CLM_BP_ID	=	:c_user_id
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                 AND  ftd_xchng_cd       LIKE :c_exchange_cd 
                 AND  ftd_undrlyng       = :c_underlying
                 AND  ftd_prdct_typ      LIKE :c_product_typ
                 AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                 AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								 AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg	
             GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd, 
	     								ftd_clm_mtch_accnt,    
	              		  ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
											ftd_strk_prc,
											FSB_STRGY_ID

              UNION ALL

              SELECT  
		      						ftd_xchng_cd, 
		      						ftd_clm_mtch_accnt,  
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),	
                      sum(ftd_exctd_rt * ftd_exctd_qty),
											sum(nvl(ftd_stt,0)),          
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)), 
                      sum(nvl(ftd_sebi_tt,0)),       
                      sum(nvl(ftd_tran_chrg,0)),    
                      sum(nvl(ftd_stamp_duty,0)),    
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls_hstry,CLM_CLNT_MSTR,FOD_FO_ORDR_DTLS_HSTRY,FSB_FO1CLICK_STRTGY_BUCKTDTLS
								WHERE		ftd_clm_mtch_accnt	=	CLM_MTCH_ACCNT
                AND		CLM_BP_ID	=	:c_user_id
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                 AND  ftd_xchng_cd       LIKE :c_exchange_cd  
                 AND  ftd_undrlyng       = :c_underlying
                 AND  ftd_prdct_typ      LIKE :c_product_typ
                 AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
								 AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             		GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,  
	              			ftd_clm_mtch_accnt,   
	              			ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
											ftd_strk_prc,
											FSB_STRGY_ID 
						 ORDER BY ftd_ordr_rfrnc DESC; 							
          END;
         END-EXEC;
				}
				else
				{

  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD and FTD HSTRY NOT BPID case A spl_flg P   :%s:",c_time);
  }

                EXEC SQL  EXECUTE
                  BEGIN
                  OPEN  :sys_cursor FOR
                    SELECT
		      					  ftd_xchng_cd, 
							  			ftd_clm_mtch_accnt,  
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), 
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)), 
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)), 
                      sum(nvl(ftd_sebi_tt,0)),       
                      sum(nvl(ftd_tran_chrg,0)),    
                      sum(nvl(ftd_stamp_duty,0)),  
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME	
                FROM  ftd_fo_trd_dtls,UAC_USR_ACCNTS,FSB_FO1CLICK_STRTGY_BUCKTDTLS,FOD_FO_ORDR_DTLS
                WHERE  ftd_clm_mtch_accnt  = UAC_CLM_MTCH_ACCNT
                AND		UAC_USR_ID	= :c_user_id
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                 AND  ftd_xchng_cd       LIKE :c_exchange_cd 
                 AND  ftd_undrlyng       = :c_underlying
                 AND  ftd_prdct_typ      LIKE :c_product_typ
                 AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                 AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,  
											ftd_clm_mtch_accnt,    
	              			ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
											
              UNION ALL

              SELECT  
	              		  ftd_xchng_cd, 
				  						ftd_clm_mtch_accnt,  /** Ver 2.0  **/
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
     									ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), /*** Ver 1.1 adds nvl ***/
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),           /* Ver 1.6 */
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),        /* Ver 1.6 */		/** Ver 4.1 **/
                      sum(nvl(ftd_sebi_tt,0)),        /* Ver 1.6 */
                      sum(nvl(ftd_tran_chrg,0)),      /* Ver 1.6 */
                      sum(nvl(ftd_stamp_duty,0)),      /* Ver 1.6 */
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME	
                FROM  ftd_fo_trd_dtls_hstry,UAC_USR_ACCNTS,FSB_FO1CLICK_STRTGY_BUCKTDTLS,FOD_FO_ORDR_DTLS_HSTRY
                WHERE  ftd_clm_mtch_accnt  = UAC_CLM_MTCH_ACCNT
                AND    UAC_USR_ID = :c_user_id
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                 AND  ftd_xchng_cd       LIKE :c_exchange_cd /** Changed to LIKE for Ver 2.1 **/
                 AND  ftd_undrlyng       = :c_underlying
                 AND  ftd_prdct_typ      LIKE :c_product_typ
                 AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                 AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								 AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd, /** Ver 2.1 **/
	     								ftd_clm_mtch_accnt,    /** Ver 2.0 **/
	              			ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
             ORDER BY ftd_ordr_rfrnc DESC;                   /**Ver 1.8**/
       			END;
         	END-EXEC;
				}

  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS after  select FTD and FTD HSTRY NOT  BPID case A spl_flg P   :%s:",c_time); 
	}	
	 }
			 /*** Added for Ver 3.0 ***/
			 else if(strcmp(c_advisor_id, "NA") != 0)
			 {
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD and FTD HSTRY  Advisor case A spl_flg P   :%s:",c_time); 
  }           
   
                /*** Ver 4.5 Starts ***/
                if ( c_sys_order == 'S')                        /*** if-else added in Ver 4.5  ***/
            {
                  EXEC SQL  EXECUTE
                  BEGIN
                  OPEN  :sys_cursor FOR
                    SELECT
                      ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),
                      sum(nvl(ftd_sebi_tt,0)),
                      sum(nvl(ftd_tran_chrg,0)),
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls,FOD_FO_ORDR_DTLS, ACM_ADV_CLNT_MAP,FSB_FO1CLICK_STRTGY_BUCKTDTLS            
                WHERE FOD_ORDR_RFRNC = ftd_ordr_rfrnc
                 AND  FOD_CLM_MTCH_ACCNT = ACM_MTCH_ACCNT
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID                          
                 AND  FOD_CHANNEL        = 'SYS'                                  
                 AND  ACM_ACTV_FLG       = 'A'                                   
                 AND  ACM_ADVISOR_ID     = :c_advisor_id                        
                 AND  ftd_xchng_cd       LIKE :c_exchange_cd                              
                 AND  ftd_undrlyng       = :c_underlying
                 AND  ftd_prdct_typ      LIKE :c_product_typ
                 AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                 AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg	
             GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
              UNION ALL
              SELECT
                      ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),   
                      sum(nvl(ftd_sebi_tt,0)),
                      sum(nvl(ftd_tran_chrg,0)),
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls_hstry,FOD_FO_ORDR_DTLS_HSTRY, ACM_ADV_CLNT_MAP,FSB_FO1CLICK_STRTGY_BUCKTDTLS      
                WHERE  FOD_ORDR_RFRNC = ftd_ordr_rfrnc
                 AND   FOD_CLM_MTCH_ACCNT = ACM_MTCH_ACCNT 
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID                              
                 AND   FOD_CHANNEL        = 'SYS'                                       
                 AND   ACM_ACTV_FLG       = 'A'                                        
                 AND   ACM_ADVISOR_ID     = :c_advisor_id                             
                 AND  ftd_xchng_cd       LIKE :c_exchange_cd
                 AND  ftd_undrlyng        = :c_underlying
                 AND  ftd_prdct_typ       LIKE :c_product_typ
                 AND  trunc(ftd_trd_dt)   >= to_date(:c_frm_dt,'dd-mon-yyyy')
                 AND  trunc(ftd_trd_dt)   <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw        LIKE :c_trade_flw
								 AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
              ORDER BY 2,7,5,3;
            END;
          END-EXEC;                            
            
             }
                  
            else  /*** Ver 4.5 Ends ***/
                { 
                EXEC SQL  EXECUTE
                  BEGIN
                  OPEN  :sys_cursor FOR
                    SELECT
                      ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),					/** Ver 4.1 **/
                      sum(nvl(ftd_sebi_tt,0)),
                      sum(nvl(ftd_tran_chrg,0)),
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls,FOD_FO_ORDR_DTLS, CNT_CSE_MAST,FSB_FO1CLICK_STRTGY_BUCKTDTLS
                WHERE  FOD_ORDR_RFRNC = ftd_ordr_rfrnc
                 AND FOD_CSE_ID = CCM_CSE_ID
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                 AND CCM_LOGIN_NAME = :c_advisor_id
		 AND  ftd_xchng_cd       LIKE :c_exchange_cd
                 AND  ftd_undrlyng       = :c_underlying
                 AND  ftd_prdct_typ      LIKE :c_product_typ
                 AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                 AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID	
              UNION ALL
              SELECT
                      ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),							/** ver  4.1 **/
                      sum(nvl(ftd_sebi_tt,0)),
                      sum(nvl(ftd_tran_chrg,0)),
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls_hstry,FOD_FO_ORDR_DTLS_HSTRY, CNT_CSE_MAST,FSB_FO1CLICK_STRTGY_BUCKTDTLS
                WHERE  FOD_ORDR_RFRNC = ftd_ordr_rfrnc
                AND FOD_CSE_ID = CCM_CSE_ID
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                AND CCM_LOGIN_NAME = :c_advisor_id
								AND  ftd_xchng_cd       LIKE :c_exchange_cd 
                 AND  ftd_undrlyng       = :c_underlying
                 AND  ftd_prdct_typ      LIKE :c_product_typ
                 AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                 AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
							ORDER BY 2,7,5,3;
            END;
          END-EXEC;
			 }
      }
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS after  select FTD and FTD HSTRY  Advisor case A spl_flg P   :%s:",c_time);
  }		
   	 /*** Added for Ver 3.0 ***/
			}
			else
			{

  if (DEBUG_MSG_LVL_2)
  { 
   fn_gettime(); 
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD and FTD HSTRY  Normal User case A spl_flg P   :%s:",c_time);
  }

                EXEC SQL  EXECUTE
                  BEGIN
                  OPEN  :sys_cursor FOR
                    SELECT
		   						    ftd_xchng_cd, /** Added for Ver 2.1 **/
								    	ftd_clm_mtch_accnt,  /** Ver 2.0  **/
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), /*** Ver 1.1 adds nvl ***/
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),           /* Ver 1.6 */
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),        /* Ver 1.6 */			/** Ver 4.1 **/
                      sum(nvl(ftd_sebi_tt,0)),        /* Ver 1.6 */
                      sum(nvl(ftd_tran_chrg,0)),      /* Ver 1.6 */
                      sum(nvl(ftd_stamp_duty,0)),      /* Ver 1.6 */
        							FSB_STRGY_ID,
                      FSB_PRTFL_NAME			
				        FROM  ftd_fo_trd_dtls,FSB_FO1CLICK_STRTGY_BUCKTDTLS,FOD_FO_ORDR_DTLS
             		WHERE  ftd_clm_mtch_accnt = :c_mtch_accnt_no
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID 
                 AND  ftd_xchng_cd       LIKE :c_exchange_cd /** Changed to LIKE for Ver 2.1 **/
                 AND  ftd_undrlyng       = :c_underlying
                 AND  ftd_prdct_typ      LIKE :c_product_typ
                 AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                 AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								 AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd, /** Ver 2.1 **/
	              			ftd_clm_mtch_accnt,    /** Ver 2.0 **/
	              			ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID

              UNION ALL

              SELECT  
				              ftd_xchng_cd, /** Added in Ver 2.1 **/
					      			ftd_clm_mtch_accnt,  /** Ver 2.0  **/
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
          						ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), /*** Ver 1.1 adds nvl ***/
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),           /* Ver 1.6 */
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),        /* Ver 1.6 */		/** Ver 4.1 **/
                      sum(nvl(ftd_sebi_tt,0)),        /* Ver 1.6 */
                      sum(nvl(ftd_tran_chrg,0)),      /* Ver 1.6 */
                      sum(nvl(ftd_stamp_duty,0)),      /* Ver 1.6 */
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls_hstry,FSB_FO1CLICK_STRTGY_BUCKTDTLS,FOD_FO_ORDR_DTLS_HSTRY
             		WHERE  ftd_clm_mtch_accnt = :c_mtch_accnt_no
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID 
                 AND  ftd_xchng_cd       LIKE :c_exchange_cd /** Changed to LIKE for Ver 2.1 **/
                 AND  ftd_undrlyng       = :c_underlying
                 AND  ftd_prdct_typ      LIKE :c_product_typ
                 AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                 AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd, /** Ver 2.1 **/
	              			ftd_clm_mtch_accnt,    /** Ver 2.0 **/
								      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
             ORDER BY ftd_ordr_rfrnc DESC;                   /**Ver 1.8**/
            END;
          END-EXEC;
				}

  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();  
   fn_userlog(c_ServiceName,"  - TIME_STATS after select FTD and FTD HSTRY  Normal User case A spl_flg P   :%s:",c_time) ; 
	}	
         break ;

         case 'B':
		
					if( DEBUG_MSG_LVL_3)
					{
         	 	fn_userlog(c_ServiceName," Inside 'B' for History ");
					}

  				if( DEBUG_MSG_LVL_5 )
				 	{          /*  Ver 1.4 : Debug level Change  */
    				fn_userlog(c_ServiceName,"from date is         [%s]",c_frm_dt.arr);
    				fn_userlog(c_ServiceName,"to date is           [%s]",c_to_dt.arr);
    				fn_userlog(c_ServiceName,"operation type is    [%c]",c_opr_typ);
    				fn_userlog(c_ServiceName,"exchange code is     [%s]",c_exchange_cd);
    				fn_userlog(c_ServiceName,"underlying is        [%s]",c_underlying);
    				fn_userlog(c_ServiceName,"product type is      [%c]",c_product_typ);
    				fn_userlog(c_ServiceName,"trade flow is        [%c]",c_trd_flw);
    				fn_userlog(c_ServiceName,"match account no is  [%s]",c_mtch_accnt_no);
  				}

  				if( strcmp(c_mtch_accnt_no, "*" ) == 0 )
					{
           if(strcmp(c_advisor_id, "NA") == 0)    /*** Condition added for Ver 3.0 ***/
					 {
    				if( c_user_id[0] == BPID )
						{

  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD and FTD HSTRY  BPID case B spl_flg P   :%s:",c_time) ;  
  }
          		EXEC SQL  EXECUTE
           			BEGIN
            		OPEN  :sys_cursor FOR
              		SELECT
									    ftd_xchng_cd, /** Ver 2.1 **/
									    ftd_clm_mtch_accnt,  /** Ver 2.0  **/
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),	/*** Ver 1.1 adds nvl ***/
                      sum(ftd_exctd_rt * ftd_exctd_qty),
											sum(nvl(ftd_stt,0)),           /* Ver 1.6 */
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),        /* Ver 1.6 */	/** ver 4.1 **/
                      sum(nvl(ftd_sebi_tt,0)),        /* Ver 1.6 */
                      sum(nvl(ftd_tran_chrg,0)),      /* Ver 1.6 */
                      sum(nvl(ftd_stamp_duty,0)),      /* Ver 1.6 */
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME		
                	FROM  ftd_fo_trd_dtls,CLM_CLNT_MSTR,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
									WHERE	ftd_clm_mtch_accnt	=	CLM_MTCH_ACCNT
                	AND	CLM_BP_ID	=	:c_user_id
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                 	AND  ftd_xchng_cd       LIKE :c_exchange_cd /** Changed to LIKE for Ver 2.1 **/
                 	AND  ftd_prdct_typ      LIKE :c_product_typ
                 	AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                	AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								 AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             		 GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd, /** Ver 2.1 **/
	              			ftd_clm_mtch_accnt,    /** Ver 2.0 **/
	              			ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
											ftd_strk_prc,
											FSB_STRGY_ID

              UNION ALL

              SELECT
	  			            ftd_xchng_cd, /** Added in Ver 2.1 **/
					    				ftd_clm_mtch_accnt,  /** Ver 2.0  **/
  	                  ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),	/*** Ver 1.1 adds nvl ***/
                      sum(ftd_exctd_rt * ftd_exctd_qty),
											sum(nvl(ftd_stt,0)),            /* Ver 1.6 */
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),         /* Ver 1.6 */			/** Ver  4.1 **/
                      sum(nvl(ftd_sebi_tt,0)),        /* Ver 1.6 */
                      sum(nvl(ftd_tran_chrg,0)),      /* Ver 1.6 */
                      sum(nvl(ftd_stamp_duty,0)),      /* Ver 1.6 */	
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME	  	
                FROM  ftd_fo_trd_dtls_hstry,CLM_CLNT_MSTR,FSB_FO1CLICK_STRTGY_BUCKTDTLS,FOD_FO_ORDR_DTLS_HSTRY
								WHERE	ftd_clm_mtch_accnt	=	CLM_MTCH_ACCNT
                AND	 CLM_BP_ID	 = :c_user_id
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                AND  ftd_xchng_cd       LIKE :c_exchange_cd /** Changed to LIKE for Ver 2.1 **/
                AND  ftd_prdct_typ      LIKE :c_product_typ
                AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
								AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,  /** Ver 2.1 **/
											ftd_clm_mtch_accnt,    /** Ver 2.0 **/
	              			ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
											ftd_strk_prc,
											FSB_STRGY_ID 
						 			ORDER BY ftd_ordr_rfrnc DESC; 									/**Ver 1.8**/
          			END;
         			END-EXEC;
						}
						else
						{

  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime(); 
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD and FTD HSTRY NOT BPID case B spl_flg P   :%s:",c_time) ; 
  }
          		EXEC SQL  EXECUTE
                BEGIN
                OPEN  :sys_cursor FOR
                  SELECT
		     						  ftd_xchng_cd, /** Added in Ver 2.1 **/
								   		ftd_clm_mtch_accnt,  /** Ver 2.0  **/
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), /*** Ver 1.1 adds nvl ***/
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),           /* Ver 1.6 */
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),        /* Ver 1.6 */			/** ver 4.1 **/
                      sum(nvl(ftd_sebi_tt,0)),        /* Ver 1.6 */
                      sum(nvl(ftd_tran_chrg,0)),      /* Ver 1.6 */
                      sum(nvl(ftd_stamp_duty,0)),      /* Ver 1.6 */
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                  FROM  ftd_fo_trd_dtls,UAC_USR_ACCNTS,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
                  WHERE  ftd_clm_mtch_accnt  =	UAC_CLM_MTCH_ACCNT
                  AND  UAC_USR_ID = :c_user_id
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                  AND  ftd_xchng_cd       LIKE :c_exchange_cd  /** Changed to LIKE for Ver 2.1 **/
                  AND  ftd_prdct_typ      LIKE :c_product_typ
                  AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                  AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,  /** Ver 2.1 **/
	              			ftd_clm_mtch_accnt,    /** Ver 2.0 **/
				              ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
											
              UNION ALL

              SELECT
	             			  ftd_xchng_cd, /** Added in Ver 2.1 **/
					  					ftd_clm_mtch_accnt,  /** Ver 2.0  **/
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), /*** Ver 1.1 adds nvl ***/
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),            /* Ver 1.6 */
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),         /* Ver 1.6 */			/** Ver 4.1 **/
                      sum(nvl(ftd_sebi_tt,0)),        /* Ver 1.6 */
                      sum(nvl(ftd_tran_chrg,0)),      /* Ver 1.6 */
                      sum(nvl(ftd_stamp_duty,0)),      /* Ver 1.6 */
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME	
                FROM  ftd_fo_trd_dtls_hstry,UAC_USR_ACCNTS,FSB_FO1CLICK_STRTGY_BUCKTDTLS,FOD_FO_ORDR_DTLS_HSTRY
                WHERE ftd_clm_mtch_accnt  = UAC_CLM_MTCH_ACCNT
                AND 	UAC_USR_ID = :c_user_id
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                AND  ftd_xchng_cd       LIKE :c_exchange_cd /** Changed to LIKE for Ver 2.1 **/
                AND  ftd_prdct_typ      LIKE :c_product_typ
                AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                AND  ftd_trd_flw     LIKE :c_trade_flw
							  AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd, /** Ver 2.1 **/
	     								ftd_clm_mtch_accnt,    /** Ver 2.0 **/
	              			ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID	
                  ORDER BY ftd_ordr_rfrnc DESC;                  /**Ver 1.8**/
                END;
              END-EXEC;
						}

  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS after select FTD and FTD HSTRY NOT BPID case B spl_flg P   :%s:",c_time) ; 
	 }	
			 }
					 /*** Added for Ver 3.0 ***/
					 else if(strcmp(c_advisor_id, "NA") != 0)
					 {
  
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD and FTD HSTRY  Advisor case B spl_flg P   :%s:",c_time) ;
  }        
         /*** Ver 4.5 Starts ***/ 
             if (c_sys_order == 'S')             /*** if-else added in Ver 4.5  ***/
             {
              EXEC SQL  EXECUTE
              BEGIN
              OPEN    :sys_cursor FOR
                      SELECT
                      ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),
                      sum(nvl(ftd_sebi_tt,0)),
                      sum(nvl(ftd_tran_chrg,0)),
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls,FOD_FO_ORDR_DTLS,ACM_ADV_CLNT_MAP,FSB_FO1CLICK_STRTGY_BUCKTDTLS  
                WHERE FOD_ORDR_RFRNC = ftd_ordr_rfrnc
                 AND  FOD_CLM_MTCH_ACCNT = ACM_MTCH_ACCNT 
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID              
                 AND  FOD_CHANNEL        = 'SYS'                       
                 AND  ACM_ACTV_FLG       = 'A'                        
                 AND  ACM_ADVISOR_ID     = :c_advisor_id             
                 AND  ftd_xchng_cd       LIKE :c_exchange_cd
                 AND  ftd_prdct_typ       LIKE :c_product_typ
                 AND  trunc(ftd_trd_dt)   >= to_date(:c_frm_dt,'dd-mon-yyyy')
                 AND  trunc(ftd_trd_dt)   <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								 AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
                GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
               UNION ALL
               SELECT
                      ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),
                      sum(nvl(ftd_sebi_tt,0)),
                      sum(nvl(ftd_tran_chrg,0)),
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls_hstry,FOD_FO_ORDR_DTLS_HSTRY, ACM_ADV_CLNT_MAP,FSB_FO1CLICK_STRTGY_BUCKTDTLS   
                WHERE  FOD_ORDR_RFRNC = ftd_ordr_rfrnc
                AND    FOD_CLM_MTCH_ACCNT = ACM_MTCH_ACCNT
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID           
                AND    FOD_CHANNEL        = 'SYS'                   
                AND    ACM_ACTV_FLG       = 'A'                    
                AND    ACM_ADVISOR_ID     = :c_advisor_id         
                AND    ftd_xchng_cd       LIKE :c_exchange_cd
                AND    ftd_prdct_typ      LIKE :c_product_typ
                AND    trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                AND    trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                AND    ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
              GROUP BY FSB_PRTFL_NAME,
											 ftd_xchng_cd,
                       ftd_clm_mtch_accnt,
                       ftd_ordr_rfrnc,
                       ftd_trd_flw,
                       ftd_undrlyng,
                       ftd_indstk,
                       trunc(ftd_trd_dt),
                       ftd_expry_dt,
                       ftd_prdct_typ,
                       ftd_opt_typ,
                       ftd_exer_typ,
                       ftd_strk_prc,
											 FSB_STRGY_ID
            ORDER BY 2,7,5,3;
            END;
            END-EXEC;
                                
            } 
             else  /*** Ver 4.5 Ends ***/
             {    
             EXEC SQL  EXECUTE
              BEGIN
               OPEN  :sys_cursor FOR
                    SELECT
                      ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),		/** Ver 4.1 **/
                      sum(nvl(ftd_sebi_tt,0)),
                      sum(nvl(ftd_tran_chrg,0)),
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls,FOD_FO_ORDR_DTLS, CNT_CSE_MAST,FSB_FO1CLICK_STRTGY_BUCKTDTLS
                WHERE  FOD_ORDR_RFRNC = ftd_ordr_rfrnc
                 AND FOD_CSE_ID = CCM_CSE_ID
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                 AND CCM_LOGIN_NAME = :c_advisor_id
		 						 AND  ftd_xchng_cd       LIKE :c_exchange_cd
                 AND  ftd_prdct_typ      LIKE :c_product_typ
                 AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                 AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             		GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
               UNION ALL
               SELECT
                      ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)),
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),			/** ver 4.1 **/
                      sum(nvl(ftd_sebi_tt,0)),
                      sum(nvl(ftd_tran_chrg,0)),
                      sum(nvl(ftd_stamp_duty,0)),
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                FROM  ftd_fo_trd_dtls_hstry,FOD_FO_ORDR_DTLS_HSTRY, CNT_CSE_MAST,FSB_FO1CLICK_STRTGY_BUCKTDTLS
                WHERE  FOD_ORDR_RFRNC = ftd_ordr_rfrnc
                AND FOD_CSE_ID = CCM_CSE_ID
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID
                AND CCM_LOGIN_NAME = :c_advisor_id
								AND  ftd_xchng_cd       LIKE :c_exchange_cd 
                 AND  ftd_prdct_typ      LIKE :c_product_typ
                 AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                 AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             	GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd,
                      ftd_clm_mtch_accnt,
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      ftd_expry_dt,
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
						ORDER BY 2,7,5,3;
            END;
          	END-EXEC;
					 }
         }
  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();  
   fn_userlog(c_ServiceName,"  - TIME_STATS After select FTD and FTD HSTRY  Advisor case B spl_flg P   :%s:",c_time); 
  }
					 /*** End for Ver 3.0 ***/
					}
					else
					{

  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS before  select FTD and FTD HSTRY Normal user case B spl_flg P   :%s:",c_time) ;  
  }
              EXEC SQL  EXECUTE
                BEGIN
                OPEN  :sys_cursor FOR
                  SELECT
		     							ftd_xchng_cd, /** Added for Ver 2.1 **/
											ftd_clm_mtch_accnt,  /** Ver 2.0  **/
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), /*** Ver 1.1 adds nvl ***/
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),           /* Ver 1.6 */
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),        /* Ver 1.6 */			/*** Ver 4.1 **/
                      sum(nvl(ftd_sebi_tt,0)),        /* Ver 1.6 */
                      sum(nvl(ftd_tran_chrg,0)),      /* Ver 1.6 */
                      sum(nvl(ftd_stamp_duty,0)),      /* Ver 1.6 */
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME
                  FROM  ftd_fo_trd_dtls,FSB_FO1CLICK_STRTGY_BUCKTDTLS,FOD_FO_ORDR_DTLS
               		WHERE  ftd_clm_mtch_accnt = :c_mtch_accnt_no
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID    
                  AND  ftd_xchng_cd       LIKE :c_exchange_cd  /** Changed to LIKE for Ver 2.1 **/
                  AND  ftd_prdct_typ      LIKE :c_product_typ
                  AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                  AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE  :c_rec_flg
             GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd, /** Ver 2.1 **/
	     								ftd_clm_mtch_accnt,    /** Ver 2.0 **/
	             			  ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID

              UNION ALL

     					SELECT
		      					  ftd_xchng_cd, /** Ver 2.1 **/
							  			ftd_clm_mtch_accnt,  /** Ver 2.0  **/
                      ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ltrim(rtrim(ftd_undrlyng)),
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
                      sum(ftd_exctd_qty),
                      sum(nvl(ftd_brkg,0)), /*** Ver 1.1 adds nvl ***/
                      sum(ftd_exctd_rt * ftd_exctd_qty),
                      sum(nvl(ftd_stt,0)),            /* Ver 1.6 */
                      sum(nvl(ftd_src_tx,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),         /* Ver 1.6 */			/*** Ver 4.1 **/
                      sum(nvl(ftd_sebi_tt,0)),        /* Ver 1.6 */
                      sum(nvl(ftd_tran_chrg,0)),      /* Ver 1.6 */
                      sum(nvl(ftd_stamp_duty,0)),      /* Ver 1.6 */
											FSB_STRGY_ID,
                      FSB_PRTFL_NAME	
                FROM  ftd_fo_trd_dtls_hstry,FOD_FO_ORDR_DTLS_HSTRY,FSB_FO1CLICK_STRTGY_BUCKTDTLS
                WHERE  ftd_clm_mtch_accnt = :c_mtch_accnt_no
                AND   FTD_CLM_MTCH_ACCNT  = FOD_CLM_MTCH_ACCNT
                AND   FTD_ORDR_RFRNC      = FOD_ORDR_RFRNC
                AND   FOD_1CLICK_FLG      = 'Y'
                AND   FSB_PRTFL_ID        = FOD_1CLICK_PRTFL_ID   
                 AND  ftd_xchng_cd       LIKE :c_exchange_cd  /** Changed to LIKE for Ver 2.1 **/
                 AND  ftd_prdct_typ      LIKE :c_product_typ
                 AND  trunc(ftd_trd_dt)  >= to_date(:c_frm_dt,'dd-mon-yyyy')
                 AND  trunc(ftd_trd_dt)  <= to_date(:c_to_dt,'dd-mon-yyyy')
                 AND  ftd_trd_flw     LIKE :c_trade_flw
								AND FOD_1CLICK_PRTFL_ID = FSB_PRTFL_ID
                AND FSB_CUST_RCMEND_FLG LIKE :c_rec_flg
             GROUP BY FSB_PRTFL_NAME,
											ftd_xchng_cd, /** Ver 2.1 **/
	     								ftd_clm_mtch_accnt,    /** Ver 2.0 **/
	              			ftd_ordr_rfrnc,
                      ftd_trd_flw,
                      ftd_undrlyng,
                      ftd_indstk,
                      trunc(ftd_trd_dt),
                      trunc(ftd_expry_dt),
                      ftd_prdct_typ,
                      ftd_opt_typ,
                      ftd_exer_typ,
                      ftd_strk_prc,
											FSB_STRGY_ID
                  ORDER BY ftd_ordr_rfrnc DESC;                  /**Ver 1.8**/
                END;
              END-EXEC;
					
					}

  if (DEBUG_MSG_LVL_2)
  { 
   fn_gettime();   
   fn_userlog(c_ServiceName,"  - TIME_STATS after  select FTD and FTD HSTRY Normal user  case B spl_flg P   :%s:",c_time) ;
  }
         break ;

      default:

      fn_userlog(c_ServiceName," Inside default for History ");

      strcpy ( c_errmsg, "Invalid operation type" );
      fn_userlog( c_ServiceName,"Invalid operation type" );
      EXEC SQL CLOSE :sys_cursor;/*** Ver 3.9 ***/ 
      EXEC SQL FREE :sys_cursor;
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      break;

      }

  }

  if ( SQLCODE != 0 )
  {
    fn_errlog( c_ServiceName, "S31080", SQLMSG, c_errmsg  );
    EXEC SQL CLOSE :sys_cursor;/*** Ver 3.9 ***/ 
    EXEC SQL FREE :sys_cursor;
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    tpcommit(0);      /***  Ver 1.9 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

 /*** Commented in Ver 4.4 and same moved after calculating buffer length *** 
  ptr_fml_Obuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN	*	i_rec_cnt );			***	Ver	1.9	***

  if ( ptr_fml_Obuf == NULL )
  {
    fn_errlog( c_ServiceName, "S31085", FMLMSG, c_errmsg  );
    EXEC SQL CLOSE :sys_cursor;
    EXEC SQL FREE :sys_cursor;
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    tpcommit(0);      ***  Ver 1.9 ***
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
 *********Commented end for Ver 4.4 **/ 

  /*** Ver 4.2 Starts ***/

  i_buffer_len =  sizeof(c_unlying ) +
                  sizeof(c_ordr_rfrnc ) +
                  sizeof(c_prd_typ ) +
                  sizeof(c_exp_date.arr ) +
                  sizeof(c_exrc_typ ) +
                  sizeof(c_opt_typ ) +
                  sizeof(l_strk_prc ) +
                  sizeof(l_exctd_qty ) +
                  sizeof(c_indstk ) +
                  sizeof(c_trd_date.arr ) +
                  sizeof(l_brkg_val ) +
                  sizeof(c_trade_flow ) +
                  sizeof(d_value ) +
                  sizeof(l_stt ) +
                  sizeof(l_srv_tax ) +
                  sizeof(l_stmp_duty ) +
                  sizeof(l_sebi_tt ) +
                  sizeof(l_tran_chrg ) +
                  sizeof(l_incl_all ) +
                  sizeof(c_xchng_cd ) +
                  sizeof(c_mtch_accnt_no ) + 
									sizeof(c_strtgy_id) + 
									sizeof(c_prtfl_name) + 512;

  /*** Ver 4.2 Ends ***/

  /*** Ver 4.4 Starts ***/

  ptr_fml_Obuf = (FBFR32 *)tpalloc( "FML32", NULL, i_buffer_len * 5 );      

  if ( ptr_fml_Obuf == NULL )
  {
    fn_errlog( c_ServiceName, "S31090", FMLMSG, c_errmsg  );
    EXEC SQL CLOSE :sys_cursor;
    EXEC SQL FREE :sys_cursor;
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    tpcommit(0);      /***  Ver 1.9 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  /*** Ver 4.4 Ends ***/

	if( DEBUG_MSG_LVL_5)
	{
  	fn_userlog(c_ServiceName," Before Fetch ");
	}

  counter = 1;

	strcpy(c_prev_trd_date.arr,"NA");			/***	Ver 3.9	***/

  for( ; ; )
  {
		if( DEBUG_MSG_LVL_5)
		{
    	fn_userlog(c_ServiceName," Value of counter is [%d] ",counter);
		}

    SETLEN(c_exp_date);
    SETLEN(c_trd_date);

    if(DEBUG_MSG_LVL_2)
    {
     fn_gettime();  
     fn_userlog(c_ServiceName,"  - TIME_STATS before Fetch FTD and FTD HSTRY  spl_flg P   :%s:",c_time);  
    }

    EXEC SQL FETCH :sys_cursor
             INTO  :c_xchng_cd,    /** Ver 2.1 **/
		   							:c_mtch_accnt_no,   /** Ver 2.0  **/
	           			 :c_ordr_rfrnc,
                   :c_trade_flow,
              		 :c_unlying,
                   :c_indstk,
                   :c_trd_date,
                   :c_exp_date,
                   :c_prd_typ,
                   :c_opt_typ,
                   :c_exrc_typ,
                   :l_strk_prc,
                   :l_exctd_qty,
                   :l_brkg_val,
                   :d_value,    /* 1.2 */
									 :l_stt,	    /**1.6**/
									 :l_srv_tax,	/**1.6**/
							     :l_sebi_tt,	/**1.6**/
									 :l_tran_chrg,/**1.6**/
									 :l_stmp_duty,
									 :c_strtgy_id,
									 :c_prtfl_name;	 

    if ( SQLCODE != 0 )
    {
      if ( SQLCODE == NO_DATA_FOUND )
      {
				fn_userlog(c_ServiceName,"Debug From Shlok");
        fn_userlog(c_ServiceName," Inside NO DATA FOUND ");
        break;
      }
      else
      {
        fn_errlog( c_ServiceName, "S31095", SQLMSG, c_errmsg  );
        EXEC SQL CLOSE :sys_cursor;
        EXEC SQL FREE :sys_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      	tpcommit(0);      /***  Ver 1.9 ***/
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
    }

    if (DEBUG_MSG_LVL_2)
    {
     fn_gettime(); 
     fn_userlog(c_ServiceName,"  - TIME_STATS after Fetch FTD and FTD HSTRY  spl_flg P   :%s:",c_time) ; 
    }

    SETNULL(c_exp_date);
    SETNULL(c_trd_date);

		/** Ver 1.6**/
	 	l_incl_all = l_brkg_val+ l_stt + l_srv_tax  +l_sebi_tt + l_tran_chrg + l_stmp_duty; 

		

		if( DEBUG_MSG_LVL_0)
		{
     	fn_userlog(c_ServiceName,"Value of c_xchng_cd is     [%s]",c_xchng_cd);  /** Ver 2.1 **/
     	fn_userlog(c_ServiceName,"Value of c_mtch_accnt_no is   [%s]",c_mtch_accnt_no);  /** Ver 2.0 **/
     	fn_userlog(c_ServiceName,"Value of c_ordr_rfrnc is   [%s]",c_ordr_rfrnc);
     	fn_userlog(c_ServiceName,"Value of c_trade_flow is   [%c] ",c_trade_flow);
     	fn_userlog(c_ServiceName,"Value of c_unlying is      [%s] ",c_unlying);
     	fn_userlog(c_ServiceName,"Value of c_indstk is       [%s] ",c_indstk);
     	fn_userlog(c_ServiceName,"Value of c_trd_date is     [%s] ",c_trd_date.arr);
     	fn_userlog(c_ServiceName,"Value of c_exp_date is     [%s] ",c_exp_date.arr);
     	fn_userlog(c_ServiceName,"Value of c_prd_typ is      [%c] ",c_prd_typ);
     	fn_userlog(c_ServiceName,"Value of c_opt_typ is      [%c] ",c_opt_typ);
     	fn_userlog(c_ServiceName,"Value of c_exrc_typ is     [%c] ",c_exrc_typ);
     	fn_userlog(c_ServiceName,"Value of l_strk_prc is     [%ld] ",l_strk_prc);
     	fn_userlog(c_ServiceName,"Value of l_exctd_qty is    [%ld] ",l_exctd_qty);
     	fn_userlog(c_ServiceName,"Value of l_brkg_val is     [%ld] ",l_brkg_val);
     	fn_userlog(c_ServiceName,"Value of d_value is        [%lf] ",d_value); /* 1.2 */
     	fn_userlog(c_ServiceName,"Value of l_stt is        [%ld] ",l_stt); /* 1.2 */
     	fn_userlog(c_ServiceName,"Value of l_srv_tax is        [%ld] ",l_srv_tax); /* 1.2 */
     	fn_userlog(c_ServiceName,"Value of l_stmp_duty is        [%ld] ",l_stmp_duty); /* 1.2 */
     	fn_userlog(c_ServiceName,"Value of l_sebi_tt is        [%ld] ",l_sebi_tt); /* 1.2 */
     	fn_userlog(c_ServiceName,"Value of l_tran_chrg is        [%ld] ",l_tran_chrg); /* 1.2 */
     	fn_userlog(c_ServiceName,"Value of l_incl_all is        [%ld] ",l_incl_all); /* 1.2 */
			fn_userlog(c_ServiceName,"Value of c_strtgy_id  is       [%c] ",c_strtgy_id);
			fn_userlog(c_ServiceName,"Value of c_prtfl_name is 		[%s] ",c_prtfl_name);
		}
			
		 /****************************************************************************************/	
 		    													/*****    Ver 2.0 Starts  ***/
     /*****************************************************************************************/


		if( DEBUG_MSG_LVL_5)
		{
    	fn_userlog(c_ServiceName," Before Fadd32 ");
		}

    i_err[0] = Fadd32(ptr_fml_Obuf,FFO_UNDRLYNG,(char *)c_unlying,0) ;
    i_err[1] = Fadd32(ptr_fml_Obuf,FFO_ORDR_RFRNC,(char *)c_ordr_rfrnc,0) ;
		i_err[2] = Fadd32(ptr_fml_Obuf,FFO_PRDCT_TYP,(char *)&c_prd_typ,0) ;
    i_err[3] = Fadd32(ptr_fml_Obuf,FFO_EXPRY_DT,(char *)c_exp_date.arr,0) ;
    i_err[4] = Fadd32(ptr_fml_Obuf,FFO_EXER_TYP,(char *)&c_exrc_typ,0) ;
    i_err[5] = Fadd32(ptr_fml_Obuf,FFO_OPT_TYP,(char *)&c_opt_typ,0) ;
    i_err[6] = Fadd32(ptr_fml_Obuf,FFO_STRK_PRC,(char *)&l_strk_prc,0) ;
    i_err[7] = Fadd32(ptr_fml_Obuf,FFO_EXEC_QTY,(char *)&l_exctd_qty,0) ;
    /*i_err[8] = Fadd32(ptr_fml_Obuf,FFO_INSTRMNT_TYP,(char *)&c_indstk,0) ;*/				/*1.5*/
    i_err[8] = Fadd32(ptr_fml_Obuf,FFO_INSTRMNT_TYP,(char *)c_indstk,0) ;			      	/*1.5*/
    i_err[9] = Fadd32(ptr_fml_Obuf,FFO_TRD_DT,(char *)c_trd_date.arr,0) ;
    i_err[10] = Fadd32(ptr_fml_Obuf,FFO_BRKRG_VL,(char *)&l_brkg_val,0) ;
    i_err[11] = Fadd32(ptr_fml_Obuf,FFO_TRD_FLW,(char *)&c_trade_flow,0) ;
    i_err[12] = Fadd32(ptr_fml_Obuf,FFO_AMOUNT,(char *)&d_value,0) ; /* 1.2 */
		
		i_err[13] = Fadd32(ptr_fml_Obuf,FFO_RTN_STTS,(char *)&l_stt,0);             /** Ver 1.6**/
    i_err[14] = Fadd32(ptr_fml_Obuf,FFO_LOW_PRC,(char *)&l_srv_tax,0) ;				  /** Ver 1.6 **/
    i_err[15] = Fadd32(ptr_fml_Obuf,FFO_STLMNT_PRC,(char *)&l_stmp_duty,0) ;	  /** Ver 1.6 **/
    i_err[16] = Fadd32(ptr_fml_Obuf,FFO_AVRG_TRD_PRC,(char *)&l_sebi_tt,0) ;		/** Ver 1.6 **/
    i_err[17] = Fadd32(ptr_fml_Obuf,FFO_HGH_INDX_VAL,(char *)&l_tran_chrg,0) ;	/** Ver 1.6 **/
    i_err[18] = Fadd32(ptr_fml_Obuf,FFO_FRS_BRKG,(char *)&l_incl_all,0) ;		  	/** Ver 1.6 **/
    i_err[19] = Fadd32(ptr_fml_Obuf,FFO_XCHNG_CD,(char *)c_xchng_cd,0) ;		  	/** Ver 2.1 **/
    i_err[20] = Fadd32(ptr_fml_Obuf,FFO_EBA_MTCH_ACT_NO,(char *)c_mtch_accnt_no,0);/** Ver 3.0 **/
		i_err[21] = Fadd32(ptr_fml_Obuf,FFO_PLG_TYP,(char *)&c_strtgy_id,0) ;       /* & Added in ver TOL */
		i_err[22] = Fadd32(ptr_fml_Obuf,FFO_SERIES,(char *)&c_prtfl_name,0);
		
		fn_userlog(c_ServiceName,"Portfolio Name <%s>",c_prtfl_name);
		fn_userlog(c_ServiceName,"After adding var to FML's ");
 
      /*for(i=0;i<=12;i++)*/
    /* for(i=0;i<=18;i++)  */											/** Ver 1.6**/
    for(i=0;i<22;i++) 
    {
        if(i_err[i] == -1)
        {
          fn_userlog(c_ServiceName,"Error in Fadd for i [%d]",i);
          fn_errlog( c_ServiceName, "S31100", FMLMSG, c_errmsg  );
          EXEC SQL CLOSE :sys_cursor;/*** Ver 3.9 ***/ 
          EXEC SQL FREE  :sys_cursor; /*** Ver 3.9 ***/
          tpfree ( ( char * ) ptr_fml_Obuf );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      		tpcommit(0);      /***  Ver 1.9 ***/
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
    }
     
			/*** Ver 3.3 New FL Addition Ends ***/
   
		if(Fneeded32(1,i_buffer_len) > Funused32(ptr_fml_Obuf))/**Check added in Ver 4.2 as memory was reallocated after every record fetched ***/
		{   
    	counter ++;

      /*** Commented in Ver 4.4 ***
      ptr_fml_Obuf = (FBFR32 *)tprealloc( (char *)ptr_fml_Obuf,
                                      counter * MIN_FML_BUF_LEN );  
      ***/
      ptr_fml_Obuf = (FBFR32 *)tprealloc( (char *)ptr_fml_Obuf, Fsizeof32(ptr_fml_Obuf) + 
                                                                counter * i_buffer_len * 5 ); /* Ver 4.4 */
     
      if ( ptr_fml_Obuf == NULL )
      {
        fn_errlog( c_ServiceName, "S31105", TPMSG, c_errmsg  );
          EXEC SQL CLOSE :sys_cursor;
        EXEC SQL FREE  :sys_cursor; /*** Ver 3.9 ***/
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      	tpcommit(0);      /***  Ver 1.9 ***/
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
  	}

    } /* For loop */

  }/******* End of flag used to display second page ***********/

  EXEC SQL CLOSE :sys_cursor;
  EXEC SQL FREE :sys_cursor;

  if (DEBUG_MSG_LVL_2)
  {
   fn_gettime();
   fn_userlog(c_ServiceName,"  - TIME_STATS  Service SFO_TRADE_BOOK Ends :%s:",c_time);
  }

	if (DEBUG_MSG_LVL_2)
	{
  	fn_userlog(c_ServiceName,"End Of SFO_TRADE_BOOK");
	}
  tpreturn( TPSUCCESS, 0, (char *)ptr_fml_Obuf, 0 , 0 );
}


void fn_gettime()
{
  int i_mili_sec = 0;
  struct timeval tv;
  struct timezone tz;
  struct tm *tm;

  gettimeofday(&tv, &tz);
  tm=localtime(&tv.tv_sec);
  i_mili_sec= tv.tv_usec/1000;
  sprintf(c_time,"%d:%d:%d:%d",tm->tm_hour, tm->tm_min, tm->tm_sec, i_mili_sec);
  return;
}
