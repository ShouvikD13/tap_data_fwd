/*****************************************************************************************/
/******************************************************************************************
Service Name          : sfo_dt_exrcP																											*
																										                             					*
Description           : Allows a DT user to place a Exercise order                        *
Input parameters							                              															*
																																													*
																FFO_USR_ID																								*
																FFO_SSSN_ID																								*
																FFO_XCHNG_CD																							*
																FFO_SOURCE_FLG																						*
																FFO_EBA_MTCH_ACT_NO																				*
																FFO_PRDCT_TYP																							*
																FFO_UNDRLYNG																							*
																FFO_EXPRY_DT																							*
																FFO_EXER_TYP																							*
																FFO_OPT_TYP																								*
																FFO_STRK_PRC																							*
																FFO_CTGRY_INDSTK																					*
																FFO_ORD_TOT_QTY																						*
																FFO_EX_ORDR_TYP																						*
																FFO_SEC_TRD_PSWD																					*
																																													*
																																													*
Output Parameters								FFO_ORDR_RFRNC																						*
                        				FFO_ACTN_ID																								*
                        				FFO_ERR_MSG																								*
																																													*
Log                   					: 09/09/2002  1.0 Release ICICI Infotech|Sangeet					*
																:	16/02/2004	1.1	Multipipe ICICI Infotech|Kaushik        * 
																:	08/01/2007	1.2	DL Revamp NSE to NFO Conversion         *
                                                  and exercise market status check        *       
                                                  commented Infotech|Vikash               *           
																:	04-Mar-2008	1.3	IBM Migration		Ranjit									*
																:	03-Jun-2013	1.4	Source flag for New DL .NET|Bhushan			*
																:	07-Sep-2014	1.5	View to FML Changes ( Sachin Birje)			*
******************************************************************************************/
/*****************************************************************************************/
#include <stdio.h>									
#include <stdlib.h>																								
#include <string.h>
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <eba_to_ors.h>
#include <fo_fml_def.h>
/** #include <fo_view_def.h> ** Ver 1.5 **/
#include <fn_log.h>
#include <fn_session.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_read_debug_lvl.h>	/* ver 1.3 */

#include <errno.h>
int 	Z ;
#define INIT(x,y) for(Z=0;Z<y;Z++)x[Z] = 0 ;
long  l_retval;
char  c_errmsg[256];


void SFO_DT_EXRCP(TPSVCINFO *rqst)
{
	FBFR32 	*ptr_fml_Ibuf;
	FBFR32 	*ptr_fml_Obuf;


	char 	c_ServiceName[33];
 	char 	c_err_msg[256];
 	char 	c_msg[256];
  char  c_svc_nm[33];
 	char 	c_settlor[13];
 	int 	i_Fget;
 	int 	i_err[30];
 	int 	i_ferr[16];

 	char  c_usr_id[50] ;
 	char  c_xchng_cd[3 +1] ;
 	char  c_clm_mtch_accnt[10 +1] ;
 /**	char  c_exg_exrc_mkt_stts ;  Commented in ver 1.2 **/
 	char  c_source_flag ;
 	char  c_channel[3+1] ;
 	char  c_pipe_id[2+1] ;
/* 	char  c_ordr_rfrnc[18+1] ; commented in ver 1.2 */
/* 	char  c_rqst_tm[22+1] ; commneted in ver 1.2 */
 	long  l_acnt_id = -1;
 	long  l_sssn_id;
 	long  int li_len_tobuf;

	strcpy(c_ServiceName,"SFO_DT_EXRCP");
	INITDBGLVL(c_ServiceName);		/* ver 1.3 */

  ptr_fml_Ibuf = (FBFR32*)rqst->data;
	/*******************************************************/
	/****************Allocating the buffers*****************/
	/*******************************************************/
  ptr_fml_Obuf = (FBFR32*)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);
  if(ptr_fml_Obuf == NULL)
	{
		fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg  );
    strcpy(c_err_msg,"Problem in Placing order,Please Contact Customer Support");
    Fadd32( ptr_fml_Obuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuf, 0, 0 );
	}
	/*******************************************************/
	/************Allocation of the buffers over*************/
	/*******************************************************/
	

	/*******************************************************/
	/*****Initialising the string variables*****************/
	/*******************************************************/
	INIT(c_usr_id,50);
	INIT(c_clm_mtch_accnt,11);
	INIT(c_pipe_id,3);
/**	INIT(c_ordr_rfrnc,19); commented in ver 1.2 **/
/**	INIT(c_rqst_tm,23); commented in ver 1.2 **/
	INIT(c_settlor,13);
	

	/*******************************************************/
	/*****Initialising of string variables over*************/
	/*******************************************************/

	/*******************************************************/
	/*****Getting the nessary check variables **************/
	/*******************************************************/
	i_err[0] = Fget32(ptr_fml_Ibuf,FFO_USR_ID,0,(char *)c_usr_id,0) ;
	i_err[1] = Fget32(ptr_fml_Ibuf,FFO_SSSN_ID,0,(char *)&l_sssn_id,0) ;
	i_err[2] = Fget32(ptr_fml_Ibuf,FFO_SOURCE_FLG,0,(char *)&c_source_flag,0) ;
	i_err[3] = Fget32(ptr_fml_Ibuf,FFO_XCHNG_CD,0,(char *)c_xchng_cd,0) ;

	for( i_Fget = 0 ; i_Fget <= 3 ; i_Fget++ )
	{
    if(i_err[i_Fget] == -1)
		{
			fn_userlog(c_ServiceName,"Error in Fget of :%d: correct it please",i_Fget);
    	fn_errlog( c_ServiceName, "S31010", FMLMSG, c_err_msg  );
			strcpy(c_err_msg,"Problem in Placing order,Please Contact Customer Support");
			Fadd32( ptr_fml_Obuf, FFO_ERR_MSG, (char *)c_err_msg, 0 );
    	Fadd32( ptr_fml_Obuf, FFO_ACTN_ID, (char *)&l_acnt_id, 0 );
			tpfree((char *)ptr_fml_Ibuf);
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuf, 0, 0 );
		}
	}
	
	/*******************************************************/
	/*****Getting of nessary check variables over***********/
	/*******************************************************/

  /*** Commented in ver 1.2
	*********************************************************
	*****Validating the ASP part*****************************
	*********************************************************
		EXEC SQL
		SELECT	EXG_EXRC_MKT_STTS
		INTO		:c_exg_exrc_mkt_stts
		FROM		EXG_XCHNG_MSTR
		WHERE		EXG_XCHNG_CD = :c_xchng_cd ;

		if(SQLCODE != 0)
		{
			fn_userlog(c_ServiceName,"Error in selecting from Exchange master");
      fn_errlog( c_ServiceName, "S31015", SQLMSG, c_err_msg  );
      strcpy(c_err_msg,"Problem in Placing order,Please Contact Customer Support");
      Fadd32( ptr_fml_Obuf, FFO_ERR_MSG, (char *)c_err_msg, 0 );
      Fadd32( ptr_fml_Obuf, FFO_ACTN_ID, (char *)&l_acnt_id, 0 );
      tpfree((char *)ptr_fml_Ibuf);
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuf, 0, 0 );
    }	

	**********************************************************
	*Cannot place Exercise order, Exercise Market is closed***
	**********************************************************

		if(c_exg_exrc_mkt_stts != 'O'	)
		{
			fn_userlog(c_ServiceName,"Cannot place Exercise order, Exercise Market is closed");
      fn_errlog( c_ServiceName, "S31020", 
									"Cannot place Exercise order, Exercise Market is closed", c_err_msg  );
      Fadd32( ptr_fml_Obuf, FFO_ERR_MSG, (char *)c_err_msg, 0 );
      Fadd32( ptr_fml_Obuf, FFO_ACTN_ID, (char *)&l_acnt_id, 0 );
      tpfree((char *)ptr_fml_Ibuf);
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuf, 0, 0 );
		}	

  **** Comment in ver 1.2 Ends ***/

			
	/*******************************************************/
	/*****Replacement for channel code**********************/
	/*******************************************************/
	
	if(c_source_flag == '1')
	{
		strcpy(c_channel, "APP") ;
	}
	else if(c_source_flag == '2') 
	{
		strcpy(c_channel ,"VSA") ;
	}

	/*** Ver 1.4 ** Starts ***/

	else if(c_source_flag == 'Y')				/*** For New Trade Racer ***/
	{
		strcpy(c_channel ,"NET") ;
	}
	else if(c_source_flag == 'Z')				/*** For New Trade Racer by super user ***/
	{
		strcpy(c_channel ,"CN2") ;		
	}

	/*** Ver 1.4 ** Ends ***/ 
	
	else
	{
		fn_userlog(c_ServiceName,"Error in channel the source flag is :%c:",c_source_flag);
    fn_errlog( c_ServiceName, "S31025", FMLMSG, c_err_msg  );
    strcpy(c_err_msg,"Problem in Placing order,Please Contact Customer Support");
    Fadd32( ptr_fml_Obuf, FFO_ERR_MSG, c_err_msg, 0 );
    Fadd32( ptr_fml_Obuf, FFO_ACTN_ID, (char *)&l_acnt_id, 0 );
		tpfree((char *)ptr_fml_Ibuf);
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuf, 0, 0 );
	}

	if(Fadd32(ptr_fml_Ibuf,FFO_CHANNEL,(char *)c_channel,0) == -1)
	{
			fn_userlog(c_ServiceName,"Error in Fadd32 ");
    	fn_errlog( c_ServiceName, "S31030", FMLMSG, c_err_msg  );
			strcpy(c_err_msg,"Problem in Placing order,Please Contact Customer Support");
			Fadd32( ptr_fml_Obuf, FFO_ERR_MSG, (char *)c_err_msg, 0 );
    	Fadd32( ptr_fml_Obuf, FFO_ACTN_ID, (char *)&l_acnt_id, 0 );
			tpfree((char *)ptr_fml_Ibuf);
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuf, 0, 0 );
	}
	
/* 1.1 Commented 
	strcpy(c_pipe_id,"11");
	if(Fadd32(ptr_fml_Ibuf,FFO_PIPE_ID,(char *)c_pipe_id,0) == -1)
	{
			fn_userlog(c_ServiceName,"Error in Fadd32 ");
    	fn_errlog( c_ServiceName, "S31035", FMLMSG, c_err_msg  );
			strcpy(c_err_msg,"Problem in Placing order,Please Contact Customer Support");
			Fadd32( ptr_fml_Obuf, FFO_ERR_MSG, (char *)c_err_msg, 0 );
    	Fadd32( ptr_fml_Obuf, FFO_ACTN_ID, (char *)&l_acnt_id, 0 );
			tpfree((char *)ptr_fml_Ibuf);
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuf, 0, 0 );
	}
1.1 Comment ends */
	strcpy(c_settlor,"");
	if(Fadd32(ptr_fml_Ibuf,FFO_SETTLOR,(char *)c_settlor,0) == -1)
	{
			fn_userlog(c_ServiceName,"Error in Fadd32 ");
    	fn_errlog( c_ServiceName, "S31040", FMLMSG, c_err_msg  );
			strcpy(c_err_msg,"Problem in Placing order,Please Contact Customer Support");
			Fadd32( ptr_fml_Obuf, FFO_ERR_MSG, (char *)c_err_msg, 0 );
    	Fadd32( ptr_fml_Obuf, FFO_ACTN_ID, (char *)&l_acnt_id, 0 );
			tpfree((char *)ptr_fml_Ibuf);
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuf, 0, 0 );
	}
	
	
	/*******************************************************/
	/*****Replacement of channel code over******************/
	/*******************************************************/

  /*** Commented in ver 1.2	
	*******************************************************
	*****Replacement of exchange code *********************
	*******************************************************

	if(strcmp(c_xchng_cd,"NSE") == 0)
	{
			strcpy(c_xchng_cd,"NFO") ;
			Fchg32(ptr_fml_Ibuf,FFO_XCHNG_CD,0,(char *)c_xchng_cd,0);
	}

	*******************************************************
	*****Replacement of exchange code over*****************
	*******************************************************
  
  **** ver 1.2 Ends ***/

	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog(c_ServiceName,"FFO_USR_ID is :%s:",c_usr_id);
		fn_userlog(c_ServiceName,"FFO_SSSN_ID is :%ld:",l_sssn_id);
	}

	/*******************************************************/
	/*****Program logic to call necessary service **********/
	/*******************************************************/
/* 1.1 Addition for Multipipe */
  strcpy(c_svc_nm,"SFO_PLC_EXREQ");     /*** ver 1.2 Abhishek  **/
  if(Fadd32(ptr_fml_Ibuf,FFO_SVC_NAME,(char*)c_svc_nm,0) == -1)  /*** ver 1.2 Abhishek ***/
  {
    fn_userlog(c_ServiceName,"Error in Fadd32 ");
    fn_errlog( c_ServiceName, "S31045", FMLMSG, c_err_msg  );
    strcpy(c_err_msg,"Problem in modifying order,Please Contact Customer Support");
    Fadd32( ptr_fml_Obuf, FFO_ERR_MSG, (char *)c_err_msg, 0 );
    Fadd32( ptr_fml_Obuf, FFO_ACTN_ID, (char *)&l_acnt_id, 0 );
    tpfree((char *)ptr_fml_Ibuf);
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuf, 0, 0 );
  }
/* 1.1 addition ends */
/* 1.1 Commented 
	if(tpcall("SFO_PLC_EXREQ",(char*)ptr_fml_Ibuf,0,(char **)&ptr_fml_Obuf,&li_len_tobuf,0) == -1)
  {
			fn_userlog(c_ServiceName,"Inside call error");
   		fn_errlog( c_ServiceName, "S31050", TPMSG, c_err_msg  ); */
    	/*strcpy(c_err_msg,"Problem in Placing Exercise order,Please Contact Customer Support");
    	Fchg32( ptr_fml_Obuf, FFO_ERR_MSG, 0,c_err_msg, 0 );*/
    	/* Fadd32( ptr_fml_Obuf, FFO_ACTN_ID, (char *)&l_acnt_id, 0 );
			tpfree((char *)ptr_fml_Ibuf);
   		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuf, 0, 0 );
  }
1.1 comment ends */

/* 1.1 Addition for Multipipe starts  */
  fn_userlog(c_ServiceName,"Before calling order rout ");
  /*******************************************************/
  /********Calling the routing service *******************/
  /*******************************************************/
  if(tpcall("SFO_ORD_ROUT",(char*)ptr_fml_Ibuf,0,(char **)&ptr_fml_Obuf,&li_len_tobuf,0) == -1)
  {
      fn_userlog(c_ServiceName,"Inside call error");
      fn_errlog( c_ServiceName, "S31055", TPMSG, c_err_msg  );
      Fadd32( ptr_fml_Obuf, FFO_ACTN_ID, (char *)&l_acnt_id, 0 );
      tpfree((char *)ptr_fml_Ibuf);
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Obuf, 0, 0 );
  }
/* 1.1 Addition for Multipipe ends */


  /****************Added  to send the time and channed*******************/

  /*******   Commented in ver 1.2 *******

  i_err[0] = Fget32(ptr_fml_Obuf,FFO_ORDR_RFRNC,0,(char *)c_ordr_rfrnc,0) ;


  EXEC SQL
  SELECT to_char(FXB_RQST_TM,'dd-mm-yyyy hh24:mi:ss')
  INTO  :c_rqst_tm
  FROM   fxb_fo_xchng_book
  WHERE  fxb_ordr_rfrnc  = :c_ordr_rfrnc
  AND    fxb_mdfctn_cntr = 1        ;

  i_err[0] = Fadd32(ptr_fml_Obuf,FFO_CHANNEL,(char *)c_channel,0) ;
  i_err[1] = Fadd32(ptr_fml_Obuf,FFO_RQST_TM,(char *)c_rqst_tm,0) ;

  ******** end of comment ver 1.2 *******/

  /****************Added  to send the time and channel ends*************/

	l_acnt_id = 0 ;
  strcpy(c_err_msg,"Successfully Placed Exercise order");
  Fadd32( ptr_fml_Obuf, FFO_ERR_MSG, c_err_msg, 0 );
	Fadd32( ptr_fml_Obuf, FFO_ACTN_ID, (char *)&l_acnt_id, 0 );
	fn_userlog(c_ServiceName,"Before final success");
	tpreturn( TPSUCCESS, 0, (char *)ptr_fml_Obuf, 0 , 0 );	

}
