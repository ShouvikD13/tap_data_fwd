/**************************************************************************/
/*		Program      :	SFO_API_PLAN                           		    	   	*/
/*																																				*/
/*		Input        :	FFO_RQST_TYP                              		    	*/
/*                		FFO_INSTRMNT_TYP																		*/
/*										FFO_TRG_NM	                                  			*/
/*                    FFO_PLG_AMT                                   			*/
/*                    FFO_PI_PO_AMT                                 			*/
/*                    FFO_SOMC_PRCNT                                			*/
/*                    FFO_ADDL_AMT_BLKD                             			*/
/*                    FFO_IS_FLG                                    			*/
/*                    FFO_USR_ID																					*/	
/*										FFO_SSSN_ID                                   			*/
/*                    FFO_EBA_MTCH_ACT_NO                           			*/
/*                                                                      	*/
/*    Output			:		FFO_INSTRMNT_TYP																		*/
/*										FFO_TRG_NM																					*/
/*										FFO_PLG_AMT																					*/
/* 										FFO_PI_PO_AMT																				*/
/*										FFO_SOMC_PRCNT																			*/
/*										FFO_ADDL_AMT_BLKD																		*/
/*										FFO_IS_FLG	                                  			*/
/*         																																*/ 
/*		Description	:																												*/
/*																																				*/
/*																																				*/
/*		Log					:		1.0		24-Nov-2019		Susmita Mithabavkar &           */
/*                                        Tanmay Patel            				*/
/*                                                                      	*/
/*                                                                      	*/
/*                                                                      	*/
/*                                                                      	*/
/*                                                                      	*/
/**************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <userlog.h>	
#include <sqlca.h>
#include <fo.h>
#include <fo_fml_def.h>
#include <fml_rout.h>
#include <fo_view_def.h>
#include <fn_session.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <eba_to_ors.h>
#include <fn_log.h>
#include <fn_read_debug_lvl.h>

void SFO_API_PLAN( TPSVCINFO *rqst )
{	
	char c_ServiceName[33];
	varchar c_err_msg[256];

	int i_cnt = 0 ;
	int i_reccount      = 0 ;
	int i_tot_recs      = 0 ;
	int i_reccount1     = 0 ;
  int i_tot_recs1     = 0 ;
	int i_returncode    = 0 ;
	int i_counter 			=	1	;
	int i_trnsctn       = 0 ;
	int i_err[13];
	int i_ferr[13];

	EXEC SQL BEGIN DECLARE SECTION;
	char c_usr_id[30] = "\0";
	char c_match_id [11] = "\0";
	char c_subscrp_typ[30] = "\0";
	char c_subscrp_pln_nm[30] = "\0";
	char c_pln_nm[30] = "\0";
	char c_auto_ren_flg = '\0';
	char c_rqst_typ = '\0';
	char c_src_flg = '\0';	
	char c_pln_stts = '\0';
  char c_upcomng_flg = 'N';
  char c_take_new_plan ='Y';
  char c_take_new_plan_sen = 'N';

	char c_start_dt [12] = "\0";
	char c_end_dt  [12] = "\0";
  char c_sourc_typ = '\0';
  char c_featurs_ids[100]="\0";
  varchar c_feature_nm[100];
  varchar c_feature_desc[1000];
	
	double d_actl_amt=0.0;
	double d_dscnt_amt=0.0;
	double d_gst_prcnt=0.0;
	double d_gst_amt=0.0;
	double d_dscnt_prcnt=0.0;
  double d_duration=0.0;
  long   l_sssn_id    = 0;	
  long   l_feature_id =0;

	EXEC SQL END DECLARE SECTION;
	
	sql_cursor cur_api_dtls;
	sql_cursor cur_api_dtls1;	
  sql_cursor cur_features_dtls;
	sql_cursor cur_curr_pln;
	
	struct vw_usr_prfl st_usr_prfl;
  struct vw_err_msg  st_err_msg;
  MEMSET(st_usr_prfl);
  MEMSET(c_feature_nm);
  MEMSET(c_feature_desc);
  MEMSET(st_err_msg);

  EXEC SQL INCLUDE  "table/icd_info_client_dtls.h";

	FBFR32 *ptr_fml_Ibuf;
	FBFR32 *ptr_fml_Obuf;

	fn_userlog(c_ServiceName,"service started1");
	INITDBGLVL(c_ServiceName);	

	strcpy( c_ServiceName, rqst->name );
	ptr_fml_Ibuf  = (FBFR32*)rqst->data;
	
	ptr_fml_Obuf = (FBFR32*)tpalloc("FML32",NULL,MIN_FML_BUF_LEN *10  + 256);

  if (ptr_fml_Obuf == NULL)
  {
    fn_errlog( c_ServiceName, "S31005", TPMSG, c_err_msg.arr  );
    tpreturn(TPFAIL, FFO_ERR_MSG, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	i_err [0]    = Fget32( ptr_fml_Ibuf, FFO_RQST_TYP, 0, (char *)&c_rqst_typ, 0 );
	i_ferr[0]   = Ferror32;
	i_err [1]    = Fget32( ptr_fml_Ibuf, FFO_SOURCE_FLG , 0, (char *)&c_sourc_typ, 0 );
  i_ferr[1]   = Ferror32; 

  for ( i_cnt=0; i_cnt < 2; i_cnt++ )
  { 
   if ( i_err[ i_cnt ] == -1 )
   {
     if (i_ferr[i_cnt] == FNOTPRES && c_rqst_typ == 'I')
     {
       fn_userlog( c_ServiceName,"Its for insert/update...");        
     }
     else
     {
      fn_errlog( c_ServiceName, "S31010", FMLMSG,c_err_msg.arr  );
			tpfree ( ( char * )ptr_fml_Obuf);
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
      tpreturn(TPFAIL,FFO_ERR_MSG, (char *)ptr_fml_Ibuf, 0, 0 );
     }
 	 }
  }

	if(DEBUG_MSG_LVL_1)
	{
	  fn_userlog( c_ServiceName,"Request Type .........:%c:", c_rqst_typ ); 
		fn_userlog( c_ServiceName,"Source Type ..........:%c:", c_sourc_typ);
	}

	if(c_rqst_typ == 'I')
	{
		i_tot_recs=Foccur32( (FBFR32 *)ptr_fml_Ibuf,FFO_TRG_NM );	

		i_trnsctn = fn_begintran( c_ServiceName, c_err_msg.arr );
		if ( i_trnsctn == -1 )
  	{
    	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 ); 
			tpfree ( ( char * )ptr_fml_Obuf);
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  	}

		for ( i_reccount = 0; i_reccount < i_tot_recs; i_reccount++ )
		{
			i_err [0]  = Fget32(ptr_fml_Ibuf,FFO_INSTRMNT_TYP,i_reccount,( char * )c_subscrp_typ,0);
			i_ferr[0] = Ferror32;
			i_err [1]  = Fget32(ptr_fml_Ibuf,FFO_TRG_NM,i_reccount,( char * )c_subscrp_pln_nm,0);
			i_ferr[1] = Ferror32;
			i_err [2] = Fget32(ptr_fml_Ibuf,FFO_PLG_AMT,i_reccount,( char * )&d_actl_amt,0);
			i_ferr[2] = Ferror32;
			i_err [3]  = Fget32(ptr_fml_Ibuf,FFO_AVM_PRCNT,i_reccount,( char * )&d_gst_prcnt,0);
			i_ferr[3] = Ferror32;
			i_err [4]    = Fget32( ptr_fml_Ibuf, FFO_JIFFY ,i_reccount, (char *)&d_duration, 0 );
 			i_ferr[4]   = Ferror32;
			i_err [5]   =	 Fget32( ptr_fml_Ibuf, FFO_ACK_NMBR,i_reccount,(char *)c_featurs_ids,0);
      i_ferr[5] = Ferror32;	
			
			for ( i_cnt=0; i_cnt < 6; i_cnt++ )
			{
  			if ( i_err[ i_cnt ] == -1 )
  			{
    			fn_errlog( c_ServiceName, "S31015", FMLMSG,c_err_msg.arr  );
    			fn_userlog(c_ServiceName,"Unable to fget :%d:", i_cnt );
					tpfree ( ( char * )ptr_fml_Obuf);
	   			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr ); 
    			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );  
    			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  			}
			}

			if(DEBUG_MSG_LVL_3)
			{
				fn_userlog( c_ServiceName,"Subscription Type ..........:%s:", c_subscrp_typ );
				fn_userlog( c_ServiceName,"Plan Type ..................:%s:", c_subscrp_pln_nm );
				fn_userlog( c_ServiceName,"Actual amount ..............:%lf:", d_actl_amt );
				fn_userlog( c_ServiceName,"Gst prcnt..... ..............:%lf:", d_gst_prcnt );
				fn_userlog( c_ServiceName,"Duration....................:%lf:", d_duration );
				fn_userlog( c_ServiceName,"Feature ids ..................:%s:", c_featurs_ids );
			}
			
			EXEC SQL	
			UPDATE	APM_API_PLAN_MSTR
			set		 	APM_PLAN_TYPE=:c_subscrp_typ,
							APM_PLAN_NM=:c_subscrp_pln_nm,
							APM_ACTL_AMT=:d_actl_amt,
							APM_GST_PRCNT=:d_gst_prcnt,
							APM_DURATION =:d_duration,
							APM_FEATURS_ID=:c_featurs_ids
			where 	APM_PLAN_NM=:c_subscrp_pln_nm;
							 
		  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
 			{
          fn_errlog( c_ServiceName, "S31020", SQLMSG, c_err_msg.arr );
					tpfree ( ( char * )ptr_fml_Obuf);
          fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
    	else if( SQLCODE == NO_DATA_FOUND)
 			{
    			fn_userlog( c_ServiceName, "In no data found after update");

					EXEC SQL
					INSERT INTO APM_API_PLAN_MSTR
					(
						APM_PLAN_TYPE,
						APM_PLAN_NM,
						APM_ACTL_AMT,
						APM_GST_PRCNT,
						APM_DURATION
					)
					VALUES
					(
						:c_subscrp_typ,
						:c_subscrp_pln_nm,
						:d_actl_amt,
						:d_gst_prcnt,
						:d_duration
					);

					if ( SQLCODE != 0 )
					{
						fn_errlog( c_ServiceName, "S31025", SQLMSG, c_err_msg.arr  );
						tpfree ( ( char * )ptr_fml_Obuf);
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
						Fadd32(ptr_fml_Ibuf , FFO_ERR_MSG, c_err_msg.arr, 0 );
						tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
					}

 			}  /**NO data found **/
				fn_userlog(c_ServiceName,"record inserted ");	
		} /** for loop **/

		
		i_tot_recs1=Foccur32( (FBFR32 *)ptr_fml_Ibuf,FFO_EBA_CNTRCT_ID );
		
		fn_userlog( c_ServiceName,"before features for loop" );
		
		for(i_reccount1 = 0; i_reccount1 < i_tot_recs1; i_reccount1++)
		{
			i_err [0]  = Fget32(ptr_fml_Ibuf,FFO_EBA_CNTRCT_ID,i_reccount1,( char * )&l_feature_id,0);
      i_ferr[0] = Ferror32;
      i_err [1]  = Fget32(ptr_fml_Ibuf,FFO_FILTER,i_reccount1,( char * )c_feature_nm.arr,0);
      i_ferr[1] = Ferror32;
      i_err [2] = Fget32(ptr_fml_Ibuf,FFO_PRDCT_DESC ,i_reccount1,( char * )c_feature_desc.arr,0);
      i_ferr[2] = Ferror32;	

			for ( i_cnt=0; i_cnt < 3; i_cnt++ )
      {
				if (	i_err[ i_cnt ] ==TPENOENT )
				{	
					fn_userlog(c_ServiceName,"Inside no data found for :%d:",i_cnt);
				}
        else if ( i_err[ i_cnt ] == -1 )
        {
          	fn_errlog( c_ServiceName, "S31030", FMLMSG,c_err_msg.arr  );
          	fn_userlog(c_ServiceName,"Unable to fget :%d:", i_cnt );
						tpfree ( ( char * )ptr_fml_Obuf);
          	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
          	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
          	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
      }

			if(DEBUG_MSG_LVL_5)
			{
				fn_userlog( c_ServiceName,"feature Id   ...:%ld:", l_feature_id );
				fn_userlog( c_ServiceName,"feature Name ...:%s:", c_feature_nm.arr);
				fn_userlog( c_ServiceName,"feature Desc ...:%s:", c_feature_desc.arr );
			}

			EXEC SQL
			UPDATE	APF_API_PLAN_FEATURES
			SET			APF_FEATURE_NM=:c_feature_nm,
							APF_DESCRIPTION=:c_feature_desc
			WHERE		APF_ID=:l_feature_id;	
										
			if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
			{
				 fn_errlog( c_ServiceName, "S31035", SQLMSG, c_err_msg.arr );
		  	 tpfree ( ( char * )ptr_fml_Obuf);
         fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
         Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
         tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}				
			else if( SQLCODE == NO_DATA_FOUND)
			{
				fn_userlog( c_ServiceName, "In no data found after update");
				
				EXEC SQL
				INSERT INTO	APF_API_PLAN_FEATURES
				(
					APF_ID,
					APF_FEATURE_NM,
					APF_DESCRIPTION
				)
				VALUES
				(
					:l_feature_id,
					:c_feature_nm,
					:c_feature_desc
				);
		
			if ( SQLCODE != 0 )
			{
				 fn_errlog( c_ServiceName, "S31040", SQLMSG, c_err_msg.arr  );
	 			 tpfree ( ( char * )ptr_fml_Obuf);
				 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
				 Fadd32(ptr_fml_Ibuf , FFO_ERR_MSG, c_err_msg.arr, 0 );
				 tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}	
		 }
		 fn_userlog(c_ServiceName,"Features record inserted ");	
		}

		if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg.arr ) == -1 )
    {
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
				tpfree ( ( char * )ptr_fml_Obuf);
			  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    fn_userlog(c_ServiceName,"Records inserted successfully....");

	}	
	else if (c_rqst_typ == 'A' || c_rqst_typ == 'S')
	{

		i_err[0]  = Fget32(ptr_fml_Ibuf,FFO_USR_ID,0,(char *)c_usr_id,0);
		i_ferr [0] = Ferror32;
		i_err[1]  = Fget32(ptr_fml_Ibuf,FFO_SSSN_ID,0,(char *)&l_sssn_id,0);
		i_ferr [1] = Ferror32;
		i_err[2]  = Fget32(ptr_fml_Ibuf,FFO_EBA_MTCH_ACT_NO,0,(char *)c_match_id,0);
		i_ferr [2] = Ferror32;	
		i_err[3]  = Fget32(ptr_fml_Ibuf,FFO_INSTRMNT_TYP,0,( char * )c_subscrp_typ,0);
    i_ferr [3] = Ferror32;
		
		for ( i_cnt=0; i_cnt < 4; i_cnt++ )
    {
    	if ( i_err[ i_cnt ] == -1 )
      {
      	fn_errlog( c_ServiceName, "S31045", Fstrerror32(i_ferr[i_cnt]),c_err_msg.arr  );
        fn_userlog(c_ServiceName,"Unable to fget :%d:", i_cnt );
				tpfree ( ( char * )ptr_fml_Obuf);
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
		}

		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog( c_ServiceName,"user id .......... .........:%s:", c_usr_id );
			fn_userlog( c_ServiceName,"Session.......... .........:%ld:", l_sssn_id );
			fn_userlog( c_ServiceName,"match id ...................:%s:", c_match_id );
			fn_userlog( c_ServiceName,"Subscription Type .........:%s:", c_subscrp_typ );
		}

		strcpy(st_usr_prfl.c_user_id,c_usr_id);
		strcpy(st_usr_prfl.c_cln_mtch_accnt,c_match_id);
		st_usr_prfl.l_session_id = l_sssn_id;

		if( fn_chk_sssn( c_ServiceName, &st_usr_prfl,&st_err_msg) == -1)
		{
			Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, st_err_msg.c_err_msg, 0);
			tpfree( (char *) ptr_fml_Obuf);
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

     MEMSET(sql_icd_cust_type);

		 EXEC SQL
     SELECT ICD_CUST_TYPE
     INTO  :sql_icd_cust_type
     FROM  ICD_INFO_CLIENT_DTLS
     WHERE ICD_USER_ID = :c_usr_id;
 
     if ( SQLCODE != 0 )
     {
       fn_errlog( c_ServiceName, "S31050", SQLMSG, c_err_msg.arr  );
			 tpfree ( ( char * )ptr_fml_Obuf);
       Fadd32(ptr_fml_Ibuf , FFO_ERR_MSG, c_err_msg.arr, 0 );
       tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     }

     SETNULL(sql_icd_cust_type);

     if(strcmp(sql_icd_cust_type.arr,"NRI") == 0)
     {
        fn_userlog(c_ServiceName,"This facility is not available for NRI...");
        strcpy(c_err_msg.arr,"This facility is not available for NRI");
				tpfree ( ( char * )ptr_fml_Obuf);
        Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0);
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     }

    if(c_rqst_typ == 'A')
    {

		 i_trnsctn = fn_begintran( c_ServiceName, c_err_msg.arr );
     if ( i_trnsctn == -1 )
     {
			 fn_errlog( c_ServiceName, "S31055", LIBMSG, c_err_msg.arr  );
			 tpfree ( ( char * )ptr_fml_Obuf);
			 Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
       tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     }
      
			i_err[0]  = Fget32(ptr_fml_Ibuf,FFO_NEW_CNTRCT_TAG,0,(char *)&c_take_new_plan_sen,0);
      i_ferr [0] = Ferror32;

			fn_userlog( c_ServiceName,"Sen Take new plan flag is ....:%c:",c_take_new_plan_sen);
 
      for ( i_cnt=0; i_cnt < 1; i_cnt++ )
      {
        if ( i_err[ i_cnt ] == -1 )
        {
					tpfree ( ( char * )ptr_fml_Obuf);
					fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
          fn_errlog( c_ServiceName, "S31060", Fstrerror32(i_ferr[i_cnt]),c_err_msg.arr  );
          fn_userlog(c_ServiceName,"Unable to fget :%d:", i_cnt );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
      }

      /** Insert into TEMP table **/
	
  	 i_tot_recs=Foccur32( (FBFR32 *)ptr_fml_Ibuf,FFO_TRG_NM );
		
	   fn_userlog(c_ServiceName,"Inserting into temporary table :%d:",i_tot_recs);		

		 EXEC SQL
     DELETE FROM API_PLAN_DSCNT_GBT;

     if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
     {
 				tpfree ( ( char * )ptr_fml_Obuf);
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
        fn_errlog( c_ServiceName, "S31065", SQLMSG, c_err_msg.arr  );
        Fadd32(ptr_fml_Ibuf , FFO_ERR_MSG, c_err_msg.arr, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     }

  	 for ( i_reccount = 0; i_reccount < i_tot_recs; i_reccount++ ) 
		 {
			  i_err[0]  = Fget32(ptr_fml_Ibuf,FFO_SOMC_PRCNT,i_reccount,( char * )&d_dscnt_prcnt,0);
    	  i_ferr [0] = Ferror32;
    	  i_err[1]  = Fget32(ptr_fml_Ibuf,FFO_TRG_NM,i_reccount,( char * )c_subscrp_pln_nm,0);
    	  i_ferr [1] = Ferror32;

  			for ( i_cnt=0; i_cnt < 2; i_cnt++ )
        {
          if ( i_err[ i_cnt ] == -1 )
          {
		 			  tpfree ( ( char * )ptr_fml_Obuf);
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
            fn_errlog( c_ServiceName, "S31070", FMLMSG,c_err_msg.arr  );
            fn_userlog(c_ServiceName,"Unable to fget :%d:", i_cnt );
            Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
            tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
          }
        }

	  		EXEC SQL
		  	INSERT INTO API_PLAN_DSCNT_GBT 
			  (
				  CLM_MTCH_ACCNT,
				  PLAN_NM,
				  DSCNT_PRCNTG			
		  	)
			  values
			  (
			  	:c_match_id,
				  :c_subscrp_pln_nm,
				  :d_dscnt_prcnt			
		  	);

				if(DEBUG_MSG_LVL_3)
				{
					fn_userlog(c_ServiceName,"TMP c_subscrp_pln_nm :%s:",c_subscrp_pln_nm);
					fn_userlog(c_ServiceName,"TMP d_dscnt_prcnt    :%lf:",d_dscnt_prcnt);
				}

  		  if ( SQLCODE != 0 )
        {
					tpfree ( ( char * )ptr_fml_Obuf);
					fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
          fn_errlog( c_ServiceName, "S31075", SQLMSG, c_err_msg.arr  );
          Fadd32(ptr_fml_Ibuf , FFO_ERR_MSG, c_err_msg.arr, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
  		}

  		fn_userlog(c_ServiceName,"Records inserted successfully....");
	
			EXEC SQL ALLOCATE :cur_curr_pln;
			
  		/** current plan **/
			EXEC SQL EXECUTE
			BEGIN
			OPEN    :cur_curr_pln FOR
      SELECT  ACP_PLAN_NM,
              DECODE(ACP_ACTV_FLG,'A','C','P','U'), /** C-Current, U-Upcoming, A-active, P-Pending **/
              ACP_START_DT,
              ACP_END_DT
      FROM    ACP_API_CURR_PLAN
      WHERE   ACP_USER_ID = :c_usr_id
      AND     ACP_CLM_MTCH_ACCNT = :c_match_id
      AND     ACP_ACTV_FLG in ('A','P');
		  END;
			END-EXEC;

			if ( SQLCODE != 0)
			{
  			if( SQLCODE == NO_DATA_FOUND || (SQLCODE == NULL_RETURN) ) 
  			{
					strcpy(c_pln_nm , "NEW" );
    			fn_userlog( c_ServiceName, "In no data found case for ATD");
					strcpy(c_err_msg.arr , "Your eligible for TRIAL plan" );
					Fadd32(ptr_fml_Obuf, FFO_SYS_MSG, (char *)c_err_msg.arr, 0); 
  			}
        else 
        {
  			  fn_errlog( c_ServiceName, "S31080", SQLMSG, c_err_msg.arr );
					tpfree ( ( char * )ptr_fml_Obuf);
					fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
  			  Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
          EXEC SQL CLOSE :cur_curr_pln;
          EXEC SQL FREE  :cur_curr_pln;
  			  tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
			}

			i_counter = 1;

      MEMSET(c_pln_nm);
      MEMSET(c_pln_stts);
      MEMSET(c_start_dt);
      MEMSET(c_end_dt);
			
			for(;;)
    	{
				EXEC SQL
				FETCH :cur_curr_pln
				INTO	:c_pln_nm ,
              :c_pln_stts,
              :c_start_dt,
              :c_end_dt;	
				
				if( SQLCODE != 0 )
      	{
        	if(SQLCODE == NO_DATA_FOUND)
        	{
            fn_userlog( c_ServiceName, "ALL Done");
            EXEC SQL CLOSE :cur_curr_pln;
            EXEC SQL FREE  :cur_curr_pln;
            break;
        	}
          tpfree ( ( char * )ptr_fml_Obuf);
					fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
        	fn_errlog( c_ServiceName, "S31085", SQLMSG, c_err_msg.arr );
        	EXEC SQL CLOSE  :cur_curr_pln;
          EXEC SQL FREE  :cur_curr_pln;
					Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
        	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      	}

        if ( c_pln_stts == 'U')
        {
           fn_userlog( c_ServiceName,"Inside Upcomig PLan....");

           c_upcomng_flg = 'Y';
           c_take_new_plan = 'N';
        }
        else if ( c_pln_stts == 'C' && c_upcomng_flg !='Y' )
        {
           fn_userlog( c_ServiceName,"Inside Current plan...");

           /***** Checking  Validity for Upcoming Plan Display  *****
            ***** (After 15 remaining day of Current plan)      *****/ 

           EXEC SQL
           SELECT DECODE(Count(1),1,'Y','N')
           INTO   :c_take_new_plan
           FROM   DUAL
           WHERE  (to_date(:c_end_dt) - trunc(sysdate)) +1 <= 15; 

          if ( SQLCODE != 0 )
          {
            fn_errlog( c_ServiceName, "S31090", FMLMSG,c_err_msg.arr  );
						tpfree ( ( char * )ptr_fml_Obuf);
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
            Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
            tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
          }  
        }

        i_err [0] =  Fadd32( ptr_fml_Obuf  ,FFO_OP_VIEW_NM ,(char *)c_pln_nm,0);
        i_ferr[0] = Ferror32;
        i_err [1] =  Fadd32( ptr_fml_Obuf  ,FFO_MTM_FLG,(char *)&c_pln_stts,0);
        i_ferr[1] = Ferror32;
				i_err [2] =  Fadd32( ptr_fml_Obuf  ,FFO_ND_STRT_DT ,(char *)c_start_dt,0);
        i_ferr[2] = Ferror32;
        i_err [3] =  Fadd32( ptr_fml_Obuf  ,FFO_ND_END_DT ,(char *)c_end_dt,0);
        i_ferr[3] = Ferror32;

        for ( i_cnt=0; i_cnt < 3; i_cnt++ )
        {
          if ( i_err[ i_cnt ] == -1 )
          {
            tpfree ( ( char * )ptr_fml_Obuf);
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
            fn_errlog( c_ServiceName, "S31095", Fstrerror32(i_ferr[i_cnt]), c_err_msg.arr  );
            Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr , 0 );
            tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
          }
        }

				if(DEBUG_MSG_LVL_3)
				{
					fn_userlog( c_ServiceName,"Plan Type .................:%s:", c_pln_nm );
					fn_userlog( c_ServiceName,"Plan Status ................:%c:" ,c_pln_stts);
					fn_userlog( c_ServiceName,"start date..................:%s:", c_start_dt );
					fn_userlog( c_ServiceName,"End date....................:%s:" , c_end_dt );	
				}

				i_counter++;
     }

	 		fn_userlog( c_ServiceName,"Take New plan Sensi:%c: Idirect:%c:" , c_take_new_plan_sen,c_take_new_plan);

      /*** Check Can take new plan flag with seinsibull **/

      if (c_take_new_plan_sen != c_take_new_plan) 
      {
        fn_userlog( c_ServiceName,"Plan Mismatch with sensibull ...");
        strcpy(c_err_msg.arr , "You can not Subscribe this plan");
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr , 0 );
        tpfree ( ( char * )ptr_fml_Obuf);
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 ); 
      } 

			if (c_take_new_plan != 'N')
			{
				EXEC SQL ALLOCATE :cur_api_dtls;
				fn_userlog(c_ServiceName,"inside request type A ");	
					
				EXEC SQL EXECUTE
						BEGIN
						OPEN		:cur_api_dtls	FOR 
						SELECT 	APM_PLAN_NM,
										APM_PLAN_TYPE,
										APA_PLAN_AMNT/APM_DURATION,
										APA_DISCNTED_AMNT/APM_DURATION,
										'F',
										APM_DURATION,
										NVL(APM_FEATURS_ID,'*')
						FROM    APM_API_PLAN_MSTR,API_PLAN_DSCNT_GBT,APA_API_PLAN_AMNT
						WHERE   APM_PLAN_NM <> 'TRIAL'
						AND     APM_PLAN_NM = PLAN_NM 
						AND     APM_PLAN_NM = APA_PLAN_NM
						AND     APA_DISCNT_PRCNTG = DSCNT_PRCNTG;
						END;
						END-EXEC;
			
			if ( SQLCODE != 0 )
			{
				fn_errlog( c_ServiceName, "S31100", FMLMSG,c_err_msg.arr  );
    		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
        EXEC SQL CLOSE :cur_api_dtls;
        EXEC SQL FREE  :cur_api_dtls;
				tpfree ( ( char * )ptr_fml_Obuf);
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
    		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );		
			}

	  	fn_userlog(c_ServiceName,"data selected ");

		  i_counter = 1;
	
			for(;;)
			{

				MEMSET(c_subscrp_typ);
				MEMSET(c_subscrp_pln_nm);
				MEMSET(c_auto_ren_flg);
				MEMSET(c_featurs_ids);
				d_actl_amt=0.0;
				d_dscnt_amt=0.0;
				d_dscnt_prcnt=0.0;
				d_gst_amt=0.0;

				EXEC SQL 
				FETCH :cur_api_dtls
				INTO  :c_subscrp_pln_nm,
							:c_subscrp_typ, 
							:d_actl_amt,
							:d_dscnt_amt,
							:c_auto_ren_flg,
							:d_duration,
							:c_featurs_ids;

				if( SQLCODE != 0 )
				{
					if(SQLCODE == NO_DATA_FOUND)
					{
							fn_userlog( c_ServiceName, "ALL Done");
							EXEC SQL CLOSE :cur_api_dtls;
							EXEC SQL FREE  :cur_api_dtls;
							break;
					}
					tpfree ( ( char * )ptr_fml_Obuf);
					fn_errlog( c_ServiceName, "S31105", SQLMSG, c_err_msg.arr );
					EXEC SQL CLOSE	:cur_api_dtls;
					EXEC SQL FREE  :cur_api_dtls;
					Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
					fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
					tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
				}
				
			
				rtrim((char *)c_subscrp_typ);
				rtrim((char *)c_subscrp_pln_nm);
				rtrim(c_featurs_ids);	
		
				if(DEBUG_MSG_LVL_3)
				{				
					fn_userlog( c_ServiceName,"Subscription Type .........:%s:", c_subscrp_typ );
					fn_userlog( c_ServiceName,"Plan Type .................:%s:", c_subscrp_pln_nm );
					fn_userlog( c_ServiceName,"Actual amount .............:%lf:", d_actl_amt );
					fn_userlog( c_ServiceName,"Discount Amt  .............:%lf:", d_dscnt_amt );
					fn_userlog(c_ServiceName,"c_auto_ren_flg.............. :%c:", c_auto_ren_flg );			
					fn_userlog( c_ServiceName,"Duration....................:%lf:", d_duration );
					fn_userlog(c_ServiceName,"c_featurs_ids................:%s:",c_featurs_ids);
				}
			/*  if ( Fneeded32( 1, l_bufferlength ) > Funused32( ptr_fml_Obuf ) )
				{
						i_counter++;
						ptr_fml_Obuf = ( FBFR32 *)tprealloc( (char *)ptr_fml_Obuf,(Fsizeof32(ptr_fml_Obuf) + (i_counter * l_bufferlength )));

						if( ptr_fml_Obuf == NULL )
						{
							fn_errlog( c_ServiceName, "S31110", TPMSG, c_err_msg.arr  );
							Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr , 0 );
							tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
						}
				}*/
		
					i_err [0] = Fadd32( ptr_fml_Obuf  ,FFO_INSTRMNT_TYP  ,(char *)c_subscrp_typ,0);
					i_ferr[0] = Ferror32;
					i_err [1] = Fadd32( ptr_fml_Obuf  ,FFO_TRG_NM ,(char *)c_subscrp_pln_nm,0);
					i_ferr[1] = Ferror32;
					i_err [2] = Fadd32( ptr_fml_Obuf  ,FFO_PLG_AMT ,(char *)&d_actl_amt,0);
					i_ferr[2] = Ferror32;
					i_err [3] = Fadd32( ptr_fml_Obuf  ,FFO_PI_PO_AMT,(char *)&d_dscnt_amt,0);
					i_ferr[3] = Ferror32;
					i_err [4] = Fadd32( ptr_fml_Obuf  ,FFO_IS_FLG ,(char *)&c_auto_ren_flg,0);
					i_ferr[4] = Ferror32;
					i_err [5] = Fadd32( ptr_fml_Obuf  ,FFO_JIFFY ,  (char *)&d_duration, 0 );
					i_ferr[5] = Ferror32;
					i_err [6] = Fadd32( ptr_fml_Obuf  ,FFO_ACK_NMBR,(char *)c_featurs_ids,0);
					i_ferr[6] = Ferror32;

					for ( i_cnt=0; i_cnt < 7; i_cnt++ )
					{
						if ( i_err[ i_cnt ] == -1 )
						{
							fn_userlog(c_ServiceName ," i_cnt:%d:",i_cnt );
							fn_errlog( c_ServiceName, "S31115", Fstrerror32(i_ferr[i_cnt]), c_err_msg.arr  );
							Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr , 0 );
							tpfree ( ( char * )ptr_fml_Obuf);
							fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
							tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
						}
					}
				}

			/**** Send Featurs dlts ****/
      EXEC SQL ALLOCATE :cur_features_dtls;
      EXEC SQL EXECUTE
      BEGIN
      OPEN   :cur_features_dtls FOR
      SELECT APF_ID,
             APF_FEATURE_NM,
             APF_DESCRIPTION
      FROM   APF_API_PLAN_FEATURES;
      END;
      END-EXEC;

      if ( SQLCODE != 0 )
      {
         fn_errlog( c_ServiceName, "S31120",SQLMSG, c_err_msg.arr ); 
         Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
         EXEC SQL CLOSE :cur_features_dtls;
         EXEC SQL FREE  :cur_features_dtls;
 	 			 tpfree ( ( char * )ptr_fml_Obuf);
				 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
         tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }

     for(;;)
     {
       MEMSET(c_feature_nm);
       MEMSET(c_feature_desc);

       EXEC SQL
       FETCH :cur_features_dtls
       INTO  :l_feature_id,
             :c_feature_nm,
             :c_feature_desc;

       if( SQLCODE != 0 )
       {
         if(SQLCODE == NO_DATA_FOUND)
         {
            fn_userlog( c_ServiceName, "ALL Done");
            EXEC SQL CLOSE :cur_features_dtls;
            EXEC SQL FREE  :cur_features_dtls;
            break;
         }

       	tpfree ( ( char * )ptr_fml_Obuf);
        fn_errlog( c_ServiceName, "S31125", SQLMSG, c_err_msg.arr );
        EXEC SQL CLOSE  :cur_features_dtls;
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }

			if(DEBUG_MSG_LVL_3)
			{		
				fn_userlog( c_ServiceName,"feature Id   ...:%ld:", l_feature_id );
				fn_userlog( c_ServiceName,"feature Name ...:%s:", c_feature_nm.arr);
				fn_userlog( c_ServiceName,"feature Desc ...:%s:", c_feature_desc.arr );
			}

			i_err [0] =  Fadd32( ptr_fml_Obuf  ,FFO_EBA_CNTRCT_ID  ,(char *)&l_feature_id,0);
			i_ferr[0] = Ferror32;
			i_err [1] =  Fadd32( ptr_fml_Obuf  ,FFO_FILTER ,(char *)c_feature_nm.arr,0);
			i_ferr[1] = Ferror32;
			i_err [2] =  Fadd32( ptr_fml_Obuf  ,FFO_PRDCT_DESC ,(char *)c_feature_desc.arr,0);
			i_ferr[2] = Ferror32;

       for ( i_cnt=0; i_cnt < 3; i_cnt++ )
       {
         if ( i_err[ i_cnt ] == -1 )
         {
            fn_userlog(c_ServiceName ," i_cnt:%d:",i_cnt );
            fn_errlog( c_ServiceName, "S31130", Fstrerror32(i_ferr[i_cnt]), c_err_msg.arr  );
            Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr , 0 );
            tpfree ( ( char * )ptr_fml_Obuf);
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
            tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
         }
       }
     }
		}
		if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg.arr ) == -1 )
    {
        tpfree ( ( char * )ptr_fml_Obuf);
        fn_errlog( c_ServiceName, "S31135", LIBMSG, c_err_msg.arr );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    } 
		}
		else if(c_rqst_typ == 'S')
		{
			fn_userlog(c_ServiceName,"inside request type S ");
				
			i_err [0] = Fget32(ptr_fml_Ibuf,FFO_TRG_NM,0,( char * )c_subscrp_pln_nm,0);
      i_ferr[0] = Ferror32;
      i_err [1] = Fget32(ptr_fml_Ibuf, FFO_SOURCE_FLG,0,( char * )&c_src_flg,0);
      i_ferr[1] = Ferror32;
      i_err [2] = Fget32(ptr_fml_Ibuf,FFO_SOMC_PRCNT,i_reccount,( char * )&d_dscnt_prcnt,0);
      i_ferr[2] = Ferror32;


      for ( i_cnt=0; i_cnt < 3; i_cnt++ )
      {
        if ( i_err[i_cnt] == -1  )
        {
          fn_errlog( c_ServiceName, "S31140", FMLMSG,c_err_msg.arr  );
					tpfree ( ( char * )ptr_fml_Obuf);
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
      }

			i_err[0] =  Fget32( ptr_fml_Ibuf  ,FFO_ND_STRT_DT,0 ,(char *)c_start_dt,0);
      i_ferr [0] = Ferror32;
      i_err[1] =  Fget32( ptr_fml_Ibuf  ,FFO_ND_END_DT,0 ,(char *)c_end_dt,0);
      i_ferr [1] = Ferror32;			
      
			for ( i_cnt=0; i_cnt < 2; i_cnt++ )
			{
				if ( i_err[i_cnt] == -1  )
      	{
          if( i_ferr[i_cnt] != FNOTPRES)
          {
            fn_errlog( c_ServiceName, "S31145", FMLMSG,c_err_msg.arr  );
						tpfree ( ( char * )ptr_fml_Obuf);
            Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
            tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
          }
          else if ( i_ferr[i_cnt]== FNOTPRES && c_sourc_typ == 'S') 
          {
            fn_userlog(c_ServiceName,"Date not provided  ");
            strcpy(c_start_dt , "" );
            strcpy(c_end_dt , "" );
            fn_userlog(c_ServiceName,"Date not provided by sensibull ");
            fn_errlog( c_ServiceName, "S31150", FMLMSG,c_err_msg.arr  );
						tpfree ( ( char * )ptr_fml_Obuf);
            Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
            tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
          }

      	}
  		}
		
			if(DEBUG_MSG_LVL_3)
			{
				fn_userlog(c_ServiceName,"c_subscrp_pln_nm :%s: ",c_subscrp_pln_nm);
				fn_userlog(c_ServiceName,"c_src_flg        :%c: ",c_src_flg);
				fn_userlog(c_ServiceName,"d_dscnt_prcnt     :%lf:",d_dscnt_prcnt);
				fn_userlog(c_ServiceName,"c_start_dt       :%s: ",c_start_dt);
				fn_userlog(c_ServiceName,"c_end_dt         :%s: ",c_end_dt);
			}			

			EXEC SQL 
          SELECT  APM_PLAN_TYPE, 	
                  APA_PLAN_NM,
                  APA_PLAN_AMNT,
                  APA_DISCNTED_AMNT, 
                  (APA_DISCNTED_AMNT* APM_GST_PRCNT)/100,
                  'F',
                  APM_GST_PRCNT,
                  APM_DURATION
          INTO    :c_subscrp_typ,
                  :c_subscrp_pln_nm,
                  :d_actl_amt,
                  :d_dscnt_amt,
                  :d_gst_amt,
                  :c_auto_ren_flg,
                  :d_gst_prcnt,
                  :d_duration
          FROM    APM_API_PLAN_MSTR,APA_API_PLAN_AMNT
          WHERE   APM_PLAN_NM   = :c_subscrp_pln_nm 
          AND     APA_PLAN_NM   =  APM_PLAN_NM
          AND     APA_DISCNT_PRCNTG = :d_dscnt_prcnt;

      if ( SQLCODE != 0 )
      {
				tpfree((char *) ptr_fml_Obuf);
        fn_errlog( c_ServiceName, "S31155", SQLMSG,c_err_msg.arr  );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr, 0 );
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }

			if(DEBUG_MSG_LVL_4)
			{
				fn_userlog(c_ServiceName,"after select in req type S ");
				fn_userlog(c_ServiceName,"c_subscrp_typ    :%s:",c_subscrp_typ); 
				fn_userlog(c_ServiceName,"c_subscrp_pln_nm :%s:",c_subscrp_pln_nm);
				fn_userlog(c_ServiceName,"d_actl_amt       :%lf:",d_actl_amt);
				fn_userlog(c_ServiceName,"d_dscnt_amt      :%lf:",d_dscnt_amt);
				fn_userlog(c_ServiceName,"d_gst_amt        :%lf:",d_gst_amt);
				fn_userlog(c_ServiceName,"c_auto_ren_flg   :%c:",c_auto_ren_flg);
				fn_userlog(c_ServiceName,"d_gst_prcnt      :%lf:",d_gst_prcnt);
				fn_userlog(c_ServiceName,"d_duration       :%lf:",d_duration); 
			}

    
			rtrim((char *)c_subscrp_typ);
			rtrim((char *)c_subscrp_pln_nm);

			i_err [0] =  Fadd32( ptr_fml_Obuf  ,FFO_INSTRMNT_TYP  ,(char *)c_subscrp_typ,0);
			i_ferr[0] = Ferror32;
			i_err [1] =  Fadd32( ptr_fml_Obuf  ,FFO_TRG_NM ,(char *)c_subscrp_pln_nm,0);
			i_ferr[1] = Ferror32;
			i_err [2] =  Fadd32( ptr_fml_Obuf  ,FFO_PLG_AMT ,(char *)&d_actl_amt,0);
			i_ferr[2] = Ferror32;
			i_err [3] =  Fadd32( ptr_fml_Obuf  ,FFO_PI_PO_AMT,(char *)&d_dscnt_amt,0);
			i_ferr[3] = Ferror32;
			i_err [4] =  Fadd32( ptr_fml_Obuf  ,FFO_SOMC_PRCNT ,(char *)&d_dscnt_prcnt,0);
			i_ferr[4] = Ferror32;
			i_err [5] =  Fadd32( ptr_fml_Obuf  ,FFO_ADDL_AMT_BLKD ,(char *)&d_gst_amt,0);
			i_ferr[5] = Ferror32;
			i_err [6] =  Fadd32( ptr_fml_Obuf  ,FFO_IS_FLG ,(char *)&c_auto_ren_flg,0);
			i_ferr[6] = Ferror32;
			i_err [7] =  Fadd32( ptr_fml_Obuf  ,FFO_ND_STRT_DT ,(char *)c_start_dt,0);
			i_ferr[7] = Ferror32;
			i_err [8] =  Fadd32( ptr_fml_Obuf  ,FFO_ND_END_DT ,(char *)c_end_dt,0);
			i_ferr[8] = Ferror32;
			i_err [9] =  Fadd32( ptr_fml_Obuf  ,FFO_AVM_PRCNT ,(char *)&d_gst_prcnt,0);
			i_ferr[9] = Ferror32;
			i_err [10] = Fadd32( ptr_fml_Obuf  ,FFO_JIFFY,(char *)&d_duration,0);
			i_ferr[10] = Ferror32;


			for ( i_cnt=0; i_cnt < 11; i_cnt++ )
			{
				if ( i_err[ i_cnt ] == -1 )
				{
					fn_errlog( c_ServiceName, "S31160", Fstrerror32(i_ferr[i_cnt]), c_err_msg.arr  );
					Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg.arr , 0 );
					EXEC SQL CLOSE :cur_api_dtls1;
					tpfree ( ( char * )ptr_fml_Obuf);
					tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
				}
			}
    }
	}
	
  fn_userlog(c_ServiceName,"All sucessfuly completed");
	
	tpreturn( TPSUCCESS, SUCC_BFR, (char *)ptr_fml_Obuf, 0L, 0 );

}
