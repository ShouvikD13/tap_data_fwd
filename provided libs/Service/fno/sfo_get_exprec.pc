/******************************************************************************/
/*	Program	    			:	SFO_GET_EXPREC                                        */
/*                                                                            */
/*  Input             : FFO_XCHNG_CD                                          */
/*                      FFO_TRD_DT                                            */
/*                      FFO_RQST_TYP                                          */
/*                                                                            */
/*  Optional Input		: FFO_ORDR_RFRNC                                        */
/*                                                                            */
/*                                                                            */
/*  Output            : FFO_PIPE_ID                                           */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_MDFCTN_CNTR                                       */
/*                      FFO_ORDR_RFRNC                                        */
/*											FFO_EBA_MTCH_ACT_NO																		*/
/*                      FFO_SPL_FLG         SPAN Flag Ver 1.6                 */                	
/*                                                                            */
/*  Description       : To get the records for running the End-of-day Batch   */
/*										  Expiry Process and pass it on to the Calling batch    */
/*										  Program.                                              */
/*                                                                            */
/*                      ORDER_SPECIFIC_EXPIRY			-		O                       */
/*                      BATCH_EXPIRY							-		X                       */
/*                      GTD_EXPRY	  							-		G                       */
/*                                                                            */
/*  Log               :                                                       */
/*                                                                            */
/******************************************************************************/
/*        28-Nov-2001     Ver 1.0        S.Balamurugan    Release 1.0       	*/
/*				13-Nov-2002			Ver 1.1				 Mohit 				Broadcasting Purpose  	*/
/*				11-Dec-2003			Ver 1.2				 Sangeet 			GTD Expiry and Messaging*/
/*        28-Dec-2007			Ver 1.3        Sandeep      IBM Changes							*/
/*        22-Jun-2010			Ver 1.4        Sandeep      Fix for temp expiry 		*/
/*				23-Jul-2010			Ver	1.5				 Sandeep			Time Bound Expiry				*/
/*        19-Jul-2011     Ver 1.6        Mahesh       changes for SPAN        */   
/*        13-Jul-2015     Ver 1.7        Sachin       VTC Changes             */   
/*        10-Jul-2018     Ver 1.8        Anand Dhopte Stream No based expiry  */
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fml_rout.h>			/** Ver 1.3  **/
/*Add header files here */

#include <fo.h>
#include <fo_fml_def.h>
#include <fml_def.h>
#include <fo_view_def.h>   /*** ver 1.6 ***/
#include <fn_battmpt.h>
#include <fn_tuxlib.h>
#include <fn_log.h>			/** Ver 1.3  **/
#include <fn_read_debug_lvl.h>      /*** Ver 1.3 ***/
int	i ;
#define INIT(x,y) for(i=0 ;i<y;i++)x[i] = 0
#define TEMP_EXPIRY 'T'	/* 1.4 */


void SFO_GET_EXPREC( TPSVCINFO *rqst )
{

	FBFR32 *ptr_fml_Ibuf;
	FBFR32 *ptr_fml_Obuf;

	char c_ServiceName [ 33 ];
	char c_err_msg [ 256 ];

	int i_returncode;
	char c_tag [ 256 ];
	char c_msg [ 256 ];
	long int li_rec_no;
	char c_rqst_typ;
	char c_undrlyng[7];


	EXEC SQL BEGIN DECLARE SECTION;
		char c_cln_mtch_accnt [ 11 ];
		char c_prd_typ;
		char c_pipe_id [ 3 ];
		char c_ordr_rfrnc [ 19 ];
		char c_xchng_cd [ 4 ];
		char c_trd_dt [ LEN_DATE ];
		char c_tm_bnd [21] ;     /***  Ver 1.5 ***/
		char c_ordr_stts;				 /***  Ver 1.5 ***/
		char c_spn_allwd;        /***  Ver 1.6 ***/
		long l_mdfctn_cntr;
		long l_ord_tot_qty;
		long l_lmt_rt;
	  long l_stream_no = 0;    /*** Ver 1.8 ***/ 
	
	EXEC SQL END DECLARE SECTION;

	ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
	strcpy( c_ServiceName, "SFO_GET_EXPREC" );

	INITDBGLVL(c_ServiceName);			 /*** Ver 1.3 ***/


	INIT(c_undrlyng,7);			/**1.1**/
	fn_userlog(c_ServiceName,"FFO_RQST_TYP is :%c:",c_rqst_typ);

 	i_returncode = fn_unpack_fmltovar ( c_ServiceName,
   	  	                            c_err_msg,
   	                                ptr_fml_Ibuf,
                                    7,				/***	Ver	1.5	Changed From 5 To 6	***//* changed from 6 to 7 in Ver 1.8 */																					FFO_XCHNG_CD, ( char * )c_xchng_cd, NULL,
         											  		FFO_TRD_DT, (char * )c_trd_dt, NULL,
         											  		FFO_ORDR_RFRNC, (char * )c_ordr_rfrnc, NULL,
         											  		FFO_UNDRLYNG, (char * )c_undrlyng, NULL,		/**1.1**/
																		FFO_RQST_TYP, (char *)&c_rqst_typ, NULL,
																		FFO_TM_STMP, (char *)c_tm_bnd, NULL,			/***	Ver	1.5	***/
                                    FFO_DPM_NO, (char *)&l_stream_no, 0);        /*** Ver 1.8 ***/

	if( i_returncode != 0 )
	{
 	  fn_errlog( c_ServiceName, "S31005", LIBMSG , c_err_msg );
		Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
  	tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
	}	

	fn_userlog( c_ServiceName,"Underlying is |%s|",c_undrlyng);
 
  ptr_fml_Obuf = NULL;

	if( c_rqst_typ == ORDER_SPECIFIC_EXPIRY )
	{
		fn_userlog(c_ServiceName,"Order Refernce Is :%s:",c_ordr_rfrnc);
		
	  EXEC SQL
  		SELECT	FOD_PIPE_ID,
  						FOD_PRDCT_TYP,
  						FOD_ORDR_RFRNC,
  						FOD_MDFCTN_CNTR,
							FOD_ORDR_TOT_QTY,
							FOD_LMT_RT,
							FOD_CLM_MTCH_ACCNT,			/*  Ver 1.1   */
							FOD_ORDR_STTS,			/***  Ver 1.5 ***/
							NVL(FOD_SPN_FLG,'N')  /***  Ver 1.6 ***/
  		INTO  	:c_pipe_id,
  						:c_prd_typ,
  						:c_ordr_rfrnc,
  						:l_mdfctn_cntr,
  						:l_ord_tot_qty,
  						:l_lmt_rt,
							:c_cln_mtch_accnt,				/*  Ver 1.1   */
							:c_ordr_stts,				/***  Ver 1.5 ***/
							:c_spn_allwd        /***  Ver 1.6 ***/
  		FROM	 	FOD_FO_ORDR_DTLS
  		WHERE		FOD_XCHNG_CD = :c_xchng_cd
			AND			FOD_ORDR_RFRNC = :c_ordr_rfrnc
  		AND			FOD_ORDR_STTS IN ( 'R', 'O', 'P'  );

      if( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31010", SQLMSG, c_err_msg );
				Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }

  		i_returncode = fn_pack_vartofml( c_ServiceName,
  																		 c_err_msg,
  																		 &ptr_fml_Obuf,
  																		 9,								/***	Ver	1.5	***/
  															 FFO_PIPE_ID, ( char * )c_pipe_id,
  															 FFO_PRDCT_TYP, ( char * )&c_prd_typ,
  															 FFO_MDFCTN_CNTR, ( char * )&l_mdfctn_cntr, 
																 FFO_ORDR_RFRNC, ( char * )c_ordr_rfrnc,
																 FFO_ORD_TOT_QTY, ( char *)&l_ord_tot_qty,
																 FFO_LMT_RT, ( char *)&l_lmt_rt,
																 FFO_EBA_MTCH_ACT_NO, ( char * )c_cln_mtch_accnt,  /* Ver 1.1 */
																 FFO_ORDR_STTS, ( char *)&c_ordr_stts,			/***	Ver	1.5	***/
																 FFO_SPL_FLG,(char *)&c_spn_allwd);         /***  Ver 1.6 ***/ 	
			if( i_returncode != 0 )
  		{
       	fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg );
				Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
       	tpreturn(TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
  		}
	} 
	else if( c_rqst_typ == BATCH_EXPIRY )
	{
  	EXEC SQL
  		DECLARE cur_expry_rec CURSOR FOR
  		SELECT	FOD_PIPE_ID,
  						FOD_PRDCT_TYP,
  						FOD_ORDR_RFRNC,
  						FOD_MDFCTN_CNTR,
							FOD_ORDR_TOT_QTY,
							FOD_LMT_RT,
							FOD_CLM_MTCH_ACCNT,				/*  Ver 1.1   */
							FOD_ORDR_STTS,        /***  Ver 1.5 ***/
							NVL(FOD_SPN_FLG,'N')  /***  Ver 1.6 ***/
  		FROM	 	FOD_FO_ORDR_DTLS
  		WHERE		FOD_XCHNG_CD = :c_xchng_cd
  		/*** AND			FOD_ORDR_VALID_DT < to_date( :c_trd_dt , 'DD-Mon-YYYY' ) Ver 1.7 ****/
      AND FOD_TRD_DT < to_date( :c_trd_dt , 'DD-Mon-YYYY' )  /*** Ver 1.7 ****/
  		AND			FOD_ORDR_STTS IN ('R', 'O', 'P'  ) ;										/***	Ver	1.5	Order Status R Added	***/

  	EXEC SQL
  		OPEN cur_expry_rec;
  
    if( SQLCODE != 0 )
    {
    	fn_errlog( c_ServiceName, "S31020", SQLMSG, c_err_msg );
			Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

  	while(1)
  	{
  		EXEC SQL
  			FETCH cur_expry_rec
  			INTO	:c_pipe_id,
  						:c_prd_typ,
  						:c_ordr_rfrnc,
  						:l_mdfctn_cntr,
  						:l_ord_tot_qty,
  						:l_lmt_rt,
							:c_cln_mtch_accnt,			/*  Ver 1.1   */
							:c_ordr_stts,			/***	Ver	1.5	***/
						  :c_spn_allwd;       /***  Ver 1.6 ***/
  
        if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
        {
          fn_errlog( c_ServiceName, "S31025", SQLMSG, c_err_msg );
          EXEC SQL
            CLOSE cur_expry_rec;
					Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
  
        if( SQLCODE == NO_DATA_FOUND )
        {
          break;
        }
  			i_returncode = fn_pack_vartofml( c_ServiceName,
  																			 c_err_msg,
  																			 &ptr_fml_Obuf,
  																			 9,								/***	Ver	1.5	***/
  															 FFO_PIPE_ID, ( char * )c_pipe_id,
  															 FFO_PRDCT_TYP, ( char * )&c_prd_typ,
  															 FFO_MDFCTN_CNTR, ( char * )&l_mdfctn_cntr,
  															 FFO_ORDR_RFRNC, ( char * )c_ordr_rfrnc,
																 FFO_ORD_TOT_QTY, ( char *)&l_ord_tot_qty,
																 FFO_LMT_RT, ( char *)&l_lmt_rt,
																 FFO_EBA_MTCH_ACT_NO, ( char * )c_cln_mtch_accnt,  /* Ver 1.1 */
                                 FFO_ORDR_STTS, ( char *)&c_ordr_stts,     /***  Ver 1.5 ***/
																 FFO_SPL_FLG,(char *)&c_spn_allwd);         /***  Ver 1.6 ***/
  
  			if( i_returncode != 0 )
  			{
        	fn_errlog( c_ServiceName, "S31030", LIBMSG, c_err_msg );
					Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        	tpreturn(TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
  			}
  	 }
  
  	EXEC SQL
  		CLOSE cur_expry_rec;
	}
  else if( c_rqst_typ == UNDRLYNG_EXPRY )
  {
    EXEC SQL
      DECLARE cur_expry_rec1 CURSOR FOR
      SELECT  FOD_PIPE_ID,
              FOD_PRDCT_TYP,
              FOD_ORDR_RFRNC,
              FOD_MDFCTN_CNTR,
              FOD_ORDR_TOT_QTY,
              FOD_LMT_RT,
							FOD_CLM_MTCH_ACCNT,				/*  Ver 1.1   */
							FOD_ORDR_STTS,     /***  Ver 1.5 ***/
						  NVL(FOD_SPN_FLG,'N')  /***  Ver 1.6 ***/
      FROM    FOD_FO_ORDR_DTLS
      WHERE   FOD_XCHNG_CD = :c_xchng_cd
			AND			FOD_UNDRLYNG =	:c_undrlyng
      AND     FOD_ORDR_STTS IN ( 'O', 'P'  )

      UNION

      SELECT  FOD_PIPE_ID,
              FOD_PRDCT_TYP,
              FOD_ORDR_RFRNC,
              FOD_MDFCTN_CNTR,
              FOD_ORDR_TOT_QTY,
              FOD_LMT_RT,
							FOD_CLM_MTCH_ACCNT,			/*  Ver 1.1   */
							FOD_ORDR_STTS,     /***  Ver 1.5 ***/
						  NVL(FOD_SPN_FLG,'N')  /***  Ver 1.6 ***/
      FROM    FOD_FO_ORDR_DTLS
      WHERE   FOD_XCHNG_CD = :c_xchng_cd
			AND			FOD_UNDRLYNG =	:c_undrlyng
      AND     FOD_ORDR_STTS = 'R' ;

    EXEC SQL
      OPEN cur_expry_rec1;

    if( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31035", SQLMSG, c_err_msg );
      Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    while(1)
    {
      EXEC SQL
        FETCH cur_expry_rec1
        INTO  :c_pipe_id,
              :c_prd_typ,
              :c_ordr_rfrnc,
              :l_mdfctn_cntr,
              :l_ord_tot_qty,
              :l_lmt_rt,
							:c_cln_mtch_accnt,				/*  Ver 1.1   */
							:c_ordr_stts,			/***	Ver	1.5	***/
			  			:c_spn_allwd;       /***  Ver 1.6 ***/							
	
        if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
        {
          fn_errlog( c_ServiceName, "S31040", SQLMSG, c_err_msg );
          EXEC SQL
            CLOSE cur_expry_rec1;
          Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }

        if( SQLCODE == NO_DATA_FOUND )
        {
          break;
        }
        i_returncode = fn_pack_vartofml( c_ServiceName,
                                         c_err_msg,
                                         &ptr_fml_Obuf,
                                         9,							/***	Ver	1.5	***/
                                 FFO_PIPE_ID, ( char * )c_pipe_id,
                                 FFO_PRDCT_TYP, ( char * )&c_prd_typ,
                                 FFO_MDFCTN_CNTR, ( char * )&l_mdfctn_cntr,
                                 FFO_ORDR_RFRNC, ( char * )c_ordr_rfrnc,
                                 FFO_ORD_TOT_QTY, ( char *)&l_ord_tot_qty,
                                 FFO_LMT_RT, ( char *)&l_lmt_rt,
                                 FFO_EBA_MTCH_ACT_NO, ( char * )c_cln_mtch_accnt, /* Ver 1.1  */
                                 FFO_ORDR_STTS, ( char *)&c_ordr_stts,     /***  Ver 1.5 ***/
																 FFO_SPL_FLG,(char *)&c_spn_allwd);         /***  Ver 1.6 ***/																	
	
        if( i_returncode != 0 )
        {
          fn_errlog( c_ServiceName, "S31045", LIBMSG, c_err_msg );
          Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
        }
     }

    EXEC SQL
      CLOSE cur_expry_rec1;
  }
  else if( c_rqst_typ == GTD_EXPRY )
  {
		/* Added by sangeet for GTD expiry version 1.2*/
    EXEC SQL
      DECLARE cur_expry_rec2 CURSOR FOR
      SELECT  FOD_PIPE_ID,
              FOD_PRDCT_TYP,
              FOD_ORDR_RFRNC,
              FOD_MDFCTN_CNTR,
              FOD_ORDR_TOT_QTY,
              FOD_LMT_RT,
							FOD_CLM_MTCH_ACCNT,				/*  Ver 1.1   */
							FOD_ORDR_STTS,     /***  Ver 1.5 ***/
					  	NVL(FOD_SPN_FLG,'N')  /***  Ver 1.6 ***/	
      FROM    FOD_FO_ORDR_DTLS
      WHERE   FOD_XCHNG_CD = :c_xchng_cd
			AND			FOD_ORDR_TYPE= 'D'
      AND     FOD_ORDR_STTS in ('O','P','R') ;


    EXEC SQL
      OPEN cur_expry_rec2;

    if( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31050", SQLMSG, c_err_msg );
      Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    while(1)
    {
      EXEC SQL
        FETCH cur_expry_rec2
        INTO  :c_pipe_id,
              :c_prd_typ,
              :c_ordr_rfrnc,
              :l_mdfctn_cntr,
              :l_ord_tot_qty,
              :l_lmt_rt,
							:c_cln_mtch_accnt,				/*  Ver 1.1   */
							:c_ordr_stts,					/***	Ver	1.5	***/
							:c_spn_allwd;       /***  Ver 1.6 ***/						
	
        if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
        {
          fn_errlog( c_ServiceName, "S31055", SQLMSG, c_err_msg );
          EXEC SQL
            CLOSE cur_expry_rec2;
          Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }

        if( SQLCODE == NO_DATA_FOUND )
        {
          break;
        }
        i_returncode = fn_pack_vartofml( c_ServiceName,
                                         c_err_msg,
                                         &ptr_fml_Obuf,
                                         9,										/***	Ver	1.5	***/
                                 FFO_PIPE_ID, ( char * )c_pipe_id,
                                 FFO_PRDCT_TYP, ( char * )&c_prd_typ,
                                 FFO_MDFCTN_CNTR, ( char * )&l_mdfctn_cntr,
                                 FFO_ORDR_RFRNC, ( char * )c_ordr_rfrnc,
                                 FFO_ORD_TOT_QTY, ( char *)&l_ord_tot_qty,
                                 FFO_LMT_RT, ( char *)&l_lmt_rt,
                                 FFO_EBA_MTCH_ACT_NO, ( char * )c_cln_mtch_accnt, /* Ver 1.1  */
                                 FFO_ORDR_STTS, ( char *)&c_ordr_stts,     /***  Ver 1.5 ***/
																 FFO_SPL_FLG,(char *)&c_spn_allwd);         /***  Ver 1.6 ***/															

        if( i_returncode != 0 )
        {
          fn_errlog( c_ServiceName, "S31060", LIBMSG, c_err_msg );
          Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
        }
     }

    EXEC SQL
      CLOSE cur_expry_rec2;
  }
	/* 1.4 start */
	else if( c_rqst_typ == TEMP_EXPIRY )
	{
  	EXEC SQL
  		DECLARE cur_expry_rec3 CURSOR FOR
  		SELECT	FOD_PIPE_ID,
  						FOD_PRDCT_TYP,
  						FOD_ORDR_RFRNC,
  						FOD_MDFCTN_CNTR,
							FOD_ORDR_TOT_QTY,
							FOD_LMT_RT,
							FOD_CLM_MTCH_ACCNT,
              FOD_ORDR_STTS,     /***  Ver 1.5 ***/		
							NVL(FOD_SPN_FLG,'N')  /***  Ver 1.6 ***/	
  		FROM	 	FOD_FO_ORDR_DTLS
  		WHERE		FOD_XCHNG_CD = :c_xchng_cd
  		/**** AND			FOD_ORDR_VALID_DT < to_date( :c_trd_dt , 'DD-Mon-YYYY' ) *** Ver 1.7 ***/
      AND FOD_TRD_DT < to_date( :c_trd_dt , 'DD-Mon-YYYY' )  /*** Ver 1.7 ****/
  		AND			FOD_ORDR_STTS = 'M';

  	EXEC SQL
  		OPEN cur_expry_rec3;
  
    if( SQLCODE != 0 )
    {
    	fn_errlog( c_ServiceName, "S31065", SQLMSG, c_err_msg );
			Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

  	while(1)
  	{
  		EXEC SQL
  			FETCH cur_expry_rec3
  			INTO	:c_pipe_id,
  						:c_prd_typ,
  						:c_ordr_rfrnc,
  						:l_mdfctn_cntr,
  						:l_ord_tot_qty,
  						:l_lmt_rt,
							:c_cln_mtch_accnt,			/*  Ver 1.1   */
							:c_ordr_stts,			/***	Ver	1.5	***/
 							:c_spn_allwd;       /***  Ver 1.6 ***/					
	 
        if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
        {
          fn_errlog( c_ServiceName, "S31070", SQLMSG, c_err_msg );
          EXEC SQL
            CLOSE cur_expry_rec3;
					Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
  
        if( SQLCODE == NO_DATA_FOUND )
        {
          break;
        }
  			i_returncode = fn_pack_vartofml( c_ServiceName,
  																			 c_err_msg,
  																			 &ptr_fml_Obuf,
  																			 9,													/***	Ver	1.5	***/
  															 FFO_PIPE_ID, ( char * )c_pipe_id,
  															 FFO_PRDCT_TYP, ( char * )&c_prd_typ,
  															 FFO_MDFCTN_CNTR, ( char * )&l_mdfctn_cntr,
  															 FFO_ORDR_RFRNC, ( char * )c_ordr_rfrnc,
																 FFO_ORD_TOT_QTY, ( char *)&l_ord_tot_qty,
																 FFO_LMT_RT, ( char *)&l_lmt_rt,
																 FFO_EBA_MTCH_ACT_NO, ( char * )c_cln_mtch_accnt,  /* Ver 1.1 */
                                 FFO_ORDR_STTS, ( char *)&c_ordr_stts,     /***  Ver 1.5 ***/
 													  		 FFO_SPL_FLG,(char *)&c_spn_allwd);         /***  Ver 1.6 ***/																	 

  			if( i_returncode != 0 )
  			{
        	fn_errlog( c_ServiceName, "S31075", LIBMSG, c_err_msg );
					Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        	tpreturn(TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
  			}
  	 }
      EXEC SQL
      CLOSE cur_expry_rec3;
    }
   /* 1.4 end */
    else if ( c_rqst_typ == CLSOUT_EXPIRY )                 /***    Ver     1.5     ***/
    {
       fn_userlog(c_ServiceName,"Getting Records For CLSOUT_EXPIRY");

      EXEC SQL
      DECLARE cur_expry_rec4 CURSOR FOR
				SELECT	FOD_PIPE_ID,
 								FOD_PRDCT_TYP,
 								FOD_ORDR_RFRNC,
 								FOD_MDFCTN_CNTR,
 								FOD_ORDR_TOT_QTY,
 								FOD_LMT_RT,
 								FOD_CLM_MTCH_ACCNT,
              	FOD_ORDR_STTS,
								NVL(FOD_SPN_FLG,'N')  /***  Ver 1.6 ***/ 
				FROM    FXB_FO_XCHNG_BOOK XB,FOD_FO_ORDR_DTLS FO
				WHERE 	FO.FOD_XCHNG_CD = :c_xchng_cd	
				AND			XB.FXB_ORDR_RFRNC = FO.FOD_ORDR_RFRNC
 				AND     FXB_MDFCTN_CNTR=1
 				AND    	FOD_ORDR_STTS IN ('R','O','P')
 				AND    	TRUNC(FOD_TRD_DT)= :c_trd_dt
 				AND     FXB_RQST_TM < to_date(:c_tm_bnd,'DD-Mon-YYYY hh24:mi:ss')
 				ORDER BY XB.FXB_ORDR_RFRNC;

    EXEC SQL
      OPEN cur_expry_rec4;

    if( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31080", SQLMSG, c_err_msg );
      Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

		while(1)
    {
      EXEC SQL
        FETCH cur_expry_rec4
        INTO  :c_pipe_id,
              :c_prd_typ,
              :c_ordr_rfrnc,
              :l_mdfctn_cntr,
              :l_ord_tot_qty,
              :l_lmt_rt,
              :c_cln_mtch_accnt,
							:c_ordr_stts,		
							:c_spn_allwd;       /***  Ver 1.6 ***/					

        if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
        {
          fn_errlog( c_ServiceName, "S31085", SQLMSG, c_err_msg );
          EXEC SQL
            CLOSE cur_expry_rec4;
          Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }

        if( SQLCODE == NO_DATA_FOUND )
        {
          break;
        }
        i_returncode = fn_pack_vartofml( c_ServiceName,
                                         c_err_msg,
                                         &ptr_fml_Obuf,
                                         9,
                                 FFO_PIPE_ID, ( char * )c_pipe_id,
                                 FFO_PRDCT_TYP, ( char * )&c_prd_typ,
                                 FFO_MDFCTN_CNTR, ( char * )&l_mdfctn_cntr,
                                 FFO_ORDR_RFRNC, ( char * )c_ordr_rfrnc,
                                 FFO_ORD_TOT_QTY, ( char *)&l_ord_tot_qty,
                                 FFO_LMT_RT, ( char *)&l_lmt_rt,
                                 FFO_EBA_MTCH_ACT_NO, ( char * )c_cln_mtch_accnt,
                                 FFO_ORDR_STTS, ( char *)&c_ordr_stts,
																 FFO_SPL_FLG,(char *)&c_spn_allwd);         /***  Ver 1.6 ***/															    

        if( i_returncode != 0 )
        {
          fn_errlog( c_ServiceName, "S31090", LIBMSG, c_err_msg );
          Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
        }
     }

    EXEC SQL
      CLOSE cur_expry_rec4;

	}
  /*** Stream No based Expiry Ver 1.8 Starts ***/
  
  if( c_rqst_typ == 'S' )  
  {
 
    EXEC SQL
      DECLARE cur_expry_rec5 CURSOR FOR
      SELECT  distinct FOD_PIPE_ID,
              FOD_PRDCT_TYP,
              FOD_ORDR_RFRNC,
              FOD_MDFCTN_CNTR,
              FOD_ORDR_TOT_QTY,
              FOD_LMT_RT,
              FOD_CLM_MTCH_ACCNT,
              FOD_ORDR_STTS,    
              NVL(FOD_SPN_FLG,'N') 
        FROM  FXB_FO_XCHNG_BOOK, FOD_FO_ORDR_DTLS
       WHERE  FOD_XCHNG_CD = :c_xchng_cd
         AND  FXB_ORDR_RFRNC = FOD_ORDR_RFRNC
         AND  FXB_STREAM_NO = :l_stream_no
         AND  FOD_ORDR_STTS IN ('R','O','P')
         AND  TRUNC(FOD_TRD_DT)= :c_trd_dt
         AND  FXB_ACK_TM < to_date(:c_tm_bnd,'DD-Mon-YYYY hh24:mi:ss')
    ORDER BY  FOD_ORDR_RFRNC;

    EXEC SQL
      OPEN cur_expry_rec5;

    if( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31095", SQLMSG, c_err_msg );
      Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    while(1)
    {
      EXEC SQL
        FETCH cur_expry_rec5
        INTO  :c_pipe_id,
              :c_prd_typ,
              :c_ordr_rfrnc,
              :l_mdfctn_cntr,
              :l_ord_tot_qty,
              :l_lmt_rt,
              :c_cln_mtch_accnt,
              :c_ordr_stts,    
              :c_spn_allwd;   

        if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
        {
          fn_errlog( c_ServiceName, "S31100", SQLMSG, c_err_msg );
          EXEC SQL CLOSE cur_expry_rec5;
          Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }

        if( SQLCODE == NO_DATA_FOUND )
        {
          break;
        }
        i_returncode = fn_pack_vartofml( c_ServiceName,
                                         c_err_msg,
                                         &ptr_fml_Obuf,
                                         9,                 
                                 FFO_PIPE_ID, ( char * )c_pipe_id,
                                 FFO_PRDCT_TYP, ( char * )&c_prd_typ,
                                 FFO_MDFCTN_CNTR, ( char * )&l_mdfctn_cntr,
                                 FFO_ORDR_RFRNC, ( char * )c_ordr_rfrnc,
                                 FFO_ORD_TOT_QTY, ( char *)&l_ord_tot_qty,
                                 FFO_LMT_RT, ( char *)&l_lmt_rt,
                                 FFO_EBA_MTCH_ACT_NO, ( char * )c_cln_mtch_accnt,
                                 FFO_ORDR_STTS, ( char *)&c_ordr_stts,    
                                 FFO_SPL_FLG,(char *)&c_spn_allwd);      

        if( i_returncode != 0 )
        {
          fn_errlog( c_ServiceName, "S31105", LIBMSG, c_err_msg );
          Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
          EXEC SQL CLOSE cur_expry_rec5; 
          tpreturn(TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
        }
     }

    EXEC SQL
      CLOSE cur_expry_rec5;
  }
  /*** Ver 1.8 Ends ***/ 

	tpreturn(TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_Obuf, 0, 0 );		
		
}

