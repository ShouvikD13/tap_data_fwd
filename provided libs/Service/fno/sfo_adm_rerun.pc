/******************************************************************************/
/*  Program           : SFO_ADM_RERUN                                         */
/*                                                                            */
/*  Input             : FFO_XCHNG_CD                                          */
/*                      FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_RUN_NUM                                           */
/*                      FFO_TRD_DT                                            */
/*                      FFO_BNK_ACT_NO                                        */
/*                      FFO_BNK_TRN_TYP                                       */
/*                      FFO_BNK_BLK_CD                                        */
/*                      FFO_DR_CR_FLG                                         */
/*                      FFO_PI_PO_AMT                                         */
/*                      FFO_EBA_STTS                                          */
/*                      FFO_BNK_STTS                                          */
/*                                                                            */
/*                                                                            */
/*  Desription        : This service does the necessary processing at the     */
/*                      bank/EBA end in case of BLOCK and in case of CREDIT & */ 
/*                      UNBLOCK_DEBIT only EBA end based on the transaction   */
/*                      type & the status showing whether the message has been*/
/*                      updated at the Bank / EBA end.This will send the time */
/*                      & trace no as well to complete the bank process if it	*/ 
/*											is not done.                                          */
/*	case CREDIT				 																												*/
/*	case BLOCK 																																*/
/*	case UNBLOCK_DEBIT	 																											*/
/*	          																																*/
/*  Log                : 1.0 : 26-May-2011 :Sachin Birje | Infotech           */
/******************************************************************************/
/* 1.0  -  New Release                                                        */
/* 1.1  -  Nitin Save     FNO-Narration                                       */
/* 1.2  -  Sachin Birje   FNO BSE Changes                                     */
/* 1.3  -  Sandip Tambe   view to fml changes                                  */
/* 1.4  -  Sonu Jalap     Error handling for Backoffice Automation(23-Mar-2015)*/ 
/* 1.5  -  Sachin Birje   Unditerminate bank faiure handling   ( 17-Nov-2015)  */
/* 1.6  -  Bhupendra Malik Bank Account No changes             (16-Feb-2016)   */
/* 1.7  -  Vishal Borhade  IBR product code changes            (18-Oct-2016)   */ 
/* 1.8  -  Varadraj G     Handling of failed records           (25-04-2018)    */ 
/* 1.9  -  Samip M        Run NO for Bank Service              (18-07-2018)    */
/* 2.0  -  Anuj Pancholi  Deposit Model Changes                (10-Oct-2019)   */
/* 2.1  -  Ravi Malla  FNO Lock Changes                				 (09-Mar-2023)   */
/* TOL  -  Agam           Tux on Linux                         (09-Aug-2023)   */
/*******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
/*Add header files here */
#include <fml_def.h>
/*#include <fo_view_def.h>  ** Ver 1.3 comment ***/
#include <fo_view_def.h>  /*** Ver 1.3 ***/
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_tuxlib.h>
#include <fo.h>
#include <fo_bank.h>
#include <fn_log.h> 
#include <fn_session.h>
#include <fn_read_debug_lvl.h> 
#include <fn_pos.h>             /*  Ver 1.4 */

int i;
#define INIT(x,y)	for(i=0;i<y;i++)x[i]=0	
#define BANK_FAIL 'F' /** Ver 1.5 **/

int fn_ins_mbs(char *,char *,char *,char *,char *,char *,long ,char *,double,char *,char *,char,char *,char,char *,char *,char *,char *,char, char *,char *,char *,char *,char);  /*** Added in Ver 2.0 ***/

int fn_ins_seg_log(char *,long,char *,char *,double,char,char *,double,char,char *,char *,long,char *,char *);
/*** Added in ver 2.0 ***/
 
void SFO_ADM_RERUN ( TPSVCINFO *rqst )
{

  FBFR32 *ptr_fml_Ibuf;

  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];

  struct vw_upd_limits st_upd_lmts;
  struct vw_usr_prfl st_usr_prfl;

  int i_returncode;
  int i_trnsctn;
  int i_fbm_rcrd_cnt;

  char c_bnk_stts;
  char c_eba_stts;
  char c_dr_cr_flg;
  char c_bnk_dr_cr_flg;
  char c_trn_typ;
  char c_trace[13];						
  char c_tm[21];						
	char c_stts;						
	char c_prcs_stts='\0';					/** Ver 1.5 **/	
  char c_tag [ 256 ];
  char c_msg [ 256 ];
  
  char c_model_flag = '\0';   /** Fund Model Flag Ver 2.0  **/
  
  /*** Ver 2.0  Starts ***/
  char c_src_rowid[20+1]; 
  char c_src_rowid_mbs[20+1]; 
  char c_src_rowid_tmp[20+1];
  char c_prdct_cd_mbs[20+1]; 
  char c_accntng_for;
  char c_narration_mbs[101];
  char c_trace_mbs[13];
  char c_run_nmbr[20+1];  
  char c_mtch_series[20+1];
  char c_class_svc[20+1];
  char c_bnk_acct_nmbr[21];
  char c_accntng_typ[20+1];
  char c_mdc_crdt_nmbr[20+1];
  char c_instrument_nmbr[20+1]; 
  char c_tran_date[23];
  char c_sgmnt_cd[20+1];
  char c_pipo_src[20+1];
  char c_user_id_seg_log[9];
  char c_channel[4];
  char c_narration_seg_log[101]; 
  char c_prdct_cd_pbp[4]; 
  char c_ibr_prdct_cd[11];
  char c_pool_acc[21];
  char c_othr_pool_acc[20];
  char c_pipo_typ='\0';

  
  double d_trnsctn_amt=0.0;
  double d_bnk_pipo_amt_pbp= 0.0;
  long l_session_id_seg_log;
  long li_run_no_seg_log;
  

  char c_payin_pool_acc_adm_nse[20];
  char c_payout_pool_acc_adm_nse[20];
  char c_payin_pool_acc_adm_bse[20];
  char c_payout_pool_acc_adm_bse[20];
  char c_main_nse_payin_ac[20];
  char c_main_nse_payout_ac[20];
 
  MEMSET(c_src_rowid);

  MEMSET(c_prdct_cd_mbs);
  MEMSET(c_prdct_cd_pbp);
  MEMSET(c_ibr_prdct_cd);
  MEMSET(c_othr_pool_acc);
  MEMSET(c_pool_acc);

  MEMSET(c_payin_pool_acc_adm_nse);
  MEMSET(c_payout_pool_acc_adm_nse);
  MEMSET(c_payin_pool_acc_adm_bse);
  MEMSET(c_payout_pool_acc_adm_bse);
  MEMSET(c_main_nse_payin_ac);
  MEMSET(c_main_nse_payout_ac);

  strcpy(c_run_nmbr,"");
  strcpy(c_mtch_series,"");
  strcpy(c_src_rowid,"");
  strcpy(c_src_rowid_mbs,"");
  strcpy(c_src_rowid_tmp,"NA");
  strcpy(c_class_svc,"SFO_ADM_UPLD");
  strcpy(c_accntng_typ,"MARGIN");
  strcpy(c_sgmnt_cd,"NFO");
  strcpy(c_mdc_crdt_nmbr,"");
  strcpy(c_instrument_nmbr,"");
  
  rtrim(c_prdct_cd_mbs);
  rtrim(c_src_rowid);
  rtrim(c_src_rowid_mbs);
  rtrim(c_src_rowid_tmp);
  rtrim(c_class_svc);
  rtrim(c_mtch_series);
  rtrim(c_mdc_crdt_nmbr);  
  rtrim(c_instrument_nmbr);
  rtrim(c_sgmnt_cd);
 
  /*** Ver 2.0  Ends ***/
 
	/*** Ver 1.4 ****/
  char c_program_nm[33];
  char c_xchng_cd_tmp[4];
  char c_match_id[11];
  char c_error_txt[256];
  char c_bill_no[18];  /** Ver 1.5 **/

  MEMSET(c_program_nm);
  MEMSET(c_xchng_cd_tmp);
  MEMSET(c_match_id);
  MEMSET(c_error_txt);
  /*** Ver 1.4*/

	char c_xchng_input[10];  /** Ver 1.7 **/
	MEMSET(c_xchng_input);	 /** Ver 1.7 **/	

  long  li_run_no;
  int i_adm_blk_case =0 ; /** Ver 2.0 **/
  double d_val_bal= 0.0;
  double d_tot_alc_amt=0.0;  /** Ver 2.0 **/
  char c_bnk_narration[21];  /** Added in Ver 1.1 **/

  EXEC SQL BEGIN DECLARE SECTION;
  	char c_xchng_cd[4];
    char c_prdct_cd[4];
  	char c_cln_mtch_accnt[11];
  	char c_bnk_accnt[21];
  	char c_reference[16];
  	char c_run_dt[21];
  	double d_rerun_amount= 0.0;
		long int	li_block_cd;
  EXEC SQL END DECLARE SECTION;

	INIT(c_tm,21);
	INIT(c_trace,13);
	INIT(c_cln_mtch_accnt,11);
	INIT(c_bnk_accnt,21);
	INIT(c_reference,16);
	INIT(c_run_dt,21);
  INIT(c_src_rowid,21); /** Ver 2.0 **/

  ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
  strcpy( c_ServiceName, rqst->name );
	INITDBGLVL(c_ServiceName);

  strcpy(c_program_nm,"bat_dly_oblg");  /*** Ver 1.4 ***/

  i_returncode = fn_unpack_fmltovar ( c_ServiceName,
                                    	c_err_msg,
                                    	ptr_fml_Ibuf,
                                    	25,  /** Changed to 16 In Ver 1.1 **/ /** Ver 1.5 *** changed to 17 **/ /** changed from 17 to 26 in Ver 2.0 **/
                                    	FFO_XCHNG_CD, ( char * )c_xchng_cd, NULL,
                                    	FFO_EBA_MTCH_ACT_NO, ( char * )c_cln_mtch_accnt, NULL,
                                    	FFO_RUN_NUM, ( char * )&li_run_no, NULL,
                                    	FFO_TRD_DT, ( char * )c_run_dt, NULL,
                                    	FFO_BNK_ACT_NO, ( char * )c_bnk_accnt, NULL,
                                    	FFO_BNK_TRN_TYP, ( char * )&c_trn_typ, NULL,
                                    	FFO_BNK_BLK_CD, ( char * )&li_block_cd, NULL,
                                    	FFO_DR_CR_FLG, ( char * )&c_dr_cr_flg, NULL,
                                    	FFO_PI_PO_AMT, ( char * )&d_rerun_amount, NULL,
                                    	FFO_EBA_STTS, ( char * )&c_eba_stts, NULL,
                                    	FFO_BNK_STTS, ( char * )&c_bnk_stts, NULL,
                                    	FML_SYSTEM_TRACE, ( char * )c_trace, NULL,			
                                    	FML_TM, ( char * )c_tm, NULL,									
                                    	FFO_BAT_TAG, ( char * )c_tag, NULL,
                                    	FFO_STCK_CD, ( char * )c_prdct_cd, NULL,
																		  FFO_NARRATION_ID, ( char * )c_bnk_narration, NULL,  /** Added in Ver 1.1 **/
																		  FFO_STATUS_FLG, ( char * )&c_prcs_stts, NULL,  /** Added in Ver 1.5 **/
                                      FFO_UPLD_MTCH_FLG, ( char * )&c_model_flag, NULL,  /** Ver 2.0  **/
                                      FFO_DPID, ( char * )c_src_rowid, NULL, /** Ver 2.0  **/
                                      FFO_STRIKE1, (char * )c_payin_pool_acc_adm_nse, NULL, /** Ver 2.0  **/
                                      FFO_STRIKE2, (char * )c_payout_pool_acc_adm_nse, NULL, /** Ver 2.0  **/
                                      FFO_STRIKE3, (char * )c_payin_pool_acc_adm_bse, NULL, /** Ver 2.0  **/
                                      FFO_STRIKE4, (char * )c_payout_pool_acc_adm_bse, NULL, /** Ver 2.0  **/
                                      FFO_LOW_PT,  (char * )c_main_nse_payin_ac, NULL,    /** Ver 2.0  **/
                                      FFO_HIGH_PT, (char * )c_main_nse_payout_ac, NULL ); /** Ver 2.0  **/

  if( i_returncode != 0 )
  {
    fn_errlog( c_ServiceName, "S31005", LIBMSG , c_err_msg );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
    tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
  }

  fn_userlog(c_ServiceName,"ADM Rerun for %s,trn_typ :%c:,block_cd:%ld:,amt:%lf:",c_cln_mtch_accnt,c_trn_typ,li_block_cd,d_rerun_amount);
  if(DEBUG_MSG_LVL_3){
  fn_userlog(c_ServiceName,"*** Started ***");
  fn_userlog(c_ServiceName,"Exchange code    :[%s]",c_xchng_cd);
  fn_userlog(c_ServiceName,"Product cd       :[%s]",c_prdct_cd);
  fn_userlog(c_ServiceName,"Match account    :[%s]",c_cln_mtch_accnt);
  fn_userlog(c_ServiceName,"Run no. 			   :[%ld]",li_run_no);
  fn_userlog(c_ServiceName,"Run date         :[%s]",c_run_dt);
  fn_userlog(c_ServiceName,"Bank Account no. :[%s]",c_bnk_accnt);
  fn_userlog(c_ServiceName,"Transaction Type :[%c]",c_trn_typ);
  fn_userlog(c_ServiceName,"Block code		   :[%ld]",li_block_cd);
  fn_userlog(c_ServiceName,"Debit/Credit Flag:[%c]",c_dr_cr_flg);
  fn_userlog(c_ServiceName,"PIPO Rerun Amount:[%lf]",d_rerun_amount);
  fn_userlog(c_ServiceName,"EBA status       :[%c]",c_eba_stts);
  fn_userlog(c_ServiceName,"Bank status      :[%c]",c_bnk_stts);
  fn_userlog(c_ServiceName,"System trace      :[%s]",c_trace);
  fn_userlog(c_ServiceName,"Placed time      :[%s]",c_tm);
  fn_userlog(c_ServiceName,"Product code     :[%s]",c_prdct_cd);
  fn_userlog(c_ServiceName,"c_stts           :[%c]",c_prcs_stts);  /** Ver 1.5 **/
  fn_userlog(c_ServiceName,"c_bnk_narration  :[%s]",c_bnk_narration);  /** Added in Ver 1.1 **/ 
  fn_userlog(c_ServiceName,"c_model_flag     :[%c]",c_model_flag); /** Ver 2.0 **/
  fn_userlog(c_ServiceName,"c_src_rowid      :[%s]",c_src_rowid); /** Ver 2.0 **/
  fn_userlog(c_ServiceName,"c_payin_pool_acc_nse      :[%s]",c_payin_pool_acc_adm_nse);  /** Ver 2.0 **/
  fn_userlog(c_ServiceName,"c_payout_pool_acc_nse     :[%s]",c_payout_pool_acc_adm_nse); /** Ver 2.0 **/
  fn_userlog(c_ServiceName,"c_payin_pool_acc_bse      :[%s]",c_payin_pool_acc_adm_bse);  /** Ver 2.0 **/
  fn_userlog(c_ServiceName,"c_payout_pool_acc_bse     :[%s]",c_payout_pool_acc_adm_bse); /** Ver 2.0 **/
  fn_userlog(c_ServiceName,"c_main_nse_payin_ac     :[%s]",c_main_nse_payin_ac);     /** Ver 2.0 **/
  fn_userlog(c_ServiceName,"c_main_nse_payout_ac     :[%s]",c_main_nse_payout_ac);   /** Ver 2.0 **/
  }

	/** Ver 1.7 Starts here **/
	
	strcat(c_xchng_input,c_xchng_cd);
	strcat(c_xchng_input,c_prdct_cd);
	rtrim(c_xchng_input);

	/** Ver 1.7 Ends here **/

  strcpy(st_usr_prfl.c_user_id,"system");
  strcpy(st_usr_prfl.c_cln_mtch_accnt,c_cln_mtch_accnt);
  strcpy(st_usr_prfl.c_bnk_accnt_nmbr[0],c_bnk_accnt);
  strcpy(c_tran_date,c_run_dt);  /*** Ver 2.0 ***/
  
  st_usr_prfl.l_session_id = 0;
  c_reference[0] = '\0';

	strcpy(st_usr_prfl.c_rout_crt,"000");
 
	switch ( c_trn_typ )
	{
		case CREDIT :
			if ( ( ( c_eba_stts == NOT_UPDATED ) && ( c_bnk_stts == UPDATED     )) ||
           (( c_eba_stts == NOT_UPDATED ) &&  ( c_bnk_stts == NOT_UPDATED ) && c_prcs_stts == 'F' ) )  /** Ver 1.5 **/ 
			{
				fn_userlog(c_ServiceName,"Stage--------------2");
       	c_bnk_dr_cr_flg = CR ;

       	/***********************************************************/
       	/*  Sending Credit message to Bank with trace no and time  */
       	/***********************************************************/
        if ( c_model_flag == 'B' ) /** Ver 2.0  Condition Added For Block/Deposit Model **/
        { 
       	 i_returncode =  fn_send_bnk_msg ( &st_usr_prfl,
                                           c_bnk_dr_cr_flg,
                                         	 "  ",
                                           d_rerun_amount,
                                         	 BACKOFFICE,
                                         	 c_ServiceName,
                                         	 c_err_msg,
                                         	 &d_val_bal,
                                         	 c_trace,
								  			 									 c_tm,
							  	  			 								 c_bnk_narration, /** Added in Ver 1.1 **/
						 						  								 c_xchng_input,     /** Ver 1.7 **/
                                           li_run_no);       /** Added for Ver 1.9 **/
        }
        else
        {
         i_returncode = SUCCESS;
        }
       	switch ( i_returncode )
       	{
         	case SUCCESS :								/*Considering that the transation was already successful*/
				  fn_userlog(c_ServiceName,"Stage--------------3");
					c_bnk_stts	='Y' ;
					c_stts	='N' ;
          break;

         	case INSUF_FUNDS :
         	case BLOCK_NOT_EXISTING :
         	case INDERMINATE_FAILURE :
         	case RERUN_FAILURE :
         	case GENERAL_FAILURE :
         	default :
	  			fn_userlog(c_ServiceName,"Stage--------------5");
          /**** Ver 1.5 Starts here ****/
          if( c_prcs_stts == 'F' )
          {
            i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
            if ( i_trnsctn == -1 )
            {
              fn_errlog(c_ServiceName, "S31010",LIBMSG,c_err_msg);
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
              fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }
        /*********************** Added in ver 1.8 **********************************/
          i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
            if ( i_returncode != 0 )
            {
              fn_errlog(c_ServiceName, "S31015",LIBMSG,c_err_msg);
              fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              strcpy(c_error_txt,"System error. Contact System Support");  
              fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }
        /************************* Ver 1.8 Ended ***************************/

				/** Ver 2.1 Start **/
          i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
            if ( i_returncode != 0 )
            {
              fn_errlog(c_ServiceName, "S31020",LIBMSG,c_err_msg);
              fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              strcpy(c_error_txt,"System error. Contact System Support");  
              fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }
				/** Ver 2.1 End **/




            EXEC SQL
          	UPDATE FBM_FO_BNK_FLR_MSG
          	SET FBM_STTS = 'S'
          	WHERE
          	FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt  AND
          	FBM_RUN_NO         = :li_run_no         AND
          	FBM_BNK_ACCNT_NMBR = :c_bnk_accnt       AND
          	FBM_TRACE          = :c_trace           AND
          	FBM_STTS           = 'F'                AND
          	FBM_BLK_CD         = :li_block_cd       AND
          	FBM_TRNSCTN_TYP    = :c_trn_typ         AND
          	FBM_PRDCT_CD       = :c_prdct_cd        AND
          	FBM_XCHNG_CD       = :c_xchng_cd;      
          	if(SQLCODE  != 0)
          	{
							/***** Ver 1.6 Starts *************/
							if(SQLCODE == NO_DATA_FOUND )	
							{
								EXEC SQL
          				UPDATE FBM_FO_BNK_FLR_MSG
          				SET FBM_STTS = 'S'
          				WHERE
          				FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt  AND
          				FBM_RUN_NO         = :li_run_no         AND
          				FBM_BNK_ACCNT_NMBR <> :c_bnk_accnt      AND
          				FBM_TRACE          = :c_trace           AND
          				FBM_STTS           = 'F'                AND
          				FBM_BLK_CD         = :li_block_cd       AND
          				FBM_TRNSCTN_TYP    = :c_trn_typ         AND
          				FBM_PRDCT_CD       = :c_prdct_cd        AND
          				FBM_XCHNG_CD       = :c_xchng_cd;      
								if(SQLCODE != 0)
								{
           	 			fn_errlog(c_ServiceName, "S31025",SQLMSG,c_err_msg);
            			strcpy ( c_msg, "System error. Contact system support" );
            			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
									fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
            			strcpy(c_error_txt,"System error. Contact System Support");
            			fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
            			tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
								}
							}
							else
							{
	          	 	fn_errlog(c_ServiceName, "S31030",SQLMSG,c_err_msg);
            		strcpy ( c_msg, "System error. Contact system support" );
            		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
								fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
            		strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
            		tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
          		}
						}
 
            /*************** Added in ver 1.8 *******************/
            EXEC SQL
              UPDATE  AMC_ADM_MRGN_CALC
                 SET  AMC_STATUS_FLG = 'F'
               WHERE  AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                 AND  AMC_RUN_NO         = :li_run_no
                 AND  AMC_BNK_ACCNT      = :c_bnk_accnt
                 AND  AMC_DBCR_CD        = :c_dr_cr_flg
                 AND  AMC_XCHNG_CD = :c_xchng_cd
                 AND  AMC_BATCH_SITE_IND='B'
                 AND  AMC_STATUS_FLG = 'N';

            if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
            {
              fn_errlog( c_ServiceName, "S31035",SQLMSG,c_err_msg);
              fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              strcpy(c_error_txt,"System error. Contact System Support");
              fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }
           /****************** Ver 1.8 Ended *********************/
            
     /****************** Ver 1.6 Ends *************************/
            if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
            {
              fn_errlog( c_ServiceName, "S31040",LIBMSG,c_err_msg);
              fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
              fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }
            sprintf ( c_msg,"Failure while sending rerun bank entry for :%s:",c_cln_mtch_accnt);
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            tpreturn( TPSUCCESS, SUCC_BFR, NULL, 0, 0 );
          }
          /****** Ver 1.5 Ends here *******/

					c_bnk_stts	='Y' ;      /** Since Bank was success in Normal Run **/
					c_stts	='N' ;


        	i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
        	if ( i_trnsctn == -1 )
        	{
          	fn_errlog(c_ServiceName, "S31045",LIBMSG,c_err_msg);
          	strcpy ( c_msg, "System error. Contact system support" );
          	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          	tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
        	}

         /************************ Added in Ver 1.8 ***************************/
         i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
                if ( i_returncode != 0 )
                {
                  fn_errlog(c_ServiceName, "S31050",LIBMSG,c_err_msg);
                  fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
                  strcpy ( c_msg, "System error. Contact system support" );
                  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                  strcpy(c_error_txt,"System error. Contact System Support");
                  fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
                  tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
                }
        /************************** Ver 1.8 Ended ******************************/
				/** Ver 2.1 Start **/
          i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
            if ( i_returncode != 0 )
            {
              fn_errlog(c_ServiceName, "S31055",LIBMSG,c_err_msg);
              fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              strcpy(c_error_txt,"System error. Contact System Support");  
              fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }
				/** Ver 2.1 End **/

					EXEC SQL
					UPDATE FBM_FO_BNK_FLR_MSG
					SET	FBM_STTS = 'P'
					WHERE
					FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt	AND
					FBM_RUN_NO 				 = :li_run_no					AND
					FBM_BNK_ACCNT_NMBR = :c_bnk_accnt				AND
					FBM_TRACE					 = :c_trace						AND
					FBM_STTS					 = 'N'                AND	
          FBM_BLK_CD         = :li_block_cd       AND
          FBM_TRNSCTN_TYP    = :c_trn_typ         AND
          FBM_PRDCT_CD       = :c_prdct_cd        AND 
          FBM_XCHNG_CD       = :c_xchng_cd;       /** Ver 1.2 **/
					if(SQLCODE	!= 0)
        	{
						/******************* Ver 1.6 Starts *************/
						if(SQLCODE == NO_DATA_FOUND)
						{
							EXEC SQL
								UPDATE 	FBM_FO_BNK_FLR_MSG
								SET			FBM_STTS = 'P',
												FBM_BNK_ACCNT_NMBR = :c_bnk_accnt
								WHERE
								FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt	AND
								FBM_RUN_NO 				 = :li_run_no					AND
								FBM_BNK_ACCNT_NMBR <> :c_bnk_accnt			AND
								FBM_TRACE					 = :c_trace						AND
								FBM_STTS					 = 'N'                AND	
								FBM_BLK_CD         = :li_block_cd       AND
								FBM_TRNSCTN_TYP    = :c_trn_typ         AND
								FBM_PRDCT_CD       = :c_prdct_cd        AND 
								FBM_XCHNG_CD       = :c_xchng_cd;
							if(SQLCODE	!= 0)
        			{
          			fn_errlog(c_ServiceName, "S31060",SQLMSG,c_err_msg);
          			strcpy ( c_msg, "System error. Contact system support" );
          			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
								fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
    						strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    						fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          			tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
        			}
							fn_userlog(c_ServiceName,"Number of rows updated=:%ld:",sqlca.sqlerrd[2]);
						}
						else /************* Ver 1.6 Ends **********************/
						{
          		fn_errlog(c_ServiceName, "S31065",SQLMSG,c_err_msg);
          		strcpy ( c_msg, "System error. Contact system support" );
          		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
							fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
    					strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    					fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          		tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
        		}
					}
	
					EXEC SQL
  				INSERT INTO FBM_FO_BNK_FLR_MSG
					(
						FBM_XCHNG_CD,
						FBM_CLM_MTCH_ACCNT,
						FBM_RUN_NO,
						FBM_RUN_DT,
						FBM_BNK_ACCNT_NMBR,
						FBM_TRNSCTN_TYP,
						FBM_BLK_CD,
						FBM_DC_FLG,
						FBM_AMT,
						FBM_BNK_STTS,
						FBM_EBA_STTS,
						FBM_STTS,
						FBM_TRACE,
						FBM_TIMESTAMP,
            FBM_PRDCT_CD,
	  		    FBM_NARRATION,   /** Added in Ver 1.1 **/
            FBM_FUND_MODEL_FLG /** Added in Ver 2.0 **/ 
					)
					VALUES
					(
						:c_xchng_cd,
						:c_cln_mtch_accnt,
						:li_run_no,
						trunc(sysdate),
						:c_bnk_accnt,
						:c_trn_typ,
						:li_block_cd,
						:c_dr_cr_flg,
						:d_rerun_amount,
						:c_bnk_stts,
						:c_eba_stts,
						'N',
						:c_trace,
						to_date(:c_tm,'yyyymmddhh24miss'),
            :c_prdct_cd,
	    			:c_bnk_narration,
            :c_model_flag  /** Ver 2.0 **/
					);					

					if(SQLCODE	!= 0)
        	{
          	fn_errlog(c_ServiceName, "S31070",SQLMSG,c_err_msg);
          	strcpy ( c_msg, "System error. Contact system support" );
          	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
    				strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    				fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          	tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
        	}
        	if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
        	{
          	fn_errlog( c_ServiceName, "S31075",LIBMSG,c_err_msg);
          	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         		strcpy ( c_msg, "System error. Contact system support" );
         		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    				strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    				fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          	tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
        	}
          sprintf ( c_msg,"Failure while sending rerun bank entry for :%s:",c_cln_mtch_accnt);
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
  				tpreturn( TPSUCCESS, SUCC_BFR, NULL, 0, 0 );

       	}

        i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
        if ( i_trnsctn == -1 )
        {
          fn_errlog(c_ServiceName, "S31080",LIBMSG,c_err_msg);
          strcpy ( c_msg, "System error. Contact system support" );
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    			strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    			fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
        }
      
        i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
        if ( i_returncode != 0 )
        {
          fn_errlog(c_ServiceName, "S31085",LIBMSG,c_err_msg);
          fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
          strcpy ( c_msg, "System error. Contact system support" );
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    			strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    			fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
        } 
				/** Ver 2.1 Start **/
        i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
        if ( i_returncode != 0 )
        {
          fn_errlog(c_ServiceName, "S31090",LIBMSG,c_err_msg);
         	fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
          strcpy ( c_msg, "System error. Contact system support" );
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          strcpy(c_error_txt,"System error. Contact System Support");  
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
          tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
        }
				/** Ver 2.1 End **/

				fn_userlog(c_ServiceName,"Stage--------------6");
        /*************************************************************************/
        /** At this stage , Since bank was success in normal & EBA was fail
            So reduce isec margin amount by credit success                      **/ 
        /*************************************************************************/
        if( strcmp(c_xchng_cd,"NFO") == 0 )      /*** Ver 1.2, If condition ***/
        {  

         if ( c_model_flag == 'B' )
         {
 
          i_returncode = fn_upd_adm_alloc_dtls( c_ServiceName,
                                                c_err_msg,
                                                c_cln_mtch_accnt,
                                                c_bnk_accnt,
                                                c_tag,
                                                0,
                                                0,
                                                d_rerun_amount * (-1),
                                                0,
                                                &d_tot_alc_amt /** Ver 2.0 **/
                                               );
         }
         else
         {
          i_returncode = fn_upd_adm_alloc_dtls( c_ServiceName,
                                                c_err_msg,
                                                c_cln_mtch_accnt,
                                                c_bnk_accnt,
                                                c_tag,
                                                0,
                                             /* 0, commented in Ver 2.0 */
                                                d_rerun_amount,  /* Ver 2.0 Add in allcn fr Deposit Mdl */
                                                d_rerun_amount * (-1),
                                                0,          /*** Ver 1.2 *** BSE Isec Margin amount ***/
                                                &d_tot_alc_amt /** Ver 2.0 **/
                                              );
    
         }
         
        }
        else if( strcmp(c_xchng_cd,"BFO") == 0 )  /*** Ver 1.2 starts here ***/
        {
         if ( c_model_flag == 'B' ) 
         {
          i_returncode = fn_upd_adm_alloc_dtls( c_ServiceName,
                                               c_err_msg,
                                               c_cln_mtch_accnt,
                                               c_bnk_accnt,
                                               c_tag,
                                               0,
                                               0,
                                               0,                    /** NSE Isec Margin amount ***/
                                               d_rerun_amount * (-1), /** BSE Isec Margin amount ***/
                                               &d_tot_alc_amt /** Ver 2.0 **/
                                              );
         }
         else
         {
            i_returncode = fn_upd_adm_alloc_dtls( c_ServiceName,
                                                  c_err_msg,
                                                  c_cln_mtch_accnt,
                                                  c_bnk_accnt,
                                                  c_tag,
                                                  0,
                                                 /* 0, commented in Ver 2.0 */
                                                  d_rerun_amount, /* Ver 2.0 Add in allcn fr Deposit Mdl */ 
                                                  0,                     /** NSE Isec Margin amount ***/
                                                  d_rerun_amount * (-1), /** BSE Isec Margin amount ***/
                                                  &d_tot_alc_amt /** Ver 2.0 **/
                                                 ); 

         }

        } /*** Ver 1.2 ends here ***/
        if ( i_returncode != 0 )
        {
          fn_errlog(c_ServiceName, "S31095",LIBMSG,c_err_msg);
          fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
          strcpy ( c_msg, "System error. Contact system support" );
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
        }
    
       /****** commented in Ver 2.0 *************** 
        if( c_prcs_stts == 'F' )  *** Ver 1.5 Added ***
        {
       ********************************************/
      /*** Generate Bill No. for EBA and Bank Fail ****/

          fn_userlog(c_ServiceName,"Inside 'F' "); 
          MEMSET(c_bill_no);

          EXEC SQL
                SELECT 'ADM'||to_char(sysdate,'YYYYMMDD')||LPAD(pipoadmseq.nextval,6,0)
                INTO :c_bill_no
                FROM   DUAL;
          if( SQLCODE != 0 )
          {
            fn_errlog( c_ServiceName, "S31100",SQLMSG,c_err_msg);
            fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
            strcpy ( c_msg, "System error. Contact system support" );
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
            tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
          } 
          
          EXEC SQL
          UPDATE  AMC_ADM_MRGN_CALC
             SET  AMC_STATUS_FLG = 'Y',
                  AMC_BILL_NO = :c_bill_no,
                  AMC_NEW_ISEC_MRGN_AMT = AMC_NEW_ISEC_MRGN_AMT + :d_rerun_amount   /*** Added in Ver 1.8 ***/
           WHERE  AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
             AND  AMC_RUN_NO         = :li_run_no
             AND  AMC_BNK_ACCNT      = :c_bnk_accnt
             AND  AMC_DBCR_CD        = :c_dr_cr_flg
            /** AND  AMC_NEW_ISEC_MRGN_AMT = :d_rerun_amount  *** commented in ver 1.8 ***/
            /***  AND  AMC_STATUS_FLG = 'F'    commented in Ver 1.8 ***/
             AND  AMC_STATUS_FLG = 'N'                     /*** Added in Ver 1.8 ***/                      
             AND  AMC_BILL_NO is null
             AND  AMC_XCHNG_CD = :c_xchng_cd
             /* AND  AMC_BATCH_SITE_IND='B' *** commented in Ver 1.8 ***/
             AND AMC_BATCH_SITE_IND IN ('B','S')  /**** Added in Ver 1.8 ***/
             AND AMC_TO_CR_ALCTD_AMT = :d_rerun_amount /*** Added in Ver 1.8 ***/ 
             AND ROWNUM < 2
             RETURNING ROWID     /*** Ver 2.0 ****/
             INTO :c_src_rowid_mbs;
      /**  }  ****/
       
        /************ comented in  Ver 2.0 ***********
        else
        {
          EXEC SQL
          UPDATE  AMC_ADM_MRGN_CALC
             SET  AMC_STATUS_FLG = 'Y'
           WHERE  AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
             AND  AMC_RUN_NO         = :li_run_no
             AND  AMC_BNK_ACCNT      = :c_bnk_accnt
             AND  AMC_DBCR_CD        = :c_dr_cr_flg
             AND  AMC_NEW_ISEC_MRGN_AMT = :d_rerun_amount
             AND  AMC_STATUS_FLG = 'N'
             AND  AMC_BILL_NO is not null
             AND  AMC_XCHNG_CD = :c_xchng_cd;  *** Ver 1.2 ***
         
        } 
        **********************************************/

        if( SQLCODE != 0 )
        {
          fn_errlog( c_ServiceName, "S31105",SQLMSG,c_err_msg);
          fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
          strcpy ( c_msg, "System error. Contact system support" );
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
        }
          
       /*** 2.0  Logic for MBS AND SEG GOES HERE ***/
  
       if( DEBUG_MSG_LVL_0 )
       {
        fn_userlog( c_ServiceName, "Before fn_ins_mbs call" );
       }
       /***** Entry in MBS Table *****/
 
       if ( c_model_flag == 'D' )
       { 
        strcpy(c_pipo_src,"LIMIT");  
       }
       else 
       {
        strcpy(c_pipo_src,"CLEAR_BAL"); 
       }

       if(strcmp(c_xchng_cd,"NFO")==0)
       {
        strcpy(c_prdct_cd_mbs,"NFOADMO");
        c_accntng_for='O';
       }
       else if(strcmp(c_xchng_cd,"BFO")==0)
       {
        strcpy(c_prdct_cd_mbs,"BFOADMO");
        c_accntng_for='O';
       }

       d_trnsctn_amt=d_rerun_amount/100;
       sprintf(c_narration_mbs,"Being Cash Margin Credited Against Open Position in NSE %s",c_tran_date);
       strcpy(c_trace_mbs,c_trace);
       sprintf(c_run_nmbr, "%lu" ,li_run_no);
       strcpy(c_mtch_series,c_bill_no);
       strcpy(c_bnk_acct_nmbr,c_bnk_accnt);

       rtrim(c_src_rowid_mbs);
       rtrim(c_pipo_src); 
   
       if(fn_ins_mbs(c_ServiceName,c_cln_mtch_accnt,c_xchng_cd,c_prdct_cd_mbs,c_pipo_src,c_sgmnt_cd,0,c_tran_date,d_trnsctn_amt,c_run_nmbr,c_instrument_nmbr,'\0',c_mdc_crdt_nmbr, c_accntng_for, c_accntng_typ,c_trace_mbs,c_bnk_acct_nmbr, c_narration_mbs, 'C', c_mtch_series,c_class_svc, c_src_rowid_mbs,c_err_msg,c_model_flag) == -1)  /* \0 Added in Ver TOL */
    {
     fn_errlog(c_ServiceName, "S31110",LIBMSG,c_err_msg);
     fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
     strcpy ( c_msg, "System error. Contact system support" );
     fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
     strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
     fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
     tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
    }
   
    if ( c_model_flag == 'D') 
    {
     /*** Insert INTO SEGLOG Starts  ***/
 
     if( DEBUG_MSG_LVL_0 )
     {
      fn_userlog( c_ServiceName, "Before fn_ins_seg_log call" );
     } 
     strcpy(c_user_id_seg_log ,"system");
     l_session_id_seg_log =0;
     strcpy(c_channel,"SYS");
     li_run_no_seg_log=li_run_no;
     MEMSET(c_narration_seg_log);
     /* strcpy(c_narration_seg_log,"Allocation To FNO Segment "); */
     sprintf(c_narration_seg_log,"NFO ADM Payout %s",c_tran_date);
     i_returncode = fn_ins_seg_log(c_user_id_seg_log,
                                   l_session_id_seg_log,
                                   c_ServiceName,
                                   c_cln_mtch_accnt,
                                   d_rerun_amount*0.01,  
                                   'O', /**** To reduce  allocation **/
                                   c_sgmnt_cd,
                                   d_tot_alc_amt*0.01,
                                   'N',
                                   c_channel,
                                   c_narration_seg_log,
                                   li_run_no_seg_log,
                                   c_prdct_cd_mbs,
                                   c_pipo_src); 
    if ( i_returncode != 0 )
    {
     fn_errlog(c_ServiceName, "S31115",LIBMSG,c_err_msg);
     fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
     strcpy ( c_msg, "System error. Contact system support" );
     fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
     strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
     fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
     tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 ); 
    }
   /** Insert INTO SEGLOG ENDS ***/
 
    /*** PBP INSERT Starts ***/ 
    if(strcmp(c_xchng_cd,"NFO")==0)
    {
     strcpy(c_prdct_cd_pbp,"ADM");
     strcpy(c_ibr_prdct_cd,"NFOADMOD");
     c_pipo_typ='O';
     strcpy(c_pool_acc,c_payout_pool_acc_adm_nse);
     strcpy(c_othr_pool_acc,c_main_nse_payout_ac);
     d_bnk_pipo_amt_pbp= d_rerun_amount;
    }
    else 
    {
     strcpy(c_prdct_cd_pbp,"ADB");
     strcpy(c_ibr_prdct_cd,"BFOADMOD");
     c_pipo_typ='O';
     strcpy(c_pool_acc, c_payout_pool_acc_adm_bse);
     strcpy(c_othr_pool_acc, c_main_nse_payout_ac);
     d_bnk_pipo_amt_pbp = d_rerun_amount; 
    } 
    
     EXEC SQL
      INSERT INTO PBP_PRD_BNK_PIPO
      (
        PBP_PROD_CD,
        PBP_RUN_NO,
        PBP_RUN_DATE,
        PBP_PIPO_TYP,
        PBP_AMT,
        PBP_POOL_ACC,
        PBP_DBCR_FLG,
        PBP_PRCSS_FLG,
        PBP_TRACE,
        PBP_TIMESTAMP,
        PBP_DC_DATE,
        PBP_IBR_PRDCT_CD,
        PBP_INS_DATE,
        PBP_OTH_POOL_ACC
      )
      VALUES
      (
       :c_prdct_cd_pbp,
       :li_run_no,
        to_date(:c_run_dt,'DD-Mon-YYYY'),
       :c_pipo_typ,
       :d_bnk_pipo_amt_pbp*0.01,
       :c_pool_acc,
       'N',
       'N',
       '',
       '',
       '',
       :c_ibr_prdct_cd,
       SYSDATE,
       :c_othr_pool_acc
       );
   
    if ( i_returncode != 0 )
    {
     fn_errlog(c_ServiceName, "S31120",LIBMSG,c_err_msg);
     fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
     strcpy ( c_msg, "System error. Contact system support" );
     fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
     strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
     fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
     tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
    }
    
     /** Insert Into PBP ENDS ***/  
   
     
   }
   
    /*** 2.0 LOGIC ENDS HERE ***/

       	/*** update the record to PROCESSED status in failure table ***/
        if( c_prcs_stts == 'F' )  /** Ver 1.5 Added ***/
        {
				 EXEC SQL
					UPDATE	fbm_fo_bnk_flr_msg
					SET			fbm_stts						= 'Y',
                  fbm_eba_stts        = 'Y',
                  FBM_BNK_STTS        = 'Y',
                  fbm_run_dt          = sysdate,
									FBM_RMRKS           = 'BANKFAILSUCCESS'  /*** Ver 1.5 ***/
					WHERE		fbm_xchng_cd				= :c_xchng_cd
					AND			fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
					AND			fbm_run_no				  = :li_run_no
					AND			fbm_run_dt				  = to_date(:c_run_dt,'DD-Mon-YYYY')
					AND			fbm_bnk_accnt_nmbr	= :c_bnk_accnt
					AND			fbm_trnsctn_typ			= :c_trn_typ
					AND			fbm_blk_cd					= :li_block_cd
					AND			fbm_dc_flg					= :c_dr_cr_flg
					AND			fbm_amt							= :d_rerun_amount 
          AND     FBM_PRDCT_CD        = :c_prdct_cd
          AND     fbm_stts            ='F';	
        }
        else  
        {
         EXEC SQL
          UPDATE  fbm_fo_bnk_flr_msg
          SET     fbm_stts            = 'Y',
                  fbm_eba_stts        = 'Y',
                  fbm_run_dt          = sysdate
          WHERE   fbm_xchng_cd        = :c_xchng_cd
          AND     fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     fbm_run_no          = :li_run_no
          AND     fbm_run_dt          = to_date(:c_run_dt,'DD-Mon-YYYY')
          AND     fbm_bnk_accnt_nmbr  = :c_bnk_accnt
          AND     fbm_trnsctn_typ     = :c_trn_typ
          AND     fbm_blk_cd          = :li_block_cd
          AND     fbm_dc_flg          = :c_dr_cr_flg
          AND     fbm_amt             = :d_rerun_amount
          AND     FBM_PRDCT_CD        = :c_prdct_cd
          AND     fbm_stts            ='N';
        }
        if( SQLCODE != 0 )
        {
					/**** Ver 1.6 Starts **************/
					if(SQLCODE == NO_DATA_FOUND )
					{
						if( c_prcs_stts == 'F' )  
        		{
				 			EXEC SQL
								UPDATE	fbm_fo_bnk_flr_msg
								SET			fbm_stts						= 'Y',
                			  fbm_eba_stts        = 'Y',
                  			FBM_BNK_STTS        = 'Y',
                  			fbm_run_dt          = sysdate,
												FBM_RMRKS           = 'BANKFAILSUCCESS'  /*** Ver 1.5 ***/
								WHERE		fbm_xchng_cd				= :c_xchng_cd
								AND			fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
								AND			fbm_run_no				  = :li_run_no
								AND			fbm_run_dt				  = to_date(:c_run_dt,'DD-Mon-YYYY')
								AND			fbm_bnk_accnt_nmbr	<> :c_bnk_accnt
								AND			fbm_trnsctn_typ			= :c_trn_typ
								AND			fbm_blk_cd					= :li_block_cd
								AND			fbm_dc_flg					= :c_dr_cr_flg
								AND			fbm_amt							= :d_rerun_amount 
          			AND     FBM_PRDCT_CD        = :c_prdct_cd
          			AND     fbm_stts            ='F';	
        		}
        		else  
        		{
         			EXEC SQL
          			UPDATE  fbm_fo_bnk_flr_msg
          				SET     fbm_stts            = 'Y',
                  				fbm_eba_stts        = 'Y',
                  				fbm_run_dt          = sysdate
          			WHERE   fbm_xchng_cd        = :c_xchng_cd
          			AND     fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
          			AND     fbm_run_no          = :li_run_no
          			AND     fbm_run_dt          = to_date(:c_run_dt,'DD-Mon-YYYY')
          			AND     fbm_bnk_accnt_nmbr  <> :c_bnk_accnt
          			AND     fbm_trnsctn_typ     = :c_trn_typ
          			AND     fbm_blk_cd          = :li_block_cd
          			AND     fbm_dc_flg          = :c_dr_cr_flg
          			AND     fbm_amt             = :d_rerun_amount
          			AND     FBM_PRDCT_CD        = :c_prdct_cd
          			AND     fbm_stts            ='N';
        		}
						if(SQLCODE != 0 )
						{
          		fn_errlog( c_ServiceName, "S31125",SQLMSG,c_err_msg);
          		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         			strcpy ( c_msg, "System error. Contact system support" );
         			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          		strcpy(c_error_txt,"System error. Contact System Support");
          		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
          		tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
						}
					}
					else /**************** Ver 1.6 Ends  ************/
					{
						fn_errlog( c_ServiceName, "S31130",SQLMSG,c_err_msg);
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         		strcpy ( c_msg, "System error. Contact system support" );
         		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
						strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
						fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
						tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
					}
				}

        if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
        {
          fn_errlog( c_ServiceName, "S31135",LIBMSG,c_err_msg);
          fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         	strcpy ( c_msg, "System error. Contact system support" );
         	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
        }
  
        /*** Ver 2.0 *** Block Allocation For Block Model Customer Goes Here **/  

        if ( c_model_flag == 'B' && c_bnk_stts == 'Y' )
        {
          fn_userlog(c_ServiceName,"Block Allocation Starts");
          c_bnk_dr_cr_flg = BK ;   
          
         /******************************************************/
         /*  Sending Block Allocation message to Bank          */
         /******************************************************/ 
        
          i_returncode =  fn_send_bnk_msg (&st_usr_prfl,
                                          c_bnk_dr_cr_flg,
                                          FO_BLK_CD,
                                          d_rerun_amount,
                                          BACKOFFICE,
                                          c_ServiceName,
                                          c_err_msg,
                                          &d_val_bal,
                                          c_trace,
                                          c_tm,
                                          c_bnk_narration, 
                                          c_xchng_input,  
                                          li_run_no);    
         switch ( i_returncode )
         {
           case SUCCESS :
            fn_userlog(c_ServiceName,"Success From Bank");
            c_bnk_stts  ='Y' ;
            c_stts  ='N' ;
            break;
           case INSUF_FUNDS :
            fn_userlog(c_ServiceName,"In INSUF_FUNDS  for add amount in allocation");
            if(d_val_bal > 0) 
            {
             i_adm_blk_case = 1;  
            }
            break;
           case BLOCK_NOT_EXISTING :
           case GENERAL_FAILURE :
           case INDERMINATE_FAILURE :
           case RERUN_FAILURE :
           default :
           c_bnk_stts  ='N' ;
           c_stts  ='N' ;
           c_trn_typ = BLOCK;
           li_block_cd =  ALLC_FOR_ADM; 
           i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
           if ( i_trnsctn == -1 )
           {
             fn_errlog(c_ServiceName, "S31140",LIBMSG,c_err_msg);
             strcpy ( c_msg, "System error. Contact system support" );
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
             strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
             fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
             tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
           }  
           
           EXEC SQL
           INSERT INTO FBM_FO_BNK_FLR_MSG
           (
            FBM_XCHNG_CD,
            FBM_CLM_MTCH_ACCNT,
            FBM_RUN_NO,
            FBM_RUN_DT,
            FBM_BNK_ACCNT_NMBR,
            FBM_TRNSCTN_TYP,
            FBM_BLK_CD,
            FBM_DC_FLG,
            FBM_AMT,
            FBM_BNK_STTS,
            FBM_EBA_STTS,
            FBM_STTS,
            FBM_TRACE,
            FBM_TIMESTAMP,
            FBM_PRDCT_CD,
            FBM_NARRATION,   /** Added in Ver 1.1 **/
            FBM_FUND_MODEL_FLG /** Added in Ver 2.0 **/
           )
           VALUES
           (
            :c_xchng_cd,
            :c_cln_mtch_accnt,
            :li_run_no,
            trunc(sysdate),
            :c_bnk_accnt,
            :c_trn_typ,
            :li_block_cd,
            :c_dr_cr_flg,
            :d_rerun_amount,
            :c_bnk_stts,
            :c_eba_stts,
            'N',
            :c_trace,
            to_date(:c_tm,'yyyymmddhh24miss'),
            :c_prdct_cd,
            :c_bnk_narration, 
            :c_model_flag  
           );

           if(SQLCODE  != 0)
           {
            fn_errlog(c_ServiceName, "S31145",SQLMSG,c_err_msg);
            strcpy ( c_msg, "System error. Contact system support" );
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
            tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
           }
           
           if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
           {
            fn_errlog( c_ServiceName, "S31150",LIBMSG,c_err_msg);
            fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
            strcpy ( c_msg, "System error. Contact system support" );
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            strcpy(c_error_txt,"System error. Contact System Support"); 
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
            tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
           }
           
           sprintf ( c_msg,"Failure while sending BFT rerun bank entry for :%s:",c_cln_mtch_accnt);
           fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
           tpreturn( TPSUCCESS, SUCC_BFR, NULL, 0, 0 ); 
         
          } /** Switch Case Ends Here **/     
         
          if (i_adm_blk_case == 1)  /** Handling For Insufficient Funds  Case **/
          {
           fn_userlog(c_ServiceName,"Inside Insufficient Block"); 
           fn_userlog(c_ServiceName,"Before Bank Hit");
           d_rerun_amount = d_val_bal;

           i_returncode =  fn_send_bnk_msg (&st_usr_prfl,
                                          c_bnk_dr_cr_flg,
                                          FO_BLK_CD,
                                          d_rerun_amount,
                                          BACKOFFICE,
                                          c_ServiceName,
                                          c_err_msg,
                                          &d_val_bal,
                                          c_trace,
                                          c_tm,
                                          c_bnk_narration, 
                                          c_xchng_input,  
                                          li_run_no);    
          
           switch ( i_returncode )
           {
            case SUCCESS :
            fn_userlog(c_ServiceName,"Stage--------------14");
            c_bnk_stts  ='Y' ;
            c_stts  ='N' ;
            break;
          
            case INSUF_FUNDS :
            case BLOCK_NOT_EXISTING :
            case GENERAL_FAILURE :
            case INDERMINATE_FAILURE :
            case RERUN_FAILURE :
            default :

             c_bnk_stts  ='N' ;
             c_stts  ='N' ;
             c_trn_typ = BLOCK;
             li_block_cd =  ALLC_FOR_ADM;
             i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
             if ( i_trnsctn == -1 )
             {
              fn_errlog(c_ServiceName, "S31155",LIBMSG,c_err_msg);
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              strcpy(c_error_txt,"System error. Contact System Support");
              fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
             }  
 
           EXEC SQL
           INSERT INTO FBM_FO_BNK_FLR_MSG
           (
             FBM_XCHNG_CD,
             FBM_CLM_MTCH_ACCNT,
             FBM_RUN_NO,
             FBM_RUN_DT,
             FBM_BNK_ACCNT_NMBR,
             FBM_TRNSCTN_TYP,
             FBM_BLK_CD,
             FBM_DC_FLG,
             FBM_AMT,
             FBM_BNK_STTS,
             FBM_EBA_STTS,
             FBM_STTS,
             FBM_TRACE,
             FBM_TIMESTAMP,
             FBM_PRDCT_CD,
             FBM_NARRATION,   /** Added in Ver 1.1 **/
             FBM_FUND_MODEL_FLG /** Added in Ver 2.0 **/
            )
            VALUES
            (
             :c_xchng_cd,
             :c_cln_mtch_accnt,
             :li_run_no,
             trunc(sysdate),
             :c_bnk_accnt,
             :c_trn_typ,
             :li_block_cd,
             :c_dr_cr_flg,
             :d_rerun_amount,
             :c_bnk_stts,
             :c_eba_stts,
             'N',
             :c_trace,
             to_date(:c_tm,'yyyymmddhh24miss'),
             :c_prdct_cd,
             :c_bnk_narration,    /** Added in Ver 1.1 **/
             :c_model_flag  /** Added in Ver 2.0 **/
            );   
           
            if(SQLCODE  != 0)
            {
             fn_errlog(c_ServiceName, "S31160",SQLMSG,c_err_msg);
             strcpy ( c_msg, "System error. Contact system support" );
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
             fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
             strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
             fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
             tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }
            
            if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
            {
             fn_errlog( c_ServiceName, "S31165",LIBMSG,c_err_msg);
             fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
             strcpy ( c_msg, "System error. Contact system support" );
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
             strcpy(c_error_txt,"System error. Contact System Support"); 
             fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
             tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }
            sprintf ( c_msg,"Failure while sending BFT rerun bank entry for :%s:",c_cln_mtch_accnt);
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            tpreturn( TPSUCCESS, SUCC_BFR, NULL, 0, 0 ); 
       
           } /** switch case Ends Here **/
          
          } /** Insufsicient Fund Block Ends Here ***/  
         
          fn_userlog(c_ServiceName,"Before  Update Allocation Details");

          i_returncode = fn_upd_adm_alloc_dtls( c_ServiceName,
                                              c_err_msg,
                                              c_cln_mtch_accnt,
                                              c_bnk_accnt,
                                              c_tag,
                                              0,
                                              d_rerun_amount,
                                              0,
                                              0,
                                              &d_tot_alc_amt);
            
          if ( i_returncode != 0 )
          {
           fn_errlog(c_ServiceName, "S31170",LIBMSG,c_err_msg);
           strcpy ( c_msg, "System error. Contact system support" );
           fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
           strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
           fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
           tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
          }
          
          sprintf(c_msg,"Rerun successful for %s for amount [%lf] ", c_cln_mtch_accnt,d_rerun_amount );
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag ); 
          tpreturn( TPSUCCESS, SUCC_BFR, NULL, 0, 0 );   
        }
       
        /*** Ver 2.0 *** Block Allocation For Block Model Customer ENds Here **/    

  			sprintf(c_msg,"Rerun successful for %s for amount [%lf] ", c_cln_mtch_accnt,d_rerun_amount );
  			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
  			tpreturn( TPSUCCESS, SUCC_BFR, NULL, 0, 0 );
			}
     /******************************************************************************/
     /** Here c_eba_stts = NOT_UPDATED and c_bnk_stts = NOT_UPDATED is not handled 
         bcoz it will run in fresh                                                **/
    /*******************************************************************************/

     	break ; 

		case BLOCK :
			fn_userlog(c_ServiceName,"Stage--------------12");

			if ( (( c_eba_stts == NOT_UPDATED ) && ( c_bnk_stts == UPDATED     ))
					|| (( c_eba_stts == NOT_UPDATED ) && ( c_bnk_stts == NOT_UPDATED )) )
			{
				fn_userlog(c_ServiceName,"Stage--------------13");
       	c_bnk_dr_cr_flg = BK ;

        /******************************************************/
        /*  Sending Block Allocation message to Bank          */
        /******************************************************/
         i_returncode =  fn_send_bnk_msg (&st_usr_prfl,
                                          c_bnk_dr_cr_flg,
                                          FO_BLK_CD,
                                          d_rerun_amount,
                                          BACKOFFICE,
                                          c_ServiceName,
                                          c_err_msg,
                                          &d_val_bal,
                                          c_trace,
						  		 												c_tm,
					   				 											c_bnk_narration, /** Added in Ver 1.1 **/
				   						 										c_xchng_input,     /** Ver 1.7 **/
                                          li_run_no);        /** Added for Ver 1.9 **/
        switch ( i_returncode )
        {
          case SUCCESS :
	  			  fn_userlog(c_ServiceName,"Stage--------------14");
		  			c_bnk_stts  ='Y' ;
			  		c_stts  ='N' ;
            break;

         	case INSUF_FUNDS :
         	case BLOCK_NOT_EXISTING :
          case GENERAL_FAILURE :
          case INDERMINATE_FAILURE :
          case RERUN_FAILURE :
          default :
				   fn_userlog(c_ServiceName,"Stage--------------16");
					 c_bnk_stts  ='N' ; 
					 c_stts  ='N' ;

           i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
           if ( i_trnsctn == -1 )
           {
             fn_errlog(c_ServiceName, "S31175",LIBMSG,c_err_msg);
             strcpy ( c_msg, "System error. Contact system support" );
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
       		   strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
          	 fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
             tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
           }

           /********************** Added in Ver 1.8 ************************/
          
           i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
                if ( i_returncode != 0 )
                {
                  fn_errlog(c_ServiceName, "S31180",LIBMSG,c_err_msg);
                  fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
                  strcpy ( c_msg, "System error. Contact system support" );
                  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                  strcpy(c_error_txt,"System error. Contact System Support");
                  fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
                  tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
                } 
           
           /*********************** Ver 1.8 Ends *****************************/
						/** Ver 2.1 Start **/
        		i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
        		if ( i_returncode != 0 )
        		{
          		fn_errlog(c_ServiceName, "S31185",LIBMSG,c_err_msg);
         			fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
          		strcpy ( c_msg, "System error. Contact system support" );
          		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          		strcpy(c_error_txt,"System error. Contact System Support");  
          		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
          		tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
        		}
						/** Ver 2.1 End **/
	
           EXEC SQL
           UPDATE FBM_FO_BNK_FLR_MSG
           SET FBM_STTS = 'P'
           WHERE
           FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt  AND
           FBM_RUN_NO         = :li_run_no         AND
           FBM_BNK_ACCNT_NMBR = :c_bnk_accnt       AND
           FBM_TRACE          = :c_trace           AND
           FBM_STTS           = 'N'                AND
           FBM_BLK_CD         = :li_block_cd       AND    
           FBM_TRNSCTN_TYP    = :c_trn_typ         AND 
           FBM_PRDCT_CD       = :c_prdct_cd        AND
           FBM_XCHNG_CD       = :c_xchng_cd;  /*** Ver 1.2 ***/
           if(SQLCODE  != 0)
           {
						  /************** Ver 1.6 Starts **************************/
							if(SQLCODE == NO_DATA_FOUND)
						 {
								EXEC SQL
								UPDATE FBM_FO_BNK_FLR_MSG
								SET FBM_STTS = 'P',
								FBM_BNK_ACCNT_NMBR = :c_bnk_accnt
								WHERE
								FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt  AND
								FBM_RUN_NO         = :li_run_no         AND
           			FBM_BNK_ACCNT_NMBR <>:c_bnk_accnt       AND
								FBM_TRACE          = :c_trace           AND
								FBM_STTS           = 'N'                AND
								FBM_BLK_CD         = :li_block_cd       AND    
								FBM_TRNSCTN_TYP    = :c_trn_typ         AND 
								FBM_PRDCT_CD       = :c_prdct_cd        AND
								FBM_XCHNG_CD       = :c_xchng_cd;  
								if(SQLCODE  != 0)
								{
									fn_errlog(c_ServiceName, "S31190",SQLMSG,c_err_msg);
									strcpy ( c_msg, "System error. Contact system support" );
									fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
									fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );  /** Ver 1.5 **/
          				strcpy(c_error_txt,"System error. Contact System Support");  
          				fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
									tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
								}
								fn_userlog(c_ServiceName,"Number of rows updated=:%ld:",sqlca.sqlerrd[2]);
						 }
						 else/********* Ver 1.6 Ends *************/
						 {
							fn_errlog(c_ServiceName, "S31195",SQLMSG,c_err_msg);
							strcpy ( c_msg, "System error. Contact system support" );
							fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
							fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/ 
          		strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
          		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
							tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
						}
					 }

           EXEC SQL
           INSERT INTO FBM_FO_BNK_FLR_MSG
           (
            FBM_XCHNG_CD,
            FBM_CLM_MTCH_ACCNT,
            FBM_RUN_NO,
            FBM_RUN_DT,
            FBM_BNK_ACCNT_NMBR,
            FBM_TRNSCTN_TYP,
            FBM_BLK_CD,
            FBM_DC_FLG,
            FBM_AMT,
            FBM_BNK_STTS,
            FBM_EBA_STTS,
            FBM_STTS,
            FBM_TRACE,
            FBM_TIMESTAMP,
            FBM_PRDCT_CD,
	   				FBM_NARRATION,   /** Added in Ver 1.1 **/
            FBM_FUND_MODEL_FLG /** Added in Ver 2.0 **/
           )
           VALUES
           (
            :c_xchng_cd,
            :c_cln_mtch_accnt,
            :li_run_no,
            trunc(sysdate),
            :c_bnk_accnt,
            :c_trn_typ,
            :li_block_cd,
            :c_dr_cr_flg,
            :d_rerun_amount,
            :c_bnk_stts,
            :c_eba_stts,
            'N',
            :c_trace,
            to_date(:c_tm,'yyyymmddhh24miss'),
            :c_prdct_cd,
	          :c_bnk_narration,    /** Added in Ver 1.1 **/
            :c_model_flag  /** Added in Ver 2.0 **/
           );
           if(SQLCODE  != 0)
           {
            fn_errlog(c_ServiceName, "S31200",SQLMSG,c_err_msg);
            strcpy ( c_msg, "System error. Contact system support" );
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
            tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
           }
           if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
           {
            fn_errlog( c_ServiceName, "S31205",LIBMSG,c_err_msg);
            fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
            strcpy ( c_msg, "System error. Contact system support" );
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
            tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
           }
           sprintf ( c_msg,"Failure while sending BFT rerun bank entry for :%s:",c_cln_mtch_accnt);
           fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
           tpreturn( TPSUCCESS, SUCC_BFR, NULL, 0, 0 );
 
         }
    		 fn_userlog(c_ServiceName,"Stage--------------17");
         i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
         if ( i_trnsctn == -1 )
         {
          fn_errlog(c_ServiceName, "S31210",LIBMSG,c_err_msg);
         	strcpy ( c_msg, "System error. Contact system support" );
         	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
         }

         i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
         if ( i_returncode != 0 )
         {
          fn_errlog(c_ServiceName, "S31215",LIBMSG,c_err_msg);
          fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
         	strcpy ( c_msg, "System error. Contact system support" );
         	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
         }
				 /** Ver 2.1 Start **/
         i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
         if ( i_returncode != 0 )
         {
          		fn_errlog(c_ServiceName, "S31220",LIBMSG,c_err_msg);
         			fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
          		strcpy ( c_msg, "System error. Contact system support" );
          		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          		strcpy(c_error_txt,"System error. Contact System Support");  
          		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
          		tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
         }
				 /** Ver 2.1 End **/
 
  			 fn_userlog(c_ServiceName,"Stage--------------18");
         /******************************************************************************/
         /** At this stage increase the FAB Allocation amount by Block success Amount **/
         /** Isec Margin Amount is reduced at credit success                          **/
         /******************************************************************************/
          i_returncode = fn_upd_adm_alloc_dtls( c_ServiceName,
                                              c_err_msg,
                                              c_cln_mtch_accnt,
                                              c_bnk_accnt,
                                              c_tag,
                                              0,                     
                                              d_rerun_amount,
                                              0,
                                              0,
                                              &d_tot_alc_amt);  /*** Ver 1.2 *** Isec margin amount *** Ver 2.0 **/
         if ( i_returncode != 0 )
         {
          fn_errlog(c_ServiceName, "S31225",LIBMSG,c_err_msg);
          fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
          strcpy ( c_msg, "System error. Contact system support" );
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
          tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
         }

				 /*** update the record to PROCESSED status in failure table ***/
				 EXEC SQL
					UPDATE	fbm_fo_bnk_flr_msg
					SET			fbm_stts						= 'Y',
                  fbm_eba_stts        = 'Y',
                  fbm_bnk_stts        = :c_bnk_stts,
                  fbm_run_dt          = sysdate
					WHERE		fbm_xchng_cd				= :c_xchng_cd
					AND			fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
					AND			fbm_run_no				  = :li_run_no
					AND			fbm_run_dt				  = to_date(:c_run_dt,'DD-Mon-YYYY')
					AND			fbm_bnk_accnt_nmbr	= :c_bnk_accnt
					AND			fbm_trnsctn_typ			= :c_trn_typ
					AND			fbm_blk_cd					= :li_block_cd
					AND			fbm_dc_flg					= :c_dr_cr_flg
					AND			fbm_amt							= :d_rerun_amount 
          AND     fbm_prdct_cd        = :c_prdct_cd
          AND     fbm_stts            ='N';	

         if( SQLCODE != 0 )
         {
					 /*********** Ver 1.6 Starts ***************/
					 if(SQLCODE == NO_DATA_FOUND )	
					 {
						 EXEC SQL
							UPDATE	fbm_fo_bnk_flr_msg
							SET			fbm_stts						= 'Y',
                  		fbm_eba_stts        = 'Y',
                  		fbm_bnk_stts        = :c_bnk_stts,
                  		fbm_run_dt          = sysdate
							WHERE		fbm_xchng_cd				= :c_xchng_cd
							AND			fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
							AND			fbm_run_no				  = :li_run_no
							AND			fbm_run_dt				  = to_date(:c_run_dt,'DD-Mon-YYYY')
							AND			fbm_bnk_accnt_nmbr	<> :c_bnk_accnt
							AND			fbm_trnsctn_typ			= :c_trn_typ
							AND			fbm_blk_cd					= :li_block_cd
							AND			fbm_dc_flg					= :c_dr_cr_flg
							AND			fbm_amt							= :d_rerun_amount 
          		AND     fbm_prdct_cd        = :c_prdct_cd
          		AND     fbm_stts            ='N';	
						if(SQLCODE != 0)
						{
         			fn_errlog( c_ServiceName, "S31230",SQLMSG,c_err_msg);
         			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         			strcpy ( c_msg, "System error. Contact system support" );
         			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          		strcpy(c_error_txt,"System error. Contact System Support");  
          		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
         			tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
						}
					}
					else  /****** Ver 1.6 Ends *****************/
					{
         		fn_errlog( c_ServiceName, "S31235",SQLMSG,c_err_msg);
         		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         		strcpy ( c_msg, "System error. Contact system support" );
         		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
						strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
						fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
         		tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
					}
				 }

         if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
         {
         	fn_errlog( c_ServiceName, "S31240",LIBMSG,c_err_msg);
         	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         	strcpy ( c_msg, "System error. Contact system support" );
         	fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
         	tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
         }

  			 sprintf ( c_msg, "Rerun process completed successfully for %s for amount [%lf] ", c_cln_mtch_accnt,d_rerun_amount );
  			 fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
  			 tpreturn( TPSUCCESS, SUCC_BFR, NULL, 0, 0 );
			}/*All other cases are Ignored because they are not yet reported */ 
			 break;

	  case UNBLOCK_DEBIT :
	  	fn_userlog(c_ServiceName,"Stage--------------19");
		  if( (( c_eba_stts == NOT_UPDATED ) && ( c_bnk_stts == UPDATED )) ||
          (( c_eba_stts == NOT_UPDATED ) &&  ( c_bnk_stts == NOT_UPDATED ) && c_prcs_stts == 'F' ) )  /** Ver 1.5 **/	
		  { 
				fn_userlog(c_ServiceName,"Stage--------------20");
		    if ( li_block_cd == BFT_DEBIT_ON_PAYIN )	
			  {
				 fn_userlog(c_ServiceName,"Stage--------------21");
       	 c_bnk_dr_cr_flg = UD ;

         /******************************************************/
         /*  Sending Unblock Debit on BFT message to Bank             */
         /******************************************************/
         i_returncode =  fn_send_bnk_msg (&st_usr_prfl,
                                         c_bnk_dr_cr_flg,
                                         FO_BFT_BLK_CD,
                                         d_rerun_amount,
                                         BACKOFFICE,
                                         c_ServiceName,
                                         c_err_msg,
                                         &d_val_bal,
                                         c_trace,
																				 c_tm,
																				 c_bnk_narration, /** Added in Ver 1.1 **/
																				 c_xchng_input,     /** Ver 1.7 **/
                                         li_run_no);        /** Added for Ver 1.9 **/
         switch ( i_returncode )
         {
           case SUCCESS :
			       fn_userlog(c_ServiceName,"Stage--------------22");
				     c_bnk_stts  ='Y' ;
				     c_stts  ='N' ;
             break;

           case INSUF_FUNDS :
           case BLOCK_NOT_EXISTING :
           case GENERAL_FAILURE :
           case INDERMINATE_FAILURE :
           case RERUN_FAILURE :
           default :
				     fn_userlog(c_ServiceName,"Stage--------------24");
             /**** Ver 1.5 Starts Here ********/
             if ( c_prcs_stts == 'F' )
             {
              	i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
             		if ( i_trnsctn == -1 )
             		{
              		fn_errlog(c_ServiceName, "S31245",LIBMSG,c_err_msg);
              		strcpy ( c_msg, "System error. Contact system support" );
              		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              		strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
              		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
              		tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
             		}

                /*********************** Added in Ver 1.8 ***************************/
                i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
                if ( i_returncode != 0 )
                {
                  fn_errlog(c_ServiceName, "S31250",LIBMSG,c_err_msg);
                  fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
                  strcpy ( c_msg, "System error. Contact system support" );
                  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                  strcpy(c_error_txt,"System error. Contact System Support");
                  fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
                  tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
                } 
  
                /*********************** Ver 1.8 Ends *******************************/
								 /** Ver 2.1 Start **/
								 i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
								 if ( i_returncode != 0 )
								 {
											fn_errlog(c_ServiceName, "S31255",LIBMSG,c_err_msg);
											fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
											strcpy ( c_msg, "System error. Contact system support" );
											fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
											strcpy(c_error_txt,"System error. Contact System Support");  
											fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
											tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
								 }
								 /** Ver 2.1 End **/

              	EXEC SQL
             		UPDATE FBM_FO_BNK_FLR_MSG
             		SET FBM_STTS = 'S'
             		WHERE
             		FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt  AND
             		FBM_RUN_NO         = :li_run_no         AND
             		FBM_BNK_ACCNT_NMBR = :c_bnk_accnt       AND
             		FBM_TRACE          = :c_trace           AND
             		FBM_STTS           = 'F'                AND
             		FBM_BLK_CD         = :li_block_cd       AND
             		FBM_TRNSCTN_TYP    = :c_trn_typ         AND
             		FBM_PRDCT_CD       = :c_prdct_cd        AND
             		FBM_XCHNG_CD       = :c_xchng_cd ;  /*** Ver 1.2 ***/
             		if(SQLCODE  != 0)
            		{
									/*********** Ver 1.6 Starts ******************/
									if(SQLCODE == NO_DATA_FOUND )
									{
										EXEC SQL
             					UPDATE 	FBM_FO_BNK_FLR_MSG
             					SET 		FBM_STTS = 'S'
             					WHERE
             					FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt  AND
             					FBM_RUN_NO         = :li_run_no         AND
             					FBM_BNK_ACCNT_NMBR <> :c_bnk_accnt       AND
             					FBM_TRACE          = :c_trace           AND
             					FBM_STTS           = 'F'                AND
             					FBM_BLK_CD         = :li_block_cd       AND
             					FBM_TRNSCTN_TYP    = :c_trn_typ         AND
             					FBM_PRDCT_CD       = :c_prdct_cd        AND
             					FBM_XCHNG_CD       = :c_xchng_cd ;
										if(SQLCODE != 0)
										{
              				fn_errlog(c_ServiceName, "S31260",SQLMSG,c_err_msg);
              				strcpy ( c_msg, "System error. Contact system support" );
              				fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
											fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
              				strcpy(c_error_txt,"System error. Contact System Support"); 
              				fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
              				tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
										}
									}
									else   /******* Ver 1.6 Ends **************/
									{
              			fn_errlog(c_ServiceName, "S31265",SQLMSG,c_err_msg);
              			strcpy ( c_msg, "System error. Contact system support" );
              			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
										fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
              			strcpy(c_error_txt,"System error. Contact System Support"); 
              			fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
 										tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
             			}
								}
 /******************************* Added in ver 1.8 ********************************/
             EXEC SQL
             SELECT  count(rowid)
              INTO   :i_fbm_rcrd_cnt
              FROM   fbm_fo_bnk_flr_msg
              WHERE  fbm_xchng_cd        = :c_xchng_cd
               AND   fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
               AND   fbm_run_no          = :li_run_no
               AND   fbm_trnsctn_typ     = :c_trn_typ
               AND   fbm_dc_flg          = :c_dr_cr_flg
               AND   fbm_prdct_cd        = :c_prdct_cd
               AND   fbm_stts       IN ('N','F');
             if( SQLCODE != 0 )
             {
               fn_errlog( c_ServiceName, "S31270",SQLMSG,c_err_msg);
               fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
               strcpy ( c_msg, "System error. Contact system support" );
               fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
               strcpy(c_error_txt,"System error. Contact System Support");
               fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
               tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
             }
             
         if(i_fbm_rcrd_cnt == 0)
         {
           EXEC SQL
           UPDATE  AMC_ADM_MRGN_CALC
              SET  AMC_STATUS_FLG = 'F'
            WHERE  AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
              AND  AMC_RUN_NO         = :li_run_no
              AND  AMC_BNK_ACCNT      = :c_bnk_accnt
              AND  AMC_DBCR_CD        = :c_dr_cr_flg
              AND  AMC_XCHNG_CD = :c_xchng_cd
              AND  AMC_BATCH_SITE_IND='B'
              AND  AMC_STATUS_FLG = 'N';

           if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
           {
             fn_errlog( c_ServiceName, "S31275",SQLMSG,c_err_msg);
             fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
             strcpy ( c_msg, "System error. Contact system support" );
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
             strcpy(c_error_txt,"System error. Contact System Support");
             fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
             tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
           }
         }
   /************************************** Ver 1.8 Ends ***************************************/

             		if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
            		 {
              		fn_errlog( c_ServiceName, "S31280",LIBMSG,c_err_msg);
              		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
              		strcpy ( c_msg, "System error. Contact system support" );
              		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              		strcpy(c_error_txt,"System error. Contact System Support");
              		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
              		tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
             		}
             		sprintf ( c_msg,"Failure while sending BFT rerun bank entry for :%s:",c_cln_mtch_accnt);
             		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
             		tpreturn( TPSUCCESS, SUCC_BFR, NULL, 0, 0 );
                            
             	} 
             		/**** Ver 1.5 Ends here *******/

					   c_bnk_stts  ='Y' ;      /** Since Bank was success in Normal Run **/
					   c_stts  ='N' ;

             i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
             if ( i_trnsctn == -1 )
             {
              fn_errlog(c_ServiceName, "S31285",LIBMSG,c_err_msg);
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
  	          strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    	        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
             }

            /************************** Added in ver 1.8 *************************/

            i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
                if ( i_returncode != 0 )
                {
                  fn_errlog(c_ServiceName, "S31290",LIBMSG,c_err_msg);
                  fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
                  strcpy ( c_msg, "System error. Contact system support" );
                  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                  strcpy(c_error_txt,"System error. Contact System Support");
                  fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
                  tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
                }

            /************************** Ver 1.8 Ends *****************************/
								 /** Ver 2.1 Start **/
								 i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
								 if ( i_returncode != 0 )
								 {
											fn_errlog(c_ServiceName, "S31295",LIBMSG,c_err_msg);
											fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
											strcpy ( c_msg, "System error. Contact system support" );
											fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
											strcpy(c_error_txt,"System error. Contact System Support");  
											fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
											tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
								 }
								 /** Ver 2.1 End **/
	
             EXEC SQL
             UPDATE FBM_FO_BNK_FLR_MSG
             SET FBM_STTS = 'P'
             WHERE
             FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt  AND
             FBM_RUN_NO         = :li_run_no         AND
             FBM_BNK_ACCNT_NMBR = :c_bnk_accnt       AND
             FBM_TRACE          = :c_trace           AND
             FBM_STTS           = 'N'                AND
             FBM_BLK_CD         = :li_block_cd       AND
             FBM_TRNSCTN_TYP    = :c_trn_typ         AND
             FBM_PRDCT_CD       = :c_prdct_cd        AND 
             FBM_XCHNG_CD       = :c_xchng_cd ;  /*** Ver 1.2 ***/
             if(SQLCODE  != 0)
             {
							  /******************* Ver 1.6 Starts ***********************/
							 if(SQLCODE == NO_DATA_FOUND)
							 {
									EXEC SQL
										UPDATE 	FBM_FO_BNK_FLR_MSG
										SET 		FBM_STTS = 'P',
														FBM_BNK_ACCNT_NMBR = :c_bnk_accnt
									WHERE
									FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt  AND
									FBM_RUN_NO         = :li_run_no         AND
             			FBM_BNK_ACCNT_NMBR <>:c_bnk_accnt       AND
									FBM_TRACE          = :c_trace           AND
									FBM_STTS           = 'N'                AND
									FBM_BLK_CD         = :li_block_cd       AND
									FBM_TRNSCTN_TYP    = :c_trn_typ         AND
									FBM_PRDCT_CD       = :c_prdct_cd        AND 
									FBM_XCHNG_CD       = :c_xchng_cd ;  
									if(SQLCODE  != 0)
									{
									  fn_errlog(c_ServiceName, "S31300",SQLMSG,c_err_msg);
										strcpy ( c_msg, "System error. Contact system support" );
										fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
										fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
  									strcpy(c_error_txt,"System error. Contact System Support");  
    								fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
										tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
									}
								fn_userlog(c_ServiceName,"Number of rows updated=:%ld:",sqlca.sqlerrd[2]);
							 }
							 else/*******************Ver 1.6 Ends ******************/
							 {
									fn_errlog(c_ServiceName, "S31305",SQLMSG,c_err_msg);
									strcpy ( c_msg, "System error. Contact system support" );
									fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
									fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
  								strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    							fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
									tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
								}
						 }

             EXEC SQL
             INSERT INTO FBM_FO_BNK_FLR_MSG
             (
              FBM_XCHNG_CD,
              FBM_CLM_MTCH_ACCNT,
              FBM_RUN_NO,
              FBM_RUN_DT,
              FBM_BNK_ACCNT_NMBR,
              FBM_TRNSCTN_TYP,
              FBM_BLK_CD,
              FBM_DC_FLG,
              FBM_AMT,
              FBM_BNK_STTS,
              FBM_EBA_STTS,
              FBM_STTS,
              FBM_TRACE,
              FBM_TIMESTAMP,
              FBM_PRDCT_CD,
	      		  FBM_NARRATION  /** Added in Ver 1.1 **/
             )
             VALUES
             (
              :c_xchng_cd,
              :c_cln_mtch_accnt,
              :li_run_no,
              trunc(sysdate),
              :c_bnk_accnt,
              :c_trn_typ,
              :li_block_cd,
              :c_dr_cr_flg,
              :d_rerun_amount,
              :c_bnk_stts,
              :c_eba_stts,
              'N',
              :c_trace,
              to_date(:c_tm,'yyyymmddhh24miss'),
              :c_prdct_cd,
	      			:c_bnk_narration    /** Added in Ver 1.1 **/
             );
             if(SQLCODE  != 0)
             {
              fn_errlog(c_ServiceName, "S31310",SQLMSG,c_err_msg);
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
							fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
            	strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            	fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
             }
             if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
             {
              fn_errlog( c_ServiceName, "S31315",LIBMSG,c_err_msg);
              fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            	strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            	fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
             }
             sprintf ( c_msg,"Failure while sending BFT rerun bank entry for :%s:",c_cln_mtch_accnt);
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
             tpreturn( TPSUCCESS, SUCC_BFR, NULL, 0, 0 );

          }/*End of switch of bank call*/
				  fn_userlog(c_ServiceName,"Stage--------------25");

      	  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
          if ( i_trnsctn == -1 )
          {
           	fn_errlog(c_ServiceName, "S31320",LIBMSG,c_err_msg);
         		strcpy ( c_msg, "System error. Contact system support" );
         		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
            tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
				  }

          i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
          if ( i_returncode != 0 )
          {
            fn_errlog(c_ServiceName, "S31325",LIBMSG,c_err_msg);
            fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
         		strcpy ( c_msg, "System error. Contact system support" );
         		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
            tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
          }	
				  /** Ver 2.1 Start **/
				  i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
				  if ( i_returncode != 0 )
				  {
							fn_errlog(c_ServiceName, "S31330",LIBMSG,c_err_msg);
							fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
							strcpy ( c_msg, "System error. Contact system support" );
							fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
							strcpy(c_error_txt,"System error. Contact System Support");  
							fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
							tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
				  }
				  /** Ver 2.1 End **/

				  fn_userlog(c_ServiceName,"Stage--------------26");

          /********************************************************************************/
          /** Since only bank was success in normal case and EBA was fail, so increase 
              ISEC margin amount and decrease BFT amount.                                 */ 
          /********************************************************************************/
          if( strcmp(c_xchng_cd,"NFO") == 0 ) /*** Ver 1.2** if condition ***/
          {
           i_returncode = fn_upd_adm_alloc_dtls( c_ServiceName,
                                                c_err_msg,
                                                c_cln_mtch_accnt,
                                                c_bnk_accnt,
                                                c_tag,
                                                d_rerun_amount * (-1),
                                                0, 
                                                d_rerun_amount,  /** NSE ISEC AMT **/
                                                0,                /** BSE Isec AMT Ver 1.2 **/
                                                &d_tot_alc_amt /** Ver 2.0 **/ 
                                               );  
          }
          else if(strcmp(c_xchng_cd,"BFO") == 0 ) /*** Ver 1.2 starts here ***/
          {
           i_returncode = fn_upd_adm_alloc_dtls( c_ServiceName,
                                                c_err_msg,
                                                c_cln_mtch_accnt,
                                                c_bnk_accnt,
                                                c_tag,
                                                d_rerun_amount * (-1),
                                                0,
                                                0,                /** NSE ISEC AMT **/
                                                d_rerun_amount,    /** BSE Isec AMT **/
                                                &d_tot_alc_amt /** Ver 2.0 **/ 
                                               );

          } /*** Ver 1.2 ends here ***/
          if ( i_returncode != 0 )
          {
            fn_errlog(c_ServiceName, "S31335",LIBMSG,c_err_msg);
            fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
            strcpy ( c_msg, "System error. Contact system support" );
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
            tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
          }
          /*** Check if UD has failed only for BFT, if yes then update stts_flg as 'YY' in AMC **/ 
          EXEC SQL
          SELECT  count(rowid)
           INTO   :i_fbm_rcrd_cnt
           FROM   fbm_fo_bnk_flr_msg
           WHERE  fbm_xchng_cd        = :c_xchng_cd
            AND   fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
            AND   fbm_run_no          = :li_run_no
            AND   fbm_trnsctn_typ     = :c_trn_typ
            AND   fbm_dc_flg          = :c_dr_cr_flg
            AND   fbm_prdct_cd        = :c_prdct_cd
            /** AND   fbm_stts            = 'N'; ** Ver 1.5 **/
             AND   fbm_stts       IN ('N','F');   /** Ver 1.5 **/
          if( SQLCODE != 0 )
          {
            fn_errlog( c_ServiceName, "S31340",SQLMSG,c_err_msg);
            fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
            strcpy ( c_msg, "System error. Contact system support" );
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
            tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
          }
          if(i_fbm_rcrd_cnt == 1 )
          {
           if( c_prcs_stts == 'F' ) /*** Ver 1.5 ***/
           {
            MEMSET(c_bill_no);

            EXEC SQL
                SELECT 'ADM'||to_char(sysdate,'YYYYMMDD')||LPAD(pipoadmseq.nextval,6,0)
                INTO :c_bill_no
                FROM   DUAL;
            if( SQLCODE != 0 )
            {
              fn_errlog( c_ServiceName, "S31345",SQLMSG,c_err_msg);
              fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
              fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }

            EXEC SQL
            UPDATE  AMC_ADM_MRGN_CALC
               SET  AMC_STATUS_FLG = 'Y',
                    AMC_BILL_NO =:c_bill_no,
                    AMC_NEW_ISEC_MRGN_AMT=AMC_NEW_ISEC_MRGN_AMT +:d_rerun_amount /* Added in Ver 1.8 */
             WHERE  AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
               AND  AMC_RUN_NO         = :li_run_no
               AND  AMC_BNK_ACCNT      = :c_bnk_accnt
               AND  AMC_DBCR_CD        = :c_dr_cr_flg
            /***   AND  AMC_STATUS_FLG = 'F'   commented in Ver 1.8 ***/
               AND  AMC_STATUS_FLG IN ('Y','N')                     /*** Added in Ver 1.8 ***/                       
               AND  AMC_XCHNG_CD   = :c_xchng_cd
               AND  AMC_BATCH_SITE_IND='B'
               AND ROWNUM < 2;   

            if( SQLCODE != 0 )
            {
             fn_errlog( c_ServiceName, "S31350",SQLMSG,c_err_msg);
             fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
             strcpy ( c_msg, "System error. Contact system support" );
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
             tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }
           }
           else
           {
            /**** Ver 2.0 Starts ****/   
             fn_userlog(c_ServiceName,"INSIDE  NON BANK FAIL");  /** testing ***/
             fn_userlog(c_ServiceName,"c_src_rowid is :[%s]", c_src_rowid); /** testing **/
             MEMSET(c_bill_no);

             EXEC SQL
                 SELECT NVL(AMC_BILL_NO,'NA') 
                 INTO  :c_bill_no 
                 FROM AMC_ADM_MRGN_CALC
                 WHERE ROWID = :c_src_rowid;  
             if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
             {
              fn_errlog( c_ServiceName, "S31355",SQLMSG,c_err_msg);
              fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
              fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
             }
             rtrim(c_bill_no); 
             fn_userlog(c_ServiceName,"Value of c_bill_no :[%s]",c_bill_no); /* testing */  
 
             if ( strcmp(c_bill_no,"NA") != 0 ) /** Shows Bill Already Exist in  AMC**/
             {
              fn_userlog(c_ServiceName,"Bill is already generated");

              EXEC SQL
              UPDATE  AMC_ADM_MRGN_CALC
              SET  AMC_STATUS_FLG = 'Y',
              AMC_NEW_ISEC_MRGN_AMT = AMC_NEW_ISEC_MRGN_AMT +:d_rerun_amount
              WHERE  AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
              AND  AMC_RUN_NO         = :li_run_no
              AND  AMC_BNK_ACCNT      = :c_bnk_accnt
              AND  AMC_DBCR_CD        = :c_dr_cr_flg
              /**  AND  AMC_STATUS_FLG = 'N'  *** commented in Ver 1.8 ***/
              AND  AMC_STATUS_FLG IN ('N','Y')  /********* Added in Ver 1.8 ********/
              AND  AMC_XCHNG_CD   = :c_xchng_cd; /*** Ver 1.2 ***/

              if( SQLCODE != 0 )
              {
               fn_errlog( c_ServiceName, "S31360",SQLMSG,c_err_msg);
               fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
               strcpy ( c_msg, "System error. Contact system support" );
               fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
               strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
               fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
               tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
              }
             }
             else  
             {
              MEMSET(c_bill_no);
 
              EXEC SQL
                 SELECT 'ADM'||to_char(sysdate,'YYYYMMDD')||LPAD(pipoadmseq.nextval,6,0)
                 INTO :c_bill_no
                 FROM   DUAL;  
              if( SQLCODE != 0 )
              {
               fn_errlog( c_ServiceName, "S31365",SQLMSG,c_err_msg);
               fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
               strcpy ( c_msg, "System error. Contact system support" );
               fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
               strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
               fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
               tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
              }
         
              fn_userlog(c_ServiceName,"Value of Newly Generated BILL is :[%s]",c_bill_no);  /** testing ***/
       
              EXEC SQL
                UPDATE  AMC_ADM_MRGN_CALC
                   SET  AMC_STATUS_FLG = 'Y',
                        AMC_BILL_NO =:c_bill_no,
                        AMC_NEW_ISEC_MRGN_AMT=AMC_NEW_ISEC_MRGN_AMT +:d_rerun_amount /* Added in Ver 1.8 */
                 WHERE  AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                   AND  AMC_RUN_NO         = :li_run_no
                   AND  AMC_BNK_ACCNT      = :c_bnk_accnt
                   AND  AMC_DBCR_CD        = :c_dr_cr_flg
            /***   AND  AMC_STATUS_FLG = 'F'   commented in Ver 1.8 ***/
                   AND  AMC_STATUS_FLG IN ('Y','N')                     /*** Added in Ver 1.8 ***/
                   AND  AMC_XCHNG_CD   = :c_xchng_cd
                   AND  AMC_BATCH_SITE_IND='B'
                   AND ROWNUM < 2
                   RETURNING ROWID     /*** Ver 2.0 ****/
                   INTO :c_src_rowid_mbs; 
              if( SQLCODE != 0 )
              {
               fn_errlog( c_ServiceName, "S31370",SQLMSG,c_err_msg);
               fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
               strcpy ( c_msg, "System error. Contact system support" );
               fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
               strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
               fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
               tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
              } 
           
             }
           }
          /*** Ver 2.0  ENTRY FOR MBS starts  ***/
          if ( c_model_flag == 'D' )
          {
           strcpy(c_pipo_src,"LIMIT");
          }
          else
          {
           strcpy(c_pipo_src,"DEBIT");
          } 
          if(strcmp(c_xchng_cd,"NFO")==0)
          {
           strcpy(c_prdct_cd_mbs,"NFOADMI");
           c_accntng_for='I';
          }
          else if(strcmp(c_xchng_cd,"BFO")==0)
          {
           strcpy(c_prdct_cd_mbs,"BFOADMI");
           c_accntng_for='I';
          } 
          d_trnsctn_amt=d_rerun_amount/100;
          sprintf(c_narration_mbs,"Being Cash Margin Debited Against Open Position in NSE %s",c_tran_date); 
          strcpy(c_trace_mbs,c_trace);
          strcpy(c_mtch_series,c_bill_no);
          strcpy(c_bnk_acct_nmbr,c_bnk_accnt);
          sprintf(c_run_nmbr, "%lu" ,li_run_no);
          if ( strcmp(c_bill_no,"NA") != 0 )
          {
           strcpy(c_src_rowid_tmp,c_src_rowid);              
          }
          else
          {
           strcpy(c_src_rowid_tmp,c_src_rowid_mbs); 
          }
   
          rtrim(c_src_rowid_tmp);
          rtrim(c_pipo_src);

          if(fn_ins_mbs(c_ServiceName,c_cln_mtch_accnt,c_xchng_cd,c_prdct_cd_mbs,c_pipo_src,c_sgmnt_cd,0,c_tran_date,d_trnsctn_amt,c_run_nmbr,c_instrument_nmbr,'\0',c_mdc_crdt_nmbr, c_accntng_for, c_accntng_typ,c_trace_mbs,c_bnk_acct_nmbr, c_narration_mbs, 'D', c_mtch_series,c_class_svc, c_src_rowid_tmp,c_err_msg,c_model_flag) == -1)   /* \0 Added in Ver TOL */
          {
           fn_errlog( c_ServiceName, "S31375",SQLMSG,c_err_msg);
           fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
           strcpy ( c_msg, "System error. Contact system support" );
           fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
           strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
           fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
           tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 ); 
          }
           
          /*** Ver 2.0  ENTRY FOR MBS Ends   ***/
    
         }         

	  			/*** update the record to PROCESSED status in failure table ***/
          if( c_prcs_stts == 'F' )  /*** Ver 1.5 ***/
          {
		  		  EXEC SQL
					  UPDATE	fbm_fo_bnk_flr_msg
					  SET			fbm_stts						= 'Y',
                    fbm_eba_stts        = 'Y',
                    FBM_BNK_STTS        = 'Y',
                    fbm_run_dt          = sysdate,
										FBM_RMRKS           = 'BANKFAILSUCCESS'  /*** Ver 1.5 ***/
					  WHERE  		fbm_xchng_cd				= :c_xchng_cd
					  AND			fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
					  AND			fbm_run_no				  = :li_run_no
					  AND			fbm_run_dt				  = to_date(:c_run_dt,'DD-Mon-YYYY')
					  AND			fbm_bnk_accnt_nmbr	= :c_bnk_accnt
					  AND			fbm_trnsctn_typ			= :c_trn_typ
					  AND			fbm_blk_cd					= :li_block_cd
					  AND			fbm_dc_flg					= :c_dr_cr_flg
					  AND			fbm_amt							= :d_rerun_amount 
            AND     fbm_prdct_cd        = :c_prdct_cd
            AND     fbm_stts            = 'F';	
    
           	if( SQLCODE != 0 )
           	{
							/************* Ver 1.6 Starts *******************/
							if(SQLCODE == NO_DATA_FOUND )	
							{
								EXEC SQL
					  			UPDATE	fbm_fo_bnk_flr_msg
					  			SET			fbm_stts						= 'Y',
                			    fbm_eba_stts        = 'Y',
                    			FBM_BNK_STTS        = 'Y',
                    			fbm_run_dt          = sysdate,
													FBM_RMRKS           = 'BANKFAILSUCCESS'  /*** Ver 1.5 ***/
					  			WHERE  		fbm_xchng_cd				= :c_xchng_cd
					  			AND			fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
					  			AND			fbm_run_no				  = :li_run_no
					  			AND			fbm_run_dt				  = to_date(:c_run_dt,'DD-Mon-YYYY')
					  			AND			fbm_bnk_accnt_nmbr	<> :c_bnk_accnt
					  			AND			fbm_trnsctn_typ			= :c_trn_typ
					  			AND			fbm_blk_cd					= :li_block_cd
					  			AND			fbm_dc_flg					= :c_dr_cr_flg
					  			AND			fbm_amt							= :d_rerun_amount 
            			AND     fbm_prdct_cd        = :c_prdct_cd
            			AND     fbm_stts            = 'F';	
    
           			if( SQLCODE != 0 )
           			{
          				fn_errlog( c_ServiceName, "S31380",SQLMSG,c_err_msg);
          				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         	  			strcpy ( c_msg, "System error. Contact system support" );
         	  			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              		strcpy(c_error_txt,"System error. Contact System Support");
              		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
         		  		tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
								}
							}
							else  /****** Ver 1.6 Ends ***********/
							{
          			fn_errlog( c_ServiceName, "S31385",SQLMSG,c_err_msg);
          			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         	  		strcpy ( c_msg, "System error. Contact system support" );
         	  		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
								strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
								fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
         				tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
          		}
						}
					}
         else
         {
            EXEC SQL
            UPDATE  fbm_fo_bnk_flr_msg
            SET     fbm_stts            = 'Y',
                    fbm_eba_stts        = 'Y',
                    fbm_run_dt          = sysdate
            WHERE     fbm_xchng_cd        = :c_xchng_cd
            AND     fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
            AND     fbm_run_no          = :li_run_no
            AND     fbm_run_dt          = to_date(:c_run_dt,'DD-Mon-YYYY')
            AND     fbm_bnk_accnt_nmbr  = :c_bnk_accnt
            AND     fbm_trnsctn_typ     = :c_trn_typ
            AND     fbm_blk_cd          = :li_block_cd
            AND     fbm_dc_flg          = :c_dr_cr_flg
            AND     fbm_amt             = :d_rerun_amount
            AND     fbm_prdct_cd        = :c_prdct_cd
            AND     fbm_stts            = 'N';

            if( SQLCODE != 0 )
            {
							/******** Ver 1.6 Starts *********/
							if(SQLCODE == NO_DATA_FOUND )	
							{
								EXEC SQL
            			UPDATE  fbm_fo_bnk_flr_msg
            			SET     fbm_stts            = 'Y',
                    			fbm_eba_stts        = 'Y',
                    			fbm_run_dt          = sysdate
            			WHERE     fbm_xchng_cd        = :c_xchng_cd
            			AND     fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
            			AND     fbm_run_no          = :li_run_no
            			AND     fbm_run_dt          = to_date(:c_run_dt,'DD-Mon-YYYY')
            			AND     fbm_bnk_accnt_nmbr  <> :c_bnk_accnt
            			AND     fbm_trnsctn_typ     = :c_trn_typ
            			AND     fbm_blk_cd          = :li_block_cd
            			AND     fbm_dc_flg          = :c_dr_cr_flg
            			AND     fbm_amt             = :d_rerun_amount
            			AND     fbm_prdct_cd        = :c_prdct_cd
            			AND     fbm_stts            = 'N';

							  if(SQLCODE != 0)
							  {
              		fn_errlog( c_ServiceName, "S31390",SQLMSG,c_err_msg);
              		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
              		strcpy ( c_msg, "System error. Contact system support" );
              		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              		strcpy(c_error_txt,"System error. Contact System Support");
              		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
              		tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
								}
							}
							else	 /******** Ver 1.6 Ends **********/
							{
								fn_errlog( c_ServiceName, "S31395",SQLMSG,c_err_msg);
								fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
								strcpy ( c_msg, "System error. Contact system support" );
								fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
								strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
								fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
								tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
							}
						}

         }
          if(fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
          {
            fn_errlog( c_ServiceName, "S31400",LIBMSG,c_err_msg);
            fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         		strcpy ( c_msg, "System error. Contact system support" );
         		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
            tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
          }
  				sprintf ( c_msg, "Rerun process completed successfully for %s for amount [%lf] ", c_cln_mtch_accnt,d_rerun_amount );
  				fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
  				tpreturn( TPSUCCESS, SUCC_BFR, NULL, 0, 0 );
			 }
			 else if ( li_block_cd == ALLOCATION_DEBIT_ON_PAYIN )	
			 {
				 fn_userlog(c_ServiceName,"Stage--------------27");
       	 c_bnk_dr_cr_flg = UD ;

         /******************************************************/
         /*Sending Unblock Debit on allocation  message to Bank*/
         /******************************************************/
         if ( c_model_flag == 'B' )   /** Ver 2.0  Condition Added For Block/Deposit Model **/
         {
          i_returncode =  fn_send_bnk_msg (&st_usr_prfl,
                                          c_bnk_dr_cr_flg,
                                          FO_BLK_CD,
                                          d_rerun_amount,
                                          BACKOFFICE,
                                          c_ServiceName,
                                          c_err_msg,
                                          &d_val_bal,
                                          c_trace,
									 											  c_tm,
																				  c_bnk_narration, /** Added in Ver 1.1 **/
																				  c_xchng_input,     /** Ver 1.7 **/
                                          li_run_no);       /** Added for Ver 1.9 **/
         }
         else
         {
          i_returncode = SUCCESS;  
         }	
         switch ( i_returncode )
         {
          case SUCCESS :
				    fn_userlog(c_ServiceName,"Stage--------------28");
					  c_bnk_stts  ='Y' ;
					  c_stts  ='N' ;
            break;

         	case INSUF_FUNDS :
         	case BLOCK_NOT_EXISTING :
          case GENERAL_FAILURE :
          case INDERMINATE_FAILURE :
          case RERUN_FAILURE :
          default :
				    fn_userlog(c_ServiceName,"Stage--------------30");
					  c_bnk_stts  ='Y' ;    /** Since Bank was success in Normal Run **/
					  c_stts  ='N' ;
            /**** Ver 1.5 starts here ******/
            if( c_prcs_stts == 'F' )
            {
                i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
                if ( i_trnsctn == -1 )
                {
                  fn_errlog(c_ServiceName, "S31405",LIBMSG,c_err_msg);
                  strcpy ( c_msg, "System error. Contact system support" );
                  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                  strcpy(c_error_txt,"System error. Contact System Support"); 
                  fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
                  tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
                }
           /****************************** Added in ver 1.8 ********************************/
          i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
            if ( i_returncode != 0 )
            {
              fn_errlog(c_ServiceName, "S31410",LIBMSG,c_err_msg);
              fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              strcpy(c_error_txt,"System error. Contact System Support");  
              fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            } 
  
           /****************************** Ver 1.8 Ends ************************************/
				  /** Ver 2.1 Start **/
				  i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
				  if ( i_returncode != 0 )
				  {
							fn_errlog(c_ServiceName, "S31415",LIBMSG,c_err_msg);
							fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
							strcpy ( c_msg, "System error. Contact system support" );
							fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
							strcpy(c_error_txt,"System error. Contact System Support");  
							fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
							tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
				  }
				  /** Ver 2.1 End **/

                EXEC SQL
                UPDATE FBM_FO_BNK_FLR_MSG
                SET FBM_STTS = 'S'
                WHERE
                FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt  AND
                FBM_RUN_NO         = :li_run_no         AND
                FBM_BNK_ACCNT_NMBR = :c_bnk_accnt       AND
                FBM_TRACE          = :c_trace           AND
                FBM_STTS           = 'F'                AND
                FBM_BLK_CD         = :li_block_cd       AND
                FBM_TRNSCTN_TYP    = :c_trn_typ         AND
                FBM_PRDCT_CD       = :c_prdct_cd        AND
                FBM_XCHNG_CD       = :c_xchng_cd ;  /*** Ver 1.2 ***/
                if(SQLCODE  != 0)
                {
									/********** Ver 1.6 Starts *************/
									if(SQLCODE == NO_DATA_FOUND )
									{
										EXEC SQL
                			UPDATE FBM_FO_BNK_FLR_MSG
                			SET FBM_STTS = 'S'
                			WHERE
                			FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt  AND
                			FBM_RUN_NO         = :li_run_no         AND
                			FBM_BNK_ACCNT_NMBR <> :c_bnk_accnt       AND
                			FBM_TRACE          = :c_trace           AND
                			FBM_STTS           = 'F'                AND
                			FBM_BLK_CD         = :li_block_cd       AND
                			FBM_TRNSCTN_TYP    = :c_trn_typ         AND
                			FBM_PRDCT_CD       = :c_prdct_cd        AND
                			FBM_XCHNG_CD       = :c_xchng_cd ; 
										if(SQLCODE != 0 )
										{
                  		fn_errlog(c_ServiceName, "S31420",SQLMSG,c_err_msg);
                  		strcpy ( c_msg, "System error. Contact system support" );
                  		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
											fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
                  		strcpy(c_error_txt,"System error. Contact System Support");
                  		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
                  		tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
										}
									}
									else /****** Ver 1.6 Ends **********/
									{
										fn_errlog(c_ServiceName, "S31425",SQLMSG,c_err_msg);
										strcpy ( c_msg, "System error. Contact system support" );
										fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
										fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
										strcpy(c_error_txt,"System error. Contact System Support");
										fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
										tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
									}
								}

            /**************************** Added in ver 1.8 ********************************/
            
           EXEC SQL
                SELECT  count(rowid)
                 INTO   :i_fbm_rcrd_cnt
                 FROM   fbm_fo_bnk_flr_msg
                 WHERE  fbm_xchng_cd        = :c_xchng_cd
                  AND   fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
                  AND   fbm_run_no          = :li_run_no
                  AND   fbm_trnsctn_typ     = :c_trn_typ
                  AND   fbm_dc_flg          = :c_dr_cr_flg
                  AND   fbm_prdct_cd        = :c_prdct_cd
                  AND   fbm_stts       IN ('N','F');
                if( SQLCODE != 0 )
                {
                  fn_errlog( c_ServiceName, "S31430",SQLMSG,c_err_msg);
                  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                  strcpy ( c_msg, "System error. Contact system support" );
                  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                  strcpy(c_error_txt,"System error. Contact System Support");
                  fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
                  tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
                }
 
            if(i_fbm_rcrd_cnt == 0)
            {
              EXEC SQL
              UPDATE  AMC_ADM_MRGN_CALC
                 SET  AMC_STATUS_FLG = 'F'
               WHERE  AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
                 AND  AMC_RUN_NO         = :li_run_no
                 AND  AMC_BNK_ACCNT      = :c_bnk_accnt
                 AND  AMC_DBCR_CD        = :c_dr_cr_flg
                 AND  AMC_XCHNG_CD = :c_xchng_cd
                 AND  AMC_BATCH_SITE_IND='B'
                 AND  AMC_STATUS_FLG = 'N';
 
              if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
              {
                fn_errlog( c_ServiceName, "S31435",SQLMSG,c_err_msg);
                fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                strcpy ( c_msg, "System error. Contact system support" );
                fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                strcpy(c_error_txt,"System error. Contact System Support");
                fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
                tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
              }
           }
              
            /**************************** Ver 1.8 Ends ************************************/
                if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
                 {
                  fn_errlog( c_ServiceName, "S31440",LIBMSG,c_err_msg);
                  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                  strcpy ( c_msg, "System error. Contact system support" );
                  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                  strcpy(c_error_txt,"System error. Contact System Support");
                  fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
                  tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
                }
                sprintf ( c_msg,"Failure while sending BFT rerun bank entry for :%s:",c_cln_mtch_accnt);
                fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
                tpreturn( TPSUCCESS, SUCC_BFR, NULL, 0, 0 );
            }
            /****** ver 1.5 Ends Here ********/

            i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
            if ( i_trnsctn == -1 )
            {
             fn_errlog(c_ServiceName, "S31445",LIBMSG,c_err_msg);
             strcpy ( c_msg, "System error. Contact system support" );
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
             strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
             fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
             tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }

            /************************ Added in ver 1.8 *****************************/
            i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
            if ( i_returncode != 0 )
            {
              fn_errlog(c_ServiceName, "S31450",LIBMSG,c_err_msg);
              fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              strcpy(c_error_txt,"System error. Contact System Support");  
              fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }
            
            /************************ Ver 1.8 Ends *********************************/
				  	/** Ver 2.1 Start **/
				  	i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
				  	if ( i_returncode != 0 )
				  	{
							fn_errlog(c_ServiceName, "S31455",LIBMSG,c_err_msg);
							fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
							strcpy ( c_msg, "System error. Contact system support" );
							fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
							strcpy(c_error_txt,"System error. Contact System Support");  
							fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
							tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
				  	}
				  	/** Ver 2.1 End **/
	
            EXEC SQL
            UPDATE FBM_FO_BNK_FLR_MSG
            SET FBM_STTS = 'P'
            WHERE
            FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt  AND
            FBM_RUN_NO         = :li_run_no         AND
            FBM_BNK_ACCNT_NMBR = :c_bnk_accnt       AND
            FBM_TRACE          = :c_trace           AND
            FBM_STTS           = 'N'                AND
            FBM_BLK_CD         = :li_block_cd       AND
            FBM_TRNSCTN_TYP    = :c_trn_typ         AND
            FBM_PRDCT_CD       = :c_prdct_cd        AND
            FBM_XCHNG_CD       = :c_xchng_cd;   /*** Ver 1.2 **/
            if(SQLCODE  != 0)
            {
							/******************** Ver 1.6 Starts ***************************/
							if(SQLCODE == NO_DATA_FOUND)
							{
							  EXEC SQL
								UPDATE 		FBM_FO_BNK_FLR_MSG
								SET 			FBM_STTS = 'P',
													FBM_BNK_ACCNT_NMBR = :c_bnk_accnt
								WHERE
								FBM_CLM_MTCH_ACCNT = :c_cln_mtch_accnt  AND
								FBM_RUN_NO         = :li_run_no         AND
            		FBM_BNK_ACCNT_NMBR <>:c_bnk_accnt       AND
								FBM_TRACE          = :c_trace           AND
								FBM_STTS           = 'N'                AND
								FBM_BLK_CD         = :li_block_cd       AND
								FBM_TRNSCTN_TYP    = :c_trn_typ         AND
								FBM_PRDCT_CD       = :c_prdct_cd        AND
								FBM_XCHNG_CD       = :c_xchng_cd;   
		            if(SQLCODE  != 0)
				        {
							      fn_errlog(c_ServiceName, "S31460",SQLMSG,c_err_msg);
									  strcpy ( c_msg, "System error. Contact system support" );
										fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
										fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
										strcpy(c_error_txt,"System error. Contact System Support"); 
										fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
										tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
								}
								fn_userlog(c_ServiceName,"Number of rows updated=:%ld:",sqlca.sqlerrd[2]);
							}
							else/***************** Ver 1.6 Ends ***************/
							{
								fn_errlog(c_ServiceName, "S31465",SQLMSG,c_err_msg);
								strcpy ( c_msg, "System error. Contact system support" );
								fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
								fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
								strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
								fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
								tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
							}
						}

            EXEC SQL
            INSERT INTO FBM_FO_BNK_FLR_MSG
            (
             FBM_XCHNG_CD,
             FBM_CLM_MTCH_ACCNT,
             FBM_RUN_NO,
             FBM_RUN_DT,
             FBM_BNK_ACCNT_NMBR,
             FBM_TRNSCTN_TYP,
             FBM_BLK_CD,
             FBM_DC_FLG,
             FBM_AMT,
             FBM_BNK_STTS,
             FBM_EBA_STTS,
             FBM_STTS,
             FBM_TRACE,
             FBM_TIMESTAMP,
             FBM_PRDCT_CD,
	     			 FBM_NARRATION  /** Added in Ver 1.1 **/
            )
            VALUES
            (
             :c_xchng_cd,
             :c_cln_mtch_accnt,
             :li_run_no,
             trunc(sysdate),
             :c_bnk_accnt,
             :c_trn_typ,
             :li_block_cd,
             :c_dr_cr_flg,
             :d_rerun_amount,
             :c_bnk_stts,
             :c_eba_stts,
             'N',
             :c_trace,
             to_date(:c_tm,'yyyymmddhh24miss'),
             :c_prdct_cd,
	    		   :c_bnk_narration  /** Added in Ver 1.1 **/
            );
            if(SQLCODE  != 0)
            {
             fn_errlog(c_ServiceName, "S31470",SQLMSG,c_err_msg);
             strcpy ( c_msg, "System error. Contact system support" );
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
						 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); /** Ver 1.5 **/
             strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
             fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
             tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }
            if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
            {
             fn_errlog( c_ServiceName, "S31475",LIBMSG,c_err_msg);
             fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
             strcpy ( c_msg, "System error. Contact system support" );
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
             strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
             fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
             tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }
            sprintf ( c_msg,"Failure while sending BFT rerun bank entry for :%s:",c_cln_mtch_accnt);
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            tpreturn( TPSUCCESS, SUCC_BFR, NULL, 0, 0 );

          }/*End of switch of bank call*/

          i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
          if ( i_trnsctn == -1 )
          {
           fn_errlog(c_ServiceName, "S31480",LIBMSG,c_err_msg);
           strcpy ( c_msg, "System error. Contact system support" );
         	 fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
           strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
           fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
           tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
          }

          i_returncode = fn_lock_usr( c_ServiceName, c_cln_mtch_accnt );
          if ( i_returncode != 0 )
          {
           fn_errlog(c_ServiceName, "S31485",LIBMSG,c_err_msg);
           fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
         	 strcpy ( c_msg, "System error. Contact system support" );
         	 fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
           strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
           fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
           tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
          }
				 	/** Ver 2.1 Start **/
				 	i_returncode = fn_lock_fno( c_ServiceName, c_cln_mtch_accnt );
				 	if ( i_returncode != 0 )
				 	{
							fn_errlog(c_ServiceName, "S31490",LIBMSG,c_err_msg);
							fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
							strcpy ( c_msg, "System error. Contact system support" );
							fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
							strcpy(c_error_txt,"System error. Contact System Support");  
							fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
							tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
				 	}
				 	/** Ver 2.1 End **/

			 	  fn_userlog(c_ServiceName,"Stage--------------31");

          /********************************************************************************/
          /** Since only bank was success in normal case and EBA was fail, so increase ISEC
              Margin amount and decrease allocation amount.                               */ 
          /********************************************************************************/
          if( strcmp(c_xchng_cd,"NFO") == 0 ) /*** Ver 1.2 ** if condition added ***/ 
          {
           i_returncode = fn_upd_adm_alloc_dtls( c_ServiceName,
                                              c_err_msg,
                                              c_cln_mtch_accnt,
                                              c_bnk_accnt,
                                              c_tag,
                                              0,
                                              d_rerun_amount * (-1),
                                              d_rerun_amount,   /*** NSE Isec Margin Amount ***/
                                              0,                 /*** BSE Isec Margin Amount Ver 1.2 ***/
                                              &d_tot_alc_amt /** Ver 2.0 **/
                                              );
          }
          else if( strcmp(c_xchng_cd,"BFO") == 0 ) /*** Ver 1.2 starts here ***/
          {
           i_returncode = fn_upd_adm_alloc_dtls( c_ServiceName,
                                              c_err_msg,
                                              c_cln_mtch_accnt,
                                              c_bnk_accnt,
                                              c_tag,
                                              0,
                                              d_rerun_amount * (-1),
                                              0,                 /*** NSE Isec Margin Amount ***/
                                              d_rerun_amount,     /*** BSE Isec Margin Amount ***/
                                              &d_tot_alc_amt /** Ver 2.0 **/
                                              );
          } /*** Ver 1.2 ends here ***/

          if ( i_returncode != 0 )
          {
           fn_errlog(c_ServiceName, "S31495",LIBMSG,c_err_msg);
           fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
           strcpy ( c_msg, "System error. Contact system support" );
           fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
           strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
           fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
           tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
          }

         /*** Check if UD has failed only for Allocation, if yes then update stts_flg as 'YY' in AMC **/
          EXEC SQL
            SELECT  count(rowid)
            INTO    :i_fbm_rcrd_cnt
            FROM    fbm_fo_bnk_flr_msg
            WHERE   fbm_xchng_cd        = :c_xchng_cd
            AND     fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
            AND     fbm_run_no          = :li_run_no
            AND     fbm_trnsctn_typ     = :c_trn_typ
            AND     fbm_dc_flg          = :c_dr_cr_flg
            AND     fbm_prdct_cd        = :c_prdct_cd
            /*** AND     fbm_stts            = 'N';  *** Ver 1.5 ***/
            AND     fbm_stts in ('N','F' );    /*** Ver 1.5 ***/
          if( SQLCODE != 0 )
          {
            fn_errlog( c_ServiceName, "S31500",SQLMSG,c_err_msg);
            fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
            strcpy ( c_msg, "System error. Contact system support" );
            fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
            strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
            fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
            tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
          }
          if(i_fbm_rcrd_cnt == 1 )
          {
           /******** commented in Ver 2.0  *************
           if( c_prcs_stts == 'F' ) *** Ver 1.5 ***
           {
           ********************************************/
            MEMSET(c_bill_no);

            EXEC SQL
                SELECT 'ADM'||to_char(sysdate,'YYYYMMDD')||LPAD(pipoadmseq.nextval,6,0)
                INTO :c_bill_no
                FROM   DUAL;
            if( SQLCODE != 0 )
            {
              fn_errlog( c_ServiceName, "S31505",SQLMSG,c_err_msg);
              fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
              strcpy ( c_msg, "System error. Contact system support" );
              fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
              strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
              fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
              tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }

            EXEC SQL
            UPDATE  AMC_ADM_MRGN_CALC
               SET  AMC_STATUS_FLG = 'Y', 
                    AMC_BILL_NO = :c_bill_no,
                    AMC_NEW_ISEC_MRGN_AMT = AMC_NEW_ISEC_MRGN_AMT + :d_rerun_amount   /*** Added in Ver 1.8 ***/
             WHERE  AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
               AND  AMC_RUN_NO         = :li_run_no
               AND  AMC_BNK_ACCNT      = :c_bnk_accnt
               AND  AMC_DBCR_CD        = :c_dr_cr_flg
              /***  AND  AMC_STATUS_FLG = 'F'   commented in Ver 1.8 ***/
               AND  AMC_STATUS_FLG IN ('Y','N')                     /*** Added in Ver 1.8 ***/
               AND  AMC_XCHNG_CD   = :c_xchng_cd
               AND  AMC_BATCH_SITE_IND='B'
               AND ROWNUM < 2
               RETURNING ROWID              /** Added in Ver 2.0 **/
               INTO :c_src_rowid_mbs;

            if( SQLCODE != 0 )
            {
             fn_errlog( c_ServiceName, "S31510",SQLMSG,c_err_msg);
             fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
             strcpy ( c_msg, "System error. Contact system support" );
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
             strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
             fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
             tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }
          /** } **/
          /************** commented in Ver 2.0 ******************
           else
           {
             EXEC SQL
             UPDATE  AMC_ADM_MRGN_CALC
               SET  AMC_STATUS_FLG = 'Y'
             WHERE  AMC_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
               AND  AMC_RUN_NO         = :li_run_no
               AND  AMC_BNK_ACCNT      = :c_bnk_accnt
               AND  AMC_DBCR_CD        = :c_dr_cr_flg
            ***  AND  AMC_STATUS_FLG = 'N'  **** commented in ver 1.8****
               AND  AMC_STATUS_FLG IN ('N','Y')   ********** Added in ver 1.8 ***********
               AND  AMC_XCHNG_CD   = :c_xchng_cd;  **** Ver 1.2 ***

            if( SQLCODE != 0 )
            {
             fn_errlog( c_ServiceName, "S31515",SQLMSG,c_err_msg);
             fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
             strcpy ( c_msg, "System error. Contact system support" );
             fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
             strcpy(c_error_txt,"System error. Contact System Support");  *** Ver 1.4 ***
             fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
             tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
            }
           }
          *********************** comment Ends ******************************/
          /***** Entries for MBS , SEGLOG , PBP GOES HERE Ver 2.0  ******/
          if ( c_model_flag == 'D' )
          {
           strcpy(c_pipo_src,"LIMIT");
          }
          else
          {
           strcpy(c_pipo_src,"DEBIT");
          }
          if(strcmp(c_xchng_cd,"NFO")==0)
          {
           strcpy(c_prdct_cd_mbs,"NFOADMI");
           c_accntng_for='I';
          }
          else if(strcmp(c_xchng_cd,"BFO")==0)
          {
           strcpy(c_prdct_cd_mbs,"BFOADMI");
           c_accntng_for='I';
          }
          d_trnsctn_amt=d_rerun_amount/100;
          sprintf(c_narration_mbs,"Being Cash Margin Debited Against Open Position in NSE %s",c_tran_date);
          strcpy(c_trace_mbs,c_trace);
          strcpy(c_mtch_series,c_bill_no);
          strcpy(c_bnk_acct_nmbr,c_bnk_accnt);
          sprintf(c_run_nmbr, "%lu" ,li_run_no);
       
          rtrim(c_src_rowid_mbs);         
          rtrim(c_pipo_src);
         
          if(fn_ins_mbs(c_ServiceName,c_cln_mtch_accnt,c_xchng_cd,c_prdct_cd_mbs,c_pipo_src,c_sgmnt_cd,0,c_tran_date,d_trnsctn_amt,c_run_nmbr,c_instrument_nmbr,'\0',c_mdc_crdt_nmbr, c_accntng_for, c_accntng_typ,c_trace_mbs,c_bnk_acct_nmbr, c_narration_mbs, 'D', c_mtch_series,c_class_svc, c_src_rowid_mbs,c_err_msg,c_model_flag) == -1)   /* \0 Added in Ver TOL */
          {
           fn_errlog( c_ServiceName, "S31520",SQLMSG,c_err_msg);
           fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
           strcpy ( c_msg, "System error. Contact system support" );
           fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
           strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
           fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
           tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
          }
        
        /***** Insert Into Segmant Log Starts ***/
        if ( c_model_flag == 'D')
        {
          if( DEBUG_MSG_LVL_0 )
          {
           fn_userlog( c_ServiceName, "Before fn_ins_seg_log call" );
          }  
         
          strcpy(c_user_id_seg_log ,"system");
          l_session_id_seg_log =0;
          strcpy(c_channel,"SYS");
          li_run_no_seg_log=li_run_no;
          MEMSET(c_narration_seg_log);
          /* strcpy(c_narration_seg_log,"De Allocation from FNO Segment"); */
          sprintf(c_narration_seg_log,"NFO ADM Payin %s",c_tran_date); 
          i_returncode = fn_ins_seg_log(c_user_id_seg_log,
                                   l_session_id_seg_log,
                                   c_ServiceName,
                                   c_cln_mtch_accnt,
                                   d_rerun_amount*0.01,
                                   'I', /**** To reduce  allocation **/
                                   c_sgmnt_cd,
                                   d_tot_alc_amt*0.01,
                                   'N',
                                   c_channel,
                                   c_narration_seg_log,
                                   li_run_no_seg_log,
                                   c_prdct_cd_mbs,
                                   c_pipo_src);
         if ( i_returncode != 0 )
         {
          fn_errlog(c_ServiceName, "S31525",LIBMSG,c_err_msg);
          fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
          strcpy ( c_msg, "System error. Contact system support" );
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
          tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
         }
         /** Insert INTO SEGLOG ENDS ***/
        
         /*** PBP INSERT  STARTS ***/
          if(strcmp(c_xchng_cd,"NFO")==0)
          {
           strcpy(c_prdct_cd_pbp,"ADM");
           strcpy(c_ibr_prdct_cd,"NFOADMID");
           c_pipo_typ='I';
           strcpy(c_pool_acc,c_payin_pool_acc_adm_nse);
           strcpy(c_othr_pool_acc,c_main_nse_payin_ac);
           d_bnk_pipo_amt_pbp= d_rerun_amount;
          }
          else
          {
           strcpy(c_prdct_cd_pbp,"ADB");
           strcpy(c_ibr_prdct_cd,"BFOADMID");
           c_pipo_typ='I';
           strcpy(c_pool_acc, c_payin_pool_acc_adm_bse);
           strcpy(c_othr_pool_acc, c_main_nse_payin_ac);
           d_bnk_pipo_amt_pbp = d_rerun_amount; 
          } 
          EXEC SQL
          INSERT INTO PBP_PRD_BNK_PIPO
          (
            PBP_PROD_CD,
            PBP_RUN_NO,
            PBP_RUN_DATE,
            PBP_PIPO_TYP,
            PBP_AMT,
            PBP_POOL_ACC,
            PBP_DBCR_FLG,
            PBP_PRCSS_FLG,
            PBP_TRACE,
            PBP_TIMESTAMP,
            PBP_DC_DATE,
            PBP_IBR_PRDCT_CD,
            PBP_INS_DATE,
            PBP_OTH_POOL_ACC
          )
         VALUES
         (
           :c_prdct_cd_pbp,
           :li_run_no,
           to_date(:c_run_dt,'DD-Mon-YYYY'),
           :c_pipo_typ,
           :d_bnk_pipo_amt_pbp*0.01,
           :c_pool_acc,
           'N',
           'N',
            '',
            '',
            '',
            :c_ibr_prdct_cd,
            SYSDATE,
            :c_othr_pool_acc
           );

         if ( i_returncode != 0 )
         {
          fn_errlog(c_ServiceName, "S31530",LIBMSG,c_err_msg);
          fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
          strcpy ( c_msg, "System error. Contact system support" );
          fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
          strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
          tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
         }
          
         /*** PBP INSERT ENDS ****/  
      
        }
       /***** Insert into Segment Log Ends   ***/
          /*********************** Entries Ends *************************/
   
       }

				  /*** update the record to PROCESSED status in failure table ***/
          if( c_prcs_stts == 'F' )  /*** Ver 1.5 ***/
          {
				   EXEC SQL
					 UPDATE	fbm_fo_bnk_flr_msg
					 SET			fbm_stts						= 'Y',
                   fbm_eba_stts        = 'Y',
                   FBM_BNK_STTS        = 'Y',
                   fbm_run_dt          = sysdate,
									 FBM_RMRKS           = 'BANKFAILSUCCESS'  /*** Ver 1.5 ***/
					 WHERE		fbm_xchng_cd				= :c_xchng_cd
					 AND			fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
					 AND			fbm_run_no				  = :li_run_no
					 AND			fbm_run_dt				  = to_date(:c_run_dt,'DD-Mon-YYYY')
					 AND			fbm_bnk_accnt_nmbr	= :c_bnk_accnt
					 AND			fbm_trnsctn_typ			= :c_trn_typ
					 AND			fbm_blk_cd					= :li_block_cd
					 AND			fbm_dc_flg					= :c_dr_cr_flg
					 AND			fbm_amt							= :d_rerun_amount 
           AND     fbm_prdct_cd        = :c_prdct_cd
           AND     fbm_stts            = 'F';	

         	if( SQLCODE != 0 )
         	{
						/********  Ver 1.6 ********/
						if(SQLCODE == NO_DATA_FOUND )
						{
								EXEC SQL
					 		UPDATE	fbm_fo_bnk_flr_msg
					 		SET			fbm_stts						= 'Y',
              		    fbm_eba_stts        = 'Y',
                  	  FBM_BNK_STTS        = 'Y',
                   		fbm_run_dt          = sysdate,
											FBM_RMRKS           = 'BANKFAILSUCCESS'  /*** Ver 1.5 ***/
					 		WHERE		fbm_xchng_cd				= :c_xchng_cd
					 		AND			fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
					 		AND			fbm_run_no				  = :li_run_no
					 		AND			fbm_run_dt				  = to_date(:c_run_dt,'DD-Mon-YYYY')
					 		AND			fbm_bnk_accnt_nmbr	<> :c_bnk_accnt
					 		AND			fbm_trnsctn_typ			= :c_trn_typ
					 		AND			fbm_blk_cd					= :li_block_cd
					 		AND			fbm_dc_flg					= :c_dr_cr_flg
					 		AND			fbm_amt							= :d_rerun_amount 
           		AND     fbm_prdct_cd        = :c_prdct_cd
           		AND     fbm_stts            = 'F';	

						if(SQLCODE != 0 )
						{
         	 		fn_errlog( c_ServiceName, "S31535",SQLMSG,c_err_msg);
           		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         	 		strcpy ( c_msg, "System error. Contact system support" );
         	 		fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
           		strcpy(c_error_txt,"System error. Contact System Support");
           		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
           		tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
						}
					 }
					 else   /***** Ver 1.6 Ends *********/
					{
         	 fn_errlog( c_ServiceName, "S31540",SQLMSG,c_err_msg);
           fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         	 strcpy ( c_msg, "System error. Contact system support" );
         	 fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
           strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
           fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
           tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
         	}
         }
			}
         else
         {
           EXEC SQL
           UPDATE fbm_fo_bnk_flr_msg
           SET      fbm_stts            = 'Y',
                   fbm_eba_stts        = 'Y',
                   fbm_run_dt          = sysdate
           WHERE    fbm_xchng_cd        = :c_xchng_cd
           AND      fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
           AND      fbm_run_no          = :li_run_no
           AND      fbm_run_dt          = to_date(:c_run_dt,'DD-Mon-YYYY')
           AND      fbm_bnk_accnt_nmbr  = :c_bnk_accnt
           AND      fbm_trnsctn_typ     = :c_trn_typ
           AND      fbm_blk_cd          = :li_block_cd
           AND      fbm_dc_flg          = :c_dr_cr_flg
           AND      fbm_amt             = :d_rerun_amount
           AND     fbm_prdct_cd        = :c_prdct_cd
           AND     fbm_stts            = 'N';

          if( SQLCODE != 0 )
          {
						/******* Ver 1.6 Starts ********/
						 if(SQLCODE == NO_DATA_FOUND )
						{
							 	EXEC SQL
           			UPDATE fbm_fo_bnk_flr_msg
           			SET      fbm_stts            = 'Y',
                   		fbm_eba_stts        = 'Y',
                   		fbm_run_dt          = sysdate
           			WHERE    fbm_xchng_cd        = :c_xchng_cd
           			AND      fbm_clm_mtch_accnt  = :c_cln_mtch_accnt
           			AND      fbm_run_no          = :li_run_no
           			AND      fbm_run_dt          = to_date(:c_run_dt,'DD-Mon-YYYY')
           			AND      fbm_bnk_accnt_nmbr  <> :c_bnk_accnt
           			AND      fbm_trnsctn_typ     = :c_trn_typ
           			AND      fbm_blk_cd          = :li_block_cd
           			AND      fbm_dc_flg          = :c_dr_cr_flg
           			AND      fbm_amt             = :d_rerun_amount
           			AND     fbm_prdct_cd        = :c_prdct_cd
           			AND     fbm_stts            = 'N';
						if(SQLCODE != 0 )
						{
           			fn_errlog( c_ServiceName, "S31545",SQLMSG,c_err_msg);
           			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
           			strcpy ( c_msg, "System error. Contact system support" );
           			fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
           			strcpy(c_error_txt,"System error. Contact System Support");
           			fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
           			tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
						}
					 }
					 else  /***** Ver 1.6 Ends ******/
					{
						fn_errlog( c_ServiceName, "S31550",SQLMSG,c_err_msg);
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
						strcpy ( c_msg, "System error. Contact system support" );
						fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
						strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
						fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
						tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
          }
         }
				}

         if (fn_committran(c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
         {
           fn_errlog( c_ServiceName, "S31555",LIBMSG,c_err_msg);
           fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
         	 strcpy ( c_msg, "System error. Contact system support" );
         	 fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
           strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
           fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
           tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
         }
  			 sprintf ( c_msg, "Rerun process completed successfully for %s for amount [%lf] ", c_cln_mtch_accnt,d_rerun_amount );
  			 fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
  			 tpreturn( TPSUCCESS, SUCC_BFR, NULL, 0, 0 );
			 }
		 }
		 break;

	} /* end of outer switch */
  fn_userlog(c_ServiceName, "**Out of Main Switch Case ");
  strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
  fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
  tpreturn ( TPFAIL, ERR_BFR, ( char * )NULL, 0, 0 );
} /* end of main */
