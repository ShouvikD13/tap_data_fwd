/******************************************************************************/
/*	Program	    			:	SFO_PRCS_ADJNRI                                       */
/*                                                                            */
/*  Input             : FFO_XCHNG_CD                                          */
/*                      FFO_TRD_DT                                            */
/*                      FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_AMOUNT                                            */
/*                                                                            */
/*  Output            : Success / Failure                                     */
/*                                                                            */
/*  Description       : To process the records in End of Day (EOD) adjustment */
/*                      of TDS incurred on profit loss for nri 								*/
/*											called by the batch program  													*/
/*                                                                            */
/*  Log               : Ver 1.1		AIX Migration(SKS) 		- 19-Dec-2007         */
/*										:	Ver	1.2		CRCSN43261 Sandeep 		- 07-Apr-2010					*/
/*										:	Ver	1.3		Process Optimization 	-	05-Jan-2011					*/
/*                    :	Ver	1.4   Function call added		-	04-Dec-2012         */
/*                    : Ver 1.5   Game Backoffice Automation - 23-Feb-2013    */ 
/*                    : Ver 1.6   VIew to FML Changes   - 18-Nov-2014         */
/******************************************************************************/
/*  19-Dec-2001     Ver 1.0        Abhishek Agrawal	 Release 1.0              */
/*	07-Apr-2010			Ver 1.2				 Sandeep Patil															*/	
/*	05-Jan-2011			Ver	1.3				 Sandeep Patil															*/
/*	04-Dec-2012			Ver 1.4				 Bhushan Sonwane                            */
/*  23-Feb-2013     Ver 1.5        Sachin Birje                               */
/*  18-Nov-2014     Ver 1.6        Sachin Birje                               */
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
/*Add header files here */
#include <fml_def.h>
/*** #include <fo_view_def.h> ** Ver 1.6 **/
#include <fo_view_def.h>     /** Ver 1.6 **/
#include <fml_rout.h>          /** Ver 1.6 */
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_tuxlib.h>
#include <fo.h>
#include <fn_ddr.h>
#include <fn_log.h>             /*  Ver 1.1 : Added 	*/
#include <fn_read_debug_lvl.h>  /*  Ver 1.1 : Added   */
#include <fn_pos.h>							/*  Ver 1.4 */


void SFO_PRCS_ADJNRI( TPSVCINFO *rqst )
{
  FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Sbuf;   /** Ver 1.6 **/
  FBFR32 *ptr_fml_Rbuf;   /** Ver 1.6 **/

  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];
  int i_returncode;
  int i_ip_len;
  int i_op_len;
  int i_trnsctn;
	int i_mnth_sm;
	int i_upd_limit = 0;
	int i_flg =0;

  int i;              /* Ver 1.6 */
  int i_err[10];      /* Ver 1.6 */
  int i_ferr[10];     /* Ver 1.6 */
  long l_recvbuf=0;   /* Ver 1.6 */

  char c_tag [ 256 ];
  char c_msg [ 256 ];
	char c_setoff_flg;
	char c_flg='F';					   /*  Ver 1.4 */
	char c_BatchName [ 33 ]; /*  Ver 1.4 */
 
  /**** Ver 1.5 Starts ****/
  char c_program_nm[33];
  char c_xchng_cd_tmp[4];
  char c_match_id[11];
  char c_error_txt[256];

  MEMSET(c_program_nm);
  MEMSET(c_xchng_cd_tmp);
  MEMSET(c_match_id);
  MEMSET(c_error_txt);

  strcpy(c_program_nm,"bat_adj_nri");
  /**** Ver 1.5 Ends ***/

	/***EXEC SQL INCLUDE "/webtrade/usr/smitha/new/mts_mon_tds_smry.h";***/
	/***EXEC SQL INCLUDE "/webtrade/EBA/include/table/mts_mon_tds_smry.h";***/
	EXEC SQL INCLUDE "table/mts_mon_tds_smry.h";

  EXEC SQL BEGIN DECLARE SECTION;
    varchar c_nxt_trd_dt [ LEN_DATE ];
    varchar trade_dt [ LEN_DATE ];
 		struct vw_upd_limits st_upd_limits;
  EXEC SQL END DECLARE SECTION;

 	struct vw_upd_limits st_upd_limits_del;
 	struct vw_upd_limits st_upd_limits_add;

  ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
  strcpy( c_ServiceName, rqst->name );
	strcpy( c_BatchName, "bat_adj_nri" );  /*  Ver 1.4 */

	INITDBGLVL(c_ServiceName);            /*  Ver 1.1 : Added   */

  /******** Commented in Ver 1.6 ************************
  i_returncode = Fvftos32( ptr_fml_Ibuf,
                         ( char * )&st_upd_limits,
                         "vw_upd_limits" );
  ************* Ver 1.6 *********************************/
 
  /******* Ver 1.6 Starts Here ****************/
  i_returncode = fn_unpack_fmltovar_dflt ( c_ServiceName,
                                      c_err_msg,
                                      ptr_fml_Ibuf,
                                      10,
                                      FFO_XCHNG_CD,(char *)st_upd_limits.c_xchng_cd, "NULL",
                                      FFO_EBA_MTCH_ACT_NO,(char *)st_upd_limits.c_cln_mtch_accnt, "NULL",
                                      FFO_TRD_DT,(char *)st_upd_limits.c_trd_dt, "NULL",
                                      FFO_NARRATION_ID,(char *)st_upd_limits.c_narration_id, "**",
                                      FFO_REMARKS,(char *)st_upd_limits.c_remarks, "-",
                                      FFO_DR_CR_FLG,(char *)&st_upd_limits.c_dr_cr_flg, "-",
                                      FFO_AMOUNT,(char *)&st_upd_limits.d_amount, "0",
                                      FFO_BAL_AMT,(char *)&st_upd_limits.d_bal_amt, "0",
                                      FFO_DWL_FLG,(char *)&st_upd_limits.c_dr_without_lmt_flg, "-",
                                      FFO_ROUT_CRT,(char *)st_upd_limits.c_rout_crt, "***"
                                      );
   
  /******* Ver 1.6 Ends here ******************/
 
  if( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.5 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  strcpy(c_xchng_cd_tmp,st_upd_limits.c_xchng_cd);		/*** Ver 1.5 ***/
	strcpy(c_match_id,st_upd_limits.c_cln_mtch_accnt);  /*** Ver 1.5 ***/

  /*** Added for Order Routing ***/
  fn_init_ddr_val ( st_upd_limits.c_rout_crt );

  i_returncode = Fget32( ptr_fml_Ibuf, FFO_BAT_TAG, 0, (char *)c_tag, 0 );
  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31010", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.5 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
    fn_userlog( c_ServiceName, "Exchange code :%s:", st_upd_limits.c_xchng_cd );
    fn_userlog( c_ServiceName, "Trade date    :%s:", st_upd_limits.c_trd_dt );
    fn_userlog( c_ServiceName, "Match Account :%s:", st_upd_limits.c_cln_mtch_accnt );
    fn_userlog( c_ServiceName, "st_upd_limits.c_dr_cr_flg :%c:", st_upd_limits.c_dr_cr_flg );
    fn_userlog( c_ServiceName, "Debit Credit Amount :%lf:", st_upd_limits.d_amount );
    fn_userlog( c_ServiceName, "st_upd_limits.c_dr_without_lmt_flg  :%c:", st_upd_limits.c_dr_without_lmt_flg);
  }

  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    fn_errlog( c_ServiceName, "S31015", FMLMSG, c_err_msg  );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.5 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  EXEC SQL
    SELECT  to_char ( exg_nxt_trd_dt, 'dd-Mon-yyyy'),
						EXG_SETT_OFF_FLG,
						decode(TO_CHAR(EXG_NXT_TRD_DT,'MON'),TO_CHAR(TO_DATE(:st_upd_limits.c_trd_dt,'DD-Mon-YYYY'),'MON'),1,0)
    INTO    :c_nxt_trd_dt,
						:c_setoff_flg,
						:i_mnth_sm
    FROM    exg_xchng_mstr
    WHERE   exg_xchng_cd = :st_upd_limits.c_xchng_cd
		AND			exg_mkt_typ  = 'D';

  if( SQLCODE != 0 )
  {
    fn_errlog( c_ServiceName, "S31020", SQLMSG, c_err_msg );
   	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
   	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
   	fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); /*  Ver 1.4 */
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.5 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	SETNULL ( c_nxt_trd_dt );

	i_flg =0;

	EXEC SQL 
			 SELECT 1
			 INTO 	:i_flg 
			 FROM 	DUAL 
			 WHERE	to_char(to_date(:c_nxt_trd_dt,'DD-Mon-YYYY'),'Mon') = 'Apr'
			 AND    to_char(to_date( :st_upd_limits.c_trd_dt,'DD-Mon-YYYY'),'Mon') ='Mar';

	if( SQLCODE != 0 &&  SQLCODE != NO_DATA_FOUND)
	{
		fn_errlog( c_ServiceName, "S31025", SQLMSG, c_err_msg );
		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); /*  Ver 1.4 */
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.5 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}


	if( i_mnth_sm == 1 || ( i_mnth_sm == 0 && c_setoff_flg == 'Y' && i_flg == 0 )  )
	{			/*********** TDS is shifted only if the month is same or if its end of month and yearly set off and amount is greater than 0 ************************/
		if ( st_upd_limits.d_amount > 0 )
		{
			memcpy ( &st_upd_limits_del, &st_upd_limits, sizeof( st_upd_limits_del ) );
	
			st_upd_limits_del.c_dr_cr_flg = DEBIT;
			strcpy(st_upd_limits_del.c_narration_id, CLOSING_OF_UNCRYSTALIZED_TDS);
			st_upd_limits_del.d_amount = (-1) * st_upd_limits.d_amount;
			st_upd_limits_del.c_dr_without_lmt_flg = DEBIT_WITHOUT_LIMIT;
			fn_cpy_ddr(st_upd_limits_del.c_rout_crt);
	
			memcpy ( &st_upd_limits_add, &st_upd_limits, sizeof( st_upd_limits_add ) );
		
			st_upd_limits_add.c_dr_cr_flg = CREDIT;
			strcpy(st_upd_limits_add.c_trd_dt, (char *)c_nxt_trd_dt.arr);
			strcpy(st_upd_limits_add.c_narration_id, UNCRYSTALIZED_TDS_BROUGHT_FORWARD);
			st_upd_limits_add.c_dr_without_lmt_flg = DEBIT_WITHOUT_LIMIT;
			fn_cpy_ddr(st_upd_limits_add.c_rout_crt);
			i_upd_limit = 1;
		}
		/** TDS is not shifted in case its end of month and it a debit ****/
		else if( st_upd_limits.d_amount < 0 )
		{
			if( i_mnth_sm == 1 )
			{
				memcpy ( &st_upd_limits_del, &st_upd_limits, sizeof( st_upd_limits_del ) );
		
				st_upd_limits_del.c_dr_cr_flg = CREDIT;
				strcpy(st_upd_limits_del.c_narration_id, CLOSING_OF_UNCRYSTALIZED_TDS);
				st_upd_limits_del.d_amount = (-1) * st_upd_limits.d_amount;
				st_upd_limits_del.c_dr_without_lmt_flg = DEBIT_WITHOUT_LIMIT;
				fn_cpy_ddr(st_upd_limits_del.c_rout_crt);
	
				memcpy ( &st_upd_limits_add, &st_upd_limits, sizeof( st_upd_limits_add ) );
	
				st_upd_limits_add.c_dr_cr_flg = DEBIT;
				strcpy(st_upd_limits_add.c_trd_dt, (char *)c_nxt_trd_dt.arr);
				strcpy(st_upd_limits_add.c_narration_id, UNCRYSTALIZED_TDS_BROUGHT_FORWARD);
				st_upd_limits_add.c_dr_without_lmt_flg = DEBIT_WITHOUT_LIMIT;
				fn_cpy_ddr(st_upd_limits_add.c_rout_crt);
				i_upd_limit = 1;
			}
		}
		else
		{
			fn_errlog( c_ServiceName, "S31030", "Invalid amount specified ", c_err_msg );
		  Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
		  fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); /*  Ver 1.4 */
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.5 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
	}
	else if( i_mnth_sm == 0 && c_setoff_flg == 'N' && i_flg == 0 )			/***	Ver	1.2	***/
	{
		fn_userlog(c_ServiceName,"Inside Check For Set Off Flag N");

		if ( st_upd_limits.d_amount > 0 )
    {
			fn_userlog(c_ServiceName,"Inside Check Of Loss ");

      memcpy ( &st_upd_limits_del, &st_upd_limits, sizeof( st_upd_limits_del ) );

      st_upd_limits_del.c_dr_cr_flg = DEBIT;
      strcpy(st_upd_limits_del.c_narration_id, CLOSING_OF_UNCRYSTALIZED_TDS);
      st_upd_limits_del.d_amount = (-1) * st_upd_limits.d_amount;
      st_upd_limits_del.c_dr_without_lmt_flg = DEBIT_WITHOUT_LIMIT;
      fn_cpy_ddr(st_upd_limits_del.c_rout_crt);

      memcpy ( &st_upd_limits_add, &st_upd_limits, sizeof( st_upd_limits_add ) );

      st_upd_limits_add.c_dr_cr_flg = CREDIT;
      strcpy(st_upd_limits_add.c_trd_dt, (char *)c_nxt_trd_dt.arr);
      strcpy(st_upd_limits_add.c_narration_id, UNCRYSTALIZED_TDS_BROUGHT_FORWARD);
      st_upd_limits_add.c_dr_without_lmt_flg = DEBIT_WITHOUT_LIMIT;
      fn_cpy_ddr(st_upd_limits_add.c_rout_crt);
      i_upd_limit = 1;
    }
	}

	if( i_upd_limit == 1 )
	{
    /***** Commented in Ver 1.6 *************************** 
		i_ip_len = sizeof ( struct vw_upd_limits );
		i_op_len = sizeof ( struct vw_upd_limits );
	
		i_returncode = fn_call_svc( c_ServiceName,
	                             	c_err_msg,
	                             	&st_upd_limits_del,
	                             	&st_upd_limits_del,
	                             	"vw_upd_limits",
	                             	"vw_upd_limits",
	                             	i_ip_len,
	                             	i_op_len,
	                             	0,
	                             	"SFO_UPD_LIMITS" );
    if ( i_returncode != 0 )
    {
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_errlog( c_ServiceName, "S31035", SQLMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); *  Ver 1.4 *
      strcpy(c_error_txt,"System error, Contact system Support");  *** Ver 1.5 ***
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  *** Ver 1.5 ***
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    i_ip_len = sizeof ( struct vw_upd_limits );
    i_op_len = sizeof ( struct vw_upd_limits );

    i_returncode = fn_call_svc( c_ServiceName,
                                c_err_msg,
                                &st_upd_limits_add,
                                &st_upd_limits_add,
                                "vw_upd_limits",
                                "vw_upd_limits",
                                i_ip_len,
                                i_op_len,
                                0,
                                "SFO_UPD_LIMITS" );

    if ( i_returncode != 0 )
    {
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_errlog( c_ServiceName, "S31040", SQLMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); *  Ver 1.4 *
      strcpy(c_error_txt,"System error. Contact System Support");  *** Ver 1.5 ***
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  *** Ver 1.5 ***
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
	  *********************** Ver 1.6 Ends here *************/
    /***** Ver 1.6 Starts Here *********/
    ptr_fml_Sbuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN );
    if ( ptr_fml_Sbuf == NULL )
    {
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_errlog( c_ServiceName, "S31045", TPMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); 
      strcpy(c_error_txt,"System error, Contact system Support"); 
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    ptr_fml_Rbuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN );
    if ( ptr_fml_Rbuf == NULL )
    {
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_errlog( c_ServiceName, "S31050", TPMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); 
      strcpy(c_error_txt,"System error, Contact system Support");
      tpfree ((char *)ptr_fml_Sbuf);
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    if( DEBUG_MSG_LVL_5 )
    {
    fn_userlog(c_ServiceName,"st_upd_limits_del.c_xchng_cd :%s:",st_upd_limits_del.c_xchng_cd);  
    fn_userlog(c_ServiceName,"st_upd_limits_del.c_cln_mtch_accnt :%s:",st_upd_limits_del.c_cln_mtch_accnt);  
    fn_userlog(c_ServiceName,"st_upd_limits_del.c_trd_dt :%c:",st_upd_limits_del.c_trd_dt);  
    fn_userlog(c_ServiceName,"st_upd_limits_del.c_narration_id, :%s:",st_upd_limits_del.c_narration_id);  
    fn_userlog(c_ServiceName,"st_upd_limits_del.c_remarks, :%s:",st_upd_limits_del.c_remarks);  
    fn_userlog(c_ServiceName,"st_upd_limits_del.c_dr_cr_flg, :%c:",st_upd_limits_del.c_dr_cr_flg);  
    fn_userlog(c_ServiceName,"st_upd_limits_del.d_amount , :%lf:",st_upd_limits_del.d_amount);  
    fn_userlog(c_ServiceName,"st_upd_limits_del.d_bal_amt, :%lf:",st_upd_limits_del.d_bal_amt);  
    fn_userlog(c_ServiceName,"st_upd_limits_del.c_dr_without_lmt_flg, :%c:",st_upd_limits_del.c_dr_without_lmt_flg);  
    fn_userlog(c_ServiceName,"st_upd_limits_del.c_rout_crt, :%s:",st_upd_limits_del.c_rout_crt);  
    }

    i_err [0] = Fadd32(ptr_fml_Sbuf,FFO_XCHNG_CD, (char *)st_upd_limits_del.c_xchng_cd,0);
    i_ferr[0] = Ferror32;
    i_err [1] = Fadd32(ptr_fml_Sbuf,FFO_EBA_MTCH_ACT_NO, (char *)st_upd_limits_del.c_cln_mtch_accnt,0);
    i_ferr[1] = Ferror32;
    i_err [2] = Fadd32(ptr_fml_Sbuf,FFO_TRD_DT, (char *)st_upd_limits_del.c_trd_dt,0);
    i_ferr[2] = Ferror32;
    i_err [3] = Fadd32(ptr_fml_Sbuf,FFO_NARRATION_ID, (char *)st_upd_limits_del.c_narration_id,0);
    i_ferr[3] = Ferror32;
    i_err [4] = Fadd32(ptr_fml_Sbuf,FFO_REMARKS, (char *)st_upd_limits_del.c_remarks,0);
    i_ferr[4] = Ferror32;
    i_err [5] = Fadd32(ptr_fml_Sbuf,FFO_DR_CR_FLG, (char *)&st_upd_limits_del.c_dr_cr_flg,0);
    i_ferr[5] = Ferror32;
    i_err [6] = Fadd32(ptr_fml_Sbuf,FFO_AMOUNT, (char *)&st_upd_limits_del.d_amount,0);
    i_ferr[6] = Ferror32;
    i_err [7] = Fadd32(ptr_fml_Sbuf,FFO_BAL_AMT, (char *)&st_upd_limits_del.d_bal_amt,0);
    i_ferr[7] = Ferror32;
    i_err [8] = Fadd32(ptr_fml_Sbuf,FFO_DWL_FLG, (char *)&st_upd_limits_del.c_dr_without_lmt_flg,0);
    i_ferr[8] = Ferror32;
    i_err [9] = Fadd32(ptr_fml_Sbuf,FFO_ROUT_CRT, (char *)st_upd_limits_del.c_rout_crt,0);
    i_ferr[9] = Ferror32;
    for (i = 0;i < 10 ;i++)
    {
      if(i_err[i] == -1 )
      {
        fn_userlog( c_ServiceName, "Error in :%d:",i );
        fn_errlog( c_ServiceName, "S31055", Fstrerror32( i_ferr[i]),c_err_msg);
        fn_errlog( c_ServiceName, "S31060", TPMSG, c_err_msg );
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); 
        strcpy(c_error_txt,"System error, Contact system Support"); 
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
        tpfree ((char *)ptr_fml_Sbuf);
        tpfree ((char *)ptr_fml_Rbuf); 
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 ); 
      }
    } 

    i_returncode  = tpcall  ( "SFO_UPD_LIMITS",( char * ) ptr_fml_Sbuf,0,( char ** ) &ptr_fml_Rbuf,&l_recvbuf,0);
    if ( i_returncode == -1 )
    {
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_errlog( c_ServiceName, "S31065", TPMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt);
      strcpy(c_error_txt,"System error, Contact system Support");
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      tpfree ((char *)ptr_fml_Sbuf);
      tpfree ((char *)ptr_fml_Rbuf);
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 ); 
    } 

    if( DEBUG_MSG_LVL_5 )
    {
    fn_userlog(c_ServiceName,"st_upd_limits_add.c_xchng_cd :%s:",st_upd_limits_add.c_xchng_cd);
    fn_userlog(c_ServiceName,"st_upd_limits_del.c_cln_mtch_accnt :%s:",st_upd_limits_add.c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"st_upd_limits_del.c_trd_dt :%c:",st_upd_limits_add.c_trd_dt);
    fn_userlog(c_ServiceName,"st_upd_limits_del.c_narration_id, :%s:",st_upd_limits_add.c_narration_id);
    fn_userlog(c_ServiceName,"st_upd_limits_del.c_remarks, :%s:",st_upd_limits_add.c_remarks);
    fn_userlog(c_ServiceName,"st_upd_limits_del.c_dr_cr_flg, :%c:",st_upd_limits_add.c_dr_cr_flg);
    fn_userlog(c_ServiceName,"st_upd_limits_del.d_amount , :%lf:",st_upd_limits_add.d_amount);
    fn_userlog(c_ServiceName,"st_upd_limits_del.d_bal_amt, :%lf:",st_upd_limits_add.d_bal_amt);
    fn_userlog(c_ServiceName,"st_upd_limits_del.c_dr_without_lmt_flg, :%c:",st_upd_limits_add.c_dr_without_lmt_flg);
    fn_userlog(c_ServiceName,"st_upd_limits_add.c_rout_crt, :%s:",st_upd_limits_add.c_rout_crt);
    }

    i_err [0]= Fchg32(ptr_fml_Sbuf,FFO_XCHNG_CD,0,(char *)st_upd_limits_add.c_xchng_cd,0);        
    i_err [1]= Fchg32(ptr_fml_Sbuf,FFO_EBA_MTCH_ACT_NO,0,(char *)st_upd_limits_add.c_cln_mtch_accnt,0);        
    i_err [2]= Fchg32(ptr_fml_Sbuf,FFO_TRD_DT,0,(char *)st_upd_limits_add.c_trd_dt,0);        
    i_err [3]= Fchg32(ptr_fml_Sbuf,FFO_NARRATION_ID,0,(char *)st_upd_limits_add.c_narration_id,0);        
    i_err [4]= Fchg32(ptr_fml_Sbuf,FFO_REMARKS,0,(char *)st_upd_limits_add.c_remarks,0);        
    i_err [5]= Fchg32(ptr_fml_Sbuf,FFO_DR_CR_FLG,0,(char *)&st_upd_limits_add.c_dr_cr_flg,0);        
    i_err [6]= Fchg32(ptr_fml_Sbuf,FFO_AMOUNT,0,(char *)&st_upd_limits_add.d_amount,0);        
    i_err [7]= Fchg32(ptr_fml_Sbuf,FFO_BAL_AMT,0,(char *)&st_upd_limits_add.d_bal_amt,0);        
    i_err [8]= Fchg32(ptr_fml_Sbuf,FFO_DWL_FLG,0,(char *)&st_upd_limits_add.c_dr_without_lmt_flg,0);        
    i_err [9]= Fchg32(ptr_fml_Sbuf,FFO_ROUT_CRT,0,(char *)st_upd_limits_add.c_rout_crt,0);        
  
    for (i = 0;i < 10;i++)
    {
      if(i_err[i] == -1 )
      {
        fn_userlog( c_ServiceName, "Error in :%d:",i );
        fn_errlog( c_ServiceName, "S31070", Fstrerror32( i_ferr[i]),c_err_msg);
        fn_errlog( c_ServiceName, "S31075", TPMSG, c_err_msg );
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); /*  Ver 1.4 */
        strcpy(c_error_txt,"System error, Contact system Support");
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
        tpfree ((char *)ptr_fml_Sbuf);
        tpfree ((char *)ptr_fml_Rbuf);
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
    }

    i_returncode  = tpcall  ( "SFO_UPD_LIMITS",( char * ) ptr_fml_Sbuf,0,( char ** ) &ptr_fml_Rbuf,&l_recvbuf,0);
    if ( i_returncode == -1 )
    {
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_errlog( c_ServiceName, "S31080", TPMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt);
      strcpy(c_error_txt,"System error, Contact system Support");
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      tpfree ((char *)ptr_fml_Sbuf);
      tpfree ((char *)ptr_fml_Rbuf);
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    tpfree ((char *)ptr_fml_Sbuf);
    tpfree ((char *)ptr_fml_Rbuf); 
    /********* Ver 1.6 Ends here ********************************/  
	}

	fn_userlog( c_ServiceName, "i_mnth_sm :%d:", i_mnth_sm );
	fn_userlog( c_ServiceName, "i_flg  :%d:", i_flg );

	if(i_mnth_sm == 0 && c_setoff_flg == 'Y'  && i_flg == 0)
	{
	fn_userlog( c_ServiceName, "SN1");
		EXEC SQL 
				 SELECT to_char(last_day(to_date(:c_nxt_trd_dt,'DD-Mon-YYYY')),'DD-Mon-yyyy')
				 INTO :trade_dt
				 FROM DUAL;

		if ( SQLCODE != 0  && SQLCODE != NO_DATA_FOUND)
		{
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			fn_errlog( c_ServiceName, "S31085", SQLMSG, c_err_msg );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); /*  Ver 1.4 */
      strcpy(c_error_txt,"System error, Contact system Support");  /*** Ver 1.5 ***/ 
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/  
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

		SETNULL(trade_dt);

	fn_userlog( c_ServiceName, "SN1");
	fn_userlog( c_ServiceName, "trade_dt :%s:",trade_dt.arr);
		EXEC SQL
		SELECT 	MTS_CUM_PL,
						MTS_CUM_TDS_LIAB,
						MTS_TDS_RATE,
						MTS_TDS_SRCH,
						MTS_TDS_CESS,
						MTS_TDS_IT
		INTO
            :sql_mts_cum_pl,
            :sql_mts_cum_tds_liab,
            :sql_mts_tds_rate,
            :sql_mts_tds_srch,
            :sql_mts_tds_cess,
            :sql_mts_tds_it	
    FROM    MTS_MON_TDS_SMRY
		WHERE		MTS_CLM_MTCH_ACCNT = :st_upd_limits.c_cln_mtch_accnt
		AND			TO_CHAR(MTS_TRD_DATE,'MON-YYYY') = TO_CHAR(TO_DATE(:st_upd_limits.c_trd_dt,'DD-Mon-YYYY'),'MON-YYYY');

    if ( SQLCODE != 0 )
    {
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_errlog( c_ServiceName, "S31090", SQLMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); /*  Ver 1.4 */
      strcpy(c_error_txt,"System error, Contact system Support");  /*** Ver 1.5 ***/ 
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    } 

	fn_userlog( c_ServiceName, "SN2");
		EXEC SQL
		INSERT
    INTO mts_mon_tds_smry 			/***	Ver	1.2 Column Added To Sync With Live	***/
			(
				mts_clm_mtch_accnt,
				mts_trd_date,
				mts_cum_pl,
				mts_sett_off_flg,
				mts_cum_tds_liab,
				mts_cum_tds_paid,
				mts_tds_rate,
				mts_bill_no,
				mts_upld_flg,
				mts_tds_srch,
				mts_tds_cess,
				mts_tds_it,
				mts_tds_liab,
				mts_payin_date

			)
		VALUES
    	(
     		:st_upd_limits.c_cln_mtch_accnt,
     		:trade_dt,
     		:sql_mts_cum_pl,
     		:c_setoff_flg,
     		:sql_mts_cum_tds_liab,
     		0,
     		:sql_mts_tds_rate,
     		NULL,
     		'N',
     		:sql_mts_tds_srch,
     		:sql_mts_tds_cess,
     		:sql_mts_tds_it,
     		0,
		 		NULL			/***	Ver	1.2	***/
    	);

		if ( SQLCODE != 0 )
		{
    	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    	fn_errlog( c_ServiceName, "S31095", SQLMSG, c_err_msg );
	  	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    	fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); /*  Ver 1.4 */
      strcpy(c_error_txt,"System error, Contact system Support");  /*** Ver 1.5 ***/ 
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

	fn_userlog( c_ServiceName, "SN3");
    EXEC SQL
    INSERT
    INTO NPL_NRI_PL_LOG VALUES
    (
     :st_upd_limits.c_cln_mtch_accnt,
     :st_upd_limits.c_trd_dt,
     :sql_mts_cum_pl,
     :sql_mts_cum_tds_liab,
     'UNCRYSTALIZED LOSS BROUGHT FORWARD',
     :sql_mts_tds_rate,
     :sql_mts_tds_srch,
     :sql_mts_tds_cess,
     :sql_mts_tds_it
    );
  
    if ( SQLCODE != 0 )
    {
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_errlog( c_ServiceName, "S31100", SQLMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); /*  Ver 1.4 */
      strcpy(c_error_txt,"System error, Contact system Support");  /*** Ver 1.5 ***/ 
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
  }
	else if ( i_mnth_sm == 0 && c_setoff_flg == 'N'  && i_flg == 0 && st_upd_limits.d_amount > 0 )			/***	Ver	1.2	***/
	{
		fn_userlog(c_ServiceName,"Before Inserting Into MTS Fo Set Off Flag N");

		EXEC SQL
      SELECT to_char(last_day(to_date(:c_nxt_trd_dt,'DD-Mon-YYYY')),'DD-Mon-yyyy')
      INTO :trade_dt
      FROM DUAL;

    if ( SQLCODE != 0  && SQLCODE != NO_DATA_FOUND)
    {
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_errlog( c_ServiceName, "S31105", SQLMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); /*  Ver 1.4 */
      strcpy(c_error_txt,"System error, Contact system Support");  /*** Ver 1.5 ***/ 
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/  
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    SETNULL(trade_dt);

		fn_userlog( c_ServiceName, "trade_dt :%s:",trade_dt.arr);

    EXEC SQL
   	 SELECT	mts_cum_pl,
    	      mts_cum_tds_liab,
						mts_tds_liab,			
      		  mts_tds_rate,
            mts_tds_srch,
          	mts_tds_cess,
            mts_tds_it
     INTO
            :sql_mts_cum_pl,
            :sql_mts_cum_tds_liab,
						:sql_mts_tds_liab,	
            :sql_mts_tds_rate,
            :sql_mts_tds_srch,
            :sql_mts_tds_cess,
            :sql_mts_tds_it
    FROM    mts_mon_tds_smry
    WHERE   mts_clm_mtch_accnt = :st_upd_limits.c_cln_mtch_accnt
    AND     TO_CHAR(mts_trd_date,'MON-YYYY') = TO_CHAR(TO_DATE(:st_upd_limits.c_trd_dt,'DD-Mon-YYYY'),'MON-YYYY');

    if ( SQLCODE != 0 )
    {
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_errlog( c_ServiceName, "S31110", SQLMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); /*  Ver 1.4 */
      strcpy(c_error_txt,"System error, Contact system Support");  /*** Ver 1.5 ***/ 
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

		EXEC SQL
    	INSERT INTO mts_mon_tds_smry
				(
					mts_clm_mtch_accnt,
					mts_trd_date,
					mts_cum_pl,
					mts_sett_off_flg,
					mts_cum_tds_liab,
					mts_cum_tds_paid,
					mts_tds_rate,
					mts_bill_no,
					mts_upld_flg,
					mts_tds_srch,
					mts_tds_cess,
					mts_tds_it,
					mts_tds_liab,
					mts_payin_date,
					mts_curr_pl,						
          mts_cumpl_carry_frwrd  
				)
		 	VALUES
    		(
     			:st_upd_limits.c_cln_mtch_accnt,
     			:trade_dt,
     			:sql_mts_cum_pl,
     			:c_setoff_flg,
     			:sql_mts_cum_tds_liab,
     			:sql_mts_cum_tds_liab,
     			:sql_mts_tds_rate,
     			NULL,
     			'N',
     			:sql_mts_tds_srch,
     			:sql_mts_tds_cess,
     			:sql_mts_tds_it,
     			0,
					sysdate,
					0,													
          nvl(:sql_mts_cum_pl,0)		
    		);

   if ( SQLCODE != 0 )
   {
   		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
     	fn_errlog( c_ServiceName, "S31115", SQLMSG, c_err_msg );
     	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     	fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); /*  Ver 1.4 */
      strcpy(c_error_txt,"System error, Contact system Support");  /*** Ver 1.5 ***/ 
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
   }

	fn_userlog(c_ServiceName,"Before Inserting Into NPL_NRI_PL_LOG");
		
   EXEC SQL
	   INSERT INTO NPL_NRI_PL_LOG VALUES
     (
     	:st_upd_limits.c_cln_mtch_accnt,
     	:st_upd_limits.c_trd_dt,
     	:sql_mts_cum_pl,
     	:sql_mts_cum_tds_liab,
     	'UNCRYSTALIZED LOSS BROUGHT FORWARD',
     	:sql_mts_tds_rate,
     	:sql_mts_tds_srch,
     	:sql_mts_tds_cess,
     	:sql_mts_tds_it
   	);

    if ( SQLCODE != 0 )
    {
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      fn_errlog( c_ServiceName, "S31120", SQLMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); /*  Ver 1.4 */
      strcpy(c_error_txt,"System error, Contact system Support");  /*** Ver 1.5 ***/ 
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
		
	}

	/****To Be checked at Y3K ******/

	fn_userlog(c_ServiceName,"Before Payout Date Update.");				/***  Ver 1.3 ***/
	
 	EXEC SQL
	UPDATE fcb_fo_clnt_blncs SET  FCB_PAYOUT_DT = '01-Jan-3000'
	WHERE FCB_TRD_DT >= trunc(sysdate)
	AND	FCB_XCHNG_CD	=	:st_upd_limits.c_xchng_cd									/***	Ver	1.3	***/
	AND	FCB_CLM_MTCH_ACCNT	=	:st_upd_limits.c_cln_mtch_accnt			/***  Ver 1.3 ***/
	AND FCB_GRP_ID= 9;

	if ( SQLCODE != 0  && SQLCODE !=NO_DATA_FOUND)
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    fn_errlog( c_ServiceName, "S31125", SQLMSG, c_err_msg );
	  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); /*  Ver 1.4 */
    strcpy(c_error_txt,"System error, Contact system Support");  /*** Ver 1.5 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	fn_userlog(c_ServiceName,"After Payout Date Update.");			/***  Ver 1.3 ***/
	fn_userlog( c_ServiceName, "SN4");
	if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    fn_errlog( c_ServiceName, "S31130", SQLMSG, c_err_msg );
	  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    fn_upd_audittab(c_ServiceName, c_BatchName, c_flg, st_upd_limits.c_xchng_cd, st_upd_limits.c_trd_dt); /*  Ver 1.4 */
    strcpy(c_error_txt,"System error, Contact system Support");  /*** Ver 1.5 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.5 ***/
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
	tpreturn( TPSUCCESS, 0, (char *)ptr_fml_Ibuf, 0 , 0 );
}
