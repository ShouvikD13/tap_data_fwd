/**************************************************************************************/
/*    Program Name   : SFO_SAM_INTCMPT                                                */
/*                                                                                    */
/*      Log          :                                                                */
/**************************************************************************************/
/*    Ver 1.0      : Initial Release 10-Oct-2020  Akash B                             */
/*    Ver 1.1      : Minor changes   11-Jan-2021  Akash B                             */   
/*    Ver 1.2      : CR-ISEC14-162075 Sam in Currency & Commodity 11-Mar-2023 Tanmay Patel */
/**************************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fo.h>
#include <fo_fml_def.h>
#include <fo_view_def.h>
#include <fn_session.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_log.h>
#include <fn_read_debug_lvl.h>
#include <fn_get_gst_amt.h>
#include <fn_pp_card.h>
#include <fn_pos.h>
int fn_process_client (char *, char *,char *,char *,double,double,double,char *,double,double); 
int fn_upd_flr(char *,char *,char *,double,double,char *,double,double);
void SFO_SAM_INTCMPT(  TPSVCINFO *rqst )
{
 FBFR32 *ptr_fml_Ibuf;

 char c_mtch_accnt[11];
 char c_ServiceName[33];
 char c_sam_int_cmptdt[12];
 char c_err_msg[256];
 char c_pism_sch_typ[4];
 char c_rowid[20];
 char c_run_dt[12];
 char c_ctd_brkrg_schm_type='\0'; 
 char c_prime_prepaid_scheme_code[20];
 char c_temp_date[12];
 char c_flg='\0';

 double d_sam_amount=0;
 double d_mrgn_req=0;
 double d_sam_int_rt=0; 
 double d_threshold_prm=0;
 double d_int_cmpt_amt=0;
 double d_sam_int_amt=0;

 long l_sr_no=0;

 int i_returncode=0;
 int i_trnsctn;
 int i_ret_cd=0; 
 int i_err_cd=0;

 MEMSET(c_prime_prepaid_scheme_code);
 MEMSET(c_err_msg);     /*** Ver 1.1 ***/

 ptr_fml_Ibuf = (FBFR32 *)rqst->data;
 strcpy( c_ServiceName,rqst->name );

 i_returncode = fn_unpack_fmltovar_dflt ( c_ServiceName,
                                      c_err_msg,
                                      ptr_fml_Ibuf,
                                      6,
                                      FFO_EBA_MTCH_ACT_NO, ( char * )c_mtch_accnt,NULL,
																			FFO_ORD_VALID_DT, ( char * )c_sam_int_cmptdt,NULL,
																			FFO_AMOUNT,( char * )&d_sam_amount,NULL,
																			FFO_LIMIT,( char * )&d_mrgn_req,NULL,
																			FFO_SERIES,( char *)c_rowid,NULL,
                                      FFO_INTERVAL,(char *)&l_sr_no,NULL);                             

 if ( i_returncode == -1 )
 {
  fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg  );
 /**  tpfree((char *)ptr_fml_Ibuf);  ** commented **/
  Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );  /** Ver 1.1 **/
  tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
 }

 rtrim(c_rowid); /** Ver 1.1 **/

 fn_userlog(c_ServiceName,"Serial no :%ld:",l_sr_no);
 fn_userlog(c_ServiceName,"Match Account :%s:",c_mtch_accnt);
 fn_userlog(c_ServiceName,"Sam Interest date :%s:",c_sam_int_cmptdt);
 fn_userlog(c_ServiceName,"SAM Amount :%lf:",d_sam_amount);
 fn_userlog(c_ServiceName,"Margin Required :%lf:",d_mrgn_req);
 fn_userlog(c_ServiceName,"Row ID :%s:",c_rowid);


 if( strcmp(c_rowid,"NA") == 0 )
 {
  EXEC SQL
  SELECT  NVL(ICD_CUST_TYPE,'')
  INTO    :c_pism_sch_typ
  FROM    ICD_INFO_CLIENT_DTLS
  WHERE   ICD_USER_ID = (select uac_usr_id from uac_usr_accnts where UAC_CLM_MTCH_ACCNT = :c_mtch_accnt); 

  if (SQLCODE != 0)
  {
   fn_errlog( c_ServiceName, "S31010", SQLMSG, c_err_msg );
 /****   tpfree((char *)ptr_fml_Ibuf);  ****/
   Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 ); /** Ver 1.1 **/
   tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
 
  rtrim(c_pism_sch_typ);

  if(strcmp(c_pism_sch_typ,"NRI") == 0)
  {
    MEMSET(c_pism_sch_typ);
    strcpy(c_pism_sch_typ,"NRI");
  }
  else
  {
    MEMSET(c_pism_sch_typ);
    strcpy(c_pism_sch_typ,"RI");
  }

 
  rtrim(c_pism_sch_typ);
  fn_userlog(c_ServiceName,"c_pism_sch_typ :%s:",c_pism_sch_typ);

  EXEC SQL
      SELECT DECODE(INSD_PRIME_SCHEMECODE,NULL,(DECODE(INSD_PREPAID_SCHEMECODE, NULL, 'N',DECODE(PISM_CARD_TYP,'F','N', 'P'))),'R'),
      DECODE(INSD_PRIME_SCHEMECODE, NULL, (DECODE(INSD_PREPAID_SCHEMECODE,NULL,INSD_EQ_SCHEMECODE,PISM_GLOBAL_SCH_CD)),IPSM_GLOBAL_SCH_CD)
       INTO :c_ctd_brkrg_schm_type,
            :c_prime_prepaid_scheme_code
       FROM INSD_INFO_NTST_SCHEME_DTLS,
            IMSM_INFO_MATCH_SCHEME_MASTER,
            PISM_PREPAID_INFO_SCH_MSTR,
            IPSM_INFO_PRIME_SCH_MSTR
      WHERE INSD_MATCH_ACCOUNT_NO     = :c_mtch_accnt
        AND PISM_SCH_TYP(+)           = :c_pism_sch_typ
        AND INSD_EQ_SCHEMECODE        = IMSM_SCHEMECODE
        AND INSD_PREPAID_SCHEMECODE   = PISM_GLOBAL_SCH_CD(+)
        AND INSD_PRIME_SCHEMECODE     = IPSM_GLOBAL_SCH_CD(+);

  if (SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
  {
   fn_errlog( c_ServiceName, "S31015", SQLMSG, c_err_msg );
   Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 ); /** Ver 1.1 **/
   tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
 
  rtrim(c_prime_prepaid_scheme_code);
 
  fn_userlog(c_ServiceName,"Customer type :%c:",c_ctd_brkrg_schm_type);
  fn_userlog(c_ServiceName,"Brokerage scheme :%s:",c_prime_prepaid_scheme_code);
 
  if( c_ctd_brkrg_schm_type  == 'P' )
  {
    EXEC SQL
    select DECODE(NVL(PISM_FNO_SAM_INT,0),0,0,PISM_FNO_SAM_INT/100)
    INTO :d_sam_int_rt
    from PISM_PREPAID_INFO_SCH_MSTR
    where PISM_GLOBAL_SCH_CD=:c_prime_prepaid_scheme_code; 
 
  }
  else if ( c_ctd_brkrg_schm_type == 'R')
  {
    EXEC SQL
    select DECODE(NVL(IPSM_FNO_SAM_INT,0),0,0,IPSM_FNO_SAM_INT/100)
    INTO :d_sam_int_rt
    from IPSM_INFO_PRIME_SCH_MSTR
    where IPSM_GLOBAL_SCH_CD=:c_prime_prepaid_scheme_code;
  }
  else
  {
    EXEC SQL
    select DECODE(NVL(OSM_FNO_SAM_INTRST_CHRG,0),0,0,OSM_FNO_SAM_INTRST_CHRG/100)
    INTO :d_sam_int_rt
    from OSM_OPTION_SCHEME_MSTR
    where  OSM_PRDCT_TYP='D'; 
 
  }
 
  if( SQLCODE != 0  && ( SQLCODE != NO_DATA_FOUND))
  {
   fn_userlog(c_ServiceName,"Error in fetching values");
   fn_errlog( c_ServiceName, "S31020", SQLMSG, c_err_msg );
   Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 ); /** Ver 1.1 **/
   tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
  else if( SQLCODE == NO_DATA_FOUND )
  {
    fn_userlog(c_ServiceName,"Scheme code not present");
    fn_errlog( c_ServiceName, "S31025", SQLMSG, c_err_msg ); 
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 ); /** Ver 1.1 **/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }


  if ( d_sam_int_rt == 0 && (c_ctd_brkrg_schm_type == 'P' || c_ctd_brkrg_schm_type == 'R'))
  {

    fn_userlog(c_ServiceName,"Inside scheme code null conditon");

    EXEC SQL
    select DECODE(NVL(OSM_FNO_SAM_INTRST_CHRG,0),0,0,OSM_FNO_SAM_INTRST_CHRG/100)
    INTO :d_sam_int_rt
    from OSM_OPTION_SCHEME_MSTR
    where  OSM_PRDCT_TYP='D';

    if( SQLCODE != 0) 
    {
     fn_userlog(c_ServiceName,"Error in fetching values");
     fn_errlog( c_ServiceName, "S31030", SQLMSG, c_err_msg );
     Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 ); /** Ver 1.1 **/
     tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
  }


 }  
 else
 {
   EXEC SQL
   select DECODE(NVL(SID_INT_PER,0),0,0,SID_INT_PER/100)
   INTO :d_sam_int_rt
   from SID_SAM_INTRST_DTLS
   where rowid=:c_rowid
   and   SID_XCHNG = 'NFO';  /** Ver 1.2 **/

   if( SQLCODE != 0 ) 
   {
    fn_userlog(c_ServiceName,"Error in fetching values");
    fn_errlog( c_ServiceName, "S31035", SQLMSG, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 ); /** Ver 1.1 **/
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
   }
 }

  EXEC SQL
  SELECT ROUND(DECODE(NVL(ACM_CHARGE,0),0,0,ACM_CHARGE/100),2)
  INTO : d_threshold_prm
  FROM ACM_ADDL_CHRGS_MSTR
  where ACM_CHARGE_TYPE='SAM_THRS_PER';
  
 if( SQLCODE != 0  && ( SQLCODE != NO_DATA_FOUND))
 {
  fn_userlog(c_ServiceName,"Error in fetching values");
  fn_errlog( c_ServiceName, "S31040", SQLMSG, c_err_msg );
  Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 ); /** Ver 1.1 **/
  tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
 }

 fn_userlog(c_ServiceName,"Total Margin required :%lf:",d_mrgn_req);
 fn_userlog(c_ServiceName,"Sam Component :%lf:",d_sam_amount);

  EXEC SQL
  SELECT LEAST(ROUND((:d_threshold_prm * :d_mrgn_req),2),:d_sam_amount)
  INTO :d_int_cmpt_amt
  FROM DUAL;

  if( SQLCODE != 0)
  {
   fn_userlog(c_ServiceName,"Error in fetching values");
   fn_errlog( c_ServiceName, "S31045", SQLMSG, c_err_msg );
   Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 ); /** Ver 1.1 **/
   tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  fn_userlog(c_ServiceName,"Interest to be calculated on amount :%lf:",d_int_cmpt_amt);
  fn_userlog(c_ServiceName,"Interest rate :%lf:",d_sam_int_rt);
 
  fn_userlog(c_ServiceName,"d_sam_int_rt :%lf:",d_sam_int_rt);
  fn_userlog(c_ServiceName,"d_int_cmpt_amt :%lf:",d_int_cmpt_amt);

  d_sam_int_amt = d_int_cmpt_amt * d_sam_int_rt ;

  fn_userlog(c_ServiceName,"d_sam_int_amt :%lf:",d_sam_int_amt);

  EXEC SQL
  SELECT ROUND(:d_sam_int_amt,2),
         ROUND(:d_int_cmpt_amt,2)
  INTO :d_sam_int_amt,
       :d_int_cmpt_amt
  FROM DUAL;

  if( SQLCODE != 0)
  {
   fn_userlog(c_ServiceName,"Error in fetching values");
   fn_errlog( c_ServiceName, "S31050", SQLMSG, c_err_msg );
   Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 ); /** Ver 1.1 **/
   tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  fn_userlog(c_ServiceName,"Before checking for amount 0 validation - :%lf:",d_sam_int_amt);

  if ( d_sam_int_amt == 0.00 )
  {
   fn_userlog(c_ServiceName,"Skipping %s  as amount is zero.",c_mtch_accnt);
   strcpy(c_err_msg,"Skipping record");  /** Ver 1.1 **/
   Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );  /** Ver 1.1 **/
   tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
  }


  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg);

  if( i_trnsctn == -1 )
  {
   fn_errlog( c_ServiceName, "S31055",FMLMSG , c_err_msg );
   Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG,(char *)c_err_msg, 0 );
   tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }


  fn_userlog(c_ServiceName,"c_sam_int_cmptdt --------- :%s:",c_sam_int_cmptdt);
  fn_userlog(c_ServiceName,"d_sam_int_amt :%lf:",d_sam_int_amt);


  i_ret_cd = fn_process_client ( c_ServiceName,
                                 c_mtch_accnt,
                                 c_sam_int_cmptdt,
                                 c_err_msg,
                                 d_sam_int_rt,
                                 d_sam_int_amt,
                                 d_int_cmpt_amt,
                                 c_rowid,
                                 d_mrgn_req,
                                 d_sam_amount );

  if ( i_ret_cd != 0 )
  {
   fn_errlog( c_ServiceName, "S31060", LIBMSG, c_err_msg  );
   fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
   i_err_cd = fn_upd_flr(c_ServiceName,c_mtch_accnt,c_sam_int_cmptdt,d_int_cmpt_amt,d_sam_int_rt,c_rowid,d_sam_amount,d_mrgn_req);
   if ( i_err_cd !=0 )   /** Ver 1.1 **/
   {
    fn_userlog(c_ServiceName,"Error in updating failure records"); 
   }
   fn_userlog(c_ServiceName,"Error in processing for match account :%s",c_mtch_accnt);
   tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
    fn_errlog( c_ServiceName, "S31065", LIBMSG, c_err_msg  );
    fn_userlog(c_ServiceName,"Error in processing for match account :%s:",c_mtch_accnt);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }


 tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );

}

int fn_process_client ( char *c_ServiceName,char *c_mtch_accnt,char *c_trade_date, char *c_err_msg,double d_int_pr,double d_int_ammt,double d_int_cmppt_amt,char *c_row_idd, double d_mrgn_rq,double d_sam)
{
  int i_trnsctn = 0;
  char    c_cur_sys_dt[11 + 1];
  char    c_inv_no[30+1];
  int     i_returncode = 0;
  double d_balance_amt = 0;
  char c_narration_id[4];
  char c_lmt_flg = '\0';
  char c_mdc_crdt_nmbr[21]="\0";
  char c_mdc_prd_typ[4];
  long l_mdc_sttlmnt_nmbr=0;
  char c_mdc_sttlmnt_trd_dt[12];
  double d_gst_amtt=0;
  int i_cnt=0;


 struct  st_get_gst_invins st_ptr_get_gst_invins;
  long l_tot_ordr  = 0;
  double d_amount_rs = 0;
  double d_amount_rs_r = 0.0;
  double d_sam_chrgs_incl_gst=0.0;
  double d_sam_chrgs_incl_gst_updlim=0.0;

     char c_gst_usr_id[9] ="\0";
     struct st_gst_amt st_gst;
     MEMSET(st_gst);
     st_gst.d_cgst_amt = 0.0;
     st_gst.d_sgst_amt = 0.0;
     st_gst.d_igst_amt = 0.0;
     st_gst.d_ugst_amt = 0.0;
     st_gst.d_gst_amt = 0.0;
     MEMSET(st_gst.c_gst_state_cd);
     MEMSET(st_gst.c_gst_isec_state_cd);

 struct vw_pstn_actn st_pstn_action;  
 MEMSET(st_pstn_action); /** 1.1 **/

 struct vw_err_msg st_spn_err_msg;  
 MEMSET(st_spn_err_msg);

 strcpy(st_pstn_action.c_xchng_cd,"NFO");
 strcpy(st_pstn_action.c_cln_mtch_accnt, c_mtch_accnt);
 sprintf(st_pstn_action.c_ref_rmrks,"Interest on SAM in F&O");
 rtrim(st_pstn_action.c_ref_rmrks );
 fn_userlog(c_ServiceName,"Remarks :%s:",st_pstn_action.c_ref_rmrks);


  EXEC SQL
  SELECT  UAC_USR_ID
  INTO    :c_gst_usr_id
  FROM    uac_usr_accnts
  WHERE   UAC_CLM_MTCH_ACCNT = :c_mtch_accnt;

 if (SQLCODE !=0)
 {
  fn_errlog(c_ServiceName, "S31070",SQLMSG, c_err_msg); /** 1.1 **/
  return -1;
 }

 rtrim(c_gst_usr_id);

 d_amount_rs = d_int_ammt;
 i_returncode = fn_get_gst_amt(c_ServiceName, c_gst_usr_id,d_amount_rs, &st_gst, c_err_msg);

 if ( i_returncode !=0)
 {
  /***  fn_errlog(c_ServiceName, "L31005",SQLMSG, c_err_msg); **/
  fn_errlog(c_ServiceName, "S31075",LIBMSG,c_err_msg);  /** 1.1 **/
  return -1;
 }

 MEMSET(c_inv_no);
 MEMSET(c_cur_sys_dt);

 EXEC SQL
  SELECT FN_GST_SEQ_OTHR_DBIT(:st_gst.c_gst_isec_state_cd,TO_CHAR(SYSDATE,'DD-Mon-YYYY')),
         TO_CHAR(SYSDATE,'DD-Mon-YYYY'),
         ROUND(:d_amount_rs,2)
  INTO   :c_inv_no,
         :c_cur_sys_dt,
         :d_amount_rs
  FROM   DUAL;

  if ( SQLCODE != 0  )
  {
    fn_errlog(c_ServiceName,"S31080",SQLMSG,c_err_msg);
    return -1;
  }

  rtrim(c_inv_no);
  MEMSET(c_mdc_sttlmnt_trd_dt);
  l_mdc_sttlmnt_nmbr=0;

  d_sam_chrgs_incl_gst = d_amount_rs + st_gst.d_gst_amt;

  fn_userlog(c_ServiceName,"before rounding :%lf:",d_sam_chrgs_incl_gst);
 
  EXEC SQL
  SELECT ROUND(:d_sam_chrgs_incl_gst,2)
  INTO :d_sam_chrgs_incl_gst_updlim
  FROM DUAL;

  if ( SQLCODE != 0  )
  {
    fn_errlog(c_ServiceName,"S31085",SQLMSG,c_err_msg);
    return -1;
  }

  d_sam_chrgs_incl_gst_updlim  = d_sam_chrgs_incl_gst_updlim * 100;
  fn_userlog(c_ServiceName,"after multiplying  :%lf:",d_sam_chrgs_incl_gst);

  c_lmt_flg = DEBIT_WITHOUT_LIMIT;
  strcpy( c_narration_id ,"MIB");  

  /**** Added in Ver 1.1 ******/

  fn_userlog(c_ServiceName,"Input to function");
  fn_userlog(c_ServiceName,"c_narration_id :%s:",c_narration_id);
  fn_userlog(c_ServiceName,"c_lmt_flg :%c:",c_lmt_flg);
  fn_userlog(c_ServiceName,"d_sam_chrgs_incl_gst_updlim :%lf:",d_sam_chrgs_incl_gst_updlim);


  /**** Added in Ver 1.1 ******/


  i_returncode = fn_upd_limits (  c_ServiceName,
                                       &st_pstn_action,
                                       &st_spn_err_msg,
                                       c_narration_id,
                                       c_lmt_flg,
                                       d_sam_chrgs_incl_gst_updlim*(-1),
                                       &d_balance_amt);


  if( i_returncode == -1 )
  {
   /** fn_errlog(c_ServiceName,"S31090",SQLMSG,c_err_msg); commented in ver 1.1 **/
    fn_errlog(c_ServiceName,"S31095",LIBMSG,c_err_msg); /** Ver 1.1 **/
    return -1;
  }

 strcpy(c_mdc_prd_typ,"INF");

 EXEC SQL
 SELECT TO_CHAR(EXG_NXT_TRD_DT,'DD-Mon-YYYY')
   INTO :c_mdc_sttlmnt_trd_dt
   FROM EXG_XCHNG_MSTR
  WHERE EXG_XCHNG_CD = 'NFO';

  if( SQLCODE != 0  )
  {
    fn_errlog(c_ServiceName,"S31100",SQLMSG,c_err_msg);
    return -1;
  }

 
  EXEC SQL
  SELECT '01'||TO_CHAR(SYSDATE,'YYDDMM')||Next_doc_no.nextval
  INTO :c_mdc_crdt_nmbr
  FROM DUAL; 

  if( SQLCODE != 0  )
  {
    fn_errlog(c_ServiceName,"S31105",SQLMSG,c_err_msg);
    return -1;
  }

  rtrim(c_mdc_crdt_nmbr);  /** 1.1 **/

  EXEC SQL
  INSERT INTO MDC_MISC_DR_CR
  (
   MDC_CLM_MTCH_ACCNT,
   MDC_PRDCT_TYP,
   MDC_CRDT_NMBR,
   MDC_AMT1,
   MDC_AMT2,
   MDC_TOT_AMT,
   MDC_FROM_DT,
   MDC_TO_DT,
   MDC_DR_CR_FLG,
   MDC_MTCH_STTS,
   MDC_BNK_STTS,
   MDC_BNK_DT,
   MDC_BNK_TRC_NMBR,
   MDC_ENTRY_DT,
   MDC_MTCH_UPD_AMT,
   MDC_BNK_UPD_AMT,
   MDC_GST_STATE_CD,
   MDC_GST_ISEC_STATE_CD,
   MDC_CGST_AMT,
   MDC_SGST_AMT,
   MDC_IGST_AMT,
   MDC_UGST_AMT,
   MDC_INVOICE_NMBR,
   MDC_INVOICE_DATE,
   MDC_INVOICE_GEN_FLG,
   MDC_LMT_UPD_STTS,
   MDC_STTLMNT_NMBR,
   MDC_STTLMNT_TRD_DT
  )
  VALUES
  (
   :c_mtch_accnt,
   :c_mdc_prd_typ, 
   :c_mdc_crdt_nmbr, 
   :d_amount_rs,
   0,
   :d_sam_chrgs_incl_gst,
   :c_trade_date,
   :c_trade_date,
   'D',
   'N',
   'N',
   NULL,
   NULL,
   SYSDATE,
   0,
   0,
   :st_gst.c_gst_state_cd,
   :st_gst.c_gst_isec_state_cd,
   :st_gst.d_cgst_amt,
   :st_gst.d_sgst_amt,
   :st_gst.d_igst_amt,
   :st_gst.d_ugst_amt,
   :c_inv_no,
   :c_cur_sys_dt,
   'N',
   'Y',
   :l_mdc_sttlmnt_nmbr,
   :c_mdc_sttlmnt_trd_dt
  );

  if( SQLCODE != 0  )
  {
    fn_errlog(c_ServiceName,"S31110",SQLMSG,c_err_msg);
    return -1;
  }
 
  rtrim(c_mdc_crdt_nmbr);

  fn_userlog(c_ServiceName,"c_mtch_accnt :%s:",c_mtch_accnt);
  fn_userlog(c_ServiceName,"c_trade_date :%s:",c_trade_date);
  fn_userlog(c_ServiceName,"d_int_cmppt_amt :%lf:",d_int_cmppt_amt);
  fn_userlog(c_ServiceName,"d_int_pr :%lf:",d_int_pr);
  fn_userlog(c_ServiceName,"d_int_ammt :%lf:",d_int_ammt);
  fn_userlog(c_ServiceName,"d_sam_chrgs_incl_gst :%lf:",d_sam_chrgs_incl_gst);
  fn_userlog(c_ServiceName,"c_mdc_crdt_nmbr :%s:",c_mdc_crdt_nmbr);

  d_gst_amtt  = st_gst.d_gst_amt * 100 ;
  d_sam_chrgs_incl_gst = d_sam_chrgs_incl_gst * 100;
  d_int_ammt = d_int_ammt * 100;
  d_int_cmppt_amt = d_int_cmppt_amt * 100;
  d_int_pr = d_int_pr * 100;
  d_mrgn_rq = d_mrgn_rq * 100;
  d_sam = d_sam * 100;

  rtrim(c_row_idd);
  fn_userlog(c_ServiceName,"Row id :%s:",c_row_idd);

 if ( strcmp(c_row_idd,"NA") == 0) 
 {
  EXEC SQL
  INSERT INTO SID_SAM_INTRST_DTLS 
  (
   SID_MATCH_ACC,
   SID_DATE,
   SID_INT_PER,
   SID_INT_RS,
   SID_TOTRS,
   SID_CRDT_NMBR,
   SID_GST,
   SID_XCHNG,
   SID_AMOUNT,
   SID_SAM_AMOUNT,
   SID_SAM_MRGN_REQ,
   SID_SAM_CMPT_FLG 
  )
  VALUES
  (
   :c_mtch_accnt,
   :c_trade_date,
   :d_int_pr,
   :d_int_ammt,
   :d_sam_chrgs_incl_gst,
   :c_mdc_crdt_nmbr,
   :d_gst_amtt,
   'NFO',
   :d_int_cmppt_amt,
   :d_sam,
   :d_mrgn_rq,
   'P'   
  );

  if( SQLCODE != 0  )
  {
   fn_errlog(c_ServiceName,"S31115",SQLMSG,c_err_msg);
   return -1;
  }
 }
 else
 {
  rtrim(c_trade_date);
  rtrim(c_mtch_accnt);
  fn_userlog(c_ServiceName,"Inside update ");
  fn_userlog(c_ServiceName,"c_trade_date :%s:",c_trade_date);
  fn_userlog(c_ServiceName,"c_mtch_accnt :%s:",c_mtch_accnt);


  EXEC SQL
  UPDATE SID_SAM_INTRST_DTLS
  SET SID_AMOUNT=:d_int_cmppt_amt,
  SID_INT_RS=:d_int_ammt,
  SID_TOTRS=:d_sam_chrgs_incl_gst,
  SID_CRDT_NMBR=:c_mdc_crdt_nmbr,
  SID_GST=:d_gst_amtt,
  SID_SAM_CMPT_FLG='P'
  where SID_DATE=:c_trade_date
  and   SID_XCHNG = 'NFO'    /** Ver 1.2 **/
  and  SID_MATCH_ACC=:c_mtch_accnt;
 
  if( SQLCODE != 0  )
  {
   fn_errlog(c_ServiceName,"S31120",SQLMSG,c_err_msg);
   return -1;
  }
  fn_userlog(c_ServiceName,"AFter update1 "); 
 }

 fn_userlog(c_ServiceName,"AFter update ");

  MEMSET(st_ptr_get_gst_invins);
  st_ptr_get_gst_invins.c_mtch_acc = c_mtch_accnt;
  st_ptr_get_gst_invins.c_prdct_cd = "OTHRDB";
  st_ptr_get_gst_invins.c_invoice_no = c_inv_no;
  st_ptr_get_gst_invins.c_invoice_dt = c_cur_sys_dt;
  st_ptr_get_gst_invins.d_charge_amt =d_amount_rs;
  st_ptr_get_gst_invins.d_cgst_amt = st_gst.d_cgst_amt;
  st_ptr_get_gst_invins.d_sgst_amt = st_gst.d_sgst_amt;
  st_ptr_get_gst_invins.d_ugst_amt = st_gst.d_ugst_amt;
  st_ptr_get_gst_invins.d_igst_amt = st_gst.d_igst_amt;
  st_ptr_get_gst_invins.c_sub_prdct_cd = c_mdc_prd_typ ;
  st_ptr_get_gst_invins.c_isec_state_cd = st_gst.c_gst_isec_state_cd;
  st_ptr_get_gst_invins.c_state_cd = st_gst.c_gst_state_cd;
  st_ptr_get_gst_invins.c_ref_invoice_no = NULL;
  st_ptr_get_gst_invins.c_ref_invoice_dt = NULL;
  st_ptr_get_gst_invins.d_cgst_per = st_gst.d_cgst_per;
  st_ptr_get_gst_invins.d_sgst_per = st_gst.d_sgst_per;
  st_ptr_get_gst_invins.d_ugst_per = st_gst.d_ugst_per;
  st_ptr_get_gst_invins.d_igst_per = st_gst.d_igst_per;

  if( fn_call_gst_invins(c_ServiceName,DEF_USR,DEF_SSSN,&st_ptr_get_gst_invins,c_err_msg) != 0)
  {
    /** fn_errlog(c_ServiceName,"S31125",SQLMSG,c_err_msg); commented in ver 1.1 **/
    fn_errlog(c_ServiceName,"S31130",LIBMSG,c_err_msg); /** Ver 1.1 **/
    return -1;
  }


  return 0;
}
int fn_upd_flr(char *c_ServiceName,char *c_mtch_accnt,char *c_trd_dt,double d_amt,double d_int_rt,char *c_rowid,double d_sam_amt,double d_mrgn_rqd)
{
  char c_errmsg[256];
  int i_trnsctn=0;
  int i_cnt=0;

  rtrim(c_rowid);
  rtrim(c_mtch_accnt);

  fn_userlog(c_ServiceName,"Inserting failure records");
  fn_userlog(c_ServiceName,"Match Account :%s:",c_mtch_accnt);
  fn_userlog(c_ServiceName,"To date :%s:",c_trd_dt);
  fn_userlog(c_ServiceName,"Amount :%lf:",d_amt);
  fn_userlog(c_ServiceName,"Interest rate :%lf:",d_int_rt);
  fn_userlog(c_ServiceName,"Row id :%s:",c_rowid);
  fn_userlog(c_ServiceName,"SAM Amount :%lf:",d_sam_amt);
  fn_userlog(c_ServiceName,"Margin Required :%lf:",d_mrgn_rqd); 


  EXEC SQL
  SELECT COUNT(*)
  INTO :i_cnt
  FROM SID_SAM_INTRST_DTLS
  WHERE SID_MATCH_ACC=:c_mtch_accnt
  AND  SID_DATE=:c_trd_dt
  AND  SID_XCHNG = 'NFO'  /** Ver 1.2 **/
  AND SID_SAM_CMPT_FLG ='F';

  if( SQLCODE != 0  )
  {
   fn_errlog(c_ServiceName,"S31135",SQLMSG,c_errmsg);
   return -1;
  }

  if ( i_cnt > 0 )
  {
   fn_userlog(c_ServiceName,"Existing failure records");
   return 0; 
  }

  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg);

  if( i_trnsctn == -1 )
  {
   fn_errlog( c_ServiceName, "S31140",FMLMSG , c_errmsg );
   return -1;
  }

  
  d_amt= d_amt*100;
  d_int_rt = d_int_rt*100;  
  d_sam_amt = d_sam_amt * 100;
  d_mrgn_rqd = d_mrgn_rqd * 100 ; 

  EXEC SQL
  INSERT INTO SID_SAM_INTRST_DTLS
  (
   SID_MATCH_ACC,
   SID_DATE,
   SID_INT_PER,
   SID_XCHNG,
   SID_SAM_AMOUNT,
   SID_SAM_MRGN_REQ,
   SID_SAM_CMPT_FLG  
  )
  VALUES
  (
   :c_mtch_accnt,
   :c_trd_dt,
   :d_int_rt,
   'NFO',
   :d_sam_amt,
   :d_mrgn_rqd,     
   'F' 
  );
  
 if( SQLCODE != 0  )
 {
  fn_errlog(c_ServiceName,"S31145",SQLMSG,c_errmsg);
  fn_userlog(c_ServiceName,"Error in inserting");
  fn_aborttran( c_ServiceName, i_trnsctn, c_errmsg );
  return -1;
 }
 
 if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
 {
  fn_errlog( c_ServiceName, "S31150", LIBMSG, c_errmsg  );
  fn_userlog(c_ServiceName,"Error in commit :%s:",c_mtch_accnt);
  fn_aborttran( c_ServiceName, i_trnsctn, c_errmsg );
  return -1;
 }

  return 0;
}
