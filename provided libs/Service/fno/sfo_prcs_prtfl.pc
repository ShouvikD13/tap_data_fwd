/******************************************************************************/
/*  Program           : SFO_PRCS_PRTFL                                         */
/*                                                                            */
/*  Input             : Required                                              */
/*																																						*/
/*											FFO_EBA_MTCH_ACT_NO																		*/
/*																																						*/
/*  Output            : SUCESS / FAILURE 																			*/
/******************************************************************************/
/*																																						*/
/*  Description       : This service retrieves todays trade for each client		*/ 
/*											contractwise and then  calculates the Realized and 		*/
/*											Unrealized Profit & Loss for each of these contracts  */
/*											and then insert into table.														*/				
/*																																						*/	
/******************************************************************************/
/*  Log               : 1.0   31-Aug-2012   Mahesh Shinde 	                  */
/*  Log               : 1.1   23-Sep-2013   Mahesh Shinde 	                  */
/*  Log               : 1.2   28-Nov-2013   Mahesh Shinde 	                  */
/*  Log               : 1.3   15-Oct-2013   Bhushan Sonwane                   */
/*  Log               : 1.4   20-Jan-2014   Mahesh Shinde                     */
/*  Log               : 1.5   28-Jun-2017   SAndip Tambe                      */
/******************************************************************************/
/* 1.0    -   New Release                                                     */	
/* 1.1    -   Changes for rerun 																							*/	
/* 1.2    -   Changes for SLTP Future plus																		*/
/* 1.3    -   Changes for OptionPlus                                          */	
/* 1.4    -   bug fix for OptionPlus                                          */	
/* 1.5    -   GST CHanges [trade level gst details used.expiry trades no considered */	
/******************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fo_fml_def.h>
/* COMMENTED IN VER TOL : TUX on LINUX (Ravindra) * #include <fo_view_def.h> */
#include <fn_session.h>
#include <fn_ddr.h>
#include <fn_read_debug_lvl.h>
#include <fn_span_lib.h>
#define  ALL_EXPIRY 'A'
#define  EXPIRY 'X'
#define  DAILY  'D'

// VER TOL : TUX on LINUX -- Chnaged following function names (Ravindra) 
//(1) fn_buy_opnpstn -> fn_buy_opnpstn_spp
//(2) fn_sell_opnpstn -> fn_sell_opnpstn_spp
//(3) fn_sqroff_pstn -> fn_sqroff_pstn_spp
//(4) fn_sltpbuy_opnpstn -> fn_sltpbuy_opnpstn_spp
//(5) fn_sltpsell_opnpstn -> fn_sltpsell_opnpstn_spp
//(6) fn_optplussell_opnpstn -> fn_optplussell_opnpstn_spp
//(7) fn_optplusbuy_opnpstn -> fn_optplusbuy_opnpstn_spp
//(8) fn_daily_prtfl -> fn_daily_prtfl_spp
//(9) fn_exp_cntrct_optn -> fn_exp_cntrct_optn_spp


int fn_exp_cntrct_optn_spp ( char *c_ServiceName,
											 	  struct st_cntopt_pos *ptr_st_cntopt_pos, 
										 			char *c_errmsg
												);

int fn_exp_cntrct_fut_spp ( char *c_ServiceName,
											 	  struct st_cntfut_pos *ptr_st_cntfut_pos, 
										 			char *c_errmsg
												);


int fn_daily_prtfl_spp ( char *c_ServiceName,
										 struct st_tradebook *ptr_st_trade_book, 
										 double d_ltp,
										 char *c_errmsg
									 );

int fn_buy_opnpstn_spp(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prdct_typ,
                   double d_ltp,	
									 double *d_crst_prft,
                   double *d_uncrst_prft,
                   double *d_avg_pr,
									 char *c_errmsg
									);

int fn_sell_opnpstn_spp(char *c_ServiceName,
                    char *c_cln_mtch_accnt,
                    char *c_xchng_cd,
                    char *c_undrlyng,
                    char *c_expry_dt,
                    char c_exrc_typ,
                    char c_prdct_typ,
                    double d_ltp,	
										double *d_crst_prft,
                    double *d_uncrst_prft,
                    double *d_avg_pr,
									  char *c_errmsg
									 );

int fn_sqroff_pstn_spp (char *c_ServiceName,
                    char *c_cln_mtch_accnt,
                    char *c_xchng_cd,
                    char *c_undrlyng,
                    char *c_expry_dt,
                    char c_exrc_typ,
                    char c_prdct_typ,
                    double d_ltp,	
										double *d_crst_prft,
                    double *d_uncrst_prft,
										char *c_errmsg);

int fn_sltpbuy_opnpstn_spp(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   double *d_opn_sltp_val,
									 char *c_errmsg);

int fn_sltpsell_opnpstn_spp(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   double *d_opn_sltp_val,
									 char *c_errmsg);

/*** Ver 1.3 **  Starts ***/

int fn_optplusbuy_opnpstn_spp(char *c_ServiceName,
                          char *c_cln_mtch_accnt,
                          char *c_xchng_cd,
                          char *c_undrlyng,
                          char *c_expry_dt,
                          char c_exrc_typ,
                          long l_strike_prc,
                          char c_opt_typ,
                          double *d_op_opn_val,
                          char *c_errmsg
                         );

int fn_optplussell_opnpstn_spp(char *c_ServiceName,
                           char *c_cln_mtch_accnt,
                           char *c_xchng_cd,
                           char *c_undrlyng,
                           char *c_expry_dt,
                           char c_exrc_typ,
                           long l_strike_prc,
                           char c_opt_typ,
                           double *d_op_opn_val,
                           char *c_errmsg
                          );

/*** Ver 1.3 ** Ends ***/
	
void SFO_PRCS_PRTFL( TPSVCINFO *rqst )
{
  FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;

  char c_ServiceName[33];
  char c_errmsg[256];
	char c_clm_mtch_accnt[10+1];
	char c_run_mode ='\0';
  char c_run_date[12];
  char c_tmp_xchng_cd[4];
  char c_tmp_undrlyng[7];
  char c_tmp_expry_dt[LEN_DATE];
  char c_tmp_prd_typ    = '\0';
  char c_tmp_opt_typ    = '\0';
  char c_tmp_exrc_typ   = '\0';
	char c_hstry_mode ='N';                 /*** Ver 1.1 ***/
  long l_tmp_strike_prc = 0;
  long l_sltp_opnpstn_qty = 0;
  long l_optplus_qty  = 0;                /*** 1.3 ***/

	int i_trnsctn     = 0;
	int  i_return_val = 0;
	double d_ltp  		= 0.0;
	double d_opn_sltp_val = 0.0;
  double d_op_opn_val = 0.0;              /*** 1.3 ***/

	struct st_tradebook st_trade_book;
	struct st_err_msg st_err_msg;
	struct st_cntopt_pos st_cntopt_pos;
	struct st_cntfut_pos st_cntfut_pos;

  sql_cursor ftd_trd_cursor;
	sql_cursor chrgs_cur;
	sql_cursor opt_expcntrct_cursor;
	sql_cursor fut_expcntrct_cursor;

  ptr_fml_Ibuf = (FBFR32 *)rqst->data;
  strcpy( c_ServiceName, rqst->name );
  INITDBGLVL(c_ServiceName);

  fn_userlog(c_ServiceName,"***SFO_PRCS_PRTFL Started ***");

	i_return_val = fn_unpack_fmltovar ( c_ServiceName,
                                      c_errmsg,
                   		                ptr_fml_Ibuf,
                      		            4,																		/*** Added in ver 1.1 ***/
                          		   			FFO_EBA_MTCH_ACT_NO, ( char * )c_clm_mtch_accnt,  NULL,
																			FFO_OPERATION_TYP,  (char *)&c_run_mode, NULL,
                                      FFO_NXT_TRD_DT, ( char * )c_run_date , NULL, 
																			FFO_RQST_TYP,  (char *)&c_hstry_mode, NULL			/*** Added in ver 1.1 ***/
																		);

  if( i_return_val != 0 )
  {
    fn_errlog( c_ServiceName, "S31005", LIBMSG , c_errmsg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
  }

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Processing Match Acount |%s|",c_clm_mtch_accnt); 
		fn_userlog( c_ServiceName, "Run Date is 					|%s|",c_run_date );
    fn_userlog( c_ServiceName, "Run Type is 					:%c:",c_run_mode );
    fn_userlog( c_ServiceName, "ReRun mode is 				:%c:",c_hstry_mode );   /*** Ver 1.1 ***/
  }

  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );

  if ( i_trnsctn == -1 )
  {
     fn_errlog ( c_ServiceName, "S31010", LIBMSG, c_errmsg );
     tpfree ( ( char * ) ptr_fml_Obuf );
     Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
     tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }	

	if ( c_run_mode == DAILY )
  {
     if(DEBUG_MSG_LVL_3)
     {
       fn_userlog(c_ServiceName," Inside DAILY ...");
     }

		EXEC SQL ALLOCATE :ftd_trd_cursor;

		if (c_hstry_mode == 'R')  /*** Ver 1.1 ***/
		{
			EXEC SQL  EXECUTE
          BEGIN
            OPEN  :ftd_trd_cursor FOR
                SELECT  FTD_CLM_MTCH_ACCNT,
                        FTD_XCHNG_CD,                                                                   
                        FTD_UNDRLYNG,
                        FTD_INDSTK,
                        FTD_PRDCT_TYP,
                        FTD_EXPRY_DT,
                        FTD_OPT_TYP,
                        FTD_EXER_TYP,
                        FTD_STRK_PRC
                FROM    FTD_FO_TRD_DTLS_HSTRY
                WHERE   FTD_CLM_MTCH_ACCNT like :c_clm_mtch_accnt
								AND     trunc(FTD_TRD_DT) = :c_run_date
                GROUP BY FTD_CLM_MTCH_ACCNT,
                        FTD_XCHNG_CD,
                        FTD_UNDRLYNG,
                        FTD_INDSTK,
                        FTD_PRDCT_TYP,
                        FTD_EXPRY_DT,
                        FTD_OPT_TYP,
                        FTD_EXER_TYP,
                        FTD_STRK_PRC;
                END;
      END-EXEC;

    	if ( SQLCODE != 0 )
    	{
      	fn_errlog( c_ServiceName, "S31015", SQLMSG, c_errmsg  );
      	EXEC SQL CLOSE :ftd_trd_cursor;
      	EXEC SQL FREE  :ftd_trd_cursor;
      	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    	}
		}
		else
		{
	 		EXEC SQL  EXECUTE
        		BEGIN
          		OPEN  :ftd_trd_cursor FOR
              		SELECT  FTD_CLM_MTCH_ACCNT,
													FTD_XCHNG_CD,
													FTD_UNDRLYNG,
													FTD_INDSTK,
													FTD_PRDCT_TYP,
													FTD_EXPRY_DT,
													FTD_OPT_TYP,
													FTD_EXER_TYP,
													FTD_STRK_PRC
									FROM 		FTD_FO_TRD_DTLS
									WHERE 	FTD_CLM_MTCH_ACCNT like :c_clm_mtch_accnt
									GROUP BY FTD_CLM_MTCH_ACCNT,
                      		FTD_XCHNG_CD,
                      		FTD_UNDRLYNG,
													FTD_INDSTK,
                      		FTD_PRDCT_TYP,
                      		FTD_EXPRY_DT,
                      		FTD_OPT_TYP,
                      		FTD_EXER_TYP,
                      		FTD_STRK_PRC;
							 		END;
    		END-EXEC;
	
			if ( SQLCODE != 0 )
  		{
    		fn_errlog( c_ServiceName, "S31020", SQLMSG, c_errmsg  );
    		EXEC SQL CLOSE :ftd_trd_cursor;
    		EXEC SQL FREE  :ftd_trd_cursor;
    		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  		}
		}
	
		while (1)
		{
			EXEC SQL FETCH :ftd_trd_cursor
              	INTO :st_trade_book.c_cln_mtch_accnt,
									 	:st_trade_book.c_xchng_cd,
									 	:st_trade_book.c_undrlyng,
									 	:st_trade_book.c_ctgry_indstk,
									 	:st_trade_book.c_prd_typ,
									 	:st_trade_book.c_expry_dt,
									 	:st_trade_book.c_opt_typ,	
									 	:st_trade_book.c_exrc_typ,
									 	:st_trade_book.l_strike_prc;
				
    	if ( SQLCODE != 0 )
    	{
      	if ( SQLCODE == NO_DATA_FOUND )
      	{
        	break;
      	}
      	else
      	{
        	fn_errlog( c_ServiceName, "S31025", SQLMSG, c_errmsg  );
					fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
        	EXEC SQL CLOSE :ftd_trd_cursor;
        	EXEC SQL FREE  :ftd_trd_cursor;
        	tpfree ( ( char * ) ptr_fml_Obuf );
        	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      	}
    	}
	
			rtrim(st_trade_book.c_cln_mtch_accnt);
			rtrim(st_trade_book.c_xchng_cd);
			rtrim(st_trade_book.c_undrlyng);
			rtrim(st_trade_book.c_expry_dt);
			
			if(DEBUG_MSG_LVL_3)
    	{
				fn_userlog(c_ServiceName," Fetch Record is :");		
				fn_userlog(c_ServiceName,"st_trade_book.c_cln_mtch_accnt |%s|",st_trade_book.c_cln_mtch_accnt);		
				fn_userlog(c_ServiceName,"st_trade_book.c_xchng_cd			 |%s|",st_trade_book.c_xchng_cd);		
				fn_userlog(c_ServiceName,"st_trade_book.c_undrlyng			 |%s|",st_trade_book.c_undrlyng);		
				fn_userlog(c_ServiceName,"st_trade_book.c_prd_typ				 |%c|",st_trade_book.c_prd_typ);		
				fn_userlog(c_ServiceName,"st_trade_book.c_expry_dt			 |%s|",st_trade_book.c_expry_dt);		
				fn_userlog(c_ServiceName,"st_trade_book.c_opt_typ				 |%c|",st_trade_book.c_opt_typ);		
				fn_userlog(c_ServiceName,"st_trade_book.c_exrc_typ			 |%c|",st_trade_book.c_exrc_typ);		
				fn_userlog(c_ServiceName,"st_trade_book.l_strike_prc		 |%ld|",st_trade_book.l_strike_prc);		
			}
			
			/*** Get the LTP for fetch contract ***/
	
			EXEC SQL
        	SELECT  NVL(FTQ_LST_TRD_PRC,0)
        	INTO    :d_ltp
        	FROM    FTQ_FO_TRD_QT
        	WHERE   FTQ_XCHNG_CD  = :st_trade_book.c_xchng_cd
        	/*** AND     FTQ_PRDCT_TYP = (DECODE(:st_trade_book.c_prd_typ,'F','F','P','F','U','F','O'))	** Commented in Ver 1.3 ***/
          AND     FTQ_PRDCT_TYP = (DECODE(:st_trade_book.c_prd_typ,'F','F','P','F','U','F','I','O','O'))  /*** Ver 1.3 ***/
        	AND     FTQ_UNDRLYNG  = :st_trade_book.c_undrlyng
        	AND     FTQ_EXPRY_DT  = :st_trade_book.c_expry_dt
        	AND     FTQ_EXER_TYP  = :st_trade_book.c_exrc_typ
        	AND     FTQ_OPT_TYP   = :st_trade_book.c_opt_typ
        	AND     FTQ_STRK_PRC  = :st_trade_book.l_strike_prc;
	
      if(SQLCODE  !=  0 && SQLCODE != NO_DATA_FOUND )
      {
				fn_errlog( c_ServiceName, "S31030", SQLMSG, c_errmsg  );
				fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
       	EXEC SQL CLOSE :ftd_trd_cursor;
       	EXEC SQL FREE  :ftd_trd_cursor;
       	tpfree ( ( char * ) ptr_fml_Obuf );
       	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
       	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
	
      if( SQLCODE == NO_DATA_FOUND ) 
      {
       	d_ltp = 0.0;
      }
			
			i_return_val = fn_daily_prtfl_spp ( c_ServiceName,
																			&st_trade_book,
																			d_ltp,
																			c_errmsg
																  	);
		
			if(i_return_val != 0)
			{
				fn_errlog( c_ServiceName, "S31035", SQLMSG, c_errmsg  );
				fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
       	EXEC SQL CLOSE :ftd_trd_cursor;
       	EXEC SQL FREE  :ftd_trd_cursor;
       	tpfree ( ( char * ) ptr_fml_Obuf );
       	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
       	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}
		} /*** END of while loop ***/
	}		/*** END of Daily ***/

	EXEC SQL CLOSE :ftd_trd_cursor;
  EXEC SQL FREE  :ftd_trd_cursor;
	
	if ( c_run_mode == EXPIRY )
 	{
		if(DEBUG_MSG_LVL_3)
   	{
   		fn_userlog( c_ServiceName, "Processing Match Acount |%s|",c_clm_mtch_accnt);
   		fn_userlog( c_ServiceName, "Run Date is           	|%s|",c_run_date );
   		fn_userlog( c_ServiceName, "Run Type is           	:%c:",c_run_mode );
	  	fn_userlog( c_ServiceName, "Inside EXPIRY ..."); 
			fn_userlog( c_ServiceName, "ReRun mode is         	:%c:",c_hstry_mode );   /*** Ver 1.1 ***/
		}

		EXEC SQL ALLOCATE :opt_expcntrct_cursor;

		if ( c_hstry_mode =='R')    /*** Added in ver 1.1 *****/
		{
			EXEC SQL  EXECUTE
                BEGIN
                OPEN  :opt_expcntrct_cursor FOR
                    SELECT  fop_clm_mtch_accnt,
                            fop_xchng_cd,
                            fop_prdct_typ,
                            fop_indstk,
                            fop_undrlyng,
                            to_char(fop_expry_dt,'DD-Mon-YYYY'),
                            fop_exer_typ,
                            fop_opt_typ,
                            fop_strk_prc,
                            fop_opnpstn_qty,
                            fop_opnpstn_val
                    FROM    fop_fo_options_pstn_hstry
                    WHERE   fop_clm_mtch_accnt  = :c_clm_mtch_accnt       /** ver 1.3 like replaced by = */
                    AND     fop_expry_dt = to_date ( :c_run_date,'dd-mon-yyyy')
                    AND
                    (
                            fop_opnpstn_qty     != 0
                       OR   fop_exrc_qty        != 0
                       OR   fop_asgnd_qty       != 0
                       OR   fop_buy_exctd_qty   != 0
                       OR   fop_sell_exctd_qty  != 0
                    )
             UNION ALL
                    SELECT  fcp_clm_mtch_accnt,
                            fcp_xchng_cd,
                            fcp_prdct_typ,
                            fcp_indstk,
                            fcp_undrlyng,
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            NVL( FCP_OPT_TYP , '*'),
                            NVL( FCP_STRK_PRC , 0 ),
                            fcp_opnpstn_qty,
                            fcp_opnpstn_val
                      FROM  FCP_FO_SPN_CNTRCT_PSTN_HSTRY
                      WHERE fcp_clm_mtch_accnt = :c_clm_mtch_accnt  /** ver 1.3 like replaced by = */
                      AND   fcp_prdct_typ       = 'O'
                      AND   fcp_expry_dt = to_date ( :c_run_date,'dd-mon-yyyy')
                      AND
                      (     fcp_opnpstn_qty     != 0
                        OR  fcp_exrc_qty        != 0
                        OR  fcp_asgnd_qty       != 0
                        OR  fcp_buy_exctd_qty   != 0
                        OR  fcp_sell_exctd_qty  != 0
                      )
					 		UNION ALL                       /* Ver 1.3 Option Plus Portfolio */
         						SELECT  distinct FOD_CLM_MTCH_ACCNT,
														FOD_XCHNG_CD,
														'O',
                						FOD_INDSTK,
                						FOD_UNDRLYNG,
                						to_char(FOD_EXPRY_DT,'DD-Mon-YYYY'),
                						FOD_EXER_TYP,
														NVL( FOD_OPT_TYP , '*'),
                            NVL( FOD_STRK_PRC , 0 ),
                						0,
                						0
         						FROM   FOD_FO_ORDR_DTLS_HSTRY
         						WHERE  FOD_CLM_MTCH_ACCNT = :c_clm_mtch_accnt
         						AND    FOD_EXPRY_DT = to_date ( :c_run_date,'dd-mon-yyyy')
         						AND    FOD_PRDCT_TYP = 'I'
         						AND    FOD_EXEC_QTY != 0
										ORDER BY   1,
                               2,
                               3,
                               5,
                               6,
                               8,
                               9;
                      END;
                    END-EXEC;

    	if(SQLCODE != 0)
    	{
       	fn_errlog( c_ServiceName, "S31040", SQLMSG, c_errmsg  );
       	fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
       	EXEC SQL CLOSE :opt_expcntrct_cursor;
       	EXEC SQL FREE  :opt_expcntrct_cursor;
       	tpfree ( ( char * ) ptr_fml_Obuf );
       	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
       	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    	}
		}
		else
		{
			EXEC SQL  EXECUTE
                BEGIN
                OPEN  :opt_expcntrct_cursor FOR
                    SELECT  fop_clm_mtch_accnt,
													  fop_xchng_cd,
                            fop_prdct_typ,
                            fop_indstk,
                            fop_undrlyng,
                            to_char(fop_expry_dt,'DD-Mon-YYYY'),
                            fop_exer_typ,
                            fop_opt_typ,
                            fop_strk_prc,
                            fop_opnpstn_qty,
                            fop_opnpstn_val
                    FROM    fop_fo_options_pstn
                    WHERE   fop_clm_mtch_accnt  = :c_clm_mtch_accnt  /** ver 1.3 like replaced by = */
                    AND     fop_expry_dt = to_date ( :c_run_date,'dd-mon-yyyy')
                    AND
                    (
                            fop_opnpstn_qty 		!= 0
                       OR   fop_exrc_qty    		!= 0
                       OR   fop_asgnd_qty   		!= 0
                       OR   fop_buy_exctd_qty   != 0
                       OR   fop_sell_exctd_qty  != 0
                    )
						 UNION ALL                   
                    SELECT  fcp_clm_mtch_accnt,
													  fcp_xchng_cd,
                            fcp_prdct_typ,
                            fcp_indstk,
                            fcp_undrlyng,
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            NVL( FCP_OPT_TYP , '*'),
                            NVL( FCP_STRK_PRC , 0 ),
                            fcp_opnpstn_qty,
                            fcp_opnpstn_val
                      FROM  FCP_FO_SPN_CNTRCT_PSTN
                      WHERE fcp_clm_mtch_accnt = :c_clm_mtch_accnt  /** ver 1.3 like replaced by = */
                      AND   fcp_prdct_typ       = 'O'
                      AND   fcp_expry_dt = to_date ( :c_run_date,'dd-mon-yyyy')
                      AND
                      (     fcp_opnpstn_qty     != 0
                        OR  fcp_exrc_qty        != 0
                        OR  fcp_asgnd_qty       != 0
                        OR  fcp_buy_exctd_qty   != 0
                        OR  fcp_sell_exctd_qty  != 0
                      )
							UNION ALL                       /* Ver 1.3 Option Plus Portfolio */
                    SELECT  distinct FOD_CLM_MTCH_ACCNT,
                            FOD_XCHNG_CD,
                            'O',
                            FOD_INDSTK,
                            FOD_UNDRLYNG,
                            to_char(FOD_EXPRY_DT,'DD-Mon-YYYY'),
                            FOD_EXER_TYP,
                            NVL( FOD_OPT_TYP , '*'),
                            NVL( FOD_STRK_PRC , 0 ),
                            0,
                            0
                    FROM   FOD_FO_ORDR_DTLS_HSTRY
                    WHERE  FOD_CLM_MTCH_ACCNT = :c_clm_mtch_accnt
                    AND    FOD_EXPRY_DT = to_date ( :c_run_date,'dd-mon-yyyy')
                    AND    FOD_PRDCT_TYP = 'I'
                    AND    FOD_EXEC_QTY != 0
								UNION ALL                       /* Ver 1.3 Option Plus Portfolio */
                    SELECT  distinct FOD_CLM_MTCH_ACCNT,
                            FOD_XCHNG_CD,
                            'O',
                            FOD_INDSTK,
                            FOD_UNDRLYNG,
                            to_char(FOD_EXPRY_DT,'DD-Mon-YYYY'),
                            FOD_EXER_TYP,
                            NVL( FOD_OPT_TYP , '*'),
                            NVL( FOD_STRK_PRC , 0 ),
                            0,
                            0
                    FROM   FOD_FO_ORDR_DTLS
                    WHERE  FOD_CLM_MTCH_ACCNT = :c_clm_mtch_accnt
                    AND    FOD_EXPRY_DT = to_date ( :c_run_date,'dd-mon-yyyy')
                    AND    FOD_PRDCT_TYP = 'I'
                    AND    FOD_EXEC_QTY != 0		
                      ORDER BY  1,
                                2,
															  3,	
                                5,
                                6,
                                8,
                                9;      
                      END;
                    END-EXEC;
	  
			if(SQLCODE != 0)
			{
       	fn_errlog( c_ServiceName, "S31045", SQLMSG, c_errmsg  );
       	fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
       	EXEC SQL CLOSE :opt_expcntrct_cursor;
       	EXEC SQL FREE  :opt_expcntrct_cursor;
       	tpfree ( ( char * ) ptr_fml_Obuf );
       	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
       	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    	}
		}

		while (1)
		{
			EXEC SQL FETCH :opt_expcntrct_cursor
           INTO :st_cntopt_pos.c_cln_mtch_accnt, 
							  :st_cntopt_pos.c_xchng_cd,
                :st_cntopt_pos.c_prd_typ,
                :st_cntopt_pos.c_ctgry_indstk,
                :st_cntopt_pos.c_undrlyng,
                :st_cntopt_pos.c_expry_dt,
                :st_cntopt_pos.c_exrc_typ,
                :st_cntopt_pos.c_opt_typ,
                :st_cntopt_pos.l_strike_prc,
                :st_cntopt_pos.l_opnpstn_qty,
                :st_cntopt_pos.d_org_opn_val;
  
			if ( SQLCODE != 0 )
 			{
   			if ( SQLCODE == NO_DATA_FOUND )
   			{
     			break;
   			}
   		 	else
   			{		
					fn_errlog( c_ServiceName, "S31050", SQLMSG, c_errmsg  );
     			fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
     			EXEC SQL CLOSE :opt_expcntrct_cursor;
     			EXEC SQL FREE  :opt_expcntrct_cursor;
     			tpfree ( ( char * ) ptr_fml_Obuf );
     			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
     			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
				}
 			}	 

		  rtrim(st_cntopt_pos.c_cln_mtch_accnt);
			rtrim(st_cntopt_pos.c_xchng_cd);
   		rtrim(st_cntopt_pos.c_undrlyng);
   		rtrim(st_cntopt_pos.c_expry_dt);

   		if(DEBUG_MSG_LVL_3)
   		{
     		fn_userlog(c_ServiceName,"After fetched contract");
     		fn_userlog(c_ServiceName,"st_cntopt_pos.c_clm_mtch_accnt    |%s|",st_cntopt_pos.c_cln_mtch_accnt);
     		fn_userlog(c_ServiceName,"st_cntopt_pos.c_xchng_cd    |%s|",st_cntopt_pos.c_xchng_cd);
     		fn_userlog(c_ServiceName,"st_cntopt_pos.c_prd_typ     |%c|",st_cntopt_pos.c_prd_typ);
     		fn_userlog(c_ServiceName,"st_cntopt_pos.c_ctgry_indstk|%c|",st_cntopt_pos.c_ctgry_indstk);
     		fn_userlog(c_ServiceName,"st_cntopt_pos.c_undrlyng    |%s|",st_cntopt_pos.c_undrlyng);
     		fn_userlog(c_ServiceName,"st_cntopt_pos.c_expry_dt    |%s|",st_cntopt_pos.c_expry_dt);
     		fn_userlog(c_ServiceName,"st_cntopt_pos.c_exrc_typ    |%c|",st_cntopt_pos.c_exrc_typ);
     		fn_userlog(c_ServiceName,"st_cntopt_pos.c_opt_typ     |%c|",st_cntopt_pos.c_opt_typ);
     		fn_userlog(c_ServiceName,"st_cntopt_pos.l_strike_prc  |%ld|",st_cntopt_pos.l_strike_prc);
   		}

			i_return_val = fn_exp_cntrct_optn_spp ( c_ServiceName,
																					 &st_cntopt_pos,
																					 c_errmsg
																				 );

			if(i_return_val != 0)
			{
				fn_errlog( c_ServiceName, "S31055", SQLMSG, c_errmsg  );
				fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
				EXEC SQL CLOSE :opt_expcntrct_cursor;
				EXEC SQL FREE  :opt_expcntrct_cursor;
				tpfree ( ( char * ) ptr_fml_Obuf );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}

		}/*** END of while loop ***/
   		
		if(DEBUG_MSG_LVL_3)
   	{
    	fn_userlog(c_ServiceName,"After Option contracts .");
		}

		EXEC SQL ALLOCATE :fut_expcntrct_cursor;
	
		if ( c_hstry_mode =='R')    /*** Added in ver 1.1 *****/
		{
			EXEC SQL  EXECUTE
       BEGIN
       OPEN  :fut_expcntrct_cursor FOR
       SELECT  ffp_xchng_cd,
               ffp_indstk,
               ffp_undrlyng,
               to_char(ffp_expry_dt,'DD-Mon-YYYY'),
               ffp_exer_typ,
               SUM (ffp_opnpstn_qty),
               SUM (ffp_opnpstn_val),
               SUM (ffp_mtm_opn_val),
               ffp_clm_mtch_accnt
         FROM  ffp_fo_futures_pstn_hstry
         WHERE   ffp_clm_mtch_accnt = :c_clm_mtch_accnt
         AND     ffp_expry_dt = to_date ( :c_run_date,'dd-mon-yyyy')
         AND
         (       ffp_buy_exctd_qty != 0
           OR    ffp_sell_exctd_qty  != 0
         )
         GROUP BY  ffp_xchng_cd,
                   ffp_indstk,
                   ffp_undrlyng,
                   ffp_expry_dt,
                   ffp_exer_typ,
                   ffp_clm_mtch_accnt
     	UNION ALL
       SELECT  fcp_xchng_cd,
               fcp_indstk,
               fcp_undrlyng,
               to_char(fcp_expry_dt,'DD-Mon-YYYY'),
               fcp_exer_typ,
               SUM (fcp_opnpstn_qty),
               SUM (fcp_opnpstn_val),
               SUM (FCP_MTM_OPN_VAL),
               fcp_clm_mtch_accnt
       	FROM  FCP_FO_SPN_CNTRCT_PSTN_HSTRY
       	WHERE   fcp_clm_mtch_accnt = :c_clm_mtch_accnt
       	AND     fcp_expry_dt = to_date ( :c_run_date,'dd-mon-yyyy')
       	AND   FCP_PRDCT_TYP      = 'F'
       	AND
       	(     fcp_buy_exctd_qty != 0
       	OR    fcp_sell_exctd_qty  != 0
       	)
       	GROUP BY  fcp_xchng_cd,
                 	fcp_indstk,
                 	fcp_undrlyng,
                 	fcp_expry_dt,
                 	fcp_exer_typ,
                 	fcp_clm_mtch_accnt
				UNION ALL                          /* Ver 1.2 SLTP FPlus Portfolio */
         SELECT FOD_XCHNG_CD,
                FOD_INDSTK,
                FOD_UNDRLYNG,
                to_char(FOD_EXPRY_DT,'DD-Mon-YYYY'),
                FOD_EXER_TYP,
								0,
								0,
								0,
                FOD_CLM_MTCH_ACCNT
         FROM   FOD_FO_ORDR_DTLS_HSTRY
         WHERE  FOD_CLM_MTCH_ACCNT = :c_clm_mtch_accnt
         AND    FOD_EXPRY_DT = to_date ( :c_run_date,'dd-mon-yyyy')
         AND    fod_prdct_typ = 'U'
         AND    fod_exec_qty != 0
         GROUP BY  FOD_XCHNG_CD,
         					 FOD_INDSTK,
                   FOD_UNDRLYNG,
                   FOD_EXPRY_DT,
                   FOD_EXER_TYP,
                   FOD_CLM_MTCH_ACCNT
      	ORDER BY  1,9,3,4;
     	END;
     	END-EXEC;
			
			if ( SQLCODE != 0 )
    	{
      	fn_errlog( c_ServiceName, "S31060", SQLMSG, c_errmsg  );
      	fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
      	EXEC SQL CLOSE :fut_expcntrct_cursor;
      	EXEC SQL FREE :fut_expcntrct_cursor;
      	tpfree ( ( char * ) ptr_fml_Obuf );
      	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    	}
		}
		else
		{
			EXEC SQL  EXECUTE
       BEGIN
       OPEN  :fut_expcntrct_cursor FOR
       SELECT  ffp_xchng_cd,
               ffp_indstk,
               ffp_undrlyng,
               to_char(ffp_expry_dt,'DD-Mon-YYYY'),
               ffp_exer_typ,
               SUM (ffp_opnpstn_qty),
               SUM (ffp_opnpstn_val),
               SUM (ffp_mtm_opn_val),  
               ffp_clm_mtch_accnt
         FROM  ffp_fo_futures_pstn
         WHERE   ffp_clm_mtch_accnt = :c_clm_mtch_accnt
         AND     ffp_expry_dt = to_date ( :c_run_date,'dd-mon-yyyy')
         AND
         (       ffp_buy_exctd_qty != 0
           OR    ffp_sell_exctd_qty  != 0
         )
         GROUP BY  ffp_xchng_cd,
                   ffp_indstk,
                   ffp_undrlyng,
                   ffp_expry_dt,
                   ffp_exer_typ,
                   ffp_clm_mtch_accnt
     	UNION ALL
       SELECT  fcp_xchng_cd,
               fcp_indstk,
               fcp_undrlyng,
               to_char(fcp_expry_dt,'DD-Mon-YYYY'),
               fcp_exer_typ,
               SUM (fcp_opnpstn_qty),
               SUM (fcp_opnpstn_val),
               SUM (FCP_MTM_OPN_VAL),
               fcp_clm_mtch_accnt
       FROM  FCP_FO_SPN_CNTRCT_PSTN
       WHERE   fcp_clm_mtch_accnt = :c_clm_mtch_accnt
       AND     fcp_expry_dt = to_date ( :c_run_date,'dd-mon-yyyy')
       AND   FCP_PRDCT_TYP      = 'F'
       AND
       (     fcp_buy_exctd_qty != 0
       OR    fcp_sell_exctd_qty  != 0
       )
       GROUP BY  fcp_xchng_cd,
       					 fcp_indstk,
       					 fcp_undrlyng,
       					 fcp_expry_dt,
       					 fcp_exer_typ,
       					 fcp_clm_mtch_accnt
			UNION ALL                          /* Ver 1.2 SLTP FPlus Portfolio */
         SELECT FOD_XCHNG_CD,
                FOD_INDSTK,
                FOD_UNDRLYNG,
                to_char(FOD_EXPRY_DT,'DD-Mon-YYYY'),
                FOD_EXER_TYP,
                0,
                0,
                0,
                FOD_CLM_MTCH_ACCNT
         FROM   FOD_FO_ORDR_DTLS_HSTRY
         WHERE  FOD_CLM_MTCH_ACCNT = :c_clm_mtch_accnt
         AND    FOD_EXPRY_DT = to_date ( :c_run_date,'dd-mon-yyyy')
         AND    fod_prdct_typ = 'U'
         AND    fod_exec_qty != 0
         GROUP BY  FOD_XCHNG_CD,
                   FOD_INDSTK,
                   FOD_UNDRLYNG,
                   FOD_EXPRY_DT,
                   FOD_EXER_TYP,
                   FOD_CLM_MTCH_ACCNT
			UNION ALL                          /* Ver 1.2 SLTP FPlus Portfolio */
         SELECT FOD_XCHNG_CD,
                FOD_INDSTK,
                FOD_UNDRLYNG,
                to_char(FOD_EXPRY_DT,'DD-Mon-YYYY'),
                FOD_EXER_TYP,
                0,
                0,
                0,
                FOD_CLM_MTCH_ACCNT
         FROM   FOD_FO_ORDR_DTLS
         WHERE  FOD_CLM_MTCH_ACCNT = :c_clm_mtch_accnt
         AND    FOD_EXPRY_DT = to_date ( :c_run_date,'dd-mon-yyyy')
         AND    fod_prdct_typ = 'U'
         AND    fod_exec_qty != 0
         GROUP BY  FOD_XCHNG_CD,
                   FOD_INDSTK,
                   FOD_UNDRLYNG,
                   FOD_EXPRY_DT,
                   FOD_EXER_TYP,
                   FOD_CLM_MTCH_ACCNT
			ORDER BY  1,9,3,4;
		 END;
     END-EXEC;

			if ( SQLCODE != 0 )
			{
				fn_errlog( c_ServiceName, "S31065", SQLMSG, c_errmsg  );
      	fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
      	EXEC SQL CLOSE :fut_expcntrct_cursor;
      	EXEC SQL FREE :fut_expcntrct_cursor;
      	tpfree ( ( char * ) ptr_fml_Obuf );
      	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}
		}
		
		while (1)
		{
		  EXEC SQL FETCH :fut_expcntrct_cursor
              INTO :st_cntfut_pos.c_xchng_cd,
                   :st_cntfut_pos.c_ctgry_indstk,
                   :st_cntfut_pos.c_undrlyng,
                   :st_cntfut_pos.c_expry_dt,
                   :st_cntfut_pos.c_exrc_typ,
                   :st_cntfut_pos.l_opnpstn_qty,
                   :st_cntfut_pos.d_org_opn_val,
                   :st_cntfut_pos.d_mtm_opn_val, 
                   :st_cntfut_pos.c_cln_mtch_accnt;

    	if ( SQLCODE != 0 )
    	{
      	if ( SQLCODE == NO_DATA_FOUND )
      	{
        	break;
      	}
      	else
      	{
        	fn_errlog( c_ServiceName, "S31070", SQLMSG, c_errmsg  );
					fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
        	EXEC SQL CLOSE :fut_expcntrct_cursor;
        	EXEC SQL FREE :fut_expcntrct_cursor;
        	tpfree ( ( char * ) ptr_fml_Obuf );
        	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      	}
    	}
    	rtrim(st_cntfut_pos.c_xchng_cd);
    	rtrim(st_cntfut_pos.c_undrlyng);
    	rtrim(st_cntfut_pos.c_expry_dt);
    	rtrim(st_cntfut_pos.c_cln_mtch_accnt);
	
    	if(DEBUG_MSG_LVL_3)
    	{
      	fn_userlog(c_ServiceName,"Before if condition");
      	fn_userlog(c_ServiceName,"Expiry Date Is      :%s:",st_cntfut_pos.c_expry_dt);
      	fn_userlog(c_ServiceName,"Underlying Is       :%s:",st_cntfut_pos.c_undrlyng);
      	fn_userlog(c_ServiceName,"Exchnge Is          :%s:",st_cntfut_pos.c_xchng_cd);
      	fn_userlog(c_ServiceName,"copied exchange Is  :%s:",c_tmp_xchng_cd);
      	fn_userlog(c_ServiceName,"copied Underlying Is:%s:",c_tmp_undrlyng);
      	fn_userlog(c_ServiceName,"copied expiry  Is   :%s:",c_tmp_expry_dt);
      	fn_userlog(c_ServiceName,"Open Position qty Is:%ld:",st_cntfut_pos.l_opnpstn_qty);
      	fn_userlog(c_ServiceName,"open position val Is:%lf:",st_cntfut_pos.d_org_opn_val);
      	fn_userlog(c_ServiceName,"open mtm val Is     :%lf:",st_cntfut_pos.d_mtm_opn_val);
    	}

			i_return_val = fn_exp_cntrct_fut_spp ( c_ServiceName,
                                           &st_cntfut_pos,
                                           c_errmsg
                                         );

      if(i_return_val != 0)
      {
        fn_errlog( c_ServiceName, "S31075", SQLMSG, c_errmsg  );
        fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
        EXEC SQL CLOSE :fut_expcntrct_cursor;
        EXEC SQL FREE  :fut_expcntrct_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }	

		} /*** END of while loop ***/	
	
		/**** Ver 1.2 **********

		EXEC SQL
				INSERT INTO PCP_PRTFL_CNTRCT_PSTN_HSTRY
      (
        PCP_CLM_MTCH_ACCNT,
        PCP_XCHNG_CD,
        PCP_PRDCT_TYP,
        PCP_INDSTK,
        PCP_UNDRLYNG,
        PCP_EXPRY_DT,
        PCP_EXER_TYP,
        PCP_STRK_PRC,
        PCP_OPT_TYP,
        PCP_OPNPSTN_FLW,
        PCP_OPNPSTN_QTY,
        PCP_OPNPSTN_VAL,
        PCP_RLLZD_PNL,
        PCP_UNRLLZD_PNL,
        PCP_TOTAL_PNL,
        PCP_CRRNT_MKT_PRC,
        PCP_BRKG_VAL,
        PCP_AVG_TRD_PRC,
        PCP_SPAN_FLG,
        PCP_TM_STMP
      )
			(
				SELECT 
				PCP_CLM_MTCH_ACCNT,
        PCP_XCHNG_CD,
        PCP_PRDCT_TYP,
        PCP_INDSTK,
        PCP_UNDRLYNG,
        PCP_EXPRY_DT,
        PCP_EXER_TYP,
        PCP_STRK_PRC,
        PCP_OPT_TYP,
        PCP_OPNPSTN_FLW,
        PCP_OPNPSTN_QTY,
        PCP_OPNPSTN_VAL,
        PCP_RLLZD_PNL,
        PCP_UNRLLZD_PNL,
        PCP_TOTAL_PNL,
        PCP_CRRNT_MKT_PRC,
        PCP_BRKG_VAL,
        PCP_AVG_TRD_PRC,
        PCP_SPAN_FLG,
        PCP_TM_STMP
				FROM PCP_PRTFL_CNTRCT_PSTN
				WHERE PCP_CLM_MTCH_ACCNT = :c_clm_mtch_accnt
				AND   PCP_EXPRY_DT = to_date ( :c_run_date,'dd-mon-yyyy')
			);
		
		if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
			fn_errlog( c_ServiceName, "S31080", SQLMSG, c_errmsg  );
      fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
      EXEC SQL CLOSE :fut_expcntrct_cursor;
      EXEC SQL FREE  :fut_expcntrct_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}		
		
		EXEC SQL 
			DELETE FROM PCP_PRTFL_CNTRCT_PSTN
			WHERE PCP_CLM_MTCH_ACCNT = :c_clm_mtch_accnt
      AND   PCP_EXPRY_DT = to_date ( :c_run_date,'dd-mon-yyyy');

		if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
      fn_errlog( c_ServiceName, "S31085", SQLMSG, c_errmsg  );
      fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
      EXEC SQL CLOSE :fut_expcntrct_cursor;
      EXEC SQL FREE  :fut_expcntrct_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
	
		*************** Commented in ver 1.2 as SLTP future plus added in union for expiry ***/

	}  /*** END of expiry loop **/

	if ( c_run_mode == ALL_EXPIRY )
  {
    if(DEBUG_MSG_LVL_3)
    {
      fn_userlog( c_ServiceName, "Processing Match Acount |%s|",c_clm_mtch_accnt);
      fn_userlog( c_ServiceName, "Run Date is             |%s|",c_run_date );
      fn_userlog( c_ServiceName, "Run Type is             :%c:",c_run_mode );
      fn_userlog( c_ServiceName, "Inside EXPIRY ...");
    }

    EXEC SQL ALLOCATE :opt_expcntrct_cursor;

    EXEC SQL  EXECUTE
                BEGIN
                OPEN  :opt_expcntrct_cursor FOR
                    SELECT  fop_clm_mtch_accnt,
                            fop_xchng_cd,
                            fop_prdct_typ,
                            fop_indstk,
                            fop_undrlyng,
                            to_char(fop_expry_dt,'DD-Mon-YYYY'),
                            fop_exer_typ,
                            fop_opt_typ,
                            fop_strk_prc,
                            fop_opnpstn_qty,
                            fop_opnpstn_val
                    FROM    fop_fo_options_pstn
                    WHERE   fop_clm_mtch_accnt  = :c_clm_mtch_accnt   /** Ver 1.3 like replaced by "=" **/
                    AND     fop_expry_dt <= to_date ( :c_run_date,'dd-mon-yyyy')
                    AND
                    (
                            fop_opnpstn_qty     != 0
                       OR   fop_exrc_qty        != 0
                       OR   fop_asgnd_qty       != 0
                       OR   fop_buy_exctd_qty   != 0
                       OR   fop_sell_exctd_qty  != 0
                    )
             UNION ALL
										SELECT  fop_clm_mtch_accnt,
                            fop_xchng_cd,
                            fop_prdct_typ,
                            fop_indstk,
                            fop_undrlyng,
                            to_char(fop_expry_dt,'DD-Mon-YYYY'),
                            fop_exer_typ,
                            fop_opt_typ,
                            fop_strk_prc,
                            fop_opnpstn_qty,
                            fop_opnpstn_val
                    FROM    fop_fo_options_pstn_hstry
                    WHERE   fop_clm_mtch_accnt  = :c_clm_mtch_accnt  /** Ver 1.3 like replaced by "=" **/
                    AND     fop_expry_dt <= to_date ( :c_run_date,'dd-mon-yyyy')
                    AND
                    (
                            fop_opnpstn_qty     != 0
                       OR   fop_exrc_qty        != 0
                       OR   fop_asgnd_qty       != 0
                       OR   fop_buy_exctd_qty   != 0
                       OR   fop_sell_exctd_qty  != 0
                    )
								UNION ALL
										SELECT  fcp_clm_mtch_accnt,
                            fcp_xchng_cd,
                            fcp_prdct_typ,
                            fcp_indstk,
                            fcp_undrlyng,
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            NVL( FCP_OPT_TYP , '*'),
                            NVL( FCP_STRK_PRC , 0 ),
                            fcp_opnpstn_qty,
                            fcp_opnpstn_val
                      FROM  FCP_FO_SPN_CNTRCT_PSTN
                      WHERE fcp_clm_mtch_accnt = :c_clm_mtch_accnt  /** Ver 1.3 like replaced by "=" **/
                      AND   fcp_prdct_typ       = 'O'
                      AND   fcp_expry_dt <= to_date ( :c_run_date,'dd-mon-yyyy')
                      AND
                      (     fcp_opnpstn_qty     != 0
                        OR  fcp_exrc_qty        != 0
                        OR  fcp_asgnd_qty       != 0
                        OR  fcp_buy_exctd_qty   != 0
                        OR  fcp_sell_exctd_qty  != 0
                      )
									UNION ALL
                    SELECT  fcp_clm_mtch_accnt,
                            fcp_xchng_cd,
                            fcp_prdct_typ,
                            fcp_indstk,
                            fcp_undrlyng,
                            to_char(fcp_expry_dt,'DD-Mon-YYYY'),
                            fcp_exer_typ,
                            NVL( FCP_OPT_TYP , '*'),
                            NVL( FCP_STRK_PRC , 0 ),
                            fcp_opnpstn_qty,
                            fcp_opnpstn_val
                      FROM  FCP_FO_SPN_CNTRCT_PSTN_hstry
                      WHERE fcp_clm_mtch_accnt = :c_clm_mtch_accnt  /** Ver 1.3 like replaced by "=" **/
                      AND   fcp_prdct_typ       = 'O'
                      AND   fcp_expry_dt <= to_date ( :c_run_date,'dd-mon-yyyy')
                      AND
                      (     fcp_opnpstn_qty     != 0
                        OR  fcp_exrc_qty        != 0
                        OR  fcp_asgnd_qty       != 0
                        OR  fcp_buy_exctd_qty   != 0
                        OR  fcp_sell_exctd_qty  != 0
                      )
									UNION ALL                       /* Ver 1.3 Option Plus Portfolio */
                    SELECT  distinct FOD_CLM_MTCH_ACCNT,
                            FOD_XCHNG_CD,
                            'O',
                            FOD_INDSTK,
                            FOD_UNDRLYNG,
                            to_char(FOD_EXPRY_DT,'DD-Mon-YYYY'),
                            FOD_EXER_TYP,
                            NVL( FOD_OPT_TYP , '*'),
                            NVL( FOD_STRK_PRC , 0 ),
                            0,
                            0
                    FROM   FOD_FO_ORDR_DTLS_HSTRY
                    WHERE  FOD_CLM_MTCH_ACCNT = :c_clm_mtch_accnt
                    AND    FOD_EXPRY_DT <= to_date ( :c_run_date,'dd-mon-yyyy')
                    AND    FOD_PRDCT_TYP = 'I'
                    AND    FOD_EXEC_QTY != 0
                UNION ALL                       /* Ver 1.3 Option Plus Portfolio */
                    SELECT  distinct FOD_CLM_MTCH_ACCNT,
                            FOD_XCHNG_CD,
                            'O',
                            FOD_INDSTK,
                            FOD_UNDRLYNG,
                            to_char(FOD_EXPRY_DT,'DD-Mon-YYYY'),
                            FOD_EXER_TYP,
                            NVL( FOD_OPT_TYP , '*'),
                            NVL( FOD_STRK_PRC , 0 ),
                            0,
                            0
                    FROM   FOD_FO_ORDR_DTLS
                    WHERE  FOD_CLM_MTCH_ACCNT = :c_clm_mtch_accnt
                    AND    FOD_EXPRY_DT <= to_date ( :c_run_date,'dd-mon-yyyy')
                    AND    FOD_PRDCT_TYP = 'I'
                    AND    FOD_EXEC_QTY != 0
                      ORDER BY  1,
                                2,
                                3,
                                5,
                                6,
                                8,
                                9;
                      END;
                    END-EXEC;

    if(SQLCODE != 0)
    {
       fn_errlog( c_ServiceName, "S31090", SQLMSG, c_errmsg  );
       fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
       EXEC SQL CLOSE :opt_expcntrct_cursor;
       EXEC SQL FREE  :opt_expcntrct_cursor;
       tpfree ( ( char * ) ptr_fml_Obuf );
       Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
       tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
	
		while (1)
    {
      EXEC SQL FETCH :opt_expcntrct_cursor
           INTO :st_cntopt_pos.c_cln_mtch_accnt,
                :st_cntopt_pos.c_xchng_cd,
                :st_cntopt_pos.c_prd_typ,
                :st_cntopt_pos.c_ctgry_indstk,
                :st_cntopt_pos.c_undrlyng,
                :st_cntopt_pos.c_expry_dt,
                :st_cntopt_pos.c_exrc_typ,
                :st_cntopt_pos.c_opt_typ,
                :st_cntopt_pos.l_strike_prc,
                :st_cntopt_pos.l_opnpstn_qty,
                :st_cntopt_pos.d_org_opn_val;

      if ( SQLCODE != 0 )
      {
        if ( SQLCODE == NO_DATA_FOUND )
        {
          break;
        }
        else
        {
          fn_errlog( c_ServiceName, "S31095", SQLMSG, c_errmsg  );
          fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
          EXEC SQL CLOSE :opt_expcntrct_cursor;
          EXEC SQL FREE  :opt_expcntrct_cursor;
          tpfree ( ( char * ) ptr_fml_Obuf );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
      }

      rtrim(st_cntopt_pos.c_cln_mtch_accnt);
      rtrim(st_cntopt_pos.c_xchng_cd);
      rtrim(st_cntopt_pos.c_undrlyng);
      rtrim(st_cntopt_pos.c_expry_dt);

      if(DEBUG_MSG_LVL_3)
      {
        fn_userlog(c_ServiceName,"After fetched contract");
        fn_userlog(c_ServiceName,"st_cntopt_pos.c_clm_mtch_accnt    |%s|",st_cntopt_pos.c_cln_mtch_accnt);
        fn_userlog(c_ServiceName,"st_cntopt_pos.c_xchng_cd    |%s|",st_cntopt_pos.c_xchng_cd);
        fn_userlog(c_ServiceName,"st_cntopt_pos.c_prd_typ     |%c|",st_cntopt_pos.c_prd_typ);
        fn_userlog(c_ServiceName,"st_cntopt_pos.c_ctgry_indstk|%c|",st_cntopt_pos.c_ctgry_indstk);
        fn_userlog(c_ServiceName,"st_cntopt_pos.c_undrlyng    |%s|",st_cntopt_pos.c_undrlyng);
        fn_userlog(c_ServiceName,"st_cntopt_pos.c_expry_dt    |%s|",st_cntopt_pos.c_expry_dt);
        fn_userlog(c_ServiceName,"st_cntopt_pos.c_exrc_typ    |%c|",st_cntopt_pos.c_exrc_typ);
        fn_userlog(c_ServiceName,"st_cntopt_pos.c_opt_typ     |%c|",st_cntopt_pos.c_opt_typ);
        fn_userlog(c_ServiceName,"st_cntopt_pos.l_strike_prc  |%ld|",st_cntopt_pos.l_strike_prc);
      }

			i_return_val = fn_exp_cntrct_optn_spp ( c_ServiceName,
                                           &st_cntopt_pos,
                                           c_errmsg
                                         );

      if(i_return_val != 0)
      {
        fn_errlog( c_ServiceName, "S31100", SQLMSG, c_errmsg  );
        fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
        EXEC SQL CLOSE :opt_expcntrct_cursor;
        EXEC SQL FREE  :opt_expcntrct_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }

    }/*** END of while loop ***/

    if(DEBUG_MSG_LVL_3)
    {
      fn_userlog(c_ServiceName,"After Option contracts .");
    }

    EXEC SQL ALLOCATE :fut_expcntrct_cursor;

    EXEC SQL  EXECUTE
       BEGIN
       OPEN  :fut_expcntrct_cursor FOR
       SELECT  ffp_xchng_cd,
               ffp_indstk,
               ffp_undrlyng,
               to_char(ffp_expry_dt,'DD-Mon-YYYY'),
               ffp_exer_typ,
               SUM (ffp_opnpstn_qty),
               SUM (ffp_opnpstn_val),
               SUM (ffp_mtm_opn_val),
               ffp_clm_mtch_accnt
         FROM  ffp_fo_futures_pstn
         WHERE   ffp_clm_mtch_accnt = :c_clm_mtch_accnt
         AND     ffp_expry_dt <= to_date ( :c_run_date,'dd-mon-yyyy')
         AND
         (       ffp_buy_exctd_qty != 0
           OR    ffp_sell_exctd_qty  != 0
         )
         GROUP BY  ffp_xchng_cd,
                   ffp_indstk,
                   ffp_undrlyng,
                   ffp_expry_dt,
                   ffp_exer_typ,
                   ffp_clm_mtch_accnt
     UNION ALL
				SELECT  ffp_xchng_cd,
               ffp_indstk,
               ffp_undrlyng,
               to_char(ffp_expry_dt,'DD-Mon-YYYY'),
               ffp_exer_typ,
               SUM (ffp_opnpstn_qty),
               SUM (ffp_opnpstn_val),
               SUM (ffp_mtm_opn_val),
               ffp_clm_mtch_accnt
         FROM  ffp_fo_futures_pstn_hstry
         WHERE   ffp_clm_mtch_accnt = :c_clm_mtch_accnt
         AND     ffp_expry_dt <= to_date ( :c_run_date,'dd-mon-yyyy')
         AND
         (       ffp_buy_exctd_qty != 0
           OR    ffp_sell_exctd_qty  != 0
         )
         GROUP BY  ffp_xchng_cd,
                   ffp_indstk,
                   ffp_undrlyng,
                   ffp_expry_dt,
                   ffp_exer_typ,
                   ffp_clm_mtch_accnt
			UNION ALL
				SELECT  fcp_xchng_cd,
               fcp_indstk,
               fcp_undrlyng,
               to_char(fcp_expry_dt,'DD-Mon-YYYY'),
               fcp_exer_typ,
               SUM (fcp_opnpstn_qty),
               SUM (fcp_opnpstn_val),
               SUM (FCP_MTM_OPN_VAL),
               fcp_clm_mtch_accnt
       FROM  FCP_FO_SPN_CNTRCT_PSTN
       WHERE   fcp_clm_mtch_accnt = :c_clm_mtch_accnt
       AND     fcp_expry_dt <= to_date ( :c_run_date,'dd-mon-yyyy')
       AND   FCP_PRDCT_TYP      = 'F'
       AND
       (     fcp_buy_exctd_qty != 0
       OR    fcp_sell_exctd_qty  != 0
       )
       GROUP BY  fcp_xchng_cd,
                 fcp_indstk,
                 fcp_undrlyng,
                 fcp_expry_dt,
                 fcp_exer_typ,
                 fcp_clm_mtch_accnt
		UNION ALL
			SELECT  fcp_xchng_cd,
               fcp_indstk,
               fcp_undrlyng,
               to_char(fcp_expry_dt,'DD-Mon-YYYY'),
               fcp_exer_typ,
               SUM (fcp_opnpstn_qty),
               SUM (fcp_opnpstn_val),
               SUM (FCP_MTM_OPN_VAL),
               fcp_clm_mtch_accnt
       FROM  FCP_FO_SPN_CNTRCT_PSTN_HSTRY
       WHERE   fcp_clm_mtch_accnt = :c_clm_mtch_accnt
       AND     fcp_expry_dt <= to_date ( :c_run_date,'dd-mon-yyyy')
       AND   FCP_PRDCT_TYP      = 'F'
       AND
       (     fcp_buy_exctd_qty != 0
       OR    fcp_sell_exctd_qty  != 0
       )
       GROUP BY  fcp_xchng_cd,
                 fcp_indstk,
                 fcp_undrlyng,
                 fcp_expry_dt,
                 fcp_exer_typ,
                 fcp_clm_mtch_accnt
			UNION ALL                          /* Ver 1.2 SLTP FPlus Portfolio */
         SELECT FOD_XCHNG_CD,
                FOD_INDSTK,
                FOD_UNDRLYNG,
                to_char(FOD_EXPRY_DT,'DD-Mon-YYYY'),
                FOD_EXER_TYP,
                0,
                0,
                0,
                FOD_CLM_MTCH_ACCNT
         FROM   FOD_FO_ORDR_DTLS_HSTRY
         WHERE  FOD_CLM_MTCH_ACCNT = :c_clm_mtch_accnt
         AND    FOD_EXPRY_DT = to_date ( :c_run_date,'dd-mon-yyyy')
         AND    fod_prdct_typ = 'U'
         AND    fod_exec_qty != 0
         GROUP BY  FOD_XCHNG_CD,
                   FOD_INDSTK,
                   FOD_UNDRLYNG,
                   FOD_EXPRY_DT,
                   FOD_EXER_TYP,
                   FOD_CLM_MTCH_ACCNT
      UNION ALL                          /* Ver 1.2 SLTP FPlus Portfolio */
         SELECT FOD_XCHNG_CD,
                FOD_INDSTK,
                FOD_UNDRLYNG,
                to_char(FOD_EXPRY_DT,'DD-Mon-YYYY'),
                FOD_EXER_TYP,
                0,
                0,
                0,
                FOD_CLM_MTCH_ACCNT
         FROM   FOD_FO_ORDR_DTLS
         WHERE  FOD_CLM_MTCH_ACCNT = :c_clm_mtch_accnt
         AND    FOD_EXPRY_DT = to_date ( :c_run_date,'dd-mon-yyyy')
         AND    fod_prdct_typ = 'U'
         AND    fod_exec_qty != 0
         GROUP BY  FOD_XCHNG_CD,
                   FOD_INDSTK,
                   FOD_UNDRLYNG,
                   FOD_EXPRY_DT,
                   FOD_EXER_TYP,
                   FOD_CLM_MTCH_ACCNT
      ORDER BY  1,9,3,4;
     END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31105", SQLMSG, c_errmsg  );
      fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
      EXEC SQL CLOSE :fut_expcntrct_cursor;
      EXEC SQL FREE :fut_expcntrct_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

		while (1)
    {
      EXEC SQL FETCH :fut_expcntrct_cursor
              INTO :st_cntfut_pos.c_xchng_cd,
                   :st_cntfut_pos.c_ctgry_indstk,
                   :st_cntfut_pos.c_undrlyng,
                   :st_cntfut_pos.c_expry_dt,
                   :st_cntfut_pos.c_exrc_typ,
                   :st_cntfut_pos.l_opnpstn_qty,
                   :st_cntfut_pos.d_org_opn_val,
                   :st_cntfut_pos.d_mtm_opn_val,
                   :st_cntfut_pos.c_cln_mtch_accnt;

      if ( SQLCODE != 0 )
      {
        if ( SQLCODE == NO_DATA_FOUND )
        {
          break;
        }
        else
        {
          fn_errlog( c_ServiceName, "S31110", SQLMSG, c_errmsg  );
          fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
          EXEC SQL CLOSE :fut_expcntrct_cursor;
          EXEC SQL FREE :fut_expcntrct_cursor;
          tpfree ( ( char * ) ptr_fml_Obuf );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
      }
      rtrim(st_cntfut_pos.c_xchng_cd);
      rtrim(st_cntfut_pos.c_undrlyng);
      rtrim(st_cntfut_pos.c_expry_dt);
      rtrim(st_cntfut_pos.c_cln_mtch_accnt);

      if(DEBUG_MSG_LVL_3)
      {
        fn_userlog(c_ServiceName,"Before if condition");
        fn_userlog(c_ServiceName,"Expiry Date Is      :%s:",st_cntfut_pos.c_expry_dt);
        fn_userlog(c_ServiceName,"Underlying Is       :%s:",st_cntfut_pos.c_undrlyng);
        fn_userlog(c_ServiceName,"Exchnge Is          :%s:",st_cntfut_pos.c_xchng_cd);
        fn_userlog(c_ServiceName,"copied exchange Is  :%s:",c_tmp_xchng_cd);
        fn_userlog(c_ServiceName,"copied Underlying Is:%s:",c_tmp_undrlyng);
        fn_userlog(c_ServiceName,"copied expiry  Is   :%s:",c_tmp_expry_dt);
        fn_userlog(c_ServiceName,"Open Position qty Is:%ld:",st_cntfut_pos.l_opnpstn_qty);
        fn_userlog(c_ServiceName,"open position val Is:%lf:",st_cntfut_pos.d_org_opn_val);
        fn_userlog(c_ServiceName,"open mtm val Is     :%lf:",st_cntfut_pos.d_mtm_opn_val);
      }

			i_return_val = fn_exp_cntrct_fut_spp ( c_ServiceName,
                                           &st_cntfut_pos,
                                           c_errmsg
                                         );

      if(i_return_val != 0)
      {
        fn_errlog( c_ServiceName, "S31115", SQLMSG, c_errmsg  );
        fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
        EXEC SQL CLOSE :fut_expcntrct_cursor;
        EXEC SQL FREE  :fut_expcntrct_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }

    } /*** END of while loop ***/
		
		/*** Commented in ver 1.2 ****

		EXEC SQL
        INSERT INTO PCP_PRTFL_CNTRCT_PSTN_HSTRY
      (
        PCP_CLM_MTCH_ACCNT,
        PCP_XCHNG_CD,
        PCP_PRDCT_TYP,
        PCP_INDSTK,
        PCP_UNDRLYNG,
        PCP_EXPRY_DT,
        PCP_EXER_TYP,
        PCP_STRK_PRC,
        PCP_OPT_TYP,
        PCP_OPNPSTN_FLW,
        PCP_OPNPSTN_QTY,
        PCP_OPNPSTN_VAL,
        PCP_RLLZD_PNL,
        PCP_UNRLLZD_PNL,
        PCP_TOTAL_PNL,
        PCP_CRRNT_MKT_PRC,
        PCP_BRKG_VAL,
        PCP_AVG_TRD_PRC,
        PCP_SPAN_FLG,
        PCP_TM_STMP
      )
			(
        SELECT
        PCP_CLM_MTCH_ACCNT,
        PCP_XCHNG_CD,
        PCP_PRDCT_TYP,
        PCP_INDSTK,
        PCP_UNDRLYNG,
        PCP_EXPRY_DT,
        PCP_EXER_TYP,
        PCP_STRK_PRC,
        PCP_OPT_TYP,
        PCP_OPNPSTN_FLW,
        PCP_OPNPSTN_QTY,
        PCP_OPNPSTN_VAL,
        PCP_RLLZD_PNL,
        PCP_UNRLLZD_PNL,
        PCP_TOTAL_PNL,
        PCP_CRRNT_MKT_PRC,
        PCP_BRKG_VAL,
        PCP_AVG_TRD_PRC,
        PCP_SPAN_FLG,
        PCP_TM_STMP
        FROM PCP_PRTFL_CNTRCT_PSTN
        WHERE PCP_CLM_MTCH_ACCNT = :c_clm_mtch_accnt
        AND   PCP_EXPRY_DT = to_date ( :c_run_date,'dd-mon-yyyy')
      );

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
      fn_errlog( c_ServiceName, "S31120", SQLMSG, c_errmsg  );
      fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
      EXEC SQL CLOSE :fut_expcntrct_cursor;
      EXEC SQL FREE  :fut_expcntrct_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    EXEC SQL
      DELETE FROM PCP_PRTFL_CNTRCT_PSTN
      WHERE PCP_CLM_MTCH_ACCNT = :c_clm_mtch_accnt
      AND   PCP_EXPRY_DT = to_date ( :c_run_date,'dd-mon-yyyy');

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
      fn_errlog( c_ServiceName, "S31125", SQLMSG, c_errmsg  );
      fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
      EXEC SQL CLOSE :fut_expcntrct_cursor;
      EXEC SQL FREE  :fut_expcntrct_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
	
		*************** Commented in ver 1.2 as SLTP future plus added in union for expiry ***/

	}   /*** END of all Expiry ***/

	if ( fn_committran( c_ServiceName, i_trnsctn,c_errmsg ) == -1 )
	{
		fn_aborttran(c_ServiceName, i_trnsctn, c_errmsg);
		fn_errlog ( c_ServiceName, "S31130", LIBMSG, c_errmsg );
		EXEC SQL CLOSE :ftd_trd_cursor;
		EXEC SQL FREE  :ftd_trd_cursor;
		tpfree ( ( char * ) ptr_fml_Obuf );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	} 

	EXEC SQL CLOSE :opt_expcntrct_cursor;
	EXEC SQL FREE  :opt_expcntrct_cursor;
	EXEC SQL CLOSE :fut_expcntrct_cursor;
	EXEC SQL FREE  :fut_expcntrct_cursor;

	tpreturn(TPSUCCESS, SUCC_BFR, NULL, 0, 0 );
}

int fn_daily_prtfl_spp(	char *c_ServiceName,
										struct st_tradebook *ptr_st_trade_book, 
										double d_ltp,
										char *c_errmsg )
{
	int 	i_pos_avl       = 0;	
	int 	i_return_val    = 0;	
	long int l_charges		= 0;
	long int l_chrgs_tmp	= 0;
	char c_span_flg				='\0';
	char c_prdct_typ			='\0';
	char c_opnpstn_flw		='\0';
	double d_crst_prft		= 0.0;
	double d_uncrst_prft	= 0.0;
	double d_total_prft		= 0.0;
	double d_buy_val 			= 0.0;
	double d_buy_val_m 		= 0.0;
	double d_buy_val_h    = 0.0;
	double d_sell_val 		= 0.0;
	double d_sell_val_m 	= 0.0;
	double d_sell_val_h   = 0.0;
	double d_base_prc			= 0.0;
	double d_org_opn_val  = 0.0;	 
	double d_avg_pr			  = 0.0;	 
	double d_opn_sltp_val = 0.0;			 
  double d_op_opn_val   = 0.0;        /*** Ver 1.3 ***/ 
	long int l_opnpstn_qty= 0;
	long int l_avg_trd_prc= 0;
	long int l_strike_prc = 0;
	long int l_sltp_opnpstn_qty = 0;
  long int l_optplus_qty  = 0;         /*** Ver 1.3 ***/
		
	char c_cln_mtch_accnt[11];
	char c_xchng_cd[4];
	char c_prd_typ;
	char c_opt_typ;
	char c_undrlyng[7];
	char c_expry_dt[LEN_DATE];
	char c_exrc_typ;
		
	sql_cursor chrgs_cur;

	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog(c_ServiceName,"Inside function fn_daily_prtfl_spp ");
	}
						
	MEMSET(c_cln_mtch_accnt);
	MEMSET(c_xchng_cd);
	MEMSET(c_prd_typ);
	MEMSET(c_opt_typ);
	MEMSET(c_undrlyng);
	MEMSET(c_expry_dt);
	MEMSET(c_exrc_typ);
						
	strcpy(c_cln_mtch_accnt,ptr_st_trade_book->c_cln_mtch_accnt);	
	strcpy(c_xchng_cd,ptr_st_trade_book->c_xchng_cd);	
	strcpy(c_undrlyng,ptr_st_trade_book->c_undrlyng);	
	strcpy(c_expry_dt,ptr_st_trade_book->c_expry_dt);
	c_prd_typ		= ptr_st_trade_book->c_prd_typ;
	c_opt_typ		= ptr_st_trade_book->c_opt_typ;
	c_exrc_typ	= ptr_st_trade_book->c_exrc_typ;	
	l_strike_prc= ptr_st_trade_book->l_strike_prc;

	EXEC SQL ALLOCATE :chrgs_cur;

	if (c_prd_typ == 'O' || c_prd_typ == 'I' )		/*** Check for OptionPlus Added in Ver 1.3 ***/
	{
		EXEC SQL EXECUTE
		BEGIN
		OPEN :chrgs_cur FOR
			SELECT  NVL( SUM( NVL( ftd_brkg, 0 ) + NVL( ftd_tran_chrg, 0 ) + NVL( ftd_stamp_duty, 0 ) +
												NVL( ftd_sebi_tt, 0 ) + NVL( ftd_stt, 0 ) + NVL( ftd_src_tx, 0 )+NVL( ftd_brkrg_igst,0 ) + NVL( ftd_brkrg_cgst,0 ) +NVL( ftd_brkrg_sgst,0 ) +NVL( ftd_brkrg_ugst,0 )), 0)
			FROM    ftd_fo_trd_dtls
			WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
			AND     ftd_xchng_cd        = :c_xchng_cd
			/*** AND     ftd_prdct_typ       = :c_prd_typ	 			** Commented in Ver 1.3 ***/
      AND     ftd_prdct_typ       in ('O','I')             /*** Ver 1.3 ***/
			AND     ftd_undrlyng        = :c_undrlyng
			AND     ftd_expry_dt        = :c_expry_dt
			AND     ftd_exer_typ        = :c_exrc_typ
			AND     ftd_opt_typ         = :c_opt_typ
			AND     ftd_strk_prc        = :l_strike_prc
			UNION ALL
			SELECT  NVL( SUM( NVL( ftd_brkg, 0 ) + NVL( ftd_tran_chrg, 0 ) + NVL( ftd_stamp_duty, 0 ) +
												NVL( ftd_sebi_tt, 0 ) + NVL( ftd_stt, 0 ) + NVL( ftd_src_tx, 0 )+NVL( ftd_brkrg_igst,0 ) + NVL( ftd_brkrg_cgst,0 ) +NVL( ftd_brkrg_sgst,0 ) +NVL( ftd_brkrg_ugst,0 )), 0)
			FROM    ftd_fo_trd_dtls_hstry
			WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
			AND     ftd_xchng_cd        = :c_xchng_cd
			/*** AND     ftd_prdct_typ       = :c_prd_typ					** Commented in Ver 1.3 ***/
			AND     ftd_prdct_typ       in ('O','I')             /*** Ver 1.3 ***/
			AND     ftd_undrlyng        = :c_undrlyng
			AND     ftd_expry_dt        = :c_expry_dt
			AND     ftd_exer_typ        = :c_exrc_typ
			AND     ftd_opt_typ         = :c_opt_typ
			AND     ftd_strk_prc        = :l_strike_prc;
	
		END;
		END-EXEC;
	}
	else 
	{
		EXEC SQL EXECUTE
    BEGIN
    OPEN :chrgs_cur FOR
      SELECT  NVL( SUM( NVL( ftd_brkg, 0 ) + NVL( ftd_tran_chrg, 0 ) + NVL( ftd_stamp_duty, 0 ) +
                        NVL( ftd_sebi_tt, 0 ) + NVL( ftd_stt, 0 ) + NVL( ftd_src_tx, 0 )+NVL( ftd_brkrg_igst,0 ) + NVL( ftd_brkrg_cgst,0 ) +NVL( ftd_brkrg_sgst,0 ) +NVL( ftd_brkrg_ugst,0 )), 0)
      FROM    ftd_fo_trd_dtls
      WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND     ftd_xchng_cd        = :c_xchng_cd
      AND     ftd_prdct_typ       in ('F','P','U') 
      AND     ftd_undrlyng        = :c_undrlyng
      AND     ftd_expry_dt        = :c_expry_dt
      AND     ftd_exer_typ        = :c_exrc_typ
      AND     ftd_opt_typ         = :c_opt_typ
      AND     ftd_strk_prc        = :l_strike_prc
      UNION ALL
      SELECT  NVL( SUM( NVL( ftd_brkg, 0 ) + NVL( ftd_tran_chrg, 0 ) + NVL( ftd_stamp_duty, 0 ) +
                        NVL( ftd_sebi_tt, 0 ) + NVL( ftd_stt, 0 ) + NVL( ftd_src_tx, 0 )+NVL( ftd_brkrg_igst,0 ) + NVL( ftd_brkrg_cgst,0 ) +NVL( ftd_brkrg_sgst,0 ) +NVL( ftd_brkrg_ugst,0 )), 0)
      FROM    ftd_fo_trd_dtls_hstry
      WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND     ftd_xchng_cd        = :c_xchng_cd
      AND     ftd_prdct_typ   		in ('F','P','U') 
      AND     ftd_undrlyng        = :c_undrlyng
      AND     ftd_expry_dt        = :c_expry_dt
      AND     ftd_exer_typ        = :c_exrc_typ
      AND     ftd_opt_typ         = :c_opt_typ
      AND     ftd_strk_prc        = :l_strike_prc;

    END;
    END-EXEC;
	}
		
	if ( SQLCODE != 0 )
	{
		if ( SQLCODE == NO_DATA_FOUND )
		{
			fn_userlog( c_ServiceName,"Inside NO_DATA_FOUND" );
		}
		else
		{
			fn_errlog( c_ServiceName, "S31135", SQLMSG, c_errmsg  );
			EXEC SQL CLOSE :chrgs_cur;
			EXEC SQL FREE :chrgs_cur;
			return -1;
		}
	}

	while( 1 )
	{
		EXEC SQL FETCH :chrgs_cur
						 INTO  :l_chrgs_tmp;

		if( SQLCODE != 0 )
		{
			if ( SQLCODE == NO_DATA_FOUND )
			{
				break;
			}
			else
			{
				fn_errlog( c_ServiceName, "S31140", SQLMSG, c_errmsg  );
				EXEC SQL CLOSE :chrgs_cur;
				EXEC SQL FREE :chrgs_cur;
				return -1;
			}
	 }

		l_charges += l_chrgs_tmp;
	}
		
	EXEC SQL CLOSE :chrgs_cur;
	EXEC SQL FREE :chrgs_cur;		
	
	/*** Checking customer is SPAN or normal ***/
	
	EXEC SQL
	SELECT  NVL(CLM_SPAN_ALLWD,'N')
	INTO    :c_span_flg
	FROM    CLM_CLNT_MSTR
	WHERE   CLM_MTCH_ACCNT  = :ptr_st_trade_book->c_cln_mtch_accnt;	
	
	if(SQLCODE  !=  0 )
	{
		fn_userlog( c_ServiceName,"Error while selecting SPAN flag");
		fn_errlog( c_ServiceName, "S31145", SQLMSG, c_errmsg  );
		return -1;
	}	
	
	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog( c_ServiceName,"SPAN flag is |%c|",c_span_flg);
		fn_userlog( c_ServiceName,"Charges are  |%ld|",l_charges);
	}

	if (ptr_st_trade_book->c_prd_typ == 'O' || ptr_st_trade_book->c_prd_typ == 'I' ) 	 /*** Condition Added For OptionPlus in Ver 1.3 ***/
	{
	
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog( c_ServiceName," Inside option product type ");
		}
	
		/*if (c_span_flg == 'N' && ptr_st_trade_book->c_prd_typ == 'O' )  commented in ver 1.4*** Ver 1.3 option check added ***/
		if (c_span_flg == 'N' )  /*** Ver 1.4 ***/
		{
			EXEC SQL
				SELECT  FOP_OPNPSTN_QTY,
								FOP_OPNPSTN_VAL
				INTO    :l_opnpstn_qty,
								:d_org_opn_val
				FROM    fop_fo_options_pstn
				WHERE   FOP_CLM_MTCH_ACCNT  = :ptr_st_trade_book->c_cln_mtch_accnt
				AND     FOP_XCHNG_CD        = :ptr_st_trade_book->c_xchng_cd
				/*** AND     FOP_PRDCT_TYP       =	:ptr_st_trade_book->c_prd_typ		** Commented in Ver 1.3 ***/
        AND     FOP_PRDCT_TYP       = 'O'                             /*** Ver 1.3 ***/ 
				AND     FOP_UNDRLYNG        = :ptr_st_trade_book->c_undrlyng
				AND     FOP_EXPRY_DT        = :ptr_st_trade_book->c_expry_dt
				AND     FOP_STRK_PRC        = :ptr_st_trade_book->l_strike_prc
				AND     FOP_EXER_TYP        = :ptr_st_trade_book->c_exrc_typ
				AND     FOP_OPT_TYP         = :ptr_st_trade_book->c_opt_typ;
	
			if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
			{
				fn_userlog( c_ServiceName,"Error while selecting open Position value");
				fn_errlog( c_ServiceName, "S31150", SQLMSG, c_errmsg  );
				return -1;	
			}
		
		}
		/*else if ((c_span_flg == 'Y' || c_span_flg == 'Z') && ptr_st_trade_book->c_prd_typ == 'O' )commented in ver 1.4*Ver 1.3 option check added */
		else if ((c_span_flg == 'Y' || c_span_flg == 'Z') )/*Ver 1.4 */
		{
			EXEC SQL
			SELECT FCP_OPNPSTN_QTY,
						FCP_OPNPSTN_VAL
			INTO  :l_opnpstn_qty,
						:d_org_opn_val
			FROM  FCP_FO_SPN_CNTRCT_PSTN
			WHERE FCP_CLM_MTCH_ACCNT = :ptr_st_trade_book->c_cln_mtch_accnt
			AND   FCP_XCHNG_CD       = :ptr_st_trade_book->c_xchng_cd
			AND   FCP_EXPRY_DT       = :ptr_st_trade_book->c_expry_dt
			/*** AND   FCP_PRDCT_TYP      = :ptr_st_trade_book->c_prd_typ		** Commented in Ver 1.3 ***/
      AND   FCP_PRDCT_TYP      =  'O'                             /*** Ver 1.3 ***/
			AND   FCP_UNDRLYNG       = :ptr_st_trade_book->c_undrlyng
			AND   FCP_EXER_TYP       = :ptr_st_trade_book->c_exrc_typ
			AND   FCP_OPT_TYP        = :ptr_st_trade_book->c_opt_typ
			AND   FCP_STRK_PRC       = :ptr_st_trade_book->l_strike_prc;
	
			if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
			{		
				fn_userlog( c_ServiceName,"Error while selecting open Position value");
				fn_errlog( c_ServiceName, "S31155", SQLMSG, c_errmsg  );
				return -1;
			}
		}
		else
    {
      fn_userlog( c_ServiceName," Client is niether SPAN nor Normal and dont have option plus position.");
      fn_errlog( c_ServiceName, "S31160", SQLMSG, c_errmsg  );
      return -1;
    }

		/*** Added in ver 1.3 ***/

    EXEC SQL
        SELECT nvl(sum(decode(FOD_ORDR_FLW,'B',FOD_EXEC_QTY,FOD_EXEC_QTY * -1)),0)
        INTO   :l_optplus_qty
        FROM   FOD_FO_ORDR_DTLS
        WHERE FOD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
        AND   FOD_XCHNG_CD  = :c_xchng_cd
        AND   FOD_PRDCT_TYP = 'I'
        AND   FOD_UNDRLYNG = :c_undrlyng
        AND   FOD_EXPRY_DT = :c_expry_dt
        AND   FOD_EXER_TYP = :c_exrc_typ
        AND   FOD_STRK_PRC  = :l_strike_prc
        AND   FOD_OPT_TYP = :c_opt_typ
        AND   FOD_EXEC_QTY != 0;
		
		if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
     	fn_errlog( c_ServiceName, "S31165",SQLMSG, c_errmsg );
     	return -1;
    }
    else if(SQLCODE == NO_DATA_FOUND)
    {
     	l_optplus_qty = 0;
    }	
				
		if(l_optplus_qty > 0 )
    {
    	i_return_val = fn_optplusbuy_opnpstn_spp(c_ServiceName,
                                           c_cln_mtch_accnt,
                                           c_xchng_cd,
                                           c_undrlyng,
                                           c_expry_dt,
                                           c_exrc_typ,
                                           l_strike_prc,
                                           c_opt_typ,
                                           &d_op_opn_val,
                                           c_errmsg
                                          );

     	 if ( i_return_val == -1 )
       {
       		fn_errlog( c_ServiceName, "S31170",LIBMSG, c_errmsg );
       		return -1;
       }

   	 }
     else if(l_optplus_qty < 0)
     {
    		i_return_val = fn_optplussell_opnpstn_spp(c_ServiceName,
                                            c_cln_mtch_accnt,
                                            c_xchng_cd,
                                            c_undrlyng,
                                            c_expry_dt,
                                            c_exrc_typ,
                                            l_strike_prc,
                                            c_opt_typ,
                                            &d_op_opn_val,
                                            c_errmsg
                                           );

      		if ( i_return_val == -1 )
      		{
        		fn_errlog( c_ServiceName, "S31175",LIBMSG, c_errmsg );
        		return -1;
      		}
     }
     else
     {
     		d_op_opn_val = 0.0;
     }

    if(DEBUG_MSG_LVL_3)
    {
      fn_userlog( c_ServiceName,"l_optplus_qty        |%ld|",l_optplus_qty);
      fn_userlog( c_ServiceName,"l_opnpstn_qty        |%ld|",l_opnpstn_qty);
      fn_userlog( c_ServiceName,"d_org_opn_val        |%lf|",d_org_opn_val);
      fn_userlog( c_ServiceName,"d_op_opn_val         |%lf|",d_op_opn_val);
    }

    l_opnpstn_qty = l_opnpstn_qty + l_optplus_qty;
    d_org_opn_val = d_org_opn_val + d_op_opn_val;

    /*** Ver 1.3 ** Ends ***/
	
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog( c_ServiceName,"l_opnpstn_qty        |%ld|",l_opnpstn_qty);
			fn_userlog( c_ServiceName,"d_org_opn_val				|%lf|",d_org_opn_val);
		}
	
		if( l_opnpstn_qty > 0 )
		{
		 	c_opnpstn_flw = 'B';
		}
		else if( l_opnpstn_qty < 0)
		{
		 	c_opnpstn_flw = 'S';
		}
		else
		{
		 	c_opnpstn_flw = 'N';
		}
	
		EXEC SQL
			SELECT  NVL(SUM((ftd_exctd_qty * ftd_exctd_rt ) - NVL ( ftd_frs_brkg,0 ) - NVL(ftd_cvr_brkg,0)),0)
			INTO    :d_buy_val_m
				FROM    ftd_fo_trd_dtls
				WHERE   ftd_clm_mtch_accnt  = :ptr_st_trade_book->c_cln_mtch_accnt
				AND     ftd_xchng_cd        = :ptr_st_trade_book->c_xchng_cd
				/*** AND     ftd_prdct_typ       = :ptr_st_trade_book->c_prd_typ   ** Commented in Ver 1.3 ***/
        AND     ftd_prdct_typ       in ('I','O')                      /*** Ver 1.3 ***/
				AND     ftd_undrlyng        = :ptr_st_trade_book->c_undrlyng
				AND     ftd_expry_dt        = :ptr_st_trade_book->c_expry_dt
				AND     ftd_exer_typ        = :ptr_st_trade_book->c_exrc_typ
				AND     ftd_opt_typ         = :ptr_st_trade_book->c_opt_typ
				AND     ftd_strk_prc        = :ptr_st_trade_book->l_strike_prc
				AND     ftd_trd_flw         = 'B';
	
		if ( SQLCODE != 0 )
		{
			fn_userlog( c_ServiceName," Error selecting buy value from main");
			fn_errlog( c_ServiceName, "S31180", SQLMSG, c_errmsg  );
			return -1;
		}
	
		EXEC SQL
			SELECT  NVL(SUM((ftd_exctd_qty * ftd_exctd_rt ) - NVL(ftd_frs_brkg,0) - NVL(ftd_cvr_brkg,0 )),0)
			INTO    :d_buy_val_h
			FROM    ftd_fo_trd_dtls_hstry
			WHERE   ftd_clm_mtch_accnt  = :ptr_st_trade_book->c_cln_mtch_accnt
			AND     ftd_xchng_cd        = :ptr_st_trade_book->c_xchng_cd
			/*** AND     ftd_prdct_typ       = :ptr_st_trade_book->c_prd_typ    ** Commented in Ver 1.3 ***/
      AND     ftd_prdct_typ       in ('I','O')                      /*** Ver 1.3 ***/
			AND     ftd_undrlyng        = :ptr_st_trade_book->c_undrlyng
			AND     ftd_expry_dt        = :ptr_st_trade_book->c_expry_dt
			AND     ftd_exer_typ        = :ptr_st_trade_book->c_exrc_typ
			AND     ftd_opt_typ         = :ptr_st_trade_book->c_opt_typ
			AND     ftd_strk_prc        = :ptr_st_trade_book->l_strike_prc
			AND     ftd_trd_flw         = 'B';
	
		if ( SQLCODE != 0 )
		{
			fn_userlog( c_ServiceName," Error selecting buy value from history");
			fn_errlog( c_ServiceName, "S31185", SQLMSG, c_errmsg  );
			return -1;
		}
		
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog( c_ServiceName," Total buy value from main 	 |%lf|",d_buy_val_m);
			fn_userlog( c_ServiceName," Total buy value from history |%lf|",d_buy_val_h);
		}
		
		d_buy_val = d_buy_val_m + d_buy_val_h;
	
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog( c_ServiceName," Total buy value  |%lf|",d_buy_val);
		}
	
		EXEC SQL
			SELECT  NVL(SUM((ftd_exctd_qty * ftd_exctd_rt ) - NVL(ftd_frs_brkg,0 ) - NVL(ftd_cvr_brkg,0)),0)
			INTO    :d_sell_val_m
			FROM    ftd_fo_trd_dtls
			WHERE   ftd_clm_mtch_accnt  = :ptr_st_trade_book->c_cln_mtch_accnt
			AND     ftd_xchng_cd        = :ptr_st_trade_book->c_xchng_cd
			/*** AND     ftd_prdct_typ       = :ptr_st_trade_book->c_prd_typ 	** Commented in Ver 1.3 ***/
      AND     ftd_prdct_typ       in ('I','O')                      /*** Ver 1.3 ***/
			AND     ftd_undrlyng        = :ptr_st_trade_book->c_undrlyng
			AND     ftd_expry_dt        = :ptr_st_trade_book->c_expry_dt
			AND     ftd_exer_typ        = :ptr_st_trade_book->c_exrc_typ
			AND     ftd_opt_typ         = :ptr_st_trade_book->c_opt_typ
			AND     ftd_strk_prc        = :ptr_st_trade_book->l_strike_prc
			AND     ftd_trd_flw         = 'S';
		
		if ( SQLCODE != 0 )
		{
			fn_userlog( c_ServiceName," Error selecting buy value from history");
			fn_errlog( c_ServiceName, "S31190", SQLMSG, c_errmsg  );
			return -1;
		}
		
		EXEC SQL
			SELECT  NVL(SUM((ftd_exctd_qty * ftd_exctd_rt ) - NVL(ftd_frs_brkg,0) - NVL(ftd_cvr_brkg,0)),0)
			INTO    :d_sell_val_h
			FROM    ftd_fo_trd_dtls_hstry
			WHERE   ftd_clm_mtch_accnt  = :ptr_st_trade_book->c_cln_mtch_accnt
			AND     ftd_xchng_cd        = :ptr_st_trade_book->c_xchng_cd
			/*** AND     ftd_prdct_typ       = :ptr_st_trade_book->c_prd_typ 	** Commented in Ver 1.3 ***/
      AND     ftd_prdct_typ       in ('I','O')                      /*** Ver 1.3 ***/
			AND     ftd_undrlyng        = :ptr_st_trade_book->c_undrlyng 
			AND     ftd_expry_dt        = :ptr_st_trade_book->c_expry_dt
			AND     ftd_exer_typ        = :ptr_st_trade_book->c_exrc_typ
			AND     ftd_opt_typ         = :ptr_st_trade_book->c_opt_typ
			AND     ftd_strk_prc        = :ptr_st_trade_book->l_strike_prc
			AND     ftd_trd_flw         = 'S';
		
		if ( SQLCODE != 0 )
		{
			fn_userlog( c_ServiceName," Error selecting buy value from history");
			fn_errlog( c_ServiceName, "S31195", SQLMSG, c_errmsg  );
			return -1;
		}
		
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog( c_ServiceName," Total sell value from main    |%lf|",d_sell_val_m);
			fn_userlog( c_ServiceName," Total sell value from history |%lf|",d_sell_val_h);
		}
		
		d_sell_val = d_sell_val_m + d_sell_val_h;
		
		if(DEBUG_MSG_LVL_3)		
		{
			fn_userlog( c_ServiceName," Total sell value  |%lf|",d_sell_val);
		}	
	
		d_crst_prft 	= d_sell_val - d_buy_val;
		d_uncrst_prft = l_opnpstn_qty * d_ltp;
		d_total_prft 	= d_crst_prft + d_uncrst_prft;
	
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog( c_ServiceName,"Realized PNL is   |%lf|",d_crst_prft);	
			fn_userlog( c_ServiceName,"Unrealized PNL is |%lf|",d_uncrst_prft);	
			fn_userlog( c_ServiceName,"Total PNL is      |%lf|",d_total_prft);	
		}
	
		/***  Calculating Avg price which is only for open position **/
	
		EXEC SQL
			SELECT decode(:l_opnpstn_qty, 0, 0,round(((:d_org_opn_val/:l_opnpstn_qty)),2))
			INTO : d_base_prc
			FROM  dual;
	
	
		l_avg_trd_prc = (long)d_base_prc;
	
		if( DEBUG_MSG_LVL_3 ) 
		{
			fn_userlog (c_ServiceName," l_avg_trd_prc Is :%ld:", l_avg_trd_prc);
			fn_userlog (c_ServiceName," d_base_prc Is 	 :%lf:", d_base_prc);
		}
	}
	else
	{
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog( c_ServiceName," Inside future product type ");
		}

		if (c_span_flg == 'N')
		{
		   	EXEC SQL
        		SELECT  SUM (s1), SUM (s2)
        		INTO    :l_opnpstn_qty,
										:d_org_opn_val	
        		FROM
        		(
          		SELECT  NVL(SUM(ffp_opnpstn_qty),0)s1,
          					NVL(SUM(FFP_OPNPSTN_VAL),0)s2
          	FROM    ffp_fo_futures_pstn
          	WHERE   ffp_clm_mtch_accnt = :c_cln_mtch_accnt
          	AND     ffp_xchng_cd       = :c_xchng_cd
						AND			ffp_prdct_typ			 in ('F','P')
          	AND     ffp_undrlyng       = :c_undrlyng
          	AND     ffp_expry_dt       = :c_expry_dt
          	AND
          	(       ffp_buy_exctd_qty != 0
            	OR    ffp_sell_exctd_qty  != 0
						)
          );

				if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
        {
					fn_errlog( c_ServiceName, "S31200",SQLMSG, c_errmsg );
     			return -1;	
				}
		}
		else if (c_span_flg == 'Y' || c_span_flg == 'Z')
		{
			 EXEC SQL
        	SELECT  SUM (s3), SUM (s4)
        	INTO    :l_opnpstn_qty,
									:d_org_opn_val
        	FROM
        	(
          	SELECT NVL(SUM(FCP_OPNPSTN_QTY),0) s3,
          				 NVL(SUM(FCP_OPNPSTN_VAL),0) s4
          	FROM   FCP_FO_SPN_CNTRCT_PSTN
          	WHERE  FCP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
          	AND    FCP_XCHNG_CD       = :c_xchng_cd
          	AND    FCP_PRDCT_TYP      = 'F'
          	AND    FCP_UNDRLYNG       = :c_undrlyng
          	AND    FCP_EXPRY_DT       = :c_expry_dt
          	AND
          	(      FCP_BUY_EXCTD_QTY != 0
            	OR   FCP_SELL_EXCTD_QTY  != 0
          	)
					UNION ALL                                           /*** added in Ver 1.4 for F+ position of SPAN customer ***/
        		SELECT NVL(SUM(ffp_opnpstn_qty),0) QTY,
               		NVL(SUM(ffp_opnpstn_val),0) VAL
        		FROM   ffp_fo_futures_pstn
        		WHERE  ffp_clm_mtch_accnt = :c_cln_mtch_accnt
        		AND    ffp_xchng_cd       = :c_xchng_cd
						AND    ffp_prdct_typ      = 'P'
        		AND    ffp_undrlyng       = :c_undrlyng
        		AND    ffp_expry_dt       = :c_expry_dt
					);
				
				if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
        {
					fn_errlog( c_ServiceName, "S31205",SQLMSG, c_errmsg );
     			return -1;
				}
		}
		else 
		{
			if(DEBUG_MSG_LVL_3)
			{
				fn_userlog(c_ServiceName,"The customer is nither normal nor SPAN."); 
			}
		}

		EXEC SQL                         
         SELECT SUM(s1 -s2)
         INTO   :l_sltp_opnpstn_qty
         FROM
         (
          SELECT nvl(sum(decode(FOD_ORDR_FLW,'B',FOD_EXEC_QTY)),0) s1,
                 nvl(sum(decode(FOD_ORDR_FLW,'S',FOD_EXEC_QTY)),0) s2
          FROM   FOD_FO_ORDR_DTLS
          WHERE  FOD_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
          AND    FOD_XCHNG_CD       = :c_xchng_cd
          AND    FOD_EXPRY_DT       = :c_expry_dt
          AND    FOD_PRDCT_TYP      = 'U'
          AND    FOD_UNDRLYNG       = :c_undrlyng
          AND    FOD_EXEC_QTY       != 0
				 );

		if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
			fn_errlog( c_ServiceName, "S31210",SQLMSG, c_errmsg );
      return -1;
		}

		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog( c_ServiceName,"l_sltp_opnpstn_qty   |%ld|",l_sltp_opnpstn_qty);
			fn_userlog( c_ServiceName,"l_opnpstn_qty        |%ld|",l_opnpstn_qty);
			fn_userlog( c_ServiceName,"d_org_opn_val				|%lf|",d_org_opn_val);
			fn_userlog( c_ServiceName,"d_opn_sltp_val				|%lf|",d_opn_sltp_val);
		}

		if(l_sltp_opnpstn_qty > 0 )
    {
    	i_return_val = fn_sltpbuy_opnpstn_spp(c_ServiceName,
                                      	c_cln_mtch_accnt,
                                      	c_xchng_cd,
                                      	c_undrlyng,
                                      	c_expry_dt,
                                      	&d_opn_sltp_val,
																				c_errmsg);

    	if ( i_return_val == -1 )
    	{
				fn_errlog( c_ServiceName, "S31215",SQLMSG, c_errmsg );
        return -1;
    	}

  	}
  	else if(l_sltp_opnpstn_qty < 0)
  	{
    	i_return_val = fn_sltpsell_opnpstn_spp(c_ServiceName,
                                      	c_cln_mtch_accnt,
                                      	c_xchng_cd,
                                      	c_undrlyng,
                                      	c_expry_dt,
                                      	&d_opn_sltp_val,
																				c_errmsg);
	
    	if ( i_return_val == -1 )
    	{
				fn_errlog( c_ServiceName, "S31220",SQLMSG, c_errmsg );
        return -1;
    	}
  	}
  	else
  	{
    	d_opn_sltp_val = 0.0;
  	}
	
		if(DEBUG_MSG_LVL_3)
    {
      fn_userlog( c_ServiceName,"d_opn_sltp_val   |%lf|",d_opn_sltp_val);
		}

		l_opnpstn_qty = l_opnpstn_qty + l_sltp_opnpstn_qty;
		d_org_opn_val = d_org_opn_val + d_opn_sltp_val;

		if (l_opnpstn_qty > 0 )
		{
			c_opnpstn_flw = 'B';

			i_return_val= fn_buy_opnpstn_spp( c_ServiceName,
                   									c_cln_mtch_accnt,
                   									c_xchng_cd,
                   									c_undrlyng,
                   									c_expry_dt,
                   									c_exrc_typ,
                   									c_prdct_typ ,
                   									d_ltp,
                   									&d_crst_prft,
                   									&d_uncrst_prft,
                   									&d_avg_pr,
                   									c_errmsg
                  								);

			if(i_return_val == -1)
			{
				fn_errlog( c_ServiceName, "S31225",SQLMSG, c_errmsg );
     		return -1;		
			}
		}
		else if ( l_opnpstn_qty < 0 )
		{
			c_opnpstn_flw = 'S';

			i_return_val= fn_sell_opnpstn_spp(c_ServiceName,
                    								c_cln_mtch_accnt,
                    								c_xchng_cd,
                    								c_undrlyng,
                    								c_expry_dt,
                    								c_exrc_typ,
                    								c_prdct_typ ,
                    								d_ltp,
																		&d_crst_prft,
                    								&d_uncrst_prft,
                    								&d_avg_pr,
                    								c_errmsg
 	                 								);	
			if(i_return_val == -1)
      {
				 fn_errlog( c_ServiceName, "S31230",SQLMSG, c_errmsg );
        return -1;
      }
		}
		else if ( l_opnpstn_qty == 0 )
		{
			c_opnpstn_flw = 'N';

			i_return_val= fn_sqroff_pstn_spp (c_ServiceName,
                    								c_cln_mtch_accnt,
                    								c_xchng_cd,
                    								c_undrlyng,
                    								c_expry_dt,
                    								c_exrc_typ,
                    								c_prdct_typ ,
                    								d_ltp,
																		&d_crst_prft,
                   									&d_uncrst_prft,
                    								c_errmsg);
			if(i_return_val == -1)
      {
				 fn_errlog( c_ServiceName, "S31235",SQLMSG, c_errmsg );
        return -1;
      }
		}
		else 
		{
			if(DEBUG_MSG_LVL_3)
      {
        fn_userlog(c_ServiceName,"The customer is nither Normal nor SPAN position.");
      }	
		}
	
	}	
	/*** Inserting data into table ***/
	
	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog(c_ServiceName,"ptr_st_trade_book->c_cln_mtch_accnt |%s|",ptr_st_trade_book->c_cln_mtch_accnt);
		fn_userlog(c_ServiceName,"ptr_st_trade_book->c_xchng_cd       |%s|",ptr_st_trade_book->c_xchng_cd);
		fn_userlog(c_ServiceName,"ptr_st_trade_book->c_undrlyng       |%s|",ptr_st_trade_book->c_undrlyng);
		fn_userlog(c_ServiceName,"ptr_st_trade_book->c_prd_typ        |%c|",ptr_st_trade_book->c_prd_typ);
		fn_userlog(c_ServiceName,"ptr_st_trade_book->c_expry_dt       |%s|",ptr_st_trade_book->c_expry_dt);
		fn_userlog(c_ServiceName,"ptr_st_trade_book->c_opt_typ        |%c|",ptr_st_trade_book->c_opt_typ);
		fn_userlog(c_ServiceName,"ptr_st_trade_book->c_exrc_typ       |%c|",ptr_st_trade_book->c_exrc_typ);
		fn_userlog(c_ServiceName,"ptr_st_trade_book->c_ctgry_indstk   |%c|",ptr_st_trade_book->c_ctgry_indstk);
		fn_userlog(c_ServiceName,"ptr_st_trade_book->l_strike_prc     |%ld|",ptr_st_trade_book->l_strike_prc);
		fn_userlog(c_ServiceName,"Charges are 									 			|%ld|",l_charges);
		fn_userlog(c_ServiceName,"c_opnpstn_flw    										|%c|",c_opnpstn_flw);
		fn_userlog (c_ServiceName," d_avg_pr Is 						 					:%lf:",d_avg_pr);
		fn_userlog( c_ServiceName,"Realized PNL is   						 			|%lf|",d_crst_prft);	
		fn_userlog( c_ServiceName,"LTP is   						 				 			|%lf|",d_ltp);	
		fn_userlog( c_ServiceName,"l_opnpstn_qty	 										|%ld|",l_opnpstn_qty);	
		fn_userlog( c_ServiceName,"d_org_opn_val	 										|%lf|",d_org_opn_val);	
		fn_userlog( c_ServiceName,"Unrealized PNL is 						 			|%lf|",d_uncrst_prft);	
		fn_userlog( c_ServiceName,"Total PNL is      						 			|%lf|",d_total_prft);	
	}

	if (ptr_st_trade_book->c_prd_typ == 'P')
	{
		ptr_st_trade_book->c_prd_typ = 'F';
	}
	else if (ptr_st_trade_book->c_prd_typ == 'U')
	{
		ptr_st_trade_book->c_prd_typ = 'F';
	}
  else if (ptr_st_trade_book->c_prd_typ == 'I')      /*** else-if added in Ver 1.3 ***/
  {
    ptr_st_trade_book->c_prd_typ = 'O';
  }
		
	EXEC SQL
			SELECT 1 
			INTO  :i_pos_avl
			FROM  PCP_PRTFL_CNTRCT_PSTN
			WHERE PCP_CLM_MTCH_ACCNT =:ptr_st_trade_book->c_cln_mtch_accnt
			AND 	PCP_XCHNG_CD			 =:ptr_st_trade_book->c_xchng_cd
			AND 	PCP_PRDCT_TYP			 =:ptr_st_trade_book->c_prd_typ
			AND		PCP_INDSTK				 =:ptr_st_trade_book->c_ctgry_indstk
			AND		PCP_UNDRLYNG			 =:ptr_st_trade_book->c_undrlyng
			AND		PCP_EXPRY_DT			 =:ptr_st_trade_book->c_expry_dt	
			AND		PCP_EXER_TYP			 =:ptr_st_trade_book->c_exrc_typ	
			AND   PCP_STRK_PRC			 =:ptr_st_trade_book->l_strike_prc
			AND		PCP_OPT_TYP				 =:ptr_st_trade_book->c_opt_typ;	

	if ( ( SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND) )
	{
		 fn_errlog( c_ServiceName, "S31240",SQLMSG, c_errmsg );
		 return -1;	
	}

	if (SQLCODE == NO_DATA_FOUND)
	{
		i_pos_avl = 0;
		fn_userlog( c_ServiceName," Position not available insert new record |%d|",i_pos_avl);
	}
	if (i_pos_avl == 0 )
	{	
		EXEC SQL
			INSERT INTO PCP_PRTFL_CNTRCT_PSTN
			(
				PCP_CLM_MTCH_ACCNT,
				PCP_XCHNG_CD,
				PCP_PRDCT_TYP,
				PCP_INDSTK,		
				PCP_UNDRLYNG,	
				PCP_EXPRY_DT,
				PCP_EXER_TYP,
				PCP_STRK_PRC,
				PCP_OPT_TYP,
				PCP_OPNPSTN_FLW,
				PCP_OPNPSTN_QTY,
				PCP_OPNPSTN_VAL,
				PCP_RLLZD_PNL,
				PCP_UNRLLZD_PNL,
				PCP_TOTAL_PNL,
				PCP_CRRNT_MKT_PRC,
				PCP_BRKG_VAL,
				PCP_AVG_TRD_PRC,
				PCP_SPAN_FLG,
				PCP_TM_STMP
			)
			VALUES
			(
				:ptr_st_trade_book->c_cln_mtch_accnt,
				:ptr_st_trade_book->c_xchng_cd,
				:ptr_st_trade_book->c_prd_typ,
				:ptr_st_trade_book->c_ctgry_indstk,
				:ptr_st_trade_book->c_undrlyng,
				:ptr_st_trade_book->c_expry_dt,
				:ptr_st_trade_book->c_exrc_typ,
				:ptr_st_trade_book->l_strike_prc,		
				:ptr_st_trade_book->c_opt_typ,
				:c_opnpstn_flw,
				:l_opnpstn_qty,
				:d_org_opn_val,
				:d_crst_prft,
				:d_uncrst_prft,
				:d_total_prft,
				:d_ltp,
				:l_charges,
				:d_avg_pr,	
				:c_span_flg,
				sysdate
			);

		if ( SQLCODE != 0 )
		{
			fn_errlog( c_ServiceName, "S31245",SQLMSG, c_errmsg );
			return -1;
		}
	}
	else
	{
		EXEC SQL
		UPDATE 	PCP_PRTFL_CNTRCT_PSTN
		SET PCP_OPNPSTN_FLW = :c_opnpstn_flw,
				PCP_OPNPSTN_QTY = :l_opnpstn_qty,
				PCP_OPNPSTN_VAL = :d_org_opn_val,
				PCP_RLLZD_PNL		= :d_crst_prft,
				PCP_UNRLLZD_PNL	= :d_uncrst_prft,
				PCP_TOTAL_PNL		=	:d_total_prft,
				PCP_CRRNT_MKT_PRC = :d_ltp,
				PCP_BRKG_VAL			= :l_charges,
				PCP_AVG_TRD_PRC		= :d_avg_pr,
				PCP_SPAN_FLG      = :c_span_flg,
				PCP_TM_STMP       = sysdate
		WHERE PCP_CLM_MTCH_ACCNT =:ptr_st_trade_book->c_cln_mtch_accnt
		AND   PCP_XCHNG_CD       =:ptr_st_trade_book->c_xchng_cd
		AND   PCP_PRDCT_TYP      =:ptr_st_trade_book->c_prd_typ
		AND   PCP_INDSTK         =:ptr_st_trade_book->c_ctgry_indstk
		AND   PCP_UNDRLYNG       =:ptr_st_trade_book->c_undrlyng
		AND   PCP_EXPRY_DT       =:ptr_st_trade_book->c_expry_dt
		AND   PCP_EXER_TYP       =:ptr_st_trade_book->c_exrc_typ
		AND   PCP_STRK_PRC       =:ptr_st_trade_book->l_strike_prc
		AND   PCP_OPT_TYP        =:ptr_st_trade_book->c_opt_typ;
	
			if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31250",SQLMSG, c_errmsg );
        return -1;
      }

	}
	return 0;		
}	

int fn_exp_cntrct_optn_spp ( char *c_ServiceName,
                    	    struct st_cntopt_pos *ptr_st_cntopt_pos, 
                      		char *c_errmsg 
												)
{
	int   i_pos_avl       = 0;
	int   i_return_val    = 0;  /** Ver 1.3 **/
  long int l_charges    = 0;
  long int l_chrgs_tmp  = 0;
  char c_span_flg       ='\0';
  char c_opnpstn_flw    ='\0';
  double d_crst_prft    = 0.0;
  double d_uncrst_prft  = 0.0;
  double d_total_prft   = 0.0;
  double d_buy_val      = 0.0;
  double d_buy_val_m    = 0.0;
  double d_buy_val_h    = 0.0;
  double d_sell_val     = 0.0;
  double d_sell_val_m   = 0.0;
  double d_sell_val_h   = 0.0;
  double d_ex_val_m   	= 0.0;
  double d_ex_val_h   	= 0.0;
  double d_ex_val   		= 0.0;
  double d_as_val_m   	= 0.0;
  double d_as_val_h   	= 0.0;
  double d_as_val   		= 0.0;
  double d_base_prc     = 0.0;
  double d_org_opn_val  = 0.0;
  double d_ltp				  = 0.0;
	double d_op_opn_val   = 0.0;        /*** Ver 1.3 ***/	
	long int l_optplus_qty  = 0;         /*** Ver 1.3 ***/	
  long int l_opnpstn_qty= 0;
  long int l_avg_trd_prc= 0;
  long int l_strike_prc = 0;

  char c_cln_mtch_accnt [ 11 ];
  char c_xchng_cd [ 4 ];
  char c_prd_typ;
  char c_opt_typ;
  char c_undrlyng [ 7 ];
  char c_expry_dt [ LEN_DATE ];
  char c_exrc_typ;
  char c_ctgry_indstk;

  sql_cursor chrgs_cur;

  if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"Inside function  fn_exp_cntrct_optn_spp ");
  }

  MEMSET(c_cln_mtch_accnt);
  MEMSET(c_xchng_cd);
  MEMSET(c_prd_typ);
  MEMSET(c_opt_typ);
  MEMSET(c_undrlyng);
  MEMSET(c_expry_dt);
  MEMSET(c_exrc_typ);

  strcpy(c_cln_mtch_accnt,ptr_st_cntopt_pos->c_cln_mtch_accnt);
  strcpy(c_xchng_cd,ptr_st_cntopt_pos->c_xchng_cd);
  strcpy(c_undrlyng,ptr_st_cntopt_pos->c_undrlyng);
  strcpy(c_expry_dt,ptr_st_cntopt_pos->c_expry_dt);
  /*  c_prd_typ   = ptr_st_cntopt_pos->c_prd_typ; Ver 1.3 ***/
  c_prd_typ   = 'O';                             /* Ver 1.3 */
  c_opt_typ   = ptr_st_cntopt_pos->c_opt_typ;
  c_exrc_typ  = ptr_st_cntopt_pos->c_exrc_typ;
  c_ctgry_indstk  = ptr_st_cntopt_pos->c_ctgry_indstk;
	l_strike_prc		= ptr_st_cntopt_pos->l_strike_prc;
	
	EXEC SQL
     SELECT  NVL(FTQ_LST_TRD_PRC,0)
     INTO    :d_ltp
     FROM    FTQ_FO_TRD_QT
     WHERE   FTQ_XCHNG_CD  = :c_xchng_cd
     AND     FTQ_PRDCT_TYP = :c_prd_typ
     AND     FTQ_UNDRLYNG  = :c_undrlyng
     AND     FTQ_EXPRY_DT  = :c_expry_dt
     AND     FTQ_EXER_TYP  = :c_exrc_typ
     AND     FTQ_OPT_TYP   = :c_opt_typ
     AND     FTQ_STRK_PRC  = :l_strike_prc;

  if(SQLCODE  !=  0 && SQLCODE != NO_DATA_FOUND )
  {
		fn_userlog(c_ServiceName,"Error selecting LTP");
    fn_errlog( c_ServiceName, "S31255", SQLMSG, c_errmsg  );
    return -1;	
	}

  if( SQLCODE == NO_DATA_FOUND )
  {
    d_ltp = 0.0;
  }
	
	EXEC SQL ALLOCATE :chrgs_cur;

    EXEC SQL EXECUTE
      BEGIN
        OPEN :chrgs_cur FOR
          SELECT  NVL( SUM( NVL( ftd_brkg, 0 ) + NVL( ftd_tran_chrg, 0 ) + NVL( ftd_stamp_duty, 0 ) +
                            NVL( ftd_sebi_tt, 0 ) + NVL( ftd_stt, 0 ) + NVL( ftd_src_tx, 0 )+NVL( ftd_brkrg_igst,0 ) + NVL( ftd_brkrg_cgst,0 ) +NVL( ftd_brkrg_sgst,0 ) +NVL( ftd_brkrg_ugst,0 )), 0)
          FROM    ftd_fo_trd_dtls
          WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     ftd_xchng_cd        = :c_xchng_cd
          /* AND     ftd_prdct_typ       = :c_prd_typ ver 1.3 **/
          AND     ftd_prdct_typ       in ('O','I')  /** Added in ver 1.3 **/
          AND     ftd_undrlyng        = :c_undrlyng
          AND     ftd_expry_dt        = :c_expry_dt
          AND     ftd_exer_typ        = :c_exrc_typ
          AND     ftd_opt_typ         = :c_opt_typ
          AND     ftd_strk_prc        = :l_strike_prc
          UNION ALL
          SELECT  NVL( SUM( NVL( ftd_brkg, 0 ) + NVL( ftd_tran_chrg, 0 ) + NVL( ftd_stamp_duty, 0 ) +
                            NVL( ftd_sebi_tt, 0 ) + NVL( ftd_stt, 0 ) + NVL( ftd_src_tx, 0 )+NVL( ftd_brkrg_igst,0 ) + NVL( ftd_brkrg_cgst,0 ) +NVL( ftd_brkrg_sgst,0 ) +NVL( ftd_brkrg_ugst,0 )), 0)
          FROM    ftd_fo_trd_dtls_hstry
          WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     ftd_xchng_cd        = :c_xchng_cd
          /** AND     ftd_prdct_typ       = :c_prd_typ ver 1.3 **/
					AND     ftd_prdct_typ       in ('O','I')  /** Added in ver 1.3 **/
          AND     ftd_undrlyng        = :c_undrlyng
          AND     ftd_expry_dt        = :c_expry_dt
          AND     ftd_exer_typ        = :c_exrc_typ
          AND     ftd_opt_typ         = :c_opt_typ
          AND     ftd_strk_prc        = :l_strike_prc
          UNION ALL
          SELECT  NVL( SUM( NVL( fec_brkg_val, 0 ) + NVL( fec_tran_chrg, 0 ) + NVL( fec_stamp_duty, 0 ) +
                            NVL( fec_sebi_tt, 0 ) + NVL( fec_stt, 0 ) + NVL( fec_src_tx, 0 )), 0)
          FROM    fec_fo_exrc_conf
          WHERE   fec_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     fec_xchng_cd        = :c_xchng_cd
          AND     fec_prdct_typ       = :c_prd_typ
          AND     fec_undrlyng        = :c_undrlyng
          AND     fec_expry_dt        = :c_expry_dt
          AND     fec_exer_typ        = :c_exrc_typ
          AND     fec_opt_typ         = :c_opt_typ
          AND     fec_strk_prc        = :l_strike_prc
          UNION ALL
          SELECT  NVL( SUM( NVL( fec_brkg_val, 0 ) + NVL( fec_tran_chrg, 0 ) + NVL( fec_stamp_duty, 0 ) +
                            NVL( fec_sebi_tt, 0 ) + NVL( fec_stt, 0 ) + NVL( fec_src_tx, 0 )), 0)
          FROM    fec_fo_exrc_conf_hstry
          WHERE   fec_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     fec_xchng_cd        = :c_xchng_cd
          AND     fec_prdct_typ       = :c_prd_typ
          AND     fec_undrlyng        = :c_undrlyng
          AND     fec_expry_dt        = :c_expry_dt
          AND     fec_exer_typ        = :c_exrc_typ
          AND     fec_opt_typ         = :c_opt_typ
          AND     fec_strk_prc        = :l_strike_prc
				  UNION ALL
          SELECT  NVL( SUM( NVL( fab_brkrg_val, 0 ) + NVL( fab_tran_chrg, 0 ) + NVL( fab_stamp_duty, 0 ) +
                            NVL( fab_sebi_tt, 0 ) + NVL( fab_stt, 0 ) + NVL( fab_src_tx, 0 )), 0)
          FROM    fab_fo_asgnmnt_book
          WHERE   fab_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     fab_undrlyng        = :c_undrlyng 
          AND     fab_expry_dt        = :c_expry_dt
          AND     fab_xchng_cd        = :c_xchng_cd
          AND     fab_prdct_typ       = :c_prd_typ
          AND     fab_exer_typ        = :c_exrc_typ
          AND     fab_opt_typ         = :c_opt_typ
          AND     fab_strk_prc        = :l_strike_prc
          UNION ALL
          SELECT  NVL( SUM( NVL( fab_brkrg_val, 0 ) + NVL( fab_tran_chrg, 0 ) + NVL( fab_stamp_duty, 0 ) +
                            NVL( fab_sebi_tt, 0 ) + NVL( fab_stt, 0 ) + NVL( fab_src_tx, 0 )), 0)
          FROM    fab_fo_asgnmnt_book_hstry
          WHERE   fab_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     fab_undrlyng        = :c_undrlyng   
          AND     fab_expry_dt        = :c_expry_dt  
          AND     fab_xchng_cd        = :c_xchng_cd
          AND     fab_prdct_typ       = :c_prd_typ
          AND     fab_exer_typ        = :c_exrc_typ
          AND     fab_opt_typ         = :c_opt_typ
          AND     fab_strk_prc        = :l_strike_prc;
       END;
    END-EXEC;

    if ( SQLCODE != 0 )
    {
      if ( SQLCODE == NO_DATA_FOUND )
      {
        fn_userlog( c_ServiceName,"Inside NO_DATA_FOUND" );
      }
      else
      {
        fn_errlog( c_ServiceName, "S31260", SQLMSG, c_errmsg  );
        EXEC SQL CLOSE :chrgs_cur;
        EXEC SQL FREE :chrgs_cur;
				return -1;
      }
    }
		
		while( 1 )
    {
      EXEC SQL FETCH :chrgs_cur
               INTO  :l_chrgs_tmp;

      if( SQLCODE != 0 )
      {
        if ( SQLCODE == NO_DATA_FOUND )
        {
          break;
        }
        else
        {
					fn_userlog( c_ServiceName,"Error fetching data"); 
          fn_errlog( c_ServiceName, "S31265", SQLMSG, c_errmsg  );
          EXEC SQL CLOSE :chrgs_cur;
          EXEC SQL FREE :chrgs_cur;
					return -1;
        }
      }

      l_charges += l_chrgs_tmp;
    
		} /*** End of while loop ***/

    EXEC SQL CLOSE :chrgs_cur;
    EXEC SQL FREE :chrgs_cur;
		
		/*** Checking customer is SPAN or normal ***/

    EXEC SQL
       SELECT  NVL(CLM_SPAN_ALLWD,'N')
       INTO    :c_span_flg
       FROM    CLM_CLNT_MSTR
       WHERE   CLM_MTCH_ACCNT  = :c_cln_mtch_accnt;

    if(SQLCODE  !=  0 )
    {
      fn_userlog( c_ServiceName,"Error while selecting SPAN flag");
      fn_errlog( c_ServiceName, "S31270", SQLMSG, c_errmsg  );
      return -1;
    }

    if(DEBUG_MSG_LVL_3)
    {
      fn_userlog( c_ServiceName,"SPAN flag is |%c|",c_span_flg);
    }

    if (c_span_flg == 'N' ) 
    {
    	EXEC SQL
			SELECT  NVL(sum(open_qty),0),
							NVL(sum(open_value),0)
			INTO    :l_opnpstn_qty,
              :d_org_opn_val
			FROM
			(
    		SELECT  FOP_OPNPSTN_QTY open_qty,
    						FOP_OPNPSTN_VAL	open_value
				FROM    fop_fo_options_pstn
				WHERE   FOP_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
				AND     FOP_XCHNG_CD        = :c_xchng_cd
				AND     FOP_PRDCT_TYP       = :c_prd_typ
				AND     FOP_UNDRLYNG        = :c_undrlyng
				AND     FOP_EXPRY_DT        = :c_expry_dt
				AND     FOP_STRK_PRC        = :l_strike_prc
				AND     FOP_EXER_TYP        = :c_exrc_typ
				AND     FOP_OPT_TYP         = :c_opt_typ
			UNION ALL
				SELECT  FOP_OPNPSTN_QTY open_qty,
                FOP_OPNPSTN_VAL open_value
        FROM    fop_fo_options_pstn_hstry
        WHERE   FOP_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
        AND     FOP_XCHNG_CD        = :c_xchng_cd
        AND     FOP_PRDCT_TYP       = :c_prd_typ
        AND     FOP_UNDRLYNG        = :c_undrlyng
        AND     FOP_EXPRY_DT        = :c_expry_dt
        AND     FOP_STRK_PRC        = :l_strike_prc
        AND     FOP_EXER_TYP        = :c_exrc_typ
        AND     FOP_OPT_TYP         = :c_opt_typ
			);
	
			if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
			{
				fn_userlog( c_ServiceName,"Error while selecting open Position value");
				fn_errlog( c_ServiceName, "S31275", SQLMSG, c_errmsg  );
				return -1;
			}
		}
		else if ((c_span_flg == 'Y' || c_span_flg == 'Z') )
		{
			EXEC SQL
			SELECT  NVL(sum(open_qty),0),
              NVL(sum(open_value),0)
      INTO    :l_opnpstn_qty,
              :d_org_opn_val
			FROM
			(
				SELECT FCP_OPNPSTN_QTY open_qty,
						 	FCP_OPNPSTN_VAL	 open_value
				FROM  FCP_FO_SPN_CNTRCT_PSTN
				WHERE FCP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
				AND   FCP_XCHNG_CD       = :c_xchng_cd
				AND   FCP_EXPRY_DT       = :c_expry_dt
				AND   FCP_PRDCT_TYP      = :c_prd_typ
      	AND   FCP_UNDRLYNG       = :c_undrlyng
      	AND   FCP_EXER_TYP       = :c_exrc_typ
      	AND   FCP_OPT_TYP        = :c_opt_typ
      	AND   FCP_STRK_PRC       = :l_strike_prc
			UNION ALL
				SELECT FCP_OPNPSTN_QTY open_qty,
              FCP_OPNPSTN_VAL  open_value
        FROM  FCP_FO_SPN_CNTRCT_PSTN_HSTRY
        WHERE FCP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
        AND   FCP_XCHNG_CD       = :c_xchng_cd
        AND   FCP_EXPRY_DT       = :c_expry_dt
        AND   FCP_PRDCT_TYP      = :c_prd_typ
        AND   FCP_UNDRLYNG       = :c_undrlyng
        AND   FCP_EXER_TYP       = :c_exrc_typ
        AND   FCP_OPT_TYP        = :c_opt_typ
        AND   FCP_STRK_PRC       = :l_strike_prc
			);

      if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
      	fn_userlog( c_ServiceName,"Error while selecting open Position value");
      	fn_errlog( c_ServiceName, "S31280", SQLMSG, c_errmsg  );
      	return -1;
      }
    }
		else
    {
      fn_userlog( c_ServiceName," Client is niether SPAN nor Normal and dont have option+ position."); /** Ver 1.3 ***/
      fn_errlog( c_ServiceName, "S31285", SQLMSG, c_errmsg  );
      return -1;
    }	

		/*** Ver 1.3 starts ***/
		
		EXEC SQL
         SELECT nvl(sum(decode(FOD_ORDR_FLW,'B',FOD_EXEC_QTY,FOD_EXEC_QTY * -1)),0)
         INTO   :l_optplus_qty
         FROM   FOD_FO_ORDR_DTLS
         WHERE FOD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
         AND   FOD_XCHNG_CD  = :c_xchng_cd
         AND   FOD_PRDCT_TYP = 'I'
         AND   FOD_UNDRLYNG = :c_undrlyng
         AND   FOD_EXPRY_DT = :c_expry_dt
         AND   FOD_EXER_TYP = :c_exrc_typ
         AND   FOD_STRK_PRC  = :l_strike_prc
         AND   FOD_OPT_TYP = :c_opt_typ
         AND   FOD_EXEC_QTY != 0;

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog( c_ServiceName, "S31290",SQLMSG, c_errmsg );
      return -1;
    }
    else if(SQLCODE == NO_DATA_FOUND)
    {
      l_optplus_qty = 0;
    }
			
		if(l_optplus_qty > 0 )
    {
     	i_return_val = fn_optplusbuy_opnpstn_spp(c_ServiceName,
                                           c_cln_mtch_accnt,
                                           c_xchng_cd,
                                           c_undrlyng,
                                           c_expry_dt,
                                           c_exrc_typ,
                                           l_strike_prc,
                                           c_opt_typ,
                                           &d_op_opn_val,
                                           c_errmsg
                                          );

     	if ( i_return_val == -1 )
     	{
       	fn_errlog( c_ServiceName, "S31295",LIBMSG, c_errmsg );
       	return -1;
     	}

    }
    else if(l_optplus_qty < 0)
    {
     	i_return_val = fn_optplussell_opnpstn_spp(c_ServiceName,
                                            c_cln_mtch_accnt,
                                            c_xchng_cd,
                                            c_undrlyng,
                                            c_expry_dt,
                                            c_exrc_typ,
                                            l_strike_prc,
                                            c_opt_typ,
                                            &d_op_opn_val,
                                            c_errmsg
                                           );

     	if ( i_return_val == -1 )
     	{
       	fn_errlog( c_ServiceName, "S31300",LIBMSG, c_errmsg );
       	return -1;
     	}
    }
    else
    {
     	d_op_opn_val = 0.0;
    }

   	if(DEBUG_MSG_LVL_3)
   	{
    	fn_userlog( c_ServiceName,"l_opnpstn_qty        |%ld|",l_opnpstn_qty);
    	fn_userlog( c_ServiceName,"d_org_opn_val        |%lf|",d_org_opn_val);
    	fn_userlog( c_ServiceName,"l_optplus_qty        |%ld|",l_optplus_qty); /* Ver 1.3 */
    	fn_userlog( c_ServiceName,"d_op_opn_val         |%lf|",d_op_opn_val); /* Ver 1.3 */
    }

		/*** Added in ver 1.3 ***/

		l_opnpstn_qty = l_opnpstn_qty + l_optplus_qty;
		d_org_opn_val = d_org_opn_val + d_op_opn_val;

		/*** End in ver 1.3 ***/

    if( l_opnpstn_qty > 0 )
    {
    	c_opnpstn_flw = 'B';
    }
    else if( l_opnpstn_qty < 0)
    {
    	c_opnpstn_flw = 'S';
    }
    else
    {
    	c_opnpstn_flw = 'N';
    }

		EXEC SQL
      SELECT  NVL(SUM((ftd_exctd_qty * ftd_exctd_rt ) - NVL(ftd_frs_brkg,0) - NVL(ftd_cvr_brkg,0 )),0)
      INTO    :d_buy_val_m
      FROM    ftd_fo_trd_dtls
      WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND     ftd_xchng_cd        = :c_xchng_cd
      /*  AND     ftd_prdct_typ       = :c_prd_typ Ver 1.3 **/
      AND     ftd_prdct_typ       in ('O','I') /** Added in ver 1.3 **/
      AND     ftd_undrlyng        = :c_undrlyng
      AND     ftd_expry_dt        = :c_expry_dt
      AND     ftd_exer_typ        = :c_exrc_typ
      AND     ftd_opt_typ         = :c_opt_typ
      AND     ftd_strk_prc        = :l_strike_prc
      AND     ftd_trd_flw         = 'B';

    if ( SQLCODE != 0 )
    {
			fn_userlog( c_ServiceName," Error selecting buy value from main");
    	fn_errlog( c_ServiceName, "S31305", SQLMSG, c_errmsg  );
    	return -1;
    }

    EXEC SQL
      SELECT  NVL(SUM((ftd_exctd_qty * ftd_exctd_rt ) - NVL(ftd_frs_brkg,0) - NVL(ftd_cvr_brkg,0)),0)
      INTO    :d_buy_val_h
      FROM    ftd_fo_trd_dtls_hstry
      WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND     ftd_xchng_cd        = :c_xchng_cd
      /** AND     ftd_prdct_typ       = :c_prd_typ ** Ver 1.3 **/
			AND     ftd_prdct_typ       in ('O','I') /** Added in ver 1.3 **/
      AND     ftd_undrlyng        = :c_undrlyng
      AND     ftd_expry_dt        = :c_expry_dt
      AND     ftd_exer_typ        = :c_exrc_typ
      AND     ftd_opt_typ         = :c_opt_typ
      AND     ftd_strk_prc        = :l_strike_prc
      AND     ftd_trd_flw         = 'B';

    if ( SQLCODE != 0 )
    {
			fn_userlog( c_ServiceName," Error selecting buy value from history");
    	fn_errlog( c_ServiceName, "S31310", SQLMSG, c_errmsg  );
    	return -1;
    }

		if(DEBUG_MSG_LVL_3)
  	{
    	fn_userlog( c_ServiceName," Total buy value from main    |%lf|",d_buy_val_m);
    	fn_userlog( c_ServiceName," Total buy value from history |%lf|",d_buy_val_h);
  	}

		d_buy_val = d_buy_val_m + d_buy_val_h;

		if(DEBUG_MSG_LVL_3)
  	{
    	fn_userlog( c_ServiceName," Total buy value  |%lf|",d_buy_val);
  	}

		EXEC SQL
      SELECT  NVL(SUM((ftd_exctd_qty * ftd_exctd_rt) - NVL(ftd_frs_brkg,0 ) - NVL(ftd_cvr_brkg,0)),0)
      INTO    :d_sell_val_m
      FROM    ftd_fo_trd_dtls
      WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND     ftd_xchng_cd        = :c_xchng_cd
      /** AND     ftd_prdct_typ       = :c_prd_typ **Ver 1.3 **/
			AND     ftd_prdct_typ       in ('O','I') /** Added in ver 1.3 **/
      AND     ftd_undrlyng        = :c_undrlyng
      AND     ftd_expry_dt        = :c_expry_dt
      AND     ftd_exer_typ        = :c_exrc_typ
      AND     ftd_opt_typ         = :c_opt_typ
      AND     ftd_strk_prc        = :l_strike_prc
      AND     ftd_trd_flw         = 'S';

    if ( SQLCODE != 0 )
    {
			fn_userlog( c_ServiceName," Error selecting buy value from history");
    	fn_errlog( c_ServiceName, "S31315", SQLMSG, c_errmsg  );
    	return -1;
    }

    EXEC SQL
      SELECT  NVL(SUM((ftd_exctd_qty * ftd_exctd_rt) - NVL(ftd_frs_brkg,0) - NVL(ftd_cvr_brkg,0)),0)
      INTO    :d_sell_val_h
      FROM    ftd_fo_trd_dtls_hstry
      WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND     ftd_xchng_cd        = :c_xchng_cd
      /* AND     ftd_prdct_typ       = :c_prd_typ Ver 1.3 **/
			AND     ftd_prdct_typ       in ('O','I') /** Added in ver 1.3 **/
      AND     ftd_undrlyng        = :c_undrlyng
      AND     ftd_expry_dt        = :c_expry_dt
      AND     ftd_exer_typ        = :c_exrc_typ
      AND     ftd_opt_typ         = :c_opt_typ
      AND     ftd_strk_prc        = :l_strike_prc
      AND     ftd_trd_flw         = 'S';

    if ( SQLCODE != 0 )
    {
			fn_userlog( c_ServiceName," Error selecting buy value from history");
      fn_errlog( c_ServiceName, "S31320", SQLMSG, c_errmsg  );
      return -1;
    }

		if(DEBUG_MSG_LVL_3)
  	{
    	fn_userlog( c_ServiceName," Total sell value from main    |%lf|",d_sell_val_m);
    	fn_userlog( c_ServiceName," Total sell value from history |%lf|",d_sell_val_h);
  	}

    d_sell_val = d_sell_val_m + d_sell_val_h;

		if(DEBUG_MSG_LVL_3)
  	{
    	fn_userlog( c_ServiceName," Total sell value  |%lf|",d_sell_val);
  	}

		if ( c_opt_typ == 'P' )
    {
      EXEC SQL
        SELECT NVL(SUM(fec_exrc_qty * (fec_strk_prc - fec_curr_mkt_prc)),0)
        INTO :d_ex_val_m
        FROM fec_fo_exrc_conf
        WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fec_xchng_cd        = :c_xchng_cd
        AND   fec_prdct_typ       = :c_prd_typ
        AND   fec_undrlyng        = :c_undrlyng
        AND   fec_expry_dt        = :c_expry_dt
        AND   fec_exer_typ        = :c_exrc_typ
        AND   fec_opt_typ         = :c_opt_typ
        AND   fec_strk_prc        = :l_strike_prc;
    }
    else
    {
      EXEC SQL
        SELECT NVL(SUM(fec_exrc_qty * (fec_curr_mkt_prc - fec_strk_prc)),0)
        INTO :d_ex_val_m
        FROM fec_fo_exrc_conf
        WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fec_xchng_cd        = :c_xchng_cd
        AND   fec_prdct_typ       = :c_prd_typ
        AND   fec_undrlyng        = :c_undrlyng
        AND   fec_expry_dt        = :c_expry_dt
        AND   fec_exer_typ        = :c_exrc_typ
        AND   fec_opt_typ         = :c_opt_typ
        AND   fec_strk_prc        = :l_strike_prc;
    }

    if ( SQLCODE != 0 )
    {
		  fn_userlog( c_ServiceName," Error selecting buy value from history");
      fn_errlog( c_ServiceName, "S31325", SQLMSG, c_errmsg  );
      return -1;	
    }

		if ( c_opt_typ == 'P' )
    {
      EXEC SQL
        SELECT NVL(SUM(fec_exrc_qty * (fec_strk_prc - fec_curr_mkt_prc)),0)
        INTO :d_ex_val_h
        FROM fec_fo_exrc_conf_hstry
        WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fec_xchng_cd        = :c_xchng_cd
        AND   fec_prdct_typ       = :c_prd_typ
        AND   fec_undrlyng        = :c_undrlyng
        AND   fec_expry_dt        = :c_expry_dt
        AND   fec_exer_typ        = :c_exrc_typ
        AND   fec_opt_typ         = :c_opt_typ
        AND   fec_strk_prc        = :l_strike_prc;
    }
    else
    {
      EXEC SQL
        SELECT NVL(SUM(fec_exrc_qty * (fec_curr_mkt_prc - fec_strk_prc)),0)
        INTO :d_ex_val_h
        FROM fec_fo_exrc_conf_hstry
        WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fec_xchng_cd        = :c_xchng_cd
        AND   fec_prdct_typ       = :c_prd_typ
        AND   fec_undrlyng        = :c_undrlyng
        AND   fec_expry_dt        = :c_expry_dt
        AND   fec_exer_typ        = :c_exrc_typ
        AND   fec_opt_typ         = :c_opt_typ
        AND   fec_strk_prc        = :l_strike_prc;
    }

    if ( SQLCODE != 0 )
    {
			fn_userlog( c_ServiceName," Error selecting buy value from history");
      fn_errlog( c_ServiceName, "S31330", SQLMSG, c_errmsg  );
      return -1;
    }

		if(DEBUG_MSG_LVL_3)
    {
      fn_userlog( c_ServiceName," Total exercised value from main    |%lf|",d_ex_val_m);
      fn_userlog( c_ServiceName," Total exercised value from history |%lf|",d_ex_val_h);
    }

    d_ex_val = d_ex_val_m + d_ex_val_h;
		
		if(DEBUG_MSG_LVL_3)
    {
      fn_userlog( c_ServiceName," Total exercised value |%lf|",d_ex_val);
		}
	
		if ( c_opt_typ == 'P' )
    {
      EXEC SQL
        SELECT NVL(SUM(fab_asgnd_qty * (fab_strk_prc - fab_sttlmnt_prc)),0)
      INTO :d_as_val_m
      FROM fab_fo_asgnmnt_book
      WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND   fab_undrlyng        = :c_undrlyng  
      AND   fab_expry_dt        = :c_expry_dt 
      AND   fab_xchng_cd        = :c_xchng_cd
      AND   fab_prdct_typ       = :c_prd_typ
      AND   fab_exer_typ        = :c_exrc_typ
      AND   fab_opt_typ         = :c_opt_typ
      AND   fab_strk_prc        = :l_strike_prc;
    }
    else
    {
      EXEC SQL
        SELECT NVL(SUM(fab_asgnd_qty * (fab_sttlmnt_prc - fab_strk_prc)),0)
      INTO :d_as_val_m
      FROM fab_fo_asgnmnt_book
      WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND   fab_undrlyng        = :c_undrlyng    
      AND   fab_expry_dt        = :c_expry_dt   
      AND   fab_xchng_cd        = :c_xchng_cd
      AND   fab_prdct_typ       = :c_prd_typ
      AND   fab_exer_typ        = :c_exrc_typ
      AND   fab_opt_typ         = :c_opt_typ
      AND   fab_strk_prc        = :l_strike_prc;
    }

    if ( SQLCODE != 0 )
    {
			fn_userlog( c_ServiceName," Error selecting buy value from history");
      fn_errlog( c_ServiceName, "S31335", SQLMSG, c_errmsg  );
      return -1;
    }

		 if ( c_opt_typ == 'P' )
    {
      EXEC SQL
        SELECT NVL(SUM(fab_asgnd_qty * (fab_strk_prc - fab_sttlmnt_prc)),0)
      INTO :d_as_val_h
      FROM fab_fo_asgnmnt_book_hstry
      WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND   fab_xchng_cd        = :c_xchng_cd
      AND   fab_prdct_typ       = :c_prd_typ
      AND   fab_undrlyng        = :c_undrlyng
      AND   fab_expry_dt        = :c_expry_dt
      AND   fab_exer_typ        = :c_exrc_typ
      AND   fab_opt_typ         = :c_opt_typ
      AND   fab_strk_prc        = :l_strike_prc;
    }
    else
    {
      EXEC SQL
        SELECT NVL(SUM(fab_asgnd_qty * (fab_sttlmnt_prc - fab_strk_prc)),0)
      INTO :d_as_val_h
      FROM fab_fo_asgnmnt_book_hstry
      WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND   fab_xchng_cd        = :c_xchng_cd
      AND   fab_prdct_typ       = :c_prd_typ
      AND   fab_undrlyng        = :c_undrlyng
      AND   fab_expry_dt        = :c_expry_dt
      AND   fab_exer_typ        = :c_exrc_typ
      AND   fab_opt_typ         = :c_opt_typ
      AND   fab_strk_prc        = :l_strike_prc;
    }

    if ( SQLCODE != 0 )
    {
			fn_userlog( c_ServiceName," Error selecting buy value from history");
      fn_errlog( c_ServiceName, "S31340", SQLMSG, c_errmsg  );
      return -1;
    }

		if(DEBUG_MSG_LVL_3)
    {
      fn_userlog( c_ServiceName," Total assigned value from main    |%lf|",d_as_val_m);
      fn_userlog( c_ServiceName," Total assigned value from history |%lf|",d_as_val_h);
    }

    d_as_val = d_as_val_m + d_as_val_h;

		if(DEBUG_MSG_LVL_3)
    {
      fn_userlog( c_ServiceName," Total assigned value from main    |%lf|",d_as_val);
    }

    d_crst_prft = d_sell_val - d_buy_val + d_ex_val - d_as_val;
		d_uncrst_prft = l_opnpstn_qty * d_ltp ;
    d_total_prft = d_crst_prft + d_uncrst_prft;

		if(DEBUG_MSG_LVL_3)
  	{
    	fn_userlog( c_ServiceName,"Realized PNL is   |%lf|",d_crst_prft);
    	fn_userlog( c_ServiceName,"Unrealized PNL is |%lf|",d_uncrst_prft);
    	fn_userlog( c_ServiceName,"Total PNL is      |%lf|",d_total_prft);
  	}
	
	 EXEC SQL
     SELECT decode(:l_opnpstn_qty,0,0,round(((:d_org_opn_val/:l_opnpstn_qty)),2))
      INTO : d_base_prc
      FROM  dual;


      l_avg_trd_prc = (long)d_base_prc;

		if( DEBUG_MSG_LVL_3 ) 
		{
      fn_userlog(c_ServiceName,"l_avg_trd_prc Is :%ld:", l_avg_trd_prc);
      fn_userlog(c_ServiceName,"d_base_prc Is 	 :%lf:", d_base_prc);
    }

	/*** Inserting data into table ***/

  if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"c_cln_mtch_accnt |%s|",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"c_xchng_cd       |%s|",c_xchng_cd);
    fn_userlog(c_ServiceName,"c_undrlyng       |%s|",c_undrlyng);
    fn_userlog(c_ServiceName,"c_prd_typ        |%c|",c_prd_typ);
    fn_userlog(c_ServiceName,"c_expry_dt       |%s|",c_expry_dt);
    fn_userlog(c_ServiceName,"c_opt_typ        |%c|",c_opt_typ);
    fn_userlog(c_ServiceName,"c_exrc_typ       |%c|",c_exrc_typ);
    fn_userlog(c_ServiceName,"c_ctgry_indstk   |%c|",c_ctgry_indstk);
    fn_userlog(c_ServiceName,"l_strike_prc     |%ld|",l_strike_prc);
    fn_userlog(c_ServiceName,"charges are      |%ld|",l_charges);
    fn_userlog(c_ServiceName,"c_opnpstn_flw    |%c|",c_opnpstn_flw);
    fn_userlog(c_ServiceName,"l_avg_trd_prc Is :%ld:",l_avg_trd_prc);
    fn_userlog(c_ServiceName,"Realized PNL is  |%lf|",d_crst_prft);
    fn_userlog(c_ServiceName,"LTP is           |%lf|",d_ltp);
    fn_userlog(c_ServiceName,"l_opnpstn_qty    |%ld|",l_opnpstn_qty);
    fn_userlog(c_ServiceName,"d_org_opn_val    |%lf|",d_org_opn_val);
    fn_userlog(c_ServiceName,"Unrealized PNL is|%lf|",d_uncrst_prft);
    fn_userlog(c_ServiceName,"Total PNL is     |%lf|",d_total_prft);
  }

  EXEC SQL
      SELECT 1
      INTO  :i_pos_avl
      FROM  PCP_PRTFL_CNTRCT_PSTN_HSTRY
      WHERE PCP_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
      AND   PCP_XCHNG_CD       =:c_xchng_cd
      AND   PCP_PRDCT_TYP      =:c_prd_typ
      AND   PCP_INDSTK         =:c_ctgry_indstk
      AND   PCP_UNDRLYNG       =:c_undrlyng
      AND   PCP_EXPRY_DT       =:c_expry_dt
      AND   PCP_EXER_TYP       =:c_exrc_typ
      AND   PCP_STRK_PRC       =:l_strike_prc
      AND   PCP_OPT_TYP        =:c_opt_typ;

  if ( ( SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND) )
  {
     fn_errlog( c_ServiceName, "S31345",SQLMSG, c_errmsg );
     return -1;
  }

	if (SQLCODE == NO_DATA_FOUND)
  {
    i_pos_avl = 0;
    fn_userlog( c_ServiceName," Position not available insert new record |%d|",i_pos_avl);
  }

  if (i_pos_avl == 0 )
  {
    EXEC SQL
      INSERT INTO PCP_PRTFL_CNTRCT_PSTN_HSTRY
      (
        PCP_CLM_MTCH_ACCNT,
        PCP_XCHNG_CD,
        PCP_PRDCT_TYP,
        PCP_INDSTK,
        PCP_UNDRLYNG,
        PCP_EXPRY_DT,
        PCP_EXER_TYP,
        PCP_STRK_PRC,
        PCP_OPT_TYP,
        PCP_OPNPSTN_FLW,
        PCP_OPNPSTN_QTY,
        PCP_OPNPSTN_VAL,
        PCP_RLLZD_PNL,
        PCP_UNRLLZD_PNL,
        PCP_TOTAL_PNL,
        PCP_CRRNT_MKT_PRC,
        PCP_BRKG_VAL,
        PCP_AVG_TRD_PRC,
        PCP_SPAN_FLG,
        PCP_TM_STMP
      )
      VALUES
      (
        :c_cln_mtch_accnt,
        :c_xchng_cd,
        :c_prd_typ,
        :c_ctgry_indstk,
        :c_undrlyng,
        :c_expry_dt,
        :c_exrc_typ,
        :l_strike_prc,
        :c_opt_typ,
        :c_opnpstn_flw,
        :l_opnpstn_qty,
        :d_org_opn_val,
        :d_crst_prft,
        :d_uncrst_prft,
        :d_total_prft,
        :d_ltp,
        :l_charges,
        :l_avg_trd_prc,
        :c_span_flg,
        sysdate
      );

 			if ( SQLCODE != 0 )
  		{
    		fn_errlog( c_ServiceName, "S31350",SQLMSG, c_errmsg );
    		return -1;
  		}
  }
  else
  {
    EXEC SQL
    UPDATE  PCP_PRTFL_CNTRCT_PSTN_HSTRY
    SET PCP_OPNPSTN_FLW = :c_opnpstn_flw,
        PCP_OPNPSTN_QTY = :l_opnpstn_qty,
        PCP_OPNPSTN_VAL = :d_org_opn_val,
        PCP_RLLZD_PNL   = :d_crst_prft,
        PCP_UNRLLZD_PNL = :d_uncrst_prft,
        PCP_TOTAL_PNL   = :d_total_prft,
        PCP_CRRNT_MKT_PRC = :d_ltp,
        PCP_BRKG_VAL      = :l_charges,
        PCP_AVG_TRD_PRC   = :l_avg_trd_prc,
				PCP_SPAN_FLG      = :c_span_flg,
				PCP_TM_STMP       = sysdate
    WHERE PCP_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
    AND   PCP_XCHNG_CD       =:c_xchng_cd
    AND   PCP_PRDCT_TYP      =:c_prd_typ
    AND   PCP_INDSTK         =:c_ctgry_indstk
    AND   PCP_UNDRLYNG       =:c_undrlyng
    AND   PCP_EXPRY_DT       =:c_expry_dt
    AND   PCP_EXER_TYP       =:c_exrc_typ
    AND   PCP_STRK_PRC       =:l_strike_prc
    AND   PCP_OPT_TYP        =:c_opt_typ;

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31355",SQLMSG, c_errmsg );
      return -1;
    }
  }

  if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"Delete record from current table");
	}

	EXEC SQL
			DELETE FROM PCP_PRTFL_CNTRCT_PSTN
			WHERE PCP_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
    	AND   PCP_XCHNG_CD       =:c_xchng_cd
    	AND   PCP_PRDCT_TYP      =:c_prd_typ
    	AND   PCP_INDSTK         =:c_ctgry_indstk
    	AND   PCP_UNDRLYNG       =:c_undrlyng
    	AND   PCP_EXPRY_DT       =:c_expry_dt
    	AND   PCP_EXER_TYP       =:c_exrc_typ
    	AND   PCP_STRK_PRC       =:l_strike_prc
    	AND   PCP_OPT_TYP        =:c_opt_typ;

		if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
      fn_errlog( c_ServiceName, "S31360",SQLMSG, c_errmsg );
      return -1;
    }

	return 0;

}

int fn_exp_cntrct_fut_spp ( char *c_ServiceName,
                        struct st_cntfut_pos *ptr_st_cntfut_pos,
                        char *c_errmsg
                      )
{

	int   i_pos_avl       = 0;
	int   i_return_val    = 0;
  long int l_charges    = 0;
  long int l_chrgs_tmp  = 0;
  char c_span_flg       ='\0';
  char c_opnpstn_flw    ='\0';
  double d_crst_prft    = 0.0;
  double d_uncrst_prft  = 0.0;
  double d_total_prft   = 0.0;
  double d_buy_val      = 0.0;
  double d_buy_val_m    = 0.0;
  double d_buy_val_h    = 0.0;
  double d_sell_val     = 0.0;
  double d_sell_val_m   = 0.0;
  double d_sell_val_h   = 0.0;
  double d_base_prc     = 0.0;
  double d_org_opn_val  = 0.0;
  double d_ltp          = 0.0;
  double d_avg_pr       = 0.0;
  long int l_opnpstn_qty= 0;
  long int l_avg_trd_prc= 0;
  long int l_strike_prc = 0;

	char c_cln_mtch_accnt [ 11 ];
  char c_xchng_cd [ 4 ];
  char c_prd_typ;
  char c_undrlyng [ 7 ];
  char c_expry_dt [ LEN_DATE ];
  char c_exrc_typ;
  char c_ctgry_indstk;

  sql_cursor chrgs_cur;

  if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"Inside function  fn_exp_cntrct_optn_spp ");
  }

  MEMSET(c_cln_mtch_accnt);
  MEMSET(c_xchng_cd);
  MEMSET(c_undrlyng);
  MEMSET(c_expry_dt);

	ptr_st_cntfut_pos->c_prd_typ = 'F';

  strcpy(c_cln_mtch_accnt,ptr_st_cntfut_pos->c_cln_mtch_accnt);
  strcpy(c_xchng_cd,ptr_st_cntfut_pos->c_xchng_cd);
  strcpy(c_undrlyng,ptr_st_cntfut_pos->c_undrlyng);
  strcpy(c_expry_dt,ptr_st_cntfut_pos->c_expry_dt);
  c_prd_typ   = ptr_st_cntfut_pos->c_prd_typ;
  c_exrc_typ  = ptr_st_cntfut_pos->c_exrc_typ;
  c_ctgry_indstk  = ptr_st_cntfut_pos->c_ctgry_indstk;

	EXEC SQL
     SELECT  NVL(FTQ_LST_TRD_PRC,0)
     INTO    :d_ltp
     FROM    FTQ_FO_TRD_QT
     WHERE   FTQ_XCHNG_CD  = :c_xchng_cd
     AND     FTQ_PRDCT_TYP = :c_prd_typ
     AND     FTQ_UNDRLYNG  = :c_undrlyng
     AND     FTQ_EXPRY_DT  = :c_expry_dt
     AND     FTQ_EXER_TYP  = :c_exrc_typ;

  if(SQLCODE  !=  0 && SQLCODE != NO_DATA_FOUND )
  {
    fn_userlog(c_ServiceName,"Error selecting LTP");
    fn_errlog( c_ServiceName, "S31365", SQLMSG, c_errmsg  );
    return -1;
  }

  if( SQLCODE == NO_DATA_FOUND )
  {
    d_ltp = 0.0;
  }
	
	EXEC SQL ALLOCATE :chrgs_cur;

    EXEC SQL  EXECUTE
      BEGIN
        OPEN  :chrgs_cur FOR
          SELECT  sum(s1) from
          (
            SELECT sum(nvl(ftd_brkg,0)+ftd_stt+ftd_src_tx+ftd_sebi_tt+ftd_tran_chrg+ftd_stamp_duty+nvl(ftd_brkrg_igst,0 )+ nvl(ftd_brkrg_cgst,0 )+nvl(ftd_brkrg_sgst,0 ) +nvl( ftd_brkrg_ugst,0)) s1
            FROM  ftd_fo_trd_dtls
            WHERE ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
            AND   ftd_xchng_cd        = :c_xchng_cd
            AND   ftd_undrlyng        = :c_undrlyng
            /*  AND   ftd_prdct_typ    in ('P','F') */
            AND   ftd_prdct_typ    in ('P','F','U')     /*** Added in ver 1.3 ***/
            AND   ftd_exer_typ        = :c_exrc_typ
            AND   ftd_expry_dt        = :c_expry_dt
            UNION ALL
            SELECT  sum(nvl(ftd_brkg,0)+nvl(ftd_stt,0)+nvl(ftd_src_tx,0)+nvl(ftd_sebi_tt,0)+nvl(ftd_tran_chrg,0)+nvl(ftd_stamp_duty,0)+nvl(ftd_brkrg_igst,0 )+ nvl(ftd_brkrg_cgst,0 )+nvl(ftd_brkrg_sgst,0 ) +nvl( ftd_brkrg_ugst,0)) s1
            FROM ftd_fo_trd_dtls_hstry
            WHERE ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
            AND   ftd_xchng_cd        = :c_xchng_cd
            AND   ftd_undrlyng        = :c_undrlyng
            /*  AND   ftd_prdct_typ    in ('P','F') */   
						AND   ftd_prdct_typ    in ('P','F','U')     /*** Added in ver 1.3 ***/
            AND   ftd_exer_typ        = :c_exrc_typ
            AND   ftd_expry_dt        = :c_expry_dt
            UNION ALL
            SELECT sum(nvl(fco_brkg,0)+fco_stt+fco_src_tx+fco_sebi_tt+fco_tran_chrg+fco_stamp_duty) s1
            FROM  fco_fo_fclsout
            WHERE fco_clm_mtch_accnt  = :c_cln_mtch_accnt
            AND   fco_xchng_cd        = :c_xchng_cd
            AND   fco_undrlyng        = :c_undrlyng
            AND   fco_prdct_typ       in ('P','F')
            AND   fco_expry_dt        = :c_expry_dt
            AND   fco_exer_typ        = :c_exrc_typ
            UNION ALL
            SELECT sum(nvl(fco_brkg,0)+fco_stt+fco_src_tx+fco_sebi_tt+fco_tran_chrg+fco_stamp_duty) s1
            FROM  fco_fo_fclsout_hstry
            WHERE fco_clm_mtch_accnt  = :c_cln_mtch_accnt
            AND   fco_xchng_cd        = :c_xchng_cd
            AND   fco_undrlyng        = :c_undrlyng
            AND   fco_prdct_typ       in ('P','F')
            AND   fco_expry_dt        = :c_expry_dt
            AND   fco_exer_typ        = :c_exrc_typ
          );
      END;
    END-EXEC;

		EXEC SQL FETCH  :chrgs_cur
             INTO   :l_charges;

    if( DEBUG_MSG_LVL_3 )
    {
      fn_userlog(c_ServiceName,"Here Brokrage Is :%ld:",l_charges);
    }

    if ( SQLCODE != 0 )
    {
      if ( SQLCODE == NO_DATA_FOUND )
      {
        fn_userlog(c_ServiceName,"Inside NO_DATA_FOUND");
        l_charges = 0;
      }
      else
      {
        EXEC SQL CLOSE :chrgs_cur;
        EXEC SQL FREE  :chrgs_cur;
				fn_userlog(c_ServiceName,"Error selecting charges");
    		fn_errlog( c_ServiceName, "S31370", SQLMSG, c_errmsg  );
    		return -1;
      }
    }

    EXEC SQL CLOSE :chrgs_cur;
    EXEC SQL FREE  :chrgs_cur;

		EXEC SQL
  	SELECT  NVL(CLM_SPAN_ALLWD,'N')
  	INTO    :c_span_flg
  	FROM    CLM_CLNT_MSTR
  	WHERE   CLM_MTCH_ACCNT  = :ptr_st_cntfut_pos->c_cln_mtch_accnt;

  if(SQLCODE  !=  0 )
  {
    fn_userlog( c_ServiceName,"Error while selecting SPAN flag");
    fn_errlog( c_ServiceName, "S31375", SQLMSG, c_errmsg  );
    return -1;
  }

	if(DEBUG_MSG_LVL_3)
  {
    fn_userlog( c_ServiceName,"SPAN flag is |%c|",c_span_flg);
  }
	
	if (c_span_flg == 'N')
    {
        EXEC SQL
            SELECT  SUM (s1), SUM (s2)
            INTO    :l_opnpstn_qty,
                    :d_org_opn_val
            FROM
            (
              SELECT  NVL(SUM(ffp_opnpstn_qty),0)s1,
                      NVL(SUM(FFP_OPNPSTN_VAL),0)s2
            	FROM    ffp_fo_futures_pstn
            	WHERE   ffp_clm_mtch_accnt = :c_cln_mtch_accnt
            	AND     ffp_xchng_cd       = :c_xchng_cd
            	AND     ffp_prdct_typ      in ('F','P')
            	AND     ffp_undrlyng       = :c_undrlyng
            	AND     ffp_expry_dt       = :c_expry_dt
            	AND
            	(       ffp_buy_exctd_qty != 0
              	OR    ffp_sell_exctd_qty  != 0
            	)
						UNION ALL
							SELECT  NVL(SUM(ffp_opnpstn_qty),0)s1,
                      NVL(SUM(FFP_OPNPSTN_VAL),0)s2
              FROM    ffp_fo_futures_pstn_hstry
              WHERE   ffp_clm_mtch_accnt = :c_cln_mtch_accnt
              AND     ffp_xchng_cd       = :c_xchng_cd
              AND     ffp_prdct_typ      in ('F','P')
              AND     ffp_undrlyng       = :c_undrlyng
              AND     ffp_expry_dt       = :c_expry_dt
              AND
              (       ffp_buy_exctd_qty != 0
                OR    ffp_sell_exctd_qty  != 0
              )
          );

        if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
        {
          fn_errlog( c_ServiceName, "S31380",SQLMSG, c_errmsg );
          return -1;
        }
    }
    else if (c_span_flg == 'Y' || c_span_flg == 'Z')
    {
       EXEC SQL
          SELECT  SUM (s3), SUM (s4)
          INTO    :l_opnpstn_qty,
                  :d_org_opn_val
          FROM
          (
            SELECT NVL(SUM(FCP_OPNPSTN_QTY),0) s3,
                   NVL(SUM(FCP_OPNPSTN_VAL),0) s4
            FROM   FCP_FO_SPN_CNTRCT_PSTN
            WHERE  FCP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
            AND    FCP_XCHNG_CD       = :c_xchng_cd
            AND    FCP_PRDCT_TYP      = 'F'
            AND    FCP_UNDRLYNG       = :c_undrlyng
            AND    FCP_EXPRY_DT       = :c_expry_dt
            AND
            (      FCP_BUY_EXCTD_QTY != 0
              OR   FCP_SELL_EXCTD_QTY  != 0
            )
					UNION ALL
						SELECT NVL(SUM(FCP_OPNPSTN_QTY),0) s3,
                   NVL(SUM(FCP_OPNPSTN_VAL),0) s4
            FROM   FCP_FO_SPN_CNTRCT_PSTN_HSTRY
            WHERE  FCP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
            AND    FCP_XCHNG_CD       = :c_xchng_cd
            AND    FCP_PRDCT_TYP      = 'F'
            AND    FCP_UNDRLYNG       = :c_undrlyng
            AND    FCP_EXPRY_DT       = :c_expry_dt
            AND
            (      FCP_BUY_EXCTD_QTY != 0
              OR   FCP_SELL_EXCTD_QTY  != 0
            )
					UNION ALL                                           /*** added in Ver 1.4 for F+ position of SPAN customer ***/
            SELECT NVL(SUM(ffp_opnpstn_qty),0) QTY,
                  NVL(SUM(ffp_opnpstn_val),0) VAL
            FROM   ffp_fo_futures_pstn
            WHERE  ffp_clm_mtch_accnt = :c_cln_mtch_accnt
            AND    ffp_xchng_cd       = :c_xchng_cd
            AND    ffp_prdct_typ      = 'P'
            AND    ffp_undrlyng       = :c_undrlyng
            AND    ffp_expry_dt       = :c_expry_dt
					UNION ALL                                           /*** added in Ver 1.4 for F+ position of SPAN customer ***/
            SELECT NVL(SUM(ffp_opnpstn_qty),0) QTY,
                  NVL(SUM(ffp_opnpstn_val),0) VAL
            FROM   ffp_fo_futures_pstn_hstry
            WHERE  ffp_clm_mtch_accnt = :c_cln_mtch_accnt
            AND    ffp_xchng_cd       = :c_xchng_cd
            AND    ffp_prdct_typ      = 'P'
            AND    ffp_undrlyng       = :c_undrlyng
            AND    ffp_expry_dt       = :c_expry_dt
          );
					
					if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
        {
          fn_errlog( c_ServiceName, "S31385",SQLMSG, c_errmsg );
          return -1;
        }
    }
    else
    {
      if(DEBUG_MSG_LVL_3)
      {
        fn_userlog(c_ServiceName,"The customer is nither normal nor SPAN.");
      }
    }
		
		if(DEBUG_MSG_LVL_3)
    {
      fn_userlog( c_ServiceName,"l_opnpstn_qty        |%ld|",l_opnpstn_qty);
      fn_userlog( c_ServiceName,"d_org_opn_val        |%lf|",d_org_opn_val);
    }

    if (l_opnpstn_qty > 0 )
    {
      c_opnpstn_flw = 'B';

      i_return_val= fn_buy_opnpstn_spp( c_ServiceName,
                                    c_cln_mtch_accnt,
                                    c_xchng_cd,
                                    c_undrlyng,
                                    c_expry_dt,
                                    c_exrc_typ,
                                    c_prd_typ ,
                                    d_ltp,
                                    &d_crst_prft,
                                    &d_uncrst_prft,
                                    &d_avg_pr,
                                    c_errmsg
                                  );

      if(i_return_val == -1)
      {
        fn_errlog( c_ServiceName, "S31390",SQLMSG, c_errmsg );
        return -1;
      }
    }
    else if ( l_opnpstn_qty < 0 )
    {
      c_opnpstn_flw = 'S';

      i_return_val= fn_sell_opnpstn_spp(c_ServiceName,
                                    c_cln_mtch_accnt,
                                    c_xchng_cd,
                                    c_undrlyng,
                                    c_expry_dt,
                                    c_exrc_typ,
                                    c_prd_typ ,
                                    d_ltp,
                                    &d_crst_prft,
                                    &d_uncrst_prft,
                                    &d_avg_pr,
                                    c_errmsg
                                  );
      if(i_return_val == -1)
      {
         fn_errlog( c_ServiceName, "S31395",SQLMSG, c_errmsg );
        return -1;
      }
		 }
    else if ( l_opnpstn_qty == 0 )
    {
      c_opnpstn_flw = 'N';

      i_return_val= fn_sqroff_pstn_spp (c_ServiceName,
                                    c_cln_mtch_accnt,
                                    c_xchng_cd,
                                    c_undrlyng,
                                    c_expry_dt,
                                    c_exrc_typ,
                                    c_prd_typ ,
                                    d_ltp,
                                    &d_crst_prft,
                                    &d_uncrst_prft,
                                    c_errmsg);
      if(i_return_val == -1)
      {
         fn_errlog( c_ServiceName, "S31400",SQLMSG, c_errmsg );
        return -1;
      }
    }
    else
    {
      if(DEBUG_MSG_LVL_3)
      {
        fn_userlog(c_ServiceName,"The customer is nither Normal nor SPAN position.");
      }
    }

		/*** Inserting data into table ***/

  if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"ptr_st_cntfut_pos->c_cln_mtch_accnt |%s|",ptr_st_cntfut_pos->c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"ptr_st_cntfut_pos->c_xchng_cd       |%s|",ptr_st_cntfut_pos->c_xchng_cd);
    fn_userlog(c_ServiceName,"ptr_st_cntfut_pos->c_undrlyng       |%s|",ptr_st_cntfut_pos->c_undrlyng);
    fn_userlog(c_ServiceName,"ptr_st_cntfut_pos->c_prd_typ        |%c|",ptr_st_cntfut_pos->c_prd_typ);
    fn_userlog(c_ServiceName,"ptr_st_cntfut_pos->c_expry_dt       |%s|",ptr_st_cntfut_pos->c_expry_dt);
    fn_userlog(c_ServiceName,"ptr_st_cntfut_pos->c_exrc_typ       |%c|",ptr_st_cntfut_pos->c_exrc_typ);
    fn_userlog(c_ServiceName,"ptr_st_cntfut_pos->c_ctgry_indstk   |%c|",ptr_st_cntfut_pos->c_ctgry_indstk);
    fn_userlog(c_ServiceName,"ptr_st_cntfut_pos->l_strike_prc     |%ld|",ptr_st_cntfut_pos->l_strike_prc);
    fn_userlog(c_ServiceName,"Charges are                         |%ld|",l_charges);
    fn_userlog(c_ServiceName,"c_opnpstn_flw                       |%c|",c_opnpstn_flw);
    fn_userlog (c_ServiceName," d_avg_pr Is                       :%lf:",d_avg_pr);
    fn_userlog( c_ServiceName,"Realized PNL is                    |%lf|",d_crst_prft);
    fn_userlog( c_ServiceName,"LTP is                             |%lf|",d_ltp);
    fn_userlog( c_ServiceName,"l_opnpstn_qty                      |%ld|",l_opnpstn_qty);
    fn_userlog( c_ServiceName,"d_org_opn_val                      |%lf|",d_org_opn_val);
    fn_userlog( c_ServiceName,"Unrealized PNL is                  |%lf|",d_uncrst_prft);
    fn_userlog( c_ServiceName,"Total PNL is                       |%lf|",d_total_prft);
  }

  if (ptr_st_cntfut_pos->c_prd_typ == 'P')
  {
    ptr_st_cntfut_pos->c_prd_typ = 'F';
  }

  EXEC SQL
      SELECT 1
      INTO  :i_pos_avl
      FROM  PCP_PRTFL_CNTRCT_PSTN_HSTRY
      WHERE PCP_CLM_MTCH_ACCNT =:ptr_st_cntfut_pos->c_cln_mtch_accnt
      AND   PCP_XCHNG_CD       =:ptr_st_cntfut_pos->c_xchng_cd
      AND   PCP_PRDCT_TYP      =:ptr_st_cntfut_pos->c_prd_typ
      AND   PCP_INDSTK         =:ptr_st_cntfut_pos->c_ctgry_indstk
      AND   PCP_UNDRLYNG       =:ptr_st_cntfut_pos->c_undrlyng
      AND   PCP_EXPRY_DT       =:ptr_st_cntfut_pos->c_expry_dt
      AND   PCP_EXER_TYP       =:ptr_st_cntfut_pos->c_exrc_typ;
   /*   AND   PCP_STRK_PRC       =:ptr_st_cntfut_pos->l_strike_prc
      AND   PCP_OPT_TYP        =:ptr_st_cntfut_pos->c_opt_typ;         *** Commented to fix bug *****/

  if ( ( SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND) )
  {
     fn_errlog( c_ServiceName, "S31405",SQLMSG, c_errmsg );
     return -1;
  }

  if (SQLCODE == NO_DATA_FOUND)
  {
    i_pos_avl = 0;
    fn_userlog( c_ServiceName," Position not available insert new record |%d|",i_pos_avl);
  }
	if (i_pos_avl == 0 )
  {
    EXEC SQL
      INSERT INTO PCP_PRTFL_CNTRCT_PSTN_HSTRY
      (
        PCP_CLM_MTCH_ACCNT,
        PCP_XCHNG_CD,
        PCP_PRDCT_TYP,
        PCP_INDSTK,
        PCP_UNDRLYNG,
        PCP_EXPRY_DT,
        PCP_EXER_TYP,
        PCP_STRK_PRC,
        PCP_OPT_TYP,
        PCP_OPNPSTN_FLW,
        PCP_OPNPSTN_QTY,
        PCP_OPNPSTN_VAL,
        PCP_RLLZD_PNL,
        PCP_UNRLLZD_PNL,
        PCP_TOTAL_PNL,
        PCP_CRRNT_MKT_PRC,
        PCP_BRKG_VAL,
        PCP_AVG_TRD_PRC,
        PCP_SPAN_FLG,
        PCP_TM_STMP
      )
      VALUES
      (
        :ptr_st_cntfut_pos->c_cln_mtch_accnt,
        :ptr_st_cntfut_pos->c_xchng_cd,
        :ptr_st_cntfut_pos->c_prd_typ,
        :ptr_st_cntfut_pos->c_ctgry_indstk,
        :ptr_st_cntfut_pos->c_undrlyng,
        :ptr_st_cntfut_pos->c_expry_dt,
        :ptr_st_cntfut_pos->c_exrc_typ,
      /*  :ptr_st_cntfut_pos->l_strike_prc,  
        :ptr_st_cntfut_pos->c_opt_typ,     */
				0,
				'*',
        :c_opnpstn_flw,
        :l_opnpstn_qty,
        :d_org_opn_val,
        :d_crst_prft,
        :d_uncrst_prft,
        :d_total_prft,
        :d_ltp,
        :l_charges,
        :d_avg_pr,
        :c_span_flg,
        sysdate
      );

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31410",SQLMSG, c_errmsg );
      return -1;
    }

		}
  else
  {
    EXEC SQL
    UPDATE  PCP_PRTFL_CNTRCT_PSTN_HSTRY
    SET PCP_OPNPSTN_FLW = :c_opnpstn_flw,
        PCP_OPNPSTN_QTY = :l_opnpstn_qty,
        PCP_OPNPSTN_VAL = :d_org_opn_val,
        PCP_RLLZD_PNL   = :d_crst_prft,
        PCP_UNRLLZD_PNL = :d_uncrst_prft,
        PCP_TOTAL_PNL   = :d_total_prft,
        PCP_CRRNT_MKT_PRC = :d_ltp,
        PCP_BRKG_VAL      = :l_charges,
        PCP_AVG_TRD_PRC   = :d_avg_pr,
				PCP_SPAN_FLG      = :c_span_flg,
				PCP_TM_STMP       = sysdate
    WHERE PCP_CLM_MTCH_ACCNT =:ptr_st_cntfut_pos->c_cln_mtch_accnt
    AND   PCP_XCHNG_CD       =:ptr_st_cntfut_pos->c_xchng_cd
    AND   PCP_PRDCT_TYP      =:ptr_st_cntfut_pos->c_prd_typ
    AND   PCP_INDSTK         =:ptr_st_cntfut_pos->c_ctgry_indstk
    AND   PCP_UNDRLYNG       =:ptr_st_cntfut_pos->c_undrlyng
    AND   PCP_EXPRY_DT       =:ptr_st_cntfut_pos->c_expry_dt
    AND   PCP_EXER_TYP       =:ptr_st_cntfut_pos->c_exrc_typ;
  /*  AND   PCP_STRK_PRC       =:ptr_st_cntfut_pos->l_strike_prc
    AND   PCP_OPT_TYP        =:ptr_st_cntfut_pos->c_opt_typ;     Bug fix */

      if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31415",SQLMSG, c_errmsg );
        return -1;
      }
  }

	if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"Delete record from current table");
  }

  EXEC SQL
      DELETE FROM PCP_PRTFL_CNTRCT_PSTN
      WHERE PCP_CLM_MTCH_ACCNT =:ptr_st_cntfut_pos->c_cln_mtch_accnt
      AND   PCP_XCHNG_CD       =:ptr_st_cntfut_pos->c_xchng_cd
      AND   PCP_PRDCT_TYP      =:ptr_st_cntfut_pos->c_prd_typ
      AND   PCP_INDSTK         =:ptr_st_cntfut_pos->c_ctgry_indstk
      AND   PCP_UNDRLYNG       =:ptr_st_cntfut_pos->c_undrlyng
      AND   PCP_EXPRY_DT       =:ptr_st_cntfut_pos->c_expry_dt
      AND   PCP_EXER_TYP       =:ptr_st_cntfut_pos->c_exrc_typ;
	/*      AND   PCP_STRK_PRC       =:ptr_st_cntfut_pos->l_strike_prc
      AND   PCP_OPT_TYP        =:ptr_st_cntfut_pos->c_opt_typ;    Bug Fix */

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
      fn_errlog( c_ServiceName, "S31420",SQLMSG, c_errmsg );
      return -1;
    }

	return 0;
}

int fn_buy_opnpstn_spp(char *c_ServiceName,
									 char *c_cln_mtch_accnt,
									 char *c_xchng_cd,
									 char *c_undrlyng,
									 char *c_expry_dt,
									 char c_exrc_typ,
								   char c_prdct_typ,
									 double d_ltp,
									 double *d_crst_prft,
									 double *d_uncrst_prft,
									 double *d_avg_pr,	
									 char *c_errmsg )
{


	varchar c_trd_dt [ LEN_DATE ];

	long int l_tot_sell_qty_m 	= 0;
	long int l_tot_sell_qty_h 	= 0;
	long int l_tot_sell_qty 		= 0;
  long int li_uncrst_qty 			= 0;
	long int li_qty_bal 				= 0;
	long int li_cum_exctd_qty 	= 0;
	long int li_net_qty_bal 		= 0;
	long int li_exctd_rt  			= 0;
	long int li_exctd_qty  			= 0;
	long int li_bal_qty  				= 0;
	long int li_crst_qty  			= 0;

	double 	 d_sell_val_m 			= 0;
	double   d_sell_val_h 			= 0;
	double	 d_sell_val 				= 0;
  double	 d_buy_val 					= 0;
	double	 d_opn_buy_val 			= 0;
/*  double	 d_uncrst_prft 			= 0;
	double	 d_crst_prft  			= 0;*/
	double	 d_Ccrst_prft 			= 0;
	double	 d_Cuncrst_prft 		= 0;
	double   d_net_avg_rt 			= 0;
	double   d_frsh_brk   			= 0;
	double   d_cvr_brk   			  = 0;
/*	double   d_avg_pr   			  = 0;*/
	
	sql_cursor trd_cursor;

	if( DEBUG_MSG_LVL_3 )	
	{
		fn_userlog(c_ServiceName,"Inside Function fn_buy_opnpstn_spp");
	}

	if( DEBUG_MSG_LVL_3 )
	{
  	fn_userlog(c_ServiceName,"Match Account Is 	;%s:",c_cln_mtch_accnt);
		fn_userlog(c_ServiceName,"Exchnage Code Is 	:%s:",c_xchng_cd);
		fn_userlog(c_ServiceName,"Product Type Is 	:%c:",c_prdct_typ);
		fn_userlog(c_ServiceName,"Expiry Date Is 		:%s:",c_expry_dt);
		fn_userlog(c_ServiceName,"Exercise Type Is  :%c:",c_exrc_typ);
		fn_userlog(c_ServiceName,"Underlying Is 		:%s:",c_undrlyng);
	}

	EXEC SQL
     SELECT NVL(SUM(ftd_exctd_qty),0),NVL(SUM((ftd_exctd_qty * ftd_exctd_rt) - NVL(ftd_frs_brkg,0) - NVL(ftd_cvr_brkg,0)),0)
        INTO    :l_tot_sell_qty_m,
                :d_sell_val_m
        FROM    ftd_fo_trd_dtls
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
				AND     ftd_prdct_typ    		in ('F','P','U') /** Ver 1.2 SLTP F+ product type added ***/
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = :c_exrc_typ
        AND     ftd_trd_flw         = 'S';
 
  if ( SQLCODE != 0 )
  {
     fn_errlog( c_ServiceName, "S31425", SQLMSG, c_errmsg  );
		 return -1;
  }
	
	EXEC SQL
     SELECT NVL(SUM(ftd_exctd_qty),0),NVL(SUM((ftd_exctd_qty * ftd_exctd_rt) - NVL(ftd_frs_brkg,0) - NVL(ftd_cvr_brkg,0)),0)
        INTO    :l_tot_sell_qty_h,
                :d_sell_val_h
        FROM    ftd_fo_trd_dtls_hstry
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
				AND     ftd_prdct_typ    		in ('F','P','U') /** Ver 1.2 SLTP F+ product type added ***/
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = :c_exrc_typ
        AND     ftd_trd_flw         = 'S';

  if ( SQLCODE != 0 )
  {
   	fn_errlog( c_ServiceName, "S31430", SQLMSG, c_errmsg  );
		return -1;
  }

	if( DEBUG_MSG_LVL_3 )
	{
  	fn_userlog(c_ServiceName,"l_tot_sell_qty_m 						|%ld|",l_tot_sell_qty_m);
  	fn_userlog(c_ServiceName,"l_tot_sell_qty_h						|%ld|",l_tot_sell_qty_h);
  	fn_userlog(c_ServiceName,"d_sell_val_m								|%lf|",d_sell_val_m);
  	fn_userlog(c_ServiceName,"d_sell_val_h								|%lf|",d_sell_val_h);
	}

  l_tot_sell_qty = l_tot_sell_qty_m + l_tot_sell_qty_h;
  d_sell_val = d_sell_val_m + d_sell_val_h;
	
  EXEC SQL ALLOCATE :trd_cursor;
	
  EXEC SQL  EXECUTE
     BEGIN
        OPEN  :trd_cursor FOR
          SELECT ftd_exctd_qty,
                 ftd_exctd_rt,
                 NVL (ftd_frs_brkg, 0),
                 NVL (ftd_cvr_brkg, 0),
                 ftd_trd_dt
          FROM ftd_fo_trd_dtls
          WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     ftd_xchng_cd        = :c_xchng_cd
          AND     ftd_prdct_typ     	in ('F','P','U') /** Ver 1.2 SLTP F+ product type added ***/
          AND     ftd_undrlyng        = :c_undrlyng
          AND     ftd_expry_dt        = :c_expry_dt
          AND     ftd_exer_typ        = :c_exrc_typ
          AND     ftd_trd_flw         = 'B'
      UNION ALL
          SELECT ftd_exctd_qty,
                 ftd_exctd_rt,
                 NVL (ftd_frs_brkg, 0),
                 NVL (ftd_cvr_brkg, 0),
                 ftd_trd_dt
          FROM ftd_fo_trd_dtls_hstry
          WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
          AND     ftd_xchng_cd        = :c_xchng_cd
          AND     ftd_prdct_typ   		in ('F','P','U') /** Ver 1.2 SLTP F+ product type added ***/
          AND     ftd_undrlyng        = :c_undrlyng
          AND     ftd_expry_dt        = :c_expry_dt
          AND     ftd_exer_typ        = :c_exrc_typ
          AND     ftd_trd_flw         = 'B'
      ORDER BY 5;
          END;
        END-EXEC;

  li_bal_qty = l_tot_sell_qty;

	while ( 1 )
  {
   	li_qty_bal = 0;

    EXEC SQL
       FETCH :trd_cursor
       INTO :li_exctd_qty,
            :li_exctd_rt,
            :d_frsh_brk,
            :d_cvr_brk,
            :c_trd_dt;
    
    if ( SQLCODE != 0 )
    {
       if ( SQLCODE == NO_DATA_FOUND )
       {
         break;
       }
       else
       {
         fn_errlog( c_ServiceName, "S31435", SQLMSG, c_errmsg  );
         EXEC SQL CLOSE :trd_cursor;
         EXEC SQL FREE :trd_cursor;
				 return -1;
       }
     }

		 if(DEBUG_MSG_LVL_3)
		 {
			fn_userlog(c_ServiceName,"li_exctd_qty					|%ld|",li_exctd_qty);
			fn_userlog(c_ServiceName,"li_exctd_rt						|%ld|",li_exctd_rt);
			fn_userlog(c_ServiceName,"d_frsh_brk						|%lf|",d_frsh_brk);
			fn_userlog(c_ServiceName,"d_cvr_brk							|%lf|",d_cvr_brk);
			fn_userlog(c_ServiceName,"c_trd_dt							|%s|",c_trd_dt.arr);
		 }

		 if ( li_bal_qty > 0 )
     {
			  if(DEBUG_MSG_LVL_3)
				{
					fn_userlog(c_ServiceName,"Inside li_bal_qty > 0");
					fn_userlog(c_ServiceName,"HERE li_bal_qty is :%ld:",li_bal_qty);
					fn_userlog(c_ServiceName,"HERE li_exctd_qty is :%ld:",li_exctd_qty);
				}

        li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );
        d_buy_val = d_buy_val + ( (double) li_crst_qty * (double)  li_exctd_rt ) + d_frsh_brk + d_cvr_brk;

        li_bal_qty = li_bal_qty - li_crst_qty;
			  
				if(DEBUG_MSG_LVL_3)
				{
					fn_userlog(c_ServiceName,"li_crst_qty         |%ld|",li_crst_qty);
					fn_userlog(c_ServiceName,"d_buy_val						|%lf|",d_buy_val);
					fn_userlog(c_ServiceName,"li_bal_qty					|%ld|",li_bal_qty);
				}

        if ( li_bal_qty == 0 )
        {
          li_uncrst_qty = li_exctd_qty - li_crst_qty;
          d_opn_buy_val = d_opn_buy_val  + ( (double) li_uncrst_qty * (double) li_exctd_rt ) + d_frsh_brk + d_cvr_brk;
        }
      }
      else
      {
				if(DEBUG_MSG_LVL_3)
				{
					fn_userlog(c_ServiceName,"Inside li_bal_qty = 0");
					fn_userlog(c_ServiceName,"Executed Qty Is :%ld:",li_exctd_qty);
				}

        li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
        d_opn_buy_val = d_opn_buy_val  + ( (double) li_exctd_qty * (double)  li_exctd_rt ) + d_frsh_brk + d_cvr_brk;

				if(DEBUG_MSG_LVL_3)
				{
					fn_userlog(c_ServiceName,"Uncrystalised Qty Is :%ld:",li_uncrst_qty);
					fn_userlog(c_ServiceName,"Buy open position val:%lf:",d_opn_buy_val);
				}
      }

			li_cum_exctd_qty = li_cum_exctd_qty + li_exctd_qty;

			if(DEBUG_MSG_LVL_3)
			{
				fn_userlog(c_ServiceName,"li_cum_exctd_qty  Is :%ld:",li_cum_exctd_qty);
				fn_userlog(c_ServiceName,"li_exctd_qty				 :%ld:",li_exctd_qty);
			}

			if( (li_cum_exctd_qty  - l_tot_sell_qty) > 0)
			{
				li_qty_bal = fn_minl(li_cum_exctd_qty  - l_tot_sell_qty, li_exctd_qty);
				li_net_qty_bal = li_net_qty_bal + li_qty_bal;
			}

			if ( li_qty_bal > 0 )
			{
				if(DEBUG_MSG_LVL_3)
      	{
        	fn_userlog(c_ServiceName,"d_net_avg_rt  Is     :%lf:",d_net_avg_rt);
        	fn_userlog(c_ServiceName,"li_qty_bal           :%ld:",li_qty_bal);
        	fn_userlog(c_ServiceName,"li_exctd_rt          :%ld:",li_exctd_rt);
				}
				
				d_net_avg_rt = d_net_avg_rt + (double) li_qty_bal * (double) li_exctd_rt;
			}
			
    } /*** END of while loop ***/

    EXEC SQL CLOSE :trd_cursor;
    EXEC SQL FREE :trd_cursor;

		if(DEBUG_MSG_LVL_3)
    {
     	fn_userlog(c_ServiceName,"d_net_avg_rt  Is     :%lf:",d_net_avg_rt);
     	fn_userlog(c_ServiceName,"li_net_qty_bal  Is   :%ld:",li_net_qty_bal);
		}

	  *d_avg_pr = d_net_avg_rt/(double)li_net_qty_bal;

    *d_crst_prft = d_sell_val - d_buy_val;

	  if(DEBUG_MSG_LVL_3)
		{
			fn_userlog (c_ServiceName,"BEFORE li_uncrst_qty is :%ld:",li_uncrst_qty);
			fn_userlog (c_ServiceName,"BEFORE st_cntrct_qt.l_lst_trdd_prc is :%lf:",d_ltp);
			fn_userlog (c_ServiceName,"BEFORE	d_opn_buy_val is :%lf:",d_opn_buy_val);
		}

    *d_uncrst_prft = ((double) li_uncrst_qty * d_ltp  ) - d_opn_buy_val;
		
		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName,"INSIDE FUNCTION BUY VAL IS 				:%lf:",d_buy_val);
			fn_userlog(c_ServiceName,"INSIDE FUNCTION OPEN BUY VAL IS 	:%lf:",d_opn_buy_val);
			fn_userlog(c_ServiceName,"Inside Function d_crst_prft is 		:%lf:",*d_crst_prft);
			fn_userlog(c_ServiceName,"Inside Function d_uncrst_prft is  :%lf:",*d_uncrst_prft);
		  fn_userlog(c_ServiceName,"sss=============li_uncrst_qty is  :%d:",li_uncrst_qty);
     	fn_userlog(c_ServiceName,"sss=============d_opn_buy_val is  :%lf:",d_opn_buy_val);
     	fn_userlog(c_ServiceName,"sss=============d_buy_val is 			:%lf:",d_buy_val);
     	fn_userlog(c_ServiceName,"Avgtrd Pr=============d_avg_pr is :%lf:",*d_avg_pr);
		}
}

int fn_sell_opnpstn_spp(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prdct_typ,
									     double d_ltp,
									 double	*d_crst_prft,
									 double	*d_uncrst_prft,
									 double	*d_avg_pr,
									 char *c_errmsg)
{

	varchar c_trd_dt [ LEN_DATE ];
	
	double d_sell_val 		= 0;
	double d_opn_sell_val = 0;
	double d_buy_val 			= 0;
	double d_buy_val_h 		= 0;
	double d_buy_val_m 		= 0;
/*	double d_uncrst_prft 	= 0;*/
/*  double d_crst_prft 		= 0;*/
	double d_Ccrst_prft 	= 0 ;
 	double d_Cuncrst_prft = 0;
	double d_net_avg_rt 	= 0;
  double d_frsh_brk   	= 0;
  double d_cvr_brk   		= 0;
	
	long int li_uncrst_qty 		= 0;
	long int li_crst_qty 			= 0;
	long int li_qty_bal 			= 0;
	long int li_cum_exctd_qty = 0;
	long int li_net_qty_bal 	= 0;
	long int l_tot_sell_qty_m = 0;
  long int l_tot_sell_qty_h = 0;
	long int l_tot_buy_qty_m	= 0;
	long int l_tot_buy_qty_h	= 0;
	long int l_tot_buy_qty		= 0;
	long int li_exctd_qty  		= 0;
	long int li_exctd_rt  		= 0;
	long int li_bal_qty   		= 0;

	sql_cursor trd_cursor;

	if( DEBUG_MSG_LVL_3 )
	{
		fn_userlog(c_ServiceName,"Inside Function fn_sell_opnpstn_spp ");
	}

	if( DEBUG_MSG_LVL_3 )
	{
		fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
  	fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
  	fn_userlog(c_ServiceName,"Product Type Is  :%c:",c_prdct_typ);
  	fn_userlog(c_ServiceName,"Expiry Date Is 	 :%s:",c_expry_dt);
  	fn_userlog(c_ServiceName,"Exercise Type Is :%c:",c_exrc_typ);
  	fn_userlog(c_ServiceName,"Underlying Is 	 :%s:",c_undrlyng);
	}
	
	EXEC SQL
  	SELECT  NVL(SUM(ftd_exctd_qty),0),
            NVL(SUM((ftd_exctd_qty * ftd_exctd_rt) - NVL(ftd_frs_brkg,0) - NVL(ftd_cvr_brkg,0)),0)
    INTO    :l_tot_buy_qty_m,
            :d_buy_val_m
    FROM    ftd_fo_trd_dtls
    WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND     ftd_xchng_cd        = :c_xchng_cd
    AND     ftd_prdct_typ  			in ('F','P','U') /** Ver 1.2 SLTP F+ product type added ***/
    AND     ftd_undrlyng        = :c_undrlyng
    AND     ftd_expry_dt        = :c_expry_dt
    AND     ftd_exer_typ        = :c_exrc_typ
    AND     ftd_trd_flw         = 'B';

  if ( SQLCODE != 0 )
  {
  	fn_errlog( c_ServiceName, "S31440", SQLMSG, c_errmsg  );
		return -1;
  }

	EXEC SQL
  	SELECT  NVL(SUM(ftd_exctd_qty),0),
            NVL(SUM((ftd_exctd_qty * ftd_exctd_rt) - NVL(ftd_frs_brkg,0) - NVL(ftd_cvr_brkg,0)),0)
    INTO    :l_tot_buy_qty_h,
            :d_buy_val_h
    FROM    ftd_fo_trd_dtls_hstry
    WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND     ftd_xchng_cd        = :c_xchng_cd
    AND     ftd_prdct_typ   		in ('F','P','U') /** Ver 1.2 SLTP F+ product type added ***/
    AND     ftd_undrlyng        = :c_undrlyng
    AND     ftd_expry_dt        = :c_expry_dt
    AND     ftd_exer_typ        = :c_exrc_typ
    AND     ftd_trd_flw         = 'B';

  if ( SQLCODE != 0 )
  {
	 fn_errlog( c_ServiceName, "S31445", SQLMSG, c_errmsg  );
	 return -1;
  }

	if( DEBUG_MSG_LVL_3 )
	{
  	fn_userlog(c_ServiceName,"l_tot_buy_qty_m 						|%ld|",l_tot_buy_qty_m);
  	fn_userlog(c_ServiceName,"l_tot_buy_qty_h							|%ld|",l_tot_buy_qty_h);
  	fn_userlog(c_ServiceName,"d_buy_val_m									|%lf|",d_buy_val_m);
  	fn_userlog(c_ServiceName,"d_buy_val_h									|%lf|",d_buy_val_h);
	}

  l_tot_buy_qty = l_tot_buy_qty_m + l_tot_buy_qty_h;
  d_buy_val = d_buy_val_m + d_buy_val_h;

  EXEC SQL ALLOCATE :trd_cursor;

  EXEC SQL  EXECUTE
     BEGIN
       OPEN  :trd_cursor FOR
       SELECT ftd_exctd_qty,
              ftd_exctd_rt,
              NVL (ftd_frs_brkg, 0),
              NVL (ftd_cvr_brkg, 0),
              ftd_trd_dt
       FROM ftd_fo_trd_dtls
       WHERE	ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
       AND    ftd_xchng_cd        = :c_xchng_cd
       AND    ftd_prdct_typ     	in ('F','P','U') /** Ver 1.2 SLTP F+ product type added ***/
       AND    ftd_undrlyng        = :c_undrlyng
       AND    ftd_expry_dt        = :c_expry_dt
       AND    ftd_exer_typ        = :c_exrc_typ
       AND    ftd_trd_flw         = 'S'
    UNION ALL
       SELECT ftd_exctd_qty,
              ftd_exctd_rt,
              NVL (ftd_frs_brkg, 0),
              NVL (ftd_cvr_brkg, 0),
              ftd_trd_dt
       FROM ftd_fo_trd_dtls_hstry
       WHERE  ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
       AND    ftd_xchng_cd        = :c_xchng_cd
       AND    ftd_prdct_typ     	in ('F','P','U') /** Ver 1.2 SLTP F+ product type added ***/
       AND    ftd_undrlyng        = :c_undrlyng
       AND    ftd_expry_dt        = :c_expry_dt
       AND    ftd_exer_typ        = :c_exrc_typ
       AND    ftd_trd_flw         = 'S'
       ORDER BY 5;
    END;
    END-EXEC;

  li_bal_qty = l_tot_buy_qty;

	while (1)
  {
    li_qty_bal = 0;

    EXEC SQL
    	FETCH :trd_cursor
    	INTO :li_exctd_qty,
           :li_exctd_rt,
           :d_frsh_brk,
           :d_cvr_brk,
           :c_trd_dt;

    if ( SQLCODE != 0 )
    {
    	if ( SQLCODE == NO_DATA_FOUND )
    	{
    		break;
    	}
    	else
    	{
        fn_errlog( c_ServiceName, "S31450", SQLMSG, c_errmsg  );
        EXEC SQL CLOSE :trd_cursor;
        EXEC SQL FREE :trd_cursor;
				return -1;																						/**** Ver 1.4 Invalid cursor error ****/
      }
    }

		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName,"li_exctd_qty					|%ld|",li_exctd_qty);
			fn_userlog(c_ServiceName,"li_exctd_rt						|%ld|",li_exctd_rt);
			fn_userlog(c_ServiceName,"d_frsh_brk						|%lf|",d_frsh_brk);
			fn_userlog(c_ServiceName,"d_cvr_brk							|%lf|",d_cvr_brk);
			fn_userlog(c_ServiceName,"c_trd_dt							|%s|",c_trd_dt);
		}

    if ( li_bal_qty > 0 )
    {
			if(DEBUG_MSG_LVL_3)
      {
         fn_userlog(c_ServiceName,"Inside li_bal_qty > 0");
         fn_userlog(c_ServiceName,"HERE li_bal_qty is :%ld:",li_bal_qty);
         fn_userlog(c_ServiceName,"HERE li_exctd_qty is :%ld:",li_exctd_qty);
      }

      li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );
      d_sell_val = d_sell_val + ( (double) li_crst_qty * (double)  li_exctd_rt ) -
      d_frsh_brk - d_cvr_brk;
      li_bal_qty = li_bal_qty - li_crst_qty;
	
			if(DEBUG_MSG_LVL_3)
      {
        fn_userlog(c_ServiceName,"li_crst_qty         |%ld|",li_crst_qty);
        fn_userlog(c_ServiceName,"d_sell_val          |%lf|",d_sell_val);
        fn_userlog(c_ServiceName,"li_bal_qty          |%ld|",li_bal_qty);
      }

			if ( li_bal_qty == 0 )
      {
				if(DEBUG_MSG_LVL_3)
				{
					fn_userlog(c_ServiceName,"Inside SELL li_bal_qty == 0 ");
				}

        li_uncrst_qty = li_exctd_qty - li_crst_qty;
        d_opn_sell_val = d_opn_sell_val  + ( (double) li_uncrst_qty * (double) li_exctd_rt ) - d_frsh_brk - d_cvr_brk;
      }
    }
	  else
    {
			if(DEBUG_MSG_LVL_3)
      {
        fn_userlog(c_ServiceName,"Inside li_bal_qty = 0");
        fn_userlog(c_ServiceName,"Executed Qty Is :%ld:",li_exctd_qty);
      }

      li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
      d_opn_sell_val = d_opn_sell_val + ( (double) li_exctd_qty * (double) li_exctd_rt ) - d_frsh_brk - d_cvr_brk;
    }

		li_cum_exctd_qty = li_cum_exctd_qty + li_exctd_qty;

		if(DEBUG_MSG_LVL_3)
    {
      fn_userlog(c_ServiceName,"li_cum_exctd_qty  Is :%ld:",li_cum_exctd_qty);
      fn_userlog(c_ServiceName,"li_exctd_qty         :%lf:",li_exctd_qty);
    }

		if( (li_cum_exctd_qty  - l_tot_buy_qty) > 0)
		{
			li_qty_bal = fn_minl(li_cum_exctd_qty  - l_tot_buy_qty, li_exctd_qty);
			li_net_qty_bal = li_net_qty_bal + li_qty_bal;
		}

		if ( li_qty_bal > 0 )
		{
			if(DEBUG_MSG_LVL_3)
    	{
     	  fn_userlog(c_ServiceName,"d_net_avg_rt	Is 		 :%lf:",d_net_avg_rt);
      	fn_userlog(c_ServiceName,"li_qty_bal			     :%ld:",li_qty_bal);
      	fn_userlog(c_ServiceName,"li_exctd_rt			     :%ld:",li_exctd_rt);
    	}
			d_net_avg_rt = d_net_avg_rt + (double) li_qty_bal * (double) li_exctd_rt;
		}
  }

	EXEC SQL CLOSE :trd_cursor;
  EXEC SQL FREE :trd_cursor;

	if(DEBUG_MSG_LVL_3)
  {
  	fn_userlog(c_ServiceName,"d_sell_val [%lf]",d_sell_val);
  	fn_userlog(c_ServiceName,"d_buy_val [%lf]",d_buy_val);
  	fn_userlog(c_ServiceName,"d_opn_sell_val [%lf]",d_opn_sell_val);
  	fn_userlog(c_ServiceName,"li_uncrst_qty [%ld]",li_uncrst_qty);
  	fn_userlog(c_ServiceName,"st_cntrct_qt.l_lst_trdd_prc [%ld]",d_ltp);
  }

  *d_avg_pr = d_net_avg_rt/(double)li_net_qty_bal;
  *d_crst_prft = d_sell_val - d_buy_val;
  *d_uncrst_prft = d_opn_sell_val - ((double) li_uncrst_qty * d_ltp );
	
	if( DEBUG_MSG_LVL_3 )
	{
		fn_userlog(c_ServiceName,"Inside SELL Function d_uncrst_prft is :%lf:",*d_uncrst_prft);
		fn_userlog(c_ServiceName,"Inside SELL Function d_crst_prft is 	:%lf:",*d_crst_prft);
		fn_userlog(c_ServiceName,"Avgtrd Pr=============d_avg_pr is 		:%lf:",*d_avg_pr);
	}
}

int fn_sqroff_pstn_spp(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prdct_typ,
									 double d_ltp,
									 double *d_crst_prft,
                   double *d_uncrst_prft,
                   char *c_errmsg)
{
	double d_buy_val  		= 0;
	double d_sell_val 		= 0;
	double d_cls_val  		= 0;
/*	double d_uncrst_prft 	= 0;*/
/*	double d_crst_prft 		= 0;*/
	double d_Ccrst_prft 	= 0 ;
	double d_Cuncrst_prft = 0;
	double d_sell_val_m 	= 0;
	double d_sell_val_h 	= 0;
	double d_buy_val_m 		= 0;
	double d_buy_val_h 		= 0;
	double d_cls_val_m 		= 0;
	double d_cls_val_h 		= 0;

	long int l_tot_buy_qty		= 0;
	long int l_tot_buy_qty_m 	= 0;
	long int l_tot_buy_qty_h 	= 0;
	long int l_tot_sell_qty 	= 0;
	long int l_tot_sell_qty_m = 0;
  long int l_tot_sell_qty_h = 0;

	if( DEBUG_MSG_LVL_3 )
	{
		fn_userlog(c_ServiceName,"INSIDE POSITION SQR-OFF");
	}

	if( DEBUG_MSG_LVL_3 )
	{
		fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
		fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
		fn_userlog(c_ServiceName,"Product Type Is :%c:",c_prdct_typ);
		fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
		fn_userlog(c_ServiceName,"Exercise Type Is :%c:",c_exrc_typ);
		fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
	}

	EXEC SQL
  	SELECT  NVL(SUM(ftd_exctd_qty ),0),
            NVL(SUM((ftd_exctd_qty * ftd_exctd_rt) - NVL(ftd_frs_brkg,0) - NVL(ftd_cvr_brkg,0)),0)
    INTO    :l_tot_sell_qty_m,
            :d_sell_val_m
    FROM    ftd_fo_trd_dtls
    WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND     ftd_xchng_cd        = :c_xchng_cd
    AND     ftd_prdct_typ      	in ('F','P','U')  /** Ver 1.2 SLTP F+ product type added ***/ 
    AND     ftd_undrlyng        = :c_undrlyng
    AND     ftd_expry_dt        = :c_expry_dt
    AND     ftd_exer_typ        = :c_exrc_typ
    AND     ftd_trd_flw         = 'S';

    if ( SQLCODE != 0 )
    {
    	fn_errlog( c_ServiceName, "S31455", SQLMSG, c_errmsg  );
			return -1;
    }
		
	EXEC SQL
    SELECT  NVL(SUM(ftd_exctd_qty),0),
            NVL(SUM((ftd_exctd_qty * ftd_exctd_rt ) - NVL(ftd_frs_brkg,0) - NVL(ftd_cvr_brkg,0)),0)
    INTO    :l_tot_sell_qty_h,
            :d_sell_val_h
    FROM    ftd_fo_trd_dtls_hstry
		WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND     ftd_xchng_cd        = :c_xchng_cd
    AND     ftd_prdct_typ       in ('F','P','U')  /** Ver 1.2 SLTP F+ product type added ***/
    AND     ftd_undrlyng        = :c_undrlyng
    AND     ftd_expry_dt        = :c_expry_dt
    AND     ftd_exer_typ        = :c_exrc_typ
    AND     ftd_trd_flw         = 'S';

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31460", SQLMSG, c_errmsg  );
      return -1;
    }

    l_tot_sell_qty = l_tot_sell_qty_m + l_tot_sell_qty_h;
    d_sell_val = d_sell_val_m + d_sell_val_h;

	EXEC SQL
      SELECT  NVL(SUM(ftd_exctd_qty),0),
              NVL(SUM((ftd_exctd_qty * ftd_exctd_rt ) - NVL(ftd_frs_brkg,0) - NVL(ftd_cvr_brkg,0)),0)
      INTO    :l_tot_buy_qty_m,
              :d_buy_val_m
      FROM    ftd_fo_trd_dtls
      WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND     ftd_xchng_cd        = :c_xchng_cd
      AND     ftd_prdct_typ       in ('F','P','U')   /** Ver 1.2 SLTP F+ product type added ***/
      AND     ftd_undrlyng        = :c_undrlyng
      AND     ftd_expry_dt        = :c_expry_dt
      AND     ftd_exer_typ        = :c_exrc_typ
      AND     ftd_trd_flw         = 'B';

      if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31465", SQLMSG, c_errmsg  );
        return -1;
      }

  EXEC SQL
    SELECT  NVL(SUM(ftd_exctd_qty),0),
            NVL(SUM((ftd_exctd_qty * ftd_exctd_rt ) - NVL(ftd_frs_brkg,0) - NVL(ftd_cvr_brkg,0)),0)
    INTO    :l_tot_buy_qty_h,
            :d_buy_val_h
    FROM    ftd_fo_trd_dtls_hstry
    WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND     ftd_xchng_cd        = :c_xchng_cd
    AND     ftd_prdct_typ       in ('F','P','U')  /** Ver 1.2 SLTP F+ product type added ***/
    AND     ftd_undrlyng        = :c_undrlyng
    AND     ftd_expry_dt        = :c_expry_dt
    AND     ftd_exer_typ        = :c_exrc_typ
    AND     ftd_trd_flw         = 'B';

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31470", SQLMSG, c_errmsg  );
      return -1;
    }
		
	EXEC SQL
    SELECT NVL((fco_cls_qty * fco_cls_rt),0)
    INTO :d_cls_val_m
    FROM fco_fo_fclsout
    WHERE fco_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND   fco_xchng_cd        = :c_xchng_cd
    AND   fco_prdct_typ       in ('F','P','U')   /** Ver 1.2 SLTP F+ product type added ***/ 
    AND   fco_undrlyng        = :c_undrlyng
    AND   fco_expry_dt        = :c_expry_dt
    AND   fco_exer_typ        = :c_exrc_typ;

    if ( SQLCODE != 0 )
    {
      if ( SQLCODE != NO_DATA_FOUND )
      {
        fn_errlog( c_ServiceName, "S31475", SQLMSG, c_errmsg  );
        return -1;
      }
      else
      {
        d_cls_val_m = 0;
       }
    }

  EXEC SQL
    SELECT NVL((fco_cls_qty * fco_cls_rt),0)
    INTO :d_cls_val_h
    FROM fco_fo_fclsout_hstry
    WHERE fco_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND   fco_xchng_cd        = :c_xchng_cd
    AND   fco_prdct_typ       in ('F','P','U')  /** Ver 1.2 SLTP F+ product type added ***/
    AND   fco_undrlyng        = :c_undrlyng
    AND   fco_expry_dt        = :c_expry_dt
    AND   fco_exer_typ        = :c_exrc_typ;

    if ( SQLCODE != 0 )
    {
      if ( SQLCODE != NO_DATA_FOUND )
      {
        fn_errlog( c_ServiceName, "S31480", SQLMSG, c_errmsg  );
        return -1;
      }
      else
      {
        d_cls_val_h = 0;
      }
    }
		
	d_cls_val = d_cls_val_m + d_cls_val_h;

  l_tot_buy_qty = l_tot_buy_qty_m + l_tot_buy_qty_h;
  d_buy_val = d_buy_val_m + d_buy_val_h;

  *d_crst_prft = d_sell_val - d_buy_val - d_cls_val;

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"SQR-OFF d_sell_val Is :%lf:",d_sell_val);
    fn_userlog(c_ServiceName,"SQR-OFF d_buy_val Is :%lf:",d_buy_val);
  }

  *d_uncrst_prft = 0.0;

  if( DEBUG_MSG_LVL_5 )
  {
    fn_userlog(c_ServiceName,"Inside SQR-Off Crystalised Profit is :%lf:",*d_crst_prft);
  }
  return 0;
}

int fn_sltpbuy_opnpstn_spp(char *c_ServiceName,
                       char *c_cln_mtch_accnt,
                       char *c_xchng_cd,
                       char *c_undrlyng,
                       char *c_expry_dt,
                       double *d_opn_sltp_val,
											 char *c_errmsg	
                      )
{

	sql_cursor trd_cursor;

  varchar c_trd_dt [ LEN_DATE ];

  long l_tot_sell_qty = 0;
  double d_sell_val = 0;
  long int li_uncrst_qty = 0;
  long int li_crst_qty = 0;

  long int li_qty_bal = 0;
  long int li_cum_exctd_qty = 0;
  long int li_net_qty_bal = 0;
  long int li_exctd_qty = 0;
  long int li_exctd_rt = 0;
  long int li_bal_qty   = 0;


  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Inside Function fn_sltpbuy_opnpstn_spp");
  }

  if( DEBUG_MSG_LVL_5 )
  {
    fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
    fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
    fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
  }
	
	EXEC SQL
        SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
                NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) ), 0 )
        INTO    :l_tot_sell_qty,
                :d_sell_val
        FROM    ftd_fo_trd_dtls
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ = 'U'
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_trd_flw         = 'S';

      if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31485", SQLMSG, c_errmsg  );
        return -1;
      }

    EXEC SQL ALLOCATE :trd_cursor;

        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :trd_cursor FOR
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ = 'U'
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_trd_flw         = 'B'
              ORDER BY ftd_trd_dt;
          END;
        END-EXEC;


      li_bal_qty = l_tot_sell_qty;
		while ( 1 )
    {
        li_qty_bal = 0;

        EXEC SQL
          FETCH :trd_cursor
          INTO :li_exctd_qty,
               :li_exctd_rt,
               :c_trd_dt;

        if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {

            break;
          }
          else
          {
            fn_errlog( c_ServiceName, "S31490", SQLMSG, c_errmsg  );
            EXEC SQL CLOSE :trd_cursor;
            EXEC SQL FREE :trd_cursor;
            return -1;
          }
        }

     if ( li_bal_qty > 0 )
     {
          if(DEBUG_MSG_LVL_5)
          {
            fn_userlog(c_ServiceName,"Inside li_bal_qty > 0");
            fn_userlog(c_ServiceName,"HERE li_bal_qty is :%ld:",li_bal_qty);
            fn_userlog(c_ServiceName,"HERE li_exctd_qty is :%ld:",li_exctd_qty);
          }

          li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );

          li_bal_qty = li_bal_qty - li_crst_qty;

          if ( li_bal_qty == 0 )
          {
            li_uncrst_qty = li_exctd_qty - li_crst_qty;
            *d_opn_sltp_val= *d_opn_sltp_val + ( (double) li_uncrst_qty * (double) li_exctd_rt );
          }
        }
        else
				{
          if(DEBUG_MSG_LVL_5)
          {
            fn_userlog(c_ServiceName,"Inside li_bal_qty = 0");
            fn_userlog(c_ServiceName,"Executed Qty Is :%ld:",li_exctd_qty);
          }

          li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
          *d_opn_sltp_val = *d_opn_sltp_val  + ( (double) li_exctd_qty * (double)  li_exctd_rt );

          if(DEBUG_MSG_LVL_5)
          {
            fn_userlog(c_ServiceName,"Uncrystalised Qty Is :%ld:",li_uncrst_qty);
          }
        }

      }

      EXEC SQL CLOSE :trd_cursor;
      EXEC SQL FREE :trd_cursor;


      if( DEBUG_MSG_LVL_3 )
      {
        fn_userlog (c_ServiceName,"Sltp buy  d_opn_sltp_val is :%lf:",*d_opn_sltp_val);
      }


}

int fn_sltpsell_opnpstn_spp(char *c_ServiceName,
                        char *c_cln_mtch_accnt,
                        char *c_xchng_cd,
                        char *c_undrlyng,
                        char *c_expry_dt,
                        double *d_opn_sltp_val,	
												char *c_errmsg)
{

	sql_cursor trd_cursor;

	varchar c_trd_dt [ LEN_DATE ];

	double d_buy_val = 0;
  double d_opn_sell_val = 0;
  long int li_uncrst_qty = 0;
  long int li_qty_bal = 0;
  long int l_tot_buy_qty = 0;
  long int li_exctd_qty = 0;
  long int li_exctd_rt = 0;
  long int li_bal_qty  = 0;
  long int li_crst_qty = 0;


  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Inside Function fn_sltpsell_opnpstn_spp ");
  }

  if( DEBUG_MSG_LVL_5 )
  {
    fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
    fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
    fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
  }

  EXEC SQL
    SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
            NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) ),0)
    INTO    :l_tot_buy_qty,
            :d_buy_val
    FROM    ftd_fo_trd_dtls
    WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND     ftd_xchng_cd        = :c_xchng_cd
    AND     ftd_prdct_typ = 'U'
    AND     ftd_undrlyng        = :c_undrlyng
    AND     ftd_expry_dt        = :c_expry_dt
    AND     ftd_trd_flw         = 'B';
		
		if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31495", SQLMSG, c_errmsg  );
      return -1;
    }


   EXEC SQL ALLOCATE :trd_cursor;


        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :trd_cursor FOR
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ       = 'U'
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_trd_flw         = 'S'
              ORDER BY 3;
          END;
        END-EXEC;


      li_bal_qty = l_tot_buy_qty;
		
			while ( 1 )
      {
      li_qty_bal = 0;

        EXEC SQL
          FETCH :trd_cursor
          INTO :li_exctd_qty,
               :li_exctd_rt,
               :c_trd_dt;

        if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {
            break;
          }
          else
          {
            fn_errlog( c_ServiceName, "S31500", SQLMSG, c_errmsg  );
            EXEC SQL CLOSE :trd_cursor;
            EXEC SQL FREE :trd_cursor;
						return -1;																				/*** Ver 1.4 invalid cursor error ***/
          }
        }

        if ( li_bal_qty > 0 )
        {
          li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );
          li_bal_qty = li_bal_qty - li_crst_qty;

          if ( li_bal_qty == 0 )
          {
            if(DEBUG_MSG_LVL_5)
            {
              fn_userlog(c_ServiceName,"Inside SELL li_bal_qty == 0 ");
            }

            li_uncrst_qty = li_exctd_qty - li_crst_qty;
            *d_opn_sltp_val = *d_opn_sltp_val + ( (double) li_uncrst_qty * (double) li_exctd_rt );

          }
        }
         else
        {
          li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
          *d_opn_sltp_val = *d_opn_sltp_val + ( (double) li_exctd_qty * (double) li_exctd_rt );

        }

      }

	EXEC SQL CLOSE :trd_cursor;
  EXEC SQL FREE :trd_cursor;

    *d_opn_sltp_val = *d_opn_sltp_val * (-1);

   if( DEBUG_MSG_LVL_3 )
   {
       fn_userlog (c_ServiceName,"Sltp Sell  d_opn_sltp_val is :%lf:",d_opn_sltp_val);
   }
}

/*** Ver 1.3 **  Starts ***/

int fn_optplussell_opnpstn_spp(char *c_ServiceName,
                          char *c_cln_mtch_accnt,
                          char *c_xchng_cd,
                          char *c_undrlyng,
                          char *c_expry_dt,
                          char c_exrc_typ,
                          long l_strike_prc,
                          char c_opt_typ,
                          double *d_op_opn_val,
                          char *c_errmsg
                         )
{
  sql_cursor trd_cursor;

  double d_buy_val = 0;
  double d_opn_sell_val = 0;
  double li_uncrst_qty = 0;
  double d_opn_sltp_val = 0;
  long int li_qty_bal = 0;
  long l_tot_buy_qty = 0;
  long li_bal_qty = 0;
  long int li_crst_qty = 0;
  long int li_exctd_qty;
  long int li_exctd_rt;
  char c_trd_dt[LEN_DATE];

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Inside Function fn_optplussell_opnpstn_spp ");
  }

  if( DEBUG_MSG_LVL_5 )
  {
    fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
    fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
    fn_userlog(c_ServiceName,"Exercise Type Is :%c:",c_exrc_typ);
    fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
    fn_userlog(c_ServiceName,"Strike Price Is :%ld:",l_strike_prc);
    fn_userlog(c_ServiceName," OPT typeIs :%c:",c_opt_typ);
  }

 EXEC SQL
    SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
            NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) ),0)
    INTO    :l_tot_buy_qty,
            :d_buy_val
    FROM    ftd_fo_trd_dtls
    WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND     ftd_xchng_cd        = :c_xchng_cd
    AND     ftd_prdct_typ = 'I'
    AND     ftd_undrlyng        = :c_undrlyng
    AND     ftd_expry_dt        = :c_expry_dt
    AND     ftd_exer_typ        = :c_exrc_typ
    AND     ftd_trd_flw         = 'B'
    AND     FTD_OPT_TYP         = :c_opt_typ
    AND     FTD_STRK_PRC        = :l_strike_prc;

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31505", SQLMSG, c_errmsg  );
      return -1;
    }

    EXEC SQL ALLOCATE :trd_cursor;


        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :trd_cursor FOR
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ       = 'I'
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = :c_exrc_typ
              AND     ftd_trd_flw         = 'S'
              AND     FTD_OPT_TYP         = :c_opt_typ
              AND     FTD_STRK_PRC        = :l_strike_prc
              ORDER BY 3;
          END;
        END-EXEC;


      li_bal_qty = l_tot_buy_qty;

    while ( 1 )
      {
      li_qty_bal = 0;

        EXEC SQL
          FETCH :trd_cursor
          INTO :li_exctd_qty,
               :li_exctd_rt,
               :c_trd_dt;

        if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {
            break;
          }
          else
          {
            fn_errlog( c_ServiceName, "S31510", SQLMSG, c_errmsg  );
            EXEC SQL CLOSE :trd_cursor;
            EXEC SQL FREE :trd_cursor;
						return -1;																									/**** Ver 1.4 Invalid cursor error ****/
          }
        }

        if ( li_bal_qty > 0 )
        {
          li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );
          li_bal_qty = li_bal_qty - li_crst_qty;

          if ( li_bal_qty == 0 )
          {
            if(DEBUG_MSG_LVL_5)
            {
              fn_userlog(c_ServiceName,"Inside SELL li_bal_qty == 0 ");
            }

            li_uncrst_qty = li_exctd_qty - li_crst_qty;
            *d_op_opn_val = *d_op_opn_val + ( (double) li_uncrst_qty * (double) li_exctd_rt );

          }
        }
         else
        {
          li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
          *d_op_opn_val = *d_op_opn_val + ( (double) li_exctd_qty * (double) li_exctd_rt );

        }

      }

  EXEC SQL CLOSE :trd_cursor;
  EXEC SQL FREE :trd_cursor;

   *d_op_opn_val = *d_op_opn_val * (-1);

   if( DEBUG_MSG_LVL_3 )
   {
       fn_userlog (c_ServiceName,"Sltp Sell  d_op_opn_val is :%lf:",d_op_opn_val);
   }
}

int fn_optplusbuy_opnpstn_spp(char *c_ServiceName,
                           char *c_cln_mtch_accnt,
                           char *c_xchng_cd,
                           char *c_undrlyng,
                           char *c_expry_dt,
                           char c_exrc_typ,
                           long l_strike_prc,
                           char c_opt_typ,
                           double *d_op_opn_val,
                           char *c_errmsg
                          )
{
  sql_cursor trd_cursor;
  long l_tot_sell_qty = 0;
  double d_sell_val = 0;
  double d_opn_sltp_val = 0;
  long int li_uncrst_qty = 0;
  long int li_crst_qty = 0;
  long int li_bal_qty = 0;
  long int li_qty_bal = 0;
  long int li_cum_exctd_qty = 0;
  long int li_net_qty_bal = 0;
   long int li_exctd_qty;
  long int li_exctd_rt;
  char c_trd_dt[LEN_DATE];

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Inside Function fn_optplusbuy_opnpstn_spp");
  }

  if( DEBUG_MSG_LVL_5 )
  {
    fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
    fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
    fn_userlog(c_ServiceName,"Exercise Type Is :%c:",c_exrc_typ);
    fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
  }

 EXEC SQL
        SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
                NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) ), 0 )
        INTO    :l_tot_sell_qty,
                :d_sell_val
        FROM    ftd_fo_trd_dtls
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ = 'I'
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = :c_exrc_typ
        AND     ftd_trd_flw         = 'S'
        AND     FTD_OPT_TYP         = :c_opt_typ
        AND     FTD_STRK_PRC        = :l_strike_prc;


    if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31515", SQLMSG, c_errmsg  );
        return -1;
      }

    EXEC SQL ALLOCATE :trd_cursor;

        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :trd_cursor FOR
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ = 'I'
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = :c_exrc_typ
              AND     ftd_trd_flw         = 'B'
               AND     FTD_OPT_TYP         = :c_opt_typ
              AND     FTD_STRK_PRC        = :l_strike_prc
              ORDER BY ftd_trd_dt;
          END;
        END-EXEC;


      li_bal_qty = l_tot_sell_qty;

  while ( 1 )
    {
        li_qty_bal = 0;

        EXEC SQL
          FETCH :trd_cursor
          INTO :li_exctd_qty,
               :li_exctd_rt,
               :c_trd_dt;

        if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {

            break;
          }
          else
          {
            fn_errlog( c_ServiceName, "S31520", SQLMSG, c_errmsg  );
            EXEC SQL CLOSE :trd_cursor;
            EXEC SQL FREE :trd_cursor;
            return -1;
          }
        }

     if ( li_bal_qty > 0 )
     {
          if(DEBUG_MSG_LVL_5)
          {
            fn_userlog(c_ServiceName,"Inside li_bal_qty > 0");
            fn_userlog(c_ServiceName,"HERE li_bal_qty is :%ld:",li_bal_qty);
            fn_userlog(c_ServiceName,"HERE li_exctd_qty is :%ld:",li_exctd_qty);
          }

          li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );

          li_bal_qty = li_bal_qty - li_crst_qty;

          if ( li_bal_qty == 0 )
          {
            li_uncrst_qty = li_exctd_qty - li_crst_qty;
            *d_op_opn_val = *d_op_opn_val + ( (double) li_uncrst_qty * (double) li_exctd_rt );
          }
        }
        else
        {
          if(DEBUG_MSG_LVL_5)
          {
            fn_userlog(c_ServiceName,"Inside li_bal_qty = 0");
            fn_userlog(c_ServiceName,"Executed Qty Is :%ld:",li_exctd_qty);
          }

         li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
          *d_op_opn_val = *d_op_opn_val + ( (double) li_exctd_qty * (double)  li_exctd_rt );

          if(DEBUG_MSG_LVL_5)
          {
            fn_userlog(c_ServiceName,"Uncrystalised Qty Is :%ld:",li_uncrst_qty);
          }
        }

      }

      EXEC SQL CLOSE :trd_cursor;
      EXEC SQL FREE :trd_cursor;


      if( DEBUG_MSG_LVL_3 )
      {
        fn_userlog (c_ServiceName,"Sltp buy  d_op_opn_val is :%lf:",d_op_opn_val);
      }
}

/*** Ver 1.3 ** Ends ***/
