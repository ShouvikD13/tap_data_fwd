/******************************************************************************/
/*  Program           : SFO_ABT_PLC_ORD 			                                */
/*                                                                            */
/*  Input             :	FFO_USR_ID												      							*/
/*								      FFO_SSSN_ID														      					*/
/*								      FFO_EBA_MTCH_ACT_NO												      			*/
/*								      FFO_XCHNG_CD																	      	*/
/*								      FFO_PRDCT_TYP											      							*/
/*								      FFO_UNDRLYNG							      											*/
/*								      FFO_EXPRY_DT									      									*/
/*								      FFO_EXER_TYP													      					*/
/*								      FFO_OPT_TYP												      							*/
/*								      FFO_STRK_PRC															      			*/
/*								      FFO_CTGRY_INDSTK											      					*/
/*								      FFO_ORDR_FLW											      							*/
/*								      FFO_LMT_MKT_SL_FLG						      									*/
/*								      FFO_ORD_TYP								      											*/
/*								      FFO_DSCLSD_QTY								      									*/
/*								      FFO_ORD_TOT_QTY						      											*/
/*								      FFO_LMT_RT										      									*/
/*								      FFO_TRD_PSSWD									      									*/
/*                      FML_ORD_STCK_CD                                       */
/*                      FML_ORD_XCHNG_CD                                      */
/*                      FML_ORD_PRDCT_TYP                                     */
/*                      FML_ORD_ORDR_FLW                                      */
/*                      FML_ORD_EXCTD_QTY                                     */
/*                      FML_DPID                                              */
/*                      FML_DPACC                                             */
/*                      FML_ORD_TRD_DT                                        */
/*                      FML_ORD_TYP                                           */
/*                      FML_SCHM_ID                                           */
/*                      FML_ORD_EXCTD_RT                                      */
/*                      FML_GMS_CSH_PRDCT_PRCNTG                              */
/*                      FML_ORD_DSCLSD_QTY                                    */
/*                      FML_RQST_TYP                                          */
/*                                                                            */
/*  Output            : FFO_ORDR_RFRNC												      					*/
/*                      FML_ORD_ORDR_RFRNC										      					*/
/*                      FFO_ERR_MSG                                           */
/*                                                                            */
/*  Description       : This Service submits and places an Arbitrage          */
/*								      order																				      		*/
/*                                                                            */
/*  Log               : 12-Apr-2002  1.0  Sreedhar Nandam                     */
/*  Log               : 17-Jul-2002  1.1  Infotec|Sangeet/Mohit               */
/*  Log               : 13-Dec-2007  1.2  Infotech| Vidyayini Krish           */
/*  Log               : 29-Jun-2016  1.4  Samip M															*/
/*  Log               : 23-Oct-2019  1.5  Tanmay Patel                        */
/******************************************************************************/
/*	Release 1.1				:BP Changes                                             */
/*  Version 1.2       :IBM Changes																						*/
/*  Version 1.4       :Check Session IP Common Function                       */ 
/*  Version 1.5       :Ipv6 Format                                            */
/******************************************************************************/

#include <stdio.h>      /* C Header File                */
#include <stdlib.h>     /* C Header File                */
#include <string.h>			/* C Header File								*/
#include <sqlca.h>      /* Oracle header file           */
#include <atmi.h>       /* TUXEDO Header File           */
#include <userlog.h>    /* TUXEDO Header File           */
#include <fml32.h>      /* TUXEDO Header File           */
#include <Usysflds.h>   /* TUXEDO Field Definitions     */
#include <fo_fml_def.h> /* created for FML handling     */
#include <fo_view_def.h>/* created for FML to/from VIEW conversion */
#include <fml_def.h> /* created for FML handling     */
#include <fo.h>
#include <fn_tuxlib.h>
#include <fn_log.h> /* Ver 1.2 */
#include <fn_session.h> /* Ver 1.2 */
#include <fn_val_ord.h> /* Ver 1.2 */
#include <ctype.h> /* Ver 1.2 */
#include <fml_rout.h> /* Ver 1.2 */
#include <fn_read_debug_lvl.h> /* Ver 1.2 */

char c_ServiceName[33];

void SFO_ABT_PLC_ORD( TPSVCINFO *rqst )
{

  /* Tuxedo specific variables                        */
  FBFR32  *ptr_fml_Ibuf;     /* Pointer to FML Input buffer    */
  FBFR32  *ptr_fml_Obuf;     /* Pointer to FML Output buffer    */

	EXEC SQL BEGIN DECLARE SECTION;
	varchar sql_c_exg_nxt_trd_dt [ 23 ];
	char sql_c_equ_ord_xchng_cd [ 4 ];
	struct vw_usr_prfl st_usr_prfl;
	EXEC SQL END DECLARE SECTION;

  /* Application specific variables                   */
  int i_err [ 30 ];
  int i_ferr [ 30 ];
  int i_returncode;
  int i_prdct_nm;
	int i_cnt;
	int i_trnsctn;
  int i_level_exists;

  char c_ServiceName [ 30 ];
  char c_svc_name [ 20 ];
  char c_arbitrage_flg;
	char c_usr_id [ 9 ];
	char c_trd_psswd [ 51 ];
	char c_mtch_accnt [ 11 ];
	char c_err_msg [ 256 ];
	char c_trd_psswd_flg;

  char c_equ_eba_isin_flg;
  char c_equ_ic_flg ;
	char c_equ_dpid [ 9 ];
	char c_equ_dpacc [ 9 ];
	char c_equ_ord_typ;
	char c_equ_fund_in_dt [ 30 ];
	char c_equ_demat_out_dt [ 30 ];
	char c_equ_quote_time [ 30 ];
	char c_equ_xchng_sgmnt_cd [ 3 ];
	char c_equ_tm [ 30 ];
	char c_equ_ord_stck_cd [ 7 ];
	char c_equ_ord_ordr_flw;
	char c_equ_ord_prdct_typ;
	char c_equ_ord_ordr_rfrnc [ 19 ];
	char c_equ_dmn_nm [ 16 ];
	char c_equ_trg_nm [ 16 ];
	char c_equ_trg_dat [ 256 ];
	char c_equ_rqst_typ;
	char c_equ_schm_id [ 16 ];
	char c_equ_fund_out_dt [ 30 ];
	char c_equ_demat_in_dt [ 30 ];
	char c_equ_ml_flg;
	char c_equ_isin [ 13 ];
	char c_equ_pipe_id [ 3 ];

	char c_fno_xchng_cd [ 4 ];
	char c_fno_prdct_typ;
	char c_fno_undrlyng [ 7 ];
	char c_fno_expry_dt [ 21 ];
	char c_fno_exer_typ;
	char c_fno_opt_typ;
	char c_fno_ctgry_indstk;
	char c_fno_ordr_flw;
	char c_fno_lmt_mkt_sl_flg;
	char c_fno_ord_typ;
	char c_fno_ordr_rfrnc [ 19 ];
	char c_fno_pipe_id [ 3 ];
	char c_channel [ 4 ];
	char c_alias [ 9 ];
	char c_bp_id [ 9 ];
  char c_txn_flg='Y';             /*** Ver 1.4 ***/
  char c_ip_address[45+1]="\0";   /** Changed from 15 to 45 in Ver 1.5 **/ /*** Ver 1.4 ***/

	long l_sssn_id; 
  long l_tmp_sssn_id; 
	long l_usr_flg;

	long l_equ_dpacc;
	long l_equ_sttlmnt_nmbr;
	long l_equ_cvr_qty;
	long l_equ_ord_exctd_qty;
	long l_equ_ord_dsclsd_qty;
	
	long l_fno_strk_prc;
	long l_fno_dsclsd_qty;
	long l_fno_lmt_rt;
	long l_fno_stp_lss_tgr;
	long l_fno_ord_tot_qty;

	double d_equ_ord_exctd_rt;
	double d_equ_gms_csh_prdct_prcntg;
  double d_equ_quote;
	double d_equ_rt;
	double d_equ_ord_stp_lss_tgr;
                                 
	struct vw_err_msg st_err_msg;

	/* Initialisation of Variables */
	
  ptr_fml_Ibuf = (FBFR32 *)rqst->data;
  strcpy(c_ServiceName, rqst->name);
	INITDBGLVL(c_ServiceName);

	i_prdct_nm = 0;
	c_arbitrage_flg = ARBITRAGE;

	ptr_fml_Obuf = NULL;

  /* Retrieve the data from the input FML buffer  	*/
	/* FML_USR_ID and FFO_USR_ID are same							*/
	/* FML_SSSN_ID and FFO_SSSN_ID are same						*/
	/* FML_TRADING_PASSWD and FFO_TRD_PSSWD are same.	*/
	/* All the above fields are mandatory.						*/

	/* For Normal Clients there will be only One Match*/
	/* Account, in future if Non-Normal Clients are   */
	/* allowed on this system, we may need to get more*/
	/* than One Match Account.												*/

	i_returncode  = fn_unpack_fmltovar (
													c_ServiceName,
													c_err_msg,
													ptr_fml_Ibuf,
													26,
													FFO_USR_ID, ( char * )c_usr_id, NULL,
													FFO_SSSN_ID, ( char * )&l_sssn_id, NULL,
													FFO_EBA_MTCH_ACT_NO, 
																		( char * )c_mtch_accnt, NULL,
													FFO_XCHNG_CD, ( char * )c_fno_xchng_cd, NULL,
													FFO_PRDCT_TYP, ( char * )&c_fno_prdct_typ, NULL,
													FFO_UNDRLYNG, ( char * )c_fno_undrlyng, NULL,
													FFO_EXPRY_DT, ( char * )c_fno_expry_dt, NULL,
													FFO_EXER_TYP, ( char * )&c_fno_exer_typ, NULL,
													FFO_OPT_TYP, ( char * )&c_fno_opt_typ, NULL,
													FFO_STRK_PRC, ( char * )&l_fno_strk_prc, NULL,
													FFO_CTGRY_INDSTK, ( char * )&c_fno_ctgry_indstk, NULL,
													FFO_ORDR_FLW, ( char * )&c_fno_ordr_flw, NULL,
													FFO_LMT_MKT_SL_FLG, 
																		( char * )&c_fno_lmt_mkt_sl_flg, NULL,
													FFO_DSCLSD_QTY, ( char * )&l_fno_dsclsd_qty, NULL,
													FFO_ORD_TOT_QTY, ( char * )&l_fno_ord_tot_qty, NULL,
													FFO_LMT_RT, ( char * )&l_fno_lmt_rt, NULL,
													FFO_TRD_PSSWD, ( char * )c_trd_psswd, NULL,
													FML_ORD_STCK_CD, ( char * )c_equ_ord_stck_cd, NULL,
													FML_ORD_XCHNG_CD, 
																		( char * )sql_c_equ_ord_xchng_cd, NULL,
													FML_ORD_PRDCT_TYP, 
																		( char * )&c_equ_ord_prdct_typ, NULL,
													FML_ORD_ORDR_FLW, 
																		( char * )&c_equ_ord_ordr_flw, NULL,
													FML_ORD_EXCTD_QTY, 
																		( char * )&l_equ_ord_exctd_qty, NULL,
													FML_ORD_TYP, ( char * )&c_equ_ord_typ, NULL,
													FML_ORD_DSCLSD_QTY, 
																		( char * )&l_equ_ord_dsclsd_qty, NULL,
													FFO_CHANNEL, ( char * )c_channel, NULL,
													FML_RQST_TYP, ( char * )&c_equ_rqst_typ, NULL );

	if (i_returncode == SYSTEM_ERROR )
	{
    fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	if (c_usr_id[0] == BPID)
	{
     if(Fget32(ptr_fml_Ibuf,FFO_ALIAS,0,(char *)c_alias,0) == -1)
      {
            fn_errlog( c_ServiceName, "S31010", FMLMSG, c_err_msg  );
            Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
            tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
  }
  else
  {
      strcpy(c_bp_id,"*");
  }
	

	if(DEBUG_MSG_LVL_3)
	{
	fn_userlog(c_ServiceName, "c_usr_id <%s>", c_usr_id);
	fn_userlog(c_ServiceName, "l_sssn_id <%d>", l_sssn_id);
	fn_userlog(c_ServiceName, "c_mtch_accnt <%s>", c_mtch_accnt);
	fn_userlog(c_ServiceName, "c_fno_xchng_cd <%s>", c_fno_xchng_cd);
	fn_userlog(c_ServiceName, "c_fno_prdct_typ <%c>", c_fno_prdct_typ);
	fn_userlog(c_ServiceName, "c_fno_undrlyng <%s>", c_fno_undrlyng);
	fn_userlog(c_ServiceName, "c_fno_expry_dt <%s>", c_fno_expry_dt);
	fn_userlog(c_ServiceName, "c_fno_exer_typ <%c>", c_fno_exer_typ);
	fn_userlog(c_ServiceName, "c_fno_opt_typ <%c>", c_fno_opt_typ);
	fn_userlog(c_ServiceName, "l_fno_strk_prc <%ld>", l_fno_strk_prc);
	fn_userlog(c_ServiceName, "c_fno_ctgry_indstk <%c>", c_fno_ctgry_indstk);
	fn_userlog(c_ServiceName, "c_fno_ordr_flw <%c>", c_fno_ordr_flw);
	fn_userlog(c_ServiceName, "c_fno_lmt_mkt_sl_flg <%c>", c_fno_lmt_mkt_sl_flg);
	fn_userlog(c_ServiceName, "l_fno_dsclsd_qty <%ld>", l_fno_dsclsd_qty);
	fn_userlog(c_ServiceName, "l_fno_ord_tot_qty <%ld>", l_fno_ord_tot_qty);
	fn_userlog(c_ServiceName, "l_fno_lmt_rt <%ld>", l_fno_lmt_rt);
	fn_userlog(c_ServiceName, "c_trd_psswd <%s>", c_trd_psswd);
	fn_userlog(c_ServiceName, "c_equ_ord_stck_cd <%s>", c_equ_ord_stck_cd);
	fn_userlog(c_ServiceName, "sql_c_equ_ord_xchng_cd <%s>", 
															sql_c_equ_ord_xchng_cd);
	fn_userlog(c_ServiceName, "c_equ_ord_prdct_typ <%c>", c_equ_ord_prdct_typ);
	fn_userlog(c_ServiceName, "c_equ_ord_ordr_flw <%c>", c_equ_ord_ordr_flw);
	fn_userlog(c_ServiceName, "l_equ_ord_exctd_qty <%ld>", l_equ_ord_exctd_qty);
	fn_userlog(c_ServiceName, "c_equ_ord_typ <%c>", c_equ_ord_typ);
	fn_userlog(c_ServiceName, "l_equ_ord_dsclsd_qty <%ld>", l_equ_ord_dsclsd_qty);
	fn_userlog(c_ServiceName, "c_equ_rqst_typ <%c>", c_equ_rqst_typ);
	fn_userlog(c_ServiceName, "c_CHANNEL <%s>", c_channel);
	fn_userlog(c_ServiceName, "c_BP_ID <%s>", c_bp_id);
	fn_userlog(c_ServiceName, "c_ALIAS <%s>", c_alias);
	}

	/****************************************************************/
	/* Validate the User and Trading Password												*/
	/****************************************************************/

	strcpy( st_usr_prfl.c_user_id, c_usr_id );
	st_usr_prfl.l_session_id = l_sssn_id;
	strcpy( st_usr_prfl.c_cln_mtch_accnt, c_mtch_accnt );
	st_usr_prfl.l_usr_flg = 0; /* to be validated */ 
	/*** Commented for Ver 1.4 ****
	i_returncode = fn_chk_sssn(c_ServiceName,
														 &st_usr_prfl ,														
														 &st_err_msg );
	if ( i_returncode == -1 )
	{
		fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, st_err_msg.c_err_msg, 0 );
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}
	***** Ver 1.4 ***/

	c_trd_psswd_flg = YES;
	/*** Commented for Ver 1.4 ****
	i_returncode = fn_check_user ( c_ServiceName,
																	&st_usr_prfl ,
																	c_trd_psswd,
																	c_trd_psswd_flg,
																	&st_err_msg );
	*** Ver 1.4 ***/
	/*** Added for Ver 1.4 ***/
	i_returncode = fn_check_user_ip ( c_ServiceName,
																		&st_usr_prfl ,
																		c_trd_psswd,
																		c_trd_psswd_flg,
																		c_ip_address,
																		c_txn_flg,
																		&st_err_msg );
	/** End for Ver 1.4 ***/

	if ( i_returncode == -1 )
	{
		fn_errlog( c_ServiceName, "S31020", LIBMSG, c_err_msg );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, st_err_msg.c_err_msg, 0 );
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	/* All these checking is done to make sure that "Institutional" */
	/* clients are not using this "Arbitrage Order" system.					*/
	/* In future if "Institutional" clients are allowed on this     */
	/* system these checks should be removed.												*/

	memset ( c_equ_schm_id, 0, sizeof ( c_equ_schm_id ) );

	i_err[0]= Fget32(ptr_fml_Ibuf, FML_SCHM_ID, 0,
									(char *)c_equ_schm_id, 0);
	i_ferr [ 0 ] = Ferror32;

	if (i_err[0] == -1 && Ferror32 != FNOTPRES)
	{
    fn_errlog( c_ServiceName, "S31025", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}
	else
	{
		if (i_err[0] == -1 )
		{
			c_equ_ic_flg = 'O';
			i_err[0]=0;
		}
		else
		{
			c_equ_ic_flg = 'I' ;
			i_err[0]=0;
		}
	}

	if ( c_equ_ic_flg != 'I' )
	{
		i_err[0]= Fget32(ptr_fml_Ibuf, FML_DPID, 0,
										(char *)c_equ_dpid, 0);
		i_ferr [ 0 ] = Ferror32;

		i_err[1]= Fget32(ptr_fml_Ibuf, FML_DPACC, 0,
										(char *)&l_equ_dpacc, 0);
		i_ferr [ 1 ] = Ferror32;

		sprintf ( c_equ_dpacc, "%ld", l_equ_dpacc );
	}
	else
	{
		fn_errlog( c_ServiceName, "S31030", "Institutional Clients are NOT allowed to use Arbitrage Order Entry System", c_err_msg  );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	for ( i_cnt = 0; i_cnt < 2; i_cnt++ )
	{
		if ( i_err[i_cnt] == -1 )
		{
			fn_userlog(c_ServiceName,"i_cnt : %d",i_cnt);
			fn_errlog( c_ServiceName, "S31035",Fstrerror32(i_ferr[i_cnt]),c_err_msg);
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
	}

	if(DEBUG_MSG_LVL_3)
	{	
	fn_userlog(c_ServiceName, "c_equ_dpid <%s>", c_equ_dpid);
	fn_userlog(c_ServiceName, "l_equ_dpacc <%ld>", l_equ_dpacc);
	}

	c_equ_ord_typ = toupper ( c_equ_ord_typ );

	switch ( c_equ_ord_typ )
	{
		case LIMIT:
		{
			i_err[0]= Fget32(ptr_fml_Ibuf, FML_ORD_EXCTD_RT, 0,
											(char *)&d_equ_ord_exctd_rt, 0);
			if ( i_err[0] == -1 )
			{
				fn_errlog( c_ServiceName, "S31040",FMLMSG,c_err_msg);
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}
			
			d_equ_gms_csh_prdct_prcntg = 0;
			break;
		}
		case MARKET:
		{
			if ( strcmp(sql_c_equ_ord_xchng_cd,"BSE") == 0 )
			{
				i_err[0] = Fget32(ptr_fml_Ibuf, FML_GMS_CSH_PRDCT_PRCNTG, 0,
													(char *)&d_equ_gms_csh_prdct_prcntg, 0);
				if( i_err[0] == -1 )
				{
					fn_errlog( c_ServiceName, "S31045",FMLMSG,c_err_msg);
					Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
					tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
				}
			}
			else
			{
				d_equ_gms_csh_prdct_prcntg = 0;
			}
			d_equ_ord_exctd_rt = 0;
			break;
		}
	}
	if(DEBUG_MSG_LVL_3)
	{
	fn_userlog(c_ServiceName, "d_equ_ord_exctd_rt <%lf>", d_equ_ord_exctd_rt);
	fn_userlog(c_ServiceName, "d_equ_gms_csh_prdct_prcntg <%lf>", 
															d_equ_gms_csh_prdct_prcntg);
	}
	EXEC SQL
				SELECT  exg_nxt_trd_dt
				INTO :sql_c_exg_nxt_trd_dt
				FROM exg_xchng_mstr
				WHERE exg_xchng_cd = :sql_c_equ_ord_xchng_cd;

	if ( SQLCODE != 0 )
	{
		fn_errlog( c_ServiceName, "S31050",SQLMSG,c_err_msg);
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	SETNULL ( sql_c_exg_nxt_trd_dt );

	/* Retrieve type of transaction to be done */
	
	if (  ( c_equ_ord_prdct_typ == CASH ) &&
				( c_equ_ord_ordr_flw  == BUY ) &&
				( c_equ_ic_flg != 'I' ) )
	{
		i_prdct_nm = CASH_BUY ;
	}
	else
	{
		if (  ( c_equ_ord_prdct_typ == CASH ) &&
					( c_equ_ord_ordr_flw  == SELL ) &&
					( c_equ_ic_flg != 'I' ) )
		{
			i_prdct_nm = CASH_SELL ;
		}
		else
		{
			/* Currently "Cash Product" only available, for other type of */
			/* Products we have to return "Bussiness Error".							*/ 
    	fn_errlog( c_ServiceName, "S31055", "Invalid Order Type", c_err_msg  );
    	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
	}

	/********************************************************/
	/* We should start a transaction before placing        	*/
	/* order into Equity and FNO Markets										*/
	/********************************************************/

  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog( c_ServiceName, "S31060", LIBMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	/********************************************************/
	/* Placing Order in Equity Market												*/
	/********************************************************/

	c_equ_eba_isin_flg = 'E';

	if ( i_prdct_nm == CASH_BUY )
	{
		strcpy ( c_svc_name, "SVC_SUBMIT_CB" );
	}
	else if ( i_prdct_nm == CASH_SELL )
	{
 		strcpy ( c_svc_name, "SVC_SUBMIT_CS" );
	}
	else
	{
		/* This pgm should not enter this loop. */
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
   	fn_errlog( c_ServiceName, "S31065", "Resource Not Available", c_err_msg  );
   	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
   	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	/********************************************************/
	/* Calling Service SVC_SUBMIT_XX to submit order in     */
	/* Equity Market																				*/
	/********************************************************/

	/* Different FML buffers need to be passed for SVC_SUBMIT_XX 	*/
	/* based on the d_equ_ord_exctd_rt and i_prdct_nm							*/

	if ( i_prdct_nm ==  CASH_BUY )
	{
		strcpy ( c_svc_name, "SVC_SUBMIT_CB" );
		l_tmp_sssn_id = 0; 
		if ( d_equ_ord_exctd_rt > 0 )
		{
			i_returncode = fn_call_svc_fml ( c_ServiceName,
																			c_err_msg,
																			"SVC_ORD_ROUT",
																			0,
																			17,
																			9,
																			FML_USR_ID, (char *)c_usr_id,
																			FML_SSSN_ID, (char *)&l_tmp_sssn_id, 
																			FML_ORD_CLM_MTCH_ACCNT, 
																				(char *)c_mtch_accnt,
																			FML_ORD_STCK_CD, 
																				(char *)c_equ_ord_stck_cd,
																			FML_ORD_XCHNG_CD,
																				(char *)sql_c_equ_ord_xchng_cd,
																			FML_ORD_PRDCT_TYP,
																				(char *)&c_equ_ord_prdct_typ,
																			FML_ORD_ORDR_FLW,
																				(char *)&c_equ_ord_ordr_flw,
																			FML_ORD_EXCTD_QTY,
																				(char *)&l_equ_ord_exctd_qty,
																			FML_DPID,
																				(char *)c_equ_dpid,
																			FML_DPACC,
																				(char *)&l_equ_dpacc,
																			FML_ORD_TRD_DT,
																				(char *)sql_c_exg_nxt_trd_dt.arr,
																			FML_EBA_ISIN_FLG,
																				(char *)&c_equ_eba_isin_flg,
																			FML_ORD_TYP,
																				(char *)&c_equ_ord_typ,
																			FML_ORD_EXCTD_RT,
																				(char *)&d_equ_ord_exctd_rt,
																			FML_GMS_CSH_PRDCT_PRCNTG,
																				(char *)&d_equ_gms_csh_prdct_prcntg,
																			FML_SQ_FLG,
																				(char *)&c_arbitrage_flg,
																			FML_SVC_NAME,
																				(char *)c_svc_name,
																			FML_STTLMNT_NMBR,
																				(char *)&l_equ_sttlmnt_nmbr,
																				NULL,
																			FML_FUND_IN_DT,
																				(char *)c_equ_fund_in_dt, NULL,
																			FML_DEMAT_OUT_DT,
																				(char *)c_equ_demat_out_dt, NULL,
																			FML_QUOTE,
																				(char *)&d_equ_quote, NULL,
																			FML_QUOTE_TIME,
																				(char *)c_equ_quote_time, NULL,
																			FML_XCHNG_SGMNT_CD,
																				(char *)c_equ_xchng_sgmnt_cd, 
																				NULL,
																			FML_CVR_QTY,
																				(char *)&l_equ_cvr_qty, NULL,
																			FML_TM,
																				(char *)c_equ_tm, NULL,
																			FML_RT,
																				(char *)&d_equ_rt, NULL);
		}
		else
		{
			i_returncode = fn_call_svc_fml ( c_ServiceName,
																			c_err_msg,
																			"SVC_ORD_ROUT",
																			0,
																			16,
																			9,
																			FML_USR_ID, (char *)c_usr_id,
																			FML_SSSN_ID, (char *)&l_tmp_sssn_id, 
																			FML_ORD_CLM_MTCH_ACCNT, 
																				(char *)c_mtch_accnt,
																			FML_ORD_STCK_CD, 
																				(char *)c_equ_ord_stck_cd,
																			FML_ORD_XCHNG_CD,
																				(char *)sql_c_equ_ord_xchng_cd,
																			FML_ORD_PRDCT_TYP,
																				(char *)&c_equ_ord_prdct_typ,
																			FML_ORD_ORDR_FLW,
																				(char *)&c_equ_ord_ordr_flw,
																			FML_ORD_EXCTD_QTY,
																				(char *)&l_equ_ord_exctd_qty,
																			FML_DPID,
																				(char *)c_equ_dpid,
																			FML_DPACC,
																				(char *)&l_equ_dpacc,
																			FML_ORD_TRD_DT,
																				(char *)sql_c_exg_nxt_trd_dt.arr,
																			FML_EBA_ISIN_FLG,
																				(char *)&c_equ_eba_isin_flg,
																			FML_ORD_TYP,
																				(char *)&c_equ_ord_typ,
																			FML_GMS_CSH_PRDCT_PRCNTG,
																				(char *)&d_equ_gms_csh_prdct_prcntg,
																			FML_SQ_FLG,
																				(char *)&c_arbitrage_flg,
																			FML_SVC_NAME,
																				(char *)c_svc_name,
																			FML_STTLMNT_NMBR,
																				(char *)&l_equ_sttlmnt_nmbr,
																				NULL,
																			FML_FUND_IN_DT,
																				(char *)c_equ_fund_in_dt, NULL,
																			FML_DEMAT_OUT_DT,
																				(char *)c_equ_demat_out_dt, NULL,
																			FML_QUOTE,
																				(char *)&d_equ_quote, NULL,
																			FML_QUOTE_TIME,
																				(char *)c_equ_quote_time, NULL,
																			FML_XCHNG_SGMNT_CD,
																				(char *)c_equ_xchng_sgmnt_cd, 
																				NULL,
																			FML_CVR_QTY,
																				(char *)&l_equ_cvr_qty, NULL,
																			FML_TM,
																				(char *)c_equ_tm, NULL,
																			FML_RT,
																				(char *)&d_equ_rt, NULL);
		}
	}
	else if ( i_prdct_nm ==  CASH_SELL )
	{
		strcpy ( c_svc_name, "SVC_SUBMIT_CS" );
		l_tmp_sssn_id = 0; 
		if ( d_equ_ord_exctd_rt > 0 )
		{
			i_returncode = fn_call_svc_fml ( c_ServiceName,
																			c_err_msg,
																			"SVC_ORD_ROUT",
																			0,
																			17,
																			11,
																			FML_USR_ID, (char *)c_usr_id,
																			FML_SSSN_ID, (char *)&l_tmp_sssn_id,
																			FML_ORD_CLM_MTCH_ACCNT, 
																				(char *)c_mtch_accnt,
																			FML_ORD_STCK_CD, 
																				(char *)c_equ_ord_stck_cd,
																			FML_ORD_XCHNG_CD,
																				(char *)sql_c_equ_ord_xchng_cd,
																			FML_ORD_PRDCT_TYP,
																				(char *)&c_equ_ord_prdct_typ,
																			FML_ORD_ORDR_FLW,
																				(char *)&c_equ_ord_ordr_flw,
																			FML_ORD_EXCTD_QTY,
																				(char *)&l_equ_ord_exctd_qty,
																			FML_DPID,
																				(char *)c_equ_dpid,
																			FML_DPACC,
																				(char *)&l_equ_dpacc,
																			FML_ORD_TRD_DT,
																				(char *)sql_c_exg_nxt_trd_dt.arr,
																			FML_EBA_ISIN_FLG,
																				(char *)&c_equ_eba_isin_flg,
																			FML_ORD_TYP,
																				(char *)&c_equ_ord_typ,
																			FML_ORD_EXCTD_RT,
																				(char *)&d_equ_ord_exctd_rt,
																			FML_GMS_CSH_PRDCT_PRCNTG,
																				(char *)&d_equ_gms_csh_prdct_prcntg,
																			FML_SQ_FLG,
																				(char *)&c_arbitrage_flg,
																			FML_SVC_NAME,
																				(char *)c_svc_name,
																			FML_STTLMNT_NMBR,
																				(char *)&l_equ_sttlmnt_nmbr,
																				NULL,
																			FML_FUND_OUT_DT,
																				(char *)c_equ_fund_out_dt, NULL,
																			FML_DEMAT_IN_DT,
																				(char *)c_equ_demat_in_dt, NULL,
																			FML_QUOTE,
																				(char *)&d_equ_quote, NULL,
																			FML_QUOTE_TIME,
																				(char *)c_equ_quote_time, NULL,
																			FML_XCHNG_SGMNT_CD,
																				(char *)c_equ_xchng_sgmnt_cd, 
																				NULL,
																			FML_CVR_QTY,
																				(char *)&l_equ_cvr_qty, NULL,
																			FML_TM,
																				(char *)c_equ_tm, NULL,
																			FML_RT,
																				(char *)&d_equ_rt, NULL,
																			FML_ML_FLG,
																				(char *)&c_equ_ml_flg, NULL,
																			FML_ISIN,
																				(char *)c_equ_isin, NULL);
		}
		else
		{
			i_returncode = fn_call_svc_fml ( c_ServiceName,
																			c_err_msg,
																			"SVC_ORD_ROUT",
																			0,
																			16,
																			11,
																			FML_USR_ID, (char *)c_usr_id,
																			FML_SSSN_ID, (char *)&l_tmp_sssn_id, 
																			FML_ORD_CLM_MTCH_ACCNT, 
																				(char *)c_mtch_accnt,
																			FML_ORD_STCK_CD, 
																				(char *)c_equ_ord_stck_cd,
																			FML_ORD_XCHNG_CD,
																				(char *)sql_c_equ_ord_xchng_cd,
																			FML_ORD_PRDCT_TYP,
																				(char *)&c_equ_ord_prdct_typ,
																			FML_ORD_ORDR_FLW,
																				(char *)&c_equ_ord_ordr_flw,
																			FML_ORD_EXCTD_QTY,
																				(char *)&l_equ_ord_exctd_qty,
																			FML_DPID,
																				(char *)c_equ_dpid,
																			FML_DPACC,
																				(char *)&l_equ_dpacc,
																			FML_ORD_TRD_DT,
																				(char *)sql_c_exg_nxt_trd_dt.arr,
																			FML_EBA_ISIN_FLG,
																				(char *)&c_equ_eba_isin_flg,
																			FML_ORD_TYP,
																				(char *)&c_equ_ord_typ,
																			FML_GMS_CSH_PRDCT_PRCNTG,
																				(char *)&d_equ_gms_csh_prdct_prcntg,
																			FML_SQ_FLG,
																				(char *)&c_arbitrage_flg,
																			FML_SVC_NAME,
																				(char *)c_svc_name,
																			FML_STTLMNT_NMBR,
																				(char *)&l_equ_sttlmnt_nmbr,
																				NULL,
																			FML_FUND_OUT_DT,
																				(char *)c_equ_fund_out_dt, NULL,
																			FML_DEMAT_IN_DT,
																				(char *)c_equ_demat_in_dt, NULL,
																			FML_QUOTE,
																				(char *)&d_equ_quote, NULL,
																			FML_QUOTE_TIME,
																				(char *)c_equ_quote_time, NULL,
																			FML_XCHNG_SGMNT_CD,
																				(char *)c_equ_xchng_sgmnt_cd, 
																				NULL,
																			FML_CVR_QTY,
																				(char *)&l_equ_cvr_qty, NULL,
																			FML_TM,
																				(char *)c_equ_tm, NULL,
																			FML_RT,
																				(char *)&d_equ_rt, NULL,
																			FML_ML_FLG,
                                        (char *)&c_equ_ml_flg, NULL,
                                      FML_ISIN,
                                        (char *)c_equ_isin, NULL);
		}
	}
	else
	{
		/* This pgm should not enter this loop. */
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
   	fn_errlog( c_ServiceName, "S31070", "Resource Not Available", c_err_msg  );
   	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
   	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}
																			/*FML_CHANNEL,
																				(char *)c_channel, NULL,
																			FML_BP_ID,
																				(char *)c_bp_id, NULL,
																			FML_ALIAS,
																				(char *)c_alias, NULL,*/

  if ( i_returncode != SUCC_BFR )
  {
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    fn_errlog( c_ServiceName, "S31075", LIBMSG, c_err_msg  );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  /********************************************************/
  /* Calling Service SVC_PLC_XX to Place order in     		*/
  /* Equity Market                                        */
  /********************************************************/
	
	/* Stop Loss Orders are not allowed on this system 	*/
	/* because of this reason we are making it as ZERO	*/
	d_equ_ord_stp_lss_tgr = 0.0;

	if ( c_equ_ord_typ == MARKET )
	{
		d_equ_ord_exctd_rt = d_equ_quote;
	}

  if ( i_prdct_nm == CASH_BUY )
  {
    strcpy ( c_svc_name, "SVC_PLC_CB" );
		l_tmp_sssn_id =0; 
		i_returncode = fn_call_svc_fml ( c_ServiceName,
																		c_err_msg,
																		"SVC_ORD_ROUT",
																		0,
																		28,			/* 1.1 : from 26 to 28 for BP*/
																		2,
																		FML_USR_ID,
																			(char *)c_usr_id,
																		FML_SSSN_ID,
																			(char *)&l_tmp_sssn_id, 
																		FML_QTY,
																			(char *)&l_equ_ord_exctd_qty,
																		FML_ORD_CLM_MTCH_ACCNT,
																			(char *)c_mtch_accnt,
																		FML_STCK_CD,
																			(char *)c_equ_ord_stck_cd,
																		FML_ORD_XCHNG_CD,
																			(char *)sql_c_equ_ord_xchng_cd,
																		FML_XCHNG_SG,
																			(char *)c_equ_xchng_sgmnt_cd,
																		FML_ORD_ORDR_FLW,
																			(char *)&c_equ_ord_ordr_flw,
																		FML_ORD_PRDCT_TYP,
																			(char *)&c_equ_ord_prdct_typ,
																		FML_O_TOT_QTY,
																			(char *)&l_equ_ord_exctd_qty,
																		FML_LM_FLG,
																			(char *)&c_equ_ord_typ,
																		FML_LM_RT,
																			(char *)&d_equ_ord_exctd_rt,
																		FML_ORD_DSCLSD_QTY,
																			(char *)&l_equ_ord_dsclsd_qty,
																		FML_ORD_STP_LSS,
																			(char *)&d_equ_ord_stp_lss_tgr,
																		FML_ORD_TRD_DT,
																			(char *)sql_c_exg_nxt_trd_dt.arr,
																		FML_ORD_DP_ID,
																			(char *)c_equ_dpid,
																		FML_ORD_DP_CLNT_ID,
																			(char *)c_equ_dpacc,
																		FML_ORD_XCHNG_SGMNT_STTLMNT,
																			(char *)&l_equ_sttlmnt_nmbr,
																		FML_PY_IN_DT,
																			(char *)c_equ_fund_out_dt,
																		FML_PY_OUT_DT,
																			(char *)c_equ_demat_in_dt,
																		FML_QUOTE_TIME,
																			(char *)c_equ_quote_time,
																		FML_TM,
																			(char *)c_equ_tm,
																		FML_CVR_QTY,
																			(char *)&l_equ_cvr_qty,
																		FML_RT,
																			(char *)&d_equ_rt,
																		FML_SQ_FLG,
																			(char *)&c_arbitrage_flg,
																		FML_SVC_NAME,
																			(char *)c_svc_name,
																		FML_SYMBOL,							/* 1.1 - BP*/
																			(char *)c_channel,
																		FML_UGR_USR_ALIAS,			/* 1.1 - BP*/
																			(char *)c_alias,
																		FML_USR_ZIP_CD,
																			(char *)c_equ_pipe_id, NULL,
																		FML_ORD_ORDR_RFRNC,
																			(char *)c_equ_ord_ordr_rfrnc, NULL);
	}
	else if ( i_prdct_nm == CASH_SELL )
	{
    strcpy ( c_svc_name, "SVC_PLC_CS" );
		l_tmp_sssn_id = 0; 
		i_returncode = fn_call_svc_fml ( c_ServiceName,
																		c_err_msg,
																		"SVC_ORD_ROUT",
																		0,
																		30,			/* 1.1 : from 28 to 30 for BP*/	
																		2,
																		FML_USR_ID,
																			(char *)c_usr_id,
																		FML_SSSN_ID,
																			(char *)&l_tmp_sssn_id, 
																		FML_QTY,
																			(char *)&l_equ_ord_exctd_qty,
																		FML_ORD_CLM_MTCH_ACCNT,
																			(char *)c_mtch_accnt,
																		FML_STCK_CD,
																			(char *)c_equ_ord_stck_cd,
																		FML_ORD_XCHNG_CD,
																			(char *)sql_c_equ_ord_xchng_cd,
																		FML_XCHNG_SG,
																			(char *)c_equ_xchng_sgmnt_cd,
																		FML_ORD_ORDR_FLW,
																			(char *)&c_equ_ord_ordr_flw,
																		FML_ORD_PRDCT_TYP,
																			(char *)&c_equ_ord_prdct_typ,
																		FML_O_TOT_QTY,
																			(char *)&l_equ_ord_exctd_qty,
																		FML_LM_FLG,
																			(char *)&c_equ_ord_typ,
																		FML_LM_RT,
																			(char *)&d_equ_ord_exctd_rt,
																		FML_ORD_DSCLSD_QTY,
																			(char *)&l_equ_ord_dsclsd_qty,
																		FML_ORD_STP_LSS,
																			(char *)&d_equ_ord_stp_lss_tgr,
																		FML_ORD_TRD_DT,
																			(char *)sql_c_exg_nxt_trd_dt.arr,
																		FML_ORD_DP_ID,
																			(char *)c_equ_dpid,
																		FML_ORD_DP_CLNT_ID,
																			(char *)c_equ_dpacc,
																		FML_ORD_XCHNG_SGMNT_STTLMNT,
																			(char *)&l_equ_sttlmnt_nmbr,
																		FML_PY_IN_DT,
																			(char *)c_equ_fund_in_dt,
																		FML_PY_OUT_DT,
																			(char *)c_equ_demat_out_dt,
																		FML_QUOTE_TIME,
																			(char *)c_equ_quote_time,
																		FML_TM,
																			(char *)c_equ_tm,
																		FML_CVR_QTY,
																			(char *)&l_equ_cvr_qty,
																		FML_RT,
																			(char *)&d_equ_rt,
																		FML_SQ_FLG,
																			(char *)&c_arbitrage_flg,
																		FML_ISIN_NMBR,
																			(char *)c_equ_isin,
																		FML_RQST_TYP,
																			(char *)&c_equ_rqst_typ,
																		FML_SVC_NAME,
																			(char *)c_svc_name,
																		FML_SYMBOL,             /* 1.1 - BP*/
                                      (char *)c_channel,
                                    FML_UGR_USR_ALIAS,    /*   1.1 - BP*/
                                      (char *)c_alias,  
																		FML_USR_ZIP_CD,
																			(char *)c_equ_pipe_id, NULL,
																		FML_ORD_ORDR_RFRNC,
																			(char *)c_equ_ord_ordr_rfrnc, NULL);
	}
	else
	{
		/* This pgm should not enter this loop. */
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
   	fn_errlog( c_ServiceName, "S31080", "Resource Not Available", c_err_msg  );
   	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
   	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

  if ( i_returncode != SUCC_BFR )
 	{
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
   	fn_errlog( c_ServiceName, "S31085", LIBMSG, c_err_msg  );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
	
	/********************************************************/
	/* Placing Order in FNO Market													*/
	/********************************************************/

	/* All Arbitrage Orders are Good Till Today Orders */
	c_fno_ord_typ = GOOD_TILL_TODAY;

	/* Stop Loss Orders are not allowed on this system 	*/
	/* because of this reason we are making it as ZERO	*/
	l_fno_stp_lss_tgr = 0;

	/* The order must be of LIMIT or MARKET type */
	if ( c_fno_lmt_mkt_sl_flg != LIMIT	&& 
			 c_fno_lmt_mkt_sl_flg != MARKET )
	{
		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    fn_errlog( c_ServiceName, "S31090", "Invalid Order Type", c_err_msg  );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	if( c_fno_prdct_typ == FUTURES )
	{
		strcpy(c_svc_name,"SFO_FUT_PLC_ORD");
	}
	else if( c_fno_prdct_typ == OPTIONS )
	{
		strcpy(c_svc_name,"SFO_OPT_PLC_ORD");
	}
	else
	{
		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    fn_errlog( c_ServiceName, "S31095", "Invalid Order Type", c_err_msg  );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	l_usr_flg = 1;
  i_returncode = fn_call_svc_fml ( c_ServiceName,
                                    c_err_msg,
                                    "SFO_ORD_ROUT",
                                    0,
                                    24,  /*1.1*/
                                    2,
                                    FFO_USR_ID, (char *)c_usr_id,
                                    FFO_SSSN_ID, (char *)&l_sssn_id, 
																		FFO_EBA_MTCH_ACT_NO, 
																			(char *)c_mtch_accnt,
																		FFO_XCHNG_CD, (char *)c_fno_xchng_cd,
																		FFO_PRDCT_TYP, (char *)&c_fno_prdct_typ,
																		FFO_UNDRLYNG, (char *)c_fno_undrlyng,
																		FFO_EXPRY_DT, (char *)c_fno_expry_dt,
																		FFO_EXER_TYP, (char *)&c_fno_exer_typ,
																		FFO_OPT_TYP, (char *)&c_fno_opt_typ,
																		FFO_STRK_PRC, (char *)&l_fno_strk_prc,
																		FFO_CTGRY_INDSTK, 
																			(char *)&c_fno_ctgry_indstk,
																		FFO_ORDR_FLW, (char *)&c_fno_ordr_flw,
																		FFO_LMT_MKT_SL_FLG, 
																			(char *)&c_fno_lmt_mkt_sl_flg,
																		FFO_ORD_TYP, (char *)&c_fno_ord_typ,
																		FFO_DSCLSD_QTY, (char *)&l_fno_dsclsd_qty,
																		FFO_ORD_TOT_QTY, (char *)&l_fno_ord_tot_qty,
																		FFO_LMT_RT, (char *)&l_fno_lmt_rt,
																		FFO_STP_LSS_TGR, (char *)&l_fno_stp_lss_tgr,
																		FFO_SPL_FLG, (char *)&c_arbitrage_flg,
																		FFO_USR_FLG, (char *)&l_usr_flg,
																		FFO_SVC_NAME, (char *)c_svc_name,
																		FFO_CHANNEL, (char *)c_channel,  /*1.1*/
																		FFO_BP_ID, (char *)c_bp_id,  /*1.1*/
																		FFO_ALIAS, (char *)c_alias,  /*1.1*/
																		FFO_PIPE_ID, (char *)c_fno_pipe_id, NULL,
																		FFO_ORDR_RFRNC, (char *)c_fno_ordr_rfrnc,
																			NULL);

  if ( i_returncode != SUCC_BFR )
  {
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    fn_errlog( c_ServiceName, "S31100", LIBMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	if(DEBUG_MSG_LVL_3)
	{
	fn_userlog(c_ServiceName,"c_equ_ord_ordr_rfrnc :%s:",c_equ_ord_ordr_rfrnc);
	fn_userlog(c_ServiceName,"c_fno_ordr_rfrnc :%s:",c_fno_ordr_rfrnc);
	}
	i_returncode = fn_pack_vartofml ( c_ServiceName,
																		c_err_msg,
																		&ptr_fml_Obuf,
																		2,
																		FML_ORD_ORDR_RFRNC, 
																			(char *)c_equ_ord_ordr_rfrnc,
																		FFO_ORDR_RFRNC, (char *)c_fno_ordr_rfrnc);

  if ( i_returncode == -1 )
  {
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    fn_errlog( c_ServiceName, "S31105", LIBMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
	
	/********************************************************/
	/* We should Commit the transaction as both Market and 	*/
	/* Equity orders went through	successfully							*/
	/********************************************************/

  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
    fn_errlog( c_ServiceName, "S31110", LIBMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	/********************************************************/
	/* Post the Trigger in Equity and FNO Domains						*/
	/********************************************************/

	fn_userlog(c_ServiceName, "Order placed in both Equity & FNO ");

	/* Posting the Trigger in FNO Domain */
	fn_pst_trg( c_ServiceName, "TRG_LOOK_TAB", "TRG_LOOK_TAB", c_fno_pipe_id );

	/* To post the Trigger in Equity Domain Call the service SFO_PST_TRG */
	strcpy ( c_equ_dmn_nm, "EQUITY" );
	strcpy ( c_equ_trg_nm, "TRG_LOOK_TAB" );
	strcpy ( c_equ_trg_dat, "TRG_LOOK_TAB" );

	i_returncode = fn_call_svc_fml ( c_ServiceName,
																		c_err_msg,
																		"SFO_PST_TRG",
																		0,
																		4,
																		0,
																		FFO_DMN_NM, (char *)c_equ_dmn_nm,
																		FFO_TRG_NM, (char *)c_equ_trg_nm,
																		FFO_ABT_TRG_DATA, (char *)c_equ_trg_dat,
																		FFO_ABT_FILTER, (char *)c_equ_pipe_id);

  if ( i_returncode != SUCC_BFR )
	{
		fn_errlog( c_ServiceName, "S31115", TPMSG, c_err_msg  );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	strcpy(c_err_msg,"\0");
	Fadd32( ptr_fml_Obuf,FML_ERR_MSG, c_err_msg, 0 );

  tpreturn(TPSUCCESS, 0L, (char *)ptr_fml_Obuf, 0, 0);
}
