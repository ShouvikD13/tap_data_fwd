/*  Program           : SFO_DFLT_SETTNG                                       */
/*                                                                            */
/* Input              : FFO_USR_ID                                            */
/*                      FFO_SSSN_ID                                           */
/*                                                                            */
/*  Output            : FFO_UNDRLYNG                                          */
/******************************************************************************/
/*  Initial release:  Naveena R. 19-Sep-2022		              								*/
/*		1.1:  Ravi Malla 25-May-2023	   															*/
/******************************************************************************/
/*  This service is called from F&O Order placement screen to auto fill       */ 
/*  details of last order placed in options                  									*/
/*  1.1: Performance Changes		                 															*/
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fml_def.h>
#include <fo.h>
#include <fo_view_def.h>
#include <fo_fml_def.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_log.h>			
#include <fml_rout.h>	
#include <fn_read_debug_lvl.h>		
#include <fo_get_records.h>			
#include <fn_session.h>
#include <math.h>

void SFO_DFLT_SETTNG( TPSVCINFO *rqst )
{
	FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;

	ptr_fml_Obuf = NULL;

	char  c_ServiceName[33];
  char  c_err_msg[256]; 

	int i_returncode  = 0;  

  char c_fod_prdct_typ = '\0';		
  char c_fod_undrlyng[10] = "\0";
	char c_fod_expry_dt[12] = "\0";
	long l_fod_strk_prc = 0;
	char c_fod_opt_typ = '\0';		
	char c_fod_exer_typ = '\0';		
	long l_fod_ordr_tot_qty = 0;
	long l_fod_lmt_rt = 0;
	long l_fod_stp_lss_tgr = 0;
	char c_fod_ordr_flw = '\0';		
	char c_fod_lmt_mrkt_sl_flg = '\0';		
	char c_fod_ordr_type = '\0';	
  long l_ftq_min_lot_qty = 0;

	struct vw_usr_prfl st_usr_prfl;
  struct vw_err_msg st_err_msg;

  MEMSET(st_usr_prfl);
  MEMSET(st_err_msg);

	char c_user_id[9] = "\0";
	long l_sssn_id = 0;
	char c_xchng_cd[4] ="\0";
	int i =0;

	int i_cntrct[11];
  int i_cntrcterr[11];

	ptr_fml_Ibuf = (FBFR32 *)rqst->data;
  strcpy( c_ServiceName, rqst->name );

	INITDBGLVL(c_ServiceName);	

	MEMSET(c_err_msg);      
	MEMSET(i_cntrct);      
	MEMSET(i_cntrcterr);      

	i_cntrct    [ 0 ]   = Fget32( ptr_fml_Ibuf ,FFO_USR_ID,0,(char *) c_user_id,0);
  i_cntrcterr [ 0 ]   = Ferror32;
	i_cntrct    [ 1 ]   = Fget32( ptr_fml_Ibuf ,FFO_SSSN_ID,0,(char *) &l_sssn_id,0);
  i_cntrcterr [ 1 ]   = Ferror32;
  i_cntrct    [ 2 ]   = Fget32( ptr_fml_Ibuf ,FFO_XCHNG_CD,0,(char *) &c_xchng_cd,0);
  i_cntrcterr [ 2 ]   = Ferror32;

	for ( i=0 ; i < 3 ;  i++ )
	{
		if ( (i_cntrct[ i ] == -1 ) && (i_cntrcterr[ i ]  != FNOTPRES ) )
		{
			fn_userlog( c_ServiceName, "Error in :%d:",i );
			fn_errlog( c_ServiceName, "S31005", Fstrerror32( i_cntrcterr[i]),c_err_msg );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		 }
	}

  i_returncode = Fvftos32( ptr_fml_Ibuf,
                           (char *) &st_usr_prfl,
                           "vw_usr_prfl" );

  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31010", FMLMSG, c_err_msg);
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  i_returncode = fn_chk_sssn( c_ServiceName, &st_usr_prfl,
                                             &st_err_msg ) ;
  if ( i_returncode == -1 )
  {
    fn_errlog(c_ServiceName,"S31015",LIBMSG, c_err_msg);
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	EXEC SQL
		SELECT  A.FOD_PRDCT_TYP,A.FOD_UNDRLYNG,A.FOD_EXPRY_DT,A.FOD_STRK_PRC,A.FOD_OPT_TYP,A.FOD_EXER_TYP ,A.FOD_ORDR_TOT_QTY,
						A.FOD_LMT_RT,A.FOD_STP_LSS_TGR, A.FOD_ORDR_FLW,A.FOD_LMT_MRKT_SL_FLG,A.FOD_ORDR_TYPE ,A.FTQ_MIN_LOT_QTY
		INTO :c_fod_prdct_typ,
				 :c_fod_undrlyng,
				 :c_fod_expry_dt,
				 :l_fod_strk_prc,
				 :c_fod_opt_typ,
				 :c_fod_exer_typ ,
				 :l_fod_ordr_tot_qty,
				 :l_fod_lmt_rt,
				 :l_fod_stp_lss_tgr,
				 :c_fod_ordr_flw,
				 :c_fod_lmt_mrkt_sl_flg,
				 :c_fod_ordr_type,
				 :l_ftq_min_lot_qty 
		FROM 
		(
		SELECT TO_CHAR(FXB_RQST_TM,'YYYY-MM-DD HH24:MI:SS'),FOD_PRDCT_TYP,FOD_UNDRLYNG,FOD_EXPRY_DT,FOD_STRK_PRC,FOD_OPT_TYP,FOD_EXER_TYP ,
					 FOD_ORDR_TOT_QTY,FOD_LMT_RT,FOD_STP_LSS_TGR,FOD_ORDR_FLW,FOD_LMT_MRKT_SL_FLG,FOD_ORDR_TYPE,FTQ_MIN_LOT_QTY  
		FROM FOD_FO_ORDR_DTLS,FXB_FO_XCHNG_BOOK ,FTQ_FO_TRD_QT 
		WHERE FOD_CLM_MTCH_ACCNT = :st_usr_prfl.c_cln_mtch_accnt
		AND   FOD_ORDR_RFRNC = FXB_ORDR_RFRNC 
		AND   FXB_MDFCTN_CNTR = FOD_MDFCTN_CNTR 
		AND   FOD_UNDRLYNG in ('NIFTY','CNXBAN')
		AND   FOD_PRDCT_TYP = 'O'
		AND   FOD_ORDR_STTS in ('D','B','E','P')
		AND 	NVL(FOD_SPL_FLAG,'N') in ('N')
		AND 	FTQ_XCHNG_CD='NFO'		/** Added in 1.1 **/
    AND   FOD_PRDCT_TYP = FTQ_PRDCT_TYP
    AND   FOD_UNDRLYNG = FTQ_UNDRLYNG
    AND	  FOD_EXPRY_DT = FTQ_EXPRY_DT
    AND   FOD_STRK_PRC = FTQ_STRK_PRC
    AND   FOD_OPT_TYP = FTQ_OPT_TYP
		ORDER BY TO_CHAR(FXB_RQST_TM,'YYYY-MM-DD HH24:MI:SS') DESC 
		) A
		WHERE ROWNUM =1;

	if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
	{
		 fn_errlog ( c_ServiceName, "S31020", SQLMSG, c_err_msg );
		 tpfree((char *)ptr_fml_Obuf);
		 tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	i_returncode = fn_pack_vartofml(c_ServiceName,
																	c_err_msg,
																	&ptr_fml_Obuf,
																	13,
																	FFO_PRDCT_TYP, (char *) &c_fod_prdct_typ,
																	FFO_UNDRLYNG, (char *) c_fod_undrlyng,
																	FFO_EXPRY_DT, (char *) c_fod_expry_dt,
																	FFO_STRK_PRC, (long*) &l_fod_strk_prc,
																	FFO_OPT_TYP, (char *) &c_fod_opt_typ,
																	FFO_EXER_TYP, (char *) &c_fod_exer_typ,
																	FFO_ORDR_FLW, (char *) &c_fod_ordr_flw,
																	FFO_ORD_TOT_QTY, (long *) &l_fod_ordr_tot_qty,
																	FFO_LMT_MKT_SL_FLG, (char *) &c_fod_lmt_mrkt_sl_flg,
																	FFO_LMT_RT, (long *) &l_fod_lmt_rt,
																	FFO_STP_LSS_TGR, (long *) &l_fod_stp_lss_tgr,
																	FFO_ORD_TYP, (char *) &c_fod_ordr_type,
																	FFO_MIN_LOT_QTY, (long *) &l_ftq_min_lot_qty
																);
	if( i_returncode == -1 )
	{
		fn_errlog( c_ServiceName, "S31025", LIBMSG, c_err_msg );
		tpfree ( ( char * ) ptr_fml_Obuf );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		tpreturn(TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
	}
	
  tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_Obuf, 0, 0 );
}

