/*  Program           : SFO_COLL_ALLOC                                        */
/*                                                                            */
/*  Log               : 1.0   03-Jan-2023   Samip M														*/
/*  Log               : 1.1   27-Apr-2023   Samip M														*/
/******************************************************************************/
/* 1.0    -   New Release                                                     */
/* 1.1    -   Thread added																										*/
/******************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <ctype.h>
#include <fo.h>
#include <fo_fml_def.h>
#include <fml_rout.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_log.h>
#include <fn_read_debug_lvl.h>  
#include <fn_val_ord.h>
#define MAX(a,b) ((a) > (b) ? (a) : (b))

void SFO_COLL_ALLOC( TPSVCINFO *rqst )
{
  FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;

  char c_ServiceName[33];
  char c_errmsg[256];
	int  i_returncode;
  int  i_err[7];

  int  i_ferr[7];
  int  i_cnt;
	int j = 0;
	int i_trnsctn = 0;
	int i_cp_code = 0;
	long l_run_no = 0;
	varchar c_seg[3];
	double d_mrgn_amt = 0.0;
	double d_replg_amt = 0.0;
	double d_fab_plg_amt = 0.0;
	double d_fab_nwb_amt = 0.0;
	double d_fo_isec = 0.0;
	double d_fo_alloc = 0.0;
	double d_fo_bft = 0.0;
	double d_fo_prop = 0.0;
	double d_nwb_prop = 0.0;	
	double d_clm_wallet_amt = 0.0;
	double d_spot_trd_val = 0.0;
	double d_tot_asset = 0.0;
	double d_prev_sam_replg = 0.0;
	double d_total_alloc = 0.0;
	double d_cad_prev_isec_mrgn = 0.0;
	double d_cad_prev_cash_unstld = 0.0;
	double d_cad_prev_sam_alloc = 0.0;
	double d_cad_prev_cash_alloc = 0.0;
	double d_cad_prev_epi_unstld = 0.0;
	double d_cad_prev_total_alloc = 0.0;
	double d_cad_prev_replg_val = 0.0;
	char c_tag[35];
	char c_cad_exists = 'Y';
	char c_cad_alloc_action = '\0';
	char c_cad_api_sent = '\0';
	char c_xchng_cd[4] = {'\0'};
	char c_cmtm_cd[6] = {'\0'};

	int i_thread = 0;
	long long ll_thread = 0;
	
	char c_run_mode = 'I';

	EXEC SQL BEGIN DECLARE SECTION;
  	varchar v_sql_string[15000];
		varchar v_ucc_code[20];
		varchar v_mtch_id[11];
	EXEC SQL END DECLARE SECTION;

	INITDBGLVL(c_ServiceName);

  ptr_fml_Ibuf = (FBFR32 *)rqst->data;
  ptr_fml_Obuf = (FBFR32 *)NULL;
  strcpy( c_ServiceName, rqst->name );

	MEMSET(v_ucc_code);
	MEMSET(c_seg);
	MEMSET(v_mtch_id);
	d_mrgn_amt = 0.0;

  i_err[0] = Fget32(ptr_fml_Ibuf,FFO_EBA_MTCH_ACT_NO,0,(char *)v_mtch_id.arr,0);
	i_err[1] = Fget32(ptr_fml_Ibuf,FFO_CLNT_DPID,0,(char *)v_ucc_code.arr,0);
  /* i_err[2] = Fget32(ptr_fml_Ibuf,FFO_ADD_MRGN_AMT,0,(char *)&d_mrgn_amt,0);
  i_err[3] = Fget32(ptr_fml_Ibuf,FFO_XCHNG_CD,0,(char *)c_seg.arr,0);  */

  for(j=0;j < 2;j++) 
  {
		if(i_err[j] == -1)
		{
			fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg  );
			fn_userlog(c_ServiceName, "The Fget32 error at [%d]",j);
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
	}

  strcpy(c_seg.arr,"FO");	
	strcpy(c_xchng_cd,"NFO");
	strcpy(c_cmtm_cd,"07730");

	SETLEN(v_ucc_code);
	SETNULL(v_ucc_code);
	SETLEN(c_seg);
	SETNULL(c_seg);

	SETLEN(v_mtch_id);
	SETNULL(v_mtch_id);


	for(i_cnt = 0;i_cnt < strlen(v_ucc_code.arr);i_cnt++)
	{
		if (!isdigit (v_ucc_code.arr[i_cnt]))
		{
			i_cp_code = 1;
		}
	}

	/** Added for Ver 1.1 **/
	if(i_cp_code == 1)
	{
		i_thread = 0;
	}
	else
	{
		sscanf(v_ucc_code.arr,"%lld",&ll_thread);
		i_thread = (ll_thread % 4) + 1;
	}

	fn_userlog(c_ServiceName,"Service called for match id :%s:", v_mtch_id.arr);
	fn_userlog(c_ServiceName,"Value of c_seg :%s:",c_seg.arr);
	fn_userlog(c_ServiceName,"Value of v_ucc_code :%s:",v_ucc_code.arr);
	fn_userlog(c_ServiceName,"Value of i_cp_code :%d:",i_cp_code);
	fn_userlog(c_ServiceName,"Value of i_thread :%d:",i_thread);

	i_trnsctn = tpbegin(0,0);

	if ( i_trnsctn == -1 )
	{
		fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
		fn_errlog ( c_ServiceName, "S31010", TPMSG, c_err_msg  );
		Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	EXEC SQL
		SELECT COLL_REPORT_RUN_NO.NEXTVAL
		INTO :l_run_no
		FROM DUAL;

	if(SQLCODE != 0)
	{
		fn_errlog(c_ServiceName , "S31015", SQLMSG,c_err_msg);
		fn_bat_pst_msg_fno(c_ServiceName,c_err_msg,c_tag);
		tpabort(0);
		Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}
	
	fn_userlog(c_ServiceName,"Value of l_run_no :%ld:",l_run_no);
	fn_userlog(c_ServiceName,"Preparing Data for Report Generation");

	/*** Commented for Optimization **

	EXEC SQL
		INSERT INTO CAD_CUST_ALLOC_DATA
			(CAD_RUN_NO,
			CAD_DATE,
			CAD_ALLC_SEG,
			CAD_MTCH_ACCNT,
			CAD_PREV_ISEC_MRGN,
			CAD_PREV_CASH_UNSTLD,
			CAD_preV_SAM_ALLOC,
			CAD_PREV_CASH_ALLOC,
			CAD_PREV_EPI_UNSTLD,
			CAD_PREV_TOTAL_ALLOC,
			CAD_ISEC_MRGN,
			CAD_CASH_UNSTLD,
			CAD_SAM_ALLOC,
			CAD_CASH_ALLOC,
			CAD_EPI_UNSTLD,
			CAD_TOTAL_ALLOC,
			CAD_API_SENT,
			CAD_API_RSPNS,
			CAD_UCC_CODE,
			CAD_EXG_NET_VALUE,
			CAD_ASSET_VAL,
			CAD_REPLG_VAL,
			CAD_TYPE1_VAL)
		(SELECT
			:l_run_no,
			TRUNC(SYSDATE),
			CAD_ALLC_SEG,
			CAD_MTCH_ACCNT,
			CAD_ISEC_MRGN,
			CAD_CASH_UNSTLD,
			CAD_SAM_ALLOC,
			CAD_CASH_ALLOC,
			CAD_EPI_UNSTLD,
			CAD_TOTAL_ALLOC,
			0,
			0,
			0,
			0,
			0,
			0,
			'N',
			'N',
			CAD_UCC_CODE,
			0,
			0,
			NVL(CAD_REPLG_VAL,0),
			0
		FROM CAD_CUST_ALLOC_DATA A,
				(SELECT MAX(B.CAD_RUN_NO) RUN_NO
					FROM CAD_CUST_ALLOC_DATA B
					WHERE ** B.CAD_RUN_NO <> :l_run_no
					AND ** B.CAD_ALLC_SEG = :c_seg
					AND B.CAD_UCC_CODE = :v_ucc_code
					** AND B.CAD_DATE = TRUNC(SYSDATE) **
					) INNER
		WHERE
		A.CAD_UCC_CODE = :v_ucc_code
		** AND A.CAD_DATE = TRUNC(SYSDATE) **
		AND A.CAD_ALLC_SEG = :c_seg
		AND A.CAD_RUN_NO = INNER.RUN_NO);

		**** End for Optimization **/

		EXEC SQL
		SELECT
			NVL(CAD_ISEC_MRGN,0),
			NVL(CAD_CASH_UNSTLD,0),
			NVL(CAD_SAM_ALLOC,0),
			NVL(CAD_CASH_ALLOC,0),
			NVL(CAD_EPI_UNSTLD,0),
			NVL(CAD_TOTAL_ALLOC,0),
			NVL(CAD_REPLG_VAL,0)
		INTO	
			:d_cad_prev_isec_mrgn,
			:d_cad_prev_cash_unstld,
			:d_cad_prev_sam_alloc,
			:d_cad_prev_cash_alloc,
			:d_cad_prev_epi_unstld,
			:d_cad_prev_total_alloc,
			:d_cad_prev_replg_val
		FROM CAD_CUST_ALLOC_DATA A,
				(SELECT MAX(B.CAD_RUN_NO) RUN_NO
					FROM CAD_CUST_ALLOC_DATA B
					WHERE 
					B.CAD_ALLC_SEG = :c_seg
					AND B.CAD_UCC_CODE = :v_ucc_code
					) INNER
		WHERE
		A.CAD_UCC_CODE = :v_ucc_code
		AND A.CAD_ALLC_SEG = :c_seg
		AND A.CAD_RUN_NO = INNER.RUN_NO;

		if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
		{
			fn_errlog(c_ServiceName , "S31020", SQLMSG,c_err_msg);
			fn_bat_pst_msg_fno(c_ServiceName,c_err_msg,c_tag);
			tpabort(0);
			Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

		if(SQLCODE == NO_DATA_FOUND)
		{
			fn_userlog(c_ServiceName,"No Previous data to load");

			d_cad_prev_isec_mrgn = 0.0;
			d_cad_prev_cash_unstld = 0.0;
			d_cad_prev_sam_alloc = 0.0;
			d_cad_prev_cash_alloc = 0.0;
			d_cad_prev_epi_unstld = 0.0;
			d_cad_prev_total_alloc = 0.0;
			d_cad_prev_replg_val = 0.0;
			
		}

			/*  fn_userlog(c_ServiceName,"Records insert :%d:",sqlca.sqlerrd[2]); **/
			fn_userlog(c_ServiceName,"value of d_cad_prev_replg_val :%lf:",d_cad_prev_replg_val);

		/*** Commented for Optimization ***
		if((strcmp(c_seg.arr,"FO") == 0) || (strcmp(c_seg.arr,"A") == 0))
		{
		****/
				fn_userlog(c_ServiceName,"Start of FO Segment");

			EXEC SQL
			SELECT SUM(AMT)
			INTO :d_mrgn_amt
			FROM
			(
			  SELECT NVL(SUM(FUS_INITIAL_MRGN+FUS_BLCKD_PL),0)/100 AMT  /** Position Margin */
				FROM FUS_FO_UNDRLYNG_SPN_PSTN
			   WHERE FUS_UCC_CD = :v_ucc_code
				 AND FUS_XCHNG_CD =:c_xchng_cd
			  UNION ALL
			  SELECT  NVL(SUM( FCP_OPT_PREMIUM + NVL(FCP_UDLVRY_MRGN,0) + NVL(FCP_DLVRY_OBLGAMT_BLCKD,0)),0)/100 AMT  /** Premium + Delivery Margin **/
				FROM  FCP_FO_SPN_CNTRCT_PSTN
			   WHERE  FCP_UCC_CD = :v_ucc_code
				 AND  FCP_XCHNG_CD     = :c_xchng_cd
				 AND  FCP_PRDCT_TYP = 'O'
				 AND  (FCP_OPT_PREMIUM + NVL(FCP_UDLVRY_MRGN,0))  !=0
		   UNION ALL
			  SELECT NVL(SUM(FOD_AMT_BLCKD + FOD_LSS_AMT_BLCKD),0)/100 AMT /* Intraday SLTP Products */
				FROM FOD_FO_ORDR_DTLS
			   WHERE FOD_UCC_CD = :v_ucc_code
				 AND FOD_XCHNG_CD = :c_xchng_cd
				 AND FOD_TRD_DT = TRUNC(SYSDATE)
				 AND FOD_PRDCT_TYP IN ('U','I')
			  UNION ALL
			  SELECT NVL(sum(FOD_SROLL_DIFF_AMT+FOD_SROLL_LSS_AMT),0)/100 /* Spread Rollover Orders ***/
				FROM FOD_FO_ORDR_DTLS
			   WHERE FOD_UCC_CD = :v_ucc_code
				 AND FOD_XCHNG_CD=:c_xchng_cd
				 AND FOD_TRD_DT=TRUNC(SYSDATE)
				 AND FOD_SPL_FLAG='O'
			  UNION ALL
			  SELECT NVL(SUM( FUP_UTRD_MRGN + FUP_ADD_MRGN_VAL + FUP_UORDR_MRGN + FUP_USPREAD_MRGN ),0)/100 AMT  /** Future Plus Margin**/
				FROM FUP_FUT_UNDRLYNG_PSTN
			   WHERE FUP_UCC_CD = :v_ucc_code
				 AND FUP_XCHNG_CD = :c_xchng_cd
				 AND FUP_PRDCT_TYP = 'P'
			  UNION ALL
			  SELECT  NVL(-1 * SUM(FLL.FLL_DC_AMT)/100,0) AMT  /*** Obligation Amount(loss) **/
				FROM FLL_FO_LMTUPD_LOG FLL,
					 FNM_FO_NARRATION_MSTR FNM
			   WHERE FLL.FLL_TRD_DT = TRUNC(SYSDATE)
				 AND FLL.FLL_UCC_CD = :v_ucc_code
				 AND FLL.FLL_XCHNG_CD = :c_xchng_cd
				 AND FLL.FLL_NARRATION_ID = FNM.FNM_NARRATION_ID
				 AND FNM.FNM_LMT_PRJ_FLG IN ( 'P','A','B','M')
				 having SUM(FLL.FLL_DC_AMT)/100 < 0
			);
				
			if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
			{
				fn_errlog(c_ServiceName , "S31025", SQLMSG,c_err_msg);
				fn_bat_pst_msg_fno(c_ServiceName,c_err_msg,c_tag);
				tpabort(0);
				Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}
			else if(SQLCODE == NO_DATA_FOUND)
			{
				d_mrgn_amt = 0.0;
			}

			EXEC SQL
				SELECT 	NVL(SUM(nvl(FAB_ISEC_MRGN_AMT,0)/100 + NVL(FAB_ISEC_MRGN_AMT_BSE,0)/100),0),
								NVL(SUM(NVL(FAB_ALCTD_AMT,0)/100),0),
								NVL(SUM(NVL(FAB_BFT_AMT,0)/100),0),
								NVL(SUM(NVL(fab_plg_amt,0)/100),0),
								NVL(SUM(NVL(fab_nwb_amt,0)/100),0),
								NVL(SUM(NVL(FAB_PREV_DAY_PLG_AMT,0)/100),0),
								NVL(SUM(NVL(FAB_PREV_DAY_NWB_AMT,0)/100),0)
				INTO		:d_fo_isec,
								:d_fo_alloc,
								:d_fo_bft,
								:d_fab_plg_amt,
								:d_fab_nwb_amt,
								:d_fo_prop,
								:d_nwb_prop
				FROM		FAB_FO_ALC_BFT_SMRY
				WHERE		FAB_UCC_CD = :v_ucc_code;

			if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
			{
				fn_errlog(c_ServiceName , "S31030", SQLMSG,c_err_msg);
				fn_bat_pst_msg_fno(c_ServiceName,c_err_msg,c_tag);
				tpabort(0);
				Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}
			else if(SQLCODE == NO_DATA_FOUND)
			{
				d_fo_isec = 0.0;
				d_fo_alloc = 0.0;
				d_fo_bft = 0.0;
				d_fab_plg_amt = 0.0;
				d_fab_nwb_amt = 0.0;
				d_fo_prop = 0.0;
				d_nwb_prop = 0.0;
			}
			
			EXEC SQL
				INSERT INTO CCA_CLIENT_COLL_ASSET
							(CCA_RUN_NO,
							CCA_DATE,
							CCA_UCC_CODE,
							CCA_FAB_PLG_AMT,
							CCA_FAB_NWB_AMT,
							CCA_FO_PROP,
							CCA_NWB_PROP,
							CCA_FO_ISEC,
							CCA_FO_ALLOC,
							CCA_FO_BFT
							)
				VALUES(:l_run_no,
							TRUNC(SYSDATE),
							:v_ucc_code,
							:d_fab_plg_amt,
							:d_fab_nwb_amt,
							:d_fo_prop,
							:d_nwb_prop,
							:d_fo_isec,
							:d_fo_alloc,
							:d_fo_bft);
							
			if(SQLCODE != 0)
			{
				fn_errlog(c_ServiceName , "S31035", SQLMSG,c_err_msg);
				fn_bat_pst_msg_fno(c_ServiceName,c_err_msg,c_tag);
				tpabort(0);
				Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}

			d_prev_sam_replg = MAX(d_fo_prop + d_nwb_prop - d_cad_prev_replg_val,0);
			d_tot_asset = d_prev_sam_replg + d_fo_isec + d_fo_alloc + d_fo_bft ;

			if(d_mrgn_amt - d_cad_prev_replg_val <= 0)
			{
				d_total_alloc = 0.0;
			}
			else
			{
				d_total_alloc = d_mrgn_amt - d_cad_prev_replg_val;
			}

			if(d_total_alloc - d_cad_prev_total_alloc > 0)
			{
				c_cad_alloc_action = 'U';
				c_cad_api_sent = 'Y';
			}
			else if(d_total_alloc - d_cad_prev_total_alloc < 0)
			{
				c_cad_alloc_action = 'D';
				c_cad_api_sent = 'Y';
			}
			else
			{
				c_cad_alloc_action = 'N';
				c_cad_api_sent = 'N';
			}

			/**** Commented for Optimization ***

			EXEC SQL
				UPDATE CAD_CUST_ALLOC_DATA
				SET 
					CAD_ISEC_MRGN = :d_mrgn_amt,
					CAD_CASH_UNSTLD = :d_spot_trd_val, 
					CAD_ASSET_VAL = :d_tot_asset,
					* CAD_REPLG_VAL = :d_replg_amt, *
					CAD_TOTAL_ALLOC = ROUND(:d_total_alloc,2),
					CAD_DATA_GEN_TIME = SYSDATE
				WHERE 
					CAD_ALLC_SEG = :c_seg AND
					CAD_UCC_CODE = :v_ucc_code AND
					CAD_RUN_NO = :l_run_no;

			if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
			{
				fn_errlog(c_ServiceName , "S31040", SQLMSG,c_err_msg);
				fn_bat_pst_msg_fno(c_ServiceName,c_err_msg,c_tag);
				tpabort(0);
				Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}
			else if (SQLCODE == NO_DATA_FOUND)
			{
				EXEC SQL
					INSERT INTO CAD_CUST_ALLOC_DATA
											(CAD_RUN_NO,CAD_DATE,CAD_UCC_CODE,CAD_ALLC_SEG,
											CAD_PREV_ISEC_MRGN,CAD_PREV_CASH_UNSTLD,CAD_PREV_CASH_ALLOC,
											CAD_PREV_TOTAL_ALLOC,CAD_EXG_NET_VALUE,CAD_CASH_ALLOC, 
											CAD_ISEC_MRGN,CAD_CASH_UNSTLD,
											CAD_ASSET_VAL, 
											CAD_TYPE1_VAL,
											CAD_TOTAL_ALLOC,
											CAD_DATA_GEN_TIME
											)
									VALUES(:l_run_no,TRUNC(SYSDATE),:v_ucc_code,:c_seg,
													0,0,0,
													0,0,0,
													:d_mrgn_amt,:d_spot_trd_val,
													:d_tot_asset,
													0,
													ROUND(:d_total_alloc,2),
													SYSDATE);

				if(SQLCODE != 0)
				{
					fn_errlog(c_ServiceName , "S31045", SQLMSG,c_err_msg);
					fn_bat_pst_msg_fno(c_ServiceName,c_err_msg,c_tag);
					tpabort(0);
					Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
					tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
				}
			}

			}


			fn_userlog(c_ServiceName,"Update of Alloc Action");

			EXEC SQL
				UPDATE CAD_CUST_ALLOC_DATA
				SET CAD_ALLOC_ACTION = DECODE(CAD_ALLC_SEG,'CO',
																			DECODE(SIGN(NVL(CAD_TOTAL_ALLOC,0)-NVL(CAD_PREV_TOTAL_ALLOC,0)),1,'A',-1,'D','N'),
																			DECODE(SIGN(NVL(CAD_TOTAL_ALLOC,0)-NVL(CAD_PREV_TOTAL_ALLOC,0)),1,'U',-1,'D','N'))
				WHERE CAD_RUN_NO = :l_run_no
				AND CAD_DATE = TRUNC(SYSDATE)
				AND CAD_UCC_CODE = :v_ucc_code
				AND CAD_ALLC_SEG = :c_seg;

			if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
			{
				fn_errlog(c_ServiceName , "S31050", SQLMSG,c_err_msg);
				fn_bat_pst_msg_fno(c_ServiceName,c_err_msg,c_tag);
				tpabort(0);
				Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}

			fn_userlog(c_ServiceName,"Records updated in CAD_CUST_ALLOC_DATA :%d:",sqlca.sqlerrd[2]);
			***** Optimization ***/

				EXEC SQL
				INSERT INTO CAD_CUST_ALLOC_DATA
      		(CAD_RUN_NO,
      		CAD_DATE,
      		CAD_ALLC_SEG,
      		CAD_MTCH_ACCNT,
      		CAD_PREV_ISEC_MRGN,
      		CAD_PREV_CASH_UNSTLD,
      		CAD_preV_SAM_ALLOC,
      		CAD_PREV_CASH_ALLOC,
      		CAD_PREV_EPI_UNSTLD,
      		CAD_PREV_TOTAL_ALLOC,
      		CAD_ISEC_MRGN,
      		CAD_CASH_UNSTLD,
      		CAD_SAM_ALLOC,
      		CAD_CASH_ALLOC,
      		CAD_EPI_UNSTLD,
      		CAD_TOTAL_ALLOC,
					CAD_ALLOC_ACTION,
      		CAD_API_SENT,
      		CAD_API_RSPNS,
      		CAD_UCC_CODE,
      		CAD_EXG_NET_VALUE,
      		CAD_ASSET_VAL,
      		CAD_REPLG_VAL,
      		CAD_TYPE1_VAL,
					CAD_DATA_GEN_TIME)
				VALUES(:l_run_no,
					TRUNC(SYSDATE),
					:c_seg,
					:v_mtch_id,
					:d_cad_prev_isec_mrgn,
					:d_cad_prev_cash_unstld,
					:d_cad_prev_sam_alloc,
					:d_cad_prev_cash_alloc,
					:d_cad_prev_epi_unstld,
					:d_cad_prev_total_alloc,
					:d_mrgn_amt,
					:d_spot_trd_val,
					0,
					0,
					0,
					ROUND(:d_total_alloc,2),
					:c_cad_alloc_action,
					:c_cad_api_sent,
					'N',
					:v_ucc_code,
					0,
					:d_tot_asset,
					:d_cad_prev_replg_val,
					0,
					SYSDATE);

				if(c_cad_alloc_action == 'U' || c_cad_alloc_action == 'D')
				{
				fn_userlog(c_ServiceName,"Preparing API Request");

				EXEC SQL
				INSERT INTO CAR_CUST_ALLOC_REQUEST 
					(CAR_RUN_NO, 
					CAR_DATE, 
					CAR_ALLC_SEG, 
					CAR_CM_CODE, 
					CAR_TM_CODE, 
					CAR_CP_CODE,
					CAR_CLI_CODE,
					CAR_ACC_TYPE,
					CAR_ALLOC_AMT,
					CAR_ALLOC_ACTION,
					CAR_REQ_MODE,
					CAR_API_SENT,
					CAR_DATA_GEN_TIME,
					CAR_THREAD)
				VALUES(
					:l_run_no,
					TRUNC(SYSDATE),
					:c_seg,
					:c_cmtm_cd,
					DECODE(:i_cp_code,1,NULL,:c_cmtm_cd),
					DECODE(:i_cp_code,1,:v_ucc_code,NULL),
					DECODE(:i_cp_code,1,NULL,:v_ucc_code),
					'C',
					ROUND(:d_total_alloc,2),
					:c_cad_alloc_action,
					'I',
					'N',
					SYSDATE,
					:i_thread);

					if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
					{
						fn_errlog(c_ServiceName , "S31055", SQLMSG,c_err_msg);
						fn_bat_pst_msg_fno(c_ServiceName,c_err_msg,c_tag);
						tpabort(0);
						Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
						tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
					}

				}
				else
				{
					fn_userlog(c_ServiceName,"No data to send");
				}


			/*** Commented for Optimization ***

			MEMSET(v_sql_string);

				sprintf(v_sql_string.arr,"INSERT INTO CAR_CUST_ALLOC_REQUEST \
					(CAR_RUN_NO, \
					CAR_DATE, \
					CAR_ALLC_SEG, \
					CAR_CM_CODE, \
					CAR_TM_CODE, \
					CAR_CP_CODE, \
					CAR_CLI_CODE, \
					CAR_ACC_TYPE, \
					CAR_ALLOC_AMT, \
					CAR_ALLOC_ACTION, \
					CAR_REQ_MODE, \
					CAR_API_SENT, \
					CAR_DATA_GEN_TIME) \
				SELECT \
					CAD_RUN_NO, \
					CAD_DATE, \
					CAD_ALLC_SEG, \
					'07730' CM_CODE, \
					DECODE(CAD_ALLC_SEG,'FO',case  \
																	when regexp_like(CAD_UCC_CODE,'[A-Za-z]') then NULL \
																	else '07730' \
																	end,'07730') TM_CODE, \
					DECODE(CAD_ALLC_SEG,'FO',case  \
																	when regexp_like(CAD_UCC_CODE,'[A-Za-z]') then CAD_UCC_CODE  \
																	else NULL  \
																	end,NULL) CP_CODE, \
					DECODE(CAD_ALLC_SEG,'FO',case  \
																	when regexp_like(CAD_UCC_CODE,'[A-Za-z]') then NULL \
																	else CAD_UCC_CODE \
																	end,CAD_UCC_CODE) UCC_CODE, \
					'C' ACC_TYPE, \
					NVL(CAD_TOTAL_ALLOC,0), \
					DECODE(SIGN(NVL(CAD_PREV_TOTAL_ALLOC,0) - NVL(CAD_TOTAL_ALLOC,0)),1,'D',-1,'U'), \
				 'I' CAD_REQ_MODE, \
					'N',  \
					CAD_DATA_GEN_TIME \
				FROM CAD_CUST_ALLOC_DATA \
				WHERE CAD_ALLC_SEG = '%s' \
				AND CAD_RUN_NO = %ld \
				AND CAD_DATE = TRUNC(SYSDATE) \
				AND CAD_UCC_CODE = '%s' \
				AND NVL(CAD_PREV_TOTAL_ALLOC,0) - NVL(CAD_TOTAL_ALLOC,0) <> 0",c_seg.arr,l_run_no,v_ucc_code.arr); 

			if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
			{
				fn_errlog(c_ServiceName , "S31060", SQLMSG,c_err_msg);
				fn_bat_pst_msg_fno(c_ServiceName,c_err_msg,c_tag);
				tpabort(0);
				Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}

			SETLEN( v_sql_string );

			EXEC SQL PREPARE sql_stmt FROM :v_sql_string;

			if(SQLCODE != 0)
			{
				fn_errlog(c_ServiceName , "S31065", SQLMSG,c_err_msg);
				fn_bat_pst_msg_fno(c_ServiceName,c_err_msg,c_tag);
				tpabort(0);
				Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}

			EXEC SQL EXECUTE sql_stmt;

			if(SQLCODE != 0)
			{
				fn_errlog(c_ServiceName , "S31070", SQLMSG,c_err_msg);
				fn_bat_pst_msg_fno(c_ServiceName,c_err_msg,c_tag);
				tpabort(0);
				Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}


			fn_userlog(c_ServiceName,"Records inserted into CAR :%d",sqlca.sqlerrd[2]);

		EXEC SQL
			UPDATE CAD_CUST_ALLOC_DATA
			SET CAD_API_SENT='Y'
			WHERE CAD_RUN_NO=:l_run_no
			AND CAD_ALLC_SEG = :c_seg
			AND NVL(CAD_PREV_TOTAL_ALLOC,0) - NVL(CAD_TOTAL_ALLOC,0) <> 0
			AND CAD_DATE = TRUNC(SYSDATE)
			AND CAD_UCC_CODE = :v_ucc_code;

		if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
		{
			fn_errlog(c_ServiceName , "S31075", SQLMSG,c_err_msg);
			fn_bat_pst_msg_fno(c_ServiceName,c_err_msg,c_tag);
			tpabort(0);
			Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
			**** Optimization ***/

		if( tpcommit(0) == -1 )
		{
			fn_userlog (c_ServiceName,"Failed in commit transaction");
			fn_errlog ( c_ServiceName, "S31080", SQLMSG, c_err_msg);
			Fadd32(ptr_fml_Ibuf,FFO_ERR_MSG,c_err_msg,0);
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

		tpreturn( TPSUCCESS, 0, (char *)ptr_fml_Obuf, 0, 0 );
}
