/*************************************************************************************
*
Service       : sfo_gt_ctrlst.pc

Purpose       :To retrieve the list of Contract notes from EBA, and  send it to the ASP 							 for a particular match account, for a given period 

Input Param   : FFO_USR_ID  - User Id
								FFO_SSSN_ID - Session id
								FFO_ND_STRT_DT - Period to 
								FFO_ND_END_DT - Period to 
								FFO_EBA_MTCH_ACT_NO -  Match accnt


Output        :  FFO_NARRATION_ID - Contract no / E/A conf note
								 FFO_RCRD_DT - Contract date / E/A date 
								 FFO_PRDCT_TYP - Flag 'E' - E/A and F' - for FNO
								 FFO_DPID - Sign

Tables        : FNO_CNTRCT_MSTR       S
								EA_CONF_MSTR          S

Author        : ICICI Infotech

Date          :

Version       :		1.1 IBM Changes				05-May-2008		Smitha Nuti
***************************************************************************************/

/*   Standard include files    */

# include <atmi.h>
# include <stdlib.h>
# include <fml32.h>
# include <string.h>
# include <sqlca.h>
# define REC_LENGTH 2250

/* User defined header files */

# include <fn_log.h>
#include <fo.h>
#include <fo_view_def.h>
#include <fn_session.h>
#include <fn_tuxlib.h>
# include <fo_fml_def.h>
#include <string.h>						 /* Ver 1.1 */
#include <fn_read_debug_lvl.h> /* Ver 1.1 */
#include <stdio.h> /* Ver 1.1 */

char        c_ServiceName[33] ;

#define FNO_OUTPUT_FML 4
#define EA_OUTPUT_FML 4

void SFO_GT_CTRLST(TPSVCINFO* rqst)
{
	int   i,j,fno_flg,ea_flg;                            /* Loop counter */
	int   i_foerr_op[EA_OUTPUT_FML+1] ;   							 /* Error code array for o/p FMLs */
	char  c_user_id[9],user_flag ;
	char c_oper;
	long  li_session_id ;
	long  l_space_avl;
	long  l_space_rqd;
	long  l_bufferlength;
	double d_cr_total;
	double d_dr_total;
	double d_cntrct_total;
	FBFR32  *ptr_ffo_temp_buffer;

	EXEC SQL INCLUDE "table/fno_cntrct_mstr.h";	
	EXEC SQL INCLUDE "table/ea_conf_mstr.h";	

	EXEC SQL BEGIN DECLARE SECTION;
		VARCHAR c_from_dt[11];
		VARCHAR c_to_dt[11];
		VARCHAR c_total[51];
		VARCHAR c_trd_flg[2];
	EXEC SQL END DECLARE SECTION;


	/* Tuxedo specific variables */

	FBFR32      *ptr_ffo_Ibuffer ;      /*   Input Buffer */
	FBFR32      *ptr_ffo_Obuffer ;      /*   Output Buffer */
	char        c_errmsg[256] ;

  strcpy(c_ServiceName,rqst->name) ;

	INITDBGLVL(c_ServiceName);			/* Ver 1.1 */

	/* Initializations */

	ptr_ffo_Ibuffer = (FBFR32*)rqst->data ;
	ptr_ffo_Obuffer = (FBFR32*)NULL ;

	if(Fget32(ptr_ffo_Ibuffer,FFO_USR_ID,0,c_user_id,0) == -1)
	{
		fn_errlog(c_ServiceName,"S31005",FMLMSG,c_errmsg) ;
		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
	}

	if(DEBUG_MSG_LVL_3)			/* Ver 1.1 */
	{ 
		fn_userlog(c_ServiceName,"User id :<%s>",c_user_id) ;
	}

 	if(Fget32(ptr_ffo_Ibuffer,FFO_SSSN_ID,0,(char*)&li_session_id,0) == -1)
	{
		fn_errlog(c_ServiceName,"S31010",FMLMSG,c_errmsg) ;
		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
	}

	if(DEBUG_MSG_LVL_3)		/* Ver 1.1 */
	{
		fn_userlog(c_ServiceName,"Session id :<%d> ",li_session_id) ;
	}

	if(Fget32(ptr_ffo_Ibuffer,FFO_EBA_MTCH_ACT_NO,0,(char*)sql_fcm_usr_mtch_accno.arr,0) == -1)
	{
		fn_errlog(c_ServiceName,"S31015",FMLMSG,c_errmsg) ;
		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
	}
	SETLEN(sql_fcm_usr_mtch_accno);
	
	if(DEBUG_MSG_LVL_3)     /* Ver 1.1 */
	{
		fn_userlog(c_ServiceName,"Match account is <%s>",sql_fcm_usr_mtch_accno.arr) ;
	}	

	if(Fget32(ptr_ffo_Ibuffer,FFO_ND_STRT_DT,0,(char*)c_from_dt.arr,0) == -1)
	{
		fn_errlog(c_ServiceName,"S31020",FMLMSG,c_errmsg) ;
		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
	}
	SETLEN(c_from_dt);

	if(DEBUG_MSG_LVL_3)     /* Ver 1.1 */
	{	
		fn_userlog(c_ServiceName,"From date is <%s>",c_from_dt.arr);
	}

	if(Fget32(ptr_ffo_Ibuffer,FFO_ND_END_DT,0,(char*)c_to_dt.arr,0) == -1)
	{
		fn_errlog(c_ServiceName,"S31025",FMLMSG,c_errmsg) ;
		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
	}
	SETLEN(c_to_dt);

	if(DEBUG_MSG_LVL_3)     /* Ver 1.1 */
	{
		fn_userlog(c_ServiceName,"To date is <%s>",c_to_dt.arr);
	}

	l_space_rqd = Fneeded32(1,REC_LENGTH);

		/* 	Allocate memory for output buffer     */

	if((ptr_ffo_Obuffer=(FBFR32*)tpalloc("FML32",NULL,MIN_FML_BUF_LEN))==NULL)
	{
		fn_errlog(c_ServiceName,"S31030",TPMSG,c_errmsg) ;
		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
	}

	/*  Oracle cursor declaration for fetching transactions  */

	if(DEBUG_MSG_LVL_3)     /* Ver 1.1 */
	{
		fn_userlog(c_ServiceName,"before declaring cursor <%s>,<%s>,<%s>",sql_fcm_usr_mtch_accno.arr,c_from_dt.arr,c_to_dt.arr);
	}

	EXEC SQL
		DECLARE cur_sfo_lt CURSOR FOR
		SELECT FCM_CNTRCT_NMBR,
					 to_char(FCM_CNTRCT_DT,'dd/mm/yyyy'),
					 FCM_SIGN
		FROM FNO_CNTRCT_MSTR
		WHERE FCM_USR_MTCH_ACCNO= :sql_fcm_usr_mtch_accno
		AND (trunc(FCM_CNTRCT_DT) BETWEEN to_date(:c_from_dt,'dd/mm/yyyy') 
		AND to_date(:c_to_dt,'dd/mm/yyyy')) 
		AND FCM_SIGN IS NOT NULL
		ORDER BY FCM_CNTRCT_NMBR;

	/* Open the cursor */
			
	EXEC SQL
		OPEN	cur_sfo_lt;

	/* Fetch the cursor, store data in variables */

	if(DEBUG_MSG_LVL_3)     /* Ver 1.1 */
	{
 		fn_userlog(c_ServiceName,"before fetching cursor ");
	}

 	j=0;
	fno_flg=0;
	c_oper='F';
	while(1)
	{
		EXEC SQL
		FETCH cur_sfo_lt
		INTO :sql_fcm_cntrct_nmbr,
				 :sql_fcm_cntrct_dt,
				 :sql_fcm_sign;

		if(DEBUG_MSG_LVL_3)     /* Ver 1.1 */
		{
			fn_userlog(c_ServiceName,"Value of fno sqlcode <%d> ", SQLCODE);
		}
	
		if((SQLCODE==NO_DATA_FOUND)&&(j==0))
		{
			fno_flg=1;
			EXEC SQL
			CLOSE cur_sfo_lt ;
				/*fn_errlog(c_ServiceName,"S31035",SQLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,"matching data not found",0) ;
			tpfree((char*)ptr_ffo_Obuffer) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;*/
			break;
		}
		else if(SQLCODE==NO_DATA_FOUND)
		{
			EXEC SQL
			CLOSE cur_sfo_lt ;
			break;
		}
		else if(SQLCODE)
		{
			EXEC SQL
			CLOSE cur_sfo_lt ;
			tpabort(0);
			fn_errlog(c_ServiceName,"S31040",SQLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
			tpfree((char*)ptr_ffo_Obuffer) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}
			
		SETNULL(sql_fcm_cntrct_nmbr);
		SETNULL(sql_fcm_cntrct_dt);
		SETNULL(sql_fcm_sign);

		d_cr_total=0;
		d_dr_total=0;

		if(DEBUG_MSG_LVL_3)     /* Ver 1.1 */
		{
			fn_userlog(c_ServiceName,"Output values:  ");
			fn_userlog(c_ServiceName,"Contract Nmbr <%s>",sql_fcm_cntrct_nmbr.arr); 
			fn_userlog(c_ServiceName,"Contract Date <%s> ",sql_fcm_cntrct_dt.arr);
			fn_userlog(c_ServiceName,"fno_flg <%d>",fno_flg);
			fn_userlog(c_ServiceName,"End of output values .");
		}
			
		/*Declare cursor for dtls amt for FNO*/

		if(fno_flg==0)
		{
			EXEC SQL
				DECLARE cur_dtls CURSOR FOR
				SELECT sum(FCD_CNTRCT_AMT),
							 FCD_TRD_FLW
				FROM  FNO_CNTRCT_DTLS
				WHERE  FCD_CNTRCT_NMBR=:sql_fcm_cntrct_nmbr
				GROUP BY FCD_TRD_FLW;
																	 
			/*	Open cursor */
			EXEC SQL
				OPEN  cur_dtls;

			/* Fetch the cursor, store data in variables */

			if(DEBUG_MSG_LVL_3)     /* Ver 1.1 */
			{
					fn_userlog(c_ServiceName,"before fetching DTLS cursor ");
			}											 

			while(1)
			{
				EXEC SQL
				FETCH cur_dtls
				INTO :c_total,
						 :c_trd_flg;

				if(SQLCODE==NO_DATA_FOUND)
				{
					EXEC SQL
					CLOSE cur_dtls;
					break;
				}
				else if(SQLCODE)
				{
					EXEC SQL
					CLOSE cur_dtls ;
					tpabort(0);
					fn_errlog(c_ServiceName,"S31045",SQLMSG,c_errmsg) ;
					Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
					tpfree((char*)ptr_ffo_Obuffer) ;
					tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
				}
				SETNULL(c_total);
				SETNULL(c_trd_flg);

				if(strcmp((char *)c_trd_flg.arr,"B") ==0)
				{
					d_dr_total= atof((char *)c_total.arr);
				}
				else
				{
					d_cr_total= atof((char *)c_total.arr);
				}

			}/*End of while*/

			if(SQLCODE==NO_DATA_FOUND)
			{
				EXEC SQL
				CLOSE cur_dtls;
				break;
			}
			else if(SQLCODE)
			{
				EXEC SQL
				CLOSE cur_dtls ;
				tpabort(0);
				fn_errlog(c_ServiceName,"S31050",SQLMSG,c_errmsg) ;
				Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
				tpfree((char*)ptr_ffo_Obuffer) ;
				tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
			}
 		
			d_cntrct_total=d_cr_total-d_dr_total;

			l_space_avl = Funused32(ptr_ffo_Obuffer);

		 	if (l_space_avl < l_space_rqd)
			{
				/* Reallocate a output buffer */

				l_bufferlength = Fsizeof32(ptr_ffo_Obuffer) + MIN_FML_BUF_LEN * 30;
				ptr_ffo_temp_buffer=(FBFR32 *)tprealloc((char *)ptr_ffo_Obuffer,l_bufferlength);
				if (ptr_ffo_temp_buffer == NULL)
				{
					fn_errlog(c_ServiceName,"S31055",FMLMSG,c_errmsg) ;
					Fadd32( ptr_ffo_Ibuffer,FFO_ERR_MSG, c_errmsg, 0 );
					tpfree((char *)ptr_ffo_Obuffer);
					tpreturn(TPFAIL,0L, (char *)ptr_ffo_Ibuffer, 0L, 0);
				}
				else
				{
					ptr_ffo_Obuffer = ptr_ffo_temp_buffer;
					Finit32(ptr_ffo_temp_buffer, Fsizeof32(ptr_ffo_temp_buffer));
				}
			}

			i_foerr_op[0]=Fadd32(ptr_ffo_Obuffer,FFO_NARRATION_ID,(char*)sql_fcm_cntrct_nmbr.arr,0);
			i_foerr_op[1]=Fadd32(ptr_ffo_Obuffer,FFO_RCRD_DT,(char*)sql_fcm_cntrct_dt.arr,0);		
			i_foerr_op[2]=Fadd32(ptr_ffo_Obuffer,FFO_PRDCT_TYP,(char*)&c_oper,0);		
			i_foerr_op[3]=Fadd32(ptr_ffo_Obuffer,FFO_DPID,(char*)sql_fcm_sign.arr,0);		
			i_foerr_op[4]=Fadd32(ptr_ffo_Obuffer,FFO_TOTAL_PL,(char*)&d_cntrct_total,0);		

			for(i=0;i<=FNO_OUTPUT_FML;i++)
			{
				if(i_foerr_op[i]==-1)
				{
					fn_errlog(c_ServiceName,"S31060",FMLMSG,c_errmsg) ;
					Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
					tpfree((char*)ptr_ffo_Obuffer) ;
					tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
				}
			}
			j++;
		}/*end of fno_flg*/
	}/* End of while */

	if(DEBUG_MSG_LVL_3)     /* Ver 1.1 */
	{
 		fn_userlog(c_ServiceName,"After FNO data fetched ");
	}

 	/* Declare cursor for E/A records */

	EXEC SQL
			DECLARE cur_sfo_get_ea_list CURSOR for
			SELECT ECM_CNTRCT_NMBR,
						 to_char(ECM_CNTRCT_DT,'dd/mm/yyyy'),
						 ECM_SIGN,
						 ECM_TOTAL_AMOUNT
			FROM EA_CONF_MSTR 
			WHERE ECM_USR_MTCH_ACCNO = :sql_fcm_usr_mtch_accno 
			AND (trunc(ECM_CNTRCT_DT) BETWEEN to_date(:c_from_dt,'dd/mm/yyyy')
			AND to_date(:c_to_dt,'dd/mm/yyyy')) 
			AND ECM_SIGN IS NOT NULL
			ORDER by ECM_CNTRCT_NMBR;


	/*    Open the cursor */

	EXEC SQL
		OPEN  cur_sfo_get_ea_list;

	/*    Fetch the cursor, store data in variables */

	if(DEBUG_MSG_LVL_3)     /* Ver 1.1 */
	{
 		fn_userlog(c_ServiceName,"before fetching cursor ");
	}

	j=0;
	ea_flg=0;
	c_oper='E';
	while (1)
	{
		EXEC SQL FETCH cur_sfo_get_ea_list
								INTO :sql_ecm_cntrct_nmbr,
										 :sql_ecm_cntrct_dt,
										 :sql_ecm_sign,
										 :sql_ecm_total_amount;

		if(DEBUG_MSG_LVL_3)     /* Ver 1.1 */
		{
			fn_userlog(c_ServiceName,"Value of EA SQLCODE %d ", SQLCODE);
		}

		if((SQLCODE==NO_DATA_FOUND)&&(j==0))
		{
			ea_flg=1;
			EXEC SQL
			CLOSE cur_sfo_lt ;
			break;
		 /*fn_errlog(c_ServiceName,"S31065",SQLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,"matching data not found",0) ;
			tpfree((char*)ptr_ffo_Obuffer) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;*/
		}
		else if(SQLCODE==NO_DATA_FOUND)
		{
			EXEC SQL
			CLOSE cur_sfo_lt ;
			break;
		}
		else if(SQLCODE)
		{
			EXEC SQL
			CLOSE cur_sfo_lt ;
			fn_errlog(c_ServiceName,"S31070",SQLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
			tpfree((char*)ptr_ffo_Obuffer) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}

	  if(ea_flg==0)
		{
			SETNULL(sql_ecm_cntrct_nmbr);
		  SETNULL(sql_ecm_cntrct_dt);
		  SETNULL(sql_ecm_sign);

			if(DEBUG_MSG_LVL_3)     /* Ver 1.1 */
			{
				fn_userlog(c_ServiceName,"Cntrct Nmbr (E/A) <%s> ",sql_ecm_cntrct_nmbr.arr);
				fn_userlog(c_ServiceName,"Cntrct Date (E/A) <%s> ",sql_ecm_cntrct_dt.arr);
				fn_userlog(c_ServiceName,"E/A flg <%d> ",ea_flg);
				fn_userlog(c_ServiceName,"E/A Total Amt  <%lf> ",sql_ecm_total_amount);
			}	

		  l_space_avl = Funused32(ptr_ffo_Obuffer);

		 	if (l_space_avl < l_space_rqd)
		 	{
					/* Reallocate a output buffer */

				l_bufferlength = Fsizeof32(ptr_ffo_Obuffer) + MIN_FML_BUF_LEN * 30;
				ptr_ffo_temp_buffer=(FBFR32 *)tprealloc((char *)ptr_ffo_Obuffer,l_bufferlength);
				if (ptr_ffo_temp_buffer == NULL)
				{
					fn_errlog(c_ServiceName,"S31075",FMLMSG,c_errmsg) ;
					Fadd32( ptr_ffo_Ibuffer,FFO_ERR_MSG, c_errmsg, 0 );
					tpfree((char *)ptr_ffo_Obuffer);
					tpreturn(TPFAIL,0L, (char *)ptr_ffo_Ibuffer, 0L, 0);
				}
				else
				{
					ptr_ffo_Obuffer = ptr_ffo_temp_buffer;
					Finit32(ptr_ffo_temp_buffer, Fsizeof32(ptr_ffo_temp_buffer));
				}
		  }
		 	i_foerr_op[0]=Fadd32(ptr_ffo_Obuffer,FFO_NARRATION_ID,(char*)sql_ecm_cntrct_nmbr.arr,0);
		 	i_foerr_op[1]=Fadd32(ptr_ffo_Obuffer,FFO_RCRD_DT,(char*)sql_ecm_cntrct_dt.arr,0);
		 	i_foerr_op[2]=Fadd32(ptr_ffo_Obuffer,FFO_PRDCT_TYP,(char*)&c_oper,0);
		 	i_foerr_op[3]=Fadd32(ptr_ffo_Obuffer,FFO_DPID,(char*)sql_ecm_sign.arr,0);
		 	i_foerr_op[4]=Fadd32(ptr_ffo_Obuffer,FFO_TOTAL_PL,(char*)&sql_ecm_total_amount,0);

		 	for(i=0;i<=EA_OUTPUT_FML;i++)
		 	{
				if(i_foerr_op[i]==-1)
				{
					fn_errlog(c_ServiceName,"S31080",FMLMSG,c_errmsg) ;
					Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
					tpfree((char*)ptr_ffo_Obuffer) ;
					tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
				}
		 	}
		 	j++;
	  }/*End of ea flag */
	}/*End of while */

	if(DEBUG_MSG_LVL_3)     /* Ver 1.1 */
	{
		fn_userlog(c_ServiceName,"Service completed succesfully  ");
	}

	tpreturn(TPSUCCESS,0,(char *)ptr_ffo_Obuffer,0L,0) ;
}
