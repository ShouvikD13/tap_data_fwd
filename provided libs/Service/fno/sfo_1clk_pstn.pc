/********************************************************************************************************/
/*  Program             : SFO_1CLK_PSTN                                                               */
/*                                                                                                      */
/*  Description       : This service retrieves the values of the entire                                 */
/*                      contract position book given different input                                    */
/*                                                                                                      */
/*  Log               : 1.0     21-Jun-2011                                                             */
/********************************************************************************************************/
/*                                                                                                      */
/*  1.0   -   New Release  ( Kiran Itkar )                                                              */
/********************************************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fo.h>
#include <fo_fml_def.h>
#include <fn_span_lib.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_log.h>
#include <fn_session.h>
#include <fn_read_debug_lvl.h>
#include <math.h>
#include <fo_view_def.h> 

int fn_optn_pstn(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prd_typ,
                   char c_req_typ,
                   char c_strgy_typ,
                   char c_1clk_flg,char c_opt_typ,long l_strike_prc,long l_opnpstn_qty,char *c_prtfl_id);

int fn_buy_opnpsn(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prdct_typ ,
                   char c_rqst_typ,
                   char c_strgy_typ, 
                   char c_1clk_flg, char *c_prtfl_id); /*fn_buy_opnpstn to fn_buy_opnpsn in Ver TOL */
int fn_sell_opnpsn(char *c_ServiceName,
                    char *c_cln_mtch_accnt,
                    char *c_xchng_cd,
                    char *c_undrlyng,
                    char *c_expry_dt,
                    char c_exrc_typ,
                    char c_prdct_typ ,
                    char c_rqst_typ,
                    char c_strgy_typ, 
                    char c_1clk_flg,char *c_prtfl_id); /* fn_sell_opnpsn to fn_sell_opnpsn in Ver TOL */

int fn_sqroff_pstn (char *c_ServiceName,
                    char *c_cln_mtch_accnt,
                    char *c_xchng_cd,
                    char *c_undrlyng,
                    char *c_expry_dt,
                    char c_exrc_typ,
                    char c_prdct_typ ,
                    char c_rqst_typ,
                    char c_strgy_typ, 
                    char c_1clk_flg,char *c_prtfl_id);


sql_cursor trd_cursor;
double  d_opn_sell_val =0.0;
long l_tot_sell_qty_m = 0;
double d_sell_val_m = 0.0;
long l_tot_sell_qty_h = 0;
double d_sell_val_h = 0.0;
long l_tot_sell_qty_fco_h = 0;
double d_sell_val_fco_h = 0.0;
long l_tot_sell_qty_fco_m = 0;
double d_sell_val_fco_m = 0.0;
long li_exctd_qty=0;
long li_exctd_rt = 0;
double d_frsh_brk = 0.0;
double d_cvr_brk = 0.0;
long l_strtgy_idd = 0;

double d_sell_val = 0.0;
double d_buy_val = 0.0;
double d_opn_buy_val = 0.0;
double d_uncrst_prft = 0.0;
long l_tot_sell_qty = 0;
long li_uncrst_qty = 0;
long li_net_qty_bal = 0;
double d_net_avg_rt = 0.0;
char c_cprdct_typ ='\0';
long l_rec_main_exists = 0;
long l_rec_hstry_exists = 0;
long li_bal_qty = 0;
long li_crst_qty = 0;
double d_avg_pr = 0;
double d_crst_prft = 0.0;
double d_cls_val = 0.0;
double d_org_opn_val = 0;
long l_org_opn_val = 0;
  long l_sid = 0;

long l_avg_prc=0;

varchar c_errrmsg[256];    /*** Changed datatype from char to varchar in VQC ***/
struct vw_cntrct_qt st_cntrct_qt;




long int l_tot_buy_qty_m = 0 ;
double d_buy_val_m = 0.0 ;        /*** Variable initialized from 0 to 0.0 in VQC ***/
long int l_tot_buy_qty_h = 0;
double d_buy_val_h = 0.0 ;        /*** Variable initialized from 0 to 0.0 in VQC ***/
long int l_tot_buy_qty = 0 ;
  varchar c_trd_dt [ LEN_DATE ];

double d_cls_val_m= 0.0;
double d_cls_val_h = 0.0;

long int l_tot_buy_qty_fco_m = 0 ;
long int l_tot_buy_qty_fco_h = 0 ;
double d_buy_val_fco_h = 0.0 ;        /*** Variable initialized from 0 to 0.0 in VQC ***/
double d_buy_val_fco_m = 0.0 ;

void SFO_1CLK_PSTN( TPSVCINFO *rqst )
{
	FBFR32 *ptr_fml_Ibuf = NULL;
	FBFR32 *ptr_fml_Obuf = NULL;

	int   i_err[10];
  int   i_ferr[10];
	int   i_cnt;
	int   i_ch_val;
	int		i_returncode;

	char c_ServiceName[33] = "\0"; 
  char c_errmsg[256] = "\0"; 
	char c_strgy_typ = '\0'; 
  char c_mtch_accnt_no[11] = "\0"; 
  char c_xchng_cd[4] = "\0"; 
	char c_prdt_typ = '\0';
  char c_prd_typ = '\0';
  char c_undrlyng[7] = "\0";  
  char c_ctgry_indstk = '\0';
	char c_expry_dt[12];
	char c_exrc_typ = '\0';  
  char c_opnpstn_flw = '\0'; 
	char c_opt_typ = '\0';	
	char c_strgy_name[101]="\0"; 
	char c_1clk_flg = 'Y';	
  char c_prtfl_id[11];
	char c_call_date[20];
	char	c_call_actn[101]="\0";

  long l_opnpstn_qty = 0; 
  long l_cvr_qty = 0;
	long l_lst_trdd_prc = 0;
	long l_strike_prc = 0;
	long l_sellpndng_qty = 0;
	long l_buypndng_qty = 0;

	double d_unlz_pl = 0;

	char c_rqst_typ='N';

	EXEC SQL BEGIN DECLARE SECTION;
    struct st_usr_prfl st_user_profile;
    struct  st_err_msg st_er_msg;
		sql_cursor  sys_cursor;

	EXEC SQL END DECLARE SECTION;

	ptr_fml_Ibuf = (FBFR32 *)rqst->data;
  strcpy( c_ServiceName, rqst->name );
  INITDBGLVL(c_ServiceName);

	i_err	[0]		= Fget32( ptr_fml_Ibuf, FFO_USR_ID, 0,(char *)st_user_profile.c_user_id, 0 );
  i_ferr[0] 	= Ferror32;
  i_err	[1] 	= Fget32( ptr_fml_Ibuf, FFO_SSSN_ID, 0,(char *)&st_user_profile.l_session_id, 0 ); 
  i_ferr[1] 	= Ferror32;
  i_err	[2]		= Fget32( ptr_fml_Ibuf, FFO_EBA_MTCH_ACT_NO, 0,(char *)st_user_profile.c_cln_mtch_accnt, 0 );
  i_ferr[2] 	= Ferror32;
  i_err	[3] 	= Fget32( ptr_fml_Ibuf, FFO_OPERATION_TYP, 0,(char *)&c_strgy_typ, 0 );
  i_ferr[3] 	= Ferror32;
  i_err	[4]		= Fget32( ptr_fml_Ibuf, FFO_XCHNG_CD, 0, (char *)c_xchng_cd, 0 );
  i_ferr[4] 	= Ferror32;

	for(i_cnt =0; i_cnt <5; i_cnt++) 
  {
    if ( (i_err[ i_cnt ] == -1 ) )
    {
      fn_userlog( c_ServiceName, "Error in field no. [%d] ",i_cnt);
      fn_errlog( c_ServiceName, "S31005", Fstrerror32(i_ferr[i_cnt]),c_errmsg);
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
  }

	strcpy ( ( char * )c_mtch_accnt_no, st_user_profile.c_cln_mtch_accnt );
  strcpy ( ( char * )c_expry_dt, "\0");

  rtrim(c_mtch_accnt_no);

	if( DEBUG_MSG_LVL_0 ) 
	{
    fn_userlog( c_ServiceName,"c_mtch_accnt_no :%s:", c_mtch_accnt_no );
    fn_userlog( c_ServiceName,"c_strgy_typ   :%c:", c_strgy_typ );
    fn_userlog( c_ServiceName,"c_xchng_cd  :%s:", c_xchng_cd );
    fn_userlog( c_ServiceName,"c_user_id  :%s:", st_user_profile.c_user_id );
    fn_userlog( c_ServiceName,"l_session_id  :%ld:", st_user_profile.l_session_id );
  }

	EXEC SQL ALLOCATE :sys_cursor;

			EXEC SQL  EXECUTE
       BEGIN
        OPEN  :sys_cursor FOR
	        SELECT
          PRDCT_TYP,
	        INDSTK,
          UNDRLYNG,
          EXPRY_DT,
          EXER_TYP,
	        OPT_TYP,
          STRK_PRC,
          SUM(OPN_QTY),
	        SUM(SELL_QTY),
          SUM(BUY_QTY),
          STRTGY_NAME,
          PRTFL_ID,
					CALL_ACTN,
	  			CALL_DATE
          FROM
          (
          SELECT  FOD_PRDCT_TYP PRDCT_TYP,
                  FOD_INDSTK INDSTK,
                  FOD_UNDRLYNG UNDRLYNG,
                  FOD_EXPRY_DT EXPRY_DT,
                  FOD_EXER_TYP EXER_TYP,
                  FOD_OPT_TYP OPT_TYP,
                  FOD_STRK_PRC STRK_PRC,
                  NVL(sum(decode(FTD_TRD_FLW,'S',-1*FTD_EXCTD_QTY,'B',FTD_EXCTD_QTY)),0) OPN_QTY,
                  NVL(sum(decode(FOD_ORDR_FLW,'S',FOD_ORDR_TOT_QTY-FOD_EXEC_QTY-FOD_CNCL_QTY-FOD_EXPRD_QTY)),0) SELL_QTY,
                  NVL(sum(decode(FOD_ORDR_FLW,'B',FOD_ORDR_TOT_QTY-FOD_EXEC_QTY-FOD_CNCL_QTY-FOD_EXPRD_QTY)),0) BUY_QTY,
		  						FSB_PRTFL_NAME STRTGY_NAME,
                  FSB_PRTFL_ID    PRTFL_ID,
									FSB_CALL_ACTION	CALL_ACTN,
		  						to_char(FSB_CALL_DATE,'DD-MM-YYYY HH:MM:SS')	CALL_DATE
          FROM    fod_fo_ordr_dtls, FTD_FO_TRD_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
          WHERE   FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
          AND     FOD_EXPRY_DT >=trunc(sysdate)
          AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
          AND     FOD_XCHNG_CD =:c_xchng_cd
          AND     FOD_CLM_MTCH_ACCNT = :c_mtch_accnt_no
	  			AND     FOD_1CLICK_FLG = :c_1clk_flg
          AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID
          AND     NVL(FSB_CUST_RCMEND_FLG,'R') LIKE :c_strgy_typ 
          group by  FOD_PRDCT_TYP,
                    FOD_INDSTK,
                    FOD_UNDRLYNG,
                    FOD_EXPRY_DT,
                    FOD_OPT_TYP,
                    FOD_STRK_PRC,
                    FOD_EXER_TYP,
                    FSB_PRTFL_NAME,FSB_PRTFL_ID,FSB_CALL_ACTION,FSB_CALL_DATE
          UNION ALL
          SELECT  FOD_PRDCT_TYP,
                  FOD_INDSTK,
                  FOD_UNDRLYNG,
                  FOD_EXPRY_DT,
                  FOD_EXER_TYP,
                  FOD_OPT_TYP,
                  FOD_STRK_PRC,
                  sum(decode(FTD_TRD_FLW,'S',-1*FTD_EXCTD_QTY,'B',FTD_EXCTD_QTY)) opn_qty,
                  sum(decode(FOD_ORDR_FLW,'S',FOD_ORDR_TOT_QTY-FOD_EXEC_QTY-FOD_CNCL_QTY-FOD_EXPRD_QTY)),
                  sum(decode(FOD_ORDR_FLW,'B',FOD_ORDR_TOT_QTY-FOD_EXEC_QTY-FOD_CNCL_QTY-FOD_EXPRD_QTY)),
		              FSB_PRTFL_NAME STRTGY_NAME,
                  FSB_PRTFL_ID    PRTFL_ID,
									FSB_CALL_ACTION	CALL_ACTN,
		 							to_char(FSB_CALL_DATE,'DD-MM-YYYY HH:MM:SS')	CALL_DATE
          FROM    fod_fo_1clk_ordr_dtls, FTD_FO_1CLK_TRD_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
          WHERE   FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
          AND     FOD_EXPRY_DT >=trunc(sysdate)
          AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
          AND     FOD_XCHNG_CD =:c_xchng_cd
          AND     FOD_CLM_MTCH_ACCNT = :c_mtch_accnt_no
	  			AND     FOD_1CLICK_FLG = :c_1clk_flg
          AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID
          AND     NVL(FSB_CUST_RCMEND_FLG,'R') LIKE :c_strgy_typ												
          group by  FOD_PRDCT_TYP,
                    FOD_INDSTK,
                    FOD_UNDRLYNG,
                    FOD_EXPRY_DT,
                    FOD_OPT_TYP,
                    FOD_STRK_PRC,
                    FOD_EXER_TYP,
                    FSB_PRTFL_NAME,FSB_PRTFL_ID,FSB_CALL_ACTION,FSB_CALL_DATE 
          )
          GROUP BY
          PRDCT_TYP,
          INDSTK,
          UNDRLYNG,
          EXPRY_DT,
          EXER_TYP,
          OPT_TYP,
          STRK_PRC,
	  		  STRTGY_NAME,
          PRTFL_ID,
					CALL_ACTN,
					CALL_DATE
					ORDER BY 
					STRTGY_NAME;
      END;
     END-EXEC;

	if ( SQLCODE != 0 )
  {
    fn_errlog( c_ServiceName, "S31010", SQLMSG, c_errmsg  );
    EXEC SQL FREE :sys_cursor;
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	ptr_fml_Obuf = NULL;
	
	for ( ; ; )
  {
		MEMSET(c_call_date);
		MEMSET(c_call_actn);	
		MEMSET(c_undrlyng);
		MEMSET(c_expry_dt);
		MEMSET(c_strgy_name);
		c_prd_typ='\0';
		c_ctgry_indstk='\0';
		c_exrc_typ='\0';	
	  c_opt_typ='\0';  
		c_opnpstn_flw='\0';
		l_strike_prc=0;
		l_opnpstn_qty=0;
		l_sellpndng_qty=0;
		l_buypndng_qty=0;
		l_lst_trdd_prc=0;
    MEMSET(c_prtfl_id); 
    l_avg_prc=0;
    d_avg_pr=0;	
		EXEC SQL FETCH :sys_cursor
               INTO  
                     :c_prd_typ,
                     :c_ctgry_indstk,
                     :c_undrlyng,
                     :c_expry_dt,
                     :c_exrc_typ,
                     :c_opt_typ,
                     :l_strike_prc,
                     :l_opnpstn_qty,
										 :l_sellpndng_qty,
										 :l_buypndng_qty,	
										 :c_strgy_name,
                     :c_prtfl_id,
										 :c_call_actn,
										 :c_call_date;

		if ( SQLCODE != 0 )
		{
       if( SQLCODE == NO_DATA_FOUND )
       {
         fn_userlog(c_ServiceName,"No data Found");
         break;
       }
       else
       {
			   fn_errlog( c_ServiceName, "S31015", SQLMSG, c_errmsg  );
         EXEC SQL CLOSE :sys_cursor;
         EXEC SQL FREE :sys_cursor;
         tpfree ( ( char * ) ptr_fml_Obuf );
         Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
         tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
       }
		}
  

    EXEC SQL
    Select FTQ_LST_TRD_PRC
      into :l_lst_trdd_prc
      FROM FTQ_FO_TRD_QT
      WHERE     FTQ_XCHNG_CD=:c_xchng_cd
        AND     FTQ_EXPRY_DT = :c_expry_dt
        AND     FTQ_UNDRLYNG = :c_undrlyng
        AND     FTQ_PRDCT_TYP = DECODE(:c_prd_typ,'P','F',:c_prd_typ)
        AND     FTQ_OPT_TYP = :c_opt_typ
        AND     FTQ_STRK_PRC = :l_strike_prc;
     if(SQLCODE != 0 )
     {
         fn_errlog( c_ServiceName, "S31020", SQLMSG, c_errmsg  );
         EXEC SQL CLOSE :sys_cursor;
         EXEC SQL FREE :sys_cursor;
         tpfree ( ( char * ) ptr_fml_Obuf );
         Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
         tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     }

     st_cntrct_qt.l_lst_trdd_prc = l_lst_trdd_prc; 
     d_org_opn_val = (double)l_org_opn_val;
     rtrim(c_strgy_name);
     rtrim(c_prtfl_id);

     l_strtgy_idd = l_sid;

     if( l_opnpstn_qty > 0 )
     {
       c_opnpstn_flw = 'B';
     }
     else if( l_opnpstn_qty <0 )
     {
       c_opnpstn_flw ='S';   
     }
      fn_userlog(c_ServiceName,"@@@@@@@@@@@@@@@@ FETCH RECORD @@@@@@@@@@@@@@@@:");
      fn_userlog(c_ServiceName,":c_mtch_accnt  :%s:",c_mtch_accnt_no);
      fn_userlog(c_ServiceName,":c_prd_typ     :%c:",c_prd_typ);
      fn_userlog(c_ServiceName,":c_ctgry_indstk:%c:",c_ctgry_indstk);
      fn_userlog(c_ServiceName,":c_undrlyng    :%s:",c_undrlyng);
      fn_userlog(c_ServiceName,":c_expry_dt    :%s:",c_expry_dt);
      fn_userlog(c_ServiceName,":c_exrc_typ    :%c:",c_exrc_typ);
      fn_userlog(c_ServiceName,":c_opt_typ     :%c:",c_opt_typ);
      fn_userlog(c_ServiceName,":l_strike_prc  :%ld:",l_strike_prc);
      fn_userlog(c_ServiceName,":c_opnpstn_flw :%c:",c_opnpstn_flw);
      fn_userlog(c_ServiceName,":l_opnpstn_qty :%ld:",l_opnpstn_qty);
      fn_userlog(c_ServiceName,":l_lst_trdd_prc:%ld:",l_lst_trdd_prc);
      fn_userlog(c_ServiceName,":c_strgy_name  :%s:",c_strgy_name);
      fn_userlog(c_ServiceName,":d_uncrst_prft  :%lf:",d_uncrst_prft); 
			fn_userlog(c_ServiceName,":c_call_actn  :%s:",c_call_actn);
      fn_userlog(c_ServiceName,":c_call_date  :%s:",c_call_date);

   if( c_prd_typ != 'O' )
   {
     if (l_opnpstn_qty > 0 )
     {
      c_rqst_typ='N';

       i_returncode = fn_buy_opnpsn(c_ServiceName,
                                    c_mtch_accnt_no,
                                    c_xchng_cd,
                                    c_undrlyng,
                                    c_expry_dt,
                                    c_exrc_typ,
                                    c_prd_typ,
                                    c_rqst_typ,
                                    c_strgy_typ,
                                    c_1clk_flg,
                                    c_prtfl_id);

        if(i_returncode == -1)
        {
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
      }
      else if(l_opnpstn_qty < 0)
     {
      c_rqst_typ='N';

    i_returncode = fn_sell_opnpsn(c_ServiceName,
                                    c_mtch_accnt_no,
                                     c_xchng_cd,
                                     c_undrlyng,
                                     c_expry_dt,
                                     c_exrc_typ,
                                     c_prd_typ,
                                     c_rqst_typ ,
                                     c_strgy_typ,
                                     c_1clk_flg,c_prtfl_id);

      if(i_returncode == -1)
      {
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
    }
    else
    {

      i_returncode = fn_sqroff_pstn (c_ServiceName,
                                  c_mtch_accnt_no,
                                   c_xchng_cd,
                                   c_undrlyng,
                                   c_expry_dt,
                                   c_exrc_typ,
                                   c_prd_typ ,
                                   c_rqst_typ,
                                  /*  c_cprdct_typ, */
                                   c_strgy_typ,
                                   c_1clk_flg,c_prtfl_id);

      if(i_returncode == -1)
      {
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errrmsg.arr, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
    }
   }
   else
   {
      i_returncode = fn_optn_pstn (c_ServiceName,
                                  c_mtch_accnt_no,
                                   c_xchng_cd,
                                   c_undrlyng,
                                   c_expry_dt,
                                   c_exrc_typ,
                                   c_prd_typ ,
                                   c_rqst_typ,
                                   c_strgy_typ,
                                   c_1clk_flg,c_opt_typ,l_strike_prc,l_opnpstn_qty,c_prtfl_id);

      if(i_returncode == -1)
      {
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errrmsg.arr, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }

   } 
   /* d_unlz_pl = d_uncrst_prft; */

     if(l_opnpstn_qty > 0)
    {
      c_opnpstn_flw='B';
    }
    else if(l_opnpstn_qty < 0)
    {
      c_opnpstn_flw='S';
      l_opnpstn_qty = -1*l_opnpstn_qty;
    }
    else
    {
      c_opnpstn_flw='N';
    }

    if( DEBUG_MSG_LVL_3 )
    {
      fn_userlog(c_ServiceName,"@@@@@@@@@@@@@@@@ FETCH RECORD @@@@@@@@@@@@@@@@:");
      fn_userlog(c_ServiceName,":c_mtch_accnt  :%s:",c_mtch_accnt_no);
      fn_userlog(c_ServiceName,":c_prd_typ     :%c:",c_prd_typ);
      fn_userlog(c_ServiceName,":c_ctgry_indstk:%c:",c_ctgry_indstk);
      fn_userlog(c_ServiceName,":c_undrlyng    :%s:",c_undrlyng);
      fn_userlog(c_ServiceName,":c_expry_dt    :%s:",c_expry_dt);
      fn_userlog(c_ServiceName,":c_exrc_typ    :%c:",c_exrc_typ);
      fn_userlog(c_ServiceName,":c_opt_typ     :%c:",c_opt_typ);
      fn_userlog(c_ServiceName,":l_strike_prc  :%ld:",l_strike_prc);
      fn_userlog(c_ServiceName,":c_opnpstn_flw :%c:",c_opnpstn_flw);
      fn_userlog(c_ServiceName,":l_opnpstn_qty :%ld:",l_opnpstn_qty);
      fn_userlog(c_ServiceName,":l_lst_trdd_prc:%ld:",l_lst_trdd_prc);
      fn_userlog(c_ServiceName,":c_strgy_name  :%s:",c_strgy_name);
      fn_userlog(c_ServiceName,":d_uncrst_prft  :%lf:",d_uncrst_prft);
    }
    l_avg_prc = (long)d_avg_pr;

		i_returncode = fn_pack_vartofml ( c_ServiceName,
                                      c_errmsg,
                                      &ptr_fml_Obuf,
																			19,
                                      FFO_XCHNG_CD, (char *)c_xchng_cd,
																			FFO_PRDCT_TYP,(char *)&c_prd_typ,   
                                      FFO_CTGRY_INDSTK,(char *)&c_ctgry_indstk,
                                      FFO_UNDRLYNG,(char *)c_undrlyng,
                                      FFO_EXPRY_DT,(char *)c_expry_dt,
                                      FFO_EXER_TYP,(char *)&c_exrc_typ,
                                      FFO_OPT_TYP, (char *)&c_opt_typ,
                                      FFO_STRK_PRC, (char *)&l_strike_prc,
                                      FFO_C_OPNPSTN_FLW,(char *)&c_opnpstn_flw,
                                      FFO_C_OPNPSTN_QTY,(char *)&l_opnpstn_qty,
																			FFO_LST_TRD_PRC,(char *)&l_lst_trdd_prc,
																			FFO_UNRLZD_PL,(char *)&d_uncrst_prft,
																	    FFO_QSPACE_NAME,(char *)c_strgy_name,
                                      FFO_UI_BUY_QTY,(char *)&l_buypndng_qty,
                                      FFO_UI_SELL_QTY,(char *)&l_sellpndng_qty,
																			FFO_PSTN_FLG,(char	*)&c_call_actn,
																			FFO_ABT_TRG_DATA,(char	*)&c_call_date,    
																			FFO_BILL_NO,(char	*)c_prtfl_id,
                                      FFO_BASE_PRC,(char *)&l_avg_prc
																		);

		if ( i_returncode == -1 )
    {
      fn_errlog( c_ServiceName, "S31025", FMLMSG, c_errmsg  );
      EXEC SQL CLOSE :sys_cursor;
      EXEC SQL FREE :sys_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

	}

	EXEC SQL CLOSE :sys_cursor;
  EXEC SQL FREE :sys_cursor;
	
	tpreturn( TPSUCCESS, 0, (char *)ptr_fml_Obuf, 0 , 0 );


}



int fn_buy_opnpsn(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prdct_typ,
                   char c_req_typ,
                   char c_strgy_typ, 
                   char c_1clk_flg, char *c_prtfl_id )  /*** Added in ver 2.8 ***/
{



  l_tot_sell_qty_m = 0;
  l_tot_sell_qty_h = 0;
  d_sell_val_m = 0;
  d_sell_val_h = 0;
  d_sell_val = 0;
  d_buy_val = 0;
  d_opn_buy_val = 0;
  d_uncrst_prft = 0;
  l_tot_sell_qty = 0;
  li_uncrst_qty = 0;
  /*** d_Ccrst_prft = 0 ;
   d_Cuncrst_prft = 0;  *** Commented in VQC as variable is not used ***/

   /* Ver 2.1 starts */
  long int li_qty_bal = 0;
  long int li_cum_exctd_qty = 0;
  li_net_qty_bal = 0;
  d_net_avg_rt = 0;
  /* Ver 2.1 ends */

  char c_sell_flw = 'S';   /*** Added in Ver 3.4 ***/
  char c_buy_flw  = 'B';   /*** Added in Ver 3.4 ***/

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Inside Function fn_buy_opnpsn");
  }

  if( DEBUG_MSG_LVL_5 )
  {
    fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
    fn_userlog(c_ServiceName,"CProduct Type Is :%c:",c_cprdct_typ);
    fn_userlog(c_ServiceName,"Product Type Is :%c:",c_prdct_typ);
    fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
    fn_userlog(c_ServiceName,"Exercise Type Is :%c:",c_exrc_typ);
    fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
  }


  EXEC SQL
        SELECT  NVL ( SUM ( FTD_EXCTD_QTY ), 0),
                NVL ( SUM ( ( FTD_EXCTD_QTY * FTD_EXCTD_RT ) -
                            NVL ( FTD_FRS_BRKG,0 )           -
                            NVL ( FTD_CVR_BRKG,0 )             ), 0 )
        INTO    :l_tot_sell_qty_m,
                :d_sell_val_m
        FROM    FTD_FO_TRD_DTLS,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
        WHERE   FTD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
        AND     FTD_XCHNG_CD        = :c_xchng_cd
        AND     FTD_PRDCT_TYP IN ('F','P','U')   /* Ver 2.2 */
        AND     FTD_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
        AND     FTD_UNDRLYNG        = :c_undrlyng
        AND     FTD_EXPRY_DT        = :c_expry_dt
        AND     FTD_EXER_TYP        = :c_exrc_typ
        AND     FTD_TRD_FLW         = :c_sell_flw  /*** Ver 3.4 bind variable used instead of hard coded value ***/
        AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
        and     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
        AND     FOD_1CLICK_FLG = :c_1clk_flg
        AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
        AND     FSB_PRTFL_ID = :c_prtfl_id 
        AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID;

      if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31030", SQLMSG, c_errrmsg.arr  );
        return -1;
      }



   EXEC SQL
        SELECT  NVL ( SUM ( FTD_EXCTD_QTY ), 0),
                NVL ( SUM ( ( FTD_EXCTD_QTY * FTD_EXCTD_RT ) -
                            NVL ( FTD_FRS_BRKG,0 )           -
                            NVL ( FTD_CVR_BRKG,0 )             ), 0 )
        INTO    :l_tot_sell_qty_h,
                :d_sell_val_h
        FROM    FTD_FO_1CLK_TRD_DTLS,fod_fo_1clk_ordr_dtls,FSB_FO1CLICK_STRTGY_BUCKTDTLS
        WHERE   FTD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
        AND     FTD_XCHNG_CD        = :c_xchng_cd
        AND     FTD_PRDCT_TYP IN ('F','P','U')   /* Ver 2.2 */
        AND     FTD_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
        AND     FTD_UNDRLYNG        = :c_undrlyng
        AND     FTD_EXPRY_DT        = :c_expry_dt
        AND     FTD_EXER_TYP        = :c_exrc_typ
        AND     FTD_TRD_FLW         = :c_sell_flw  /*** Ver 3.4 bind variable used instead of hard coded value ***/
        AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
        and     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
        AND     FOD_1CLICK_FLG = :c_1clk_flg
        AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
        AND     FSB_PRTFL_ID = :c_prtfl_id 
        AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID ;

   if ( SQLCODE != 0 )
   {
    fn_errlog( c_ServiceName, "S31035", SQLMSG, c_errrmsg.arr  );
    return -1;
   }

    /*** Ver 2.9 starts ***/

   /*** Below query changed to upper case in Ver 3.4 ***/

    EXEC SQL
    SELECT  ABS( NVL ( SUM ( FCO_CLS_QTY ), 0) ),
            ABS( NVL ( SUM ( FCO_CLS_QTY * FCO_CLS_RT ), 0 ) )
    INTO    :l_tot_sell_qty_fco_h,
            :d_sell_val_fco_h
    FROM  FCO_FO_FCLSOUT_HSTRY
    WHERE FCO_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
    AND   FCO_XCHNG_CD        = :c_xchng_cd
    AND   FCO_PRDCT_TYP IN ('F','U','P')
    AND   FCO_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')
    AND   FCO_UNDRLYNG        = :c_undrlyng
    AND   FCO_EXPRY_DT        = :c_expry_dt
    AND   FCO_EXER_TYP        = :c_exrc_typ
    AND   FCO_ORDR_FLW        = :c_buy_flw ;  /*** Ver 3.4 bind variable used instead of hard coded value ***/

   if ( SQLCODE != 0 )
   {
     fn_errlog( c_ServiceName, "S31040", SQLMSG, c_errrmsg.arr  );
     return -1;
   }

    /*** Below query changed to upper case in Ver 3.4 ***/

    EXEC SQL
    SELECT  ABS( NVL ( SUM ( FCO_CLS_QTY ), 0) ),
            ABS( NVL ( SUM ( FCO_CLS_QTY * FCO_CLS_RT ), 0 ) )
    INTO    :l_tot_sell_qty_fco_m,
            :d_sell_val_fco_m
    FROM  FCO_FO_FCLSOUT
    WHERE FCO_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
    AND   FCO_XCHNG_CD        = :c_xchng_cd
    AND   FCO_PRDCT_TYP IN ('F','U','P')
    AND   FCO_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')
    AND   FCO_UNDRLYNG        = :c_undrlyng
    AND   FCO_EXPRY_DT        = :c_expry_dt
    AND   FCO_EXER_TYP        = :c_exrc_typ
    AND   FCO_ORDR_FLW        = :c_buy_flw ;


   if ( SQLCODE != 0 )
   {
     fn_errlog( c_ServiceName, "S31045", SQLMSG, c_errrmsg.arr  );
     return -1;
   }


    l_tot_sell_qty = l_tot_sell_qty_m + l_tot_sell_qty_h + l_tot_sell_qty_fco_m + l_tot_sell_qty_fco_h; /*** fco added in Ver 2.9 ***/
    d_sell_val = d_sell_val_m + d_sell_val_h + d_sell_val_fco_m + d_sell_val_fco_h;  /*** fco added in Ver 2.9 ***/

    if(DEBUG_MSG_LVL_3)
    {
      fn_userlog(c_ServiceName,"Total Sell Qty Is ;%ld:",l_tot_sell_qty); /*** Ver 2.9 ***/
      fn_userlog(c_ServiceName,"Total Sell Value Is ;%lf:",d_sell_val); /*** Ver 2.9 ***/
    }

    EXEC SQL ALLOCATE :trd_cursor;

    if ( (l_rec_main_exists == 0 ) && (l_rec_hstry_exists == 1 ) )
      {

       /*** Below query changed to upper case in Ver 3.4 ***/

        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :trd_cursor FOR
              SELECT FTD_EXCTD_QTY,
                     FTD_EXCTD_RT,
                     NVL (FTD_FRS_BRKG, 0),
                     NVL (FTD_CVR_BRKG, 0),
                     FTD_TRD_DT
              FROM FTD_FO_1CLK_TRD_DTLS,fod_fo_1clk_ordr_dtls,FSB_FO1CLICK_STRTGY_BUCKTDTLS
              WHERE   FTD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
              AND     FTD_XCHNG_CD        = :c_xchng_cd
              AND     FTD_PRDCT_TYP IN ('F','P','U') /* Ver 2.2*/
              AND     FTD_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
              AND     FTD_UNDRLYNG        = :c_undrlyng
              AND     FTD_EXPRY_DT        = :c_expry_dt
              AND     FTD_EXER_TYP        = :c_exrc_typ
              AND     FTD_TRD_FLW         = :c_buy_flw /*** Ver 3.4 Bind variable used instead of hard coded value ***/
              AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
              AND     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
              AND     FOD_1CLICK_FLG = :c_1clk_flg
              AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
              AND     FSB_PRTFL_ID = :c_prtfl_id 
              AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID
              UNION ALL                                     /*** FCO UNION ALL added in Ver 2.9 ***/
              SELECT  ABS(FCO_CLS_QTY),
                      FCO_CLS_RT,
                      0,
                      0,
                      FCO_CLS_TM                            /*** Doubt pls confirm ***/
              FROM  FCO_FO_FCLSOUT_HSTRY
              WHERE FCO_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
              AND   FCO_XCHNG_CD        = :c_xchng_cd
              AND   FCO_PRDCT_TYP IN ('F','U','P')
              AND   FCO_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')
              AND   FCO_UNDRLYNG        = :c_undrlyng
              AND   FCO_EXPRY_DT        = :c_expry_dt
              AND   FCO_EXER_TYP        = :c_exrc_typ
              AND   FCO_ORDR_FLW        = :c_sell_flw /*** Ver 3.4 Bind variable used instead of hard coded value ***/
              ORDER BY 5;   /*** Changed order by clause from ftd_trd_dt to 5 ***/
          END;
        END-EXEC;
      }
    else
      {

       /*** Below query changed to upper case in Ver 3.4 ***/

        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :trd_cursor FOR
              SELECT FTD_EXCTD_QTY,
                     FTD_EXCTD_RT,
                     NVL (FTD_FRS_BRKG, 0),
                     NVL (FTD_CVR_BRKG, 0),
                     FTD_TRD_DT
              FROM FTD_FO_TRD_DTLS,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
              WHERE   FTD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
              AND     FTD_XCHNG_CD        = :c_xchng_cd
              AND     FTD_PRDCT_TYP IN ('F','U','P') /* Ver 2.2*/
              AND     FTD_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
              AND     FTD_UNDRLYNG        = :c_undrlyng
              AND     FTD_EXPRY_DT        = :c_expry_dt
              AND     FTD_EXER_TYP        = :c_exrc_typ
              AND     FTD_TRD_FLW         = :c_buy_flw /*** Ver 3.4 Bind variable used instead of hard coded value ***/
              AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
              AND     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
              AND     FOD_1CLICK_FLG = :c_1clk_flg
              AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
              AND     FSB_PRTFL_ID = :c_prtfl_id 
              AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID
              UNION ALL
              SELECT FTD_EXCTD_QTY,
                     FTD_EXCTD_RT,
                     NVL (FTD_FRS_BRKG, 0),
                     NVL (FTD_CVR_BRKG, 0),
                     FTD_TRD_DT
              FROM FTD_FO_1CLK_TRD_DTLS,fod_fo_1clk_ordr_dtls,FSB_FO1CLICK_STRTGY_BUCKTDTLS
              WHERE   FTD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
              AND     FTD_XCHNG_CD        = :c_xchng_cd
              AND     FTD_PRDCT_TYP IN ('F','U','P') /* Ver 2.2*/
              AND     FTD_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
              AND     FTD_UNDRLYNG        = :c_undrlyng
              AND     FTD_EXPRY_DT        = :c_expry_dt
              AND     FTD_EXER_TYP        = :c_exrc_typ
              AND     FTD_TRD_FLW         = :c_buy_flw /*** Ver 3.4 Bind variable used instead of hard coded value ***/
              AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
              AND     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
              AND     FOD_1CLICK_FLG = :c_1clk_flg
              AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
              AND     FSB_PRTFL_ID = :c_prtfl_id 
              AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID
              UNION ALL                                     /*** FCO UNION ALL added in Ver 2.9 ***/
              SELECT  ABS(FCO_CLS_QTY),
                      FCO_CLS_RT,
                      0,
                      0,
                      FCO_CLS_TM                            /*** Doubt pls confirm ***/
              FROM  FCO_FO_FCLSOUT
              WHERE FCO_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
              AND   FCO_XCHNG_CD        = :c_xchng_cd
              AND   FCO_PRDCT_TYP IN ('F','U','P')
              AND   FCO_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')
              AND   FCO_UNDRLYNG        = :c_undrlyng
              AND   FCO_EXPRY_DT        = :c_expry_dt
              AND   FCO_EXER_TYP        = :c_exrc_typ
              AND   FCO_ORDR_FLW        = :c_sell_flw /*** Ver 3.4 Bind variable used instead of hard coded value ***/
              UNION ALL                                     /*** FCO UNION ALL added in Ver 2.9 ***/
              SELECT  ABS(FCO_CLS_QTY),
                      FCO_CLS_RT,
                      0,
                      0,
                      FCO_CLS_TM                            /*** Doubt pls confirm ***/
              FROM  FCO_FO_FCLSOUT_HSTRY
              WHERE FCO_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
              AND   FCO_XCHNG_CD        = :c_xchng_cd
              AND   FCO_PRDCT_TYP IN ('F','U','P')
              AND   FCO_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')
              AND   FCO_UNDRLYNG        = :c_undrlyng
              AND   FCO_EXPRY_DT        = :c_expry_dt
              AND   FCO_EXER_TYP        = :c_exrc_typ
              AND   FCO_ORDR_FLW        = :c_sell_flw /*** Ver 3.4 Bind variable used instead of hard coded value ***/
              ORDER BY 5;
          END;
        END-EXEC;
      }

      li_bal_qty = l_tot_sell_qty;
      if(DEBUG_MSG_LVL_3)
      {
        fn_userlog(c_ServiceName,"Initial balance Qty Is ;%ld:",li_bal_qty);  /*** Ver 2.9 ***/
      }

    while ( 1 )
      {
        li_qty_bal = 0; /* Ver 2.1 */

        EXEC SQL
          FETCH :trd_cursor
          INTO :li_exctd_qty,
               :li_exctd_rt,
               :d_frsh_brk,
               :d_cvr_brk,
               :c_trd_dt;
        if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {

            break;
          }
          else
          {
            fn_errlog( c_ServiceName, "S31050", SQLMSG, c_errrmsg.arr  );
            EXEC SQL CLOSE :trd_cursor;
            EXEC SQL FREE :trd_cursor;

            return -1;
          }
        }

        if(DEBUG_MSG_LVL_3)
        {
          fn_userlog(c_ServiceName,"While loop Executed Qty Is ;%ld:",li_exctd_qty);  /*** Ver 2.9 ***/
          fn_userlog(c_ServiceName,"While loop Executed Rate Is ;%ld:",li_exctd_rt);  /*** Ver 2.9 ***/
          fn_userlog(c_ServiceName,"While loop Balance Qty Is ;%ld:",li_bal_qty); /*** Ver 2.9 ***/
        }

      if ( li_bal_qty > 0 )
        {
          if(DEBUG_MSG_LVL_5)
          {
            fn_userlog(c_ServiceName,"Inside li_bal_qty > 0");
            fn_userlog(c_ServiceName,"HERE li_bal_qty is :%ld:",li_bal_qty);
            fn_userlog(c_ServiceName,"HERE li_exctd_qty is :%ld:",li_exctd_qty);
          }
          li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );
          d_buy_val = d_buy_val + ( (double) li_crst_qty * (double)  li_exctd_rt ) +
                      d_frsh_brk + d_cvr_brk;

          li_bal_qty = li_bal_qty - li_crst_qty;

          if ( li_bal_qty == 0 )
          {
            li_uncrst_qty = li_exctd_qty - li_crst_qty;
            d_opn_buy_val = d_opn_buy_val  + ( (double) li_uncrst_qty * (double) li_exctd_rt ) +
                            d_frsh_brk + d_cvr_brk;
          }
        }
        else
        {
          if(DEBUG_MSG_LVL_5)
          {
            fn_userlog(c_ServiceName,"Inside li_bal_qty = 0");
            fn_userlog(c_ServiceName,"Executed Qty Is :%ld:",li_exctd_qty);
          }

          li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
          d_opn_buy_val = d_opn_buy_val  + ( (double) li_exctd_qty * (double)  li_exctd_rt ) +
                          d_frsh_brk + d_cvr_brk;

          if(DEBUG_MSG_LVL_5)
          {
            fn_userlog(c_ServiceName,"Uncrystalised Qty Is :%ld:",li_uncrst_qty);
          }
        }

        /* Ver 2.1 starts*/
        li_cum_exctd_qty = li_cum_exctd_qty + li_exctd_qty;

        if(DEBUG_MSG_LVL_3)
        {
          fn_userlog(c_ServiceName,"Cumulative Executed Qty Is ;%ld:",li_cum_exctd_qty);  /*** Ver 2.9 ***/
        }

        if( (li_cum_exctd_qty  - l_tot_sell_qty) > 0)
        {
          li_qty_bal = fn_minl(li_cum_exctd_qty  - l_tot_sell_qty, li_exctd_qty);
          li_net_qty_bal = li_net_qty_bal + li_qty_bal;
        }

        if ( li_qty_bal > 0 )
        {
          d_net_avg_rt = d_net_avg_rt + (double) li_qty_bal * (double) li_exctd_rt;
        }
        /* Ver 2.1 ends*/

        if(DEBUG_MSG_LVL_3)
        {
          fn_userlog(c_ServiceName,"While loop Net Avg Rate Is ;%lf:",d_net_avg_rt);  /*** Ver 2.9 ***/
          fn_userlog(c_ServiceName,"While loop Net Qty Bal Is ;%ld:",li_net_qty_bal); /*** Ver 2.9 ***/
        }
      }

      EXEC SQL CLOSE :trd_cursor;
      EXEC SQL FREE :trd_cursor;

      d_avg_pr = d_net_avg_rt/(double)li_net_qty_bal; /* Ver 2.1*/

      d_crst_prft = d_sell_val - d_buy_val;

      if( DEBUG_MSG_LVL_5 )
      {
        fn_userlog (c_ServiceName,"BEFORE li_uncrst_qty is :%ld:",li_uncrst_qty);
        fn_userlog (c_ServiceName,"BEFORE st_cntrct_qt.l_lst_trdd_prc is :%ld:",st_cntrct_qt.l_lst_trdd_prc);
        fn_userlog (c_ServiceName,"BEFORE d_opn_buy_val is :%lf:",d_opn_buy_val);
      }

      d_uncrst_prft = ((double) li_uncrst_qty * (double) st_cntrct_qt.l_lst_trdd_prc ) -
                      d_opn_buy_val;

      if( DEBUG_MSG_LVL_5 )
      {
        fn_userlog (c_ServiceName,"INSIDE FUNCTION BUY VAL IS :%lf:",d_buy_val);
        fn_userlog (c_ServiceName,"INSIDE FUNCTION OPEN BUY VAL IS :%lf:",d_opn_buy_val);
        fn_userlog (c_ServiceName,"Inside Function d_crst_prft is :%lf:",d_crst_prft);
        fn_userlog (c_ServiceName,"Inside Function d_uncrst_prft is :%lf:",d_uncrst_prft);
        fn_userlog(c_ServiceName,"sss=============li_uncrst_qty is :%d:",li_uncrst_qty);
        fn_userlog(c_ServiceName,"sss=============d_opn_buy_val is :%lf:",d_opn_buy_val);
        fn_userlog(c_ServiceName,"sss=============d_buy_val is :%lf:",d_buy_val);
        fn_userlog(c_ServiceName,"Avgtrd Pr=============d_avg_pr is :%lf:",d_avg_pr);
      }
}




int fn_sell_opnpsn(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prdct_typ,
                   /* char c_cprdct_typ *** Commented in Ver 2.8 ***/
                   char c_req_typ,
                   char c_strgy_typ, 
                   char c_1clk_flg, char *c_prtfl_id )  /*** Added in ver 2.8 ***/
{

  d_sell_val = 0;
  d_buy_val = 0;
  d_opn_sell_val = 0;
  d_uncrst_prft = 0;
  d_crst_prft = 0;
  li_uncrst_qty = 0;
  /*** d_Ccrst_prft = 0 ;
  d_Cuncrst_prft = 0;  *** Commented in VQC as variable is not used ***/

  /* Ver 2.1 Starts*/
  long int li_qty_bal = 0;
  long int li_cum_exctd_qty = 0;
  li_net_qty_bal = 0;
  d_net_avg_rt = 0;
  /* Ver 2.1 Ends*/

  char c_sell_flw = 'S';   /*** Added in Ver 3.4 ***/
  char c_buy_flw  = 'B';   /*** Added in Ver 3.4 ***/

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Inside Function fn_sell_opnpsn ");
  }
  if( DEBUG_MSG_LVL_5 )
  {
    fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
    fn_userlog(c_ServiceName,"CProduct Type Is :%c:",c_cprdct_typ);
    fn_userlog(c_ServiceName,"Product Type Is :%c:",c_prdct_typ);
    fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
    fn_userlog(c_ServiceName,"Exercise Type Is :%c:",c_exrc_typ);
    fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
    fn_userlog(c_ServiceName," c_prtfl_id Is :%s:",c_prtfl_id);
  }

  /*** Below query changed to upper case in Ver 3.4 ***/


  EXEC SQL
    SELECT  NVL ( SUM ( FTD_EXCTD_QTY ), 0),
            NVL ( SUM ( ( FTD_EXCTD_QTY * FTD_EXCTD_RT ) -
                            NVL ( FTD_FRS_BRKG,0 )           -
                            NVL ( FTD_CVR_BRKG,0 )             ), 0 )
    INTO    :l_tot_buy_qty_m,
            :d_buy_val_m
    FROM    FTD_FO_TRD_DTLS,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
    WHERE   FTD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
    AND     FTD_XCHNG_CD        = :c_xchng_cd
    AND     FTD_PRDCT_TYP IN ('F','U','P')   
    AND     FTD_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')  
    AND     FTD_UNDRLYNG        = :c_undrlyng
    AND     FTD_EXPRY_DT        = :c_expry_dt
    AND     FTD_EXER_TYP        = :c_exrc_typ
    AND     FTD_TRD_FLW         = :c_buy_flw  
    AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
    AND     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
    AND     FOD_1CLICK_FLG = :c_1clk_flg
    AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
    AND     FSB_PRTFL_ID = :c_prtfl_id 
    AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID     ;


    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31055", SQLMSG, c_errrmsg.arr  );
      return -1;
    }

  /*** Below query changed to upper case in Ver 3.4 ***/


  EXEC SQL
    SELECT  NVL ( SUM ( FTD_EXCTD_QTY ), 0),
            NVL ( SUM ( ( FTD_EXCTD_QTY * FTD_EXCTD_RT ) -
                            NVL ( FTD_FRS_BRKG,0 )           -
                            NVL ( FTD_CVR_BRKG,0 )             ), 0 )
    INTO    :l_tot_buy_qty_h,
            :d_buy_val_h
    FROM    FTD_FO_1CLK_TRD_DTLS,fod_fo_1clk_ordr_dtls,FSB_FO1CLICK_STRTGY_BUCKTDTLS
    WHERE   FTD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
    AND     FTD_XCHNG_CD        = :c_xchng_cd
   /* AND     ftd_prdct_typ       = :c_cprdct_typ * Commented in Ver 2.2 */
    AND     FTD_PRDCT_TYP IN ('F','U','P')   /* Ver 2.2 */
    AND     FTD_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
    AND     FTD_UNDRLYNG        = :c_undrlyng
    AND     FTD_EXPRY_DT        = :c_expry_dt
    AND     FTD_EXER_TYP        = :c_exrc_typ
  /***  AND     FTD_TRD_FLW         = 'B';    Commented in Ver 3.4 ***/
    AND     FTD_TRD_FLW         = :c_buy_flw  /*** Ver 3.4 Bind variable used instead of hard coded value ***/
    AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
    AND     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
    AND     FOD_1CLICK_FLG = :c_1clk_flg
    AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
    AND     FSB_PRTFL_ID = :c_prtfl_id 
    AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID ;

   if ( SQLCODE != 0 )
   {
     fn_errlog( c_ServiceName, "S31060", SQLMSG, c_errrmsg.arr  );
     return -1;
   }

   /*** Ver 2.9 starts ***/


    EXEC SQL
    SELECT  ABS(NVL ( SUM ( FCO_CLS_QTY ), 0)),
            ABS(NVL ( SUM ( FCO_CLS_QTY * FCO_CLS_RT ), 0 ))
    INTO    :l_tot_buy_qty_fco_h,
            :d_buy_val_fco_h
    FROM  FCO_FO_FCLSOUT_HSTRY
    WHERE FCO_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
    AND   FCO_XCHNG_CD        = :c_xchng_cd
    AND   FCO_PRDCT_TYP IN ('F','U','P')
    AND   FCO_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')
    AND   FCO_UNDRLYNG        = :c_undrlyng
    AND   FCO_EXPRY_DT        = :c_expry_dt
    AND   FCO_EXER_TYP        = :c_exrc_typ
    AND   FCO_ORDR_FLW        = :c_sell_flw ; /*** Ver 3.4 Bind variable used instead of hard coded value ***/


   if ( SQLCODE != 0 )
   {
     fn_errlog( c_ServiceName, "S31065", SQLMSG, c_errrmsg.arr  );
     return -1;
   }

    EXEC SQL
    SELECT  ABS(NVL ( SUM ( FCO_CLS_QTY ), 0)),
            ABS(NVL ( SUM ( FCO_CLS_QTY * FCO_CLS_RT ), 0 ))
    INTO    :l_tot_buy_qty_fco_m,
            :d_buy_val_fco_m
    FROM  FCO_FO_FCLSOUT
    WHERE FCO_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
    AND   FCO_XCHNG_CD        = :c_xchng_cd
    AND   FCO_PRDCT_TYP IN ('F','U','P')
    AND   FCO_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')
    AND   FCO_UNDRLYNG        = :c_undrlyng
    AND   FCO_EXPRY_DT        = :c_expry_dt
    AND   FCO_EXER_TYP        = :c_exrc_typ
    AND   FCO_ORDR_FLW        = :c_sell_flw ; /*** Ver 3.4 Bind variable used instead of hard coded value ***/

   if ( SQLCODE != 0 )
   {
     fn_errlog( c_ServiceName, "S31070", SQLMSG, c_errrmsg.arr  );
     return -1;
   }

   /*** Ver 2.9 ends ***/

   l_tot_buy_qty = l_tot_buy_qty_m + l_tot_buy_qty_h + l_tot_buy_qty_fco_m + l_tot_buy_qty_fco_h; /*** fco added in Ver 2.9 ***/
   d_buy_val = d_buy_val_m + d_buy_val_h + d_buy_val_fco_m + d_buy_val_fco_h;  /*** fco added in Ver 2.9 ***/


  if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"Total Buy Qty Is ;%ld:",l_tot_buy_qty); /*** Ver 2.9 ***/
    fn_userlog(c_ServiceName,"Total Buy Value Is ;%lf:",d_buy_val); /*** Ver 2.9 ***/
  }

   EXEC SQL ALLOCATE :trd_cursor;

   if ( (l_rec_main_exists == 0 ) && (l_rec_hstry_exists == 1 ) )
      {

       /*** Below query changed to upper case in Ver 3.4 ***/

        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :trd_cursor FOR
              SELECT FTD_EXCTD_QTY,
                     FTD_EXCTD_RT,
                     NVL (FTD_FRS_BRKG, 0),
                     NVL (FTD_CVR_BRKG, 0),
                     FTD_TRD_DT
              FROM FTD_FO_1CLK_TRD_DTLS,fod_fo_1clk_ordr_dtls,FSB_FO1CLICK_STRTGY_BUCKTDTLS
              WHERE   FTD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
              AND     FTD_XCHNG_CD        = :c_xchng_cd
  /*              AND     ftd_prdct_typ       = :c_prdct_typ * Commented in Ver 2.2 */
              AND     FTD_PRDCT_TYP IN ('F','U','P')    /* Ver 2.2*/
              AND     FTD_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
              AND     FTD_UNDRLYNG        = :c_undrlyng
              AND     FTD_EXPRY_DT        = :c_expry_dt
              AND     FTD_EXER_TYP        = :c_exrc_typ
          /***    AND     FTD_TRD_FLW         = 'S'   Commented in Ver 3.4 ***/
              AND     FTD_TRD_FLW         = :c_sell_flw  /*** Ver 3.4 Bind variable used instead of hard coded value ***/
              AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
              AND     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
              AND     FOD_1CLICK_FLG = :c_1clk_flg
              AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
              AND     FSB_PRTFL_ID = :c_prtfl_id 
              AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID 
              UNION ALL                                     /*** FCO UNION ALL added in Ver 2.9 ***/
              SELECT  ABS(FCO_CLS_QTY),
                      FCO_CLS_RT,
                      0,
                      0,
                      FCO_CLS_TM                            /*** Doubt pls confirm ***/
              FROM  FCO_FO_FCLSOUT_HSTRY
              WHERE FCO_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
              AND   FCO_XCHNG_CD        = :c_xchng_cd
              AND   FCO_PRDCT_TYP IN ('F','U','P')
              AND   FCO_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')
              AND   FCO_UNDRLYNG        = :c_undrlyng
              AND   FCO_EXPRY_DT        = :c_expry_dt
              AND   FCO_EXER_TYP        = :c_exrc_typ
              AND   FCO_ORDR_FLW        = :c_buy_flw /*** Ver 3.4 Bind variable used instead of hard coded value ***/
            ORDER BY 5;                               /*** Changed order by clause from ftd_trd_dt to 5 ***/
          END;
        END-EXEC;
      }
      else
      {

      /*** Below query changed to upper case in Ver 3.4 ***/

        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :trd_cursor FOR
              SELECT FTD_EXCTD_QTY,
                     FTD_EXCTD_RT,
                     NVL (FTD_FRS_BRKG, 0),
                     NVL (FTD_CVR_BRKG, 0),
                     FTD_TRD_DT
              FROM FTD_FO_TRD_DTLS,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
              WHERE   FTD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
              AND     FTD_XCHNG_CD        = :c_xchng_cd
      /*        AND     ftd_prdct_typ       = :c_prdct_typ * Commented in Ver 2.2 */
              AND     FTD_PRDCT_TYP IN ('F','U','P')    /* Ver 2.2*/
              AND     FTD_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
              AND     FTD_UNDRLYNG        = :c_undrlyng
              AND     FTD_EXPRY_DT        = :c_expry_dt
              AND     FTD_EXER_TYP        = :c_exrc_typ
         /***     AND     FTD_TRD_FLW         = 'S'   Commented in Ver 3.4 ***/
              AND     FTD_TRD_FLW         = :c_sell_flw /*** Ver 3.4 Bind variable used instead of hard coded value ***/
              AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
              AND     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
              AND     FOD_1CLICK_FLG = :c_1clk_flg
              AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
              AND     FSB_PRTFL_ID = :c_prtfl_id 
              AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID
              UNION ALL
              SELECT FTD_EXCTD_QTY,
                     FTD_EXCTD_RT,
                     NVL (FTD_FRS_BRKG, 0),
                     NVL (FTD_CVR_BRKG, 0),
                     FTD_TRD_DT
              FROM FTD_FO_1CLK_TRD_DTLS,fod_fo_1clk_ordr_dtls,FSB_FO1CLICK_STRTGY_BUCKTDTLS
              WHERE   FTD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
              AND     FTD_XCHNG_CD        = :c_xchng_cd
      /*              AND     ftd_prdct_typ       = :c_prdct_typ * Commented in Ver 2.2 */
              AND     FTD_PRDCT_TYP IN ('F','U','P')    /* Ver 2.2*/
              AND     FTD_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
              AND     FTD_UNDRLYNG        = :c_undrlyng
              AND     FTD_EXPRY_DT        = :c_expry_dt
              AND     FTD_EXER_TYP        = :c_exrc_typ
         /***     AND     FTD_TRD_FLW         = 'S'  Commented in Ver 3.4 ***/
              AND     FTD_TRD_FLW         = :c_sell_flw /*** Ver 3.4 Bind variable used instead of hard coded value ***/
              AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
              AND     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
              AND     FOD_1CLICK_FLG = :c_1clk_flg
              AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
              AND     FSB_PRTFL_ID = :c_prtfl_id 
              AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID
              UNION ALL                                     /*** FCO UNION ALL added in Ver 2.9 ***/
              SELECT  ABS(FCO_CLS_QTY),
                      FCO_CLS_RT,
                      0,
                      0,
                      FCO_CLS_TM                            /*** Doubt pls confirm ***/
              FROM  FCO_FO_FCLSOUT
              WHERE FCO_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
              AND   FCO_XCHNG_CD        = :c_xchng_cd
              AND   FCO_PRDCT_TYP IN ('F','U','P')
              AND   FCO_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')
              AND   FCO_UNDRLYNG        = :c_undrlyng
              AND   FCO_EXPRY_DT        = :c_expry_dt
              AND   FCO_EXER_TYP        = :c_exrc_typ
              AND   FCO_ORDR_FLW        = :c_buy_flw /*** Ver 3.4 Bind variable used instead of hard coded value ***/
              UNION ALL                                     /*** FCO UNION ALL added in Ver 2.9 ***/
              SELECT  ABS(FCO_CLS_QTY),
                      FCO_CLS_RT,
                      0,
                      0,
                      FCO_CLS_TM                            /*** Doubt pls confirm ***/
              FROM  FCO_FO_FCLSOUT_HSTRY
              WHERE FCO_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
              AND   FCO_XCHNG_CD        = :c_xchng_cd
              AND   FCO_PRDCT_TYP IN ('F','U','P')
              AND   FCO_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')
              AND   FCO_UNDRLYNG        = :c_undrlyng
              AND   FCO_EXPRY_DT        = :c_expry_dt
              AND   FCO_EXER_TYP        = :c_exrc_typ
        /***      AND   FCO_ORDR_FLW        = 'B'   Commented in Ver 3.4 ***/
              AND   FCO_ORDR_FLW        = :c_buy_flw /*** Ver 3.4 Bind variable used instead of hard coded value ***/
              ORDER BY 5;
          END;
        END-EXEC;
      }
      li_bal_qty = l_tot_buy_qty;

      if(DEBUG_MSG_LVL_3)
      {
        fn_userlog(c_ServiceName,"Initial balance Qty Is ;%ld:",li_bal_qty);  /*** Ver 2.9 ***/
      }
    while ( 1 )
      {
      li_qty_bal = 0; /* Ver 2.1 */

        EXEC SQL
          FETCH :trd_cursor
          INTO :li_exctd_qty,
               :li_exctd_rt,
               :d_frsh_brk,
               :d_cvr_brk,
               :c_trd_dt;
        if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {
            break;
          }

          else
          {
            fn_errlog( c_ServiceName, "S31075", SQLMSG, c_errrmsg.arr  );
            EXEC SQL CLOSE :trd_cursor;
            EXEC SQL FREE :trd_cursor;

            /*** Commented in VQC ***

            EXEC SQL CLOSE :cont_cursor;
            EXEC SQL FREE :cont_cursor;

            *************************/
          }
        }

        if(DEBUG_MSG_LVL_3)
        {
          fn_userlog(c_ServiceName,"While loop Executed Qty Is ;%ld:",li_exctd_qty);  /*** Ver 2.9 ***/
          fn_userlog(c_ServiceName,"While loop Executed Rate Is ;%ld:",li_exctd_rt);  /*** Ver 2.9 ***/
          fn_userlog(c_ServiceName,"While loop Balance Qty Is ;%ld:",li_bal_qty);     /*** Ver 2.9 ***/
        }

        if ( li_bal_qty > 0 )
        {
          li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );
          d_sell_val = d_sell_val + ( (double) li_crst_qty * (double)  li_exctd_rt ) -
                      d_frsh_brk - d_cvr_brk;
          li_bal_qty = li_bal_qty - li_crst_qty;

          if ( li_bal_qty == 0 )
          {
            if(DEBUG_MSG_LVL_5)
            {
              fn_userlog(c_ServiceName,"Inside SELL li_bal_qty == 0 ");
            }

            li_uncrst_qty = li_exctd_qty - li_crst_qty;
            d_opn_sell_val = d_opn_sell_val  + ( (double) li_uncrst_qty * (double) li_exctd_rt ) -
                             d_frsh_brk - d_cvr_brk;
          }
        }


         else
        {
          li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
          d_opn_sell_val = d_opn_sell_val + ( (double) li_exctd_qty * (double) li_exctd_rt ) -
                          d_frsh_brk - d_cvr_brk;
        }

        /* Ver 2.1 Starts */
        li_cum_exctd_qty = li_cum_exctd_qty + li_exctd_qty;

        if(DEBUG_MSG_LVL_3)
        {
          fn_userlog(c_ServiceName,"Cumulative Executed Qty Is ;%ld:",li_cum_exctd_qty);  /*** Ver 2.9 ***/
        }

        if( (li_cum_exctd_qty  - l_tot_buy_qty) > 0)
        {
          li_qty_bal = fn_minl(li_cum_exctd_qty  - l_tot_buy_qty, li_exctd_qty);
          li_net_qty_bal = li_net_qty_bal + li_qty_bal;
        }

        if ( li_qty_bal > 0 )
        {
          d_net_avg_rt = d_net_avg_rt + (double) li_qty_bal * (double) li_exctd_rt;
        }
        /* Ver 2.1 Ends */

        if(DEBUG_MSG_LVL_3)
        {
          fn_userlog(c_ServiceName,"While loop Net Avg Rate Is ;%lf:",d_net_avg_rt);  /*** Ver 2.9 ***/
          fn_userlog(c_ServiceName,"While loop Net Qty Bal Is ;%ld:",li_net_qty_bal); /*** Ver 2.9 ***/
        }
      }

  EXEC SQL CLOSE :trd_cursor;
  EXEC SQL FREE :trd_cursor;

  if(DEBUG_MSG_LVL_5)
  {
    fn_userlog(c_ServiceName,"d_sell_val [%lf]",d_sell_val);
    fn_userlog(c_ServiceName,"d_buy_val [%lf]",d_buy_val);
    fn_userlog(c_ServiceName,"d_opn_sell_val [%lf]",d_opn_sell_val);
    fn_userlog(c_ServiceName,"li_uncrst_qty [%ld]",li_uncrst_qty);
    fn_userlog(c_ServiceName,"st_cntrct_qt.l_lst_trdd_prc [%ld]",st_cntrct_qt.l_lst_trdd_prc);
  }

  d_avg_pr = d_net_avg_rt/(double)li_net_qty_bal; /* Ver 2.1 */

  d_crst_prft = d_sell_val - d_buy_val;
  d_uncrst_prft = d_opn_sell_val -
                 ((double) li_uncrst_qty * (double)st_cntrct_qt.l_lst_trdd_prc );

  if( DEBUG_MSG_LVL_5 )
  {
    fn_userlog(c_ServiceName,"Inside SELL Function d_uncrst_prft is :%lf:",d_uncrst_prft);
    fn_userlog(c_ServiceName,"Inside SELL Function d_crst_prft is :%lf:",d_crst_prft);
    fn_userlog(c_ServiceName,"Avgtrd Pr=============d_avg_pr is :%lf:",d_avg_pr);
  }
}


int fn_sqroff_pstn(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prdct_typ,
                   /* char c_cprdct_typ   *** Commented in Ver 2.8 ***/
                   char c_req_typ,
                   char c_strgy_typ, 
                   char c_1clk_flg , char *c_prtfl_id)  /*** Added in ver 2.8 ***/
{
  d_buy_val  = 0;
  d_sell_val = 0;
  d_cls_val  = 0;
  d_uncrst_prft = 0;
  d_crst_prft = 0;
  /*** d_Ccrst_prft = 0 ;
  d_Cuncrst_prft = 0;  *** Commented in VQC as variable is not used ***/

  char c_sell_flw = 'S';   /*** Added in Ver 3.4 ***/
  char c_buy_flw  = 'B';   /*** Added in Ver 3.4 ***/

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"INSIDE POSITION SQR-OFF");
  }

  if( DEBUG_MSG_LVL_5 )
  {
    fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
    fn_userlog(c_ServiceName,"CProduct Type Is :%c:",c_cprdct_typ);
    fn_userlog(c_ServiceName,"Product Type Is :%c:",c_prdct_typ);
    fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
    fn_userlog(c_ServiceName,"Exercise Type Is :%c:",c_exrc_typ);
    fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
  }

  /*** Below query changed to upper case in Ver 3.4 ***/



  EXEC SQL
    SELECT  NVL ( SUM ( FTD_EXCTD_QTY ), 0),
            NVL ( SUM ( ( FTD_EXCTD_QTY * FTD_EXCTD_RT ) -
                          NVL ( FTD_FRS_BRKG,0 )           -
                          NVL ( FTD_CVR_BRKG,0 )             ), 0 )
    INTO    :l_tot_sell_qty_m,
            :d_sell_val_m
    FROM    FTD_FO_TRD_DTLS,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
    WHERE   FTD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
    AND     FTD_XCHNG_CD        = :c_xchng_cd
  /*    AND     ftd_prdct_typ       = :c_cprdct_typ  *Commented in ver 2.2 */
    AND     FTD_PRDCT_TYP IN ('F','U','P')    /* Ver 2.2*/
    AND     FTD_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
    AND     FTD_UNDRLYNG        = :c_undrlyng
    AND     FTD_EXPRY_DT        = :c_expry_dt
    AND     FTD_EXER_TYP        = :c_exrc_typ
  /***  AND     FTD_TRD_FLW         = 'S';  Commented in Ver 3.4 ***/
    AND     FTD_TRD_FLW         = :c_sell_flw  /*** Ver 3.4 Bind variable used instead of hard coded value ***/
    AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
    AND     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
    AND     FOD_1CLICK_FLG = :c_1clk_flg
    AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
    AND     FSB_PRTFL_ID = :c_prtfl_id 
    AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID  ;

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31080", SQLMSG, c_errrmsg.arr  );
      return -1;
    }


  EXEC SQL
    SELECT  NVL ( SUM ( FTD_EXCTD_QTY ), 0),
            NVL ( SUM ( ( FTD_EXCTD_QTY * FTD_EXCTD_RT ) -
                          NVL ( FTD_FRS_BRKG,0 )           -
                          NVL ( FTD_CVR_BRKG,0 )             ), 0 )
    INTO    :l_tot_sell_qty_h,
            :d_sell_val_h
    FROM    FTD_FO_1CLK_TRD_DTLS,fod_fo_1clk_ordr_dtls,FSB_FO1CLICK_STRTGY_BUCKTDTLS
    WHERE   FTD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
    AND     FTD_XCHNG_CD        = :c_xchng_cd
   /* AND     ftd_prdct_typ       = :c_cprdct_typ *Commented in ver 2.2 */
    AND     FTD_PRDCT_TYP IN ('F','U','P')    /* Ver 2.2*/
    AND     FTD_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
    AND     FTD_UNDRLYNG        = :c_undrlyng
    AND     FTD_EXPRY_DT        = :c_expry_dt
    AND     FTD_EXER_TYP        = :c_exrc_typ
 /***   AND     FTD_TRD_FLW         = 'S';  Commented in Ver 3.4 ***/
     AND     FTD_TRD_FLW         = :c_sell_flw  /*** Ver 3.4 Bind variable used instead of hard coded value ***/
     AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
     AND     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
     AND     FOD_1CLICK_FLG = :c_1clk_flg
     AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
     AND     FSB_PRTFL_ID = :c_prtfl_id 
     AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID     ;

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31085", SQLMSG, c_errrmsg.arr  );
      return -1;
    }

    l_tot_sell_qty = l_tot_sell_qty_m + l_tot_sell_qty_h;
    d_sell_val = d_sell_val_m + d_sell_val_h;

   /*** Below query changed to upper case in Ver 3.4 ***/

    EXEC SQL
      SELECT  NVL ( SUM ( FTD_EXCTD_QTY ), 0),
              NVL ( SUM ( ( FTD_EXCTD_QTY * FTD_EXCTD_RT ) -
                            NVL ( FTD_FRS_BRKG,0 )           -
                            NVL ( FTD_CVR_BRKG,0 )             ), 0 )
      INTO    :l_tot_buy_qty_m,
              :d_buy_val_m
      FROM    FTD_FO_TRD_DTLS,FOD_FO_ORDR_DTLS,FSB_FO1CLICK_STRTGY_BUCKTDTLS
      WHERE   FTD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
      AND     FTD_XCHNG_CD        = :c_xchng_cd
  /*      AND     ftd_prdct_typ       = :c_prdct_typ *Commented in ver 2.2 */
      AND     FTD_PRDCT_TYP IN ('F','U','P')    /* Ver 2.2*/
      AND     FTD_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
      AND     FTD_UNDRLYNG        = :c_undrlyng
      AND     FTD_EXPRY_DT        = :c_expry_dt
      AND     FTD_EXER_TYP        = :c_exrc_typ
  /***    AND     FTD_TRD_FLW         = 'B';   Commented in Ver 3.4 ***/
      AND     FTD_TRD_FLW         = :c_buy_flw  /*** Ver 3.4 Bind variable used instead of hard coded value ***/
      AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
      AND     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
      AND     FOD_1CLICK_FLG = :c_1clk_flg
      AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
      AND     FSB_PRTFL_ID = :c_prtfl_id 
      AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID     ;


      if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31090", SQLMSG, c_errrmsg.arr  );
        return -1;
      }


  EXEC SQL
    SELECT  NVL ( SUM ( FTD_EXCTD_QTY ), 0),
            NVL ( SUM ( ( FTD_EXCTD_QTY * FTD_EXCTD_RT ) -
                          NVL ( FTD_FRS_BRKG,0 )           -
                          NVL ( FTD_CVR_BRKG,0 )             ), 0 )
    INTO    :l_tot_buy_qty_h,
            :d_buy_val_h
    FROM    FTD_FO_1CLK_TRD_DTLS,fod_fo_1clk_ordr_dtls,FSB_FO1CLICK_STRTGY_BUCKTDTLS
    WHERE   FTD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
    AND     FTD_XCHNG_CD        = :c_xchng_cd
   /* AND     ftd_prdct_typ       = :c_prdct_typ *Commented in ver 2.2 */
    AND     FTD_PRDCT_TYP IN ('F','U','P')    /* Ver 2.2*/
    AND     FTD_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
    AND     FTD_UNDRLYNG        = :c_undrlyng
    AND     FTD_EXPRY_DT        = :c_expry_dt
    AND     FTD_EXER_TYP        = :c_exrc_typ
    /***AND     FTD_TRD_FLW         = 'B';     Commented in Ver 3.4 ***/
    AND     FTD_TRD_FLW         = :c_buy_flw  /*** Ver 3.4 Bind variable used instead of hard coded value ***/
    AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
    AND     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
    AND     FOD_1CLICK_FLG = :c_1clk_flg
    AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
    AND     FSB_PRTFL_ID = :c_prtfl_id 
    AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID     ;

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31095", SQLMSG, c_errrmsg.arr  );
      return -1;
    }

  EXEC SQL
    /*** SELECT NVL ( ( fco_cls_qty * fco_cls_rt ), 0 ) ** Commented in 2.5 ***/
    SELECT NVL( (SUM( FCO_CLS_QTY * FCO_CLS_RT )), 0 )    /*** Ver 2.5 ***/
    INTO :d_cls_val_m
    FROM FCO_FO_FCLSOUT
    WHERE FCO_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
    AND   FCO_XCHNG_CD        = :c_xchng_cd
  /*    AND   fco_prdct_typ       = :c_prdct_typ   *Commented in Ver 2.2 */
    AND   FCO_PRDCT_TYP IN ('F','U','P')   /* Ver 2.2 */
    AND   FCO_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
    AND   FCO_UNDRLYNG        = :c_undrlyng
    AND   FCO_EXPRY_DT        = :c_expry_dt
    AND   FCO_EXER_TYP        = :c_exrc_typ;

    if ( SQLCODE != 0 )
    {
      if ( SQLCODE != NO_DATA_FOUND )
      {
        fn_errlog( c_ServiceName, "S31100", SQLMSG, c_errrmsg.arr  );
        return -1;
      }
      else
      {
        d_cls_val_m = 0;
       }
    }

  EXEC SQL
    /*** SELECT NVL ( ( fco_cls_qty * fco_cls_rt ), 0 ) ** Commented in 2.5 ***/
    SELECT NVL( (SUM( FCO_CLS_QTY * FCO_CLS_RT )), 0 )   /*** Ver 2.5 ***/
    INTO :d_cls_val_h
    FROM FCO_FO_FCLSOUT_HSTRY
    WHERE FCO_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
    AND   FCO_XCHNG_CD        = :c_xchng_cd
  /*    AND   fco_prdct_typ       = :c_prdct_typ *Commented in Ver 2.2 */
    AND   FCO_PRDCT_TYP IN ('F','U','P')   /* Ver 2.2 */
    AND   FCO_PRDCT_TYP LIKE DECODE(:c_req_typ,'O',:c_prdct_typ,'%')    /* Added in Ver 2.8 */
    AND   FCO_UNDRLYNG        = :c_undrlyng
    AND   FCO_EXPRY_DT        = :c_expry_dt
    AND   FCO_EXER_TYP        = :c_exrc_typ;

    if ( SQLCODE != 0 )
    {
      if ( SQLCODE != NO_DATA_FOUND )
      {
        fn_errlog( c_ServiceName, "S31105", SQLMSG, c_errrmsg.arr  );
        return -1;
      }
      else
      {
        d_cls_val_h = 0;
      }
    }
  d_cls_val = d_cls_val_m + d_cls_val_h;

  l_tot_buy_qty = l_tot_buy_qty_m + l_tot_buy_qty_h;
  d_buy_val = d_buy_val_m + d_buy_val_h;

  d_crst_prft = d_sell_val - d_buy_val - d_cls_val;

  if( DEBUG_MSG_LVL_5 )
  {
    fn_userlog(c_ServiceName,"SQR-OFF d_sell_val Is :%lf:",d_sell_val);
    fn_userlog(c_ServiceName,"SQR-OFF d_buy_val Is :%lf:",d_buy_val);
  }

  d_uncrst_prft = 0.0;

  if( DEBUG_MSG_LVL_5 )
  {
    fn_userlog(c_ServiceName,"Inside SQR-Off Crystalised Profit is :%lf:",d_crst_prft);
  }

}


int fn_optn_pstn(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prd_typ,
                   char c_req_typ,
                   char c_strgy_typ,
                   char c_1clk_flg,char c_opt_typ,long l_strike_prc ,long l_opnpstn_qty, char *c_prtfl_id )  /*** Added in ver 2.8 ***/
{

double d_as_val_h=0;
double d_as_val_m=0.0;
double d_ex_val_h = 0.0;
double d_ex_val_m = 0.0;
double d_ex_val = 0.0;
double d_as_val = 0.0;
double d_total_prft = 0.0;
long li_cmp =0;
double d_buy_val_mavg=0;
long l_buy_qty_mavg=0;
double d_buy_val_havg=0;
long l_buy_qty_havg=0;
double d_sell_val_mavg=0;
long l_sell_qty_mavg=0;
double d_sell_val_havg=0;
double l_sell_qty_havg=0;

li_cmp = st_cntrct_qt.l_lst_trdd_prc;

    EXEC SQL
      SELECT  NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) -
                          NVL ( ftd_frs_brkg,0 )           -
                           NVL ( ftd_cvr_brkg,0 )             ), 0 ),
              NVL(SUM(FTD_EXCTD_QTY * FTD_EXCTD_RT ),0) SUM_TOTAL_VAL ,
              NVL(SUM (FTD_EXCTD_QTY ),0) SUM_TOTAL_QTY
        INTO    :d_buy_val_m,
                :d_buy_val_mavg,
                :l_buy_qty_mavg
        FROM    ftd_fo_trd_dtls,fod_fo_ordr_dtls,FSB_FO1CLICK_STRTGY_BUCKTDTLS
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ     IN  ('I','O')    /*** Ver 2.1 ***/
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = :c_exrc_typ
        AND     ftd_opt_typ         = :c_opt_typ
        AND     ftd_strk_prc        = :l_strike_prc
        AND     ftd_trd_flw         = 'B'
        AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
        and     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
        AND     FOD_1CLICK_FLG = :c_1clk_flg
        AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
        AND     FSB_PRTFL_ID = :c_prtfl_id 
        AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID     ;


    if ( SQLCODE != 0 )
    {
      /*tpcommit(0);*/        /*1.6*/
      fn_errlog( c_ServiceName, "S31110", SQLMSG, c_errrmsg.arr  );
      return -1;
    }

    EXEC SQL
      SELECT  NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) -
                          NVL ( ftd_frs_brkg,0 )           -
                           NVL ( ftd_cvr_brkg,0 )             ), 0 ),
              NVL(SUM(FTD_EXCTD_QTY * FTD_EXCTD_RT ),0) SUM_TOTAL_VAL ,
              NVL(SUM (FTD_EXCTD_QTY ),0) SUM_TOTAL_QTY
      INTO    :d_buy_val_h,
              :d_buy_val_havg,
              :l_buy_qty_havg
      FROM    FTD_FO_1CLK_TRD_DTLS,fod_fo_1clk_ordr_dtls,FSB_FO1CLICK_STRTGY_BUCKTDTLS
      WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND     ftd_xchng_cd        = :c_xchng_cd
      AND     ftd_prdct_typ       IN  ('I','O')    /*** Ver 2.1 ***/
      AND     ftd_undrlyng        = :c_undrlyng
      AND     ftd_expry_dt        = :c_expry_dt
      AND     ftd_exer_typ        = :c_exrc_typ
      AND     ftd_opt_typ         = :c_opt_typ
      AND     ftd_strk_prc        = :l_strike_prc
      AND     ftd_trd_flw         = 'B'
        AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
        and     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
        AND     FOD_1CLICK_FLG = :c_1clk_flg
        AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
        AND     FSB_PRTFL_ID = :c_prtfl_id 
        AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID     ;
    if ( SQLCODE != 0 )
    {
      /*tpcommit(0);*/      /*1.6*/
      fn_errlog( c_ServiceName, "S31115", SQLMSG, c_errrmsg.arr  );
      return -1;
    }

    d_buy_val = d_buy_val_m + d_buy_val_h;

     EXEC SQL
      SELECT  NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) -
                          NVL ( ftd_frs_brkg,0 )           -
                          NVL ( ftd_cvr_brkg,0 )             ), 0 ),
              NVL(SUM(FTD_EXCTD_QTY * FTD_EXCTD_RT ),0) SUM_TOTAL_VAL ,
              NVL(SUM (FTD_EXCTD_QTY ),0) SUM_TOTAL_QTY
      INTO    :d_sell_val_m,
              :d_sell_val_mavg,
              :l_sell_qty_mavg
      FROM    ftd_fo_trd_dtls,fod_fo_ordr_dtls,FSB_FO1CLICK_STRTGY_BUCKTDTLS
      WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND     ftd_xchng_cd        = :c_xchng_cd
      AND     ftd_prdct_typ   IN  ('I','O')    /*** Ver 2.1 ***/
      AND     ftd_undrlyng        = :c_undrlyng
      AND     ftd_expry_dt        = :c_expry_dt
      AND     ftd_exer_typ        = :c_exrc_typ
      AND     ftd_opt_typ         = :c_opt_typ
      AND     ftd_strk_prc        = :l_strike_prc
      AND     ftd_trd_flw         = 'S'
        AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
        and     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
        AND     FOD_1CLICK_FLG = :c_1clk_flg
        AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
        AND     FSB_PRTFL_ID = :c_prtfl_id 
        AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID     ;
    if ( SQLCODE != 0 )
    {
      /*tpcommit(0);*/      /*1.6*/
      fn_errlog( c_ServiceName, "S31120", SQLMSG, c_errrmsg.arr  );
      return -1;
    }


    EXEC SQL
      SELECT  NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) -
                          NVL ( ftd_frs_brkg,0 )           -
                          NVL ( ftd_cvr_brkg,0 )             ), 0 ),
              NVL(SUM(FTD_EXCTD_QTY * FTD_EXCTD_RT ),0) SUM_TOTAL_VAL ,
              NVL(SUM (FTD_EXCTD_QTY ),0) SUM_TOTAL_QTY
      INTO    :d_sell_val_h,
              :d_sell_val_havg,
              :l_sell_qty_havg
      FROM    FTD_FO_1CLK_TRD_DTLS,fod_fo_1clk_ordr_dtls,FSB_FO1CLICK_STRTGY_BUCKTDTLS
      WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND     ftd_xchng_cd        = :c_xchng_cd
      AND     ftd_prdct_typ      IN  ('I','O')    /*** Ver 2.1 ***/
      AND     ftd_undrlyng        = :c_undrlyng
      AND     ftd_expry_dt        = :c_expry_dt
      AND     ftd_exer_typ        = :c_exrc_typ
      AND     ftd_opt_typ         = :c_opt_typ
      AND     ftd_strk_prc        = :l_strike_prc
      AND     ftd_trd_flw         = 'S'
        AND     FOD_CLM_MTCH_ACCNT=FTD_CLM_MTCH_ACCNT(+)
        and     FOD_ORDR_RFRNC=FTD_ORDR_RFRNC(+)
        AND     FOD_1CLICK_FLG = :c_1clk_flg
        AND     FSB_CUST_RCMEND_FLG LIKE :c_strgy_typ
        AND     FSB_PRTFL_ID = :c_prtfl_id 
        AND     FSB_PRTFL_ID=FOD_1CLICK_PRTFL_ID     ;
    if ( SQLCODE != 0 )
    {
      /*tpcommit(0);*/      /*1.6*/
      fn_errlog( c_ServiceName, "S31125", SQLMSG, c_errrmsg.arr  );
      return -1;
    }


    d_sell_val = d_sell_val_m + d_sell_val_h;

    fn_userlog(c_ServiceName,"d_buy_val_mavg :%lf:",d_buy_val_mavg);
    fn_userlog(c_ServiceName,"d_buy_val_havg :%lf:",d_buy_val_havg);
    fn_userlog(c_ServiceName,"d_sell_val_mavg :%lf:",d_sell_val_mavg);
    fn_userlog(c_ServiceName,"d_sell_val_havg :%lf:",d_sell_val_havg);
    fn_userlog(c_ServiceName,"l_buy_qty_mavg :%ld:",l_buy_qty_mavg);
    fn_userlog(c_ServiceName,"l_buy_qty_havg :%ld:",l_buy_qty_havg);
    fn_userlog(c_ServiceName,"l_sell_qty_mav :%ld:",l_sell_qty_mavg);
    fn_userlog(c_ServiceName,"l_sell_qty_mav :%ld:",l_sell_qty_havg);

    if( l_buy_qty_mavg !=0 || l_buy_qty_havg!=0 ||
        l_sell_qty_mavg!=0 || l_sell_qty_havg!=0
      )
    { 
       d_avg_pr = ( d_buy_val_mavg + d_buy_val_havg + d_sell_val_mavg + d_sell_val_havg ) / (double)(l_buy_qty_mavg+l_buy_qty_havg+l_sell_qty_mavg+l_sell_qty_havg);
    }

    fn_userlog(c_ServiceName,"d_avg_pr Option :%lf:",d_avg_pr);

    if ( c_opt_typ == 'P' )
    {
      EXEC SQL
        SELECT NVL ( SUM (fec_exrc_qty * (fec_strk_prc -
                                                 fec_curr_mkt_prc ) ), 0 )
        INTO :d_ex_val_m
        FROM fec_fo_exrc_conf
        WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fec_xchng_cd        = :c_xchng_cd
        AND   fec_prdct_typ       = :c_prd_typ
        AND   fec_undrlyng        = :c_undrlyng
        AND   fec_expry_dt        = :c_expry_dt
        AND   fec_exer_typ        = :c_exrc_typ
        AND   fec_opt_typ         = :c_opt_typ
        AND   fec_strk_prc        = :l_strike_prc;
    }
    else
    {
      EXEC SQL
        SELECT NVL ( SUM (fec_exrc_qty * (fec_curr_mkt_prc -
                                                   fec_strk_prc ) ), 0 )
        INTO :d_ex_val_m
        FROM fec_fo_exrc_conf
        WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fec_xchng_cd        = :c_xchng_cd
        AND   fec_prdct_typ       = :c_prd_typ
        AND   fec_undrlyng        = :c_undrlyng
        AND   fec_expry_dt        = :c_expry_dt
        AND   fec_exer_typ        = :c_exrc_typ
        AND   fec_opt_typ         = :c_opt_typ
       AND   fec_strk_prc        = :l_strike_prc;
    }

    if ( SQLCODE != 0 )
    {
      /*tpcommit(0);*/      /*1.6*/
      fn_errlog( c_ServiceName, "S31130", SQLMSG, c_errrmsg.arr  );
      return -1;
    }

    if ( c_opt_typ == 'P' )
    {
      EXEC SQL
        SELECT NVL ( SUM (fec_exrc_qty * (fec_strk_prc -
                                                  fec_curr_mkt_prc ) ), 0 )
        INTO :d_ex_val_h
        FROM fec_fo_exrc_conf_hstry
        WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fec_xchng_cd        = :c_xchng_cd
        AND   fec_prdct_typ       = :c_prd_typ
        AND   fec_undrlyng        = :c_undrlyng
        AND   fec_expry_dt        = :c_expry_dt
        AND   fec_exer_typ        = :c_exrc_typ
        AND   fec_opt_typ         = :c_opt_typ
        AND   fec_strk_prc        = :l_strike_prc;
    }
    else
    {
      EXEC SQL
        SELECT NVL ( SUM (fec_exrc_qty * (fec_curr_mkt_prc -
                                                 fec_strk_prc ) ), 0 )
        INTO :d_ex_val_h
        FROM fec_fo_exrc_conf_hstry
        WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fec_xchng_cd        = :c_xchng_cd
        AND   fec_prdct_typ       = :c_prd_typ
        AND   fec_undrlyng        = :c_undrlyng
        AND   fec_expry_dt        = :c_expry_dt
        AND   fec_exer_typ        = :c_exrc_typ
        AND   fec_opt_typ         = :c_opt_typ
        AND   fec_strk_prc        = :l_strike_prc;
    }

    if ( SQLCODE != 0 )
    {
      /*tpcommit(0);*/    /*1.6*/
      fn_errlog( c_ServiceName, "S31135", SQLMSG, c_errrmsg.arr  );
      return -1;
    }

    d_ex_val = d_ex_val_m + d_ex_val_h;

    if ( c_opt_typ == 'P' )
    {
      EXEC SQL
        SELECT NVL ( SUM (fab_asgnd_qty * (fab_strk_prc -
                                                fab_sttlmnt_prc ) ), 0 )
          INTO :d_as_val_m
        FROM fab_fo_asgnmnt_book
        WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fab_undrlyng        = :c_undrlyng   /*1.6 */
        AND   fab_expry_dt        = :c_expry_dt   /*1.6 */
        AND   fab_xchng_cd        = :c_xchng_cd
        AND   fab_prdct_typ       = :c_prd_typ
        /*AND   fab_undrlyng        = :c_undrlyng
        AND   fab_expry_dt        = :c_expry_dt*/
        AND   fab_exer_typ        = :c_exrc_typ
        AND   fab_opt_typ         = :c_opt_typ
        AND   fab_strk_prc        = :l_strike_prc;
    }
    else
    {
      EXEC SQL
        SELECT NVL ( SUM (fab_asgnd_qty * (fab_sttlmnt_prc -
                                               fab_strk_prc ) ), 0 )
        INTO :d_as_val_m
        FROM fab_fo_asgnmnt_book
        WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fab_undrlyng        = :c_undrlyng       /*1.6*/
        AND   fab_expry_dt        = :c_expry_dt       /*1.6*/
        AND   fab_xchng_cd        = :c_xchng_cd
        AND   fab_prdct_typ       = :c_prd_typ
        /*AND   fab_undrlyng        = :c_undrlyng
        AND   fab_expry_dt        = :c_expry_dt */
        AND   fab_exer_typ        = :c_exrc_typ
        AND   fab_opt_typ         = :c_opt_typ
        AND   fab_strk_prc        = :l_strike_prc;
    }

    if ( SQLCODE != 0 )
    {
      /*tpcommit(0);*/      /*1.6*/
      fn_errlog( c_ServiceName, "S31140", SQLMSG, c_errrmsg.arr  );
      return -1;
    }



    if ( c_opt_typ == 'P' )
    {
      EXEC SQL
        SELECT NVL ( SUM (fab_asgnd_qty * (fab_strk_prc -
                                               fab_sttlmnt_prc ) ), 0 )
        INTO :d_as_val_h
        FROM fab_fo_asgnmnt_book_hstry
        WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fab_xchng_cd        = :c_xchng_cd
        AND   fab_prdct_typ       = :c_prd_typ
        AND   fab_undrlyng        = :c_undrlyng
        AND   fab_expry_dt        = :c_expry_dt
        AND   fab_exer_typ        = :c_exrc_typ
        AND   fab_opt_typ         = :c_opt_typ
        AND   fab_strk_prc        = :l_strike_prc;
    }
    else
    {
      EXEC SQL
        SELECT NVL ( SUM (fab_asgnd_qty * (fab_sttlmnt_prc -
                                                fab_strk_prc ) ), 0 )
        INTO :d_as_val_h
        FROM fab_fo_asgnmnt_book_hstry
        WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND   fab_xchng_cd        = :c_xchng_cd
        AND   fab_prdct_typ       = :c_prd_typ
        AND   fab_undrlyng        = :c_undrlyng
        AND   fab_expry_dt        = :c_expry_dt
        AND   fab_exer_typ        = :c_exrc_typ
        AND   fab_opt_typ         = :c_opt_typ
        AND   fab_strk_prc        = :l_strike_prc;
    }

    if ( SQLCODE != 0 )
    {
      /*tpcommit(0);*/      /*1.6*/
      fn_errlog( c_ServiceName, "S31145", SQLMSG, c_errrmsg.arr  );
      return -1;
    }


    d_as_val = d_as_val_m + d_as_val_h;

    d_crst_prft = d_sell_val - d_buy_val + d_ex_val - d_as_val;

    /***** Changed on 30-May-2002 ******/
/*****************************************************************
*****************************************************************/
    d_uncrst_prft = l_opnpstn_qty * li_cmp ;

    d_total_prft = d_crst_prft + d_uncrst_prft;

if( DEBUG_MSG_LVL_3 ) { /** Ver 1.8 in Debug**/
    fn_userlog(c_ServiceName,"sss======= d_as_val :%lf:",d_as_val);
    fn_userlog(c_ServiceName,"sss======= d_ex_val :%lf:",d_ex_val);
    fn_userlog(c_ServiceName,"sss======= d_buy_val :%lf:",d_buy_val);
    fn_userlog(c_ServiceName,"sss======= d_sell_val:%lf:",d_sell_val);
    fn_userlog(c_ServiceName,"sss====== d_uncrst_prft :%lf:",d_uncrst_prft);
  }


return 0;





}
