/******************************************************************************/
/*	Program	    			:	SFO_GET_IND_INF                                       */
/*                                                                            */
/*  Input             : vw_indx_qt                                            */
/*                                                                            */
/*  Output            : vw_indx_qt                                            */
/*											vw_err_msg                                            */
/*                                                                            */
/*  Description       : This service is used to get the index details like    *//*                      index value, high value, open value, low value, close */
/*                      value, percentage change, yearly high, yearly low,    *//*                      index indicator and market capitalization for a given *//*                      index.                                                */
/*                                                                            */
/*  Log               : 1.0		18-Sep-2001		Ramesh Reddy.V                    */
/*										: 1.1   03-Mar-2008   Sandeep Patil											*/
/*                                                                            */
/******************************************************************************/
/* 1.0	-	New Release                                                         */
/* 1.1  - IBM MIGRATION CHANGES																								*/
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>			 /*** Ver 1.1 ***/
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fo.h>
#include <fo_view_def.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_log.h>			 /*** Ver 1.1 ***/
#include <fn_read_debug_lvl.h>			/*** Ver 1.1 ***/

void SFO_GET_IND_INF( TPSVCINFO *rqst )
{
	char  c_ServiceName[33];
  char  c_errmsg[256];

  EXEC SQL BEGIN DECLARE SECTION;
    struct vw_indx_qt *ptr_st_indx_qt;
		varchar c_time_stmp [ LEN_DATE ];
  EXEC SQL END DECLARE SECTION;

  struct vw_err_msg *ptr_st_err_msg;

  ptr_st_indx_qt = ( struct vw_indx_qt * )rqst->data;
  strcpy( c_ServiceName, rqst->name );

	INITDBGLVL(c_ServiceName);			 /*** Ver 1.1 ***/

  ptr_st_err_msg = ( struct vw_err_msg * ) tpalloc ( "VIEW32",
                                                     "vw_err_msg",
                                                sizeof ( struct vw_err_msg ) );
  if ( ptr_st_err_msg ==  NULL )
  {
    fn_errlog ( c_ServiceName, "S31005", TPMSG, c_errmsg );
    tpreturn ( TPFAIL, NO_BFR, NULL, 0, 0 );
  }

  memset ( ptr_st_err_msg, 0, sizeof ( struct vw_err_msg ) );

	if (DEBUG_MSG_LVL_3)			/*** Ver 1.1 ***/
	{
		fn_userlog ( c_ServiceName, "c_index_cd :%s:", ptr_st_indx_qt->c_index_cd );
	}

  /*** Added for Order Routing ***/
  fn_init_ddr_val ( ptr_st_indx_qt->c_rout_crt );

	EXEC SQL
			SELECT			fiq_indx_cd,
									to_char (fiq_tm_stmp, 'dd-Mon-yyyy hh24:mi:ss' ),
									nvl(fiq_indx_val,0),
                  nvl(fiq_hgh_indx_val,0),
                  nvl(fiq_opn_indx_val,0),
                  nvl(fiq_low_indx_val,0),
                  nvl(fiq_cls_indx_val,0),
                  nvl(fiq_prcntg_chng,0),
                  nvl(fiq_yrly_hgh_val,0),
                  nvl(fiq_yrly_low_val,0),
                  nvl(fiq_indctr,' '),
                  nvl(fiq_mkt_cptltn,0)
				INTO			:ptr_st_indx_qt->c_index_cd,
									:c_time_stmp,
									:ptr_st_indx_qt->l_indx_val,
									:ptr_st_indx_qt->l_high_indx_val,
									:ptr_st_indx_qt->l_open_indx_val,
									:ptr_st_indx_qt->l_low_indx_val,	
									:ptr_st_indx_qt->l_close_indx_val,
									:ptr_st_indx_qt->l_prcntg_chng_indx,
									:ptr_st_indx_qt->l_indx_yrly_high_val,
		              :ptr_st_indx_qt->l_indx_yrly_low_val,
									:ptr_st_indx_qt->c_indx_indctr,
									:ptr_st_indx_qt->d_mkt_cptltn
				FROM			fiq_fo_indx_qt
			 WHERE			fiq_indx_cd = :ptr_st_indx_qt->c_index_cd;

	if ( SQLCODE != 0 )  
  {
    fn_errlog ( c_ServiceName, "S31010", SQLMSG, ptr_st_err_msg->c_err_msg );
    tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_st_err_msg, 0, 0 );
  }

  SETNULL ( c_time_stmp );

  strcpy ( ptr_st_indx_qt->c_indx_tm_stmp , ( char * ) c_time_stmp.arr );

  tpfree ( ( char * ) ptr_st_err_msg );
  tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )ptr_st_indx_qt, 0, 0 );
}

