/*  Program           : SFO_ACC_AGGR                                          */
/*                                                                            */
/* Input              : FFO_USR_ID                                            */
/*                      FFO_SSSN_ID                                           */
/*                      FFO_ACTION1        				                            */
/*                      FFO_ACTION2 				                                  */
/*                      FFO_ORD_TYP                                           */
/*                      FFO_REQ_TYP                                           */
/*                      FFO_USR_FLG                                           */
/*                      FFO_IP_VIEW_NM 1.1                                    */
/*                                                                            */
/*  Output            : FFO_ERR_NO                                         	  */
/*                    : FFO_ERR_MSG																				    */
/*                    : FFO_INDEX																				    	*/
/*                    : FFO_ACTION1																			    	*/
/******************************************************************************/
/*  Initial release:  Ravi Malla 13-Jul-2022		              								*/
/*																																						*/
/******************************************************************************/
/*  This service is called in 2 modes 																				*/
/*		1: Fno Landing Page  & Mailer Campaign     															*/
/*	1.1: SPira Changes -> Receiving Error Message as Input 										*/
/*  TOL: Tux on Linux   (Agam)                                                */
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fml_def.h>
#include <eba.h>             
#include <fo_view_def.h>
#include <fo_fml_def.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fml_rout.h>	
#include <fn_read_debug_lvl.h>		
#include <fo_get_records.h>			
#include <fn_session.h>
/* #include <uuid.h>   commented in Ver TOL */
#include <uuid/uuid.h>  /* Added in Ver TOL */
#include <stdint.h>     /* Added in TOL  */
#include <userlog.h>


#define FNO_CONSENT1	'A'
#define FNO_CONSENT2	'B'
#define FNO_STMT_REQ	'C'
#define FNO_BANK_STMT	'S'
#define FNO_MAILER 		'M'
#define FNO_WEB 			'W'

/* int Z=0;  commented in Ver TOL */
#define INIT(x,y)     for(int Z=0; Z< y; Z++)     x[Z] =0   /* int added in Ver TOL */

EXEC SQL INCLUDE "table/adh_act_deact_hstry.h";
EXEC SQL INCLUDE "table/uac_usr_accnts.h";

void SFO_ACC_AGGR( TPSVCINFO *rqst )
{
	FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;
	FBFR32 *ptr_fml_Sbuffer;
	FBFR32 *ptr_fml_Rbuffer;

	ptr_fml_Obuf = NULL;
	ptr_fml_Sbuffer = NULL;
	ptr_fml_Rbuffer = NULL;

	char  c_ServiceName[33];
  char  c_err_msg[256]; 
  char  c_inperr_msg[256]; 
	char c_ret_flg;

	int i_returncode  = 0;  
	int i_trnsctn;
	long l_recvbuff=0;
	int mob_cnt=0;

	double d_serial_no=0;

	struct vw_usr_prfl st_usr_prf;
  struct vw_err_msg st_err_msg;

  MEMSET(st_usr_prf);
  MEMSET(st_err_msg);

	char c_pan_no[15] = "\0";
	char c_mobile_no_temp[20] = "\0";
	char c_mobile_no[11] = "\0";
	char c_mode = '\0';
	char c_type = '\0';
	char c_usr_flag='N';
	char c_ref_no[50];
	int usr_flag;

	char c_mtch_accnt_no[11];
	char c_seg[2];
	char c_mf_to_be_allwd='N';
	char c_eq_to_be_allwd='N';
	char c_fno_to_be_allwd='Y';
	char c_cmdty_to_be_allwd='N';
	char c_pos_to_be_allwd='N';
	char c_ins_to_be_allwd='N';
	char c_fi_to_be_allwd='N';
	int  i_usr_ctgry_cd;
	char c_cdx_to_be_allwd='N';
	char c_nps_to_be_allwd='N';
	char c_conversion_flg='N';
	char c_loans_to_be_allwd='N';
	char c_ipo_to_be_allwd='N';

	

	char *uuid_ref_no;
	uuid_t uuid;
	unsigned int rc;   /* unint32_t to unsigned int in Ver TOL */

	int  i_cnt=0;
	char errno='1';


	int i_cntrct[25];
	int i_cntrcterr[25];

  EXEC SQL BEGIN DECLARE SECTION;
		    sql_cursor     sys_cursor;
	EXEC SQL END DECLARE SECTION;

	ptr_fml_Ibuf = (FBFR32 *)rqst->data;
  strcpy( c_ServiceName, rqst->name );

	INITDBGLVL(c_ServiceName);	

	MEMSET(c_err_msg);      
	MEMSET(c_pan_no);      
	MEMSET(c_mobile_no);      
	MEMSET(c_mobile_no_temp);      
	INIT(i_cntrct,4);      
	INIT(i_cntrcterr,4);      

	strcpy(c_err_msg,"Success");

	i_cntrct    [ 0 ]   = Fget32( ptr_fml_Ibuf ,FFO_ORD_TYP,0,(char *) &c_mode,0);			/** WEB or MAILER W/M **/
  i_cntrcterr [ 0 ]   = Ferror32;
	i_cntrct    [ 1 ]   = Fget32( ptr_fml_Ibuf ,FFO_REQ_TYP,0,(char *) &c_type,0);			/** for AA,FROM AA,Stmt A/B/S **/
  i_cntrcterr [ 1 ]   = Ferror32;
	i_cntrct    [ 2 ]   = Fget32( ptr_fml_Ibuf ,FFO_USR_FLG,0,(char *) &usr_flag,0);	/** Accepted/Non Accepted Y/N **/
	i_cntrcterr [ 2 ]   = Ferror32;

	for ( i_cnt=0 ;  i_cnt < 3 ;  i_cnt++ )
	{
			if ( i_cntrct[i_cnt] == -1 && i_cntrcterr[i_cnt] != FNOTPRES )
			{
				userlog( "Error in :%d:",i_cnt );
				errlog( c_ServiceName,"S31002", Fstrerror32( i_cntrcterr[i_cnt]),(char *)DEF_USR, DEF_SSSN,c_err_msg );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}
	}

	if (usr_flag == 0) 
		c_usr_flag='N';
	else
		c_usr_flag='Y';
	
	if ( c_mode == FNO_WEB  )
	{

		if(c_type == FNO_CONSENT1)
		{
		i_returncode = Fvftos32( ptr_fml_Ibuf, (char *) &st_usr_prf, "vw_usr_prfl" );

		if ( i_returncode == -1 )
		{
			errlog( c_ServiceName, "S31003", FMLMSG, (char *)DEF_USR, DEF_SSSN,c_err_msg);
			Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

		i_returncode = chk_sssn( c_ServiceName, (char *)DEF_USR, DEF_SSSN, c_err_msg ) ;

		if ( i_returncode == -1 )
		{
			errlog(c_ServiceName, "S31004",LIBMSG,(char *)DEF_USR, DEF_SSSN, st_err_msg.c_err_msg);
			Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

		EXEC SQL 
		 SELECT NVL(IAD_MOBILE,USR_MBL_NMBRS)
				 INTO   :c_mobile_no_temp
				 FROM   ICD_INFO_CLIENT_DTLS, IAD_INFO_ADDRESS_DTLS, USR_USER_MASTER
				 WHERE  USR_USR_ID = :st_usr_prf.c_user_id
				 AND    IAD_ADDRESS_TYPE = 'APPLICANT_CORR'
				 AND    IAD_SERIAL_NO = ICD_SERIAL_NO
				 AND    ICD_USER_ID = USR_USR_ID;

		if ( SQLCODE != 0 && SQLCODE !=NO_DATA_FOUND)
		{
				errlog ( c_ServiceName, "S31022", SQLMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg );
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
		else if (SQLCODE == NO_DATA_FOUND)
		{
				errlog ( c_ServiceName, "S31023", "Invalid Match",(char *)DEF_USR, DEF_SSSN, c_err_msg );
				strcpy(c_err_msg,"Invalid Match");
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );

		}
		}
		else
		{
					i_cntrct    [ 0 ]   = Fget32( ptr_fml_Ibuf ,FFO_ACTION1,0,(char *) c_mobile_no_temp,0);	/** MOBILE NO **/
					i_cntrcterr [ 0 ]   = Ferror32;
					if ( i_cntrct[0] == -1 && i_cntrcterr[0] != FNOTPRES )
					{
						errlog( c_ServiceName, "S31025", Fstrerror32( i_cntrcterr[i_cnt]),(char *)DEF_USR, DEF_SSSN,c_err_msg );
						Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
						Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
						tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
					}
		}
	}
	else if ( c_mode == FNO_MAILER )
	{
				//userlog( c_ServiceName, "Mailer Mode");
					i_cntrct    [ 0 ]   = Fget32( ptr_fml_Ibuf ,FFO_ACTION1,0,(char *) c_mobile_no_temp,0);	/** MOBILE NO **/
					i_cntrcterr [ 0 ]   = Ferror32;
					if ( i_cntrct[0] == -1 && i_cntrcterr[0] != FNOTPRES )
					{
						errlog( c_ServiceName, "S31022", Fstrerror32( i_cntrcterr[i_cnt]),(char *)DEF_USR, DEF_SSSN,c_err_msg );
						Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
						Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
						tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
					}

					EXEC SQL
				 SELECT	COUNT(*)
						 INTO   :mob_cnt
						 FROM   ICD_INFO_CLIENT_DTLS, IAD_INFO_ADDRESS_DTLS, USR_USER_MASTER
						 WHERE  IAD_MOBILE = :c_mobile_no_temp
						 AND    IAD_ADDRESS_TYPE = 'APPLICANT_CORR'
						 AND    IAD_SERIAL_NO = ICD_SERIAL_NO
						 AND    ICD_USER_ID = USR_USR_ID and rownum=1;

				if ( SQLCODE != 0 && SQLCODE !=NO_DATA_FOUND)
				{
						errlog ( c_ServiceName, "S31032", SQLMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg );
						fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
						Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
						Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
						tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
				}
				if (mob_cnt==0)
				{
						errlog ( c_ServiceName, "S31033", "Invalid Mobile",(char *)DEF_USR, DEF_SSSN, c_err_msg );
						strcpy(c_err_msg,"Invalid Mobile");
						fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
						Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
						Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
						tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );

				}
	}
	else
	{
						errlog(c_ServiceName, "S31018",LIBMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg);
						Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
						Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
						tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );

	}

	userlog( c_ServiceName, "Mode passed is :%c: User :%s:",c_mode,st_usr_prf.c_user_id );
	
	MEMSET(c_ref_no);
	if (c_type == FNO_CONSENT1)
	{
		uuid_create(&uuid, &rc);
		uuid_to_string(&uuid, &uuid_ref_no, &rc);
		strncpy(c_ref_no,uuid_ref_no,50);
	  c_ref_no[strlen(c_ref_no)]='\0';	
	}
	else
	{
		i_cntrct    [ 0 ]   = Fget32( ptr_fml_Ibuf ,FFO_REF_NO,0,(char *) c_ref_no,0);	/** Ref Number for Consent B/S **/
		i_cntrcterr [ 0 ]   = Ferror32;
		if ( i_cntrct[0] == -1 )
		{
			errlog( c_ServiceName, "S31030", Fstrerror32( i_cntrcterr[i_cnt]),(char *)DEF_USR, DEF_SSSN,c_err_msg );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}
	}

	userlog( "B4-Mobile :%s,Refno :%s",c_mobile_no_temp,c_ref_no );
	EXEC SQL SELECT TRIM(NVL(SUBSTR(:c_mobile_no_temp,0,decode(instr(:c_mobile_no_temp,'@')-1,-1,10,instr(:c_mobile_no_temp,'@')-1)),0)) into :c_mobile_no from dual;
	if ( SQLCODE != 0 )
	{
			errlog ( c_ServiceName, "S31020", SQLMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg );
			fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}
	c_mobile_no[strlen(c_mobile_no)]='\0';
	userlog( "A4-Mobile :%s,Refno :%s",c_mobile_no,c_ref_no );

	i_trnsctn = fn_equ_begintran( c_ServiceName,(char *)DEF_USR, DEF_SSSN, c_err_msg );
  if ( i_trnsctn == -1 )
  {
			errlog ( c_ServiceName, "S31005", SQLMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	if (c_type == FNO_CONSENT1)
	{

		EXEC SQL SELECT COUNT(*) into :i_returncode  FROM FNO_ACCNT_AGGREGATE 
						where FAA_MBL_NMBR=:c_mobile_no AND FAA_MODE=:c_mode and TRIM(FAA_REFNO)=:c_ref_no;

		if ( SQLCODE != 0 )
		{
				errlog ( c_ServiceName, "S31006", SQLMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg );
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

		if (i_returncode == 0)	
		{
				EXEC SQL 
					INSERT INTO FNO_ACCNT_AGGREGATE(FAA_USERID,FAA_MBL_NMBR,FAA_MODE,FAA_INITIALCONSENT,FAA_INITIALDT,FAA_REFNO)
					VALUES ( :st_usr_prf.c_user_id,:c_mobile_no,:c_mode,:c_usr_flag,sysdate,:c_ref_no);	/** user id will be null for W **/
		}
		else
		{
				EXEC SQL
        	UPDATE 
						FNO_ACCNT_AGGREGATE 
					SET 
						FAA_INITIALCONSENT=:c_usr_flag,FAA_AADT=sysdate 
					WHERE 
						FAA_MBL_NMBR=:c_mobile_no AND FAA_MODE=:c_mode and TRIM(FAA_REFNO)=:c_ref_no;
		}
	}	
	else if (c_type == FNO_CONSENT2)
	{ 

	  userlog( "PAN :%s: Mobile :%s: c_ref_no:%s:",c_pan_no,c_mobile_no,c_ref_no );
    /*EXEC SQL SELECT COUNT(*) into :i_returncode  FROM FNO_ACCNT_AGGREGATE 
					   WHERE FAA_MBL_NMBR=:c_mobile_no AND FAA_MODE=:c_mode and TRIM(FAA_REFNO)=:c_ref_no and FAA_INITIALCONSENT='Y';*/
    EXEC SQL SELECT COUNT(*) into :i_returncode  FROM FNO_ACCNT_AGGREGATE 
					   WHERE FAA_MBL_NMBR=:c_mobile_no AND 
						 /*FAA_MODE=:c_mode and*/ /* commented as we are getting as W incase of Mailer also from API */
						 TRIM(FAA_REFNO)=:c_ref_no and FAA_INITIALCONSENT='Y';

    if ( SQLCODE != 0 )
    {
        errlog ( c_ServiceName, "S31007", SQLMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg );
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
		if (i_returncode == 0)
		{
      errlog ( c_ServiceName, "S31008", "Inital consent not Accepted/Received ", (char *)DEF_USR, DEF_SSSN,c_err_msg );
			fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

		EXEC SQL 
				UPDATE 
					FNO_ACCNT_AGGREGATE 
				SET 
					FAA_AACONSENT=:c_usr_flag,
					FAA_AADT=sysdate 
				WHERE 
					FAA_MBL_NMBR=:c_mobile_no AND 
					/*FAA_MODE=:c_mode and*/ TRIM(FAA_REFNO)=:c_ref_no;
	}
	else if (c_type == FNO_BANK_STMT || c_type == FNO_STMT_REQ)
	{
		if(Fget32( ptr_fml_Ibuf, FFO_ACTION2, 0,(char *)c_pan_no, 0) == -1)
		{
				errlog( c_ServiceName, "S31009", "FFO_ACTION2 value not valid/exist",(char *)DEF_USR, DEF_SSSN, c_err_msg  );
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
		}

	  userlog( "PAN :%s: Mobile :%s:",c_pan_no,c_mobile_no );

    EXEC SQL SELECT COUNT(*) into :i_returncode  FROM FNO_ACCNT_AGGREGATE 
						WHERE /*FAA_MODE=:c_mode and*/ 
						FAA_MBL_NMBR=:c_mobile_no and TRIM(FAA_REFNO)=:c_ref_no and FAA_AACONSENT='Y';

    if ( SQLCODE != 0 )
    {
        errlog ( c_ServiceName, "S31010", SQLMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg );
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

    if (i_returncode == 0)
    {
      errlog ( c_ServiceName, "S31011", "Consent not Accepeted/Received from Account Aggregator",(char *)DEF_USR, DEF_SSSN, c_err_msg );
			fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }


		/* Ver 1.1 Start */
		if(c_type == FNO_STMT_REQ)
		{
			MEMSET(c_inperr_msg);
			if(Fget32( ptr_fml_Ibuf, FFO_IP_VIEW_NM, 0,(char *)c_inperr_msg, 0) == -1)
			{
					if(Ferror32 != FNOTPRES)
					{
					errlog( c_ServiceName, "S31020", FMLMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg  );
					fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
					Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
					tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
					}
					strcpy(c_inperr_msg,"No Error");
			}
		}
		/* Ver 1.1 End */

		d_serial_no=0;
		MEMSET(sql_adh_rmrks);

		EXEC SQL
			 SELECT  USR_USR_ID,ICD_SERIAL_NO,UAC_CLM_MTCH_ACCNT,'EQ',uac_usr_ctgry,
							 UAC_EQUITY_ALLWD,UAC_MF_ALLWD,'Y','Y','Y',
							 UAC_IPO_ALLWD,UAC_POS_ALLWD,UAC_INS_ALLWD,UAC_LOANS_ALLWD,UAC_FI_ALLWD,UAC_NPS_ALLWD,
							 UAC_EQUITY_ALLWD||','||UAC_MF_ALLWD||','||'Y'||','||'Y'||','||'Y'||','||UAC_IPO_ALLWD||','||UAC_POS_ALLWD||','||UAC_INS_ALLWD||','||UAC_LOANS_ALLWD||','||UAC_FI_ALLWD||','||UAC_NPS_ALLWD||',<FNO/Currency/Commodity> enabled using CAMs account aggregator model'
			 INTO :sql_uac_usr_id,:d_serial_no,:c_mtch_accnt_no,:c_seg,:i_usr_ctgry_cd,
						:c_eq_to_be_allwd,:c_mf_to_be_allwd,:c_fno_to_be_allwd,:c_cmdty_to_be_allwd,:c_cdx_to_be_allwd,
						:c_ipo_to_be_allwd,:c_pos_to_be_allwd,:c_ins_to_be_allwd,:c_loans_to_be_allwd,:c_fi_to_be_allwd,:c_nps_to_be_allwd,
						:sql_adh_rmrks
			 FROM  ICD_INFO_CLIENT_DTLS,UAC_USR_ACCNTS,USR_USER_MASTER,IAD_INFO_ADDRESS_DTLS
			 WHERE IAD_SERIAL_NO = ICD_SERIAL_NO  
			 AND 		ICD_USER_ID = UAC_USR_ID
			 AND    UAC_USR_ID=USR_USR_ID
			 AND   	IAD_ADDRESS_TYPE = 'APPLICANT_CORR'
			 AND 		NVL(IAD_MOBILE,USR_MBL_NMBRS)=:c_mobile_no
			 AND    ICD_PAN_NO=:c_pan_no;
			 if ( SQLCODE != 0 && SQLCODE !=NO_DATA_FOUND)	/* Added NO_DATA_FOUND in Ver 1.1 */
			 {
				 errlog ( c_ServiceName, "S31012", SQLMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg );
				 fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				 Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
				 Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
				 tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			 }
			 /* else if (sqlca.sqlerrd[2] == 0) commened in 1.1 */	// No data found 
			 else if(SQLCODE == NO_DATA_FOUND)
			 {
				  userlog( "PAN :%s: Mobile :%s:",c_pan_no,c_mobile_no );
      		errlog ( c_ServiceName, "S31013", "Pan not matching with Mobile no",(char *)DEF_USR, DEF_SSSN, c_err_msg );
					strcpy(c_err_msg,"Pan not matching with Mobile no");
					fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      		Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
      		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			 }
			SETLEN(sql_adh_rmrks);

			if(c_type == FNO_BANK_STMT)
			{	

			if((ptr_fml_Sbuffer = (FBFR32 *)tpalloc("FML32", NULL, MIN_FML_BUF_LEN)) == NULL)
    	{
      	errlog( c_ServiceName, "S31031", TPMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg  );
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      	Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
      	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
     	 	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    	}	

			if ( (ptr_fml_Rbuffer = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN)) == NULL)
    	{
					errlog( c_ServiceName, "S31032", TPMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg  );
					tpfree ( ( char * ) ptr_fml_Sbuffer );
      		Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
					Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
					tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    	}

				/************************
			i_cntrct[0]  = Fadd32(ptr_fml_Sbuffer, FML_USR_ID, (char *)sql_uac_usr_id.arr, 0);
 			i_cntrcterr[0] = Ferror32;
			i_cntrct[1]  = Fadd32(ptr_fml_Sbuffer, FML_MATCH_ACCNT, (char *)c_mtch_accnt_no, 0);
 			i_cntrcterr[1] = Ferror32;
			i_cntrct[2]  = Fadd32(ptr_fml_Sbuffer, FML_SEGMENT, (char *)&c_seg, 0);
 			i_cntrcterr[2] = Ferror32;

			for(i_cnt =0; i_cnt <3; i_cnt++)
			{
					if ( (i_cntrct[ i_cnt ] == -1 ) )
					{
						userlog( "Error in field no. [%d] ",i_cnt);
						errlog( c_ServiceName, "S31033", Fstrerror32(i_cntrcterr[i_cnt]),(char *)DEF_USR, DEF_SSSN,c_err_msg);
						tpfree ( ( char * ) ptr_fml_Sbuffer );
						tpfree ( ( char * ) ptr_fml_Rbuffer );
						Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
						tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
					}
			}	

			userlog( "UserId :%s: Match account :%s: Remarks :%s:",sql_uac_usr_id.arr,c_mtch_accnt_no,sql_adh_rmrks.arr);
			i_returncode = tpcall("SVC_CHK_OPN_POS", (char *)ptr_fml_Sbuffer, 0, (char **)&ptr_fml_Rbuffer, &l_recvbuff, 0);
      if(i_returncode != 0 )
      {
        i_cntrct[0]   = Fget32( ptr_fml_Rbuffer, FFO_ERR_MSG, 0, c_err_msg, 0 );
        userlog("c_err_msg:%s:",c_err_msg);
        errlog( c_ServiceName, "S31075", TPMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg  );
        tpfree ( ( char * ) ptr_fml_Sbuffer );
        tpfree ( ( char * ) ptr_fml_Rbuffer );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }

			Finit32(ptr_fml_Rbuffer, Fsizeof32(ptr_fml_Rbuffer));
			Finit32(ptr_fml_Sbuffer, Fsizeof32(ptr_fml_Sbuffer));
				***************/

			sql_uac_act_deact_flg='E';
			strcpy(sql_adh_act_deact_src.arr,"MANUAL");
			/*strcpy(sql_adh_rmrks.arr,"N/Y/N/N/N/N/N/N/N/N/N/FNO Activation");*/

			i_cntrct[0]  = Fadd32(ptr_fml_Sbuffer,	FML_USR_ID, (char *)sql_uac_usr_id.arr, 0);
 			i_cntrcterr[0] = Ferror32;
			i_cntrct[1]  = Fadd32(ptr_fml_Sbuffer, FML_MSG_TYP, (char *)&sql_uac_act_deact_flg, 0);
 			i_cntrcterr[1] = Ferror32;
			i_cntrct[2]  = Fadd32(ptr_fml_Sbuffer,	FML_USR_USR_NM, (char *)sql_adh_act_deact_src.arr, 0);
 			i_cntrcterr[2] = Ferror32;
			i_cntrct[3]  = Fadd32(ptr_fml_Sbuffer, FML_MAIL_TEXT, (char *)sql_adh_rmrks.arr, 0);
 			i_cntrcterr[3] = Ferror32;
			i_cntrct[4]  = Fadd32(ptr_fml_Sbuffer, FML_MMD_IND, (char *)&c_mf_to_be_allwd, 0);
 			i_cntrcterr[4] = Ferror32;
			i_cntrct[5]  = Fadd32(ptr_fml_Sbuffer, FML_ML_FLG, (char *)&c_eq_to_be_allwd, 0);
 			i_cntrcterr[5] = Ferror32;
			i_cntrct[6]  = Fadd32(ptr_fml_Sbuffer, FML_FRM_ALLWD, (char *)&c_fno_to_be_allwd, 0);
 			i_cntrcterr[6] = Ferror32;
			i_cntrct[7]  = Fadd32(ptr_fml_Sbuffer, FML_ND_STATUS, (char *)&c_cmdty_to_be_allwd, 0);
 			i_cntrcterr[7] = Ferror32;
			i_cntrct[8]  = Fadd32(ptr_fml_Sbuffer, FML_MTCH_FLG, (char *)&c_pos_to_be_allwd, 0);
 			i_cntrcterr[8] = Ferror32;
			i_cntrct[9]  = Fadd32(ptr_fml_Sbuffer, FML_LM_FLG, (char *)&c_ins_to_be_allwd, 0);
 			i_cntrcterr[9] = Ferror32;
			i_cntrct[10]  = Fadd32(ptr_fml_Sbuffer, FML_BLK_FLG, (char *)&c_loans_to_be_allwd, 0);
 			i_cntrcterr[10] = Ferror32;
			i_cntrct[11]  = Fadd32(ptr_fml_Sbuffer, FML_EBA_MTCH_ACT_NO, (char *)c_mtch_accnt_no, 0);
 			i_cntrcterr[11] = Ferror32;
			i_cntrct[12]  = Fadd32(ptr_fml_Sbuffer, FML_USR_ACCSS_LVL, (char *)&i_usr_ctgry_cd, 0);
 			i_cntrcterr[12] = Ferror32;
			i_cntrct[13]  = Fadd32(ptr_fml_Sbuffer, FML_PRDCT_TYP, (char *)&c_cdx_to_be_allwd, 0);
 			i_cntrcterr[13] = Ferror32;
			i_cntrct[14]  = Fadd32(ptr_fml_Sbuffer, FML_TRD_ORD_FLG, (char *)&c_nps_to_be_allwd, 0);
 			i_cntrcterr[14] = Ferror32;
			i_cntrct[15]  = Fadd32(ptr_fml_Sbuffer, FML_DAM_TRNSCTN, (char *)&c_conversion_flg, 0);
 			i_cntrcterr[15] = Ferror32;
			i_cntrct[16]  = Fadd32(ptr_fml_Sbuffer, FML_MRGN_FLG, (char *)&c_ipo_to_be_allwd, 0);
 			i_cntrcterr[16] = Ferror32;
			i_cntrct[17]  = Fadd32(ptr_fml_Sbuffer, FML_ACCPT_RJCT_FLG, (char *)&c_fi_to_be_allwd, 0);
 			i_cntrcterr[17] = Ferror32;

			for(i_cnt =0; i_cnt <17; i_cnt++)
			{
					if ( (i_cntrct[ i_cnt ] == -1 ) )
					{
						userlog(  "Error in field no. [%d] ",i_cnt);
						errlog( c_ServiceName, "S31033", Fstrerror32(i_cntrcterr[i_cnt]),(char *)DEF_USR, DEF_SSSN,c_err_msg);
						tpfree ( ( char * ) ptr_fml_Sbuffer );
						tpfree ( ( char * ) ptr_fml_Rbuffer );
						Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
						tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
					}
			}	

			EXEC SQL 
			EXECUTE
			BEGIN
				SP_IID_INFO_IDEN_DTLS_EBA(:d_serial_no, /* V_IID_SERIAL_NO*/
                      NULL, /* V_IID_TYPE */
                      NULL, /*V_UID_NO*/
                      NULL, /* V_IID_ISSUE_DT*/
                      NULL, /* V_IID_EXPIRY_DT*/
                      NULL, /* V_IID_ISSUE_PLACE*/
                      NULL, /* V_IID_DET*/
                      NULL, /* V_IID_VERIFY_FLG*/
                      NULL, /* V_IID_BRANCH_CODE*/
                      NULL, /* V_IID_ENTERED_BY*/
                      NULL, /* V_IID_MODIFIED_BY*/
                      NULL, /* V_DEL_FLAG*/
                      NULL, /* V_IID_JH_ALIAS*/
                      NULL, /* V_IID_BANK_TYPE*/
                      :c_ret_flg, /* V_SUCCESS_FLG /*OUT param Y/N*/
                      :c_err_msg, /*V_ERROR_MSG /*OUT param*/
                      UPPER('SELFHELP_ACC_AGGREGATOR') /* V_APP_CALLER */
                      );
			END;
			END-EXEC;
			if(c_ret_flg != 'Y')
			{
        userlog("SP_IID_INFO_IDEN_DTLS_EBA c_err_msg:%s:",c_err_msg);
        errlog( c_ServiceName, "S31040", SQLMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg  );
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}

			EXEC SQL
			EXECUTE
			BEGIN
				SP_IEAD_EBA(:d_serial_no, /*V_IEAD_SERIAL_NO*/
                             NULL,/*V_IEAD_AGREEMENT_CD*/
                             NULL,/*V_IEAD_AGREEMENT_DT*/
                             NULL,/*V_IEAD_REMARKS*/
                             UPPER('SELFHELP_ACC_AGGREGATOR_FNO_AGR'),/*V_IEAD_ENTERED_BY*/
                             NULL,/*V_IEAD_MODIFIED_BY*/
                             NULL,/*V_DEL_FLAG */
                             :c_ret_flg,/*V_SUCCESS_FLG       OUT param*/
                             :c_err_msg/*V_ERROR_MSG        OUT param */
                             );
			END;
      END-EXEC;
			if(c_ret_flg != 'Y')
			{
        userlog("SP_IEAD_EBA  FNO c_err_msg:%s:",c_err_msg);
        errlog( c_ServiceName, "S31041", SQLMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg  );
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}

			EXEC SQL
			EXECUTE
			BEGIN
				SP_IEAD_EBA(:d_serial_no, /*V_IEAD_SERIAL_NO*/
                             NULL,/*V_IEAD_AGREEMENT_CD*/
                             NULL,/*V_IEAD_AGREEMENT_DT*/
                             NULL,/*V_IEAD_REMARKS*/
                             UPPER('SELFHELP_ACC_AGGREGATOR_CURR_AGR'),/*V_IEAD_ENTERED_BY*/
                             NULL,/*V_IEAD_MODIFIED_BY*/
                             NULL,/*V_DEL_FLAG */
                             :c_ret_flg,/*V_SUCCESS_FLG       OUT param*/
                             :c_err_msg/*V_ERROR_MSG        OUT param */
                             );
			END;
      END-EXEC;
			if(c_ret_flg != 'Y')
			{
        userlog("SP_IEAD_EBA CURR c_err_msg:%s:",c_err_msg);
        errlog( c_ServiceName, "S31042", SQLMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg  );
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}

			EXEC SQL
			EXECUTE
			BEGIN
				SP_IEAD_EBA(:d_serial_no, /*V_IEAD_SERIAL_NO*/
                             NULL,/*V_IEAD_AGREEMENT_CD*/
                             NULL,/*V_IEAD_AGREEMENT_DT*/
                             NULL,/*V_IEAD_REMARKS*/
                             UPPER('SELFHELP_ACC_AGGREGATOR_COMM_AGR'),/*V_IEAD_ENTERED_BY*/
                             NULL,/*V_IEAD_MODIFIED_BY*/
                             NULL,/*V_DEL_FLAG */
                             :c_ret_flg,/*V_SUCCESS_FLG       OUT param*/
                             :c_err_msg/*V_ERROR_MSG        OUT param */
                             );
			END;
      END-EXEC;
			if(c_ret_flg != 'Y')
			{
        userlog("SP_IEAD_EBA COMM c_err_msg:%s:",c_err_msg);
        errlog( c_ServiceName, "S31043", SQLMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg  );
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
			}

			i_returncode = tpcall("SVC_ACTV_ACCT", (char *)ptr_fml_Sbuffer, 0, (char **)&ptr_fml_Rbuffer, &l_recvbuff, 0);
      if(i_returncode != 0 )
      {
        i_cntrct[0]   = Fget32( ptr_fml_Rbuffer, FFO_ERR_MSG, 0, c_err_msg, 0 );
        userlog("c_err_msg:%s:",c_err_msg);
        errlog( c_ServiceName, "S31075", TPMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg  );
        tpfree ( ( char * ) ptr_fml_Sbuffer );
        tpfree ( ( char * ) ptr_fml_Rbuffer );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
      tpfree ( ( char * ) ptr_fml_Sbuffer );
      tpfree ( ( char * ) ptr_fml_Rbuffer );
		
			}
			if(c_type == FNO_BANK_STMT )
			{
			EXEC SQL 
				UPDATE 
						FNO_ACCNT_AGGREGATE 
				SET 
						FAA_USERID=:sql_uac_usr_id,
						FAA_PAN_NO=:c_pan_no,
						FAA_SERIAL_NO=:d_serial_no,
						FAA_STATEMENTFLAG=:c_usr_flag,
						FAA_STMTDT=sysdate 
				WHERE 
						/*FAA_MODE=:c_mode and*/
						FAA_MBL_NMBR=:c_mobile_no and TRIM(FAA_REFNO)=:c_ref_no;
			}
			else
			{
			EXEC SQL 
				UPDATE 
						FNO_ACCNT_AGGREGATE 
				SET 
						FAA_USERID=:sql_uac_usr_id,
						FAA_PAN_NO=:c_pan_no,
						FAA_SERIAL_NO=:d_serial_no,
						FAA_VALIDATIONDT=sysdate ,
						FAA_ERRMSG=:c_inperr_msg
				WHERE 
						/*FAA_MODE=:c_mode and*/
						FAA_MBL_NMBR=:c_mobile_no and TRIM(FAA_REFNO)=:c_ref_no;

			}
				
	}
	else
	{
				 errlog ( c_ServiceName, "S31014","Invalid type",(char *)DEF_USR, DEF_SSSN, c_err_msg );
					strcpy(c_err_msg,"Invalid type");
				 fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				 Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
				 Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
				 tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}
	
	if ( SQLCODE != 0 )
	{
			errlog ( c_ServiceName, "S31015", SQLMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg );
			fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	userlog("Record Dtls :%d: mode :%c: userid:%s: pan:%s:c_type:%c:",sqlca.sqlerrd[2],c_mode,sql_uac_usr_id.arr,c_pan_no,c_type);

	if (c_type == FNO_CONSENT1)
	{
	i_returncode = fn_pack_vartofml( c_ServiceName,
																	 c_err_msg,
																	 &ptr_fml_Obuf,
																	 4,
																	 FFO_ACTION1,(char *)&c_mobile_no,
																	 FFO_REF_NO,(char *)&c_ref_no,
																	 FFO_ERR_NO,(char *)&errno,
																	 FFO_ERR_MSG,( char * )c_err_msg
																 );
	}
	else
	{
	i_returncode = fn_pack_vartofml( c_ServiceName,
																	 c_err_msg,
																	 &ptr_fml_Obuf,
																	 3,
																	 FFO_INDEX, (double *)&d_serial_no,
																	 FFO_ERR_NO, (char *)&errno,
																	 FFO_ERR_MSG, ( char * )c_err_msg
																 );
	}
	if( i_returncode == -1 )
	{
			errno='1';
			errlog( c_ServiceName, "S31016", LIBMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg );
			fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_NO,(char *)&errno, 0 );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
	{
				errno='1';
				errlog( c_ServiceName, "S31017", TPMSG,(char *)DEF_USR, DEF_SSSN, c_err_msg  );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_NO, (char *)&errno, 0 );
				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				tpreturn ( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );
	}

	tpreturn ( TPSUCCESS, SUCC_BFR, ( char * )ptr_fml_Obuf, 0, 0 );
}	
