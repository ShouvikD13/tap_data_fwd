/******************************************************************************/
/*	Program	    			:	SFO_GT_MKT_MSG                                        */
/*                                                                            */
/*  Input             : FFO_XCHNG_CD                                          */
/*                      FFO_MKT_TYP                                           */
/*                      FFO_USR_ID                                            */
/*                      FFO_SSSN_ID                                           */
/*                      FFO_ROUT_CRT                                          */
/*                                                                            */
/*  Output            : FFO_REMARKS                                           */
/*                      FFO_TM_STMP                                           */
/*                                                                            */
/*  Description       : To fetch message and date for a particular exchange   */
/*                      and message id                                        */
/*                                                                            */
/*  Log               : 1.0   27-Nov-2001   A.Satheesh Kumar Reddy            */
/*										:	1.1		17-Dec-2007		Sushil Sharma											*/
/*									  : 1.2   03-Nov-2009		Shamili Dalvi											*/
/*										:	1.3		15-Nov-2010		Sandeep Patil											*/
/*                                                                            */
/******************************************************************************/
/*  1.0  -  New release                                                       */
/*	1.1	 -	IBM Migration																											*/
/*	1.2	 -  Single console																										*/
/*	1.3	 -  Silver Light Changes ( Date Format Changes )											*/
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <fo_fml_def.h>
#include <fo_view_def.h>
#include <fn_session.h>
#include <fn_tuxlib.h>
#include <fn_ddr.h>
#include <fn_log.h>							/*** Ver 1.1 : Added	***/
#include <fn_read_debug_lvl.h>  /*  Ver 1.1 : Added   */

void SFO_GT_MKT_MSG ( TPSVCINFO *rqst )
{
	FBFR32 *ptr_fml_Ibuf;
	FBFR32 *ptr_fml_Obuf;

	EXEC SQL BEGIN DECLARE SECTION;
		varchar c_msg[256];
		varchar c_time_stamp[256];
	EXEC SQL END DECLARE SECTION;
	char c_ServiceName[33];
	char c_err_msg[256];
	int i_returncode;
  int i_counter = 1;
	int i_cnt=0;

	struct vw_mkt_msg st_mkt_msg;
	struct vw_err_msg st_err_msg;
	struct vw_usr_prfl st_usr_prfl;

	ptr_fml_Ibuf = (FBFR32 *)rqst->data;
	strcpy( c_ServiceName, "SFO_GT_MKT_MSG" );
	INITDBGLVL(c_ServiceName);            /*  Ver 1.1 : Added   */

	i_returncode = Fvftos32( ptr_fml_Ibuf, 
                           (char *)&st_mkt_msg, 
                           "vw_mkt_msg" );
	if ( i_returncode == -1 )
	{
		fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg  );
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

	i_returncode = Fvftos32( ptr_fml_Ibuf,
                           (char *)&st_usr_prfl,
                           "vw_usr_prfl" );
  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31010", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
  	fn_userlog( c_ServiceName, "User Id :%s:", st_usr_prfl.c_user_id );
  	fn_userlog( c_ServiceName, "Session Id  :%ld", st_usr_prfl.l_session_id );
  	fn_userlog( c_ServiceName, "Exchange Code :%s", st_mkt_msg.c_xchng_cd );
  	fn_userlog( c_ServiceName, "Market Type :%c", st_mkt_msg.c_msg_id );
	}

  /*** Added for Order Routing ***/
  fn_init_ddr_val ( st_mkt_msg.c_rout_crt );

	strcpy ( st_usr_prfl.c_cln_mtch_accnt, "*" );
  i_returncode = fn_chk_sssn( c_ServiceName, &st_usr_prfl,
																						 &st_err_msg ) ;

  if ( i_returncode == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, st_err_msg.c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }


	fn_userlog(c_ServiceName,"st_mkt_msg.c_msg_id is :%c:",st_mkt_msg.c_msg_id);

  EXEC SQL DECLARE get_mkt_msg CURSOR
           FOR
						SELECT	NVL(FTM_MSG,' '),
										to_char( FTM_TM, 'dd-Mon-yyyy hh24:mi:ss' )			/***	Ver	1.3	***/
						FROM		FTM_FO_TRD_MSG
						WHERE		FTM_XCHNG_CD = :st_mkt_msg.c_xchng_cd 
						AND			FTM_MSG_ID like :st_mkt_msg.c_msg_id						/**1.2**/
						ORDER BY FTM_TM;

 EXEC SQL OPEN get_mkt_msg; 
	
 if ( SQLCODE != 0 )
  {
		fn_errlog( c_ServiceName, "S31015", SQLMSG, c_err_msg  );
  	EXEC SQL CLOSE get_mkt_msg;
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	ptr_fml_Obuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN );
	
	if ( ptr_fml_Obuf == NULL )
	{
		fn_errlog( c_ServiceName, "S31020", TPMSG, c_err_msg  );
  	EXEC SQL CLOSE get_mkt_msg;
		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
	}

  while(1)
  {
    EXEC SQL FETCH get_mkt_msg 
						 INTO :c_msg,
									:c_time_stamp;

    if ( SQLCODE != 0 )
    {
      if ( SQLCODE == NO_DATA_FOUND )
      {
        break;
      }
			fn_errlog( c_ServiceName, "S31025", TPMSG, c_err_msg  );
  		EXEC SQL CLOSE get_mkt_msg;
			tpfree ( ( char * ) ptr_fml_Obuf );
			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }

		SETNULL( c_msg );
		SETNULL( c_time_stamp );

		strcpy( st_mkt_msg.c_tm_stmp, (char *)c_time_stamp.arr );
		strcpy( st_mkt_msg.c_msg, (char *)c_msg.arr );

		rtrim( st_mkt_msg.c_tm_stmp );
		rtrim( st_mkt_msg.c_msg );

	if( DEBUG_MSG_LVL_3 ) {          /*  Ver 1.1 : Debug level Change  */
  	fn_userlog( c_ServiceName, "c_msg:%s:", c_msg.arr);
    fn_userlog( c_ServiceName, "c_tm_stmp:%s:", 
                                c_time_stamp.arr);
	}


    i_returncode = Fvstof32( ptr_fml_Obuf, (char *) &st_mkt_msg, 
															FCONCAT, "vw_mkt_msg" );
    
    if ( i_returncode == -1 )
    {
      if( Ferror32 == FNOSPACE )
      {
        i_counter++;
        ptr_fml_Obuf = (FBFR32 *)tprealloc( (char *)ptr_fml_Obuf,
                            i_counter * MIN_FML_BUF_LEN );

        if ( ptr_fml_Obuf == NULL )
        {
					fn_errlog( c_ServiceName, "S31030", TPMSG, c_err_msg  );
  				EXEC SQL CLOSE get_mkt_msg;
					tpfree ( ( char * ) ptr_fml_Obuf );
					Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
					tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }

				i_returncode = Fvstof32( ptr_fml_Obuf, (char *)&st_mkt_msg,
                                 FCONCAT, "vw_mkt_msg" );

        if ( i_returncode == -1 )
        {
					fn_errlog( c_ServiceName, "S31035", FMLMSG, c_err_msg  );
  				EXEC SQL CLOSE get_mkt_msg;
					tpfree ( ( char * ) ptr_fml_Obuf );
					Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
					tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
      }
      else
      {
					fn_errlog( c_ServiceName, "S31040", FMLMSG, c_err_msg  );
  				EXEC SQL CLOSE get_mkt_msg;
					tpfree ( ( char * ) ptr_fml_Obuf );
					Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
					tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
		}
  }

 	EXEC SQL CLOSE get_mkt_msg;

	tpreturn( TPSUCCESS, SUCC_BFR, (char *)ptr_fml_Obuf, 0 , 0 );

}
