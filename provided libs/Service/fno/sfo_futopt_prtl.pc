/*  Program           : SFO_FUTOPT_PRTFL                                      */
/*                                                                            */
/*  Input             : Required                                              */
/*                      FFO_USR_ID                                            */
/*                      FFO_SSSN_ID                                           */
/*                      FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_XCHNG_CD                                          */
/*                      FFO_UNDRLYNG																					*/
/*											FFO_PRDCT_TYP                                         */
/*                      FFO_FROM_DT                                           */
/*                      FFO_TO_DT                                             */
/*                      FFO_ROUT_CRT																					*/
/*                                                                            */
/*  Output            : FFO_XCHNG_CD                                          */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_EXPRY_DT                                          */
/*                      FFO_EXER_TYP                                          */
/*                      FFO_CTGRY_INDSTK                                      */
/*                      FFO_OPNPSTN_QTY                                       */
/*                      FFO_OPNPSTN_VAL																				*/
/*											FFO_TRD_FLW		                                        */
/*											FFO_BRKRG_VL																					*/
/*											FFO_OPT_TYP																						*/
/*											FFO_STRK_PRC																					*/	
/*											FFO_CUR_MKT_PRC																				*/
/*											FFO_RLZD_PL																						*/
/*											FFO_UNRLZD_PL																					*/
/*											FFO_EBA_MTCH_ACT_NO																		*/
/*											FFO_AVRG_TRD_PRC																			*/
/******************************************************************************/
/*  Description       : This service retrieves the open position qty and rate */
/*                      for each contract. In addition it calculates the      */
/*                      Realized and Unrealized Profit & Loss for each of     */
/*                      these contracts.                                      */
/******************************************************************************/
/*  Log               : 1.0   07-Aug-2014   Tanmay Warkhade                   */
/*  Log               : 1.1   24-Jul-2015   Tanmay Warkhade                   */
/*  Log               : 1.2   09-Feb-2016   Ritesh Deolekar										*/
/*  Log               : 1.3   05-Oct-2016   Bhupendra Malik                   */
/*  Log               : 1.4   30-Jun-2017   Sandip tambe                      */
/******************************************************************************/
/* 1.0    -   New Release																											*/
/* 1.1 		-		Bug Fix																													*/
/* 1.2 		-		Exchange Code ALL Handling Introduced														*/
/* 1.3    -   Core FIx                                                        */
/* 1.4    -   GST spceific columns select from ftd                            */
/******************************************************************************/


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fo_fml_def.h>
#include <fo_view_def.h>
#include <fn_session.h>
#include <fn_ddr.h>
#include <fn_read_debug_lvl.h>
#include <fn_span_lib.h>
#define  ALL_EXPIRY 'A'
#define  EXPIRY 'X'
#define  DAILY  'D'
#define REC_LENGTH 2000


/* VER TOL : TUX on LINUX -- Changed name ofr function 'fn_buy_opnpstn' to 'fn_buy_opnpstn_fp' ( fp : futopt_prtl ) Ravindra */
int fn_buy_opnpstn_fp(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prdct_typ ,
									 double d_ltp,
                   double *d_crst_prft,
                   double *d_uncrst_prft,
                   double *d_avg_pr,
                   char *c_errmsg,
									 double *d_total_prft,
									 long *l_strike_prc,
									 long 	*l_opnpstn_qty,
									 double *d_opn_buy_val);

/* VER TOL : TUX on LINUX -- Changed name ofr function 'fn_sell_opnpstn' to 'fn_sell_opnpstn_fp' ( fp : futopt_prtl ) Ravindra */
int fn_sell_opnpstn_fp(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prdct_typ ,
									 double d_ltp,
                   double *d_crst_prft,
                   double *d_uncrst_prft,
                   double *d_avg_pr,
                   char *c_errmsg,
									 double *d_total_prft,
									 long *l_strike_prc,
									 long  *l_opnpstn_qty, double *d_opn_sell_val);

int fn_sqroff_pstn (char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prdct_typ ,
									 double d_ltp,
                   double *d_crst_prft,
                   double *d_uncrst_prft,
                   char *c_errmsg,
									 double *d_total_prft,
									 long *l_strike_prc);

int fn_sltpbuy_opnpstn(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
									 double *d_opn_sltp_val,
                   char *c_errmsg, long *l_opnpstn_qty);

int fn_sltpsell_opnpstn(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
									 double *d_opn_sltp_val,
                   char *c_errmsg, long *l_opnpstn_qty);

/* VER TOL : TUX on LINUX -- Changed function name from 'fn_optplusbuy_opnpstn_fp' to 'fn_optplusbuy_opnpstn_fp' (Ravindra) */
int fn_optplusbuy_opnpstn_fp(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   long l_strike_prc,
                   char c_opt_typ,
                   double *d_op_opn_val,
                 	 char *c_errmsg,long *l_opnpstn_qty);

/* VER TOL : TUX on LINUX -- Changed function name 'fn_optplussell_opnpstn' to 'fn_optplussell_opnpstn_fp' (Ravindra) */
int fn_optplussell_opnpstn_fp(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   long l_strike_prc,
                   char c_opt_typ,
                   double *d_op_opn_val,
									 char *c_errmsg,long *l_opnpstn_qty);

void SFO_FUTOPT_PRTL ( TPSVCINFO *rqst )
{
	FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;

	char c_exrc_typ;	
	char c_cln_mtch_accnt [11];
	char c_expry_dt[ LEN_DATE ];		
	char c_tmp_mtch_accnt[11] ;
	char c_opnpstn_flw ='\0';
	char c_tmp_xchng_cd[4] ;
	char c_user_id[ 15 ];
	char c_tmp_undrlyng[7] ;
	char c_tmp_expry_dt[LEN_DATE];
	char c_spn_allwd_flg 				= '\0';
	char c_tmp_prd_typ					= '\0';  		 
	char c_bsespn_allwd_flg 	 	= '\0';
	char c_xchng_cd[4];
  char c_undrlyng[7];
  char c_frm_dt[23];
  char c_to_dt[23];
  char c_rout_crt[4];
	char c_prd_typ							='\0';
	char c_ctgry_indstk;
	char c_opt_typ;	
	char c_ServiceName[33];
 	char c_errmsg[256];

	varchar c_trd_dt [ LEN_DATE ];
	int i_exists_main 						= 0;
	int i_exists 									= 0;
	int i_fod_exists 							= 0;
	int i_fcp_exists 							= 0;
	int i_fop_exists 							= 0;
	int i_ch_val									= 0;
	int i_returncode							= 0;	
	int i_err[16]										 ;				
	int i_ferr[16]								   ;
	int i 												=	0;	
	int i_bufferlength 						= 0;

	double d_op_opn_val						= 0.0;
	double d_cls_val_h 						= 0;
	double d_buy_val							= 0;
	double d_sell_val							= 0;
	double d_ex_val_h							= 0;
	double d_ex_val								= 0;
	double d_as_val								= 0;
	double d_ex_val_m							= 0;
	double d_buy_val_m	 					= 0;	

	double d_frsh_brk 						=	0;
	double d_cvr_brk 							= 0;
  double d_as_val_m							= 0;
	double d_total_prft  					= 0.0;
	double d_org_opn_val 					=	0.0;	
	double d_mtm_opn_val					=	0.0;	
	double d_base_prc							= 0;
	double d_buy_val_h 						= 0;
	double d_opn_sltp_val					= 0;
	double d_opn_sell_val					= 0;
	double d_avg_pr 							= 0;
	double d_opn_buy_val	 				= 0;
	double d_sell_val_m						= 0;
	double d_sell_val_h						= 0;
	double d_cls_val_m 						= 0;
	double d_cls_val 							= 0;			
	double d_crst_prft 						=	0;
	double d_uncrst_prft 					= 0;
  double d_ltp 									= 0.0;
	double d_as_val_h;	

	long l_bufferlength 					= 0; 
	long l_session_id							= 0;
	long l_optplus_qty 						=	0;
	long l_avg_pr 								= 0.0;	
	long l_fp_opnpstn_qty 				= 0;
	long l_f_opnpstn_qty 					= 0;
	long l_tot_brkg 							= 0;	
	long l_tot_buy_qty_m 					=	0;
	long l_tot_buy_qty 						= 0;
	long l_temp_strike_prc				= 0;
	long l_tot_buy_qty_h 					= 0;
	long l_sltp_opnpstn_qty 			= 0;
	long l_spn_opnpstn_qty 				= 0;
	long l_charges 								= 0;
	long l_chrgs_tmp							= 0;	
	long l_strike_prc							= 0;
	long l_tot_sell_qty_m 				= 0;
	long l_tot_sell_qty_h					= 0;
	long l_rec_main_exists				= 0;
  long l_rec_hstry_exists				= 0;	
	long l_tot_sell_qty						= 0;
	long l_avg_trd_prc						= 0;
	long l_opnpstn_qty						=	0;
	long int li_exctd_qty					= 0;
	long int li_bal_qty 					= 0;
	long int li_crst_qty 					=	0;
	long int li_uncrst_qty 				= 0;
  long int li_exctd_rt					= 0;
		
	sql_cursor chrgs_cur;
	sql_cursor cont_cursor;
	sql_cursor brkg_cursor;
	sql_cursor trd_cursor;

	FBFR32  *ptr_ffo_temp_buffer;

	struct st_cntopt_pos st_cntopt_pos;
	struct st_cntrct_qt st_cntrct_qt;
	struct st_cntfut_pos st_cntfut_pos;

	ptr_fml_Obuf = (FBFR32 *)tpalloc("FML32", NULL, MIN_FML_BUF_LEN * 5);
  if(ptr_fml_Obuf == NULL)
  {
    fn_errlog(c_ServiceName, "S31005", FMLMSG, c_errmsg);
    Fadd32(ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0);
    tpreturn(TPFAIL, 0, (char *)ptr_fml_Ibuf, 0, 0);
  }

	ptr_fml_Ibuf = (FBFR32 *)rqst->data;
  strcpy( c_ServiceName, rqst->name );
  INITDBGLVL(c_ServiceName);

	i_err[0]= Fget32(ptr_fml_Ibuf, FFO_USR_ID, 0, (char *)c_user_id, 0);
  i_ferr [ 0 ] = Ferror32;

  i_err[1]= Fget32(ptr_fml_Ibuf, FFO_SSSN_ID, 0, (char *)&l_session_id, 0);
  i_ferr [ 1 ] = Ferror32;

  i_err[2]= Fget32(ptr_fml_Ibuf, FFO_EBA_MTCH_ACT_NO, 0, (char *)c_cln_mtch_accnt, 0);
  i_ferr [ 2 ] = Ferror32;

  i_err[3]= Fget32(ptr_fml_Ibuf, FFO_XCHNG_CD ,0, (char *)c_xchng_cd, 0);
  i_ferr [ 3 ] = Ferror32;

  i_err[4]= Fget32(ptr_fml_Ibuf, FFO_PRDCT_TYP, 0, (char *)&c_prd_typ, 0);
  i_ferr [ 4 ] = Ferror32;

  i_err[5]= Fget32(ptr_fml_Ibuf, FFO_FROM_DT, 0, (char *)c_frm_dt, 0);
  i_ferr [ 5 ] = Ferror32;

  i_err[6]= Fget32(ptr_fml_Ibuf, FFO_TO_DT, 0, (char *)c_to_dt, 0);
  i_ferr [ 6 ] = Ferror32;

	i_err[7]=Fget32(ptr_fml_Ibuf, FFO_UNDRLYNG, 0, (char *)c_undrlyng, 0);
	i_err[7] = Ferror32;

	for(i=0; i <8 ; i++)
  {
   if ( i_err[ i ] == -1 )
   {
    fn_errlog( c_ServiceName, "S31010", Fstrerror32(i_ferr[i]),c_errmsg);
    tpfree ( ( char * ) ptr_fml_Obuf );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
   }
	}


  rtrim(c_undrlyng);
  rtrim(c_xchng_cd);
  rtrim(c_user_id);
  rtrim(c_cln_mtch_accnt);

	if(DEBUG_MSG_LVL_3)
  {
	 fn_userlog( c_ServiceName, "User ID:%s:",c_user_id);
	 fn_userlog( c_ServiceName, "Session ID:%ld:",l_session_id);
	 fn_userlog( c_ServiceName, "Match account :%s:",c_cln_mtch_accnt );
   fn_userlog( c_ServiceName, "Contract details" );
	 fn_userlog( c_ServiceName, "c_from_dt:%s:",c_frm_dt);
	 fn_userlog( c_ServiceName, "underlying is:%s:",c_undrlyng); 
	 fn_userlog( c_ServiceName, "c_to_dt:%s:",c_to_dt);
	 fn_userlog( c_ServiceName, "Order route:%s:",st_cntrct_qt.c_rout_crt);
	 fn_userlog( c_ServiceName, "product type:%c:",c_prd_typ);
	 fn_userlog( c_ServiceName, "Old Exchange Code Is:%s:",c_xchng_cd);		/*** Added in Ver 1.2 ***/
	}	

	if(strcmp(c_undrlyng,"A") == 0)
	{
		strcpy(c_undrlyng,"%");
	}

	if(strcmp(c_xchng_cd,"A") == 0) /*** Added in Ver 1.2 ***/
  {
    strcpy(c_xchng_cd,"%");
  }
	
	if(DEBUG_MSG_LVL_0)	
	{
  	fn_userlog(c_ServiceName,"New Exchange Code Is:%s:",c_xchng_cd); /*** Added in Ver 1.2 ***/
	}

	EXEC SQL ALLOCATE :cont_cursor;
	if(c_prd_typ =='F')
	{
	 if( strcmp( c_cln_mtch_accnt , "*" ) == 0 )
   {	
		if( c_user_id[0] == BPID )
    {
 		 if(DEBUG_MSG_LVL_3){
     fn_userlog(c_ServiceName,"BPID");}

     EXEC SQL EXECUTE
     BEGIN
     OPEN  :cont_cursor FOR
     SELECT   FTD_CLM_MTCH_ACCNT,
              FTD_XCHNG_CD,
              FTD_INDSTK,
              FTD_UNDRLYNG,
              'F', 
              FTD_EXER_TYP,
              FTD_EXPRY_DT,
              FTD_OPT_TYP,
              FTD_STRK_PRC
      FROM    FTD_FO_TRD_DTLS,  clm_clnt_mstr
      WHERE   FTD_CLM_MTCH_ACCNT = CLM_MTCH_ACCNT
  /** AND     rtrim(FTD_XCHNG_CD)       = trim(:c_xchng_cd)  *** Commented in Ver 1.2 ***/ 
      AND     rtrim(FTD_XCHNG_CD)   LIKE  trim(:c_xchng_cd) /*** Added in Ver 1.2 ***/
      AND     rtrim(FTD_UNDRLYNG)   LIKE  trim(:c_undrlyng)
      AND     FTD_PRDCT_TYP      IN ('F','P','U')
      AND     trunc(FTD_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
      AND     trunc(FTD_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
			AND			CLM_BP_ID = :c_user_id	
      UNION 
			SELECT  PCP_CLM_MTCH_ACCNT,
              PCP_XCHNG_CD,
              PCP_INDSTK,
              PCP_UNDRLYNG,
              'F', 
              PCP_EXER_TYP,
              PCP_EXPRY_DT,
              PCP_OPT_TYP,
              PCP_STRK_PRC
      FROM    PCP_PRTFL_CNTRCT_PRDCT,clm_clnt_mstr
      WHERE   PCP_CLM_MTCH_ACCNT = CLM_MTCH_ACCNT 
  /** AND     rtrim(PCP_XCHNG_CD)       = :c_xchng_cd   *** Commented in Ver 1.2 ***/
      AND     rtrim(PCP_XCHNG_CD)   LIKE  trim(:c_xchng_cd)		/*** Added in Ver 1.2 ***/
      AND     PCP_PRDCT_TYP      in ('F','P','U')
      AND     rtrim(PCP_UNDRLYNG)   LIKE  trim(:c_undrlyng)
			AND		  CLM_BP_ID = :c_user_id 
      AND     trunc(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
      AND     trunc(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
			UNION
      SELECT   PCP_CLM_MTCH_ACCNT,
               PCP_XCHNG_CD,
               PCP_INDSTK,
               PCP_UNDRLYNG,
               'F', 
               PCP_EXER_TYP,
               PCP_EXPRY_DT,
               PCP_OPT_TYP,
               PCP_STRK_PRC
     FROM      PCP_PRTFL_CNTRCT_PRDCT_HSTRY, clm_clnt_mstr
     WHERE     PCP_CLM_MTCH_ACCNT = CLM_MTCH_ACCNT 
 /** AND       rtrim(PCP_XCHNG_CD)       = trim(:c_xchng_cd)  *** Commented in Ver 1.2 ***/
     AND       rtrim(PCP_XCHNG_CD)    LIKE    trim(:c_xchng_cd)  /*** Added in Ver 1.2 ***/
     AND       PCP_PRDCT_TYP      in ('F','P','U')
     AND       CLM_BP_ID = :c_user_id
		 AND			 rtrim(PCP_UNDRLYNG)   LIKE  trim(:c_undrlyng)
     AND       trunc(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
     AND       trunc(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy');
	 END;
   END-EXEC;
   }
   else
   {
		 EXEC SQL EXECUTE
    BEGIN
    OPEN  :cont_cursor FOR
    SELECT   FTD_CLM_MTCH_ACCNT,
             FTD_XCHNG_CD,
             FTD_INDSTK,
             FTD_UNDRLYNG,
             'F', 
             FTD_EXER_TYP,
             FTD_EXPRY_DT,
             FTD_OPT_TYP,
             FTD_STRK_PRC
     FROM    FTD_FO_TRD_DTLS, uac_usr_accnts 
     WHERE   FTD_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT  
 /** AND     rtrim(FTD_XCHNG_CD)       = trim(:c_xchng_cd)    *** Commented in Ver 1.2 ***/
     AND     rtrim(FTD_XCHNG_CD)  LIKE   trim(:c_xchng_cd)		/*** Added in Ver 1.2 ***/
     AND     rtrim(FTD_UNDRLYNG)  LIKE   trim(:c_undrlyng)
     AND     FTD_PRDCT_TYP      IN ('F','P','U')
     AND     trunc(FTD_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
     AND     trunc(FTD_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
		 AND		 UAC_USR_ID = :c_user_id 
     UNION 
     SELECT  PCP_CLM_MTCH_ACCNT,
             PCP_XCHNG_CD,
             PCP_INDSTK,
             PCP_UNDRLYNG,
             'F', 
             PCP_EXER_TYP,
             PCP_EXPRY_DT,
             PCP_OPT_TYP,
             PCP_STRK_PRC
     FROM    PCP_PRTFL_CNTRCT_PRDCT, uac_usr_accnts 
     WHERE   PCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT 
 /** AND     rtrim(PCP_XCHNG_CD)       = :c_xchng_cd					*** Commented in Ver 1.2 ***/
 		 AND     rtrim(PCP_XCHNG_CD)    LIKE trim(:c_xchng_cd)		/*** Added in Ver 1.2 ***/
     AND     PCP_PRDCT_TYP      in ('F','P','U')
     AND     rtrim(PCP_UNDRLYNG)   LIKE  trim(:c_undrlyng)
     AND     trunc(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
     AND     trunc(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
		 AND 		  UAC_USR_ID = :c_user_id
		 UNION
		 SELECT   PCP_CLM_MTCH_ACCNT,
              PCP_XCHNG_CD,
              PCP_INDSTK,
              PCP_UNDRLYNG,
              'F', 
              PCP_EXER_TYP,
              PCP_EXPRY_DT,
              PCP_OPT_TYP,
              PCP_STRK_PRC
  	 FROM     PCP_PRTFL_CNTRCT_PRDCT_HSTRY, uac_usr_accnts 
  	 WHERE    PCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT 
 /** AND      rtrim(PCP_XCHNG_CD)       = :c_xchng_cd 				*** Commented in Ver 1.2 ***/
  	 AND      rtrim(PCP_XCHNG_CD)   LIKE 	trim(:c_xchng_cd)		/*** Added in Ver 1.2 ***/
  	 AND      PCP_PRDCT_TYP      in ('F','P','U')
  	 AND      rtrim(PCP_UNDRLYNG)   LIKE  trim(:c_undrlyng)
  	 AND      trunc(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
  	 AND      trunc(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
		 AND			 UAC_USR_ID = :c_user_id;
		END;
 		END-EXEC;
  	}	
	} 									
	else
	{
	 rtrim(c_frm_dt);
	 rtrim(c_to_dt);
	 rtrim(c_xchng_cd);
	 rtrim(c_cln_mtch_accnt);

				 					 		  
	 EXEC SQL EXECUTE
   BEGIN
   OPEN  :cont_cursor FOR
   SELECT  	FTD_CLM_MTCH_ACCNT,
	    		 	FTD_XCHNG_CD,
 				   	FTD_INDSTK,
				   	FTD_UNDRLYNG,
  	  		  'F',	
				   	FTD_EXER_TYP,
					 	FTD_EXPRY_DT,
					 	FTD_OPT_TYP,
				   	FTD_STRK_PRC
	 FROM 	 	FTD_FO_TRD_DTLS
 	 WHERE   	TRIM(FTD_CLM_MTCH_ACCNT) = :c_cln_mtch_accnt
/* AND     	TRIM(FTD_XCHNG_CD)       = :c_xchng_cd				*** Commented in Ver 1.2 ***/
   AND     	TRIM(FTD_XCHNG_CD)   LIKE	 trim(:c_xchng_cd)	/*** Added in Ver 1.2 ***/
   AND     	TRIM(FTD_UNDRLYNG)   LIKE  trim(:c_undrlyng)
   AND     	FTD_PRDCT_TYP      IN  ('F','P','U')
   AND     	TRUNC(FTD_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-Mon-yyyy')
	 AND 		 	TRUNC(FTD_EXPRY_DT) <= to_date ( :c_to_dt,'dd-Mon-yyyy')
	 UNION
 	 SELECT			PCP_CLM_MTCH_ACCNT,
							PCP_XCHNG_CD,
	 				    PCP_INDSTK,
							PCP_UNDRLYNG,
						  'F',	
							PCP_EXER_TYP,
							PCP_EXPRY_DT,
							PCP_OPT_TYP,
							PCP_STRK_PRC	
    FROM			PCP_PRTFL_CNTRCT_PRDCT
    WHERE 		TRIM(PCP_CLM_MTCH_ACCNT) = :c_cln_mtch_accnt
/** AND   		TRIM(PCP_XCHNG_CD)       = :c_xchng_cd				*** Commented in Ver 1.2 ***/
    AND   		TRIM(PCP_XCHNG_CD)  LIKE   trim(:c_xchng_cd)	/*** Added in Ver 1.2 ***/
    AND   		PCP_PRDCT_TYP      in ('F','P','U')
    AND   		TRIM(PCP_UNDRLYNG)  LIKE   trim(:c_undrlyng)
    AND   		TRUNC(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy') 
		AND   		TRUNC(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
		UNION 
		SELECT		PCP_CLM_MTCH_ACCNT,
							PCP_XCHNG_CD,
							PCP_INDSTK,
							PCP_UNDRLYNG,
						 	'F',	
							PCP_EXER_TYP,
							PCP_EXPRY_DT,
							PCP_OPT_TYP,
							PCP_STRK_PRC
   FROM  			PCP_PRTFL_CNTRCT_PRDCT_HSTRY
   WHERE 			TRIM(PCP_CLM_MTCH_ACCNT) = :c_cln_mtch_accnt
/* AND   			TRIM(PCP_XCHNG_CD)       = :c_xchng_cd			*** Commented in Ver 1.2 ***/
   AND   			TRIM(PCP_XCHNG_CD)   LIKE trim(:c_xchng_cd)	/*** Added in Ver 1.2 ***/
   AND   			PCP_PRDCT_TYP      in ('F','P','U')
   AND   			TRIM(PCP_UNDRLYNG)   LIKE trim(:c_undrlyng)
   AND   			TRUNC(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
   AND   			TRUNC(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy');
	 END;
	 END-EXEC;
	 }
	}	
	else if(c_prd_typ =='O')
	{
   if( strcmp( c_cln_mtch_accnt , "*" ) == 0 )
   {
    if( c_user_id[0] == BPID )
    {
     if(DEBUG_MSG_LVL_3)
		 {
      fn_userlog(c_ServiceName,"BPID");
		 }
       
			EXEC SQL EXECUTE
      BEGIN
      OPEN  :cont_cursor FOR
      SELECT   FTD_CLM_MTCH_ACCNT,
               FTD_XCHNG_CD,
               FTD_INDSTK,
               FTD_UNDRLYNG,
               'O', 
               FTD_EXER_TYP,
               FTD_EXPRY_DT,
               FTD_OPT_TYP,
               FTD_STRK_PRC
               FROM    FTD_FO_TRD_DTLS,  clm_clnt_mstr
               WHERE   FTD_CLM_MTCH_ACCNT = CLM_MTCH_ACCNT 
          /*** AND     rtrim(FTD_XCHNG_CD)       = trim(:c_xchng_cd)   *** Commented in Ver 1.2 ***/
               AND     rtrim(FTD_XCHNG_CD)   LIKE  trim(:c_xchng_cd)	 /*** Added in Ver 1.2 ***/
               AND     rtrim(FTD_UNDRLYNG)   LIKE  trim(:c_undrlyng)
               AND     FTD_PRDCT_TYP      IN ('I','O')
               AND     TRUNC(FTD_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
               AND     TRUNC(FTD_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
               AND		 CLM_BP_ID = :c_user_id
							 UNION
               SELECT  PCP_CLM_MTCH_ACCNT,
                       PCP_XCHNG_CD,
                       PCP_INDSTK,
                       PCP_UNDRLYNG,
                    	 'O', 
                       PCP_EXER_TYP,
                       PCP_EXPRY_DT,
                       PCP_OPT_TYP,
                       PCP_STRK_PRC
               FROM    PCP_PRTFL_CNTRCT_PRDCT,clm_clnt_mstr
               WHERE   PCP_CLM_MTCH_ACCNT = CLM_MTCH_ACCNT
          /*** AND     rtrim(PCP_XCHNG_CD)       = :c_xchng_cd				*** Commented in Ver 1.2 ***/
          		 AND     rtrim(PCP_XCHNG_CD)   LIKE  trim(:c_xchng_cd)	/*** Added in Ver 1.2 ***/	
               AND     PCP_PRDCT_TYP      in ('I','O')
               AND     rtrim(PCP_UNDRLYNG)   LIKE  trim(:c_undrlyng)
               AND     trunc(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
               AND     trunc(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
               AND     CLM_BP_ID = :c_user_id
               UNION
               SELECT  PCP_CLM_MTCH_ACCNT,
                       PCP_XCHNG_CD,
                       PCP_INDSTK,
                       PCP_UNDRLYNG,
                       'O', 
                       PCP_EXER_TYP,
                       PCP_EXPRY_DT,
                       PCP_OPT_TYP,
                       PCP_STRK_PRC
           FROM        PCP_PRTFL_CNTRCT_PRDCT_HSTRY, clm_clnt_mstr
           WHERE       PCP_CLM_MTCH_ACCNT = CLM_MTCH_ACCNT 
      /**  AND         rtrim(PCP_XCHNG_CD)      = trim(:c_xchng_cd)			*** Commented in Ver 1.2 ***/
           AND         rtrim(PCP_XCHNG_CD)   LIKE  trim(:c_xchng_cd)		/*** Added in Ver 1.2 ***/
           AND         PCP_PRDCT_TYP      in ('I','O')
           AND         rtrim(PCP_UNDRLYNG)   LIKE  trim(:c_undrlyng)
           AND         trunc(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
           AND         trunc(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
               AND     CLM_BP_ID = :c_user_id;
  		 END;
   	 END-EXEC;
   	}
		else
    {
     EXEC SQL EXECUTE
     BEGIN
     OPEN  :cont_cursor FOR
     SELECT   FTD_CLM_MTCH_ACCNT,
     					FTD_XCHNG_CD,
     					FTD_INDSTK,
     					FTD_UNDRLYNG,
              'O', 
              FTD_EXER_TYP,
              FTD_EXPRY_DT,
              FTD_OPT_TYP,
  						FTD_STRK_PRC
      FROM    FTD_FO_TRD_DTLS, uac_usr_accnts
      WHERE   FTD_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT 
     	AND		 UAC_USR_ID = :c_user_id	
	/**	AND     rtrim(FTD_XCHNG_CD)       = :c_xchng_cd							*** Commented in Ver 1.2 ***/
			AND     rtrim(FTD_XCHNG_CD)  LIKE   trim(:c_xchng_cd)				/*** Added in Ver 1.2 ***/
      AND     rtrim(FTD_UNDRLYNG)  LIKE   trim(:c_undrlyng)
      AND     FTD_PRDCT_TYP      IN ('I','O')
      AND     trunc(FTD_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
      AND     trunc(FTD_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
		  UNION
      SELECT  PCP_CLM_MTCH_ACCNT,
              PCP_XCHNG_CD,
              PCP_INDSTK,
              PCP_UNDRLYNG,
              'O', 
              PCP_EXER_TYP,
              PCP_EXPRY_DT,
              PCP_OPT_TYP,
              PCP_STRK_PRC
      FROM    PCP_PRTFL_CNTRCT_PRDCT, uac_usr_accnts
      WHERE   PCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT 
      AND     UAC_USR_ID = :c_user_id
  /** AND     rtrim(PCP_XCHNG_CD)       = :c_xchng_cd					*** Commented in Ver 1.2 ***/
      AND     rtrim(PCP_XCHNG_CD)   LIKE  trim(:c_xchng_cd)		/*** Added in Ver 1.2 ***/
      AND     PCP_PRDCT_TYP      in ('I','O')
      AND     rtrim(PCP_UNDRLYNG)   LIKE  trim(:c_undrlyng)
      AND     trunc(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
      AND     trunc(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
      UNION
			SELECT   PCP_CLM_MTCH_ACCNT,
               PCP_XCHNG_CD,
               PCP_INDSTK,
               PCP_UNDRLYNG,
               'O', 
               PCP_EXER_TYP,
               PCP_EXPRY_DT,
               PCP_OPT_TYP,
               PCP_STRK_PRC
     FROM      PCP_PRTFL_CNTRCT_PRDCT_HSTRY, uac_usr_accnts
     WHERE     PCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
      AND    UAC_USR_ID = :c_user_id 
	/** AND       rtrim(PCP_XCHNG_CD)       = :c_xchng_cd		 		*** Commented in Ver 1.2 ***/	
      AND       rtrim(PCP_XCHNG_CD)  LIKE  trim(:c_xchng_cd)	/*** Added in Ver 1.2 ***/	
     AND       PCP_PRDCT_TYP      in ('I','O')
     AND       rtrim(PCP_UNDRLYNG)   LIKE  trim(:c_undrlyng)
     AND       trunc(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
 	   AND       trunc(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy');
    END;
    END-EXEC;
    }

   }
   else
	 {
   	 EXEC SQL EXECUTE
     BEGIN
     OPEN  :cont_cursor FOR
     SELECT	FTD_CLM_MTCH_ACCNT,
					  FTD_XCHNG_CD,
						FTD_INDSTK,
						FTD_UNDRLYNG,
					  'O',	
						FTD_EXER_TYP,
						FTD_EXPRY_DT,
						FTD_OPT_TYP,
						FTD_STRK_PRC
    FROM 		FTD_FO_TRD_DTLS
    WHERE   FTD_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
/** AND     FTD_XCHNG_CD       =:c_xchng_cd								*** Commented in Ver 1.2 ***/
    AND     FTD_XCHNG_CD       	 LIKE trim(:c_xchng_cd)		/*** Added in Ver 1.2 ***/
    AND     TRIM(FTD_UNDRLYNG)   LIKE trim(:c_undrlyng)
    AND     FTD_PRDCT_TYP      IN ('I','O')
    AND     TRUNC(FTD_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
    AND     TRUNC(FTD_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
    UNION 
    SELECT			PCP_CLM_MTCH_ACCNT,
								PCP_XCHNG_CD,
								PCP_INDSTK,
								PCP_UNDRLYNG,
						    'O',	
	  						PCP_EXER_TYP,
								PCP_EXPRY_DT,
								PCP_OPT_TYP,
								PCP_STRK_PRC
    FROM 		  	PCP_PRTFL_CNTRCT_PRDCT
    WHERE		  	PCP_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
/** AND 		  	rtrim(PCP_XCHNG_CD)       =:c_xchng_cd				*** Commented in Ver 1.2 ***/
    AND 		  	rtrim(PCP_XCHNG_CD)   LIKE trim(:c_xchng_cd)	/*** Added in Ver 1.2 ***/
    AND 		  	PCP_PRDCT_TYP      in ('I','O')
    AND 		  	rtrim(PCP_UNDRLYNG)   LIKE TRIM(:c_undrlyng)
    AND 		  	TRUNC(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
    AND 		  	TRUNC(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
    UNION
    SELECT			PCP_CLM_MTCH_ACCNT,
								PCP_XCHNG_CD,
								PCP_INDSTK,
								PCP_UNDRLYNG,
							 'O',	
								PCP_EXER_TYP,
								PCP_EXPRY_DT,
								PCP_OPT_TYP,
								PCP_STRK_PRC
    FROM  			PCP_PRTFL_CNTRCT_PRDCT_HSTRY
    WHERE 			PCP_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
/** AND   			RTRIM(PCP_XCHNG_CD)       =:c_xchng_cd				*** Commented in Ver 1.2 ***/
    AND   			RTRIM(PCP_XCHNG_CD)   LIKE trim(:c_xchng_cd)	/*** Added in Ver 1.2 ***/
    AND   			PCP_PRDCT_TYP      in ('I','O')
    AND   			RTRIM(PCP_UNDRLYNG)   LIKE TRIM(:c_undrlyng)
    AND   			TRUNC(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
    AND   			TRUNC(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy');
    END;
    END-EXEC;
   }
	}												
	else if(c_prd_typ == 'A')
	{
	 if( strcmp( c_cln_mtch_accnt , "*" ) == 0 )
   {
    if( c_user_id[0] == BPID )
    {
     if(DEBUG_MSG_LVL_3){
     fn_userlog(c_ServiceName,"BPID");}

     EXEC SQL EXECUTE
     BEGIN
     OPEN  :cont_cursor FOR
     SELECT   FTD_CLM_MTCH_ACCNT,
             FTD_XCHNG_CD,
             FTD_INDSTK,
             FTD_UNDRLYNG,
             DECODE(FTD_PRDCT_TYP,'O','O','I','O','P','F','U','F','F'),
             FTD_EXER_TYP,
             FTD_EXPRY_DT,
             FTD_OPT_TYP,
   		       FTD_STRK_PRC
     FROM    FTD_FO_TRD_DTLS,  clm_clnt_mstr	
     WHERE   FTD_CLM_MTCH_ACCNT = CLM_MTCH_ACCNT 
/**  AND     RTRIM(FTD_XCHNG_CD)       = :c_xchng_cd					*** Commented in Ver 1.2 ***/
     AND     RTRIM(FTD_XCHNG_CD)   LIKE  trim(:c_xchng_cd)		/*** Added in Ver 1.2 ***/
     AND     RTRIM(FTD_UNDRLYNG)   LIKE  TRIM(:c_undrlyng)
     AND     TRUNC(FTD_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
     AND     TRUNC(FTD_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
		 AND		 FTD_USR_ID = :c_user_id
     UNION
		 SELECT  PCP_CLM_MTCH_ACCNT,
             PCP_XCHNG_CD,
             PCP_INDSTK,
             PCP_UNDRLYNG,
             DECODE(PCP_PRDCT_TYP,'O','O','I','O','P','F','U','F','F'),
             PCP_EXER_TYP,
             PCP_EXPRY_DT,
             PCP_OPT_TYP,
             PCP_STRK_PRC
     FROM    PCP_PRTFL_CNTRCT_PRDCT,clm_clnt_mstr
     WHERE   PCP_CLM_MTCH_ACCNT = CLM_MTCH_ACCNT 
/*** AND     RTRIM(PCP_XCHNG_CD)       = :c_xchng_cd				*** Commented in Ver 1.2 ***/
     AND     RTRIM(PCP_XCHNG_CD)   LIKE  trim(:c_xchng_cd)	/*** Added in Ver 1.2 ***/
     AND     RTRIM(PCP_UNDRLYNG)   LIKE  :c_undrlyng
     AND     TRUNC(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
     AND     TRUNC(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
     UNION
     SELECT   PCP_CLM_MTCH_ACCNT,
              PCP_XCHNG_CD,
              PCP_INDSTK,
              PCP_UNDRLYNG,
              DECODE(PCP_PRDCT_TYP,'O','O','I','O','P','F','U','F','F'), 
              PCP_EXER_TYP,
              PCP_EXPRY_DT,
              PCP_OPT_TYP,
              PCP_STRK_PRC
     FROM     PCP_PRTFL_CNTRCT_PRDCT_HSTRY, clm_clnt_mstr
     WHERE    PCP_CLM_MTCH_ACCNT = CLM_MTCH_ACCNT
/**  AND			TRIM(PCP_XCHNG_CD)       = :c_xchng_cd				*** Commented in Ver 1.2 ***/
     AND			TRIM(PCP_XCHNG_CD)    LIKE  trim(:c_xchng_cd)	/*** Added in Ver 1.2 ***/
     AND      RTRIM(PCP_UNDRLYNG)   LIKE  :c_undrlyng
     AND      TRUNC(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
     AND      TRUNC(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy');
    END;
    END-EXEC;
   }
   else
   { 
		EXEC SQL EXECUTE 
    BEGIN
    OPEN  :cont_cursor FOR
    SELECT   FTD_CLM_MTCH_ACCNT,
             FTD_XCHNG_CD,
             FTD_INDSTK,
             FTD_UNDRLYNG,
      DECODE(FTD_PRDCT_TYP,'O','O','I','O','P','F','U','F','F'),
             FTD_EXER_TYP,
             FTD_EXPRY_DT,
             FTD_OPT_TYP,
             FTD_STRK_PRC
     FROM    FTD_FO_TRD_DTLS, uac_usr_accnts
     WHERE   FTD_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT 
/*** AND     RTRIM(FTD_XCHNG_CD)  					 = :c_xchng_cd			*** Commented in Ver 1.2 ***/
     AND     RTRIM(FTD_XCHNG_CD)  LIKE  trim(:c_xchng_cd)				/*** Added in Ver 1.2 ***/
     AND     RTRIM(FTD_UNDRLYNG)  LIKE 	TRIM(:c_undrlyng)
     AND     TRUNC(FTD_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
     AND     TRUNC(FTD_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
		 AND		 UAC_USR_ID = :c_user_id
 	   UNION
     SELECT  PCP_CLM_MTCH_ACCNT,
             PCP_XCHNG_CD,
             PCP_INDSTK,
             PCP_UNDRLYNG,
             DECODE(PCP_PRDCT_TYP,'O','O','I','O','P','F','U','F','F'),
             PCP_EXER_TYP,
             PCP_EXPRY_DT,
             PCP_OPT_TYP,
             PCP_STRK_PRC
     FROM    PCP_PRTFL_CNTRCT_PRDCT, uac_usr_accnts
     WHERE   PCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT 
/**	 AND     rtrim(PCP_XCHNG_CD)       = :c_xchng_cd				  *** Commented in Ver 1.2 ***/	
		 AND     rtrim(PCP_XCHNG_CD)   LIKE  trim(:c_xchng_cd)		/*** Added in Ver 1.2 ***/
     AND     RTRIM(PCP_UNDRLYNG)   LIKE  :c_undrlyng
     AND     TRUNC(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
		 AND     TRUNC(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
     AND		 UAC_USR_ID = :c_user_id
		 UNION
		 SELECT  PCP_CLM_MTCH_ACCNT,
             PCP_XCHNG_CD,
             PCP_INDSTK,
             PCP_UNDRLYNG,
      DECODE(PCP_PRDCT_TYP,'O','O','I','O','P','F','U','F','F'),
             PCP_EXER_TYP,
             PCP_EXPRY_DT,
             PCP_OPT_TYP,
             PCP_STRK_PRC
     FROM    PCP_PRTFL_CNTRCT_PRDCT_HSTRY, uac_usr_accnts
     WHERE   PCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT 
/*** AND     RTRIM(PCP_XCHNG_CD)       = :c_xchng_cd					*** Commented in Ver 1.2 ***/
     AND     RTRIM(PCP_XCHNG_CD)   LIKE  trim(:c_xchng_cd)	  /*** Added in Ver 1.2 ***/
     AND     RTRIM(PCP_UNDRLYNG)   LIKE  TRIM(:c_undrlyng)
     AND     TRUNC(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
     AND		 UAC_USR_ID = :c_user_id
		 AND     TRUNC(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy');
    END;
    END-EXEC;
   }
	} 
	else 
	{
		
    EXEC SQL EXECUTE
    BEGIN
    OPEN  :cont_cursor FOR
    SELECT	FTD_CLM_MTCH_ACCNT,
						FTD_XCHNG_CD,
						FTD_INDSTK,
						FTD_UNDRLYNG,
		 DECODE(FTD_PRDCT_TYP,'O','O','I','O','P','F','U','F','F'),
						FTD_EXER_TYP,
						FTD_EXPRY_DT,
						FTD_OPT_TYP,
						FTD_STRK_PRC
    FROM		FTD_FO_TRD_DTLS
    WHERE  	FTD_CLM_MTCH_ACCNT 				=:c_cln_mtch_accnt
/** AND    	RTRIM(FTD_XCHNG_CD)       =:c_xchng_cd						*** Commented in Ver 1.2 ***/
    AND    	RTRIM(FTD_XCHNG_CD)   LIKE trim(:c_xchng_cd)			/*** Added in Ver 1.2 ***/
    AND    	RTRIM(FTD_UNDRLYNG)   LIKE TRIM(:c_undrlyng)
    AND  		TRUNC(FTD_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
    AND  		TRUNC(FTD_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
    UNION
    SELECT	PCP_CLM_MTCH_ACCNT,
						PCP_XCHNG_CD,
						PCP_INDSTK,
						PCP_UNDRLYNG,
	   DECODE(PCP_PRDCT_TYP,'O','O','I','O','P','F','U','F','F'),
					  PCP_EXER_TYP,
						PCP_EXPRY_DT,
						PCP_OPT_TYP,
						PCP_STRK_PRC
    FROM			  PCP_PRTFL_CNTRCT_PRDCT
    WHERE 			PCP_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
/**	AND   			RTRIM(PCP_XCHNG_CD)       =:c_xchng_cd				*** Commented in Ver 1.2 ***/
    AND   			RTRIM(PCP_XCHNG_CD)  LIKE  trim(:c_xchng_cd)	/*** Added in Ver 1.2 ***/
    AND   			RTRIM(PCP_UNDRLYNG)  LIKE  trim(:c_undrlyng)
    AND   			TRUNC(PCP_EXPRY_DT) >=to_date ( :c_frm_dt,'dd-mon-yyyy')
    AND   			TRUNC(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy')
    UNION
    SELECT			PCP_CLM_MTCH_ACCNT,
		 						PCP_XCHNG_CD,
								PCP_INDSTK,
								PCP_UNDRLYNG,
		  	 DECODE(PCP_PRDCT_TYP,'O','O','I','O','P','F','U','F','F'),
								PCP_EXER_TYP,
								PCP_EXPRY_DT,
								PCP_OPT_TYP,
								PCP_STRK_PRC
    FROM  			PCP_PRTFL_CNTRCT_PRDCT_HSTRY
    WHERE 			PCP_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
/** AND   			rtrim(PCP_XCHNG_CD)       =:c_xchng_cd					*** Commented in Ver 1.2 ***/
    AND   			rtrim(PCP_XCHNG_CD)   LIKE trim(:c_xchng_cd)		/*** Added in Ver 1.2 ***/
    AND   			rtrim(PCP_UNDRLYNG)   LIKE :c_undrlyng
    AND   			trunc(PCP_EXPRY_DT) >= to_date ( :c_frm_dt,'dd-mon-yyyy')
    AND   			trunc(PCP_EXPRY_DT) <= to_date ( :c_to_dt,'dd-mon-yyyy');			
		
    END;
		END-EXEC;
		}
	}
	else
 	{
 	 	fn_errlog( c_ServiceName, "B28548", DEFMSG, c_errmsg  );
  	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
   	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
 	}

	if ( SQLCODE != 0 )
  {
  	fn_errlog( c_ServiceName, "S31015", SQLMSG, c_errmsg  );
   	EXEC SQL FREE :cont_cursor;
  	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
   	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }  

		
	l_bufferlength =			strlen(c_xchng_cd)
                          + sizeof(c_prd_typ)
                          + strlen(c_undrlyng)
                          + sizeof(c_exrc_typ)
                          + sizeof(c_opt_typ)
                          + sizeof(c_ctgry_indstk)
                          + sizeof(l_opnpstn_qty)
													+ sizeof(d_opn_buy_val)
                          + sizeof(c_opnpstn_flw)
                          + sizeof(l_charges)
                          + sizeof(l_strike_prc)
                          + sizeof(st_cntrct_qt.l_lst_trdd_prc)
                          + sizeof(d_crst_prft)
                          + sizeof(d_total_prft)
                          + sizeof(d_uncrst_prft)
                          + sizeof(c_cln_mtch_accnt)
                          + sizeof(st_cntrct_qt.l_avg_trdd_prc)
                          + 1000;


     for ( ; ; ) 
  	 {
  		l_opnpstn_qty = 0;
			d_org_opn_val = 0;
			d_mtm_opn_val = 0;
    	st_cntrct_qt.l_lst_trdd_prc = 0; 	
		
			EXEC SQL FETCH :cont_cursor
     	  	INTO :c_cln_mtch_accnt,
				 			 :c_xchng_cd,
							 :c_ctgry_indstk,
							 :c_undrlyng,
           		 :c_prd_typ,
               :c_exrc_typ,
							 :c_expry_dt,
					 		 :c_opt_typ,
							 :l_strike_prc;	
	
			if(DEBUG_MSG_LVL_3)
  		{
        fn_userlog(c_ServiceName,"Expiry Date Is      :%s:",c_expry_dt);
        fn_userlog(c_ServiceName,"l_strike_prc Is     :%ld:",l_strike_prc);
        fn_userlog(c_ServiceName,"Underlying Is       :%s:",c_undrlyng);
        fn_userlog(c_ServiceName,"Exchnge Is          :%s:",c_xchng_cd);
        fn_userlog(c_ServiceName,"Match account Is :%s:",c_cln_mtch_accnt);
        fn_userlog(c_ServiceName,"c_prd_typ Is :%c:",c_prd_typ);
        fn_userlog(c_ServiceName,"Is c_exrc_typ :%c:",c_exrc_typ);
			}
			if ( SQLCODE != 0 )
    	{
     		if ( SQLCODE == NO_DATA_FOUND )
     		{
     		 break;
     		}
     		else
     		{
     			fn_errlog( c_ServiceName, "S31020", SQLMSG, c_errmsg  );
     			EXEC SQL CLOSE :cont_cursor;
     		  EXEC SQL FREE :cont_cursor;
     			tpfree ( ( char * ) ptr_fml_Obuf );
     			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
     			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     		}
   	 	}
	 	

		MEMSET(d_opn_buy_val);
		MEMSET(d_opn_sell_val);
		rtrim(c_xchng_cd);
   	rtrim(c_undrlyng);
  	rtrim(c_expry_dt);
 		rtrim(c_cln_mtch_accnt);

if( (strcmp(c_tmp_mtch_accnt,c_cln_mtch_accnt) == 0) && (strcmp(c_tmp_xchng_cd,c_xchng_cd) == 0) && (strcmp(c_tmp_undrlyng,c_undrlyng) == 0) && (strcmp(c_tmp_expry_dt,c_expry_dt)==0) && c_tmp_prd_typ == c_prd_typ && (l_strike_prc == l_temp_strike_prc))
	  { 
		 fn_userlog( c_ServiceName, " Last Contract is Same so Continuing with next record ");
		 continue;
    }

		c_tmp_prd_typ ='\0';
		l_temp_strike_prc = 0;		 
		MEMSET(c_tmp_mtch_accnt);
		MEMSET(c_tmp_xchng_cd);
		MEMSET(c_tmp_undrlyng);
		MEMSET(c_tmp_expry_dt);
		MEMSET(c_tmp_prd_typ);
			
		strcpy(c_tmp_mtch_accnt,c_cln_mtch_accnt); 
 		strcpy(c_tmp_xchng_cd,c_xchng_cd);
 		strcpy(c_tmp_undrlyng,c_undrlyng);
 		strcpy(c_tmp_expry_dt,c_expry_dt);
		c_tmp_prd_typ= c_prd_typ;
		l_temp_strike_prc = l_strike_prc;	
	
		rtrim(c_tmp_mtch_accnt);
		rtrim(c_tmp_xchng_cd);
		rtrim(c_tmp_undrlyng);
		rtrim(c_tmp_expry_dt);

		if(c_prd_typ == 'F' || c_prd_typ == 'U' || c_prd_typ == 'P')
		{
			EXEC SQL
      SELECT  NVL(FTQ_LST_TRD_PRC,0)
      INTO    :d_ltp
      FROM    FTQ_FO_TRD_QT
      WHERE   FTQ_XCHNG_CD  = :c_xchng_cd
      AND     FTQ_PRDCT_TYP = 'F'
      AND     rtrim(FTQ_UNDRLYNG)  = :c_undrlyng
      AND     FTQ_EXPRY_DT  = :c_expry_dt 
      AND     FTQ_EXER_TYP  = :c_exrc_typ;


      if(SQLCODE  !=  0 && SQLCODE != NO_DATA_FOUND )
      {
      	fn_errlog( c_ServiceName, "S31025", SQLMSG, c_errmsg  );
       	EXEC SQL CLOSE :cont_cursor;
       	EXEC SQL FREE :cont_cursor;
       	tpfree ( ( char * ) ptr_fml_Obuf );
       	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     	}

			if(DEBUG_MSG_LVL_3)
      {
 	  	  fn_userlog(c_ServiceName,"Expiry Date Is      :%s:",c_expry_dt);
    	 	fn_userlog(c_ServiceName,"Underlying Is       :%s:",c_undrlyng);
     	 	fn_userlog(c_ServiceName,"Exchnge Is          :%s:",c_xchng_cd);
     	 	fn_userlog(c_ServiceName,"copied exchange Is  :%s:",c_tmp_xchng_cd);
       	fn_userlog(c_ServiceName,"copied Match account Is :%s:",c_tmp_mtch_accnt);  
     	 	fn_userlog(c_ServiceName,"copied Underlying Is:%s:",c_tmp_undrlyng);
     	 	fn_userlog(c_ServiceName,"copied expiry  Is   :%s:",c_tmp_expry_dt);
				fn_userlog(c_ServiceName,"the ltp is :%lf:",d_ltp);
			}

  	  if( SQLCODE == NO_DATA_FOUND )
 	  	{
    		d_ltp = 0.0;
   		}

 			st_cntrct_qt.l_lst_trdd_prc = d_ltp; 

			EXEC SQL
      SELECT 1
      INTO  :i_exists
      FROM dual
      WHERE EXISTS
      (
      SELECT 1
      FROM FTD_FO_TRD_DTLS
      WHERE   FTD_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
      AND     FTD_XCHNG_CD       =:c_xchng_cd
      AND     FTD_UNDRLYNG       =:c_undrlyng
      AND     FTD_PRDCT_TYP      IN ('F','P','U')
      AND     FTD_EXPRY_DT       =:c_expry_dt
      AND     FTD_EXER_TYP       =:c_exrc_typ
      );

			if(SQLCODE  !=  0 && SQLCODE != NO_DATA_FOUND )
    	{
       	fn_errlog( c_ServiceName, "S31030", SQLMSG, c_errmsg  );
   			EXEC SQL CLOSE :cont_cursor;
       	EXEC SQL FREE :cont_cursor;
       	tpfree ( ( char * ) ptr_fml_Obuf );
       	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    	}
    	
			if( SQLCODE == NO_DATA_FOUND )
    	{
    		i_exists = 0;
   		}
	
		  if ( i_exists == 1 ) 
      {
				char c_prdct_typ;		
		 	  char c_ctgry_indstk;
				double d_sell_val = 0;
  			/**double d_opn_buy_val = 0;**/
  			double d_cls_val_h = 0;
  	   	double d_cls_val = 0;
    	 	double d_fpsell_val = 0;     
				/**double d_opn_sltp_val;**/	
    	 	/**double d_opn_sell_val = 0;**/
				long int li_bal_qty = 0;
  	  	long int li_crst_qty = 0;
   	  	long int li_uncrst_qty = 0;

 				c_prdct_typ = c_prd_typ;
   		 	c_ctgry_indstk = st_cntrct_qt.c_ctgry_indstk;
   		 	c_expry_dt; 
	 			d_sell_val_m = 0;
    	 	d_cls_val_m = 0;
    	 	d_sell_val_h = 0;
    	 	d_buy_val_m = 0;
    	 	d_buy_val_h = 0;
 				l_tot_buy_qty_m = 0;
    	 	l_tot_buy_qty_h = 0;
				l_tot_sell_qty_m = 0;
  	  	l_tot_sell_qty_h = 0;
    	 	l_tot_sell_qty = 0;
    	 	l_tot_buy_qty = 0;

				if( DEBUG_MSG_LVL_5 )
         {										
					fn_userlog(c_ServiceName,"underlying is :%s:",c_undrlyng);
					fn_userlog(c_ServiceName,"c_xchng_cd is :%s:",c_xchng_cd);
					fn_userlog(c_ServiceName," c_exrc_typ is :%c:",c_exrc_typ);
				 }
			 					   
				 EXEC SQL 
      	 SELECT  sum(s1) into :l_tot_brkg  from
         (
        		SELECT nvl(sum(nvl(ftd_brkg,0)+nvl(ftd_stt,0)+nvl(ftd_src_tx,0)+nvl(ftd_sebi_tt,0)+nvl(ftd_tran_chrg,0)+nvl(ftd_stamp_duty,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),0) s1	/** ver 1.4 **/
         		FROM  ftd_fo_trd_dtls
         		WHERE ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
         		AND   ftd_xchng_cd        = :c_xchng_cd
            AND   ftd_undrlyng        = :c_undrlyng
            AND   ftd_prdct_typ    in ('P','F','U') 
            AND   ftd_exer_typ        = :c_exrc_typ
            AND   ftd_expry_dt        = :c_expry_dt
            AND   ftd_expry_dt       >= to_date ( :c_frm_dt,'dd-mon-yyyy')
  				  AND   ftd_expry_dt       <= to_date ( :c_to_dt,'dd-mon-yyyy')
          	UNION ALL
            SELECT  nvl(sum(nvl(ftd_brkg,0)+nvl(ftd_stt,0)+nvl(ftd_src_tx,0)+nvl(ftd_sebi_tt,0)+nvl(ftd_tran_chrg,0)+nvl(ftd_stamp_duty,0)+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)),0) s1 /** ver 1.4 **/
            FROM ftd_fo_trd_dtls_hstry
            WHERE ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
            AND   ftd_xchng_cd        = :c_xchng_cd
            AND   ftd_undrlyng        = :c_undrlyng
            AND   ftd_prdct_typ    in ('P','F','U')
            AND   ftd_exer_typ        = :c_exrc_typ
            AND   ftd_expry_dt        = :c_expry_dt
            AND   ftd_expry_dt       >= to_date ( :c_frm_dt,'dd-mon-yyyy')
            AND   ftd_expry_dt       <= to_date ( :c_to_dt,'dd-mon-yyyy')
            UNION ALL
            SELECT nvl(sum(nvl(fco_brkg,0)+nvl(fco_stt,0)+nvl(fco_src_tx,0)+nvl(fco_sebi_tt,0)+nvl(fco_tran_chrg,0)+nvl(fco_stamp_duty,0)),0) s1
            FROM  fco_fo_fclsout
            WHERE fco_clm_mtch_accnt  = :c_cln_mtch_accnt
            AND   fco_xchng_cd        = :c_xchng_cd
            AND   fco_undrlyng        = :c_undrlyng
            AND   fco_prdct_typ       in ('P','F','U')
            AND   fco_expry_dt        = :c_expry_dt
            AND   fco_exer_typ        = :c_exrc_typ
            AND   fco_expry_dt       >= to_date ( :c_frm_dt,'dd-mon-yyyy')
            AND   fco_expry_dt       <= to_date ( :c_to_dt,'dd-mon-yyyy')
            UNION ALL
            SELECT nvl(sum(nvl(fco_brkg,0)+nvl(fco_stt,0)+nvl(fco_src_tx,0)+nvl(fco_sebi_tt,0)+nvl(fco_tran_chrg,0)+nvl(fco_stamp_duty,0)),0) s1
            FROM  fco_fo_fclsout_hstry
            WHERE fco_clm_mtch_accnt  = :c_cln_mtch_accnt
            AND   fco_xchng_cd        = :c_xchng_cd
            AND   fco_undrlyng        = :c_undrlyng
            AND   fco_prdct_typ       in ('P','F','U')
            AND   fco_expry_dt        = :c_expry_dt
            AND   fco_exer_typ        = :c_exrc_typ
            AND   fco_expry_dt       >= to_date ( :c_frm_dt,'dd-mon-yyyy')
            AND   fco_expry_dt       <= to_date ( :c_to_dt,'dd-mon-yyyy')
				);

 				if ( SQLCODE != 0 )
   			{
      		if ( SQLCODE == NO_DATA_FOUND )
      		{
        		l_tot_brkg = 0;
      		}
 					else
      		{
						EXEC SQL CLOSE :cont_cursor;
        		EXEC SQL FREE  :cont_cursor;
        		tpfree ( ( char * ) ptr_fml_Obuf );
        		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      		}
        }
				
        if( DEBUG_MSG_LVL_3 )
        {
				  fn_userlog(c_ServiceName,"l_tot_brkg :%ld:", l_tot_brkg);
				}

			  EXEC SQL
      	SELECT  SUM (s2)
       	INTO    :l_fp_opnpstn_qty
	     	FROM
       	(
       		 SELECT  NVL(SUM(ffp_opnpstn_qty),0) s2
       		 FROM    ffp_fo_futures_pstn
       		 WHERE   ffp_clm_mtch_accnt = :c_cln_mtch_accnt
       		 AND     ffp_xchng_cd       = :c_xchng_cd
       		 AND     ffp_prdct_typ      = 'P'
       		 AND     ffp_undrlyng       = :c_undrlyng
       		 AND     ffp_expry_dt       = :c_expry_dt
       		 AND     ffp_expry_dt      >= to_date ( :c_frm_dt,'dd-mon-yyyy')
       		 AND     ffp_expry_dt      <= to_date ( :c_to_dt,'dd-mon-yyyy')
       		 AND
       		 (      ffp_buy_exctd_qty != 0
       						OR    ffp_sell_exctd_qty  != 0
       		 )
       		UNION ALL
       		SELECT  NVL(SUM(ffp_opnpstn_qty),0) s2
         	FROM    ffp_fo_futures_pstn_hstry
          WHERE   ffp_clm_mtch_accnt = :c_cln_mtch_accnt
          AND     ffp_xchng_cd       = :c_xchng_cd
          AND     ffp_expry_dt       = :c_expry_dt
          AND     ffp_prdct_typ      = 'P'
          AND     ffp_undrlyng       = :c_undrlyng
          AND     ffp_expry_dt      >= to_date ( :c_frm_dt,'dd-mon-yyyy')
          AND     ffp_expry_dt      <= to_date ( :c_to_dt,'dd-mon-yyyy')
          AND
         	(       ffp_buy_exctd_qty != 0
           OR    ffp_sell_exctd_qty  != 0
          )
 			 );

      if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
       fn_errlog( c_ServiceName, "S31035", SQLMSG, c_errmsg  );
       EXEC SQL CLOSE :cont_cursor;
       EXEC SQL FREE :cont_cursor;
       tpfree ( ( char * ) ptr_fml_Obuf );
       Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
       tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     	}

        if( DEBUG_MSG_LVL_5 )
        {
					fn_userlog(c_ServiceName," l_fp_opnpstn_qty :%ld:",l_fp_opnpstn_qty);
				}

		  EXEC SQL
      SELECT  SUM (s3)
      INTO    :l_f_opnpstn_qty
      FROM	
      (
      	SELECT  NVL(SUM(ffp_opnpstn_qty),0) s3
       	FROM    ffp_fo_futures_pstn
       	WHERE   ffp_clm_mtch_accnt = :c_cln_mtch_accnt
       	AND     ffp_xchng_cd       = :c_xchng_cd
       	AND     ffp_prdct_typ      = 'F'
       	AND     ffp_undrlyng       = :c_undrlyng
       	AND     ffp_expry_dt       = :c_expry_dt
       	AND     ffp_expry_dt      >= to_date ( :c_frm_dt,'dd-mon-yyyy')
        AND     ffp_expry_dt      <= to_date ( :c_to_dt,'dd-mon-yyyy')
       	AND
        (       ffp_buy_exctd_qty != 0
        	OR    ffp_sell_exctd_qty  != 0
        )
        UNION ALL
        SELECT  NVL(SUM(ffp_opnpstn_qty),0) s3
        FROM    ffp_fo_futures_pstn_hstry
        WHERE   ffp_clm_mtch_accnt = :c_cln_mtch_accnt
        AND     ffp_xchng_cd       = :c_xchng_cd
        AND     ffp_expry_dt       = :c_expry_dt
        AND     ffp_prdct_typ      = 'F'
        AND     ffp_undrlyng       = :c_undrlyng
        AND     ffp_expry_dt      >= to_date ( :c_frm_dt,'dd-mon-yyyy')
        AND     ffp_expry_dt      <= to_date ( :c_to_dt,'dd-mon-yyyy')
        AND
        (       ffp_buy_exctd_qty != 0
 				  OR    ffp_sell_exctd_qty  != 0
       	)
      );

      if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
      	fn_errlog( c_ServiceName, "S31040", SQLMSG, c_errmsg  );
       	EXEC SQL CLOSE :cont_cursor;
       	EXEC SQL FREE :cont_cursor;
       	tpfree ( ( char * ) ptr_fml_Obuf );
       	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
       	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }

			
      if( DEBUG_MSG_LVL_5 )
      {
      	fn_userlog(c_ServiceName," l_f_opnpstn_qty :%ld:",l_f_opnpstn_qty);
			}

			EXEC SQL
      SELECT  SUM (s4)
      INTO    :l_spn_opnpstn_qty
      FROM
      (
      	SELECT NVL(SUM(FCP_OPNPSTN_QTY),0) s4
       	FROM   FCP_FO_SPN_CNTRCT_PSTN
        WHERE  FCP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
        AND    FCP_XCHNG_CD       = :c_xchng_cd
        AND    FCP_PRDCT_TYP      = 'F'
        AND    FCP_UNDRLYNG       = :c_undrlyng
        AND    FCP_EXPRY_DT       = :c_expry_dt
        AND
        (      FCP_BUY_EXCTD_QTY != 0
        	OR   FCP_SELL_EXCTD_QTY  != 0
        )
 				UNION ALL
       	SELECT  NVL(SUM(FCP_OPNPSTN_QTY),0) s4
        FROM    FCP_FO_SPN_CNTRCT_PSTN_HSTRY
        WHERE   FCP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
        AND     FCP_XCHNG_CD       = :c_xchng_cd
        AND     FCP_EXPRY_DT       = :c_expry_dt
        AND     FCP_PRDCT_TYP      = 'F'
        AND     FCP_UNDRLYNG       = :c_undrlyng
        AND
        (       FCP_BUY_EXCTD_QTY != 0
        	 OR   FCP_SELL_EXCTD_QTY  != 0
        )	
      );
 			  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
        {
        	fn_errlog( c_ServiceName, "S31045", SQLMSG, c_errmsg  );
         	EXEC SQL CLOSE :cont_cursor;
          EXEC SQL FREE :cont_cursor;
         	tpfree ( ( char * ) ptr_fml_Obuf );
          Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
          tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }

        if( DEBUG_MSG_LVL_5 )
        {
      		fn_userlog(c_ServiceName,"l_spn_opnpstn_qty :%ld:",l_spn_opnpstn_qty);
				}
				EXEC SQL  
        SELECT SUM(s1 -s2)
        INTO   :l_sltp_opnpstn_qty
        FROM
        (
        	SELECT nvl(sum(decode(FOD_ORDR_FLW,'B',FOD_EXEC_QTY)),0) s1,
          			 nvl(sum(decode(FOD_ORDR_FLW,'S',FOD_EXEC_QTY)),0) s2
          FROM   FOD_FO_ORDR_DTLS
         	WHERE  FOD_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
         	AND    FOD_XCHNG_CD       = :c_xchng_cd
         	AND    FOD_EXPRY_DT       = :c_expry_dt
         	AND    FOD_PRDCT_TYP      = 'U'
          AND    FOD_UNDRLYNG       = :c_undrlyng
         	AND    FOD_EXER_TYP       = :c_exrc_typ
         	AND    FOD_EXEC_QTY       != 0
         	UNION ALL
         	SELECT nvl(sum(decode(FOD_ORDR_FLW,'B',FOD_EXEC_QTY)),0) s1,
          			 nvl(sum(decode(FOD_ORDR_FLW,'S',FOD_EXEC_QTY)),0) s2
          FROM   FOD_FO_ORDR_DTLS_HSTRY
         	WHERE  FOD_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
          AND    FOD_XCHNG_CD       = :c_xchng_cd
          AND    FOD_EXPRY_DT       = :c_expry_dt
         	AND    FOD_PRDCT_TYP      = 'U'
          AND    FOD_UNDRLYNG       = :c_undrlyng
          AND    FOD_EXER_TYP       = :c_exrc_typ
          AND    FOD_EXEC_QTY       != 0
       );
		
		 	if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    	{	
       	fn_errlog( c_ServiceName, "S31050", SQLMSG, c_errmsg  );
       	EXEC SQL CLOSE :cont_cursor;
       	EXEC SQL FREE :cont_cursor;
       	tpfree ( ( char * ) ptr_fml_Obuf );
 			  Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
 		   	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    	}

			if(SQLCODE == NO_DATA_FOUND)
			{
				fn_userlog(c_ServiceName,"NO DATA FOUNT");
			}


      if( DEBUG_MSG_LVL_5 )
      {
      	fn_userlog(c_ServiceName,"l_sltp_opnpstn_qty :%ld:",l_sltp_opnpstn_qty);
			}

			EXEC SQL
      SELECT  NVL(CLM_SPAN_ALLWD,'N'),
       			  NVL(CLM_BSESPAN_ALLWD,'N')
      INTO    :c_spn_allwd_flg,
      			  :c_bsespn_allwd_flg
       FROM    CLM_CLNT_MSTR
       WHERE   CLM_MTCH_ACCNT  = :c_cln_mtch_accnt;

			if ( SQLCODE != 0 )
  		{
    		fn_errlog( c_ServiceName, "S31055", SQLMSG, c_errmsg  );
    		EXEC SQL CLOSE :cont_cursor;
    		EXEC SQL FREE :cont_cursor;
    		tpfree ( ( char * ) ptr_fml_Obuf );
    		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
    		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  	  }
			
      if( DEBUG_MSG_LVL_3 )
      {
      	fn_userlog(c_ServiceName,"c_spn_allwd_flg :%c:",c_spn_allwd_flg);
      	fn_userlog(c_ServiceName,"c_bsespn_allwd_flg :%c:",c_bsespn_allwd_flg);	
			}		

			if( (c_spn_allwd_flg == 'N' && strcmp(c_xchng_cd,"NFO")==0 ) ||
    	 (c_bsespn_allwd_flg == 'N' && strcmp(c_xchng_cd,"BFO")== 0))
			{
				if((l_f_opnpstn_qty != 0) || (l_fp_opnpstn_qty != 0))
    		{		
    	 		EXEC SQL
    	 		SELECT SUM ( QTY ),
    	 		SUM ( VAL ),
    	    SUM ( MTM_VAL )
 				 	INTO   :l_opnpstn_qty ,
         				 :d_org_opn_val,
           			 :d_mtm_opn_val
 			    FROM
     		 (
       				SELECT  SUM(ffp_opnpstn_qty) QTY,
           	  SUM(ffp_opnpstn_val) VAL,
           		SUM(ffp_mtm_opn_val) MTM_VAL
 		     			FROM   	ffp_fo_futures_pstn
    	   			WHERE  	ffp_clm_mtch_accnt = :c_cln_mtch_accnt
      				AND     ffp_xchng_cd       = :c_xchng_cd
       				AND     ffp_undrlyng       = :c_undrlyng
  	   				AND     ffp_expry_dt       = :c_expry_dt
 	     				AND     FFP_EXER_TYP       = :c_exrc_typ
				 );

						fn_userlog(c_ServiceName," open position 1 val :%lf: ",d_org_opn_val);
						fn_userlog(c_ServiceName," open position 1 qty :%ld: ",l_opnpstn_qty);
						
 						if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    				{
        			fn_errlog( c_ServiceName, "S31060", SQLMSG, c_errmsg  );
          		EXEC SQL CLOSE :cont_cursor;
          		EXEC SQL FREE :cont_cursor;
          		tpfree ( ( char * ) ptr_fml_Obuf );
          		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
          		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      			}
      		}
				 }
		 		 else
		 	   {	
					if(l_spn_opnpstn_qty != 0  ||  (l_fp_opnpstn_qty != 0))
   		  	{
  		   		EXEC SQL
     				SELECT SUM ( QTY ),
         					 SUM ( VAL ),
             			 SUM ( MTM_VAL )
      			INTO   :l_opnpstn_qty,
          				 :d_org_opn_val,
              		 :d_mtm_opn_val
  			    FROM
      			(
        		 SELECT FCP_OPNPSTN_QTY QTY,
             				FCP_OPNPSTN_VAL VAL,
             				FCP_MTM_OPN_VAL MTM_VAL
        		 FROM  FCP_FO_SPN_CNTRCT_PSTN
        		 WHERE FCP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
       			 AND   FCP_XCHNG_CD       = :c_xchng_cd
        		 AND   FCP_EXPRY_DT       = :c_expry_dt
        		 AND   FCP_PRDCT_TYP      = 'F'
        		 AND   FCP_UNDRLYNG       = :c_undrlyng
        		 AND   FCP_EXER_TYP       = :c_exrc_typ
		  		 	 UNION ALL    
        		 SELECT SUM(ffp_opnpstn_qty) QTY,
            			  SUM(ffp_opnpstn_val) VAL,
            		 	  SUM(ffp_mtm_opn_val) MTM_VAL
       		 	 FROM   ffp_fo_futures_pstn
       		   WHERE  ffp_clm_mtch_accnt = :c_cln_mtch_accnt
       		   AND    ffp_xchng_cd       = :c_xchng_cd
           	 AND    ffp_undrlyng       = :c_undrlyng
        	   AND    ffp_expry_dt       = :c_expry_dt
        	   AND    FFP_EXER_TYP       = :c_exrc_typ
 			   		);

						fn_userlog(c_ServiceName," tanmay stage2  :%lf: ",d_org_opn_val);
						fn_userlog(c_ServiceName," tanmay stage2  :%ld: ",l_opnpstn_qty);
	
 						if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
 						{
 			  			fn_errlog( c_ServiceName, "S31065", SQLMSG, c_errmsg  );
 							EXEC SQL CLOSE :cont_cursor;
 	 						EXEC SQL FREE :cont_cursor;
 							tpfree ( ( char * ) ptr_fml_Obuf );
 							Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
 							tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
 						}
 	 	  		}
 		 		}

				d_opn_sltp_val = 0.0;

 				if(l_sltp_opnpstn_qty > 0 )
 				{
 					i_returncode = fn_sltpbuy_opnpstn(c_ServiceName,
                    												c_cln_mtch_accnt,
                     												c_xchng_cd,
       		          												c_undrlyng,
         			      												c_expry_dt,
 	             															c_exrc_typ,
																						&d_opn_sltp_val,
           																	c_errmsg,&l_opnpstn_qty);

			  	if ( i_returncode == -1 )
    			{
      			EXEC SQL CLOSE :cont_cursor;
      			EXEC SQL FREE :cont_cursor;
      			tpfree ( ( char * ) ptr_fml_Obuf );
      			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    			}

				}
  			else if(l_sltp_opnpstn_qty < 0)
  			{
    				i_returncode = fn_sltpsell_opnpstn(c_ServiceName,
               										             c_cln_mtch_accnt,
                     													 c_xchng_cd,
             					    										 c_undrlyng,
                        											 c_expry_dt,
 		     					        										 c_exrc_typ,
																							 &d_opn_sltp_val,
         																			 c_errmsg,&l_opnpstn_qty);

				   if ( i_returncode == -1 )
    			 {
      				EXEC SQL CLOSE :cont_cursor;
      				EXEC SQL FREE :cont_cursor;
      				tpfree ( ( char * ) ptr_fml_Obuf );
      				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    			 }	
  			}
  			else
  			{
   				d_opn_sltp_val = 0.0;
  			}

				l_opnpstn_qty = l_opnpstn_qty + l_sltp_opnpstn_qty;
 				d_org_opn_val = d_org_opn_val + d_opn_sltp_val;
 			  d_mtm_opn_val = d_mtm_opn_val + d_opn_sltp_val;
				 fn_userlog(c_ServiceName," tanmay stage 2  :%lf: ",d_org_opn_val);	
	
  			if( DEBUG_MSG_LVL_3)
  			{
    			fn_userlog(c_ServiceName,"SLTP FP open val :%lf:",d_opn_sltp_val);
    			fn_userlog(c_ServiceName,"After change open val :%lf:",d_org_opn_val);
    			fn_userlog(c_ServiceName,"After change mtm open val :%lf:",d_mtm_opn_val);
    			fn_userlog(c_ServiceName,"After Change opn qty :%ld:",l_opnpstn_qty);
  			}
    			fn_userlog(c_ServiceName,"After change open val :%lf:",d_org_opn_val);

 				l_f_opnpstn_qty = l_f_opnpstn_qty + l_spn_opnpstn_qty + l_fp_opnpstn_qty + l_sltp_opnpstn_qty;

				if( DEBUG_MSG_LVL_3 )
  			{
 					fn_userlog(c_ServiceName,"OPEN POSITION QTY FOR FUTURE  IS :%ld:",l_f_opnpstn_qty);
    			fn_userlog(c_ServiceName,"OPEN POSITION QTY FOR FUTURE PLUS IS :%ld:",l_fp_opnpstn_qty);
    			fn_userlog(c_ServiceName,"OPEN POSITION QTY FOR SPAN IS :%ld:",l_spn_opnpstn_qty);
    			fn_userlog(c_ServiceName,"OPEN POSITION QTY FOR SLTPFP IS :%ld:",l_sltp_opnpstn_qty);
  			}

				if(l_opnpstn_qty > 0 )
 				{
 					c_opnpstn_flw = 'B';
 				}
 				else if(l_opnpstn_qty < 0 )
 				{
 					c_opnpstn_flw = 'S';
 				}
 				else
 				{
 	 				c_opnpstn_flw = 'N';
 				}

				if (l_f_opnpstn_qty > 0 )
 				{
					c_opnpstn_flw = 'B';
			  			
					i_returncode = fn_buy_opnpstn_fp(c_ServiceName,
        	 				                      c_cln_mtch_accnt,
          					        		   			c_xchng_cd,
                    			      				c_undrlyng,
                          			  			c_expry_dt,
                                			  c_exrc_typ,
                                  			c_prdct_typ,
																				d_ltp,
																				&d_crst_prft,
                   											&d_uncrst_prft,
                   											&d_avg_pr,
																				c_errmsg,
                   											&d_total_prft,
                  											&l_strike_prc,
																				&l_opnpstn_qty, &d_opn_buy_val);
		
 					if(i_returncode == -1)
 		    	{
        	 	EXEC SQL CLOSE :cont_cursor;
        		EXEC SQL FREE :cont_cursor;
        		tpfree ( ( char * ) ptr_fml_Obuf );
        		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      		}
				/**d_temp_avg_pr =  d_avg_pr ;*/
				st_cntrct_qt.l_avg_trdd_prc =  (long)d_avg_pr ;
	
				fn_userlog(c_ServiceName,"Stage 2 d_opn_buy_val :%lf:",d_opn_buy_val);
				fn_userlog(c_ServiceName,"Stage 2 d_org_opn_val =:%lf:", d_opn_buy_val + d_org_opn_val);

				/***d_org_opn_val = d_opn_buy_val + d_org_opn_val;***/
			d_org_opn_val = d_opn_buy_val;

	
  			}
				else if ( l_f_opnpstn_qty < 0 )
    		{
       		c_opnpstn_flw = 'S';

 					i_returncode = fn_sell_opnpstn_fp(c_ServiceName,
					  					                   c_cln_mtch_accnt,
         		          			             c_xchng_cd,
          				          			       c_undrlyng,
           		    			          			 c_expry_dt,
              	    	  			    			 c_exrc_typ,
               		  	       						 c_prdct_typ,
																				 d_ltp,
                   											 &d_crst_prft,
                   											 &d_uncrst_prft,
																				 &d_avg_pr,
                   											 c_errmsg,
																				 &d_total_prft,
                                         &l_strike_prc,
																				 &l_opnpstn_qty,&d_opn_sell_val);
																				
 				 		if(i_returncode == -1)
      			{
        			EXEC SQL CLOSE :cont_cursor;
        			EXEC SQL FREE :cont_cursor;
        			tpfree ( ( char * ) ptr_fml_Obuf );
        			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      			}
 			fn_userlog(c_ServiceName,"Stage 3 d_opn_sell_val :%lf:",d_opn_sell_val);

			fn_userlog(c_ServiceName,"Stage 4 d_avg_pr:%ld:",st_cntrct_qt.l_avg_trdd_prc);
			st_cntrct_qt.l_avg_trdd_prc =  (long)d_avg_pr ;
			d_org_opn_val = d_opn_sell_val ;

   		}
    		else if ( l_f_opnpstn_qty == 0 )
    		{
      		c_opnpstn_flw = 'N';

 			    i_returncode = fn_sqroff_pstn (c_ServiceName,
      				                           c_cln_mtch_accnt,
       	    						                 c_xchng_cd,
        			          						     c_undrlyng,
       			        			  						 c_expry_dt,
         						        						 c_exrc_typ,
                 												 c_prdct_typ,
																				 d_ltp,
																			   &d_crst_prft,
																				 &d_uncrst_prft,
         																 c_errmsg,
         																 &d_total_prft,
																				 &l_strike_prc);

			     if(i_returncode == -1)
      		 {
        		EXEC SQL CLOSE :cont_cursor;
        		EXEC SQL FREE :cont_cursor;
        		tpfree ( ( char * ) ptr_fml_Obuf );
        		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      		}
    		}	

				if( DEBUG_MSG_LVL_3 )
  			{
    				fn_userlog(c_ServiceName,"d_crst_prft Is :%lf:",d_crst_prft);
  					fn_userlog(c_ServiceName,"=============li_uncrst_qty is :%d:",li_uncrst_qty);
  			}

			 if( c_opnpstn_flw == 'N') 
 			 {
   				st_cntrct_qt.l_avg_trdd_prc = 0;
  		 }

 			if(	DEBUG_MSG_LVL_5) 
  		{
    	 fn_userlog(c_ServiceName,"l_avg_trd_prc Is :%ld:", st_cntrct_qt.l_avg_trdd_prc);   
    	 fn_userlog(c_ServiceName,"d_base_prc Is :%lf:", d_base_prc);   
    	 fn_userlog(c_ServiceName,"C_CLN_MTCH_ACCNT Is :%s:",c_cln_mtch_accnt);
    	 fn_userlog(c_ServiceName,"C_PRD_TYP Is :%c:",c_prd_typ);
    	 fn_userlog(c_ServiceName,"C_UNDRLYNG Is :%s:", c_undrlyng);
    	 fn_userlog(c_ServiceName,"C_EXPRY_DT Is :%s:", c_expry_dt);
    	 fn_userlog(c_ServiceName,"C_XCHNG_CD Is :%s:", c_xchng_cd);
   	  }
			fn_userlog(c_ServiceName,"d_avg_pr:%ld:",st_cntrct_qt.l_avg_trdd_prc);
  	}
		else
    {	

 	   if(DEBUG_MSG_LVL_3)
  	 {
   		fn_userlog( c_ServiceName, "Inside Already calculated from futures");
     }

    	d_org_opn_val = 0.0;     /** Ver 1.1 **/
    	d_crst_prft   = 0.0;		 /** Ver 1.1 **/
    	l_charges     = 0;
  	  int i_exists_main = 0;
			char c_errmsg[256];
			
			 fn_userlog (c_ServiceName,"c_cln_mtch_accnt :%s:",c_cln_mtch_accnt);
			 fn_userlog (c_ServiceName," c_xchng_cd :%s:",c_xchng_cd);
			 fn_userlog (c_ServiceName," c_undrlyng :%s:", c_undrlyng);
			 fn_userlog (c_ServiceName," c_expry_dt:%s:", c_expry_dt);
			 fn_userlog (c_ServiceName," c_exrc_typ :%c:",c_exrc_typ);


 		  EXEC SQL
    	SELECT 1
      INTO  :i_exists_main
     	FROM dual
     	WHERE EXISTS
		  (
      	SELECT 1
      	FROM  PCP_PRTFL_CNTRCT_PRDCT
      	WHERE PCP_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
      	AND   PCP_XCHNG_CD       =:c_xchng_cd
      	AND   PCP_PRDCT_TYP      in('F','P','U')
  		  AND   PCP_UNDRLYNG       =:c_undrlyng
      	AND   PCP_EXPRY_DT       =:c_expry_dt
     	  AND   PCP_EXER_TYP       =:c_exrc_typ
      );
				
			if(SQLCODE  !=  0 && SQLCODE != NO_DATA_FOUND )
    	{
				fn_userlog (c_ServiceName," inside ltp error"); 
    	 	fn_errlog( c_ServiceName, "S31070", SQLMSG, c_errmsg  );
      	EXEC SQL CLOSE :cont_cursor;
     		EXEC SQL FREE :cont_cursor;
   			tpfree ( ( char * ) ptr_fml_Obuf );
      	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      } 
    	if (i_exists_main == 1)
    	{
     		if(DEBUG_MSG_LVL_3)
     		 {
						fn_userlog (c_ServiceName,"BEFORE pack d_avg_pr :%ld:",st_cntrct_qt.l_avg_trdd_prc);
        		fn_userlog( c_ServiceName,"Inside main of PCP");
      	 }

				EXEC SQL
        SELECT nvl(sum(PCP_OPNPSTN_QTY),0),
       				 nvl(sum(PCP_OPNPSTN_VAL),0),
         			 nvl(sum(PCP_RLLZD_PNL),0),
         			 nvl(sum(PCP_BRKG_VAL),0),
         			 nvl(sum(PCP_AVG_TRD_PRC),0),
         			 nvl(sum(PCP_TOTAL_PNL),0)
  			INTO  :l_opnpstn_qty,
       				:d_org_opn_val,
       				:d_crst_prft,
       				:l_charges,
       				:st_cntrct_qt.l_avg_trdd_prc,
       				:d_total_prft
 				FROM  PCP_PRTFL_CNTRCT_PRDCT
     		WHERE PCP_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
     		AND   PCP_XCHNG_CD       =:c_xchng_cd
     		AND   PCP_PRDCT_TYP      in ('F','P','U')
     		AND   PCP_UNDRLYNG       =:c_undrlyng
     	  AND   PCP_EXPRY_DT       =:c_expry_dt
     	  AND   PCP_EXER_TYP       =:c_exrc_typ;


			fn_userlog(c_ServiceName,"l_opnpstn_qty is :%ld:",l_opnpstn_qty);
			fn_userlog(c_ServiceName,"d_org_opn_val is :%lf:", d_org_opn_val);
			fn_userlog(c_ServiceName,"d_crst_prftis :%lf:", d_crst_prft);
			fn_userlog(c_ServiceName," l_charges  :%ld:", l_charges);
			fn_userlog(c_ServiceName," st_cntrct_qt.l_avg_trdd_prc :%ld:", st_cntrct_qt.l_avg_trdd_prc);
			fn_userlog(c_ServiceName," d_total_prft  :%lf:", d_total_prft);



		 		if(SQLCODE  !=  0 && SQLCODE != NO_DATA_FOUND )
    		{
         	fn_errlog( c_ServiceName, "S31075", SQLMSG, c_errmsg  );
         	EXEC SQL CLOSE :cont_cursor;
         	EXEC SQL FREE :cont_cursor;
         	tpfree ( ( char * ) ptr_fml_Obuf );
         	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
         	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      	}

   		 }
    	 else
   		 { 
			   EXEC SQL
         SELECT nvl(sum(PCP_OPNPSTN_QTY),0),
        	 		  nvl(sum(PCP_OPNPSTN_VAL),0),
         			  nvl(sum(PCP_RLLZD_PNL),0),
         		    nvl(sum(PCP_BRKG_VAL),0),
         		 		nvl(sum(PCP_AVG_TRD_PRC),0),
         			  nvl(sum(PCP_TOTAL_PNL),0)
       		INTO  :l_opnpstn_qty,
       					:d_org_opn_val,
       					:d_crst_prft,
       					:l_charges,
 			       	  :st_cntrct_qt.l_avg_trdd_prc,
      					:d_total_prft
       		FROM  PCP_PRTFL_CNTRCT_PRDCT_HSTRY
       		WHERE PCP_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
       		AND   PCP_XCHNG_CD       =:c_xchng_cd
       		AND   PCP_PRDCT_TYP      in ('F','P','U')
       		AND   PCP_UNDRLYNG       =:c_undrlyng
       		AND   PCP_EXPRY_DT       =:c_expry_dt
       		AND   PCP_EXER_TYP       =:c_exrc_typ;

					
      fn_userlog(c_ServiceName,"l_opnpstn_qty is :%ld:",l_opnpstn_qty);
      fn_userlog(c_ServiceName,"d_org_opn_val is :%lf:", d_org_opn_val);
      fn_userlog(c_ServiceName,"d_crst_prftis :%lf:", d_crst_prft);
      fn_userlog(c_ServiceName," l_charges  :%ld:", l_charges);
      fn_userlog(c_ServiceName," st_cntrct_qt.l_avg_trdd_prc :%ld:", st_cntrct_qt.l_avg_trdd_prc);
      fn_userlog(c_ServiceName," d_total_prft  :%lf:", d_total_prft);


			 	if(SQLCODE  !=  0 && SQLCODE != NO_DATA_FOUND )
      	{
      		fn_errlog( c_ServiceName, "S31080", SQLMSG, c_errmsg  );
       		EXEC SQL CLOSE :cont_cursor;
       		EXEC SQL FREE :cont_cursor;
       		tpfree ( ( char * ) ptr_fml_Obuf );
       		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
       		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        }
	    }

			c_opt_typ    = '*';
     	l_strike_prc = 0;

		  if ( l_opnpstn_qty > 0)
 			{
 			  c_opnpstn_flw = 'B';
 			}		
 			else if ( l_opnpstn_qty < 0)
 			{
 				c_opnpstn_flw = 'S';
 			}
 			else
 			{
 				c_opnpstn_flw = 'N';
   		}

	   if( c_opnpstn_flw == 'B' )
  		{
   			d_uncrst_prft = ( d_ltp - (double)st_cntrct_qt.l_avg_trdd_prc) * (double) l_opnpstn_qty;
    	}
    	else if (c_opnpstn_flw == 'S' )
    	{
    		d_uncrst_prft = ( (double)st_cntrct_qt.l_avg_trdd_prc - d_ltp ) * (double)( l_opnpstn_qty * -1);
     	}
     	else
     	{
     		d_uncrst_prft=0.0;
     	}

	   }	
		}	
		else if(c_prd_typ == 'O' || c_prd_typ == 'I') 
		{

			if( DEBUG_MSG_LVL_3 )
			{
				fn_userlog(c_ServiceName,"the c_cln_mtch_accnt is :%s:",c_cln_mtch_accnt);
				fn_userlog(c_ServiceName,"the strike price is  :%ld:",l_strike_prc);	
				fn_userlog(c_ServiceName,"the c_xchng_cd is :%s:",c_xchng_cd);
				fn_userlog(c_ServiceName,"the c_undrlyng is :%s:",c_undrlyng);
				fn_userlog(c_ServiceName,"thec_expry_dt is :%s:", c_expry_dt);
				fn_userlog(c_ServiceName,"the c_opt_typ is :%c:", c_opt_typ);
				fn_userlog(c_ServiceName,"the c_exrc_typ is :%c:",c_exrc_typ);
			}
   		EXEC SQL
   		SELECT  NVL(FTQ_LST_TRD_PRC,0)
   		INTO    :d_ltp
   		FROM    FTQ_FO_TRD_QT
   		WHERE   FTQ_XCHNG_CD  = :c_xchng_cd
   		AND     FTQ_PRDCT_TYP = 'O'           
  		AND     FTQ_UNDRLYNG  = :c_undrlyng
   		AND     FTQ_EXPRY_DT  = :c_expry_dt
   		AND     FTQ_EXER_TYP  = :c_exrc_typ
 			AND     FTQ_OPT_TYP   = :c_opt_typ
   		AND     FTQ_STRK_PRC  = :l_strike_prc;

 		  if(SQLCODE  !=  0 && SQLCODE != NO_DATA_FOUND )
    	{
     		fn_errlog( c_ServiceName, "S31085", SQLMSG, c_errmsg  );
     		EXEC SQL CLOSE :cont_cursor;
     		EXEC SQL FREE :cont_cursor;
     		tpfree ( ( char * ) ptr_fml_Obuf );
     		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
     		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
     	}

 		  if( SQLCODE == NO_DATA_FOUND )
    	{
     		d_ltp = 0.0;
    	}	
			
    if( DEBUG_MSG_LVL_3 )
    {	
			fn_userlog (c_ServiceName,"d_ltp in FTQ is :%lf:",d_ltp);
		}
 		st_cntrct_qt.l_lst_trdd_prc = (long)d_ltp;    

			EXEC SQL
      SELECT 1
      INTO  :i_exists
      FROM dual
 	    WHERE EXISTS
  		(
       	 SELECT 1
      	 FROM FTD_FO_TRD_DTLS
       	 WHERE   FTD_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
       	 AND     FTD_XCHNG_CD       =:c_xchng_cd
         AND     FTD_UNDRLYNG       =:c_undrlyng
       	 AND     FTD_PRDCT_TYP      in ('I','O')        
       	 AND     FTD_EXPRY_DT       =:c_expry_dt
       	 AND     FTD_OPT_TYP        =:c_opt_typ
       	 AND     FTD_STRK_PRC       =:l_strike_prc
       	 AND     FTD_EXER_TYP       =:c_exrc_typ
       );

			 if(SQLCODE  !=  0 && SQLCODE != NO_DATA_FOUND )
   		 {
      		fn_errlog( c_ServiceName, "S31090", SQLMSG, c_errmsg  );
      		EXEC SQL CLOSE :cont_cursor;
       		EXEC SQL FREE :cont_cursor;
       		tpfree ( ( char * ) ptr_fml_Obuf );
       		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
       		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    	 }

 			 if( SQLCODE == NO_DATA_FOUND )
    	 {
    		  i_exists = 0;
    	 }

			 if ( i_exists == 1 )  
    	 {
    		strcpy ( c_xchng_cd, c_xchng_cd );
    		c_prd_typ = c_prd_typ;
    		char c_ctgry_indstk = c_ctgry_indstk;
    		strcpy ( c_undrlyng, c_undrlyng );
    		strcpy ( c_expry_dt, c_expry_dt );

 			 	d_sell_val_m = 0;
    		d_sell_val_h = 0;
    		double d_sell_val = 0;
    		/**double d_opn_sell_val = 0;**/

 		    long l_tot_buy_qty_m = 0;
    		d_buy_val_m = 0;
    		long l_tot_buy_qty_h = 0;
    		double d_buy_val_h = 0;
    		double d_buy_val = 0;

 		    long int li_bal_qty = 0;
				long int li_crst_qty = 0;
 				long int li_uncrst_qty = 0;
				d_crst_prft = 0;

		    d_ex_val_h = 0.0;
 	   		d_as_val_h = 0.0;
 				d_ex_val_m = 0.0;
 				d_as_val_m = 0.0;
	
  	    l_charges = 0;
 				l_chrgs_tmp = 0;


				EXEC SQL ALLOCATE :chrgs_cur;

				EXEC SQL EXECUTE
 	  		BEGIN
 				OPEN :chrgs_cur FOR
   			SELECT  NVL( SUM( NVL( ftd_brkg, 0 ) + NVL( ftd_tran_chrg, 0 ) + NVL( ftd_stamp_duty, 0 ) +
                NVL( ftd_sebi_tt, 0 ) + NVL( ftd_stt, 0 ) + NVL( ftd_src_tx, 0 )+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)), 0)										/** ver 1.4 **/
   			FROM    ftd_fo_trd_dtls
   			WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
   			AND     ftd_xchng_cd        = :c_xchng_cd
  			AND     ftd_prdct_typ       in ('O','I') 
 		  	AND     ftd_undrlyng        = :c_undrlyng
   			AND     ftd_expry_dt        = :c_expry_dt
  			AND     ftd_exer_typ        = :c_exrc_typ
   			AND     ftd_opt_typ         = :c_opt_typ
   			AND     ftd_strk_prc        = :l_strike_prc
   			UNION ALL
   			SELECT  NVL( SUM( NVL( ftd_brkg, 0 ) + NVL( ftd_tran_chrg, 0 ) + NVL( ftd_stamp_duty, 0 ) +
                NVL( ftd_sebi_tt, 0 ) + NVL( ftd_stt, 0 ) + NVL( ftd_src_tx, 0 )+nvl(ftd_brkrg_igst,0)+nvl(ftd_brkrg_cgst,0)+nvl(ftd_brkrg_sgst,0)+nvl(ftd_brkrg_ugst,0)), 0)							/** ver 1.4 **/
   			FROM    ftd_fo_trd_dtls_hstry
   			WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
  			AND     ftd_xchng_cd        = :c_xchng_cd
   			AND     ftd_prdct_typ        in ('O','I')   
  			AND     ftd_undrlyng        = :c_undrlyng
  			AND     ftd_expry_dt        = :c_expry_dt
  			AND     ftd_exer_typ        = :c_exrc_typ
   			AND     ftd_opt_typ         = :c_opt_typ
   			AND     ftd_strk_prc        = :l_strike_prc
   			UNION ALL
  			SELECT  NVL( SUM( NVL( fec_brkg_val, 0 ) + NVL( fec_tran_chrg, 0 ) + NVL( fec_stamp_duty, 0 ) +
 	              NVL( fec_sebi_tt, 0 ) + NVL( fec_stt, 0 ) + NVL( fec_src_tx, 0 )), 0)
   			FROM    fec_fo_exrc_conf
   			WHERE   fec_clm_mtch_accnt  = :c_cln_mtch_accnt
  			AND     fec_xchng_cd        = :c_xchng_cd
  			AND     fec_prdct_typ       = :c_prd_typ
   			AND     fec_undrlyng        = :c_undrlyng
   			AND     fec_expry_dt        = :c_expry_dt
   			AND     fec_exer_typ        = :c_exrc_typ
  			AND     fec_opt_typ         = :c_opt_typ
  			AND     fec_strk_prc        = :l_strike_prc
  			UNION ALL
   			SELECT  NVL( SUM( NVL( fec_brkg_val, 0 ) + NVL( fec_tran_chrg, 0 ) + NVL( fec_stamp_duty, 0 ) +
                NVL( fec_sebi_tt, 0 ) + NVL( fec_stt, 0 ) + NVL( fec_src_tx, 0 )), 0)
  			FROM    fec_fo_exrc_conf_hstry
 				WHERE   fec_clm_mtch_accnt  = :c_cln_mtch_accnt
 				AND     fec_xchng_cd        = :c_xchng_cd
     		AND     fec_prdct_typ       = :c_prd_typ
     	AND     fec_undrlyng        = :c_undrlyng
    		AND     fec_expry_dt        = :c_expry_dt
     		AND     fec_exer_typ        = :c_exrc_typ
     		AND     fec_opt_typ         = :c_opt_typ
     		AND     fec_strk_prc        = :l_strike_prc
     		UNION ALL
		 	SELECT  NVL( SUM( NVL( fab_brkrg_val, 0 ) + NVL( fab_tran_chrg, 0 ) + NVL( fab_stamp_duty, 0 ) +
        	              NVL( fab_sebi_tt, 0 ) + NVL( fab_stt, 0 ) + NVL( fab_src_tx, 0 )), 0)
    			FROM    fab_fo_asgnmnt_book
     		WHERE   fab_clm_mtch_accnt  = :c_cln_mtch_accnt
     		AND     fab_undrlyng        = :c_undrlyng   
     		AND     fab_expry_dt        = :c_expry_dt   
     		AND     fab_xchng_cd        = :c_xchng_cd
     		AND     fab_prdct_typ       = :c_prd_typ
     		AND     fab_exer_typ        = :c_exrc_typ
     		AND     fab_opt_typ         = :c_opt_typ
     		AND     fab_strk_prc        = :l_strike_prc
     		UNION ALL
     		SELECT  NVL( SUM( NVL( fab_brkrg_val, 0 ) + NVL( fab_tran_chrg, 0 ) + NVL( fab_stamp_duty, 0 ) +
      	        NVL( fab_sebi_tt, 0 ) + NVL( fab_stt, 0 ) + NVL( fab_src_tx, 0 )), 0)
       	FROM    fab_fo_asgnmnt_book_hstry
        WHERE   fab_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     fab_undrlyng        = :c_undrlyng  
       	AND     fab_expry_dt        = :c_expry_dt     
       	AND     fab_xchng_cd        = :c_xchng_cd
       	AND   fab_prdct_typ       = :c_prd_typ
       	AND     fab_exer_typ        = :c_exrc_typ
       	AND     fab_opt_typ         = :c_opt_typ
       	AND     fab_strk_prc        = :l_strike_prc;
       	END;	
    	END-EXEC;


 			if ( SQLCODE != 0 )
			{
 				if ( SQLCODE == NO_DATA_FOUND )
 				{
 					fn_userlog( c_ServiceName,"Inside NO_DATA_FOUND" );
 				}
 				else
      	{
        	fn_errlog( c_ServiceName, "S31095", SQLMSG, c_errmsg  );
        	EXEC SQL CLOSE :chrgs_cur;
        	EXEC SQL FREE :chrgs_cur;
	      	EXEC SQL CLOSE :cont_cursor;
      		EXEC SQL FREE :cont_cursor;
       		tpfree ( ( char * ) ptr_fml_Obuf );
       		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      	}	
			}

			while( 1 )
  		{
 				 EXEC SQL FETCH :chrgs_cur
       	 INTO  :l_chrgs_tmp;

		     if( SQLCODE != 0 )
 				 {
 				  if( SQLCODE == NO_DATA_FOUND )
 					{
 						break;
 					}
 					else
 					{
     				fn_errlog( c_ServiceName, "S31100", SQLMSG, c_errmsg  );
     				EXEC SQL CLOSE :chrgs_cur;
     				EXEC SQL FREE :chrgs_cur;
     				EXEC SQL CLOSE :cont_cursor;
     				EXEC SQL FREE :cont_cursor;
     				tpfree ( ( char * ) ptr_fml_Obuf );
     				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
         		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        	}
 		   	 }
			
				l_charges += l_chrgs_tmp;
	
 		 	}
    	EXEC SQL CLOSE :chrgs_cur;
    	EXEC SQL FREE :chrgs_cur;

	  	EXEC SQL
      SELECT 1
      INTO   :i_fop_exists
      FROM dual
      WHERE  exists
      (
 				SELECT 1
       	FROM   fop_fo_options_pstn
        WHERE  fop_clm_mtch_accnt  = :c_cln_mtch_accnt
       	AND    fop_xchng_cd        = :c_xchng_cd
 				AND    fop_prdct_typ       = 'O'
       	AND    RTRIM(fop_undrlyng) = :c_undrlyng
        AND    fop_expry_dt        = :c_expry_dt
        AND    fop_opt_typ         = :c_opt_typ
       	AND    fop_strk_prc        = :l_strike_prc
        AND    fop_exer_typ        = :c_exrc_typ
       	AND    fop_opnpstn_qty     <> 0
       	);
				   
 
				if (SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
				{
   				fn_errlog( c_ServiceName, "S31105", SQLMSG, c_errmsg  );
 					EXEC SQL CLOSE :cont_cursor;
 					EXEC SQL FREE :cont_cursor;
 					tpfree ( ( char * ) ptr_fml_Obuf );
 					Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
 					tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
 				}

				EXEC SQL
   			SELECT 1
   			INTO   :i_fcp_exists
   			FROM   dual
   			WHERE  exists
   			(
   				SELECT 1
   				FROM  FCP_FO_SPN_CNTRCT_PSTN
   				WHERE FCP_CLM_MTCH_ACCNT    = :c_cln_mtch_accnt
   				AND   FCP_XCHNG_CD          = :c_xchng_cd
          									AND   FCP_PRDCT_TYP         = 'O'
          									AND   FCP_UNDRLYNG          = :c_undrlyng
          									AND   FCP_EXPRY_DT          = :c_expry_dt
          									AND   FCP_EXER_TYP          = :c_exrc_typ
          									AND   FCP_STRK_PRC          = :l_strike_prc
          									AND   FCP_OPT_TYP           = :c_opt_typ
          									AND   FCP_OPNPSTN_QTY       <> 0
       	 );

				fn_userlog(c_ServiceName,"the fcp exist :%d:",i_fcp_exists);
		
			if (SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    	{
      	fn_errlog( c_ServiceName, "S31110", SQLMSG, c_errmsg  );
 				EXEC SQL CLOSE :cont_cursor;
      	EXEC SQL FREE :cont_cursor;
      	tpfree ( ( char * ) ptr_fml_Obuf );
      	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    	}


			 EXEC SQL
       SELECT 1
       INTO   :i_fod_exists
       FROM   dual
       WHERE exists
       (
      	SELECT 1
       	FROM FOD_FO_ORDR_DTLS
       	WHERE FOD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
       	AND   FOD_XCHNG_CD  = :c_xchng_cd
       	AND   FOD_PRDCT_TYP = 'I'
       	AND   FOD_UNDRLYNG = :c_undrlyng
       	AND   FOD_EXPRY_DT = :c_expry_dt
       	AND   FOD_EXER_TYP = :c_exrc_typ
        AND   FOD_STRK_PRC  = :l_strike_prc
       	AND   FOD_OPT_TYP = :c_opt_typ
       	AND   FOD_EXEC_QTY != 0
     	 );
				fn_userlog(c_ServiceName,"the fod exist :%d:",i_fod_exists);	
								
			  if (SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    	  {
      	  fn_errlog( c_ServiceName, "S31115", SQLMSG, c_errmsg  );
      	  EXEC SQL CLOSE :cont_cursor;
      	  EXEC SQL FREE :cont_cursor;
      		tpfree ( ( char * ) ptr_fml_Obuf );
      		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
     			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    		 }
		
				if ( i_fop_exists )
    		{

			 fn_userlog (c_ServiceName,"c_cln_mtch_accnt :%s:",c_cln_mtch_accnt);
       fn_userlog (c_ServiceName," c_xchng_cd :%s:",c_xchng_cd);
       fn_userlog (c_ServiceName," c_undrlyng :%s:", c_undrlyng);
       fn_userlog (c_ServiceName," c_expry_dt:%s:", c_expry_dt);
       fn_userlog (c_ServiceName," c_exrc_typ :%c:",c_exrc_typ);

        	EXEC SQL
        	SELECT  FOP_OPNPSTN_QTY,
        	FOP_OPNPSTN_VAL
        	INTO    :l_opnpstn_qty,
          				:d_org_opn_val
        	FROM    fop_fo_options_pstn
        	WHERE   FOP_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
        	AND     FOP_XCHNG_CD        = :c_xchng_cd
        	AND     FOP_PRDCT_TYP       = 'O'
        	AND     FOP_UNDRLYNG        = :c_undrlyng
        	AND     FOP_EXPRY_DT        = :c_expry_dt
        	AND     FOP_STRK_PRC        = :l_strike_prc
          AND     FOP_EXER_TYP        = :c_exrc_typ
          AND     FOP_OPT_TYP         = :c_opt_typ;

					if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
 					{	
 						fn_errlog( c_ServiceName, "S31120", SQLMSG, c_errmsg  );
 						EXEC SQL CLOSE :cont_cursor;
 						EXEC SQL FREE :cont_cursor;
 					  tpfree ( ( char * ) ptr_fml_Obuf );
 						Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
 						tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      		 }
    		 }
	
			fn_userlog(c_ServiceName,"the FOP_OPNPSTN_QTY is :%ld:", l_opnpstn_qty);
	
		 			if ( i_fcp_exists )
     			{

						   fn_userlog (c_ServiceName,"c_cln_mtch_accnt :%s:",c_cln_mtch_accnt);
       fn_userlog (c_ServiceName," c_xchng_cd :%s:",c_xchng_cd);
       fn_userlog (c_ServiceName," c_undrlyng :%s:", c_undrlyng);
       fn_userlog (c_ServiceName," c_expry_dt:%s:", c_expry_dt);
       fn_userlog (c_ServiceName," c_exrc_typ :%c:",c_exrc_typ);

     				EXEC SQL
      			SELECT FCP_OPNPSTN_QTY,
           				 FCP_OPNPSTN_VAL
      		  INTO  :l_opnpstn_qty,
           				:d_org_opn_val
      			FROM  FCP_FO_SPN_CNTRCT_PSTN
      			WHERE FCP_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
 				    AND   FCP_XCHNG_CD       = :c_xchng_cd
      			AND   FCP_EXPRY_DT       = :c_expry_dt
      			AND   FCP_PRDCT_TYP      = 'O'
      			AND   FCP_UNDRLYNG       = :c_undrlyng
      			AND   FCP_EXER_TYP       = :c_exrc_typ
      			AND   FCP_OPT_TYP        = :c_opt_typ
      			AND   FCP_STRK_PRC       = :l_strike_prc;

  			    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      			{
         			fn_errlog( c_ServiceName, "S31125", SQLMSG, c_errmsg  );
         			EXEC SQL CLOSE :cont_cursor;
         			EXEC SQL FREE :cont_cursor;
         			tpfree ( ( char * ) ptr_fml_Obuf );
         			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
         			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      			}
 
					}		
						fn_userlog(c_ServiceName,"the opnposqty adn val for fcp is :%d:, :%lf:",l_opnpstn_qty, d_org_opn_val);    
    			   
						fn_userlog(c_ServiceName,"the FCP_OPNPSTN_QTYis :%ld:",l_opnpstn_qty);	

						l_optplus_qty = 0;

 				   if(i_fod_exists)
    			 {

							   fn_userlog (c_ServiceName,"c_cln_mtch_accnt :%s:",c_cln_mtch_accnt);
       fn_userlog (c_ServiceName," c_xchng_cd :%s:",c_xchng_cd);
       fn_userlog (c_ServiceName," c_undrlyng :%s:", c_undrlyng);
       fn_userlog (c_ServiceName," c_expry_dt:%s:", c_expry_dt);
       fn_userlog (c_ServiceName," c_exrc_typ :%c:",c_exrc_typ);


      				EXEC SQL
         			SELECT nvl(sum(decode(FOD_ORDR_FLW,'B',FOD_EXEC_QTY,FOD_EXEC_QTY * -1)),0)
         			INTO   :l_optplus_qty
         			FROM   FOD_FO_ORDR_DTLS
         			WHERE FOD_CLM_MTCH_ACCNT  = :c_cln_mtch_accnt
         			AND   FOD_XCHNG_CD  = :c_xchng_cd
         			AND   FOD_PRDCT_TYP = 'I'
         			AND   FOD_UNDRLYNG = :c_undrlyng
         			AND   FOD_EXPRY_DT = :c_expry_dt
         			AND   FOD_EXER_TYP = :c_exrc_typ
         			AND   FOD_STRK_PRC  = :l_strike_prc
         			AND   FOD_OPT_TYP = :c_opt_typ
         			AND   FOD_EXEC_QTY != 0;

  						  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    					  {
         						fn_errlog( c_ServiceName, "S31130", SQLMSG, c_errmsg  );
         						EXEC SQL CLOSE :cont_cursor;
         						EXEC SQL FREE :cont_cursor;
         						tpfree ( ( char * ) ptr_fml_Obuf );
         						Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
         						tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      					}
      					else if(SQLCODE == NO_DATA_FOUND)
      					{
       						 l_optplus_qty = 0;
      					}
    			
							fn_userlog(c_ServiceName,"l_optplus_qty IS :%ld:", l_optplus_qty + l_opnpstn_qty);
	
							/* l_optplus_qty = l_optplus_qty + l_opnpstn_qty; Ver 1.1  */

						}
			  		d_op_opn_val = 0.0;

						fn_userlog(c_ServiceName,"  l_optplus_qty stage 1 is :%ld:",l_optplus_qty);

    			if(l_optplus_qty > 0)
    			{
      									i_ch_val   = fn_optplusbuy_opnpstn_fp(c_ServiceName,
                                      c_cln_mtch_accnt,
                                      c_xchng_cd,
                                      c_undrlyng,
                                      c_expry_dt,
                                      c_exrc_typ,
                                      l_strike_prc,
                                      c_opt_typ,
                                      &d_op_opn_val,
																			c_errmsg,&l_opnpstn_qty);
  								    if ( i_ch_val == -1 )
      								{
        									fn_errlog( c_ServiceName, "S31135", LIBMSG, c_errmsg  );
        									EXEC SQL CLOSE :cont_cursor;
        									EXEC SQL FREE :cont_cursor;
        									tpfree ( ( char * ) ptr_fml_Obuf );
        									Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        									tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      								}
    			}
    			else if(l_optplus_qty < 0)
    			{
      			i_ch_val  = fn_optplussell_opnpstn_fp(c_ServiceName,
                                      c_cln_mtch_accnt,
                                      c_xchng_cd,
                                      c_undrlyng,
                                      c_expry_dt,
                                      c_exrc_typ,
                                      l_strike_prc,
                                      c_opt_typ,
                                      &d_op_opn_val,
	 																		c_errmsg,&l_opnpstn_qty);

						   if ( i_ch_val  == -1 )
      				 {
  		      			fn_errlog( c_ServiceName, "S31140", LIBMSG, c_errmsg  );
      		  			EXEC SQL CLOSE :cont_cursor;
      		  			EXEC SQL FREE :cont_cursor;
      		  			tpfree ( ( char * ) ptr_fml_Obuf );
      		  			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      		  			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
       				 }	
    			}
    			else
    			{
      			d_op_opn_val = 0.0;
    			}

					fn_userlog(c_ServiceName,"l_opnpstn_qty :%ld:", l_opnpstn_qty);
	
					d_org_opn_val = d_org_opn_val + d_op_opn_val;

					fn_userlog(c_ServiceName,"d_org_opn_val :%lf: ", d_org_opn_val);

				 if( l_opnpstn_qty > 0 )
    			{
       				c_opnpstn_flw = 'B';
    			}
    			else if( l_opnpstn_qty < 0)
    			{
       				c_opnpstn_flw = 'S';
    			}
    			else
    			{
       				c_opnpstn_flw = 'N';
    			}
				

 			   EXEC SQL
      	 SELECT  NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) -
                 NVL ( ftd_frs_brkg,0 )           -
                 NVL ( ftd_cvr_brkg,0 )             ), 0 )
      	 INTO    :d_buy_val_m
         FROM    ftd_fo_trd_dtls
         WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
         AND     ftd_xchng_cd        = :c_xchng_cd
         AND     ftd_prdct_typ     IN  ('I','O') 
         AND     ftd_undrlyng        = :c_undrlyng
         AND     ftd_expry_dt        = :c_expry_dt
         AND     ftd_exer_typ        = :c_exrc_typ
         AND     ftd_opt_typ         = :c_opt_typ
         AND     ftd_strk_prc        = :l_strike_prc
         AND     ftd_trd_flw         = 'B';
		 

			fn_userlog(c_ServiceName," i was here");
		 fn_userlog(c_ServiceName,"the d_buy_val_m is :%f:",d_buy_val_m);
    
					if ( SQLCODE != 0 )
    			{
      				fn_errlog( c_ServiceName, "S31145", SQLMSG, c_errmsg  );
      				EXEC SQL CLOSE :cont_cursor;
      				EXEC SQL FREE :cont_cursor;
      				tpfree ( ( char * ) ptr_fml_Obuf );
      				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    			}
			


	
				  EXEC SQL
      		SELECT  NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) - NVL ( ftd_frs_brkg,0 )- NVL ( ftd_cvr_brkg,0)),0)
      		INTO    :d_buy_val_h
      		FROM    ftd_fo_trd_dtls_hstry
      		WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      		AND     ftd_xchng_cd        = :c_xchng_cd
      		AND     ftd_prdct_typ       IN  ('I','O')   
      		AND     ftd_undrlyng        = :c_undrlyng
      		AND     ftd_expry_dt        = :c_expry_dt
      		AND     ftd_exer_typ        = :c_exrc_typ
      		AND     ftd_opt_typ         = :c_opt_typ
      		AND     ftd_strk_prc        = :l_strike_prc
      		AND     ftd_trd_flw         = 'B';
    

					
      fn_userlog(c_ServiceName," i was here 6");
			fn_userlog(c_ServiceName,"d_buy_val_h is :%f:",d_buy_val_h);

		
					if( SQLCODE != 0 )
    			{
     	 				fn_errlog( c_ServiceName, "S31150", SQLMSG, c_errmsg  );
      				EXEC SQL CLOSE :cont_cursor;
      				EXEC SQL FREE :cont_cursor;
      				tpfree ( ( char * ) ptr_fml_Obuf );
      				Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      				tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    			}

    			d_buy_val = d_buy_val_m + d_buy_val_h;
					

					fn_userlog(c_ServiceName,"d_buy_val is :%f:",d_buy_val);

 			   	EXEC SQL
      		SELECT  NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) -
                          NVL ( ftd_frs_brkg,0 )           -
                          NVL ( ftd_cvr_brkg,0 )             ), 0 )
      		INTO    :d_sell_val_m
      		FROM    ftd_fo_trd_dtls
      		WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      		AND     ftd_xchng_cd        = :c_xchng_cd
      		AND     ftd_prdct_typ   IN  ('I','O')    
      		AND     ftd_undrlyng        = :c_undrlyng
      		AND     ftd_expry_dt        = :c_expry_dt
      		AND     ftd_exer_typ        = :c_exrc_typ
      		AND     ftd_opt_typ         = :c_opt_typ
      		AND     ftd_strk_prc        = :l_strike_prc
      		AND     ftd_trd_flw         = 'S';


					fn_userlog(c_ServiceName,"d_sell_val_m stage 1 is :%lf:",d_sell_val_m);

					if ( SQLCODE != 0 )
    			{
      					fn_errlog( c_ServiceName, "S31155", SQLMSG, c_errmsg  );
      					EXEC SQL CLOSE :cont_cursor;
      					EXEC SQL FREE :cont_cursor;
      					tpfree ( ( char * ) ptr_fml_Obuf );
      					Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      					tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    			}

    			EXEC SQL
      		SELECT  NVL (SUM((ftd_exctd_qty * ftd_exctd_rt) - NVL ( ftd_frs_brkg,0 ) - NVL ( ftd_cvr_brkg,0 )), 0 )
					INTO    :d_sell_val_h
      		FROM    ftd_fo_trd_dtls_hstry
      		WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      		AND     ftd_xchng_cd        = :c_xchng_cd
      		AND     ftd_prdct_typ      IN  ('I','O')    
      		AND     ftd_undrlyng        = :c_undrlyng
      		AND     ftd_expry_dt        = :c_expry_dt
      		AND     ftd_exer_typ        = :c_exrc_typ
      		AND     ftd_opt_typ         = :c_opt_typ
      		AND     ftd_strk_prc        = :l_strike_prc
      		AND     ftd_trd_flw         = 'S';

			
	  			if ( SQLCODE != 0 )
    			{
      			fn_errlog( c_ServiceName, "S31160", SQLMSG, c_errmsg  );
      			EXEC SQL CLOSE :cont_cursor;
      			EXEC SQL FREE :cont_cursor;
      			tpfree ( ( char * ) ptr_fml_Obuf );
      			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    			}
			
						fn_userlog(c_ServiceName,"d_sell_val_h :%lf:",d_sell_val_h);

 				   d_sell_val = d_sell_val_m + d_sell_val_h;
						fn_userlog(c_ServiceName,"d_sell_val :%lf:",d_sell_val);
	
						fn_userlog(c_ServiceName," c_opt_typ :%c:",c_opt_typ);
	
 				   if ( c_opt_typ == 'P' )
    			 {
      				EXEC SQL
 			        SELECT NVL ( SUM (fec_exrc_qty * (fec_strk_prc -
                                                  fec_curr_mkt_prc ) ), 0 )
       			  INTO :d_ex_val_m
        			FROM fec_fo_exrc_conf
        			WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        			AND   fec_xchng_cd        = :c_xchng_cd
        			AND   fec_prdct_typ       = :c_prd_typ
        			AND   fec_undrlyng        = :c_undrlyng
        			AND   fec_expry_dt        = :c_expry_dt
        			AND   fec_exer_typ        = :c_exrc_typ
        			AND   fec_opt_typ         = :c_opt_typ
        			AND   fec_strk_prc        = :l_strike_prc;
    			}
					else
    			{
      				EXEC SQL
        			SELECT NVL ( SUM (fec_exrc_qty * (fec_curr_mkt_prc -
                                                  fec_strk_prc ) ), 0 )
        			INTO :d_ex_val_m
        			FROM fec_fo_exrc_conf
        			WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        			AND   fec_xchng_cd        = :c_xchng_cd
        			AND   fec_prdct_typ       = :c_prd_typ
        			AND   fec_undrlyng        = :c_undrlyng
        			AND   fec_expry_dt        = :c_expry_dt
        			AND   fec_exer_typ        = :c_exrc_typ
        			AND   fec_opt_typ         = :c_opt_typ
        			AND   fec_strk_prc        = :l_strike_prc;
    			}


				  if ( SQLCODE != 0 )
    			{
      			fn_errlog( c_ServiceName, "S31165", SQLMSG, c_errmsg  );
      			EXEC SQL CLOSE :cont_cursor;
      			EXEC SQL FREE :cont_cursor;
      			tpfree ( ( char * ) ptr_fml_Obuf );
      			Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      			tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    			}

 			   if ( c_opt_typ == 'P' )
    		 {
      			EXEC SQL
        		SELECT NVL ( SUM (fec_exrc_qty * (fec_strk_prc -
                                                   fec_curr_mkt_prc ) ), 0 )
        		INTO :d_ex_val_h
        		FROM fec_fo_exrc_conf_hstry
        		WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        		AND   fec_xchng_cd        = :c_xchng_cd
        		AND   fec_prdct_typ       = :c_prd_typ
        		AND   fec_undrlyng        = :c_undrlyng
        		AND   fec_expry_dt        = :c_expry_dt
        		AND   fec_exer_typ        = :c_exrc_typ
        		AND   fec_opt_typ         = :c_opt_typ
        		AND   fec_strk_prc        = :l_strike_prc;
    		}
	  		else
    		{
      			EXEC SQL
        		SELECT NVL ( SUM (fec_exrc_qty * (fec_curr_mkt_prc -
                                                  fec_strk_prc ) ), 0 )
        		INTO :d_ex_val_h
       		  FROM fec_fo_exrc_conf_hstry
        		WHERE fec_clm_mtch_accnt  = :c_cln_mtch_accnt
        		AND   fec_xchng_cd        = :c_xchng_cd
        		AND   fec_prdct_typ       = :c_prd_typ
        		AND   fec_undrlyng        = :c_undrlyng
        		AND   fec_expry_dt        = :c_expry_dt
        		AND   fec_exer_typ        = :c_exrc_typ
        		AND   fec_opt_typ         = :c_opt_typ
        		AND   fec_strk_prc        = :l_strike_prc;
    	 }

			 if ( SQLCODE != 0 )
    		{
      		fn_errlog( c_ServiceName, "S31170", SQLMSG, c_errmsg  );
      		EXEC SQL CLOSE :cont_cursor;
      		EXEC SQL FREE :cont_cursor;
      		tpfree ( ( char * ) ptr_fml_Obuf );
     	 		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    		}	

    		d_ex_val = d_ex_val_m + d_ex_val_h;

    		if ( c_opt_typ == 'P' )
    		{
      		EXEC SQL
        	SELECT NVL ( SUM (fab_asgnd_qty * (fab_strk_prc -
                                                fab_sttlmnt_prc ) ), 0 )
      		INTO :d_as_val_m
      		FROM fab_fo_asgnmnt_book
      		WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
      		AND   fab_undrlyng        = :c_undrlyng  
      		AND   fab_expry_dt        = :c_expry_dt 
      		AND   fab_xchng_cd        = :c_xchng_cd
      		AND   fab_prdct_typ       = :c_prd_typ
      		AND   fab_exer_typ        = :c_exrc_typ
      		AND   fab_opt_typ         = :c_opt_typ
      		AND   fab_strk_prc        = :l_strike_prc;
    		}
	  	 else
    	 {
      		EXEC SQL
        	SELECT NVL ( SUM (fab_asgnd_qty * (fab_sttlmnt_prc -
                                                fab_strk_prc ) ), 0 )
      		INTO :d_as_val_m
      		FROM fab_fo_asgnmnt_book
      		WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
      		AND   fab_undrlyng        = :c_undrlyng      
      		AND   fab_expry_dt        = :c_expry_dt   
      		AND   fab_xchng_cd        = :c_xchng_cd
      		AND   fab_prdct_typ       = :c_prd_typ
      		AND   fab_exer_typ        = :c_exrc_typ
      		AND   fab_opt_typ         = :c_opt_typ
      		AND   fab_strk_prc        = :l_strike_prc;
    	}

    	if ( SQLCODE != 0 )
    	{
      		fn_errlog( c_ServiceName, "S31175", SQLMSG, c_errmsg  );
      		EXEC SQL CLOSE :cont_cursor;
      		EXEC SQL FREE :cont_cursor;
      		tpfree ( ( char * ) ptr_fml_Obuf );
      		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    	}

    if ( c_opt_typ == 'P' )
    {
    	  EXEC SQL
        SELECT NVL ( SUM (fab_asgnd_qty * (fab_strk_prc -
                                                fab_sttlmnt_prc ) ), 0 )
      	INTO :d_as_val_h
      	FROM fab_fo_asgnmnt_book_hstry
     	  WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
      	AND   fab_xchng_cd        = :c_xchng_cd
      	AND   fab_prdct_typ       = :c_prd_typ
      	AND   fab_undrlyng        = :c_undrlyng
      	AND   fab_expry_dt        = :c_expry_dt
      	AND   fab_exer_typ        = :c_exrc_typ
      	AND   fab_opt_typ         = :c_opt_typ
      	AND   fab_strk_prc        = :l_strike_prc;
 	  }
		else
    {
    	  EXEC SQL
        SELECT NVL ( SUM (fab_asgnd_qty * (fab_sttlmnt_prc -
                                                fab_strk_prc ) ), 0 )
 	      INTO :d_as_val_h
   	    FROM fab_fo_asgnmnt_book_hstry
    	  WHERE fab_clm_mtch_accnt  = :c_cln_mtch_accnt
     	  AND   fab_xchng_cd        = :c_xchng_cd
      	AND   fab_prdct_typ       = :c_prd_typ
      	AND   fab_undrlyng        = :c_undrlyng
      	AND   fab_expry_dt        = :c_expry_dt
      	AND   fab_exer_typ        = :c_exrc_typ
      	AND   fab_opt_typ         = :c_opt_typ
      	AND   fab_strk_prc        = :l_strike_prc;
    }	


		if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31180", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :cont_cursor;
      EXEC SQL FREE :cont_cursor;
      tpfree ( ( char * ) ptr_fml_Obuf );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
	    fn_userlog(c_ServiceName,"sstage 2 d_org_opn_val :%lf: ", d_org_opn_val);

    d_as_val = d_as_val_m + d_as_val_h;

    d_crst_prft = d_sell_val - d_buy_val + d_ex_val - d_as_val;

	  d_total_prft = d_crst_prft + d_uncrst_prft;

		if( DEBUG_MSG_LVL_3 )
	  { 
  		  fn_userlog(c_ServiceName,"sss======= d_as_val :%lf:",d_as_val);
    		fn_userlog(c_ServiceName,"sss======= d_ex_val :%lf:",d_ex_val);
    		fn_userlog(c_ServiceName,"sss======= d_buy_val :%lf:",d_buy_val);
    		fn_userlog(c_ServiceName,"sss======= d_sell_val:%lf:",d_sell_val);
    		fn_userlog(c_ServiceName,"sss====== d_uncrst_prft :%lf:",d_uncrst_prft);
  	}
		d_uncrst_prft =  l_opnpstn_qty * d_ltp ;
	  d_total_prft = d_crst_prft + d_uncrst_prft;

		if( DEBUG_MSG_LVL_3 ) 
		{ 
    	fn_userlog(c_ServiceName,"sss======= d_as_val :%lf:",d_as_val);
    	fn_userlog(c_ServiceName,"sss======= d_ex_val :%lf:",d_ex_val);
    	fn_userlog(c_ServiceName,"sss======= d_buy_val :%lf:",d_buy_val);
    	fn_userlog(c_ServiceName,"sss======= d_sell_val:%lf:",d_sell_val);
    	fn_userlog(c_ServiceName,"sss====== d_uncrst_prft :%lf:",d_uncrst_prft);
			fn_userlog(c_ServiceName,"stage 2 d_org_opn_val :%lf: ", d_org_opn_val);
  	}

		
		EXEC SQL
    SELECT decode(:l_opnpstn_qty,0,0,round(((:d_org_opn_val/:l_opnpstn_qty)),2))
    INTO :d_base_prc
    FROM  dual;


    	st_cntrct_qt.l_avg_trdd_prc = (long)d_base_prc;
	
			fn_userlog(c_ServiceName,"l_avg_trd_prc Is :%ld:", st_cntrct_qt.l_avg_trdd_prc);
  	  fn_userlog(c_ServiceName,"d_base_prc Is :%lf:", d_base_prc);


			if( DEBUG_MSG_LVL_3 ) 
			{ 
    		fn_userlog(c_ServiceName,"l_avg_trd_prc Is :%ld:", st_cntrct_qt.l_avg_trdd_prc);
				fn_userlog(c_ServiceName,"d_sell_val :%lf",d_sell_val);
				fn_userlog(c_ServiceName,"d_buy_val :%lf",d_buy_val);
				fn_userlog(c_ServiceName,"d_ex_val :%lf",d_ex_val);
				fn_userlog(c_ServiceName,"d_as_val :%lf",d_as_val);
				fn_userlog(c_ServiceName,"d_crst_prft :%lf",d_crst_prft);
				fn_userlog(c_ServiceName,"l_opnpstn_qty :%ld",l_opnpstn_qty);
				fn_userlog(c_ServiceName,"d_uncrst_prft :%lf",d_uncrst_prft);
				fn_userlog(c_ServiceName,"c_opnpstn_flw :%c",c_opnpstn_flw); 
				fn_userlog(c_ServiceName,"l_charges :%ld",l_charges);             
				fn_userlog(c_ServiceName,"l_avg_trd_prc :%ld",st_cntrct_qt.l_avg_trdd_prc);   
				fn_userlog(c_ServiceName," d_total_prft :%lf",d_total_prft);
    		fn_userlog(c_ServiceName,"the d_org_opn_val Is :%lf:",d_org_opn_val);
    	}	
  	 }
  	else 
 		{
    	if(DEBUG_MSG_LVL_3)
    	{
        	fn_userlog( c_ServiceName," Inside already calculated portfolio for options");
    	}
    	c_prd_typ = 'O';      
    	d_org_opn_val = 0.0;
    	l_charges     = 0;
    	l_avg_pr      = 0;
    	i_exists_main = 0;
			d_crst_prft =0;
    	
			EXEC SQL
    	SELECT 1
      INTO  :i_exists_main
      FROM dual
      WHERE EXISTS
      (
      SELECT 1
      FROM  PCP_PRTFL_CNTRCT_PRDCT
     	WHERE PCP_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
      AND   PCP_XCHNG_CD       =:c_xchng_cd
      AND   PCP_PRDCT_TYP      in ('O','I')
      AND   PCP_UNDRLYNG       =:c_undrlyng
      AND   PCP_EXPRY_DT       =:c_expry_dt
      AND   PCP_EXER_TYP       =:c_exrc_typ
      AND   PCP_STRK_PRC       =:l_strike_prc
      AND   PCP_OPT_TYP        =:c_opt_typ
   		);			
			if(DEBUG_MSG_LVL_5)    /** Ver 1.1 **/
      {	
				fn_userlog( c_ServiceName," i_exists_main :%d:",i_exists_main);
				fn_userlog( c_ServiceName,"pcp c_cln_mtch_accnt is :%s:",c_cln_mtch_accnt);
				fn_userlog( c_ServiceName,"pcp c_xchng_cd  is :%s:",c_xchng_cd);
				fn_userlog( c_ServiceName,"pcp c_undrlyng is :%s:" , c_undrlyng);
				fn_userlog( c_ServiceName,"pcp c_expry_dt is :%s:" , c_expry_dt);
				fn_userlog( c_ServiceName,"pcp c_exrc_typ  is :%c:" , c_exrc_typ);
				fn_userlog( c_ServiceName,"pcp l_strike_prc  is :%ld:",l_strike_prc);
				fn_userlog( c_ServiceName,"pcp l c_opt_typ is :%c:" , c_opt_typ);
			}

    	if(SQLCODE  !=  0 && SQLCODE != NO_DATA_FOUND )
    	{
      		fn_errlog( c_ServiceName, "S31185", SQLMSG, c_errmsg  );
      		EXEC SQL CLOSE :cont_cursor;
      		EXEC SQL FREE :cont_cursor;
      		tpfree ( ( char * ) ptr_fml_Obuf );
      		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
      		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    	}	

    	if (i_exists_main == 1)
    	{

			/** Ver 1.1 Starts **/

  		    EXEC SQL
          SELECT nvl(sum(PCP_OPNPSTN_QTY),0),
                 nvl(sum(PCP_OPNPSTN_VAL),0),
                 nvl(sum(PCP_RLLZD_PNL),0),
                 nvl(sum(PCP_BRKG_VAL),0),
                 nvl(sum(PCP_AVG_TRD_PRC),0),
                 nvl(sum(PCP_TOTAL_PNL),0)
          INTO  :l_opnpstn_qty,
                :d_org_opn_val,
                :d_crst_prft,
                :l_charges,
                /**:l_avg_pr,**/
								:st_cntrct_qt.l_avg_trdd_prc,
                :d_total_prft
          FROM  PCP_PRTFL_CNTRCT_PRDCT
 	        WHERE PCP_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
   	      AND   PCP_XCHNG_CD       =:c_xchng_cd
     	    AND   PCP_PRDCT_TYP      in ('O','I')
       	  AND   PCP_UNDRLYNG       =:c_undrlyng
         	AND   PCP_EXPRY_DT       =:c_expry_dt
        	AND   PCP_EXER_TYP       =:c_exrc_typ
       	  AND   PCP_STRK_PRC       =:l_strike_prc
        	AND   PCP_OPT_TYP        =:c_opt_typ;

				 /** Ver 1.1 Ends **/

 	       if(SQLCODE  !=  0 && SQLCODE != NO_DATA_FOUND )
  	      {
    		      fn_errlog( c_ServiceName, "S31190", SQLMSG, c_errmsg  );
       		    EXEC SQL CLOSE :cont_cursor;
        		  EXEC SQL FREE :cont_cursor;
          		tpfree ( ( char * ) ptr_fml_Obuf );
          		Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
          		tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        	}

				if( DEBUG_MSG_LVL_3 )														/** Ver 1.1 **/
				{
					fn_userlog (c_ServiceName," option l_opnpstn_qty is :%ld:",l_opnpstn_qty);
					fn_userlog (c_ServiceName," option d_org_opn_val is :%lf:", d_org_opn_val);
					fn_userlog (c_ServiceName," option d_crst_prft is :%lf:", d_crst_prft);
					fn_userlog (c_ServiceName," option l_charges is :%ld:",l_charges);
					fn_userlog (c_ServiceName," option l_avg_pr	is :%ld:",st_cntrct_qt.l_avg_trdd_prc);
					fn_userlog (c_ServiceName," option d_total_prft is :%lf:",d_total_prft);
				}
		

   		} 
    	else
    	{
 		      EXEC SQL
          SELECT nvl(sum(PCP_OPNPSTN_QTY),0),
                 nvl(sum(PCP_OPNPSTN_VAL),0),
                 nvl(sum(PCP_RLLZD_PNL),0),
                 nvl(sum(PCP_BRKG_VAL),0),
                 nvl(sum(PCP_AVG_TRD_PRC),0),
                 nvl(sum(PCP_TOTAL_PNL),0)
          INTO  :l_opnpstn_qty,
                :d_org_opn_val,
                :d_crst_prft,
                :l_charges,
 								/**:l_avg_pr,			 ver 1.1   **/
                :st_cntrct_qt.l_avg_trdd_prc,
                :d_total_prft
          FROM  PCP_PRTFL_CNTRCT_PRDCT_HSTRY
     	    WHERE PCP_CLM_MTCH_ACCNT =:c_cln_mtch_accnt
       	  AND   PCP_XCHNG_CD       =:c_xchng_cd
        	AND   PCP_PRDCT_TYP      in ('O','I')
        	AND   PCP_UNDRLYNG       =:c_undrlyng
        	AND   PCP_EXPRY_DT       =:c_expry_dt
        	AND   PCP_EXER_TYP       =:c_exrc_typ
        	AND   PCP_STRK_PRC       =:l_strike_prc
        	AND   PCP_OPT_TYP        =:c_opt_typ;

  	      if(SQLCODE  !=  0 && SQLCODE != NO_DATA_FOUND )
    	    {
      	    fn_errlog( c_ServiceName, "S31195", SQLMSG, c_errmsg  );
        	  EXEC SQL CLOSE :cont_cursor;
          	EXEC SQL FREE :cont_cursor;
          	tpfree ( ( char * ) ptr_fml_Obuf );
          	Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
          	tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
        	}
				
				if( DEBUG_MSG_LVL_5 )
				{
					fn_userlog (c_ServiceName, "option l_opnpstn_qty is :%ld:",l_opnpstn_qty);
        	fn_userlog (c_ServiceName, "option pcp hstry d_org_opn_val is :%lf:", d_org_opn_val);
        	fn_userlog (c_ServiceName, "option pcp hstry d_crst_prft is :%lf:", d_crst_prft);
        	fn_userlog (c_ServiceName, "option pcp hstry l_charges is :%ld:",l_charges);
        	fn_userlog (c_ServiceName, "option pcp hstry l_avg_pr  is :%ld:",st_cntrct_qt.l_avg_trdd_prc);
        	fn_userlog (c_ServiceName, "option pcp hstry d_total_prft is :%lf:",d_total_prft);				
				}
       }
				 	 d_uncrst_prft = l_opnpstn_qty * d_ltp;

  		    if ( l_opnpstn_qty > 0)
      		{
        		c_opnpstn_flw = 'B';
      		}
      		else if ( l_opnpstn_qty < 0)
      		{
       			 c_opnpstn_flw = 'S';
      		}
      		else
 		      {
     			   c_opnpstn_flw = 'N';
      		}
        	fn_userlog( c_ServiceName,"checking d_org_opn_val is  |%lf|",d_org_opn_val);

	       if(DEBUG_MSG_LVL_5)
   		   {
      		  fn_userlog( c_ServiceName,"Realized PNL is   |%lf|",d_crst_prft);
        		fn_userlog( c_ServiceName,"Unrealized PNL is |%lf|",d_uncrst_prft);
        		fn_userlog( c_ServiceName,"Total PNL is      |%lf|",d_total_prft);
        		fn_userlog( c_ServiceName,"Average prize is  |%lf|",st_cntrct_qt.l_avg_trdd_prc);
        		fn_userlog( c_ServiceName,"charges       is  |%ld|",l_charges);
        		fn_userlog( c_ServiceName,"l_opnpstn_qty is  |%ld|",l_opnpstn_qty);
        		fn_userlog( c_ServiceName,"d_ltp is          |%lf|",d_ltp);
        		fn_userlog( c_ServiceName,"c_opnpstn_flw is  |%c|",c_opnpstn_flw);
      	 }
		 		}
			 }

				if ( c_opnpstn_flw == 'S')
				{	
					l_opnpstn_qty = l_opnpstn_qty * (-1);
				}	 
				if(c_opnpstn_flw == 'S' && c_prd_typ == 'O')
        {
						l_opnpstn_qty = l_opnpstn_qty * (-1);
            d_org_opn_val = d_org_opn_val *  (-1);
        }


			if(Fneeded32(1,l_bufferlength) > Funused32(ptr_fml_Obuf)) /**** i_bufferlength chaged to l_bufferlength in Ver 1.3 ***/
     	{
        ptr_fml_Obuf = (FBFR32 *)tprealloc((char *)ptr_fml_Obuf,
                                        (Fsizeof32(ptr_fml_Obuf) + MIN_FML_BUF_LEN));
        if(ptr_fml_Obuf == NULL)
        {
          fn_errlog(c_ServiceName,"S31200", FMLMSG, c_errmsg);
          Fadd32( ptr_fml_Ibuf,FFO_ERR_MSG, c_errmsg, 0 );
          tpreturn(TPFAIL, 0L, (char *)ptr_fml_Ibuf, 0L, 0);
        }
     	}
						i_ch_val =  fn_pack_vartofml ( c_ServiceName,
                                   c_errmsg,
                                   &ptr_fml_Obuf,
                                   18,
                       FFO_XCHNG_CD,      c_xchng_cd,
                       FFO_PRDCT_TYP,     (char *)&c_prd_typ,
                       FFO_UNDRLYNG,      c_undrlyng,
                       FFO_EXPRY_DT,      c_expry_dt,
                       FFO_EXER_TYP,      (char *)&c_exrc_typ,
                       FFO_OPT_TYP,      (char *)&c_opt_typ,
											 FFO_CTGRY_INDSTK,  (char *)&c_ctgry_indstk,
                       FFO_OPNPSTN_QTY,   (char *)&l_opnpstn_qty,
                       FFO_OPNPSTN_VAL,   (char *)&d_org_opn_val,
                       FFO_TRD_FLW,       (char *)&c_opnpstn_flw,
                       FFO_BRKRG_VL,      (char *)&l_charges,
                       FFO_STRK_PRC,      (char *)&l_strike_prc,
                       FFO_CUR_MKT_PRC,   (char *)&st_cntrct_qt.l_lst_trdd_prc, 
                       FFO_RLZD_PL,       (char *)&d_crst_prft,
											 FFO_TOTAL_PL,      (char *)&d_total_prft,
                       FFO_UNRLZD_PL,     (char *)&d_uncrst_prft,
                       FFO_EBA_MTCH_ACT_NO, (char *)c_cln_mtch_accnt,
											 FFO_AVRG_TRD_PRC,  (char *)&st_cntrct_qt.l_avg_trdd_prc);
			
      if( i_ch_val == -1 )
      {
        fn_errlog( c_ServiceName, "S31205", LIBMSG, c_errmsg  );
        EXEC SQL CLOSE :cont_cursor;
        EXEC SQL FREE :cont_cursor;
        tpfree ( ( char * ) ptr_fml_Obuf );
        Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_errmsg, 0 );
        tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
      }
		}


  EXEC SQL CLOSE :cont_cursor;
  EXEC SQL FREE :cont_cursor;

  tpreturn(TPSUCCESS, SUCC_BFR, (char *)ptr_fml_Obuf, 0, 0 );
}


int fn_buy_opnpstn_fp(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prdct_typ,
									 double d_ltp,
									 double *d_crst_prft,
									 double *d_uncrst_prft,
                   double *d_avg_pr,
									 char *c_errmsg,
                   double *d_total_prft,
                   long *l_strike_prc,
									 long *l_opnpstn_qty, double *d_opn_buy_val)
 {
	sql_cursor trd_cursor;
	
  varchar c_trd_dt [ LEN_DATE ];
	long l_rec_main_exists			 ;
  long int li_bal_qty 			;
	long l_rec_hstry_exists			 ;
  long int li_qty_bal 			= 0;
	long int l_tot_sell_qty_h = 0;
	long int l_tot_sell_qty_m;	
  long int l_tot_sell_qty		= 0;
  long int li_uncrst_qty 		= 0;
  long int li_cum_exctd_qty = 0;
  /**double d_opn_buy_val = 0;**/ 
	long int li_net_qty_bal 	= 0;
 	long int li_crst_qty; 
	double d_frsh_brk					= 0;
	double d_cvr_brk					= 0;	
	double d_sell_val_m 			= 0;
  double d_sell_val_h 			= 0;
  double d_sell_val 				= 0;
  double d_buy_val 					= 0;
	long int li_exctd_qty     = 0;	
	long int li_exctd_rt			= 0;
	double d_net_avg_rt 			= 0;
	
	sql_cursor  cont_cursor; 
	
	struct st_cntrct_qt st_cntrct_qt;
	
  if( DEBUG_MSG_LVL_3 )
 	{ 
    fn_userlog(c_ServiceName,"Inside Function fn_buy_opnpstn_fp");
 	}

 	if( DEBUG_MSG_LVL_5 )
  {
    fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
    fn_userlog(c_ServiceName,"Product Type Is :%c:",c_prdct_typ);
    fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
    fn_userlog(c_ServiceName,"Exercise Type Is :%c:",c_exrc_typ);
    fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
  }
	st_cntrct_qt.l_lst_trdd_prc = d_ltp;
	
  EXEC SQL
        SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
							  NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) - NVL ( ftd_frs_brkg,0 )-NVL ( ftd_cvr_brkg,0 ) ), 0 )
				 INTO    :l_tot_sell_qty_m,
                :d_sell_val_m
        FROM    ftd_fo_trd_dtls
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ in ('F','P','U')   
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = :c_exrc_typ
        AND     ftd_trd_flw         = 'S';

      if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31210", SQLMSG, c_errmsg  );
        return -1;
      }

		    EXEC SQL
        SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
                NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) -
                            NVL ( ftd_frs_brkg,0 )           -
                            NVL ( ftd_cvr_brkg,0 )             ), 0 )
        INTO    :l_tot_sell_qty_h,
                :d_sell_val_h
        FROM    ftd_fo_trd_dtls_hstry
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ in ('F','P','U')  
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = :c_exrc_typ
        AND     ftd_trd_flw         = 'S';
   if ( SQLCODE != 0 )
   {
    fn_errlog( c_ServiceName, "S31215", SQLMSG, c_errmsg  );
    return -1;
   }

     l_tot_sell_qty = l_tot_sell_qty_m + l_tot_sell_qty_h;

		 d_sell_val = d_sell_val_m + d_sell_val_h;

						fn_userlog(c_ServiceName," i was here 5");

     EXEC SQL ALLOCATE :trd_cursor;
       	
				EXEC SQL EXECUTE
       		BEGIN
            OPEN  :trd_cursor FOR
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     NVL (ftd_frs_brkg, 0),
                     NVL (ftd_cvr_brkg, 0),
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ in ('F','U','P') 
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = :c_exrc_typ
              AND     ftd_trd_flw         = 'B'
              UNION ALL
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     NVL (ftd_frs_brkg, 0),
                     NVL (ftd_cvr_brkg, 0),
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls_hstry
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ in ('F','U','P') 
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = :c_exrc_typ
              AND     ftd_trd_flw         = 'B'
              ORDER BY 5;
          END;
        END-EXEC;

      li_bal_qty = l_tot_sell_qty;
	
			while ( 1 )
      {
      	li_qty_bal = 0; 

        EXEC SQL
         FETCH :trd_cursor
          INTO :li_exctd_qty,
               :li_exctd_rt,
               :d_frsh_brk,
               :d_cvr_brk,
               :c_trd_dt;

        
				if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {
						 fn_userlog(c_ServiceName," no data found");
            break;
          }
          else
          {
            fn_errlog( c_ServiceName, "S31220", SQLMSG, c_errmsg  );
            EXEC SQL CLOSE :trd_cursor;
            EXEC SQL FREE :trd_cursor;
            EXEC SQL CLOSE :cont_cursor;
            EXEC SQL FREE :cont_cursor;
            return -1;
          }
        }

      	if ( li_bal_qty > 0 )
        {
          fn_userlog(c_ServiceName,"Inside li_bal_qty > 0");
          fn_userlog(c_ServiceName,"HERE li_bal_qty is :%ld:",li_bal_qty);
          fn_userlog(c_ServiceName,"HERE li_exctd_qty is :%ld:",li_exctd_qty);
				
					fn_userlog(c_ServiceName,"i was here 6");
          
					li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );

					d_buy_val = d_buy_val + ( (double) li_crst_qty * (double)  li_exctd_rt ) + d_frsh_brk + d_cvr_brk;

					li_bal_qty = li_bal_qty - li_crst_qty;

					if ( li_bal_qty == 0 )
					{
					li_uncrst_qty = li_exctd_qty - li_crst_qty;
					*d_opn_buy_val = *d_opn_buy_val  + ( (double) li_uncrst_qty * (double) li_exctd_rt ) +
					d_frsh_brk + d_cvr_brk;
					}
				}
				else
				{
					li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
					*d_opn_buy_val = *d_opn_buy_val  + ( (double) li_exctd_qty * (double)  li_exctd_rt ) +
					d_frsh_brk + d_cvr_brk;
	
					fn_userlog(c_ServiceName,"Uncrystalised Qty Is :%ld:",li_uncrst_qty);
				}
			
				li_cum_exctd_qty = li_cum_exctd_qty + li_exctd_qty;
				
				if( (li_cum_exctd_qty  - l_tot_sell_qty) > 0)
        {
          li_qty_bal = fn_minl(li_cum_exctd_qty  - l_tot_sell_qty, li_exctd_qty);
          li_net_qty_bal = li_net_qty_bal + li_qty_bal;
        }

        if ( li_qty_bal > 0 )
        {
          d_net_avg_rt = d_net_avg_rt + (double) li_qty_bal * (double) li_exctd_rt;
        }
       }

      EXEC SQL CLOSE :trd_cursor;
      EXEC SQL FREE :trd_cursor;

      *d_avg_pr = d_net_avg_rt/(double)li_net_qty_bal; 

      *d_crst_prft = d_sell_val - d_buy_val;
	
        fn_userlog (c_ServiceName,"BEFORE li_uncrst_qty is :%ld:",li_uncrst_qty);
        fn_userlog (c_ServiceName,"BEFORE d_opn_buy_val is :%lf:",*d_opn_buy_val);
				fn_userlog(c_ServiceName," the ltp is :%lf:",d_ltp);
				fn_userlog(c_ServiceName," the ltp2 is :%ld:",st_cntrct_qt.l_lst_trdd_prc);
			*d_uncrst_prft = ((double)li_uncrst_qty * (double)st_cntrct_qt.l_lst_trdd_prc) - *d_opn_buy_val;
			
			*d_total_prft = *d_crst_prft + *d_uncrst_prft;	

	     	*l_opnpstn_qty = li_uncrst_qty ;  

				if( DEBUG_MSG_LVL_5 ) 					/** Ver 1.1 **/
  			{
        	fn_userlog (c_ServiceName,"INSIDE FUNCTION BUY VAL IS :%lf:",d_buy_val);
        	fn_userlog (c_ServiceName,"INSIDE FUNCTION OPEN BUY VAL IS :%lf:",*d_opn_buy_val);
        	fn_userlog (c_ServiceName,"Inside Function d_crst_prft is :%lf:",*d_crst_prft);
        	fn_userlog (c_ServiceName,"Inside Function d_uncrst_prft is :%lf:",*d_uncrst_prft);
        	fn_userlog(c_ServiceName,"li_uncrst_qty is :%d:",li_uncrst_qty);
        	fn_userlog(c_ServiceName,"d_opn_buy_val is :%lf:",*d_opn_buy_val);
        	fn_userlog(c_ServiceName,"d_buy_val is :%lf:",d_buy_val);
       	  fn_userlog(c_ServiceName,"d_avg_pr is :%lf:",*d_avg_pr);
				}
}

int fn_sell_opnpstn_fp(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prdct_typ,
									 double d_ltp,
                   double *d_crst_prft,
				           double *d_uncrst_prft,
                   double *d_avg_pr,
                   char *c_errmsg,
									double *d_total_prft,
									 long *l_strike_prc,
										long *l_opnpstn_qty,double *d_opn_sell_val)
									
{
	char c_trd_dt;
		
	long int l_rec_main_exists;
  long int li_qty_bal = 0;
  long int li_uncrst_qty = 0;
  long int li_cum_exctd_qty = 0;
  long int li_net_qty_bal 	= 0;
	long int li_exctd_rt 			= 0;
  long int li_exctd_qty 		= 0;
	long int l_rec_hstry_exists = 0;
	long int li_crst_qty			= 0;
	long int li_bal_qty				= 0;
	long l_tot_buy_qty_m  		= 0;
 	long l_tot_buy_qty_h 			= 0; 
 	long l_tot_buy_qty				= 0;
	
	double d_buy_val_m 				= 0; 
	double d_frsh_brk    		  = 0;
	double d_buy_val_h				= 0;
	double d_cvr_brk					= 0;
	/***double d_opn_sell_val 		= 0;***/
	double d_buy_val 					=	0;
	double d_sell_val 				= 0;
  double d_net_avg_rt 			= 0;
	
	sql_cursor cont_cursor;	
	sql_cursor trd_cursor;
	
	struct st_cntrct_qt st_cntrct_qt;

	st_cntrct_qt.l_lst_trdd_prc = d_ltp;	

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Inside Function fn_sell_opnpstn_fp ");
  }

  if( DEBUG_MSG_LVL_5 )
  {
    fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
    fn_userlog(c_ServiceName,"Product Type Is :%c:",c_prdct_typ);
    fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
    fn_userlog(c_ServiceName,"Exercise Type Is :%c:",c_exrc_typ);
    fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
  }

		EXEC SQL
    SELECT  NVL ( SUM ( ftd_exctd_qty ), 0), NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) - NVL ( ftd_frs_brkg,0 )           - NVL ( ftd_cvr_brkg,0 )), 0 )
		INTO    :l_tot_buy_qty_m,
					  :d_buy_val_m
    FROM    ftd_fo_trd_dtls
    WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND     ftd_xchng_cd        = :c_xchng_cd
    AND     ftd_prdct_typ in ('F','U','P')   
    AND     ftd_undrlyng        = :c_undrlyng
    AND     ftd_expry_dt        = :c_expry_dt
    AND     ftd_exer_typ        = :c_exrc_typ
    AND     ftd_trd_flw         = 'B';

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31225", SQLMSG, c_errmsg  );
      return -1;
    }

 	  EXEC SQL
    SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
            NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) - NVL ( ftd_frs_brkg,0 ) - NVL ( ftd_cvr_brkg,0 )), 0 )
    INTO    :l_tot_buy_qty_h,
            :d_buy_val_h
    FROM    ftd_fo_trd_dtls_hstry
    WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND     ftd_xchng_cd        = :c_xchng_cd
    AND     ftd_prdct_typ in ('F','U','P')
    AND     ftd_undrlyng        = :c_undrlyng
    AND     ftd_expry_dt        = :c_expry_dt
    AND     ftd_exer_typ        = :c_exrc_typ
    AND     ftd_trd_flw         = 'B';

   if ( SQLCODE != 0 )
   {
     fn_errlog( c_ServiceName, "S31230", SQLMSG, c_errmsg  );
     return -1;
   }

   l_tot_buy_qty = l_tot_buy_qty_m + l_tot_buy_qty_h;
   d_buy_val = d_buy_val_m + d_buy_val_h;

   EXEC SQL ALLOCATE :trd_cursor;

        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :trd_cursor FOR
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     NVL (ftd_frs_brkg, 0),
                     NVL (ftd_cvr_brkg, 0),
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ in ('F','U','P')  
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = :c_exrc_typ
              AND     ftd_trd_flw         = 'S'
              UNION ALL
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     NVL (ftd_frs_brkg, 0),
                     NVL (ftd_cvr_brkg, 0),
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls_hstry
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ in ('F','U','P')  
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = :c_exrc_typ
              AND     ftd_trd_flw         = 'S'
              ORDER BY 5;
          END;
        END-EXEC;

		li_bal_qty = l_tot_buy_qty;
    while ( 1 )
    {
    	  li_qty_bal = 0;

 	        EXEC SQL
          FETCH :trd_cursor
          INTO :li_exctd_qty,
               :li_exctd_rt,
               :d_frsh_brk,
               :d_cvr_brk,
               :c_trd_dt;
        if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {
            break;
          }
          else
          {
            fn_errlog( c_ServiceName, "S31235", SQLMSG, c_errmsg  );
            EXEC SQL CLOSE :trd_cursor;
            EXEC SQL FREE :trd_cursor;
            EXEC SQL CLOSE :cont_cursor;
            EXEC SQL FREE :cont_cursor;
          }
        }

        if ( li_bal_qty > 0 )
        {
          li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );
          d_sell_val = d_sell_val + ( (double) li_crst_qty * (double)  li_exctd_rt ) -
                      d_frsh_brk - d_cvr_brk;
          li_bal_qty = li_bal_qty - li_crst_qty;
	
				
          if ( li_bal_qty == 0 )
          {
            if(DEBUG_MSG_LVL_3)
            {
              fn_userlog(c_ServiceName,"Inside SELL li_bal_qty == 0 ");
            }

            li_uncrst_qty = li_exctd_qty - li_crst_qty;
            *d_opn_sell_val = *d_opn_sell_val  + ( (double) li_uncrst_qty * (double) li_exctd_rt ) -
                             d_frsh_brk - d_cvr_brk;
          }
        }
        else
        {
          li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
          *d_opn_sell_val = *d_opn_sell_val + ( (double) li_exctd_qty * (double) li_exctd_rt ) -
                          d_frsh_brk - d_cvr_brk;
        }

        li_cum_exctd_qty = li_cum_exctd_qty + li_exctd_qty;
        if( (li_cum_exctd_qty  - l_tot_buy_qty) > 0)
        {
          li_qty_bal = fn_minl(li_cum_exctd_qty  - l_tot_buy_qty, li_exctd_qty);
          li_net_qty_bal = li_net_qty_bal + li_qty_bal;
        }

        if ( li_qty_bal > 0 )
        {
          d_net_avg_rt = d_net_avg_rt + (double) li_qty_bal * (double) li_exctd_rt;
        }
    }

  EXEC SQL CLOSE :trd_cursor;
	EXEC SQL FREE :trd_cursor;

  if(DEBUG_MSG_LVL_5)
  {
    fn_userlog(c_ServiceName,"d_sell_val [%lf]",d_sell_val);
    fn_userlog(c_ServiceName,"d_buy_val [%lf]",d_buy_val);
    fn_userlog(c_ServiceName,"d_opn_sell_val [%lf]",*d_opn_sell_val);
    fn_userlog(c_ServiceName,"li_uncrst_qty [%ld]",li_uncrst_qty);
    fn_userlog(c_ServiceName,"st_cntrct_qt.l_lst_trdd_prc [%ld]",st_cntrct_qt.l_lst_trdd_prc);
  }

  *d_avg_pr = d_net_avg_rt/(double)li_net_qty_bal;

  *d_crst_prft = d_sell_val - d_buy_val;
  *d_uncrst_prft = *d_opn_sell_val - ((double) li_uncrst_qty * (double)st_cntrct_qt.l_lst_trdd_prc ); 

		fn_userlog(c_ServiceName,"st_cntrct_qt.l_lst_trdd_prc [%ld]",st_cntrct_qt.l_lst_trdd_prc);   

	 *d_total_prft = *d_crst_prft + *d_uncrst_prft;
	
	*l_opnpstn_qty = li_uncrst_qty ;
	
	
  if( DEBUG_MSG_LVL_5 )			/** Ver 1.1 **/
  {
		fn_userlog(c_ServiceName,"d_avg_pr is :%lf:",d_avg_pr);
    fn_userlog(c_ServiceName,"Inside SELL Function d_uncrst_prft is :%lf:",d_uncrst_prft);
    fn_userlog(c_ServiceName,"Inside SELL Function d_crst_prft is :%lf:",d_crst_prft);
    fn_userlog(c_ServiceName,"Avgtrd Pr=============d_avg_pr is :%lf:",d_avg_pr);
  }
}

int fn_sqroff_pstn(char *c_ServiceName,
                   char *c_cln_mtch_accnt,
                   char *c_xchng_cd,
                   char *c_undrlyng,
                   char *c_expry_dt,
                   char c_exrc_typ,
                   char c_prdct_typ,
									 double d_ltp,
									 double *d_crst_prft,
                   double *d_uncrst_prft,
									 char *c_errmsg,
                   double *d_total_prft,
                   long *l_strike_prc) 
{

	double d_buy_val  		= 0;
  double d_sell_val 		= 0;
  double d_cls_val  		= 0;
	double d_cls_val_h;
	double  d_buy_val_m 	= 0;
	double d_buy_val_h		= 0;
	double d_sell_val_h 	= 0;
	double d_sell_val_m 	= 0;	
	double d_cls_val_m		= 0;
	
	long l_tot_buy_qty		= 0;
	long l_tot_sell_qty		= 0;	
	long l_tot_sell_qty_m = 0;
	long l_tot_sell_qty_h = 0;
	long l_tot_buy_qty_m 	= 0;
	long l_tot_buy_qty_h 	= 0; 

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"INSIDE POSITION SQR-OFF");
    fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
    fn_userlog(c_ServiceName,"Product Type Is :%c:",c_prdct_typ);
    fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
    fn_userlog(c_ServiceName,"Exercise Type Is :%c:",c_exrc_typ);
    fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
  }
		 fn_userlog(c_ServiceName,"=============== in the square off function");

	  EXEC SQL
    SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
            NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) -
                          NVL ( ftd_frs_brkg,0 )           -
                          NVL ( ftd_cvr_brkg,0 )             ), 0 )
    INTO    :l_tot_sell_qty_m,
            :d_sell_val_m
    FROM    ftd_fo_trd_dtls
    WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND     ftd_xchng_cd        = :c_xchng_cd
    AND     ftd_prdct_typ in ('F','U','P')    
    AND     ftd_undrlyng        = :c_undrlyng
    AND     ftd_expry_dt        = :c_expry_dt
    AND     ftd_exer_typ        = :c_exrc_typ
    AND     ftd_trd_flw         = 'S';


		if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31240", SQLMSG, c_errmsg  );
      return -1;
    }

 	  EXEC SQL
    SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
            NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) -
                          NVL ( ftd_frs_brkg,0 )           -
                          NVL ( ftd_cvr_brkg,0 )             ), 0 )
    INTO    :l_tot_sell_qty_h,
            :d_sell_val_h
    FROM    ftd_fo_trd_dtls_hstry
    WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND     ftd_xchng_cd        = :c_xchng_cd
    AND     ftd_prdct_typ in ('F','U','P')   
    AND     ftd_undrlyng        = :c_undrlyng
    AND     ftd_expry_dt        = :c_expry_dt
    AND     ftd_exer_typ        = :c_exrc_typ
    AND     ftd_trd_flw         = 'S';

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31245", SQLMSG, c_errmsg  );
      return -1;
    }
		if( DEBUG_MSG_LVL_5 )
		{
			fn_userlog(c_ServiceName, "l_tot_sell_qty_m :%ld:", l_tot_sell_qty_m);
			fn_userlog(c_ServiceName, "d_sell_val_m :%lf:", d_sell_val_m);
			fn_userlog(c_ServiceName, "l_tot_sell_qty_h :%ld:", l_tot_sell_qty_h);
			fn_userlog(c_ServiceName, "d_sell_val_h :%lf:", d_sell_val_h);
		}
    l_tot_sell_qty = l_tot_sell_qty_m + l_tot_sell_qty_h;
    d_sell_val = d_sell_val_m + d_sell_val_h;

		    fn_userlog(c_ServiceName, "l_tot_sell_qty :%ld:",l_tot_sell_qty );
    fn_userlog(c_ServiceName, "d_sell_val :%lf:", d_sell_val);

			EXEC SQL
      SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
              NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) -
                            NVL ( ftd_frs_brkg,0 )           -
                            NVL ( ftd_cvr_brkg,0 )             ), 0 )
      INTO    :l_tot_buy_qty_m,
              :d_buy_val_m
      FROM    ftd_fo_trd_dtls
      WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
      AND     ftd_xchng_cd        = :c_xchng_cd
      AND     ftd_prdct_typ in ('F','U','P')   
      AND     ftd_undrlyng        = :c_undrlyng
      AND     ftd_expry_dt        = :c_expry_dt
      AND     ftd_exer_typ        = :c_exrc_typ
      AND     ftd_trd_flw         = 'B';

      if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31250", SQLMSG, c_errmsg  );
        return -1;
      }

	  EXEC SQL
    SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
            NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) -
                          NVL ( ftd_frs_brkg,0 )           -
                          NVL ( ftd_cvr_brkg,0 )             ), 0 )
    INTO    :l_tot_buy_qty_h,
            :d_buy_val_h
    FROM    ftd_fo_trd_dtls_hstry
    WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND     ftd_xchng_cd        = :c_xchng_cd
    AND     ftd_prdct_typ in ('F','U','P')   
    AND     ftd_undrlyng        = :c_undrlyng
    AND     ftd_expry_dt        = :c_expry_dt
    AND     ftd_exer_typ        = :c_exrc_typ
    AND     ftd_trd_flw         = 'B';


	  if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31255", SQLMSG, c_errmsg  );
      return -1;
    }

    fn_userlog(c_ServiceName, "l_tot_buy_qty_m :%ld:", l_tot_buy_qty_m);
    fn_userlog(c_ServiceName, "d_buy_val_m :%lf:", d_buy_val_m);
    fn_userlog(c_ServiceName, "l_tot_buy_qty_h :%ld:", l_tot_buy_qty_h);
    fn_userlog(c_ServiceName, "d_buy_val_h :%lf:", d_buy_val_h);


 		 EXEC SQL
    	SELECT NVL( (SUM( fco_cls_qty * fco_cls_rt )), 0 )   
    	INTO :d_cls_val_m
    	FROM fco_fo_fclsout
    	WHERE fco_clm_mtch_accnt  = :c_cln_mtch_accnt
    	AND   fco_xchng_cd        = :c_xchng_cd
    	AND   fco_prdct_typ in ('F','U','P') 
    	AND   fco_undrlyng        = :c_undrlyng
    	AND   fco_expry_dt        = :c_expry_dt
    	AND   fco_exer_typ        = :c_exrc_typ;

    if ( SQLCODE != 0 )
    {
      if ( SQLCODE != NO_DATA_FOUND )
      {
        fn_errlog( c_ServiceName, "S31260", SQLMSG, c_errmsg  );
        return -1;
      }
      else
      {
        d_cls_val_m = 0;
       }
    }

		EXEC SQL
    SELECT NVL( (SUM( fco_cls_qty * fco_cls_rt )), 0 )   
    INTO :d_cls_val_h
    FROM fco_fo_fclsout_hstry
    WHERE fco_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND   fco_xchng_cd        = :c_xchng_cd
    AND   fco_prdct_typ in ('F','U','P') 
    AND   fco_undrlyng        = :c_undrlyng
    AND   fco_expry_dt        = :c_expry_dt
    AND   fco_exer_typ        = :c_exrc_typ;

    if ( SQLCODE != 0 )
    {
      if ( SQLCODE != NO_DATA_FOUND )
      {
        fn_errlog( c_ServiceName, "S31265", SQLMSG, c_errmsg  );
        return -1;
      }
      else
      {
        d_cls_val_h = 0;
      }
     }

    fn_userlog(c_ServiceName,"d_cls_val_m :%lf:",d_cls_val_m);
    fn_userlog(c_ServiceName,"d_cls_val_h :%lf:",d_cls_val_h);

  d_cls_val = d_cls_val_m + d_cls_val_h;

  l_tot_buy_qty = l_tot_buy_qty_m + l_tot_buy_qty_h;
  d_buy_val = d_buy_val_m + d_buy_val_h;

  *d_crst_prft = d_sell_val - d_buy_val - d_cls_val;

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"SQR-OFF d_sell_val Is :%lf:",d_sell_val);
    fn_userlog(c_ServiceName,"SQR-OFF d_buy_val Is :%lf:",d_buy_val);
    fn_userlog(c_ServiceName,"SQR-OFF d_cls_val Is :%lf:",d_cls_val);
    fn_userlog(c_ServiceName,"SQR-OFF d_buy_val Is :%lf:",d_buy_val);
  }

  *d_uncrst_prft = 0.0;

	*d_total_prft = *d_crst_prft + *d_uncrst_prft;

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Inside SQR-Off Crystalised Profit is d_crst_prft :%lf:",d_crst_prft);
		fn_userlog(c_ServiceName,"Inside SQR-Off Crystalised Profit is d_uncrst_prft :%lf:",d_uncrst_prft);
    fn_userlog(c_ServiceName,"Inside SQR-Off Crystalised Profit is :%lf:",d_total_prft);
  }

}

		int fn_sltpbuy_opnpstn(char *c_ServiceName,
                       char *c_cln_mtch_accnt,
                       char *c_xchng_cd,
                       char *c_undrlyng,
                       char *c_expry_dt,
                       char c_exrc_typ,
                     	 double *d_opn_sltp_val,
                   		 char *c_errmsg,long *l_opnpstn_qty )
{


  varchar c_trd_dt [ LEN_DATE ];
	char c_prdct_typ;
  double d_sell_val 				= 0;
  long int li_uncrst_qty 		= 0;
  long int li_crst_qty 			= 0;

	long l_tot_sell_qty				= 0;
	long int li_exctd_rt			= 0;
	long int li_exctd_qty			= 0;
  long int li_qty_bal 			= 0;
  long int li_cum_exctd_qty = 0;
  long int li_net_qty_bal 	= 0;
	long int li_bal_qty 			= 0;

	sql_cursor cont_cursor;
	sql_cursor trd_cursor;
  
	if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Inside Function fn_sltpbuy_opnpstn");
  }

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
    fn_userlog(c_ServiceName,"Product Type Is :%c:",c_prdct_typ);
    fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
    fn_userlog(c_ServiceName,"Exercise Type Is :%c:",c_exrc_typ);
    fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
  }

		fn_userlog(c_ServiceName,"======================= in the sltp buy opn pstn function");

				EXEC SQL
        SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
                NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) ), 0 )
        INTO    :l_tot_sell_qty,
                :d_sell_val
        FROM    ftd_fo_trd_dtls
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ = 'U'
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = :c_exrc_typ
        AND     ftd_trd_flw         = 'S';

      if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31270", SQLMSG, c_errmsg  );
        return -1;
      }

    EXEC SQL ALLOCATE :trd_cursor;

        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :trd_cursor FOR
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ = 'U'
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = :c_exrc_typ
              AND     ftd_trd_flw         = 'B'
              ORDER BY ftd_trd_dt;
          END;
        END-EXEC;


      li_bal_qty = l_tot_sell_qty;

		
    while ( 1 )
    {
        li_qty_bal = 0;

        EXEC SQL
          FETCH :trd_cursor
          INTO :li_exctd_qty,
               :li_exctd_rt,
               :c_trd_dt;

        if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {

            break;
          }
          else
          {
            fn_errlog( c_ServiceName, "S31275", SQLMSG, c_errmsg  );
            EXEC SQL CLOSE :trd_cursor;
            EXEC SQL FREE :trd_cursor;
            EXEC SQL CLOSE :cont_cursor;
            EXEC SQL FREE :cont_cursor;
            return -1;
          }
        }

     if ( li_bal_qty > 0 )
     {
          if(DEBUG_MSG_LVL_3)
          {
            fn_userlog(c_ServiceName,"Inside li_bal_qty > 0");
            fn_userlog(c_ServiceName,"HERE li_bal_qty is :%ld:",li_bal_qty);
            fn_userlog(c_ServiceName,"HERE li_exctd_qty is :%ld:",li_exctd_qty);
          }

          li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );

          li_bal_qty = li_bal_qty - li_crst_qty;

          if ( li_bal_qty == 0 )
          {
            li_uncrst_qty = li_exctd_qty - li_crst_qty;
            *d_opn_sltp_val= *d_opn_sltp_val + ( (double) li_uncrst_qty * (double) li_exctd_rt );
          }
        }


			 else
        {
          if(DEBUG_MSG_LVL_3)
          {
            fn_userlog(c_ServiceName,"Inside li_bal_qty = 0");
            fn_userlog(c_ServiceName,"Executed Qty Is :%ld:",li_exctd_qty);
          }

          li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
          
					*d_opn_sltp_val = *d_opn_sltp_val  + ( (double) li_exctd_qty * (double)  li_exctd_rt );

					*l_opnpstn_qty = li_uncrst_qty + *l_opnpstn_qty;
			


          if(DEBUG_MSG_LVL_3)
          {
            fn_userlog(c_ServiceName,"Uncrystalised Qty Is :%ld:",li_uncrst_qty);
          }
        }

      }

      EXEC SQL CLOSE :trd_cursor;
      EXEC SQL FREE :trd_cursor;


      if( DEBUG_MSG_LVL_3 )
      {
        fn_userlog (c_ServiceName,"Sltp buy  d_opn_sltp_val is :%lf:",d_opn_sltp_val);
      }


}

int fn_sltpsell_opnpstn(char *c_ServiceName,
                        char *c_cln_mtch_accnt,
                        char *c_xchng_cd,
                        char *c_undrlyng,
                        char *c_expry_dt,
                        char c_exrc_typ,
												double *d_opn_sltp_val,
                   			char *c_errmsg,long *l_opnpstn_qty)
{
	char c_prdct_typ;
	char c_trd_dt;
	
	double d_buy_val 			 = 0;
  long l_tot_buy_qty		 = 0;
	long int li_uncrst_qty = 0;
  long int li_qty_bal 	 = 0;
	long int li_crst_qty 	 = 0;
	long int li_bal_qty;
	long int li_exctd_qty	 = 0;
	long int li_exctd_rt	 = 0;
	sql_cursor cont_cursor;
	sql_cursor trd_cursor; 	
  
	if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Inside Function fn_sltpsell_opnpstn ");
  }

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
    fn_userlog(c_ServiceName,"Product Type Is :%c:",c_prdct_typ);
    fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
    fn_userlog(c_ServiceName,"Exercise Type Is :%c:",c_exrc_typ);
    fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
  }

fn_userlog(c_ServiceName,"============= in the sel sltp function"); 


  EXEC SQL
    SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
            NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) ),0)
    INTO    :l_tot_buy_qty,
            :d_buy_val
    FROM    ftd_fo_trd_dtls
    WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND     ftd_xchng_cd        = :c_xchng_cd
    AND     ftd_prdct_typ = 'U'
    AND     ftd_undrlyng        = :c_undrlyng
    AND     ftd_expry_dt        = :c_expry_dt
    AND     ftd_exer_typ        = :c_exrc_typ
    AND     ftd_trd_flw         = 'B';

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31280", SQLMSG, c_errmsg  );
      return -1;
    }

  EXEC SQL ALLOCATE :trd_cursor;


        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :trd_cursor FOR
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ       = 'U'
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = :c_exrc_typ
              AND     ftd_trd_flw         = 'S'
              ORDER BY 3;
          END;
        END-EXEC;


      li_bal_qty = l_tot_buy_qty;

    while ( 1 )
      {
      li_qty_bal = 0;

        EXEC SQL
          FETCH :trd_cursor
          INTO :li_exctd_qty,
               :li_exctd_rt,
               :c_trd_dt;

        if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {
            break;
          }
          else
          {
            fn_errlog( c_ServiceName, "S31285", SQLMSG, c_errmsg  );
            EXEC SQL CLOSE :trd_cursor;
            EXEC SQL FREE :trd_cursor;
            EXEC SQL CLOSE :cont_cursor;
            EXEC SQL FREE :cont_cursor;
          }
        }

			
        if ( li_bal_qty > 0 )
        {
          li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );
          li_bal_qty = li_bal_qty - li_crst_qty;

          if ( li_bal_qty == 0 )
          {
            if(DEBUG_MSG_LVL_3)
            {
              fn_userlog(c_ServiceName,"Inside SELL li_bal_qty == 0 ");
            }

            li_uncrst_qty = li_exctd_qty - li_crst_qty;
            *d_opn_sltp_val = *d_opn_sltp_val + ( (double) li_uncrst_qty * (double) li_exctd_rt );

          }
        }
         else
        {
          li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
          *d_opn_sltp_val = *d_opn_sltp_val + ( (double) li_exctd_qty * (double) li_exctd_rt );

        }

      }

  EXEC SQL CLOSE :trd_cursor;
  EXEC SQL FREE :trd_cursor;

    *d_opn_sltp_val = *d_opn_sltp_val * (-1);

		*l_opnpstn_qty = li_uncrst_qty + *l_opnpstn_qty; 
	
   if( DEBUG_MSG_LVL_3 )
   {
       fn_userlog (c_ServiceName,"Sltp Sell  d_opn_sltp_val is :%lf:",d_opn_sltp_val);
   }
}
		
int fn_optplussell_opnpstn_fp(char *c_ServiceName,
                        char *c_cln_mtch_accnt,
                        char *c_xchng_cd,
                        char *c_undrlyng,
                        char *c_expry_dt,
                        char c_exrc_typ,
                        long l_strike_prc,
                        char c_opt_typ,
                        double *d_op_opn_val,
												char *c_errmsg,long *l_opnpstn_qty)
{


  double d_buy_val = 0;
  long int li_uncrst_qty = 0;
  long int li_qty_bal = 0;
  long l_tot_buy_qty = 0;
  long int li_bal_qty = 0;
  long int li_crst_qty = 0;
  sql_cursor trd_cursor;
  long int li_exctd_qty;
  long int li_exctd_rt;
  char c_trd_dt[LEN_DATE];

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Inside Function fn_optplussell_opnpstn_fp ");
  }

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
    fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
    fn_userlog(c_ServiceName,"Exercise Type Is :%c:",c_exrc_typ);
    fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
    fn_userlog(c_ServiceName,"Strike Price Is :%ld:",l_strike_prc);
    fn_userlog(c_ServiceName," OPT typeIs :%c:",c_opt_typ);
  }


		 EXEC SQL
    SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
            NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) ),0)
    INTO    :l_tot_buy_qty,
            :d_buy_val
    FROM    ftd_fo_trd_dtls
    WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
    AND     ftd_xchng_cd        = :c_xchng_cd
    AND     ftd_prdct_typ = 'I'
    AND     ftd_undrlyng        = :c_undrlyng
    AND     ftd_expry_dt        = :c_expry_dt
    AND     ftd_exer_typ        = :c_exrc_typ
    AND     ftd_trd_flw         = 'B'
    AND     FTD_OPT_TYP         = :c_opt_typ
    AND     FTD_STRK_PRC        = :l_strike_prc;

		fn_userlog(c_ServiceName,"l_tot_buy_qty :%ld: ",l_tot_buy_qty);
	

    if ( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31290", SQLMSG, c_errmsg  );
      return -1;
    }

    EXEC SQL ALLOCATE :trd_cursor;


        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :trd_cursor FOR
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ       = 'I'
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = :c_exrc_typ
              AND     ftd_trd_flw         = 'S'
              AND     FTD_OPT_TYP         = :c_opt_typ
              AND     FTD_STRK_PRC        = :l_strike_prc
              ORDER BY 3;
          END;
        END-EXEC;
		
			
      li_bal_qty = l_tot_buy_qty;

     while ( 1 )
      {
      li_qty_bal = 0;

        EXEC SQL
          FETCH :trd_cursor
          INTO :li_exctd_qty,
               :li_exctd_rt,
               :c_trd_dt;

        if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {
            break;
          }
          else
          {
            fn_errlog( c_ServiceName, "S31295", SQLMSG, c_errmsg  );
            EXEC SQL CLOSE :trd_cursor;
            EXEC SQL FREE :trd_cursor;
          }
        }

        if ( li_bal_qty > 0 )
        {
          li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );
          li_bal_qty = li_bal_qty - li_crst_qty;

          if ( li_bal_qty == 0 )
          {
            if(DEBUG_MSG_LVL_3)
            {
              fn_userlog(c_ServiceName,"Inside SELL li_bal_qty == 0 ");
            }

            li_uncrst_qty = li_exctd_qty - li_crst_qty;
            *d_op_opn_val = *d_op_opn_val + ( (double) li_uncrst_qty * (double) li_exctd_rt );

          }
        }
         else
        {
          li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
          *d_op_opn_val = (*d_op_opn_val) + ( (double) li_exctd_qty * (double) li_exctd_rt );

        }
				fn_userlog (c_ServiceName,"Sltp Sell!!!!!!!!!!!!!!!  d_op_opn_val is :%lf:",*d_op_opn_val);

      }

 EXEC SQL CLOSE :trd_cursor;
  EXEC SQL FREE :trd_cursor;
		
    *d_op_opn_val = *d_op_opn_val * (-1);
		
		*l_opnpstn_qty = (*l_opnpstn_qty + li_uncrst_qty) * (-1); 


   if( DEBUG_MSG_LVL_3 )
   {
       fn_userlog (c_ServiceName,"Sltp Sell  d_op_opn_val is :%lf:",*d_op_opn_val);
       fn_userlog (c_ServiceName,"Sltp Sell   l_opnpstn_qty is :%lf:",*l_opnpstn_qty);
   }
}
	
int fn_optplusbuy_opnpstn_fp(char *c_ServiceName,
                       char *c_cln_mtch_accnt,
                       char *c_xchng_cd,
                       char *c_undrlyng,
                       char *c_expry_dt,
                       char c_exrc_typ,
                       long l_strike_prc,
                       char c_opt_typ,
                       double *d_op_opn_val,
          						char *c_errmsg,long *l_opnpstn_qty)
{
  sql_cursor trd_cursor;
  long l_tot_sell_qty = 0;
  double d_sell_val = 0;
  long int li_uncrst_qty = 0;
  long int li_crst_qty = 0;
  long int li_bal_qty = 0;
  long int li_qty_bal = 0;
  long int li_cum_exctd_qty = 0;
  long int li_net_qty_bal = 0;
  long int li_exctd_qty;
  long int li_exctd_rt;
  char c_trd_dt[LEN_DATE];
  

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"Match Account Is ;%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName,"Exchnage Code Is :%s:",c_xchng_cd);
		fn_userlog(c_ServiceName,"l_opnpstn_qty :%ld:",l_opnpstn_qty);
    fn_userlog(c_ServiceName,"Expiry Date Is :%s:",c_expry_dt);
    fn_userlog(c_ServiceName,"Exercise Type Is :%c:",c_exrc_typ);
    fn_userlog(c_ServiceName,"Underlying Is :%s:",c_undrlyng);
  }
		fn_userlog(c_ServiceName,"==================== in the optplusbuy");
	
	EXEC SQL
        SELECT  NVL ( SUM ( ftd_exctd_qty ), 0),
                NVL ( SUM ( ( ftd_exctd_qty * ftd_exctd_rt ) ), 0 )
        INTO    :l_tot_sell_qty,
                :d_sell_val
        FROM    ftd_fo_trd_dtls
        WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
        AND     ftd_xchng_cd        = :c_xchng_cd
        AND     ftd_prdct_typ 			= 'I'
        AND     ftd_undrlyng        = :c_undrlyng
        AND     ftd_expry_dt        = :c_expry_dt
        AND     ftd_exer_typ        = :c_exrc_typ
        AND     ftd_trd_flw         = 'S'
        AND     FTD_OPT_TYP         = :c_opt_typ
        AND     FTD_STRK_PRC        = :l_strike_prc;


    if ( SQLCODE != 0 )
      {
        fn_errlog( c_ServiceName, "S31300", SQLMSG, c_errmsg  );
        return -1;
      }

    EXEC SQL ALLOCATE :trd_cursor;

        EXEC SQL  EXECUTE
          BEGIN
            OPEN  :trd_cursor FOR
              SELECT ftd_exctd_qty,
                     ftd_exctd_rt,
                     ftd_trd_dt
              FROM ftd_fo_trd_dtls
              WHERE   ftd_clm_mtch_accnt  = :c_cln_mtch_accnt
              AND     ftd_xchng_cd        = :c_xchng_cd
              AND     ftd_prdct_typ = 'I'
              AND     ftd_undrlyng        = :c_undrlyng
              AND     ftd_expry_dt        = :c_expry_dt
              AND     ftd_exer_typ        = :c_exrc_typ
              AND     ftd_trd_flw         = 'B'
               AND     FTD_OPT_TYP         = :c_opt_typ
              AND     FTD_STRK_PRC        = :l_strike_prc
              ORDER BY ftd_trd_dt;
          END;
        END-EXEC;

				fn_userlog(c_ServiceName, "the l_tot_sell_qty is :%ld:",l_tot_sell_qty);

			 li_bal_qty = l_tot_sell_qty;

  while ( 1 )
    {
        li_qty_bal = 0;

        EXEC SQL
          FETCH :trd_cursor
          INTO :li_exctd_qty,
               :li_exctd_rt,
               :c_trd_dt;



        if ( SQLCODE != 0 )
        {
          if ( SQLCODE == NO_DATA_FOUND )
          {

            break;
          }
          else
          {
            fn_errlog( c_ServiceName, "S31305", SQLMSG, c_errmsg  );
            EXEC SQL CLOSE :trd_cursor;
            EXEC SQL FREE :trd_cursor;
            return -1;
          }
        }

     		if ( li_bal_qty > 0 )
     		{
          if(DEBUG_MSG_LVL_3)
          {
            fn_userlog(c_ServiceName,"Inside li_bal_qty > 0");
            fn_userlog(c_ServiceName,"HERE li_bal_qty is :%ld:",li_bal_qty);
            fn_userlog(c_ServiceName,"HERE li_exctd_qty is :%ld:",li_exctd_qty);
          }

          li_crst_qty = fn_minl ( li_bal_qty, li_exctd_qty );

          li_bal_qty = li_bal_qty - li_crst_qty;

          if ( li_bal_qty == 0 )
			    {
            li_uncrst_qty = li_exctd_qty - li_crst_qty;
            *d_op_opn_val = *d_op_opn_val + ( (double) li_uncrst_qty * (double) li_exctd_rt );
          }
        }
        else
        {
          if(DEBUG_MSG_LVL_3)
          {
            fn_userlog(c_ServiceName,"Inside li_bal_qty = 0");
            fn_userlog(c_ServiceName,"Executed Qty Is :%ld:",li_exctd_qty);
          }

          li_uncrst_qty = li_uncrst_qty + li_exctd_qty;
          *d_op_opn_val = (*d_op_opn_val) + ( (double) li_exctd_qty * (double)  li_exctd_rt );

          if(DEBUG_MSG_LVL_3)
          {
            fn_userlog(c_ServiceName,"Uncrystalised Qty Is :%ld:",li_uncrst_qty);
          }
        }
					
      }

      EXEC SQL CLOSE :trd_cursor;
      EXEC SQL FREE :trd_cursor;

							*l_opnpstn_qty = li_uncrst_qty  ;

      if( DEBUG_MSG_LVL_3 )
      {
        fn_userlog (c_ServiceName,"Sltp buy  d_op_opn_val is :%lf:",*d_op_opn_val);
        fn_userlog (c_ServiceName,"Sltp buy  l_opnpstn_qty is :%lf:",*l_opnpstn_qty);
      }
	}
