/******************************************************************************/
/*	Program	    			:	SFO_PRC_FIMTMRP                                       */
/*                                                                            */
/*  Input             : FFO_XCHNG_CD                                          */
/*                      FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_PRDCT_TYP                                         */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_CTGRY_INDSTK                                      */
/*                      FFO_CNTRCT_TAG                                        */
/*                      FFO_RUN_NUM                                           */
/*                                                                            */
/*  Output            : This service will call the update position service    */
/*                      with the action type as INTRADAY_MTM_REPORT which     */
/*                      will create data in MTM report table and commited     */
/*                      in tha database. Therefore it is transaction is       */
/*                      aborted here at the end                               */
/*                                                                            */
/*  Description       :                                                       */
/*                                                                            */
/*  Log               :                                                       */
/*                                                                            */
/******************************************************************************/
/*  30-Jan-2002     Ver 1.0        Vinod Banjan      Release 1.0              */
/*  17-Dec-2007     Ver 1.1        Vidyayini Krish   IBM Changes              */
/*  20-Mar-2008			Ver 1.2        Sandeep Patil		 Future Plus							*/
/*  13-Feb-2012			Ver 1.3        Nitin Save		 FNO- BSE Changes 						*/
/*	02-Feb-2021			Ver 1.4				 Kiran Itkar	 Separate EOS for Stock and 	*/
/*																							Index Underlyings in FPSL 		*/
/*  03-Mar-2023			Ver 1.5        Ravi Mallae	changing fn_lock_usr to fn_lock_fno */
/******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
/*Add header files here */
#include <fml_def.h>
#include <fo_view_def.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_tuxlib.h>
#include <fo.h>
#include <fn_ddr.h>
#include <fn_log.h> /* Ver 1.1 */
#include <fn_session.h> /* Ver 1.1 */
#include <fn_read_debug_lvl.h> /* Ver 1.1 */

void SFO_PRC_FIMTMRP( TPSVCINFO *rqst )
{
  FBFR32 *ptr_fml_Ibuf;

  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];
  int i_returncode;
  int i_returnval;
  int i_ip_len;
  int i_op_len;
  int i_trnsctn;
	int i_cnt;

  char c_tag [ 256 ];
  char c_msg [ 256 ];

  EXEC SQL BEGIN DECLARE SECTION;
    struct vw_pstn_actn st_pstn_actn;
    varchar   c_trd_dt[LEN_DATE];
  EXEC SQL END DECLARE SECTION;

  ptr_fml_Ibuf = ( FBFR32 * )rqst->data;
  strcpy( c_ServiceName, rqst->name );
	INITDBGLVL(c_ServiceName);

  i_returncode = Fvftos32( ptr_fml_Ibuf,
                         ( char * )&st_pstn_actn,
                         "vw_pstn_actn" );

  if( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  /*** Added for Order Routing ***/
  fn_init_ddr_val ( st_pstn_actn.c_rout_crt );

  i_returncode = Fget32( ptr_fml_Ibuf, FFO_BAT_TAG, 0,
                                   (char *)c_tag, 0 );
  if ( i_returncode == -1 )
  {
    fn_errlog( c_ServiceName, "S31010", FMLMSG, c_err_msg  );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

	rtrim (st_pstn_actn.c_cln_mtch_accnt);
	rtrim (st_pstn_actn.c_xchng_cd);
	rtrim (st_pstn_actn.c_undrlyng);

  if(DEBUG_MSG_LVL_3){
    fn_userlog( c_ServiceName, "Match Account :%s:",
                                  st_pstn_actn.c_cln_mtch_accnt );
    fn_userlog( c_ServiceName, "Exchange code :%s:",
                                  st_pstn_actn.c_xchng_cd );
    fn_userlog( c_ServiceName, "Product Type  :%c:",
                                  st_pstn_actn.c_prd_typ );
    fn_userlog( c_ServiceName, "Underlyng     :%s:",
                                  st_pstn_actn.c_undrlyng );
    fn_userlog( c_ServiceName, "Category      :%c:",
                                 st_pstn_actn.c_ctgry_indstk );
    fn_userlog( c_ServiceName, "Contract tag  :%c:",
                                 st_pstn_actn.c_cntrct_tag );
    fn_userlog( c_ServiceName, "Report number :%ld:",
                                 st_pstn_actn.l_report_no );
  }

  sprintf ( c_msg,"Creating Data for match a/c - [%s], Underlying - [%s], Tag - [%c], Report no. [%ld]",
        st_pstn_actn.c_cln_mtch_accnt,
        st_pstn_actn.c_undrlyng,
        st_pstn_actn.c_cntrct_tag,
				st_pstn_actn.l_report_no );
  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );

	if(st_pstn_actn.c_prd_typ =='P')            /*** Ver 1.2 ***/
  {
    EXEC SQL
      SELECT 1
      INTO  :i_cnt
      FROM  MTM_APPLN_STTS
      /* WHERE MTM_XCHNG_CD='NFO' */
      WHERE MTM_XCHNG_CD= :st_pstn_actn.c_xchng_cd  /** Replaced hard-coded exchange code in Ver 1.3 **/ 
      AND  (MTM_ROLL_STTS = 'N'
      OR    MTM_CAN_SQR_OFF ='Y'
      OR    MTM_CAN_REQ = 'Y'
			OR		MTM_ROLL_STTS_S = 'N'		/*** Ver 1.4 ***/ 
			OR		MTM_CAN_SQR_OFF_S	= 'Y'	/*** Ver 1.4 ***/
			OR		MTM_CAN_REQ_S = 'Y');		/*** Ver 1.4 ***/

    if (i_cnt==1)
    {
      fn_bat_pst_msg_fno ( c_ServiceName, "Can/Sqroff Under Process For Future Plus, Can Not Run Intra Day MTM", 
								c_tag );
      exit(0);
    }
  }


  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  /* i_returncode = fn_lock_usr( c_ServiceName,
                              st_pstn_actn.c_cln_mtch_accnt ); commented in 1.5 */
  i_returncode = fn_lock_fno( c_ServiceName, st_pstn_actn.c_cln_mtch_accnt ); /* Added in 1.5 */
  if ( i_returncode == -1 )
  {
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }

  strcpy(st_pstn_actn.c_user_id,"system");
  st_pstn_actn.l_session_id  = 0;
	strcpy(st_pstn_actn.c_expry_dt,"*");
  st_pstn_actn.c_exrc_typ = '*';
  st_pstn_actn.c_opt_typ = '*';
  st_pstn_actn.l_strike_prc  = 0;

  st_pstn_actn.l_actn_typ = INTRADAY_MTM_REPORT;
  st_pstn_actn.c_trnsctn_flw = '*';
  st_pstn_actn.l_orgnl_qty = 0;
  st_pstn_actn.l_orgnl_rt  = 0;
  st_pstn_actn.l_new_qty = 0;
  st_pstn_actn.l_new_rt  = 0;
  st_pstn_actn.l_exec_qty  = 0;
  st_pstn_actn.l_exec_rt  = 0;
  st_pstn_actn.l_fresh_qty  = 0;
  st_pstn_actn.l_cover_qty  = 0;
  st_pstn_actn.d_add_mrgn_amt = 0;
	fn_cpy_ddr(st_pstn_actn.c_rout_crt);

  i_ip_len = sizeof ( struct vw_pstn_actn );
  i_op_len = sizeof ( struct vw_pstn_actn );

	if( st_pstn_actn.c_prd_typ == 'P')      /** Ver1.2  Added for Future Plus **/
  {
    i_returncode = fn_call_svc( c_ServiceName,
                                c_err_msg,
                                &st_pstn_actn,
                                &st_pstn_actn,
                                "vw_pstn_actn",
                                "vw_pstn_actn",
                                i_ip_len,
                                i_op_len,
                                0,
                                "SFO_UPD_FUT_PLS" );
    if ( i_returncode == -1 )
    {
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
    }
  }
	else
	{
  	i_returncode = fn_call_svc( c_ServiceName,
    	                          c_err_msg,
      	                        &st_pstn_actn,
                              	&st_pstn_actn,
                              	"vw_pstn_actn",
                              	"vw_pstn_actn",
                              	i_ip_len,
                              	i_op_len,
                              	0,
                              	"SFO_UPD_FUT_POS" );

  if ( i_returncode == -1 )
  {
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
}

   fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
  sprintf ( c_msg,"Successfully Created Data for match a/c - [%s], Underlying - [%s], Tag - [%c], Report no. [%ld]",
        st_pstn_actn.c_cln_mtch_accnt,
        st_pstn_actn.c_undrlyng,
        st_pstn_actn.c_cntrct_tag,
				st_pstn_actn.l_report_no );
  fn_bat_pst_msg_fno ( c_ServiceName, c_msg, c_tag );
  tpreturn( TPSUCCESS, 0, (char *)ptr_fml_Ibuf, 0 , 0 );
}
