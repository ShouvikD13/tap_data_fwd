/**************************************************************************************
Service       : sfo_us_dls_xml

Purpose       : To get the details of contract notes for user verification  

Input Param   :
										FFO_EBA_MTCH_ACT_NO - Match no
										FFO_NARRATION_ID		- Cntrt no /E/A conf nt
										FFO_PRDCT_TYP 	- 'F' or 'E'

Output        :  FOR 'FNO' 
									FFO_IP_VIEW_NM - Client name 
									FFO_INDX_CD Address ln 1
									FFO_UNDRLYNG Address ln 2
									FFO_UND_PRC_TM Address ln 3
									FFO_OP_VIEW_NM - Address ln 4
									FFO_OI_INDCTR - Tel no 
									FFO_BOARD_LOT_QTY - PAN no 
									FFO_EBA_MTCH_ACT_NO	- Match no
									FFO_NARRATION_ID	- Contract no
									FFO_RCRD_DT - Contract date 
									FFO_SPRD_ORD_REF - Order reference 
									FFO_TRD_DT	- Trade date 
									FFO_LST_TRD_QTY - Quantity 
									FFO_CLS_PRC - Price
									FFO_BO_AMT_BLKD - Total Brokerage value 
									FFO_MTCH_CNTCT_KEY - Service tax
									FFO_BAL_AMT - Amount 
									FFO_SYMBOL - Contract specifications 
									(INFOSYSTCH-FUTSTK-26SEP2002-PA3200)
									FFO_TOTAL_PL - Amount 
									FFO_TRD_FLW	- Buy/Sell
									FFO_CTCL_ID - ucc code

								FOR 'EA'
									FFO_IP_VIEW_NM - Client name 
									FFO_INDX_CD Address ln 1
									FFO_UNDRLYNG Address ln 2
									FFO_UND_PRC_TM Address ln 3
									FFO_OP_VIEW_NM - Address ln 4
									FFO_OI_INDCTR - Tel no 
									FFO_BOARD_LOT_QTY - PAN no 
									FFO_EBA_MTCH_ACT_NO	- Match no
									FFO_NARRATION_ID	- E/A note 
									FFO_RCRD_DT - E/A  date 
									FFO_ORDR_RFRNC-  Call /Put 
									FFO_TRD_DT - Expiry date 
									FFO_LST_TRD_QTY - Quantity 
									FFO_CLS_PRC - Sttlmnt Price
									FFO_BO_AMT_BLKD - Total Brokerage 
									FFO_MTCH_CNTCT_KEY - Service tax
									FFO_BAL_AMT - Amount 
									FFO_SYMBOL - Contract code 
									FFO_TOTAL_PL - Amount Payable
									FFO_TRD_FLW- E or A flag 
									FFO_STRIKE_PRC - Strike Price 


Tables        : FNO_CNTRCT_MSTR			 S
								FNO_CNTRCT_DTLS			 S
								EA_CONF_MSTR				 S
								EA_CONF_DTLS				 S

Author        : Vidyayini Krish

Date          : 16-Oct-2007

Version       :	1.0
							: 1.1 IBM Changes by Vidyayini on 07-Feb-2008
										& debug level changes by Shamili on 24-Apr-2008
************************************************************************************/

/* Standard include files */
#include <stdio.h>
#include <stdlib.h>
# include <atmi.h>
# include <fml32.h>
# include <string.h>
# include <sqlca.h>
#include <eba_to_ors.h>
#include <fn_read_debug_lvl.h>     /* 1.1 Debug level Changes */     

# define REC_LENGTH 2250

/*  User defined header files   */

#include <fn_log.h>
#include <fo.h>
#include <fo_view_def.h>
#include <fn_session.h>
#include <fn_tuxlib.h>
#include <fo_fml_def.h>

char 	c_ServiceName[33] ;
char 	code[20] ;
char 	c_string[200];

#define MEMSET(A) memset(&A,'\0',sizeof(A))
#define CURSOR_OUTPUT_FML 10
#define UNIQUE_OUTPUT_FML 9

void SFO_US_DLS_XML(TPSVCINFO* rqst)
{
	/*	Local variables		*/

	int   i;                            /*    Loop counter */
	int   j;                            /*    Loop counter */
	int   arr_otpt[UNIQUE_OUTPUT_FML+1] ;    /*  Error code array for FML's  */
	int   cur_otpt[CURSOR_OUTPUT_FML+4] ;    /*  Error code array for FML's	 ;Ver 1.1 changed +1 to +4*/ 
	char  c_user_id[9];
	char  c_oper_type;
	char  c_src_tx[10];
  char  c_fo_flg[5];
	char  c_usr_name[201];
	char  c_fcm_add_ln1[101];
	char  c_fcm_add_ln2[101];
	char  c_fcm_add_ln3[101];
	char  c_fcm_add_ln4[101];
	char  c_fcm_pan_no[101];
	char  c_fcm_tel_no[101];
	char  c_fcm_cntrct_dt[101];
	char  c_fcm_cntrct_flg;
	char  c_fcm_ucc_cd[101];
	char  c_fcm_cntrct_nmbr[101];
	char  c_fcm_usr_mtch_accno[101];
	char  c_fcd_trd_dt[61];
	char  c_fcd_cntrct_specs[200];
	char  c_fcd_ord_dt_tm[61];
	char  c_fcd_expr_dt[101];
	char  c_ecm_usr_nm[201];
	char  c_ecm_add_ln1[100];
	char  c_ecm_add_ln2[100];
	char  c_ecm_add_ln3[100];
	char  c_ecm_add_ln4[100];
	char  c_ecm_pan_no[101];
	char  c_ecm_tel_no[101];
  char  c_ecm_cntrct_dt[101];
	char  c_ecd_ea_dt[101];
  char  c_ecd_expr_dt[101];
  char  c_ecd_cntrct_optn_typ[51];
	char  c_ecd_cntrct_inst_typ[251];
	char  c_ecd_cntrct_symbl[251];

	long  li_session_id ;
		
	char temp_ord[LEN_XCHNG_ACK];
	char temp_trd[251];
	long  l_space_avl;
	long  l_space_rqd;
	long  l_bufferlength;
	FBFR32  *ptr_ffo_temp_buffer;

	double 	d_fut_value;	
	double 	d_opt_value;	
	double	d_fut_stt;	
	double	d_opt_stt;

	EXEC SQL INCLUDE "table/fno_cntrct_mstr.h";
 	EXEC SQL INCLUDE "table/fno_cntrct_dtls.h";
 	EXEC SQL INCLUDE "table/ea_conf_mstr.h";
 	EXEC SQL INCLUDE "table/ea_conf_dtls.h";

/*   Tuxedo specific variables */

	FBFR32      *ptr_ffo_Ibuffer ;      /*   Input Buffer */
	FBFR32      *ptr_ffo_Obuffer ;      /*   Output Buffer */
	char        c_errmsg[256] ;

	INITDBGLVL(c_ServiceName);           /* ver 1.1 -- debug level handling */

	strcpy(c_ServiceName,rqst->name) ;

/*		Initializations */

	ptr_ffo_Ibuffer = (FBFR32*)rqst->data ;
	ptr_ffo_Obuffer = (FBFR32*)NULL ;


	if(Fget32(ptr_ffo_Ibuffer,FFO_USR_ID,0,(char*)c_user_id,0) == -1)
	{
		fn_errlog(c_ServiceName,"S31005",FMLMSG,c_errmsg) ;
		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
	}

	if(DEBUG_MSG_LVL_3){
		fn_userlog(c_ServiceName,"User id :<%s> ",c_user_id) ;
	}

	if(Fget32(ptr_ffo_Ibuffer,FFO_SSSN_ID,0,(char*)&li_session_id,0) == -1)
	{
		fn_errlog(c_ServiceName,"S31010",FMLMSG,c_errmsg) ;
		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
	}

	if(DEBUG_MSG_LVL_3){
		fn_userlog(c_ServiceName,"Session id :<%ld>",li_session_id);
	} 

	MEMSET(c_fcm_usr_mtch_accno);
	if(Fget32(ptr_ffo_Ibuffer,FFO_EBA_MTCH_ACT_NO,0,(char*)c_fcm_usr_mtch_accno,0) == -1)
	{
		fn_errlog(c_ServiceName,"S31015",FMLMSG,c_errmsg) ;
		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
	}
	rtrim(c_fcm_usr_mtch_accno);

	if(DEBUG_MSG_LVL_3){
		fn_userlog(c_ServiceName,"Match Accnt No :<%s>",c_fcm_usr_mtch_accno);
	}

	MEMSET(c_fcm_cntrct_nmbr);

	if(Fget32(ptr_ffo_Ibuffer,FFO_NARRATION_ID,0,(char*)c_fcm_cntrct_nmbr,0) == -1)
	{
		fn_errlog(c_ServiceName,"S31020",FMLMSG,c_errmsg) ;
		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
	}
	rtrim(c_fcm_cntrct_nmbr);

	if(DEBUG_MSG_LVL_3){
		fn_userlog(c_ServiceName,"Cntrct No :<%s>",c_fcm_cntrct_nmbr);
	}

	if(Fget32(ptr_ffo_Ibuffer,FFO_PRDCT_TYP,0,(char*)&c_oper_type,0) == -1)
	{
		fn_errlog(c_ServiceName,"S31025",FMLMSG,c_errmsg) ;
		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
	}

	if(DEBUG_MSG_LVL_3){
		fn_userlog(c_ServiceName,"Oper Type :<%c>",c_oper_type);
	}
			
	l_space_rqd = Fneeded32(1,REC_LENGTH);

	/** Allocate memory for output buffer **/
		
	if((ptr_ffo_Obuffer=(FBFR32*)tpalloc("FML32",NULL,MIN_FML_BUF_LEN * 3))==NULL)
	{
		fn_errlog(c_ServiceName,"S31030",TPMSG,c_errmsg) ;
		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
	}

	/*	Selecting data from FNO_CNTRCT_MSTR */

	if(c_oper_type == 'F')
	{

		MEMSET(sql_fcm_usr_nm);
    MEMSET(sql_fcm_add_ln1);
    MEMSET(sql_fcm_add_ln2);
    MEMSET(sql_fcm_add_ln3);
    MEMSET(sql_fcm_add_ln4);
    MEMSET(sql_fcm_pan_no);
    MEMSET(sql_fcm_tel_no);
    MEMSET(sql_fcm_cntrct_dt);
    MEMSET(sql_fcm_ucc_cd);
		MEMSET(c_fcm_ucc_cd);
		MEMSET(c_fcm_cntrct_dt);
		MEMSET(c_fcm_tel_no);
		MEMSET(c_fcm_pan_no);
		MEMSET(c_fcm_add_ln4);
		MEMSET(c_fcm_add_ln3);
		MEMSET(c_fcm_add_ln2);
		MEMSET(c_fcm_add_ln1);
		MEMSET(c_usr_name);

		EXEC SQL 
		SELECT 
				REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(FCM_USR_NM,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
				REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(FCM_ADD_LN1,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
				REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(FCM_ADD_LN2,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
				REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(FCM_ADD_LN3,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
				REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(FCM_ADD_LN4,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
				REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(FCM_PAN_NO,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
				REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(FCM_TEL_NO,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
				nvl(FCM_CNTRCT_DT,sysdate),
				nvl(FCM_CNTRCT_FLG,' '),
				REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(FCM_UCC_CD,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;')
		INTO
				:c_usr_name,
				:c_fcm_add_ln1,
				:c_fcm_add_ln2,
				:c_fcm_add_ln3,
				:c_fcm_add_ln4,
				:c_fcm_pan_no,
				:c_fcm_tel_no,
				:c_fcm_cntrct_dt,
				:c_fcm_cntrct_flg,
        :c_fcm_ucc_cd          
		FROM FNO_CNTRCT_MSTR
		WHERE FCM_USR_MTCH_ACCNO=:c_fcm_usr_mtch_accno
		AND FCM_CNTRCT_NMBR=:c_fcm_cntrct_nmbr;

		if(SQLCODE == NO_DATA_FOUND)
		{
			fn_errlog(c_ServiceName,"S31035",SQLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,"signed contract note not available",0);
			tpfree((char*)ptr_ffo_Obuffer) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}
		else if (SQLCODE)
		{
			fn_errlog(c_ServiceName,"S31040",SQLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,"signed contract note not available",0);
			tpfree((char*)ptr_ffo_Obuffer) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}

		if(DEBUG_MSG_LVL_3){
			fn_userlog(c_ServiceName,"Data for Contract note <%s>",c_fcm_cntrct_nmbr);
			fn_userlog(c_ServiceName,"Contract date	<%s>",sql_fcm_cntrct_dt.arr);
		} 

		rtrim(c_usr_name);
		rtrim(c_fcm_add_ln1);
		rtrim(c_fcm_add_ln2);
		rtrim(c_fcm_add_ln3);
		rtrim(c_fcm_add_ln4);
		rtrim(c_fcm_pan_no);
		rtrim(c_fcm_tel_no);
		rtrim(c_fcm_cntrct_dt);
		rtrim(c_fcm_ucc_cd);

/** Populate the output buffer with the unique values **/
		arr_otpt[0] = Fadd32(ptr_ffo_Obuffer,FFO_IP_VIEW_NM,(char*)c_usr_name,0);
		arr_otpt[1] = Fadd32(ptr_ffo_Obuffer,FFO_INDX_CD,(char*)c_fcm_add_ln1,0);
		arr_otpt[2] = Fadd32(ptr_ffo_Obuffer,FFO_UNDRLYNG,(char*)c_fcm_add_ln2,0);
		arr_otpt[3] = Fadd32(ptr_ffo_Obuffer,FFO_UND_PRC_TM,(char*)c_fcm_add_ln3,0);
		arr_otpt[4] = Fadd32(ptr_ffo_Obuffer,FFO_OP_VIEW_NM,(char*)c_fcm_add_ln4,0);
		arr_otpt[5] = Fadd32(ptr_ffo_Obuffer,FFO_SERIES,(char*)c_fcm_pan_no,0);
		arr_otpt[6] = Fadd32(ptr_ffo_Obuffer,FFO_OI_INDCTR,(char*)c_fcm_tel_no,0);
		arr_otpt[7] = Fadd32(ptr_ffo_Obuffer,FFO_RCRD_DT,(char*)c_fcm_cntrct_dt,0);
		arr_otpt[8] = Fadd32(ptr_ffo_Obuffer,FFO_BILL_NO,(char*)&c_fcm_cntrct_flg,0); 
	  arr_otpt[9] = Fadd32(ptr_ffo_Obuffer,FFO_CTCL_ID,(char*)c_fcm_ucc_cd,0);  

	/* for(i=0;i < UNIQUE_OUTPUT_FML;i++) */

		for(i=0;i < UNIQUE_OUTPUT_FML+1;i++) 
    {
			if(arr_otpt[i]==-1)
			{
				fn_errlog(c_ServiceName,"S31045",FMLMSG,c_errmsg);
				Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
				tpfree((char*)ptr_ffo_Obuffer) ;
				tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
			}
		}

		if(DEBUG_MSG_LVL_3){
			fn_userlog(c_ServiceName,"before declaring cursor <%s>,<%s>",c_fcm_usr_mtch_accno,c_fcm_cntrct_nmbr);
		} /* Ver 1.1 removed ; */
			
		EXEC SQL 
			DECLARE get_fno_det CURSOR for
			SELECT  REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl (to_char(FCD_ORDR_REF),' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),	
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl (to_char(FCD_TRD_REF),' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
							nvl (to_char(FCD_TRD_DT,'HH24:MI:SS'),'sysdate'),
							nvl(FCD_TRD_FLW,' '),
							nvl(FCD_PRC,0.0000),
							nvl(FCD_QTY,0),
							nvl(FCD_BRKG,0.0000),
							nvl(to_char(FCD_SRC_TX),' '),
						  nvl(FCD_STT,0.0000),	
							nvl(FCD_STRK_PRC,0.0000),
							nvl(FCD_CNTRCT_AMT,0.0000),
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(FCD_CNTRCT_SPECS,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
							nvl(to_char(FCD_ORD_DT_TM,'dd-mm-yyyy hh24:mi:ss'),'NA'),
							nvl(FCD_AMT_INSTT,0),
							nvl(FCD_TOTAL,0)
			FROM FNO_CNTRCT_DTLS
			WHERE FCD_CNTRCT_NMBR=:c_fcm_cntrct_nmbr
			ORDER BY FCD_TRD_FLW, FCD_ORDR_REF;  

		if(SQLCODE)
		{
			fn_errlog(c_ServiceName,"S31050",SQLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
			tpfree((char*)ptr_ffo_Obuffer) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}

		/* Open the cursor */

		EXEC SQL
			OPEN get_fno_det;  

			
		if(SQLCODE)
		{
			fn_errlog(c_ServiceName,"S31055",SQLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
			tpfree((char*)ptr_ffo_Obuffer) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}
		j=0;
		while(1)
		{

			 MEMSET(c_fcd_trd_dt);
			 MEMSET(c_fcd_cntrct_specs);
			 MEMSET(c_fcd_ord_dt_tm);
			 MEMSET(c_src_tx);
			 MEMSET(temp_ord);
			 MEMSET(temp_trd);

			 EXEC SQL 	
					FETCH get_fno_det 
					INTO :temp_ord,
							 :temp_trd,
							 :c_fcd_trd_dt,
							 :sql_fcd_trd_flw,
							 :sql_fcd_prc,
							 :sql_fcd_qty,
							 :sql_fcd_brkg,
							 :c_src_tx,
							 :sql_fcd_stt,				
							 :sql_fcd_strk_prc,
							 :sql_fcd_cntrct_amt,
							 :c_fcd_cntrct_specs,
               :c_fcd_ord_dt_tm,
               :sql_fcd_amt_instt,
               :sql_fcd_total;  

			if((SQLCODE==NO_DATA_FOUND)&&(j==0))
			{
				 EXEC SQL
					CLOSE get_fno_det;  

				fn_errlog(c_ServiceName,"S31060",SQLMSG,c_errmsg);
				Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,"matching data not found",0) ;
				tpfree((char*)ptr_ffo_Obuffer) ;
				tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
			}
			else if(SQLCODE==NO_DATA_FOUND)
			{
				 EXEC SQL
							CLOSE get_fno_det;  

				  break;
			}
			else if(SQLCODE)
			{
				EXEC SQL
					CLOSE get_fno_det;  

				fn_errlog(c_ServiceName,"S31065",SQLMSG,c_errmsg);
				Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
				tpfree((char*)ptr_ffo_Obuffer) ;
				tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
			}

			rtrim(c_fcd_trd_dt);
			rtrim(c_fcd_cntrct_specs);
			rtrim(c_fcd_ord_dt_tm);
			rtrim(temp_ord);
			rtrim(temp_trd);
			rtrim(c_src_tx);
		

			l_space_avl = Funused32(ptr_ffo_Obuffer);

			if (l_space_avl < l_space_rqd)
			{
					/* Reallocate a output buffer */

				l_bufferlength = Fsizeof32(ptr_ffo_Obuffer) + MIN_FML_BUF_LEN * 10;
				ptr_ffo_temp_buffer=(FBFR32 *)tprealloc((char *)ptr_ffo_Obuffer,l_bufferlength);

				if (ptr_ffo_temp_buffer == NULL)
				{
					fn_errlog(c_ServiceName,"S31070",FMLMSG,c_errmsg);
					Fadd32( ptr_ffo_Ibuffer,FFO_ERR_MSG, c_errmsg, 0 );
					tpfree((char *)ptr_ffo_Obuffer);
					tpreturn(TPFAIL,0L, (char *)ptr_ffo_Ibuffer, 0L, 0);
				}
				else
				{
					ptr_ffo_Obuffer = ptr_ffo_temp_buffer;
					/* Finit32(ptr_ffo_temp_buffer, Fsizeof(ptr_ffo_temp_buffer)); */
				}
			}

			if(DEBUG_MSG_LVL_3){
			fn_userlog(c_ServiceName,"temp_ord <%s>",temp_ord);
			fn_userlog(c_ServiceName,"temp_trd <%s>",temp_trd);
			fn_userlog(c_ServiceName,"sql_fcd_prc <%lf>",sql_fcd_prc);
			fn_userlog(c_ServiceName,"sql_fcd_brkg <%lf>",sql_fcd_brkg);
			fn_userlog(c_ServiceName,"sql_fcd_stt <%lf>",sql_fcd_stt);
			fn_userlog(c_ServiceName,"c_src_tx <%s>",c_src_tx);
      
      fn_userlog(c_ServiceName,"sql_fcd_amt_instt <%lf>",sql_fcd_amt_instt);
			fn_userlog(c_ServiceName,"c_fcd_ord_dt_tm <%s>",c_fcd_ord_dt_tm);
			}

			cur_otpt[0]=Fadd32(ptr_ffo_Obuffer,FFO_SPRD_ORD_REF,(char*)temp_ord,0);
			cur_otpt[1]=Fadd32(ptr_ffo_Obuffer,FFO_TRD_RFRNC,(char*)temp_trd,0);
			cur_otpt[2]=Fadd32(ptr_ffo_Obuffer,FFO_TRD_DT,(char*)c_fcd_trd_dt,0);
			cur_otpt[3]=Fadd32(ptr_ffo_Obuffer,FFO_LST_TRD_QTY,(char*)&sql_fcd_qty,0);
			cur_otpt[4]=Fadd32(ptr_ffo_Obuffer,FFO_CLS_PRC,(char*)&sql_fcd_prc,0);
			cur_otpt[5]=Fadd32(ptr_ffo_Obuffer,FFO_BO_AMT_BLKD,(char*)&sql_fcd_brkg,0);
			cur_otpt[6]=Fadd32(ptr_ffo_Obuffer,FFO_MTCH_CNTCT_KEY,(char*)c_src_tx,0);
			cur_otpt[7]=Fadd32(ptr_ffo_Obuffer,FFO_BAL_AMT,(char*)&sql_fcd_cntrct_amt,0);
			cur_otpt[8]=Fadd32(ptr_ffo_Obuffer,FFO_TRD_FLW,(char*)&sql_fcd_trd_flw,0);
			cur_otpt[9]=Fadd32(ptr_ffo_Obuffer,FFO_SYMBOL,(char*)c_fcd_cntrct_specs,0);
			cur_otpt[10]=Fadd32(ptr_ffo_Obuffer,FFO_LIMIT,(char*)&sql_fcd_stt,0); 
      cur_otpt[11]=Fadd32(ptr_ffo_Obuffer,FFO_ORD_DT,(char*)c_fcd_ord_dt_tm,0);
			cur_otpt[12]=Fadd32(ptr_ffo_Obuffer,FFO_INIT_MRGN_PRCNT,(char*)&sql_fcd_amt_instt,0); 

      cur_otpt[13]=Fadd32(ptr_ffo_Obuffer,FFO_OLD_EFF_RT,(char*)&sql_fcd_total,0); 

			for(i=0;i <= CURSOR_OUTPUT_FML+3;i++)
      {
				if(cur_otpt[i]==-1)
				{
					fn_errlog(c_ServiceName,"S31075",FMLMSG,c_errmsg);
					Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
					tpfree((char*)ptr_ffo_Obuffer) ;
					tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
				}
			}
			j++;

		}/*End of while */
		EXEC SQL
			CLOSE get_fno_det;  

		if(SQLCODE)
		{
			fn_errlog(c_ServiceName,"S31080",SQLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
			tpfree((char*)ptr_ffo_Obuffer) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}

  EXEC SQL
      DECLARE get_stt_det_fut CURSOR for
       SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(FCD_CNTRCT_SPECS,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
 FCD_EXPR_DT,
              sum(FCD_PRC*FCD_QTY),
              sum(FCD_STT),
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(FCD_CNTRCT_OPTN_TYP,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;')
       FROM   FNO_CNTRCT_DTLS
       WHERE  FCD_CNTRCT_NMBR=:c_fcm_cntrct_nmbr
       AND    FCD_TRD_FLW='S'
       AND    FCD_CNTRCT_OPTN_TYP = 'F'
       GROUP BY FCD_CNTRCT_SPECS,FCD_EXPR_DT,FCD_CNTRCT_OPTN_TYP;  


 if(SQLCODE)
 {
   fn_errlog(c_ServiceName,"S31085",SQLMSG,c_errmsg) ;
   Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
   tpfree((char*)ptr_ffo_Obuffer) ;
   tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
 }

 /* Open the cursor */

 EXEC SQL
      OPEN get_stt_det_fut;  

 if(SQLCODE)
 {
   fn_errlog(c_ServiceName,"S31090",SQLMSG,c_errmsg) ;
   Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
   tpfree((char*)ptr_ffo_Obuffer) ;
   tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
 }
 j=0;

 while(1)
 {

	 d_fut_stt = 0.0;

	 MEMSET(c_fcd_expr_dt);
	 MEMSET(c_fcd_cntrct_specs);
	 MEMSET(c_fo_flg);

   EXEC SQL
       FETCH get_stt_det_fut
       INTO :c_fcd_cntrct_specs,
            :c_fcd_expr_dt,
            :d_fut_value,
            :d_fut_stt,
            :c_fo_flg;  

   if((SQLCODE==NO_DATA_FOUND)&&(j==0))
   {
     EXEC SQL
       CLOSE get_stt_det_fut;  
			 break;
       /* tpreturn(TPSUCCESS,0,(char *)ptr_ffo_Obuffer,0L,0) ;  */
   }
   else if(SQLCODE==NO_DATA_FOUND)
   {
     EXEC SQL
     			CLOSE get_stt_det_fut;  
     break;
   }
   else if(SQLCODE)
   {
     EXEC SQL
       CLOSE get_stt_det_fut;  

     fn_errlog(c_ServiceName,"S31095",SQLMSG,c_errmsg);
     Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
     tpfree((char*)ptr_ffo_Obuffer) ;
     tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ; 
   }
	
   l_space_avl = Funused32(ptr_ffo_Obuffer);
   if (l_space_avl < l_space_rqd)
   {
     /* Reallocate a output buffer */

       l_bufferlength = Fsizeof32(ptr_ffo_Obuffer) + MIN_FML_BUF_LEN * 10;
       ptr_ffo_temp_buffer=(FBFR32 *)tprealloc((char *)ptr_ffo_Obuffer,l_bufferlength);

        if (ptr_ffo_temp_buffer == NULL)
        {
          fn_errlog(c_ServiceName,"S31100",FMLMSG,c_errmsg);
          Fadd32( ptr_ffo_Ibuffer,FFO_ERR_MSG, c_errmsg, 0 );
          tpfree((char *)ptr_ffo_Obuffer);
          tpreturn(TPFAIL,0L, (char *)ptr_ffo_Ibuffer, 0L, 0);
        }
        else
        {
          ptr_ffo_Obuffer = ptr_ffo_temp_buffer;
          /* Finit32(ptr_ffo_temp_buffer, Fsizeof(ptr_ffo_temp_buffer)); */
        }
    }

		rtrim(c_fcd_cntrct_specs);
		rtrim(c_fcd_expr_dt);
		rtrim(c_fo_flg);

		if(DEBUG_MSG_LVL_3){
    fn_userlog(c_ServiceName,"c_fcd_cntrct_specs <%s>",c_fcd_cntrct_specs);
    fn_userlog(c_ServiceName,"c_fcd_expr_dt <%s>",c_fcd_expr_dt);
    fn_userlog(c_ServiceName,"FUT Value <%lf>",d_fut_value);
    fn_userlog(c_ServiceName,"FUT STT <%lf>",d_fut_stt);
		}

		MEMSET(c_string);
    strcpy(c_string,(char *)c_fcd_cntrct_specs);
    strcat(c_string,",");
    strcat(c_string,(char *)c_fcd_expr_dt);

		rtrim(c_string);

    fn_userlog(c_ServiceName,"c_string  <%s>",c_string);

    cur_otpt[0]=Fadd32(ptr_ffo_Obuffer,FFO_FRWD_TM,(char*)c_string,0);
    cur_otpt[1]=Fadd32(ptr_ffo_Obuffer,FFO_JIFFY,(char*)&d_fut_value,0);
    cur_otpt[2]=Fadd32(ptr_ffo_Obuffer,FFO_MIN_MRGN_PRCNT,(char*)&d_fut_stt,0);
		cur_otpt[3]=Fadd32(ptr_ffo_Obuffer,FFO_QUEUE_NAME,(char*)c_fo_flg,0);
    
    for(i=0;i <= 3;i++)
    {
      if(cur_otpt[i]==-1)
      {
        fn_errlog(c_ServiceName,"S31105",FMLMSG,c_errmsg);
        Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
        tpfree((char*)ptr_ffo_Obuffer) ;
        tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
      }
    }
    j++;

  }/*** End of while ***/

  EXEC SQL
       CLOSE get_stt_det_fut;  

  if(SQLCODE)
  {
    fn_errlog(c_ServiceName,"S31110",SQLMSG,c_errmsg) ;
    Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
    tpfree((char*)ptr_ffo_Obuffer) ;
    tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
  }

		 EXEC SQL
				 DECLARE get_stt_det_opt CURSOR for
					SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(FCD_CNTRCT_SPECS,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
								 nvl(FCD_EXPR_DT,sysdate),
								 sum(FCD_PRC*FCD_QTY),
								 sum(FCD_STT),
								 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(FCD_CNTRCT_OPTN_TYP,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;')
  				FROM FNO_CNTRCT_DTLS
  				WHERE FCD_CNTRCT_NMBR=:c_fcm_cntrct_nmbr
					AND   FCD_TRD_FLW='S'
					AND   FCD_CNTRCT_OPTN_TYP != 'F'
  				GROUP BY FCD_CNTRCT_SPECS,FCD_EXPR_DT,FCD_CNTRCT_OPTN_TYP;  


		if(SQLCODE)
		{
  		fn_errlog(c_ServiceName,"S31115",SQLMSG,c_errmsg) ;
  		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
  		tpfree((char*)ptr_ffo_Obuffer) ;
  		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}

		/* Open the cursor */

		EXEC SQL
  			 OPEN get_stt_det_opt;  

		if(SQLCODE)
		{
  		fn_errlog(c_ServiceName,"S31120",SQLMSG,c_errmsg) ;
  		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
  		tpfree((char*)ptr_ffo_Obuffer) ;
  		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}
		j=0;
		while(1)
		{

			d_opt_stt = 0.0;

			MEMSET(c_fcd_expr_dt);
			MEMSET(c_fcd_cntrct_specs);
			MEMSET(c_fo_flg);

  		EXEC SQL
      		FETCH get_stt_det_opt
      		INTO :c_fcd_cntrct_specs,
							 :c_fcd_expr_dt,
							 :d_opt_value,
							 :d_opt_stt,
               :c_fo_flg;  

  		if((SQLCODE==NO_DATA_FOUND)&&(j==0))
  		{
    		EXEC SQL
      		CLOSE get_stt_det_opt;  
					break;
				/* tpreturn(TPSUCCESS,0,(char *)ptr_ffo_Obuffer,0L,0) ; */
  		}
			else if(SQLCODE==NO_DATA_FOUND)
			{
  			EXEC SQL
  			CLOSE get_stt_det_opt;  
  			break;
			}
			else if(SQLCODE)
			{
  			EXEC SQL
    			CLOSE get_stt_det_opt;  
  			fn_errlog(c_ServiceName,"S31125",SQLMSG,c_errmsg);
  			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
  			tpfree((char*)ptr_ffo_Obuffer) ;
  			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
			}

			l_space_avl = Funused32(ptr_ffo_Obuffer);
			if (l_space_avl < l_space_rqd)
			{
    		/* Reallocate a output buffer */

  				l_bufferlength = Fsizeof32(ptr_ffo_Obuffer) + MIN_FML_BUF_LEN * 10;
  				ptr_ffo_temp_buffer=(FBFR32 *)tprealloc((char *)ptr_ffo_Obuffer,l_bufferlength);

  				if (ptr_ffo_temp_buffer == NULL)
  				{
    				fn_errlog(c_ServiceName,"S31130",FMLMSG,c_errmsg);
    				Fadd32( ptr_ffo_Ibuffer,FFO_ERR_MSG, c_errmsg, 0 );
    				tpfree((char *)ptr_ffo_Obuffer);
    				tpreturn(TPFAIL,0L, (char *)ptr_ffo_Ibuffer, 0L, 0);
  				}
  				else
  				{
    				ptr_ffo_Obuffer = ptr_ffo_temp_buffer;
    				/* Finit32(ptr_ffo_temp_buffer, Fsizeof(ptr_ffo_temp_buffer)); */
  				}
			}

			rtrim(c_fcd_expr_dt);
			rtrim(c_fcd_cntrct_specs);
			rtrim(c_fo_flg);

			if(DEBUG_MSG_LVL_3){
			fn_userlog(c_ServiceName,"c_fcd_cntrct_specs <%s>",c_fcd_cntrct_specs);
			fn_userlog(c_ServiceName,"c_fcd_expr_dt <%s>",c_fcd_expr_dt);
			fn_userlog(c_ServiceName,"OPT Value  <%lf>",d_opt_value);
			fn_userlog(c_ServiceName,"OPT STT  <%lf>",d_opt_stt);
			}

			MEMSET(c_string);
			strcpy(c_string,(char *)c_fcd_cntrct_specs);
			strcat(c_string,",");
			strcat(c_string,(char *)c_fcd_expr_dt);

			rtrim(c_string);

			fn_userlog(c_ServiceName,"c_string  <%s>",c_string);

			cur_otpt[0]=Fadd32(ptr_ffo_Obuffer,FFO_FRWD_TM,(char*)c_string,0);
			cur_otpt[1]=Fadd32(ptr_ffo_Obuffer,FFO_OI_HIGH,(char*)&d_opt_value,0);
			cur_otpt[2]=Fadd32(ptr_ffo_Obuffer,FFO_OI_LOW,(char*)&d_opt_stt,0);
			cur_otpt[3]=Fadd32(ptr_ffo_Obuffer,FFO_QUEUE_NAME,(char*)c_fo_flg,0);
	
			for(i=0;i <= 3;i++)
   		{
     		if(cur_otpt[i]==-1)
     		{
       		fn_errlog(c_ServiceName,"S31135",FMLMSG,c_errmsg);
       		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
       		tpfree((char*)ptr_ffo_Obuffer) ;
       		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
     		}
   		}
   		j++;

		}/*** End of while ***/

		EXEC SQL
  			 CLOSE get_stt_det_opt;  

		if(SQLCODE)
		{
  		fn_errlog(c_ServiceName,"S31140",SQLMSG,c_errmsg) ;
  		Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
  		tpfree((char*)ptr_ffo_Obuffer) ;
  		tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}

	}/*** End of F ***/
	else if (c_oper_type =='E')
	{

		MEMSET(c_ecm_usr_nm);
		MEMSET(c_ecm_add_ln1);
		MEMSET(c_ecm_add_ln2);
		MEMSET(c_ecm_add_ln3);
		MEMSET(c_ecm_add_ln4);
		MEMSET(c_ecm_pan_no);
		MEMSET(c_ecm_tel_no);
		MEMSET(c_ecm_cntrct_dt);

		EXEC SQL 
		SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(ECM_USR_NM,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
					 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(ECM_ADD_LN1,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
					 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(ECM_ADD_LN2,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
					 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(ECM_ADD_LN3,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
					 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(ECM_ADD_LN4,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
					 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(ECM_PAN_NO,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
					 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(ECM_TEL_NO,' ')),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
					 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE((nvl(ECM_CNTRCT_DT,sysdate)),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
					 nvl(ECM_TOTAL_AMOUNT,0)
		INTO 	:c_ecm_usr_nm,
					:c_ecm_add_ln1,
					:c_ecm_add_ln2,
					:c_ecm_add_ln3,
					:c_ecm_add_ln4,
					:c_ecm_pan_no,
					:c_ecm_tel_no,
					:c_ecm_cntrct_dt,				
					:sql_ecm_total_amount
		FROM EA_CONF_MSTR
		WHERE ECM_USR_MTCH_ACCNO=:c_fcm_usr_mtch_accno
		AND ECM_CNTRCT_NMBR=:c_fcm_cntrct_nmbr;

		if(SQLCODE == NO_DATA_FOUND)
		{
			fn_errlog(c_ServiceName,"S31145",SQLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,"signed contract note not available",0);
			tpfree((char*)ptr_ffo_Obuffer) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}
		else if (SQLCODE)
		{
			fn_errlog(c_ServiceName,"S31150",SQLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,"signed contract note not available",0);
			tpfree((char*)ptr_ffo_Obuffer) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}

		rtrim(c_ecm_usr_nm);
    rtrim(c_ecm_add_ln1);
    rtrim(c_ecm_add_ln2);
    rtrim(c_ecm_add_ln3);
    rtrim(c_ecm_add_ln4);
    rtrim(c_ecm_pan_no);
    rtrim(c_ecm_tel_no);
    rtrim(c_ecm_cntrct_dt);

		if(DEBUG_MSG_LVL_3){
				fn_userlog(c_ServiceName,"Data for Contract note <%s>",c_fcm_cntrct_nmbr);
		}

		/*	Populate  output buffer */

		arr_otpt[0] = Fadd32(ptr_ffo_Obuffer,FFO_IP_VIEW_NM,(char*)c_ecm_usr_nm,0);
		arr_otpt[1] = Fadd32(ptr_ffo_Obuffer,FFO_INDX_CD,(char*)c_ecm_add_ln1,0);
		arr_otpt[2] = Fadd32(ptr_ffo_Obuffer,FFO_UNDRLYNG,(char*)c_ecm_add_ln2,0);
		arr_otpt[3] = Fadd32(ptr_ffo_Obuffer,FFO_UND_PRC_TM,(char*)c_ecm_add_ln3,0);
		arr_otpt[4] = Fadd32(ptr_ffo_Obuffer,FFO_OP_VIEW_NM,(char*)c_ecm_add_ln4,0);
		arr_otpt[5] = Fadd32(ptr_ffo_Obuffer,FFO_SERIES,(char*)c_ecm_pan_no,0);
		arr_otpt[6] = Fadd32(ptr_ffo_Obuffer,FFO_OI_INDCTR,(char*)c_ecm_tel_no,0);
		arr_otpt[7] = Fadd32(ptr_ffo_Obuffer,FFO_TOTAL_PL,(char*)&sql_ecm_total_amount,0);
		arr_otpt[8] = Fadd32(ptr_ffo_Obuffer,FFO_RCRD_DT,(char*)c_ecm_cntrct_dt,0);		
		

		for(i=0;i < UNIQUE_OUTPUT_FML;i++)
		{
			if(arr_otpt[i]==-1)
			{
				fn_errlog(c_ServiceName,"S31155",FMLMSG,c_errmsg);
				Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
				tpfree((char*)ptr_ffo_Obuffer) ;
				tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
			}
		}
		if(DEBUG_MSG_LVL_3){
			fn_userlog(c_ServiceName,"before declaring EA cursor <%s>,<%s>",c_fcm_usr_mtch_accno,c_fcm_cntrct_nmbr);
		} /* Ver 1.1 removed ; here */
		EXEC SQL
			DECLARE get_ea_det CURSOR for
			SELECT  REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(nvl(substr(ECD_CNTRCT_SPECS,instr(ECD_CNTRCT_SPECS,'-',1,2)+1,9),' '),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
						 nvl(ECD_QTY,0),
						 nvl(ECD_BRKG,0),
						 to_char(nvl(ECD_SRC_TX,0)),
						 nvl(ECD_STRK_PRC,0),
						 nvl(ECD_EA_FLG,' '),
						 nvl(ECD_SETLMNT_PRC,0),
						 nvl(ECD_EXPR_DT,sysdate),
						 nvl(ECD_CNTRCT_AMT,0),
						 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(nvl(ECD_CNTRCT_OPTN_TYP,' '),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
						 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(nvl(ECD_CNTRCT_INST_TYP,' '),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;'),
						 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(nvl(ECD_CNTRCT_SYMBL,' '),'&','&amp;'),'<','&lt;'),'>','&gt;'),'"','&quot;'),'''','&apos;')
			FROM EA_CONF_DTLS
			WHERE ECD_CNTRCT_NMBR=:c_fcm_cntrct_nmbr
			ORDER BY ECD_CNTRCT_OPTN_TYP;  


		if(SQLCODE)
		{
			fn_errlog(c_ServiceName,"S31160",SQLMSG,c_errmsg);
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0);
			tpfree((char*)ptr_ffo_Obuffer);
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0);
		}

		/*Open the cursor */

	  EXEC SQL
			OPEN get_ea_det;  

		if(SQLCODE)
		{
			fn_errlog(c_ServiceName,"S31165",SQLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
			tpfree((char*)ptr_ffo_Obuffer) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}
		j=0;
		while(1)
		{

			MEMSET(c_ecd_ea_dt);
			MEMSET(c_ecd_expr_dt);
			MEMSET(c_ecd_cntrct_optn_typ);
			MEMSET(c_ecd_cntrct_inst_typ);
			MEMSET(c_ecd_cntrct_symbl);
			MEMSET(c_src_tx);

			EXEC SQL
				FETCH get_ea_det
				INTO :c_ecd_ea_dt,
						 :sql_ecd_qty,
						 :sql_ecd_brkg,
						 :c_src_tx,
						 :sql_ecd_strk_prc,
						 :sql_ecd_ea_flg,
						 :sql_ecd_setlmnt_prc,
						 :c_ecd_expr_dt,
						 :sql_ecd_cntrct_amt,
						 :c_ecd_cntrct_optn_typ,
						 :c_ecd_cntrct_inst_typ,
						 :c_ecd_cntrct_symbl;  

			if((SQLCODE==NO_DATA_FOUND)&&(j==0))
			{
				EXEC SQL
					CLOSE get_ea_det;  

				fn_errlog(c_ServiceName,"S31170",SQLMSG,c_errmsg);
				Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,"matching data not found",0) ;
				tpfree((char*)ptr_ffo_Obuffer) ;
				tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
			}
			else if(SQLCODE==NO_DATA_FOUND)
			{
				EXEC SQL
				CLOSE get_ea_det;  
				break;
			}
			else if(SQLCODE)
			{
				EXEC SQL
				CLOSE get_fno_det;  

				fn_errlog(c_ServiceName,"S31175",SQLMSG,c_errmsg);
				Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
				tpfree((char*)ptr_ffo_Obuffer) ;
				tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
			}

			rtrim(c_ecd_ea_dt);
			rtrim(c_ecd_expr_dt);
			rtrim(c_ecd_cntrct_optn_typ);
			rtrim(c_ecd_cntrct_inst_typ);
			rtrim(c_ecd_cntrct_symbl);
			rtrim(c_src_tx);

			MEMSET(code);
			strcpy(code,"");
			strcpy(code,(char *)c_ecd_cntrct_symbl);
			strcat(code,"-");
			strcat(code,(char *)c_ecd_cntrct_inst_typ);
			rtrim(code);

			l_space_avl = Funused32(ptr_ffo_Obuffer);

			if (l_space_avl < l_space_rqd)
			{
				/* Reallocate a output buffer */

				l_bufferlength = Fsizeof32(ptr_ffo_Obuffer) + MIN_FML_BUF_LEN * 10;
				ptr_ffo_temp_buffer=(FBFR32 *)tprealloc((char *)ptr_ffo_Obuffer,l_bufferlength);
				if (ptr_ffo_temp_buffer == NULL)
				{
					fn_errlog(c_ServiceName,"S31180",FMLMSG,c_errmsg);
					Fadd32( ptr_ffo_Ibuffer,FFO_ERR_MSG, c_errmsg, 0 );
					tpfree((char *)ptr_ffo_Obuffer);
					tpreturn(TPFAIL,0L, (char *)ptr_ffo_Ibuffer, 0L, 0);
				}
				else
				{
					ptr_ffo_Obuffer = ptr_ffo_temp_buffer;
					/* Finit32(ptr_ffo_temp_buffer, Fsizeof(ptr_ffo_temp_buffer)); */
				}
			}

			cur_otpt[0]=Fadd32(ptr_ffo_Obuffer,FFO_ORDR_RFRNC,(char*)c_ecd_cntrct_optn_typ,0);
			cur_otpt[1]=Fadd32(ptr_ffo_Obuffer,FFO_TRD_DT,(char*)c_ecd_ea_dt,0);
			cur_otpt[2]=Fadd32(ptr_ffo_Obuffer,FFO_LST_TRD_QTY,(char*)&sql_ecd_qty,0);
			cur_otpt[3]=Fadd32(ptr_ffo_Obuffer,FFO_CLS_PRC,(char*)&sql_ecd_setlmnt_prc,0);
			cur_otpt[4]=Fadd32(ptr_ffo_Obuffer,FFO_BO_AMT_BLKD,(char*)&sql_ecd_brkg,0);
			cur_otpt[5]=Fadd32(ptr_ffo_Obuffer,FFO_MTCH_CNTCT_KEY,(char*)c_src_tx,0);
			cur_otpt[6]=Fadd32(ptr_ffo_Obuffer,FFO_BAL_AMT,(char*)&sql_ecd_cntrct_amt,0);
			cur_otpt[7]=Fadd32(ptr_ffo_Obuffer,FFO_TRD_FLW,(char*)&sql_ecd_ea_flg,0);
			cur_otpt[8]=Fadd32(ptr_ffo_Obuffer,FFO_STRIKE_PRC,(char*)&sql_ecd_strk_prc,0);
			cur_otpt[9]=Fadd32(ptr_ffo_Obuffer,FFO_SYMBOL,(char *)code,0);

			for(i=0;i <= CURSOR_OUTPUT_FML;i++)
			{
				if(cur_otpt[i]==-1)
				{
					fn_errlog(c_ServiceName,"S31185",FMLMSG,c_errmsg);
					Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
					tpfree((char*)ptr_ffo_Obuffer) ;
					tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
				}
			}
			j++;
		}/*End of while */
		EXEC SQL
			CLOSE get_ea_det; 

		if(SQLCODE)
		{
			fn_errlog(c_ServiceName,"S31190",SQLMSG,c_errmsg) ;
			Fadd32(ptr_ffo_Ibuffer,FFO_ERR_MSG,c_errmsg,0) ;
			tpfree((char*)ptr_ffo_Obuffer) ;
			tpreturn(TPFAIL,0L,(char *)ptr_ffo_Ibuffer,0L,0) ;
		}
	}
	if(DEBUG_MSG_LVL_3){
		fn_userlog(c_ServiceName,"Service completed succesfully  ");
	}
	tpreturn(TPSUCCESS,0,(char *)ptr_ffo_Obuffer,0L,0) ;
}/*End of service */
