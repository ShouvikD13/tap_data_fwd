/****************************************************************************************/
/*  File Name : fn_mrgplg_sms_mail.pc                                                   */
/*                                                                                      */
/*  Description :                                                                       */
/*                                                                                      */
/*  Ver 1.0  17-Aug-2020 Initial Release by Tanmay Patel                                */
/*  Ver 1.1  04-Aug-2021 Minor changes Tanmay Patel                                     */       
/*                                                                                      */
/****************************************************************************************/

#include <stdio.h>
#include <string.h>
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fo_view_def.h>
#include <fml_def.h>
#include <fo.h>
#include <fn_session.h>
#include <fn_val_ord.h>
#include <userlog.h>
#include <fn_log.h>
#include <fn_read_debug_lvl.h>


int fn_snd_mymsg_sms_notfcn(char *c_ServiceName,
                            FBFR32 **ptr_fml_Sendbuffer,
                            char *c_user_id,
                            long l_sssn_id,
                            char *c_mtch_acc,
                            char *c_csm_msg_typ,
                            char c_msg_rqst_typ,
                            char *c_err_msg);

int fn_mrgplg_sms_mail ( char *c_ServiceName,
                    char *c_clm_mtch_accnt,
                    long l_psn_no,
                    int  i_msg_code )
{

  EXEC SQL INCLUDE "table/lsm_lck_sms_msg_mstr.h";
  EXEC SQL INCLUDE "table/gsd_global_sms_dtls.h";

  FBFR32* ptr_fml_Sendbuffer;
/**  FBFR32* ptr_fml_Recbuffer; ** Ver 1.1 **/

  int i_counter =0;
  int i_err[11];
  int i_return_cd = 0;
  char c_msg_typ ='G';
  char c_check_flag ='N';
  varchar c_mail_cd[7];
  varchar c_errmsg[250];
  varchar c_error_msg[250];
  long l_nodelivery_frm = 2100;
  long l_nodelivery_to = 600;
  long l_recv_buff_len = 0;

  EXEC SQL BEGIN DECLARE SECTION;
   varchar v_mbl_no[11];
  EXEC SQL END DECLARE SECTION;

  MEMSET(sql_lsm_dept_id);
  MEMSET(sql_lsm_app_id);
  MEMSET(v_mbl_no);
  MEMSET(sql_lsm_msg_txt);
  MEMSET(sql_gsd_usr_id);
  MEMSET(sql_gsd_cstm_id);
  MEMSET(sql_gsd_msg_hdr);
  MEMSET(sql_gsd_bus_user_grp);

  userlog("i_msg_code :%d:",i_msg_code);

  EXEC SQL
  SELECT  LSM_DEPT_ID,
          LSM_APP_ID,
          IAD_MOBILE_10DGT,
          DECODE(:i_msg_code,228,REGEXP_REPLACE(LSM_MSG_TXT,'PSN_NO',:l_psn_no),LSM_MSG_TXT),
          UAC_USR_ID,
          UAC_CLM_MTCH_ACCNT
  INTO    :sql_lsm_dept_id,
          :sql_lsm_app_id,
          :v_mbl_no,
          :sql_lsm_msg_txt,
          :sql_gsd_usr_id,
          :sql_gsd_cstm_id
  FROM    UAC_USR_ACCNTS,
          IAD_INFO_ADDRESS_DTLS,
          ICD_INFO_CLIENT_DTLS,
          LSM_LCK_SMS_MSG_MSTR
   WHERE   UAC_USR_ID = ICD_USER_ID
   AND     ICD_SERIAL_NO = IAD_SERIAL_NO
   AND     IAD_ADDRESS_TYPE = 'APPLICANT_CORR'
   AND     IAD_MOBILE_10DGT IS NOT NULL
   AND     LSM_SMS_ID = :i_msg_code
   AND     UAC_CLM_MTCH_ACCNT = :c_clm_mtch_accnt;

   if(SQLCODE != 0)
   {
      fn_errlog(c_ServiceName, "L31005", SQLMSG, c_errmsg.arr);
      return -1;
    }

   SETLEN(sql_lsm_msg_txt);

   SETNULL(sql_lsm_app_id);
   SETNULL(sql_lsm_dept_id);
   SETNULL(v_mbl_no);
   SETNULL(sql_lsm_msg_txt);
   SETNULL(sql_gsd_usr_id);
   SETNULL(sql_gsd_cstm_id);

   strcpy(sql_gsd_msg_hdr.arr,"PLEDGE");
   strcpy(sql_gsd_bus_user_grp.arr,"NA");

   SETLEN(sql_gsd_msg_hdr);
   SETLEN(sql_gsd_bus_user_grp);

   SETNULL(sql_gsd_msg_hdr);
   SETNULL(sql_gsd_bus_user_grp);

   if(DEBUG_MSG_LVL_3)
   {
     userlog("Before adding in ptr_fml_Sendbuffer");
     userlog("Application is :%s:",sql_lsm_app_id.arr);
     userlog("Department is  :%s:",sql_lsm_dept_id.arr);
     userlog("Mobile No is   :%s:",v_mbl_no.arr);
     userlog("Message string :%s:",sql_lsm_msg_txt.arr);
     userlog("user id        :%s:",sql_gsd_usr_id.arr);
     userlog("Match account  :%s:",sql_gsd_cstm_id.arr);
     userlog("Message Header :%s:",sql_gsd_msg_hdr.arr);
     userlog("User Group     :%s:",sql_gsd_bus_user_grp.arr);
   }

  ptr_fml_Sendbuffer = (FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);
  if(ptr_fml_Sendbuffer == NULL)
  {
    fn_errlog(c_ServiceName, "L31010", LIBMSG, c_errmsg.arr);
    return -1;
  }
 
   /*** Commented in Vre 1.1 *** 
  ptr_fml_Recbuffer = (FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);
  if(ptr_fml_Recbuffer == NULL)            
  {
    fn_errlog(c_ServiceName, "L31015", LIBMSG, c_errmsg.arr);
    return -1;
  }  *****/

  i_err[0] = Fadd32(ptr_fml_Sendbuffer,FML_ARD_APPLCTN_RFRNC,(char *)sql_lsm_app_id.arr,0);
  i_err[1] = Fadd32(ptr_fml_Sendbuffer,FML_ORD_DP_ID,(char *)sql_lsm_dept_id.arr,0);
  i_err[2] = Fadd32(ptr_fml_Sendbuffer,FML_USR_MBL_NMBRS,(char *)v_mbl_no.arr,0);
  i_err[3] = Fadd32(ptr_fml_Sendbuffer,FML_SYS_MSG,(char *)sql_lsm_msg_txt.arr,0);
  i_err[4] = Fadd32(ptr_fml_Sendbuffer,FML_USR_ID, (char *)sql_gsd_usr_id.arr, 0);
  i_err[5] = Fadd32(ptr_fml_Sendbuffer,FML_MATCH_ACCNT , (char *)sql_gsd_cstm_id.arr, 0);
  i_err[6] = Fadd32(ptr_fml_Sendbuffer,FML_MKT_MSG, (char *)sql_gsd_msg_hdr.arr, 0);
  i_err[7] = Fadd32(ptr_fml_Sendbuffer,FML_SEC_GRP, (char *)sql_gsd_bus_user_grp.arr, 0);
  i_err[8] = Fadd32(ptr_fml_Sendbuffer,FML_DELV_ST_DT, (char *)&l_nodelivery_frm,0);
  i_err[9] = Fadd32(ptr_fml_Sendbuffer,FML_DELV_END_DT, (char *)&l_nodelivery_to,0);
  i_err[10] = Fadd32(ptr_fml_Sendbuffer,FML_VALID_FLAG, (char *)&c_check_flag,0);

  for(i_counter = 0; i_counter < 11; i_counter++)
  {
    if(i_err[i_counter] == -1 )
    {
      userlog("i_counter :%d:",i_counter);
      fn_errlog(c_ServiceName, "L31020", LIBMSG, c_errmsg.arr);
      tpfree((char *) ptr_fml_Sendbuffer);
      /** tpfree((char *) ptr_fml_Recbuffer); ** Ver 1.1 **/
      return -1;
    }
  }

  if( fn_snd_mymsg_sms_notfcn(c_ServiceName,&ptr_fml_Sendbuffer,sql_gsd_usr_id.arr,DEF_SSSN,
                              c_clm_mtch_accnt,"PLEDGE",c_msg_typ,c_errmsg.arr) != 0)
  {
     userlog("Error while calling fn_snd_sms_notification");
     fn_errlog(c_ServiceName, "L31025", LIBMSG, c_errmsg.arr);
     tpfree((char *)ptr_fml_Sendbuffer);
     /** tpfree((char *) ptr_fml_Recbuffer); ** Ver 1.1 **/
     return -1;
  }

  fn_userlog(c_ServiceName,"Calling service SVC_SND_SMSALRT ........");

/**  i_return_cd = tpcall("SVC_SND_SMSALRT",(char *)ptr_fml_Sendbuffer,0,(char **)&ptr_fml_Recbuffer,&l_recv_buff_len,TPNOTRAN); ** Ver 1.1 **/

  i_return_cd = tpacall("SVC_SND_SMSALRT",(char *)ptr_fml_Sendbuffer,0,TPNOTRAN | TPNOREPLY);
 
  if (i_return_cd == -1)
  {
    fn_errlog(c_ServiceName, "L31030", TPMSG, c_errmsg.arr);
    tpfree((char *)ptr_fml_Sendbuffer);
    /**  tpfree((char *)ptr_fml_Recbuffer); ** Ver 1.1 **/
    return -1;
  }

  tpfree((char *)ptr_fml_Sendbuffer);

  if ( i_msg_code == 225 || i_msg_code == 226 )
  {
    userlog("Upload data in click for mail");
   

   MEMSET(c_mail_cd);

   if ( i_msg_code == 225 )
   strcpy(c_mail_cd.arr,"PLGREQ");
   else if ( i_msg_code == 226 )
   strcpy(c_mail_cd.arr,"PLGCNV");

   SETLEN(c_mail_cd);
   SETNULL(c_mail_cd);

    EXEC SQL EXECUTE
     BEGIN
      SP_MRGNPLG_REQ_MAIL (:c_clm_mtch_accnt,
                           :c_mail_cd,
                           :c_error_msg,
                           :i_return_cd);

     END;
    END-EXEC;

   if ( SQLCODE != 0 && SQLCODE != NULL_RETURN)
   {
      fn_errlog(c_ServiceName, "L31035", SQLMSG, c_errmsg.arr);
      userlog("Stored ProcError :%s:",c_error_msg.arr);
      return -1;
   }

  }

  return 0;

}

