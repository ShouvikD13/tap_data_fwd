/*	Log:	Ver 1.1		DL Revamp (SKS)				*/
/*  Log:	Ver 1.2   AIX Migration 13-Dec-2007  Rohit | 03/03/08 Debug Level */
/*  Log:  Ver 1.3   Storing ip address | 27-Jun-2012 Navina |  */
/*  Log:  Ver 1.6   Transaction Flag in Check Session IP | 15-Mar-2106 | Kishor  */
/*  Log:  Ver 1.7   Check Session IP Common Function | 29-Jun-2106 | Samip M  */
/*  Log:  Ver 1.8   Debug level changes | 21-Jul-2016 | Kishor  */
/*  Log:  Ver 1.9   Minor Change- Client Level Changes | 07-Mar-2023 | Sachin Birje */

#include <stdio.h>
#include <string.h>
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fo_view_def.h>
#include <fml_def.h>
#include <fo.h>
#include <fn_session.h>
#include <userlog.h>		/* Ver 1.2 */
#include <fn_log.h>		/* Ver 1.2 */
#include <fn_read_debug_lvl.h>	/* Debug Level */
#include <fn_tuxlib.h>                /** Ver 1.9 **/

#define READ_ONLY_ANDROID "REA"       /* ver 1.6 */
#define READ_ONLY_IOS     "REI"       /* ver 1.6 */
#define READ_ONLY_WINDOWS "REW"       /* ver 1.6 */

TPTRANID tranid ;  /** Ver 1.9 **/

int fn_chk_sssn( char * c_servicename,
								 struct vw_usr_prfl *ptr_st_usr_prfl,
								 struct vw_err_msg *ptr_st_err_msg )
{

	EXEC SQL BEGIN DECLARE SECTION ;
		varchar c_userid[9] ;
		char		c_mtch_accnt[11] ;
    int     sql_count ;
	EXEC SQL END DECLARE SECTION ;

	int i_return_code ;
	char	c_err_msg[256] ;

  if ( ptr_st_usr_prfl->l_usr_flg == 1)
    return 0;

  if( (strcmp(ptr_st_usr_prfl->c_user_id, DEF_USR) == 0) && 
						 (ptr_st_usr_prfl->l_session_id == DEF_SSSN) )
    return 0;

 	/*#ifdef DEBUG */
	if(DEBUG_MSG_LVL_3)
	{
 		fn_userlog( c_servicename,"EBA User id :%s:", ptr_st_usr_prfl->c_user_id );
 		fn_userlog( c_servicename,"EBA session id :%ld:", 
																ptr_st_usr_prfl->l_session_id );
 		fn_userlog( c_servicename,"EBA Match a/c :%s:", 
															ptr_st_usr_prfl->c_cln_mtch_accnt );
	}
 	/*#endif */

	i_return_code = chk_sssn( c_servicename,ptr_st_usr_prfl->c_user_id,
														ptr_st_usr_prfl->l_session_id,
														ptr_st_err_msg->c_err_msg) ;

	if( i_return_code == -1 )
	{
		fn_errlog( c_servicename, "B21001", LIBMSG,
													 ptr_st_err_msg->c_err_msg );
		return (-1) ;
	}
/*else
	{			**	Ver 1.1 : Checking for user match combination		***/
		if ( strcmp(ptr_st_usr_prfl->c_cln_mtch_accnt,"*") == 0 || strcmp(ptr_st_usr_prfl->c_cln_mtch_accnt,"ALL") == 0 )
		{
    	ptr_st_usr_prfl->l_usr_flg = 1 ;
    	return 0;
		}
/*	else
		{			** Ver 1.1 : Commented	***/
			strcpy((char *)c_userid.arr,ptr_st_usr_prfl->c_user_id) ;
			SETLEN(c_userid) ;
			strcpy( c_mtch_accnt, ptr_st_usr_prfl->c_cln_mtch_accnt) ;
			/**	Ver 1.1 : Addition Begins		***/
			if(ptr_st_usr_prfl->c_user_id[0] == BPID)
			{
        if(DEBUG_MSG_LVL_3)  /*** ver 1.8, debug added **/
				{
					fn_userlog( c_servicename,"User id INSIDE BP is :%s:", ptr_st_usr_prfl->c_user_id );
				}

				EXEC SQL 	SELECT 1
                 	INTO 	:sql_count
                 	FROM	CLM_CLNT_MSTR
									WHERE	CLM_MTCH_ACCNT = 	:c_mtch_accnt
									AND		CLM_BP_ID			 =	:c_userid;

        if( SQLCODE != 0 )
        {
          if(SQLCODE == NO_DATA_FOUND)
          {
            fn_errlog( c_servicename, "B28512", " ", ptr_st_err_msg->c_err_msg );
            /*#ifdef DEBUG */
					if(DEBUG_MSG_LVL_3)
  				{
            fn_userlog( c_servicename,"Error mesage :%s:",
                                        ptr_st_err_msg->c_err_msg );
					}
           /* #endif */
            return ( -1 );
          }
          else
          {
            fn_errlog( c_servicename, "L31005", SQLMSG,
                                        ptr_st_err_msg->c_err_msg );
            return ( -1 );
          }
        }
			}		/** Ver 1.1 : Addition Ends   ***/
			else if(ptr_st_usr_prfl->c_user_id[0] != BPID)
			{	
        if(DEBUG_MSG_LVL_3)  /*** ver 1.8, debug added **/
				{
 					fn_userlog( c_servicename,"User id INSIDE NON BP is :%s:", ptr_st_usr_prfl->c_user_id );
				}

				EXEC SQL 	SELECT 1
								 	INTO 	:sql_count
								 	FROM 	UAC_USR_ACCNTS
								 	WHERE UAC_USR_ID 					= :c_userid 
								 	AND	 	UAC_CLM_MTCH_ACCNT 	= :c_mtch_accnt;
	
				if( SQLCODE != 0 )
				{
					if(SQLCODE == NO_DATA_FOUND)
					{
					  fn_errlog( c_servicename, "B28512", " ", ptr_st_err_msg->c_err_msg );
 		 				/*#ifdef DEBUG */
						if(DEBUG_MSG_LVL_3)
  					{
 	   					fn_userlog( c_servicename,"Error mesage :%s:", 
																				ptr_st_err_msg->c_err_msg );
						}
 		 				/*#endif */
 		     		return ( -1 );
					}
					else
					{
					  fn_errlog( c_servicename, "L31010", SQLMSG, 
																				ptr_st_err_msg->c_err_msg );
 		     		return ( -1 );
					}
				}
			}

			if(sql_count == 1)	/*	Ver 1.1 : Condition Added	***/
			{
    		ptr_st_usr_prfl->l_usr_flg = 1 ;
    		return 0;
			}
/*	}
	}		**	Ver 1.1 : commented	***/
	return -1;	/*  Ver 1.1 : Added	***/
}

/*** Ver 1.3 starts here ***/
/**** Commented for Ver 1.7 *****
int fn_chk_sssn_ip( char * c_servicename,
								 struct vw_usr_prfl *ptr_st_usr_prfl,
								 struct vw_err_msg *ptr_st_err_msg,
								 char *c_ip_address,
								 char c_txn_flg)   *** c_txn_flg added in Ver 1.6 ***
{

	EXEC SQL BEGIN DECLARE SECTION ;
		varchar c_userid[9] ;
		char		c_mtch_accnt[11] ;
    int     sql_count ;
	EXEC SQL END DECLARE SECTION ;

	int i_return_code ;
	char	c_err_msg[256] ;

  if ( ptr_st_usr_prfl->l_usr_flg == 1)
    return 0;

  if( (strcmp(ptr_st_usr_prfl->c_user_id, DEF_USR) == 0) && 
						 (ptr_st_usr_prfl->l_session_id == DEF_SSSN) )
    return 0;

 	*#ifdef DEBUG *
	if(DEBUG_MSG_LVL_3)
	{
 		fn_userlog( c_servicename,"EBA User id :%s:", ptr_st_usr_prfl->c_user_id );
 		fn_userlog( c_servicename,"EBA session id :%ld:", 
																ptr_st_usr_prfl->l_session_id );
 		fn_userlog( c_servicename,"EBA Match a/c :%s:", 
															ptr_st_usr_prfl->c_cln_mtch_accnt );
    fn_userlog( c_servicename, "Value of c_txn_flg :%c:",c_txn_flg);  ** Ver 1.6 **
	}
 	*#endif *

	i_return_code = chk_sssn_ip( c_servicename,ptr_st_usr_prfl->c_user_id,
															 ptr_st_usr_prfl->l_session_id,
															 c_ip_address,
                               c_txn_flg,       *** Ver 1.6 ***
															 ptr_st_err_msg->c_err_msg
															) ;

	if( i_return_code == -1 )
	{
		fn_errlog( c_servicename, "B21001", LIBMSG,
													 ptr_st_err_msg->c_err_msg );
		return (-1) ;
	}


	if(DEBUG_MSG_LVL_3)
  {
		fn_userlog( c_servicename,"Inside fn_chk_sssn_ip c_ip_address = :%s:",c_ip_address);
	}

	if ( strcmp(ptr_st_usr_prfl->c_cln_mtch_accnt,"*") == 0 || strcmp(ptr_st_usr_prfl->c_cln_mtch_accnt,"ALL") == 0 )
	{
		ptr_st_usr_prfl->l_usr_flg = 1 ;
		return 0;
	}
	strcpy((char *)c_userid.arr,ptr_st_usr_prfl->c_user_id) ;
	SETLEN(c_userid) ;
	strcpy( c_mtch_accnt, ptr_st_usr_prfl->c_cln_mtch_accnt) ;

	if(ptr_st_usr_prfl->c_user_id[0] == BPID)
	{
    if(DEBUG_MSG_LVL_3)  *** ver 1.8, debug added **
		{
			fn_userlog( c_servicename,"User id INSIDE BP is :%s:", ptr_st_usr_prfl->c_user_id );
		}

		EXEC SQL 	SELECT 1
							INTO 	:sql_count
							FROM	CLM_CLNT_MSTR
							WHERE	CLM_MTCH_ACCNT = 	:c_mtch_accnt
							AND		CLM_BP_ID			 =	:c_userid;

		if( SQLCODE != 0 )
		{
			if(SQLCODE == NO_DATA_FOUND)
			{
				fn_errlog( c_servicename, "B28512", " ", ptr_st_err_msg->c_err_msg );
				*#ifdef DEBUG *
			if(DEBUG_MSG_LVL_3)
			{
				fn_userlog( c_servicename,"Error mesage :%s:",
																		ptr_st_err_msg->c_err_msg );
			}
			 * #endif *
				return ( -1 );
			}
			else
			{
				fn_errlog( c_servicename, "L31015", SQLMSG,
																		ptr_st_err_msg->c_err_msg );
				return ( -1 );
			}
		}
	}		
	else if(ptr_st_usr_prfl->c_user_id[0] != BPID)
	{	
    if(DEBUG_MSG_LVL_3)  *** ver 1.8, debug added **
		{
			fn_userlog( c_servicename,"User id INSIDE NON BP is :%s:", ptr_st_usr_prfl->c_user_id );
		}

		EXEC SQL 	SELECT 1
							INTO 	:sql_count
							FROM 	UAC_USR_ACCNTS
							WHERE UAC_USR_ID 					= :c_userid 
							AND	 	UAC_CLM_MTCH_ACCNT 	= :c_mtch_accnt;

		if( SQLCODE != 0 )
		{
			if(SQLCODE == NO_DATA_FOUND)
			{
				fn_errlog( c_servicename, "B28512", " ", ptr_st_err_msg->c_err_msg );
				*#ifdef DEBUG *
				if(DEBUG_MSG_LVL_3)
				{
					fn_userlog( c_servicename,"Error mesage :%s:", 
																		ptr_st_err_msg->c_err_msg );
				}
				*#endif *
				return ( -1 );
			}
			else
			{
				fn_errlog( c_servicename, "L31020", SQLMSG, 
																		ptr_st_err_msg->c_err_msg );
				return ( -1 );
			}
		}
	}

	if(sql_count == 1)	
	{
		ptr_st_usr_prfl->l_usr_flg = 1 ;
		return 0;
	}
	return -1;
}
******* Comment end for Ver 1.7 ***/
/*** Ver 1.3 Ends here ***/

/* COMMENETD IN VER TOL : Tux on LINUX -- Definition moved to eba_common.c (Ravindra) *****

int chk_sssn(char *c_servicename, char *usr_id, long int sssn_id, char *err_msg)
{
  int rec_len, ch_val;
  long int len_obuf;
  FLDLEN32 ud_len;

  FBFR32 *fml_ibuf;
  FBFR32 *fml_obuf;

  rec_len = 280;

  if( (strcmp(usr_id, DEF_USR) == 0) && (sssn_id == DEF_SSSN) )
    return 0;

  fml_ibuf = (FBFR32 *)tpalloc("FML32",NULL,Fneeded32(1,rec_len));
  if (fml_ibuf == NULL)
  {
		fn_errlog( c_servicename, "L31025", TPMSG, err_msg );
    return(-1);
  }
  rec_len = 270;
  fml_obuf = (FBFR32 *)tpalloc("FML32",NULL,Fneeded32(1,rec_len));
  if (fml_obuf == NULL)
  {
		fn_errlog( c_servicename, "L31030", TPMSG, err_msg );
    tpfree((char *)fml_ibuf);
    return(-1);
  }

  Fadd32(fml_ibuf, FML_USR_ID,  usr_id, 0);
  Fadd32(fml_ibuf, FML_SSSN_ID,  (char *)&sssn_id, 0);
  ch_val = tpcall("SVC_SESSION", (char *)fml_ibuf, 0,
             (char **)&fml_obuf, &len_obuf, 0);
  if (ch_val == -1)
  {
    if( TPCODE == TPESVCFAIL )
    {
      Fget32(fml_obuf, FML_ERR_MSG, 0, err_msg, 0);
    }
    else
    {
		  fn_errlog( c_servicename, "L31035", TPMSG, err_msg );
    }
    tpfree((char *)fml_ibuf);
    tpfree((char *)fml_obuf);
    return(-1);
  }
  tpfree((char *)fml_ibuf);
  tpfree((char *)fml_obuf);
  return (0);
}
**** COMMENT OF VER TOL : TUX on LINUX ends here ****/

/*** Ver 1.3 starts here ***/
/** int chk_sssn_ip(char *c_servicename, char *usr_id, long int sssn_id, char *c_ip_address, char *err_msg) Commented in Ver 1.6 **/
int chk_sssn_ip_fo(char *c_servicename, char *usr_id, long int sssn_id, char *c_ip_address,char c_txn_flg,char *err_msg) /*** c_txn_flg added in Ver 1.6 ***/ /** Function name change for Ver 1.7 **/
{
  int rec_len, ch_val;
  char c_sup_usr_typ;           /*** Ver 1.6 ***/
  char channel[4];                /*** Ver 1.6 ***/
  long int len_obuf;
  FLDLEN32 ud_len;

  FBFR32 *fml_ibuf;
  FBFR32 *fml_obuf;

  rec_len = 280;

  memset(channel,0,sizeof(channel));    /** Ver 1.6 **/

  if( (strcmp(usr_id, DEF_USR) == 0) && (sssn_id == DEF_SSSN) )
    return 0;

  fml_ibuf = (FBFR32 *)tpalloc("FML32",NULL,Fneeded32(1,rec_len));
  if (fml_ibuf == NULL)
  {
		fn_errlog( c_servicename, "L31040", TPMSG, err_msg );
    return(-1);
  }
  rec_len = 270;
  fml_obuf = (FBFR32 *)tpalloc("FML32",NULL,Fneeded32(1,rec_len));
  if (fml_obuf == NULL)
  {
		fn_errlog( c_servicename, "L31045", TPMSG, err_msg );
    tpfree((char *)fml_ibuf);
    return(-1);
  }

  Fadd32(fml_ibuf, FML_USR_ID,  usr_id, 0);
  Fadd32(fml_ibuf, FML_SSSN_ID,  (char *)&sssn_id, 0);
  ch_val = tpcall("SVC_SESSION", (char *)fml_ibuf, 0,
             (char **)&fml_obuf, &len_obuf, 0);
  if (ch_val == -1)
  {
    if( TPCODE == TPESVCFAIL )
    {
      Fget32(fml_obuf, FML_ERR_MSG, 0, err_msg, 0);
    }
    else
    {
		  fn_errlog( c_servicename, "L31050", TPMSG, err_msg );
    }
    tpfree((char *)fml_ibuf);
    tpfree((char *)fml_obuf);
    return(-1);
  }
	else
  {
    if( Fget32(fml_obuf, FML_IP_ID, 0,(char *)c_ip_address, 0) == -1 )
    {
      errlog(c_servicename,"L31055", TPMSG, usr_id, DEF_SSSN, err_msg);
      return(-1);
    }
    /**** Ver 1.6 Starts Here ****/
    if( Fget32(fml_obuf, FML_SUP_USR_TYP, 0,(char *)&c_sup_usr_typ, 0) == -1 )
    {
      errlog(c_servicename,"L31060", TPMSG, usr_id, DEF_SSSN, err_msg);
      return(-1);
    }

    if(DEBUG_MSG_LVL_3)
    {
      fn_userlog(c_servicename,"Value of c_sup_usr_typ :%c:",c_sup_usr_typ);
    }

    fn_get_channel(c_sup_usr_typ, channel);

    if(DEBUG_MSG_LVL_3)
    {
      fn_userlog(c_servicename,"Value of c_sup_usr_typ :%c:",c_sup_usr_typ);
      fn_userlog(c_servicename,"Value of channel :%s:",channel);
    }


    /* Note : Check added to restrict placement/modification/cancellation of orders from readonly login */

    if(c_txn_flg == 'Y' && (  (strcmp(channel,READ_ONLY_ANDROID)  == 0)     ||
                              (strcmp(channel,READ_ONLY_IOS)      == 0)     ||
                              (strcmp(channel,READ_ONLY_WINDOWS)  == 0)     ) )
    {
			fn_errlog( c_servicename, "B31049", LIBMSG, err_msg );
      return -1;
    }
   /**** Ver 1.6 Ends Here ****/
	}

  if(DEBUG_MSG_LVL_3)
	{
		fn_userlog( c_servicename,"Inside chk_sssn_ip c_ip_address = :%s:",c_ip_address);
	}

  tpfree((char *)fml_ibuf);
  tpfree((char *)fml_obuf);
  return (0);
}
/*** Ver 1.3 Ends here ***/

int fn_lock_usr ( char c_ServiceName [ 33 ],
                  char c_clm_mtch_accnt [ 10 + 1 ] )
{
	char c_err_msg [ 256 ];
  EXEC SQL BEGIN DECLARE SECTION;
    int sql_count;
    char  sql_clm_mtch_accnt[11] ;
  EXEC SQL END DECLARE SECTION;

  strcpy ( sql_clm_mtch_accnt, c_clm_mtch_accnt );

  EXEC SQL
    SELECT 1
    INTO :sql_count
    FROM clm_clnt_mstr
    WHERE clm_mtch_accnt = :sql_clm_mtch_accnt
    FOR UPDATE OF clm_mtch_accnt;

  if ( SQLCODE != 0 )
  {
    fn_errlog( c_ServiceName, "L31065", SQLMSG, c_err_msg );
    return ( -1 );
  }

  return ( 0 ) ;
}
/*** Ver 1.6 Starts Here ***/
/*** Commented for Ver 1.7 ***
void fn_get_channel(char usr_typ, char *channel)
{
  char c_servicename[33];
  if(usr_typ == 'S') * Super User *
  {
    strcpy(channel, "CN1");
  }
  else if ( usr_typ == 'C') * Call N Trade *
  {
    strcpy(channel,"CNT");
  }
  else if( usr_typ == 'M')  * LOW BANDWIDTH SITE *
  {
    strcpy(channel,"WE3");
  }
  else if (usr_typ == 'L')  * RIA *
  {
    strcpy(channel,"WE4");
  }
  else if (usr_typ == 'X')  * ANDROID *
  {
    strcpy(channel,"WE6");
  }
  else if (usr_typ == 'I')  * IPHONE  *
  {
    strcpy(channel,"WE7");
  }
  else if (usr_typ == 'W')  * WINDOWS *
  {
    strcpy(channel,"WE8");
  }
  else if (usr_typ == 'T')  * WINDOWS MOBILE *
  {
    strcpy(channel,"WE9");
  }
  else if (usr_typ == 'H')  * HTML5 *
  {
    strcpy(channel,"WEH");
  }
  else if (usr_typ == 'N')  * IDIRECT LITE ANDROID *
  {
    strcpy((char *)channel,"WEN");
  }
  else if (usr_typ == 'O')  * IDIRECT LITE IOS *
  {
    strcpy(channel,"WEO");
  }
  else if (usr_typ == 'P')  * IDIRECT LITE WINDOWS *
  {
    strcpy(channel,"WEP");
  }
  else if (usr_typ == 'F')  * READ ONLY ANDROID *   * Added in ver 2.2 -Starts *
  {
    strcpy(channel,"REA");
  }
  else if (usr_typ == 'G')  * READ ONLY IOS *
  {
    strcpy(channel,"REI");
  }
  else if (usr_typ == 'J')  * READ ONLY WINDOWS *
  {
    strcpy(channel,"REW");
  }
  else if (usr_typ == 'R')  * IBANK ANDROID *
  {
    strcpy(channel,"WER");
  }
  else if (usr_typ == 'U')  * IBANK IOS *
  {
    strcpy(channel,"WEU");
  }
  else if (usr_typ == 'V')  * IBANK WINDOWS *
  {
    strcpy(channel,"WEV");
  }
  else if (usr_typ == 'K')  * EIPO *
  {
    strcpy(channel,"EIP");
  }                                                   * Added in ver 2.2 -Ends *
  else
  {
    strcpy(channel,"WEB");
  }
}
*** Ver 1.7 ***/
/*** Ver 1.6 Ends Here ***/

/** Ver 1.9 Starts here **/

int fn_lock_fno ( char c_ServiceName [ 33 ],
                  char c_clm_mtch_accnt [ 10 + 1 ] )
{
  char c_err_msg [ 256 ];
  int i_trnsctn    =0;
  int i_returncode =0;
  int i_trans_level=0;

  EXEC SQL BEGIN DECLARE SECTION;
    int sql_count;
    char  sql_clm_mtch_accnt[11] ;
  EXEC SQL END DECLARE SECTION;

  if ( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"New Locking Function");
  }

  strcpy ( sql_clm_mtch_accnt, c_clm_mtch_accnt );

  EXEC SQL
    SELECT 1
    INTO :sql_count
    FROM FCL_FO_CLNT_LCKMSTR
    WHERE FCL_CLM_MTCH_ACCNT = :sql_clm_mtch_accnt
    FOR UPDATE OF FCL_CLM_MTCH_ACCNT;

  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
  {
    errlog(c_ServiceName,"L31005", SQLMSG, DEF_USR, DEF_SSSN,
          c_err_msg);
    return ( -1 );
  }
  else if ( SQLCODE == NO_DATA_FOUND )
  {
    i_trans_level = tpgetlev();
    if(DEBUG_MSG_LVL_4)
    {
      fn_userlog(c_ServiceName,"Transaction Level is |%d| ",i_trans_level);
    }

    if(i_trans_level != 0)
    {
      if ( DEBUG_MSG_LVL_0 )
      {
        fn_userlog(c_ServiceName,"transaction suspended.");
      }
   
      i_returncode = tpsuspend ( &tranid, 0 );

      if ( i_returncode == -1 )
      {
        fn_errlog( c_ServiceName, "S31005", LIBMSG, c_err_msg  );
        return -1;
      }
    }

    i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );

    if ( i_trnsctn == -1 )
    {
      fn_errlog( c_ServiceName, "S31010", LIBMSG, c_err_msg  );
      return -1;
    }

    EXEC SQL
      INSERT INTO FCL_FO_CLNT_LCKMSTR
      (
        FCL_CLM_MTCH_ACCNT
      )
      VALUES
      (
        :sql_clm_mtch_accnt
      );

     if ( SQLCODE != 0 )
     {
       errlog(c_ServiceName,"L31010", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
       fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
       return ( -1 );
     }

     if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
     {
        fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg  );
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        return -1;
     }

     if(i_trans_level != 0)
     {
      if ( DEBUG_MSG_LVL_0 )
      {
        fn_userlog(c_ServiceName,"In Resc Resuming the transaction which was suspended.");
      }

      i_returncode = tpresume ( &tranid, 0 );

      if ( i_returncode == -1 )
      {
        fn_errlog( c_ServiceName, "S31020", LIBMSG, c_err_msg  );
        return -1;
      }
     }

    EXEC SQL
    SELECT 1
    INTO :sql_count
    FROM FCL_FO_CLNT_LCKMSTR
    WHERE FCL_CLM_MTCH_ACCNT = :sql_clm_mtch_accnt
    FOR UPDATE OF FCL_CLM_MTCH_ACCNT;

    if ( SQLCODE != 0)
    {
      errlog(c_ServiceName,"L31005", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      return ( -1 );
    }
  }

 return ( 0 );
} 

int fn_lock_fno_nowait ( char c_ServiceName [ 33 ],
                  char c_clm_mtch_accnt [ 10 + 1 ] )
{
  char c_err_msg [ 256 ];
  int i_trnsctn    =0;
  int i_returncode =0;
  int i_trans_level=0;

  EXEC SQL BEGIN DECLARE SECTION;
    int sql_count;
    char  sql_clm_mtch_accnt[11] ;
  EXEC SQL END DECLARE SECTION;

  if ( DEBUG_MSG_LVL_3 )
  {
    fn_userlog(c_ServiceName,"New Locking Function");
  }

  strcpy ( sql_clm_mtch_accnt, c_clm_mtch_accnt );
  
  EXEC SQL
    SELECT 1
    INTO :sql_count
    FROM FCL_FO_CLNT_LCKMSTR
    WHERE FCL_CLM_MTCH_ACCNT = :sql_clm_mtch_accnt
    FOR UPDATE OF FCL_CLM_MTCH_ACCNT NOWAIT;

  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
  {
    if (SQLCODE == -54)
    {
      if(DEBUG_MSG_LVL_0)  /*** Ver 3.1 ***/
      {
        fn_userlog( c_ServiceName, "Resource busy and acquire with NOWAIT specified or timeout expired");
      }
    }

    errlog(c_ServiceName,"L31005", SQLMSG, DEF_USR, DEF_SSSN,
          c_err_msg);
    return ( -1 );
  }
  else if ( SQLCODE == NO_DATA_FOUND )
  {
    i_trans_level = tpgetlev();
    if(DEBUG_MSG_LVL_4)
    {
      fn_userlog(c_ServiceName,"Transaction Level is |%d| ",i_trans_level);
    }

   if(i_trans_level != 0)
    {
      if ( DEBUG_MSG_LVL_0 )
      {
        fn_userlog(c_ServiceName,"transaction suspended.");
      }

      i_returncode = tpsuspend ( &tranid, 0 );

      if ( i_returncode == -1 )
      {
        fn_errlog( c_ServiceName, "S31025", LIBMSG, c_err_msg  );
        return -1;
      }
    }

    i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );

    if ( i_trnsctn == -1 )
    {
      fn_errlog( c_ServiceName, "S31030", LIBMSG, c_err_msg  );
      return -1;
    }

    EXEC SQL
      INSERT INTO FCL_FO_CLNT_LCKMSTR
      (
        FCL_CLM_MTCH_ACCNT
      )
      VALUES
      (
        :sql_clm_mtch_accnt
      );

     if ( SQLCODE != 0 )
     {
       errlog(c_ServiceName,"L31010", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
       fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
       return ( -1 );
     }

     if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
     {
        fn_errlog( c_ServiceName, "S31035", LIBMSG, c_err_msg  );
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        return -1;
     }

     if(i_trans_level != 0)
     {
      if ( DEBUG_MSG_LVL_0 )
      {
        fn_userlog(c_ServiceName,"In Resc Resuming the transaction which was suspended.");
      }

      i_returncode = tpresume ( &tranid, 0 );

      if ( i_returncode == -1 )
      {
        fn_errlog( c_ServiceName, "S31040", LIBMSG, c_err_msg  );
        return -1;
      }
     }
         
     EXEC SQL
    SELECT 1
    INTO :sql_count
    FROM FCL_FO_CLNT_LCKMSTR
    WHERE FCL_CLM_MTCH_ACCNT = :sql_clm_mtch_accnt
    FOR UPDATE OF FCL_CLM_MTCH_ACCNT NOWAIT;

    if ( SQLCODE != 0)
    {

      if (SQLCODE == -54)
      {
       if(DEBUG_MSG_LVL_0)  
        {
          fn_userlog( c_ServiceName, "Resource busy and acquire with NOWAIT specified or timeout expired");
        }
      }
      errlog(c_ServiceName,"L31005", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      return ( -1 );
    }
  }

 return ( 0 );
}

/** Vre 1.9 Ends Here **/
