#include "fn_collateral.h"
#include <fml_rout.h>		/* Ver 1.1 AIX migration 32 bit */

char c_ServiceName [256 + 1];
char c_xchng[4];
char c_pipe[3];

/************************** Initialize  Batch Process ************************/

void init_bat(char * c_name, char * c_xchng_input, char * c_pipe_input)
{
	
  TPINIT *ptr_tpinfo = (TPINIT*)NULL;
  char c_err_msg[256 + 1];
	char c_tag[35];


  if ( c_name  == NULL)
      exit(-1);

	strcpy(c_ServiceName,c_name);
	strcpy(c_xchng,c_xchng_input);
	strcpy(c_pipe,c_pipe_input);

	fn_userlog(c_ServiceName,"The c_ServiceName is :%s:",c_ServiceName);
	fn_userlog(c_ServiceName,"The c_xchng is :%s:",c_xchng);
	fn_userlog(c_ServiceName,"The c_pipe is :%s:",c_pipe);

  if( fn_create_pipe() == -1)
      exit(-1);

	fn_userlog(c_ServiceName,"Stage I in init_bat");

  ptr_tpinfo = (TPINIT *)tpalloc("TPINIT", NULL, TPINITNEED ( 0 ) );

  if (ptr_tpinfo == (TPINIT *)NULL)
  {
    fn_errlog(c_ServiceName, "S31005", TPMSG, c_err_msg);
    fn_destroy_pipe();
    exit(-3);
  }
	fn_userlog(c_ServiceName,"Stage II in init_bat");

  if(tuxgetenv("ORA_GRP")== NULL)
  {
    fn_errlog(c_ServiceName, "S31010", TPMSG, c_err_msg);
    fn_destroy_pipe();
		tpfree((char*)ptr_tpinfo);
    exit(-3);
  }
	fn_userlog(c_ServiceName,"Stage III in init_bat");

  if(tuxgetenv("EBALOG_PATH")== NULL)
  {
    fn_errlog(c_ServiceName, "S31015", TPMSG, c_err_msg);
    fn_destroy_pipe();
		tpfree((char*)ptr_tpinfo);
    exit(-3);
  }
	fn_userlog(c_ServiceName,"Stage IV in init_bat");

  strcpy(ptr_tpinfo->passwd, "\0" );
  strcpy(ptr_tpinfo->usrname, "\0" );
  strcpy(ptr_tpinfo->grpname, tuxgetenv("ORA_GRP"));
	ptr_tpinfo->flags = 0;
  strcpy(ptr_tpinfo->cltname, c_ServiceName);

	fn_userlog(c_ServiceName,"The Group Associated is :%s:",ptr_tpinfo->grpname);
	fn_userlog(c_ServiceName,"The username Associated is :%s:",ptr_tpinfo->usrname);
	fn_userlog(c_ServiceName,"The passwd Associated is :%s:",ptr_tpinfo->passwd);
	fn_userlog(c_ServiceName,"The cltname Associated is :%s:",ptr_tpinfo->cltname);
	fn_userlog(c_ServiceName,"The flag Associated is :%ld:",ptr_tpinfo->flags);

  if(tpinit((TPINIT *) ptr_tpinfo)== -1)
  {
    fn_errlog(c_ServiceName, "S31020", TPMSG,c_err_msg);
    fn_destroy_pipe();
		tpfree((char*)ptr_tpinfo);
    exit(-3);
  }
	tpfree((char*)ptr_tpinfo);
	fn_userlog(c_ServiceName,"Stage V in init_bat");

	if(fn_rgstr_bat('R',c_ServiceName,c_xchng,c_pipe) != 1)
  {
    sprintf(c_err_msg, "Instance of Process %s Already Running",c_ServiceName);
    fn_destroy_pipe();
    tpterm();
		tpfree((char*)ptr_tpinfo);
    exit(1);
  }
	fn_userlog(c_ServiceName,"Stage V-II in init_bat");
  if(tpopen() == -1)
  {
    fn_errlog(c_ServiceName, "S31025", TPMSG,c_err_msg);
    fn_destroy_pipe();
    tpterm();
		tpfree((char*)ptr_tpinfo);
    exit(-7);
  }


	fn_userlog(c_ServiceName,"Stage VI in init_bat");
  sprintf( c_tag, "%s_%s",c_ServiceName , "na");


	fn_userlog(c_ServiceName,"INIT DONE");

  tpfree((char*)ptr_tpinfo);
}

/*************** Exit & free Resources of batch process *********/

void destroy_bat()
{
		fn_rgstr_bat('U',c_ServiceName,c_xchng,c_pipe);
    fn_destroy_pipe();
    tpclose();
    tpterm();
    exit(1);
}

//int fn_rgstr_bat(char c_flag, char *c_pgm_name,
//                 char *c_xchng_cd, char *c_pipe_id)
//{
//  long    int len_obuf;
//  int     i_ch_val;
//  char    c_retmsg[256];
//  int     i_err[4];
//  int     i ;
//
//  FBFR32  *ptr_fml_ibuffer;
//  FBFR32  *ptr_fml_obuffer;
//
//  ptr_fml_ibuffer = (FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);
//  if (ptr_fml_ibuffer == NULL)
//  {
//    errlog(c_pgm_name, "L31005", TPMSG,(char *)DEF_USR,DEF_SSSN,c_retmsg);
//    return (-1);
//  }
//
//  ptr_fml_obuffer = (FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);
//  if (ptr_fml_obuffer == NULL)
//  {
//    errlog(c_pgm_name, "L31010", TPMSG,(char *)DEF_USR,DEF_SSSN,c_retmsg);
//    tpfree((char *)ptr_fml_ibuffer);
//    return (-1);
//  }
//
//  i_err[0] = Fadd32(ptr_fml_ibuffer,FML_GAME_REG_FLG,(char *)&c_flag,0);
//  i_err[1] = Fadd32(ptr_fml_ibuffer,FML_GMS_NM,(char *)c_pgm_name,0);
//  i_err[2] = Fadd32(ptr_fml_ibuffer,FML_ORD_XCHNG_CD,(char *)c_xchng_cd,0);
//  i_err[3] = Fadd32(ptr_fml_ibuffer,FML_USR_ZIP_CD,(char *)c_pipe_id,0);
//
//	  for (i=0; i < 4; i++)
//  {
//    if (i_err[i] == -1)
//    {
//      userlog("Error in field %d", i);
//      errlog ( c_pgm_name, "L31015", TPMSG, DEF_USR, DEF_SSSN,c_retmsg );
//      return -1;
//    }
//  }
//
//  i_ch_val = tpcall("SVC_RGSTR_BAT", (char *)ptr_fml_ibuffer, 0,
//                            (char **)&ptr_fml_obuffer, &len_obuf, TPNOTRAN);
//
//  if (i_ch_val == -1)
//  {
 //   if( TPCODE == TPESVCFAIL )
//    {
//      if(tpurcode == -2)
//      {
//        tpfree((char *)ptr_fml_ibuffer);
//        tpfree((char *)ptr_fml_obuffer);
//        return (-2) ;
//      }
//      else
//      {
//        Fget32(ptr_fml_obuffer, FML_ERR_MSG, 0, c_retmsg, 0);
//      }
//    }
//    else
//    {
//      errlog(c_pgm_name,"L31020",TPMSG,DEF_USR,DEF_SSSN,c_retmsg);
//    }
//    tpfree((char *)ptr_fml_ibuffer);
//    tpfree((char *)ptr_fml_obuffer);
//    return(-1);
//  }
//  tpfree((char *)ptr_fml_ibuffer);
//  tpfree((char *)ptr_fml_obuffer);
//
//  return(1);
//}

