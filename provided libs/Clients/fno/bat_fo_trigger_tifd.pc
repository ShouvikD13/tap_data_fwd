
/*
*  Description: This Client  Program Calls SFO_TRGGR_TIFD service to process TIFD
*
*  Input Parameters:
*       Exchange Code
*       Segment Code
*			  Settlement Number
*				Stock Code
*       Execution Date
*
* Output Parameters:
*				Return Status
*				Error Code
*
*  Called by:
*				D2k
*
*  Calling Programs/Sub-routines:
*       SFO_TRGGR_TIFD
*
*  Author : EDS
*	
*  Created on: 20-Jun-2021
*
**********************************************************************************************************/ 

/* Standards include files */

#include <stdio.h>      /* C Header File								*/
#include <stdlib.h>			/* C Header File								*/
#include <sqlca.h>			/* Oracle header file						*/
#include <atmi.h>       /* TUXEDO Header File           */
#include <fn_log.h>    /* TUXEDO Header File           */
#include <fml32.h>      /* TUXEDO Header File           */
#include <tpadm.h>      /* TUXEDO Header File           */
#include <Usysflds.h>   /* TUXEDO Field Definitions     */ 
#include <string.h>			
#include <unistd.h>			
#include <fn_read_debug_lvl.h>  
/* User defined h files */
#include <fml_def.h>	
#include <fn_battmpt.h>
#include <fn_tuxlib.h>
#include <fo.h>

#define CDSL_ID "16"

#define TOTAL_FML	20
#define DP_ENTTY	10
#define	LEN_OF_BUFFER	256
#define	LEN_OF_EVENT	256
#define	LEN_OF_STTLMNT_NO	9+1
#define	LEN_OF_STCK_CD	6+1
#define	LEN_OF_CREDIT_DPACC	8+1
#define	LEN_OF_DATE	22+1
#define	TIFD_STATUS	'N'	
#define	TIFD_PROCESSING	'Q'	
#define	BLOCK_UBLOCK_FLAG	'U'
#define	ON_MARKET_FLAG	'Y'
#define ICICI_DP 'I' 


/* GLobal Variables */
char c_ServiceName [ 33 ]; 	/* Name of called service */
char c_flag;
char c_pipe_id[3];
char c_retmsg[LEN_OF_BUFFER]; 
char c_stck_cd[LEN_OF_STCK_CD];
char c_nse_dp_sttlmnt_no[9 + 1];				
char c_nse_xchng_cd[3 + 1];						
char c_stck_cd[6+1];
char c_clm_mtch_accnt[10+1];
char c_dp_id[8+1];
char c_dp_clnt_id[8+1];
char c_xchng_cd[4];
char  c_rowid[20];
long l_sttlmnt_nmbr=0;

char  c_cc_id[9];
char  c_event[LEN_OF_EVENT];
char  c_credit_dpid[LEN_OF_CREDIT_DPACC];
char  c_debit_dt[LEN_OF_DATE];
varchar v_start_time[25];

int li_cnt=0;
int li_tot_records=0;

FBFR32  *ptr_fml_Sendbuf;     

EXEC SQL INCLUDE "table/exg_xchng_mstr.h";	
EXEC SQL INCLUDE "table/cld_dp_accts.h";   


int fn_process_fo_tifd(long l_netqty,
                        char* c_stck_cd,
 	                      char* c_clm_mtch_accnt,
   	                    char* c_dp_id,
     	                  char* c_dp_clnt_id, char* c_isin_nmbr,
       	                char* c_sgmnt_cd);


void BAT_FO_TRIGGER_TIFD( int argc, char *argv[] )
{

	/* Tuxedo specific variables	*/
	
		
  int  i_err[TOTAL_FML];
  int  i;
	int i_ret_val;					
  long l_netqty;				
 

  double 	d_tifd_qty;            						 		
	char  	c_user_id[3+1];         						 	
  char  	c_sttlmnt_nmbr[LEN_OF_STTLMNT_NO];   	
  char  	c_on_market_flg = ON_MARKET_FLAG;    	
  char    c_prdct_tifd = '\0';									
	char 		c_sgmnt_cd[3];
  char    c_isin_nmbr[12+1];
  char c_err_msg [ 256 ];

	/* Application specific variables	*/
	int		i_total = 0;
	int		i_loop = 0;
	int   i_rec_len;
	int   i_rec_count = 0;
	int   i_returncode;
	int		i_market_type;
	int   i_len;
	int   i_cnt;
	int   i_count;		

  li_cnt=0;
  li_tot_records=0;

	char  c_stock_list[200];   
	char c_fb_flg;
	char c_command[100]; 

	c_fb_flg=ICICI_DP; 
	MEMSET(c_command);

	strcpy(c_ServiceName,"bat_fo_trigger_tifd");

	ptr_fml_Sendbuf = (FBFR32 *)NULL; 

		fn_userlog(c_ServiceName,"bat_fo_trigger_tifd started");
	if(argc != 7 )
  {
    printf("Usage: ExchangeCode  ExchangeSegment  SettlementNo StockCode ExecutionDate Product(E/C - EM/CASH optional) StockList(Comma seperated Stocks - optional) \n");
    return; 
  }    

	INITBATDBGLVL(argv[0]);  

	MEMSET(sql_exg_cdsl_dpid_pl_accnt);  
	MEMSET(sql_exg_cdsl_dpclnt_pl_accnt); 
	MEMSET(c_sgmnt_cd);
	MEMSET(c_stock_list);
  MEMSET(c_stck_cd);
	MEMSET(c_clm_mtch_accnt);
	MEMSET(c_dp_id);
  MEMSET(c_dp_clnt_id);
  MEMSET(c_isin_nmbr);

	MEMSET(c_nse_dp_sttlmnt_no);			
	MEMSET(c_nse_xchng_cd);					
	strcpy(c_nse_xchng_cd,"NSE");	
  l_sttlmnt_nmbr=0;

	if(DEBUG_MSG_LVL_0)
	{
		fn_userlog(c_ServiceName,"bat_fo_trigger_tifd started");
	}

	strcpy(c_xchng_cd, argv[2]);
	l_sttlmnt_nmbr = atol(argv[4]);	
	strcpy(c_debit_dt, argv[5]);


	strcpy(c_sgmnt_cd, "N");

  if(strcmp(argv[6], "ALL") == 0)
  {
    c_stck_cd[0] = '%';
    c_stck_cd[1] = '\0';
		
  }
  else
  {
  	strcpy(c_stck_cd, argv[6]);
  }

	c_prdct_tifd ='C'; 


  /*sprintf(c_tag, "%s_%s", c_ServiceName, c_xchng_cd);*/

	strcpy(c_event, "TIFD:Started Processing..");
	fn_bat_pst_msg(c_ServiceName, c_event, c_tag);

  strcpy(c_xchng_cd,"NSE");

	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog(c_ServiceName,"Exchange Cd is :%s:", c_xchng_cd);
		fn_userlog(c_ServiceName,"Segment Cd is :%s:", c_sgmnt_cd);/*1.3*/
		fn_userlog(c_ServiceName,"Settlement  is :%ld:", l_sttlmnt_nmbr);  
		fn_userlog(c_ServiceName,"Execution Date is :%s:", c_debit_dt);
		fn_userlog(c_ServiceName,"TIFD run for :%c:", c_prdct_tifd);
		fn_userlog(c_ServiceName,"StockList    :%s:", c_stock_list); 
		fn_userlog(c_ServiceName,"c_fb_flg :%c:",c_fb_flg); 
	}
		
  EXEC SQL
    SELECT  to_char(SYSDATE, 'DD-Mon-YY HH24.MI.SS')
    INTO    :v_start_time
    FROM    DUAL;

  if(SQLCODE != 0)
  {
 	 errlog(c_ServiceName, "S31005", SQLMSG, DEF_USR, DEF_SSSN, c_retmsg);
   strcpy(c_event, "Unable to retrieve values from Ordr_ordr_dtls");
   fn_bat_pst_msg(c_ServiceName, c_event, c_tag);
   tpfree((char *)ptr_fml_Sendbuf);
   return; 
  }
  SETNULL(v_start_time);

	EXEC SQL SELECT	EXG_DPID_PL_ACCNT,
									EXG_DPCLNT_PL_ACCNT,
									NVL(EXG_CCID,' '),
									EXG_CDSL_DPID_PL_ACCNT,  
									EXG_CDSL_DPCLNT_PL_ACCNT 
						INTO	:c_credit_dpid,
									:sql_exg_dpclnt_pl_accnt :ind_exg_dpclnt_pl_accnt,
									:c_cc_id,
									:sql_exg_cdsl_dpid_pl_accnt,  
									:sql_exg_cdsl_dpclnt_pl_accnt 
 						FROM	EXG_XCHNG_MSTR 
						WHERE	EXG_XCHNG_CD = :c_xchng_cd;

	if(SQLCODE != 0)
	{
    if(SQLCODE == NO_DATA_FOUND)
    {
			errlog(c_ServiceName, "B21016", " ", DEF_USR, DEF_SSSN, c_retmsg);
		}
		else
		{
			errlog(c_ServiceName, "S31010", SQLMSG, DEF_USR, DEF_SSSN, c_retmsg);
		}
		strcpy(c_event, "TIFD:Read failed in EXG_XCHNG_MSTR Table");
		fn_bat_pst_msg(c_ServiceName, c_event, c_tag);
	  return;	
	}

	MEMSET(c_nse_dp_sttlmnt_no);

	if(DEBUG_MSG_LVL_3)
	{
		fn_userlog(c_ServiceName,"c_credit_dpid :%s:",c_credit_dpid);
		fn_userlog(c_ServiceName,"sql_exg_dpclnt_pl_accnt :%s:",sql_exg_dpclnt_pl_accnt);
		fn_userlog(c_ServiceName,"c_cc_id :%s:",c_cc_id);
		fn_userlog(c_ServiceName,"sql_exg_cdsl_dpid_pl_accnt :%s:",sql_exg_cdsl_dpid_pl_accnt);
		fn_userlog(c_ServiceName,"sql_exg_cdsl_dpclnt_pl_accnt :%s:",sql_exg_cdsl_dpclnt_pl_accnt);
		fn_userlog(c_ServiceName,"c_nse_dp_sttlmnt_no :%s:",c_nse_dp_sttlmnt_no);			/* Ver 2.8 */
	}

		fn_userlog(c_ServiceName,"c_stck_cd :%s:", c_stck_cd);	
 /********
	if(strcmp(c_stck_cd,"%") != 0)
	{	
		i_len = strlen(c_stck_cd);
		if(i_len < LEN_OF_STCK_CD)
		{
			for(i_cnt=i_len; i_cnt <= LEN_OF_STCK_CD-2; i_cnt++)
			{
				c_stck_cd[i_cnt] = ' ';
			}
		}
		c_stck_cd[LEN_OF_STCK_CD - 1] = '\0';
	}
  *************/

	if(DEBUG_MSG_LVL_3){
		fn_userlog(c_ServiceName,"c_stck_cd :%s:", c_stck_cd);	
	}


	ptr_fml_Sendbuf = (FBFR32 *)tpalloc("FML32", NULL, MIN_FML_BUF_LEN);
  if(ptr_fml_Sendbuf == NULL)
  {
    errlog(c_ServiceName, "S31015", TPMSG, DEF_USR, DEF_SSSN, c_retmsg);
    strcpy(c_event, "TIFD:Send Memory allocation failure");
    fn_bat_pst_msg(c_ServiceName, c_event, c_tag);
    return; 
  }
	

	if(c_prdct_tifd == 'C')					/** Ver 1.8 For Cash TIFD ****/
	{
    
		if(strcmp(c_sgmnt_cd,"N") == 0 || strcmp(c_sgmnt_cd,"%") == 0)
		{
			EXEC SQL DECLARE tifd_cur CURSOR
			FOR
			SELECT  FFD_SELL_QTYBLKD Netqty,
							FFD_UNDRLYNG,
							FFD_CLM_MTCH_ACCNT,
							FFD_DP_ID,
							FFD_DP_CLNT_ID,
              FFD_ISIN_CD,
							NVL(CLD_BNK_NM,'ICICI'),
              a.rowid 
			FROM FFD_FOEXG_FOBG02_DTLS a,CLD_DP_ACCTS
			WHERE FFD_CLM_MTCH_ACCNT = CLD_CLM_MTCH_ACCNT
      /***AND   FFD_OBLGN_DT  =:c_debit_dt**/ 
      AND   FFD_SETTLMENT_NO = :l_sttlmnt_nmbr
      AND   FFD_UNDRLYNG LIKE :c_stck_cd 
			AND		CLD_DP_ID = FFD_DP_ID 
			AND		CLD_DP_CLNT_ID = FFD_DP_CLNT_ID
      AND   FFD_SELL_VOLUME = FFD_SELL_QTYBLKD; 

			EXEC SQL OPEN tifd_cur;
			if(SQLCODE != 0)
			{
			 errlog(c_ServiceName, "S31020", SQLMSG, DEF_USR, DEF_SSSN, c_retmsg);
			 strcpy(c_event, "TIFD:Failed in cursor Declaration");
			 fn_bat_pst_msg(c_ServiceName, c_event, c_tag);
			 tpfree((char *)ptr_fml_Sendbuf);
			 return; 
			}

			while(1)
			{
				MEMSET(sql_cld_bnk_nm);
				MEMSET(c_dp_clnt_id);
				MEMSET(c_dp_id);
				MEMSET(c_clm_mtch_accnt);
				MEMSET(c_stck_cd);
        MEMSET(c_isin_nmbr);
        MEMSET(c_rowid);

				l_netqty=0;

				EXEC SQL
				FETCH tifd_cur
				INTO  :l_netqty,
							:c_stck_cd,
							:c_clm_mtch_accnt,
							:c_dp_id,
							:c_dp_clnt_id,
              :c_isin_nmbr,
							:sql_cld_bnk_nm,
              :c_rowid; 

				 if(SQLCODE != 0)
				{
					if (SQLCODE == NO_DATA_FOUND)
					{
						EXEC SQL CLOSE tifd_cur;
						sprintf(c_event, "%s %d", "TIFD:Record(s) of segment N Non-NRI sent for processing", i_rec_count);
						fn_bat_pst_msg(c_ServiceName, c_event, c_tag);
						break;
					}
					else
					{
						EXEC SQL CLOSE tifd_cur;
						errlog(c_ServiceName,"S31025", SQLMSG, DEF_USR, DEF_SSSN, c_retmsg);
						strcpy(c_event,"TIFD:Failed while Fetching");
						fn_bat_pst_msg(c_ServiceName, c_event, c_tag);
						tpfree((char *)ptr_fml_Sendbuf);
					  return;	
					}
				}

				SETNULL(sql_cld_bnk_nm);
				if(c_fb_flg == 'F' && strcmp(sql_cld_bnk_nm.arr,"ICICI") == 0)
				{
					continue;
				}

				i_ret_val = fn_process_fo_tifd(l_netqty,
																				c_stck_cd,
																				c_clm_mtch_accnt,
																				c_dp_id,
																				c_dp_clnt_id,c_isin_nmbr,
																				"N");
				if(i_ret_val != 0)
				{
					EXEC SQL CLOSE tifd_cur;
					errlog(c_ServiceName,"S31030", SQLMSG, DEF_USR, DEF_SSSN, c_retmsg);
					strcpy(c_event,"TIFD:Failed while processing ");
					fn_bat_pst_msg(c_ServiceName, c_event, c_tag);
					tpfree((char *)ptr_fml_Sendbuf);
				  return;	
				}
				i_rec_count++;
			}
			i_rec_count=0;
			EXEC SQL CLOSE tifd_cur;
			if(SQLCODE != 0)
			{
				errlog(c_ServiceName,"S31035", SQLMSG, DEF_USR, DEF_SSSN, c_retmsg);
				strcpy(c_event,"TIFD:Failed while processing ");
				fn_bat_pst_msg(c_ServiceName, c_event, c_tag);
				tpfree((char *)ptr_fml_Sendbuf);
			  return;	
			}
		}

		i_ret_val = fn_pre_prcs_rcrd("SFO_TRGGR_TIFD",c_err_msg,"sfr_bof_fimtm",li_cnt,li_tot_records); 
		if(i_ret_val == -1)
		{
			fn_userlog(c_ServiceName,"Error in fn_pre_prcs_rcrd:%s", c_err_msg);
			errlog(c_ServiceName, "S31040", LIBMSG, (char *)DEF_USR, DEF_SSSN, c_err_msg);
			strcpy(c_event,"TIFD:Failed while processing ");
			fn_bat_pst_msg(c_ServiceName, c_event, c_tag);
			tpfree((char *) ptr_fml_Sendbuf);
		  return;	
		}

		/* tpfree((char *)ptr_fml_Sendbuf);   Commented in Ver 1.8 */ 
		strcpy(c_event,"Batch Process Completed for Cash TIFD.");
		fn_bat_pst_msg(c_ServiceName, c_event, c_tag);

	}			/** Ver 1.8 end of c_prdct_tifd=C **/

/*	if(c_fb_flg == ICICI_DP)
	{
		sprintf(c_command,"bat_fb_tifd_dnld C %s %ld %ld %s", c_xchng_cd,l_sttlmnt_nmbr,l_sttlmnt_nmbr,c_debit_dt);
  	rtrim(c_command);
  	fn_userlog(c_ServiceName,"c_command:%s:",c_command);
  	system(c_command);
	}
*/

	tpfree((char *)ptr_fml_Sendbuf);
	fn_userlog(c_ServiceName,"Batch Process bat_fo_trigger_tifd Completed.");
  return;	

}			/** End of main **/

int fn_process_fo_tifd(long l_netqty,
                        char* c_stck_cd,
                        char* c_clm_mtch_accnt,
                        char* c_dp_id,
                        char* c_dp_clnt_id, char* c_isin_nmbr,
                        char* c_sgmnt_cd
                        )
{
  int i_ret_val;
  int i;
  int i_err[TOTAL_FML];
	int i_tud_exist;
  int   i_esm_mkt_typ=0;

  long l_lock_cd=1;
  long l_stb_qty_blckd=0;

  double d_tifd_qty = 0.0;

  char  c_user_id[3+1];
  char  c_sttlmnt_nmbr[LEN_OF_STTLMNT_NO];
  char  c_block_unblock = BLOCK_UBLOCK_FLAG;
  char  c_on_market_flg = ON_MARKET_FLAG;
  char  c_xchng_sgmnt_cd[2+1];
  varchar vc_off_tifd_ref[20+1];

	if(DEBUG_MSG_LVL_3){
		fn_userlog(c_ServiceName,"Total executed quantity : [%ld]",l_netqty);
		fn_userlog(c_ServiceName,"c_xchng_cd [%s]",c_xchng_cd);
		fn_userlog(c_ServiceName,"stb_sttlmnt_nmbr : [%ld]",l_sttlmnt_nmbr);
		fn_userlog(c_ServiceName,"c_stck_cd : [%s]",c_stck_cd);
		fn_userlog(c_ServiceName,"c_clm_mtch_accnt :[%s]",c_clm_mtch_accnt);
		fn_userlog(c_ServiceName,"c_dp_id : [%s]",c_dp_id);
		fn_userlog(c_ServiceName,"c_dp_clnt_id : [%s]",c_dp_clnt_id);
		fn_userlog(c_ServiceName,"Segment code : [%s]",c_sgmnt_cd);
	}

    li_cnt++;

    MEMSET(c_xchng_sgmnt_cd);

		i_tud_exist=0;
		
		SETNULL(sql_cld_bnk_nm); 

		if(DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName,"c_clm_mtch_accnt :%s:",c_clm_mtch_accnt);
			fn_userlog(c_ServiceName,"Debit dpid is          :%s:", c_dp_id);
			fn_userlog(c_ServiceName,"Debit DP account is    :%s:",c_dp_clnt_id);
			fn_userlog(c_ServiceName,"Isin  is               :%s:", c_isin_nmbr);
			fn_userlog(c_ServiceName,"c_stck_cd				:%s:",c_stck_cd);
			fn_userlog(c_ServiceName,"c_xchng_sgmnt_cd :%s:",c_xchng_sgmnt_cd);
			fn_userlog(c_ServiceName,"Market type is					:%ld:",i_esm_mkt_typ);
			fn_userlog(c_ServiceName,"Rowid is								:%s:", c_rowid);
			fn_userlog(c_ServiceName,"sql_cld_bnk_nm :%s:",sql_cld_bnk_nm.arr); 
			fn_userlog(c_ServiceName,"vc_off_tifd_ref :%s:",vc_off_tifd_ref.arr); 
		}


		SETNULL(vc_off_tifd_ref);

    d_tifd_qty = (double)l_netqty ;
    l_netqty = l_netqty - d_tifd_qty;

    strcpy(c_user_id, "EBA");
    strcpy(c_xchng_sgmnt_cd,"N");

    rtrim(c_debit_dt);

    sprintf(c_sttlmnt_nmbr,"%ld",l_sttlmnt_nmbr);

		rtrim(c_xchng_sgmnt_cd); 
		
		if(DEBUG_MSG_LVL_3){	
      fn_userlog(c_ServiceName,"On Market flag  is :%c:", c_on_market_flg);
      fn_userlog(c_ServiceName,"TIFD qty   is      :%lf:", d_tifd_qty);
      fn_userlog(c_ServiceName,"Debit date  is     :%s:", c_debit_dt);
      fn_userlog(c_ServiceName,"Credit dpid  is    :%s:", c_credit_dpid);
      fn_userlog(c_ServiceName,"Credit dpacc is    :%s:", sql_exg_dpclnt_pl_accnt);
      fn_userlog(c_ServiceName,"Sttlmnt nmbr       :%s:", c_sttlmnt_nmbr);
      fn_userlog(c_ServiceName,"User id is         :%s:", c_user_id);
			fn_userlog(c_ServiceName,"sql_exg_cdsl_dpid_pl_accnt :%s:",sql_exg_cdsl_dpid_pl_accnt);
			fn_userlog(c_ServiceName,"sql_exg_cdsl_dpclnt_pl_accnt :%s",sql_exg_cdsl_dpclnt_pl_accnt);
			fn_userlog(c_ServiceName,"vc_off_tifd_ref:%s:",vc_off_tifd_ref.arr); 
      fn_userlog(c_ServiceName,"Sending Buffer......from batch program");
   	} 

    i_err[0]=Fchg32(ptr_fml_Sendbuf,FML_USR_ID,(FLDOCC32)0, c_user_id,0);
    i_err[1]=Fchg32(ptr_fml_Sendbuf,FML_DPID,(FLDOCC32)0, c_dp_id,0);

		i_err[2]=Fchg32(ptr_fml_Sendbuf,FML_ORD_DP_CLNT_ID,(FLDOCC32)0,(char *)c_dp_clnt_id,0); 
    i_err[3]=Fchg32(ptr_fml_Sendbuf,FML_DPQTY,(FLDOCC32)0, (char *)&d_tifd_qty,0);
    i_err[4]=Fchg32(ptr_fml_Sendbuf,FML_LOCK_CD,(FLDOCC32)0, (char *)&l_lock_cd,0);
    i_err[5]=Fchg32(ptr_fml_Sendbuf,FML_ISIN,(FLDOCC32)0, c_isin_nmbr,0);
    i_err[6]=Fchg32(ptr_fml_Sendbuf,FML_BLOCK_UNBLOCK,(FLDOCC32)0, (char *)&c_block_unblock,0);
    i_err[7]=Fchg32(ptr_fml_Sendbuf,FML_MATCH_ACCNT,(FLDOCC32)0, c_clm_mtch_accnt,0);
    i_err[8]=Fchg32(ptr_fml_Sendbuf,FML_STTLMNT_NMBR, 0, (char *)&l_sttlmnt_nmbr,0);
    i_err[9]=Fchg32(ptr_fml_Sendbuf,FML_XCHNG_SGMNT_CD,(FLDOCC32)0, c_xchng_sgmnt_cd,0);
    i_err[10]=Fchg32(ptr_fml_Sendbuf,FML_XCHNG_CD,(FLDOCC32)0, c_xchng_cd,0);
    i_err[11]=Fchg32(ptr_fml_Sendbuf,FML_STCK_CD,(FLDOCC32)0, c_stck_cd,0);
    i_err[12]=Fchg32(ptr_fml_Sendbuf,FML_DEBIT_DT, (FLDOCC32)0,c_debit_dt,0);

		if(strncmp(c_dp_id,CDSL_ID, 1) != 0) 
		{
			i_err[13]=Fchg32(ptr_fml_Sendbuf,FML_CREDIT_DPID, (FLDOCC32)0,c_credit_dpid,0);

    	if(ind_exg_dpclnt_pl_accnt != -1)
    	{
      	i_err[14]=Fchg32(ptr_fml_Sendbuf,FML_CH_DPACC, (FLDOCC32)0, sql_exg_dpclnt_pl_accnt,0);
    	}
		}
		else
		{
			i_err[13]=Fchg32(ptr_fml_Sendbuf,FML_CREDIT_DPID, (FLDOCC32)0,sql_exg_cdsl_dpid_pl_accnt,0);
			i_err[14]=Fchg32(ptr_fml_Sendbuf,FML_CH_DPACC, (FLDOCC32)0, sql_exg_cdsl_dpclnt_pl_accnt,0);
		}

    i_err[15]=Fchg32(ptr_fml_Sendbuf,FML_ON_MARKET_FLAG, (FLDOCC32)0,(char *)&c_on_market_flg,0);
    i_err[16]=Fchg32(ptr_fml_Sendbuf,FML_MRKT_TYP, (FLDOCC32)0,(char *)&i_esm_mkt_typ,0);
    i_err[17]=Fchg32(ptr_fml_Sendbuf,FML_CC_ID, (FLDOCC32)0,(char *)c_cc_id,0);
    i_err[18]=Fchg32(ptr_fml_Sendbuf,FML_STATLIN, (FLDOCC32)0,c_rowid,0);
    i_err[19]=Fchg32(ptr_fml_Sendbuf,FML_STTLMNT_NO, 0, c_sttlmnt_nmbr,0);

		if(i_tud_exist > 0)
		{
			i_err[19]=Fchg32(ptr_fml_Sendbuf,FML_PARAM_DESC, 0, vc_off_tifd_ref.arr,0);
		}
		else
		{
			i_err[19]=0;
		}

    for(i = 0; i < TOTAL_FML; i++)
    {
      if(i_err[i]== -1)
      {
        fn_userlog(c_ServiceName,"Fget failed in  i is  :%d:",i);
        errlog(c_ServiceName,"S31045",FMLMSG,(char *)DEF_USR,DEF_SSSN,c_retmsg);
        return(-1);
      }
    }

    i_ret_val = fn_pre_prcs_rcrd("SFO_TRGGR_TIFD",c_retmsg,"sfr_bof_fimtm",li_cnt,li_tot_records);

    if(i_ret_val == -1)
    {
      fn_userlog(c_ServiceName,"Error in fn_pre_prcs_rcrd : |%s|", c_retmsg);
      errlog(c_ServiceName, "S31050", LIBMSG, (char *)DEF_USR, DEF_SSSN, c_retmsg);
      return(-1);
    }

		fn_userlog(c_ServiceName,"Tpacall to SFO_TRGGR_TIFD from bat_fo_trigger_tifd"); 

    if(tpacall("SFO_TRGGR_TIFD", (char *)ptr_fml_Sendbuf, 0, 0) == -1)
    {
      errlog(c_ServiceName,"S31055", TPMSG, DEF_USR, DEF_SSSN, c_retmsg);
      return(-1);
    }
  return 0;
}

int fn_bat_init ( int argc, char *argv[] )
{
  fn_var = BAT_FO_TRIGGER_TIFD;

  return 0;
}

void fn_bat_term (  int argc, char *argv[] )
{
   return ;
}

int fn_prcs_trg ( char *c_pgm_nm, int i_trg_typ )
{
  return 0;
}

