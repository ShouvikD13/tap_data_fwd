/***************************************************************************
* Service name :  BAT_OVNGHT_EOD                                           *
*                                                                          *
* Description  :  This Batch Program updates the Sequence                  *
*                 Tables and exchange trade date and status for            *
*                 Overnight Market                                         *
*                                                                          *
* Input        :  Exchange Code                                            *
*                 Exchange Next Date                                       *
*                                                                          *
* Output      :                                                            *
*                                                                          *
* Log         :   29-Oct-2012 Initial Release  - Swati A.B                 *
* Ver 1.1 		:   03-Feb-2012 Bug Fix 				 - Swati A.B                 *
* Ver 1.3     :   19-Jun-2015 Contract Master and Trade Quote Table Merger *
*                             Changes          - Ritesh D                  *
* Ver 1.4     :   06-Dec-2017 DB Spread Order sequence reset (Mrinal)      *
* Ver 1.5     :   28-Feb-2023 Pipe ID 21,22,23 and 24 Sequence   (Devesh)  *
* Ver 1.6     :   24-Mar-2023 Pipe ID 25,26 and 27 Sequence      (Devesh)  *
* Ver 1.7     :   29-Mar-2023 RQ:3117 Resetting sequence number for GTT order (Devesh) *
***************************************************************************/
#include <string.h>
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fn_read_debug_lvl.h>		

#define  EXPIRY  'X'

char c_ServiceName[33];
char c_xchng[4];

void fn_exit( char* c_err_msg, char c_mem_flg );

void BAT_OVNGHT_EOD( int argc, char *argv[] )
{
  EXEC SQL INCLUDE "table/exg_xchng_mstr.h";
  EXEC SQL INCLUDE "table/opm_ord_pipe_mstr.h";

  EXEC SQL BEGIN DECLARE SECTION;
    char   c_rundt[11 + 1];
  EXEC SQL END DECLARE SECTION;

  char c_errmsg[256];
  int  i_returncode;
  int  i_dategreater=0;
  int  i_record_exists=0;
	int	i_ret_cd	=	0;
	strcpy ( c_ServiceName, argv[0] );
	INITBATDBGLVL(argv[0]);     

	char c_exg_ovrnght_trd_dt[23];   /*** NSE overnight trade date ****/	
	char c_bse_ovrnght_trd_dt[23]; 	 /*** BSE overnight trade date ****/	
	char c_bse_crrnt_stts; 					 /*** BSE exchnage status ****/
	varchar c_bse_nxt_trd_dt[22+1];	 /*** BSE exchnage trade date ****/
	
	strcpy ( sql_exg_xchng_cd, argv[2] );
	strcpy ( c_rundt, argv[4] );

  fn_bat_pst_msg ( c_ServiceName, " ***** Overnight TradeProcess Started *****",c_tag );

	if (DEBUG_MSG_LVL_0)      
  {
		fn_userlog( c_ServiceName, "Selecting data for NSE from exchange master... ");
	}

  EXEC SQL
    SELECT  exg_crrnt_stts,
            exg_nxt_trd_dt,
						exg_tmp_trd_dt
    INTO    :sql_exg_crrnt_stts,
            :sql_exg_nxt_trd_dt,
						:c_exg_ovrnght_trd_dt 
    FROM    exg_xchng_mstr
    WHERE   exg_xchng_cd = 'NFO';

  if ( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName,"S31005",SQLMSG,c_errmsg);
    fn_exit ( "Unable to fetch exchange status ",'N');
	  return;
  }

  SETNULL(sql_exg_nxt_trd_dt);

	if (DEBUG_MSG_LVL_0)     
  {
		fn_userlog( c_ServiceName, "sql_exg_nxt_trd_dt:%s:", sql_exg_nxt_trd_dt.arr );
		fn_userlog( c_ServiceName, "Exchange Status :%c:", sql_exg_crrnt_stts );
		fn_userlog( c_ServiceName, "Overnight trade date :%s:", c_exg_ovrnght_trd_dt );
	}


	if (DEBUG_MSG_LVL_3)
  {
    fn_userlog( c_ServiceName, "Selecting data for BSE from exchange master ... ");
  }

  EXEC SQL
    SELECT  exg_crrnt_stts,
            exg_nxt_trd_dt,
            exg_tmp_trd_dt
    INTO    :c_bse_crrnt_stts,
            :c_bse_nxt_trd_dt,
            :c_bse_ovrnght_trd_dt
    FROM    exg_xchng_mstr
    WHERE   exg_xchng_cd = 'BFO';

  if ( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName,"S31010",SQLMSG,c_errmsg);
    fn_exit ( "Unable to fetch exchange status ",'N');
    return;
  }

  SETNULL(c_bse_nxt_trd_dt);

  if (DEBUG_MSG_LVL_3)      
  {
    fn_userlog( c_ServiceName, "c_bse_nxt_trd_dt:%s:", c_bse_nxt_trd_dt.arr );
    fn_userlog( c_ServiceName, "BSE Excahnge Status :%c:", c_bse_crrnt_stts);
    fn_userlog( c_ServiceName, "Overnight trade date :%s:", c_bse_ovrnght_trd_dt);
  }

  EXEC SQL
    SELECT  1
    INTO    :i_dategreater
    FROM    dual
    WHERE   trunc(SYSDATE) > to_date( :c_rundt, 'DD-Mon-YYYY' );

  if ( (SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S31015",SQLMSG,c_errmsg);
    fn_exit ( "Unable to compare date ",'N');
	  return;
  }

  if ( i_dategreater == 1 )
  {
    fn_exit ( "Next trade date cannot be less than system date",'N');
		return;
  }

  if ( sql_exg_crrnt_stts != EXPIRY || c_bse_crrnt_stts != EXPIRY )
  {
		if (sql_exg_crrnt_stts != EXPIRY)
		{
    	fn_exit ( "NSE  Exchange not in Expiry mode - contact system support",'N');
			return;
		}
		else if (c_bse_crrnt_stts != EXPIRY)
		{
			fn_exit ( " BSE Exchange not in Expiry mode - contact system support",'N');
      return;
		}
  }
  
  i_dategreater = 0;
  
	EXEC SQL
    SELECT  1
    INTO    :i_dategreater
    FROM    dual
    WHERE   to_date( :sql_exg_nxt_trd_dt ,'DD-Mon-YYYY') >= to_date( :c_rundt, 'DD-Mon-YYYY' )
		OR 			to_date( :c_bse_nxt_trd_dt,'DD-Mon-YYYY') >= to_date( :c_rundt, 'DD-Mon-YYYY' ) ;

  if ( (SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S31020",SQLMSG,c_errmsg);
    fn_exit ( "Unable to compare date ",'N');
	  return;
  }
  
  if ( i_dategreater == 1 )
  {
    fn_exit ( "Next trade date cannot be <= to current trd dt",'N');
		return;
  }


	EXEC SQL
    SELECT  1
    INTO    :i_dategreater
    FROM    dual
    WHERE   to_date( :c_exg_ovrnght_trd_dt,'DD-Mon-YYYY') < to_date( :c_rundt, 'DD-Mon-YYYY' )
    AND 		to_date( :c_bse_nxt_trd_dt,'DD-Mon-YYYY') < to_date( :c_rundt, 'DD-Mon-YYYY' );

  if ( (SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S31025",SQLMSG,c_errmsg);
    fn_exit ( "Unable to compare date ",'N');
    return;
  }

  if ( i_dategreater == 1 )
  {
    fn_bat_pst_msg ( c_ServiceName, " Running Overnight EOD process for both NFO and BFO...", c_tag );
  }
  else if (i_dategreater == 0)
  {
    fn_exit ( "Input trd dt not greater than Overnght trade date..EOD process already run.. ",'N');
    return;
  }

	if ( i_dategreater == 1)
  {

  	i_returncode = tpbegin( TRAN_TIMEOUT, 0 );
  	if ( i_returncode == -1 )
  	{
    	fn_errlog(c_ServiceName,"S31030",TPMSG,c_errmsg);
    	fn_exit ( "Unable to start transaction - Contact system support",'N');
			return;
  	}


    fn_bat_pst_msg ( c_ServiceName, " Taking back-up...Please wait...", c_tag );

    EXEC SQL
      DELETE FROM FFO_FO_FUT_PSTN_OVRNT_BKP ;

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog(c_ServiceName,"S31035",SQLMSG,c_errmsg);
      fn_exit ( "Unable to delete from back-up table - Contact system support",'Y');
      return;
    }

    EXEC SQL
      DELETE FROM FOO_FO_OPT_PSTN_OVRNT_BKP ;

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog(c_ServiceName,"S31040",SQLMSG,c_errmsg);
      fn_exit ( "Unable to delete from back-up table - Contact system support",'Y');
      return;
    }

    EXEC SQL
      DELETE FROM FSO_FO_SPN_PSTN_OVRNT_BKP ;

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog(c_ServiceName,"S31045",SQLMSG,c_errmsg);
      fn_exit ( "Unable to delete from back-up table - Contact system support",'Y');
      return;
    }

    EXEC SQL
      INSERT INTO FFO_FO_FUT_PSTN_OVRNT_BKP ( SELECT * FROM FUP_FUT_UNDRLYNG_PSTN );

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog(c_ServiceName,"S31050",SQLMSG,c_errmsg);
      fn_exit ( "Unable to create data in  back-up table - Contact system support",'Y');
      return;
    }

    EXEC SQL
      INSERT INTO FOO_FO_OPT_PSTN_OVRNT_BKP ( SELECT * FROM FOP_FO_OPTIONS_PSTN );

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog(c_ServiceName,"S31055",SQLMSG,c_errmsg);
      fn_exit ( "Unable to create data in  back-up table - Contact system support",'Y');
      return;
    }

    EXEC SQL
      INSERT INTO FSO_FO_SPN_PSTN_OVRNT_BKP ( SELECT * FROM  FUS_FO_UNDRLYNG_SPN_PSTN );

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog(c_ServiceName,"S31060",SQLMSG,c_errmsg);
      fn_exit ( "Unable to create data in  back-up table - Contact system support",'Y');
      return;
    }



    fn_bat_pst_msg ( c_ServiceName, " Taking back-up done ...", c_tag );

  	fn_bat_pst_msg ( c_ServiceName, " Overnight EOD Process - Updating Sequence Numbers", c_tag );

    /* Updation of all Sequence Tables - START */
    EXEC SQL
      DECLARE   opm_pipe_rec CURSOR FOR
      SELECT    opm_pipe_id
      FROM      opm_ord_pipe_mstr
      WHERE     opm_xchng_cd in ('NFO','BFO') ;

    EXEC SQL
      OPEN opm_pipe_rec;

    if ( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31065",SQLMSG,c_errmsg);
      fn_exit ( "Unable to find pipe ids for the exchange -Contact system support",'Y');
		  return;
    }

    while (1)
    {
      EXEC SQL
        FETCH opm_pipe_rec
        INTO  :sql_opm_pipe_id;

      if ( (SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
      {
        fn_errlog(c_ServiceName,"S31070",SQLMSG,c_errmsg);
        EXEC SQL
          CLOSE opm_pipe_rec;
        fn_exit ( "Unable to fetch pipe ids for the exchange -Contact system support",'Y');
		    return;
      }
      if ( SQLCODE == NO_DATA_FOUND )
      {
        EXEC SQL
          CLOSE opm_pipe_rec;
        break;
      }

			if (DEBUG_MSG_LVL_3)
			{
      	fn_userlog(c_ServiceName," Pipe Id :%s:",sql_opm_pipe_id); 
			}

      EXEC SQL
        SELECT  1
        INTO :i_record_exists
        FROM FSP_FO_SEQ_PLCD
        WHERE FSP_TRD_DT = :c_rundt
        AND   FSP_PIPE_ID = :sql_opm_pipe_id;

      if ( (SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
      {
        fn_errlog(c_ServiceName,"S31075",SQLMSG,c_errmsg);
        EXEC SQL
          CLOSE opm_pipe_rec;
        fn_exit ( "Unable to find xchng seq info -Contact system support",'Y');
		    return;
      }
      if ( SQLCODE == NO_DATA_FOUND )
      {
        EXEC SQL
        INSERT INTO FSP_FO_SEQ_PLCD
        ( FSP_TRD_DT,
          FSP_PIPE_ID,
          FSP_SEQ_NUM
        )
        VALUES
        (
           :c_rundt,
           :sql_opm_pipe_id,
           0
        );

        if ( (SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
        {
          fn_errlog(c_ServiceName,"S31080",SQLMSG,c_errmsg);
          EXEC SQL
            CLOSE opm_pipe_rec;
            fn_exit ( "Unable to insert xchng seq info-Contact system support",'Y');
		    		return;
        }
      }

      EXEC SQL
        DELETE FSP_FO_SEQ_PLCD
        WHERE FSP_TRD_DT < :sql_exg_nxt_trd_dt
        AND   FSP_PIPE_ID = :sql_opm_pipe_id;  

      if ( (SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
      {
        fn_errlog(c_ServiceName,"S31085",SQLMSG,c_errmsg);
        EXEC SQL
          CLOSE opm_pipe_rec;
        fn_exit ( "Unable to delete xchng seq info -Contact system support",'Y');
		    return;
      } 

      /**** Commented in Ver 1.4 *************
      EXEC SQL
        SELECT  1
        INTO :i_record_exists
        FROM FSS_FO_SPDORD_SEQ
        WHERE FSS_TRD_DT = :c_rundt
        AND   FSS_PIPE_ID = :sql_opm_pipe_id;

      if ( (SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
      {
        fn_errlog(c_ServiceName,"S31090",SQLMSG,c_errmsg);
        EXEC SQL
          CLOSE opm_pipe_rec;
        fn_exit ( "Unable to find spread ord seq info - Contact system support",'Y');
		    return;
      }
      if ( SQLCODE == NO_DATA_FOUND )
      {
        EXEC SQL
        INSERT INTO FSS_FO_SPDORD_SEQ
        ( FSS_TRD_DT,
          FSS_PIPE_ID,
          FSS_SEQ_NUM
        )
        VALUES
        (
           :c_rundt,
           :sql_opm_pipe_id,
           0
        );

        if (SQLCODE != 0 )
        {
          fn_errlog(c_ServiceName,"S31095",SQLMSG,c_errmsg);
          EXEC SQL
            CLOSE opm_pipe_rec;
          fn_exit ( "Unable to insert spread ord seq info - Contact system support",'Y');
		    	return;
        }
      }

      EXEC SQL
        DELETE FSS_FO_SPDORD_SEQ
        WHERE FSS_TRD_DT < :sql_exg_nxt_trd_dt
        AND   FSS_PIPE_ID =:sql_opm_pipe_id;  

      if ( (SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
      {
        fn_errlog(c_ServiceName,"S31100",SQLMSG,c_errmsg);
        EXEC SQL
          CLOSE opm_pipe_rec;
        fn_exit ( "Unable to delete xchng seq info - Contact system support",'Y');
		    return;
      }
      ***** ver 1.4 comment ends Here ***/
 
    }

		EXEC SQL
      CLOSE opm_pipe_rec;


		if (DEBUG_MSG_LVL_3)
		{
    	fn_userlog(c_ServiceName," NFO Case ...............");
		}

		EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_11' );
       END;
    END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 1 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31105", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

		EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_12' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 2 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31110", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
		
		EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_13' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 3 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31115", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_14' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 4 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31120", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }


    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_15' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 5 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31125", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

		EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_16' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 6 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31130", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_17' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 7 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31135", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_18' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 7 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31140", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    /***  Ver 1.5 Starts ***/
    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_21' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 21 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31145", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_22' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 22 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31150", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_23' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 23 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31155", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_24' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 24 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31160", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    /***  Ver 1.5 Ends ***/
    /***  Ver 1.6 starts ***/
    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_25' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 25 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31165", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_26' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 26 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31170", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_27' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 27 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31175", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_28' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 28 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31180", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_31' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 31 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31185", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_32' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 32 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31190", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    /***  Ver 1.6 Ends ***/

    EXEC SQL
     EXECUTE
       BEGIN
         reset_sequence( 'GET_XCHNG_SEQ_99' );
       END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe 7 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31195", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

		if (DEBUG_MSG_LVL_3)
		{
			fn_userlog(c_ServiceName,"SPAN - SPN_PRTFL1_SEQ Reset Starts.");
		}	

		EXEC SQL
     	 EXECUTE
       	 BEGIN
         	  reset_sequence( 'SPN_PRTFL1_SEQ');
       	END;
     	END-EXEC;

    if ( SQLCODE != 0 )
    {
     	fn_userlog( c_ServiceName, "Error in resetting SPN_PRTFL1_SEQ :%s:", SQLMSG );
     	fn_errlog( c_ServiceName, "S31200", SQLMSG, c_errmsg );
     	fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
     	return;
    }

		fn_userlog(c_ServiceName,"SPAN - SPN_PRTFL1_SEQ Reset Ends.");

    EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_11');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
     	fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 11 :%s:", SQLMSG );
     	fn_errlog( c_ServiceName, "S31205", SQLMSG, c_errmsg );
     	fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
     	return;
    }
    EXEC SQL
      EXECUTE
       BEGIN
          reset_sequence( 'GET_ORDR_SEQ_12');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
     	fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 12 :%s:", SQLMSG );
     	fn_errlog( c_ServiceName, "S31210", SQLMSG, c_errmsg );
     	fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
     	return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_13');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
     	fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 13 :%s:", SQLMSG );
     	fn_errlog( c_ServiceName, "S31215", SQLMSG, c_errmsg );
     	fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
     	return;
    }
		EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_ORDR_SEQ_14');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
     	fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 14 :%s:", SQLMSG );
     	fn_errlog( c_ServiceName, "S31220", SQLMSG, c_errmsg );
     	fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
     	return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_15');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
     	fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 15 :%s:", SQLMSG );
     	fn_errlog( c_ServiceName, "S31225", SQLMSG, c_errmsg );
     	fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
     	return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_ORDR_SEQ_16');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
     	fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 16 :%s:", SQLMSG );
    	fn_errlog( c_ServiceName, "S31230", SQLMSG, c_errmsg );
     	fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
     	return;
    }
		EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_ORDR_SEQ_17');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
     	fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 17 :%s:", SQLMSG );
    	fn_errlog( c_ServiceName, "S31235", SQLMSG, c_errmsg );
     	fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
     	return;
    }
		EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_18');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
     	fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 17 :%s:", SQLMSG );
     	fn_errlog( c_ServiceName, "S31240", SQLMSG, c_errmsg );
     	fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
     	return;
    }

    /*** Ver 1.5 Starts ***/
    EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_21');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 21 :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31245", SQLMSG, c_errmsg );
      fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
      return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_22');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 22 :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31250", SQLMSG, c_errmsg );
      fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
      return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_23');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 23 :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31255", SQLMSG, c_errmsg );
      fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
      return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_24');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 24 :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31260", SQLMSG, c_errmsg );
      fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
      return;
    }
    /***  Ver 1.5 Ends ***/
    /***  Ver 1.6 starts ***/
    EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_25');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 25 :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31265", SQLMSG, c_errmsg );
      fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
      return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_26');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 26 :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31270", SQLMSG, c_errmsg );
      fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
      return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_27');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 27 :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31275", SQLMSG, c_errmsg );
      fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
      return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_28');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 28 :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31280", SQLMSG, c_errmsg );
      fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
      return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_31');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 31 :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31285", SQLMSG, c_errmsg );
      fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
      return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_32');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 32 :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31290", SQLMSG, c_errmsg );
      fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
      return;
    }
    /*** Ver 1.6 Ends ***/

		EXEC SQL
      EXECUTE
        BEGIN
         reset_sequence( 'GET_ORDR_SEQ_99');
        END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
     	fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe 17 :%s:", SQLMSG );
     	fn_errlog( c_ServiceName, "S31295", SQLMSG, c_errmsg );
     	fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
     	return;
    }


    fn_userlog(c_ServiceName," BFO Case ............");

    EXEC SQL
     	EXECUTE
       	BEGIN
         	reset_sequence( 'GET_XCHNG_SEQ_A1' );
       	END;
     END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe A1 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31300", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }


		fn_userlog(c_ServiceName,"Restting The Sequences for Pipe A2");

   	EXEC SQL
     	EXECUTE
       	BEGIN
         	reset_sequence( 'GET_XCHNG_SEQ_A2' );
       	END;
     	END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe A2 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31305", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }


    fn_userlog(c_ServiceName,"Restting The Sequences for Pipe A3");

    EXEC SQL
     	EXECUTE
       	BEGIN
         	reset_sequence( 'GET_XCHNG_SEQ_A3' );
       END;
    	END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe A2 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31310", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }


    fn_userlog(c_ServiceName,"Restting The Sequences for Pipe A9");

    EXEC SQL
     	EXECUTE
       	BEGIN
         	reset_sequence( 'GET_XCHNG_SEQ_A9' );
       END;
    	END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe A2 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31315", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
       EXECUTE
         BEGIN
           reset_sequence( 'GET_ORDR_SEQ_A1');
         END;
       END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe A1 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31320", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
       EXECUTE
         BEGIN
           reset_sequence( 'GET_ORDR_SEQ_A2');
         END;
       END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe A2 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31325", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    
		EXEC SQL
       EXECUTE
         BEGIN
           reset_sequence( 'GET_ORDR_SEQ_A3');
         END;
       END-EXEC;

    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe A3 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31330", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
		}

		EXEC SQL
       EXECUTE
         BEGIN
           reset_sequence( 'GET_ORDR_SEQ_A9');
         END;
       END-EXEC;

    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting order sequence for pipe A3 :%s:", SQLMSG );
       fn_errlog( c_ServiceName, "S31335", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
		}

    fn_userlog(c_ServiceName,"Restting The Trade Sequences for Pipe 99");

    EXEC SQL
     	EXECUTE
       	BEGIN
         	reset_sequence( 'GET_TRD_SEQ_99' );
       END;
    	END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe A2 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31340", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    fn_userlog(c_ServiceName,"Restting The Trade Sequences for Pipe A9");

    EXEC SQL
     	EXECUTE
       	BEGIN
         	reset_sequence( 'GET_TRD_SEQ_A9' );
       END;
    	END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting exchange sequence for pipe A2 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31345", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    /*** Ver 1.4 Starts here ****/
    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_11' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 11 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31350", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_12' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 12 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31355", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_13' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 13 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31360", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_14' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 14 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31365", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_15' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 15 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31370", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_16' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 16 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31375", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_17' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 17 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31380", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_18' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 18 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31385", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    /*** Ver 1.5 Starts ***/
    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_21' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 21 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31390", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_22' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 22 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31395", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_23' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 23 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31400", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_24' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 24 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31405", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    /***  Ver 1.5 Ends ***/
    /***  Ver 1.6 starts ***/
    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_25' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 25 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31410", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_26' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 26 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31415", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_27' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 27 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31420", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_28' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 28 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31425", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_31' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 31 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31430", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_32' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 32 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31435", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    /*** Ver 1.6 Ends ***/

      /*** Ver 1.7 Starts ***/
      EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence('SEQ_GTT_RQST' );
        END;
      END-EXEC;
      if ( SQLCODE != 0 )
      {
        fn_userlog( c_ServiceName, "Error in resetting Sequence for GTT order :%s:", SQLMSG );
        fn_errlog( c_ServiceName, "S31440", SQLMSG, c_errmsg );
        fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
        return;
      }
    /*** Ver 1.7 Ends ***/

    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_A1' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe A1 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31445", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_A2' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe A2 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31450", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_A3' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe A3 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31455", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_99' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe 99 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31460", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }

    EXEC SQL
      EXECUTE
        BEGIN
          reset_sequence( 'GET_SPDORD_SEQ_A9' );
       END;
      END-EXEC;

    if ( SQLCODE != 0 )
    {
       fn_userlog( c_ServiceName, "Error in resetting spread sequence for pipe A9 :%s:",SQLMSG );
       fn_errlog( c_ServiceName, "S31465", SQLMSG, c_errmsg );
       fn_exit ( "Failed to reset_sequence- Contact system support", 'Y' );
       return;
    }
    /*** Ver 1.4 Ends here ****/ 

    EXEC SQL
         UPDATE  exg_xchng_mstr
         SET     exg_sec_tm = exg_nxt_trd_dt,
								 exg_part_tm = exg_nxt_trd_dt ,
								 exg_inst_tm = exg_nxt_trd_dt,
								 exg_idx_tm = exg_nxt_trd_dt
         WHERE   exg_xchng_cd IN ('NFO','BFO');

    if ( SQLCODE != 0 )
    {
        fn_errlog(c_ServiceName,"S31470",SQLMSG,c_errmsg);
        fn_exit ( "Unable to update next trade date- Contact system support",'Y');
		  	return;
    }

	 /**** Disabling expired contracts for 'NFO' and 'BFO' ******/

	 if (DEBUG_MSG_LVL_3)
   {
        fn_userlog( c_ServiceName, "Disabling expired contracts for 'NFO' and 'BFO'... " );
   }
 
   /*** Commented in Ver 1.3 ***
  	
   EXEC SQL
        UPDATE FCM_FO_CNTRCT_MSTR
			  *** SET FCM_QT_TRDNG_FLG = 'Q' Commented In Ver 1.1 ***
			  SET FCM_QT_TRDNG_FLG = 'N'            *** Ver 1.1 ***   
				WHERE FCM_XCHNG_CD IN ('NFO' ,'BFO')
				AND   FCM_EXPRY_DT < :c_rundt;

   	if (( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ))
   	{
       fn_errlog(c_ServiceName,"S31475",SQLMSG,c_errmsg);
       fn_exit ( "Unable to disable expired contracts",'Y');
	  	 return;
   	}
   
   ***/ 

  /***  Ver 1.3 Starts  ***/

   EXEC SQL
        UPDATE FTQ_FO_TRD_QT
        SET FTQ_QT_TRDNG_FLG = 'N'
        WHERE FTQ_XCHNG_CD IN ('NFO' ,'BFO')
        AND   FTQ_EXPRY_DT < :c_rundt;

    if (( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ))
    {
       fn_errlog(c_ServiceName,"S31480",SQLMSG,c_errmsg);
       fn_exit ( "Unable to disable expired contracts",'Y');
       return;
    }

  /***  Ver 1.3 Ends  ***/

    if (DEBUG_MSG_LVL_3)      
    {
        fn_userlog( c_ServiceName, " Updating overnight trade date and opening overnight trade market" );
    }
    

		EXEC SQL
         UPDATE  exg_xchng_mstr
         SET     exg_tmp_trd_dt 	= to_date(:c_rundt , 'dd-Mon-yyyy'),
								 exg_tmp_mkt_stts = 'O'
         WHERE   exg_xchng_cd 		IN ('NFO','BFO');

    if ( SQLCODE != 0 )
    {
        fn_errlog(c_ServiceName,"S31485",SQLMSG,c_errmsg);
        fn_exit ( "Unable to update overnight trade date and status - Contact system support",'Y');
        return;
    }

    if (DEBUG_MSG_LVL_3)      
    {
        fn_userlog( c_ServiceName, "COMMITTING THE TRANSACTION" );
    }
    

		i_returncode = tpcommit(0);
    if ( i_returncode == -1 )
    {
      fn_errlog(c_ServiceName,"S31490",TPMSG,c_errmsg);
      fn_exit ( "Unable to commit transaction- Contact system support",'Y');
		  return;
    }

  fn_exit ( "*** Overnigght EOD Process Completed ****",'N');

	} /*** End of if condition ***/
	return;
}

void fn_exit( char* c_err_msg, char c_mem_flg )
{
    fn_bat_pst_msg ( c_ServiceName, c_err_msg, c_tag );
    if( c_mem_flg == 'Y' )
    {
      tpabort(0);
    }
		return;
}

int fn_bat_init ( int argc, char *argv[] ) 
{
	fn_var = BAT_OVNGHT_EOD;

  if ( argc != 5 )
  {
    fn_userlog ( "bat_ovnght_eod",
   "Usage : %s <Tag> <Exchange Code> <Pipe id> <Exchange Next Date>", argv[0] );
		return -1;
	}

	return 0;
}

void fn_bat_term (  int argc, char *argv[] )
{
   return ;
}

int fn_prcs_trg ( char *c_pgm_nm, int i_trg_typ )
{
  return 0;
}
