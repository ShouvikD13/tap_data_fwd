/*  Program           : BAT_SPN_LMT_NEG                                       */
/*                                                                            */
/*  Input             : FFO_XCHNG_CD                                          */
/*                                                                            */
/*  Output            : Success / Failure                                     */
/*                                                                            */
/*  Description       : This batch  selects all the SPAN customers having   	*/
/*										  negative limit.                                       */ 
/*                                                                            */
/*  Log               : Ver 1.0   11-Feb-2012       Navina D.                 */
/*                    : Ver 1.1   29-Mar-2012       Navina D.                 */
/*                    : Ver 1.2   29-Jan-2013       Navina D.                 */
/*                    : Ver 1.4   03-Jul-2013       Swati A.B                 */
/*                    : Ver 1.5		26-Mar-2014				Samip M                   */
/*                    : Ver 1.6		01-Jan-2015				Vikram G.                 */
/*                    : Ver 1.7		10-Jun-2016				Samip M.                 	*/
/******************************************************************************/
/*  Ver 1.0           : New Release                                           */
/*  Ver 1.1           : Exchange Code Handling- 29-Mar-2012  (Navina D.)      */
/*  Ver 1.2           : SPAN FuturePLUS handling 29-Mar-2013 (Navina D.)      */
/*  Ver 1.3           : BFO Process Negativity Changes 30-Apr-2013 Sachin B.  */
/*  Ver 1.4           : CR-ISEC03-37658(ATS Migration chamngs for FNO         */
/*                      (Exception Mstr handling)                             */
/*	Ver 1.5						: FDR Module changes																		*/
/*	Ver 1.6						: Changes for Message Display in Console								*/ 
/*	Ver 1.7						: Query change for Optimization - 10-Jun-2016 (Samip M)	*/ 
/******************************************************************************/

#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_ddr.h>
#include <string.h>			
#include <stdlib.h>		 
#include <fml_rout.h>	
#include <fn_read_debug_lvl.h>    

void BAT_SPN_LMT_NEG( int argc, char *argv[] )
{
  char c_msg[256];
  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];
  char c_xchng_date[ 11+1 ];
	char c_cln_mtch_accnt [11];   
  char c_xchng_cd[3+1];
	
	int  i_returnval;
	int li_cnt = 0;
	int i_record_exists = 0;
	
	long li_tot_records = 0;	
	long li_len_tobuf;
	
	sql_cursor  cur_get_neg_lmt_mtch;

	FBFR32* ptr_fml_Sbuf;

  strcpy ( c_ServiceName, argv[0] );

	INITBATDBGLVL(argv[0]);  

	sprintf ( c_msg, "BATCH PROCESS %s STARTED", argv[0] );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  strcpy( c_xchng_cd, argv[2] );

	/*** Get the trade date ***/
	MEMSET(c_xchng_date);

	EXEC SQL
    SELECT  EXG_NXT_TRD_DT
    INTO    :c_xchng_date
    FROM    EXG_XCHNG_MSTR
    WHERE   EXG_XCHNG_CD = :c_xchng_cd;

  if( (SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND ) )
  {
    fn_userlog(c_ServiceName,"Error Selecting Exchange trade Date");
    fn_errlog(c_ServiceName,"S31005",SQLMSG,c_err_msg);
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
    return;
  }	

	li_tot_records = 0;

	/*** Commented in Ver 1.2 ***
	EXEC SQL
		 SELECT	 count(0)
		 INTO		 :li_tot_records
		 FROM    FAB_FO_ALC_BFT_SMRY
		 WHERE   FAB_CLM_MTCH_ACCNT IN 
						( SELECT  DISTINCT FUS_CLM_MTCH_ACCNT 
							 FROM   FUS_FO_UNDRLYNG_SPN_PSTN, FAB_FO_ALC_BFT_SMRY, FCB_FO_CLNT_BLNCS
							 WHERE  FUS_XCHNG_CD =  :c_xchng_cd                *** Ver 1.1 ***
							 AND    FUS_XCHNG_CD =  FCB_XCHNG_CD               *** Ver 1.1 ***
							 AND		FUS_CLM_MTCH_ACCNT = FAB_CLM_MTCH_ACCNT
							 AND    FUS_CLM_MTCH_ACCNT = FCB_CLM_MTCH_ACCNT
							 AND    FCB_TRD_DT = trunc(sysdate)
							 AND    FCB_GRP_ID= 1
							 AND		FCB_DC_AMT < 0
							 AND		( NVL(FAB_ALCTD_AMT,0) + NVL(FAB_BFT_AMT,0) + NVL(FAB_PLG_AMT,0) + NVL(FAB_ISEC_MRGN_AMT,0) + NVL(FCB_DC_AMT,0) ) < 0
						);

	***/

 /**** Ver 1.3 starts here ****
	*** Ver 1.2 starts here ***
	EXEC SQL
	 SELECT	 count(0)
	 INTO		 :li_tot_records
	 FROM    FAB_FO_ALC_BFT_SMRY
	 WHERE   FAB_CLM_MTCH_ACCNT IN  (
					SELECT  DISTINCT FUS_CLM_MTCH_ACCNT FROM
					( SELECT  FUS_CLM_MTCH_ACCNT 
						 FROM   FUS_FO_UNDRLYNG_SPN_PSTN, FAB_FO_ALC_BFT_SMRY, FCB_FO_CLNT_BLNCS
						 WHERE  FUS_XCHNG_CD =  :c_xchng_cd              
						 AND    FUS_XCHNG_CD =  FCB_XCHNG_CD              
						 AND		FUS_CLM_MTCH_ACCNT = FAB_CLM_MTCH_ACCNT
						 AND    FUS_CLM_MTCH_ACCNT = FCB_CLM_MTCH_ACCNT
						 AND    FCB_TRD_DT = trunc(sysdate)
						 AND    FCB_GRP_ID= 1
						 AND		FCB_DC_AMT < 0
						 AND		( NVL(FAB_ALCTD_AMT,0) + NVL(FAB_BFT_AMT,0) + NVL(FAB_PLG_AMT,0) + NVL(FAB_ISEC_MRGN_AMT,0) + NVL(FCB_DC_AMT,0) ) < 0
						UNION ALL
						 SELECT FFP_CLM_MTCH_ACCNT
						 FROM		FFP_FO_FUTURES_PSTN, FAB_FO_ALC_BFT_SMRY,FCB_FO_CLNT_BLNCS 
						 WHERE	FFP_XCHNG_CD = :c_xchng_cd
						 AND		FFP_XCHNG_CD = FCB_XCHNG_CD
						 AND 		FFP_PRDCT_TYP = 'P'
						 AND		FFP_CLM_MTCH_ACCNT = FAB_CLM_MTCH_ACCNT
						 AND		FFP_CLM_MTCH_ACCNT = FCB_CLM_MTCH_ACCNT
						 AND		FCB_TRD_DT = TRUNC(SYSDATE)  
						 AND		FCB_GRP_ID= 1
						 AND		FCB_DC_AMT < 0
						 AND		( NVL(FAB_ALCTD_AMT,0)+NVL(FAB_BFT_AMT,0)+NVL(FAB_PLG_AMT,0)+NVL(FAB_ISEC_MRGN_AMT,0)+NVL(FCB_DC_AMT,0) ) < 0
					) 
				);
   *** Ver 1.2 Ends here ***
   *** commented in Ver 1.3 ***/

  /*** Ver 1.3 Starts Here ***/

  EXEC SQL
  SELECT  count(1)
  INTO    :li_tot_records 
  FROM
  (
    select a.c_mtch_id clinet_match_id, sum(NVL(FAB_ALCTD_AMT,0)+NVL(FAB_BFT_AMT,0)+NVL(FAB_PLG_AMT,0)+NVL(FAB_ISEC_MRGN_AMT,0)+NVL(FAB_ISEC_MRGN_AMT_BSE,0) + a.d_dc_amount + FAB_FDR_AMT) final_amt ,a.c_xchng_cd Exchang_cd /*** FAB_FDR_AMT Added for Ver 1.5 ***/
    FROM
    (
      SELECT distinct c_mtch c_mtch_id,sum(dc_amt) d_dc_amount,xchng_cd c_xchng_cd
      FROM
      (
        select distinct FUS_CLM_MTCH_ACCNT c_mtch,FCB_DC_AMT dc_amt,FUS_XCHNG_CD xchng_cd
        from FUS_FO_UNDRLYNG_SPN_PSTN,FCB_FO_CLNT_BLNCS
        WHERE FUS_CLM_MTCH_ACCNT= FCB_CLM_MTCH_ACCNT
        AND   FUS_XCHNG_CD= :c_xchng_cd
				AND		FUS_XCHNG_CD = FCB_XCHNG_CD			/*** Added for Ver 1.7 ***/
        AND   FCB_DC_AMT < 0
        AND   FCB_GRP_ID =1
        AND   FCB_TRD_DT = trunc(sysdate)
       UNION
        select distinct FFP_CLM_MTCH_ACCNT c_mtch ,FCB_DC_AMT dc_amt, FFP_XCHNG_CD xchng_cd
        FROM   ffp_fo_futures_pstn ,FCB_FO_CLNT_BLNCS
        WHERE  FFP_CLM_MTCH_ACCNT = FCB_CLM_MTCH_ACCNT
        AND    FFP_XCHNG_CD= :c_xchng_cd
				AND		 FFP_XCHNG_CD = FCB_XCHNG_CD			/*** Added for Ver 1.7 ***/
        AND    FFP_PRDCT_TYP = 'P'
        AND    FCB_DC_AMT < 0
        AND    FCB_GRP_ID =1
        AND    FCB_TRD_DT = trunc(sysdate)
      ) b
      group by b.c_mtch,b.xchng_cd
    ) a,FAB_FO_ALC_BFT_SMRY
    WHERE FAB_CLM_MTCH_ACCNT = a.c_mtch_id
    group by a.c_mtch_id,a.c_xchng_cd
    having sum(NVL(FAB_ALCTD_AMT,0)+NVL(FAB_BFT_AMT,0)+NVL(FAB_PLG_AMT,0)+NVL(FAB_ISEC_MRGN_AMT,0)+NVL(FAB_ISEC_MRGN_AMT_BSE,0) + a.d_dc_amount + FAB_FDR_AMT) < 0 	/*** FAB_FDR_AMT Added for Ver 1.5 ***/
   )
	 where clinet_match_id not in ( SELECT  MEM_MTCH_ACCNT        /*** Ver 1.4 ***/ 
																	FROM    MEM_MTM_EXPTN_MSTR
																	WHERE   MEM_SEGMENT IN ('FNOIM','FPIM')
																	AND     SYSDATE BETWEEN MEM_FROM_DT AND MEM_TO_DT );
   
   /**** Ver 1.3 Ends Here ***/

	if(SQLCODE != 0)
	{
	  fn_userlog(c_ServiceName,"Error Selecting Customers with negative limit");
		fn_errlog(c_ServiceName, "S31010", SQLMSG,c_err_msg);
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
		return;
	}

	sprintf ( c_msg, "Total customers having negative limit :%ld:", li_tot_records );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

	if( li_tot_records == 0)
	{
	  fn_userlog(c_ServiceName,"Batch process %s ended", argv[0] );
		return;
	}	

	EXEC SQL ALLOCATE :cur_get_neg_lmt_mtch;

	/*** Commented in Ver 1.2 ***
	EXEC SQL EXECUTE
		BEGIN
		 OPEN :cur_get_neg_lmt_mtch FOR
		 SELECT	 FAB_CLM_MTCH_ACCNT
		 FROM    FAB_FO_ALC_BFT_SMRY
		 WHERE   FAB_CLM_MTCH_ACCNT IN 
						( SELECT  DISTINCT FUS_CLM_MTCH_ACCNT 
							 FROM   FUS_FO_UNDRLYNG_SPN_PSTN, FAB_FO_ALC_BFT_SMRY, FCB_FO_CLNT_BLNCS
							 WHERE  FUS_XCHNG_CD =  :c_xchng_cd                *** Ver 1.1 ***
							 AND    FUS_XCHNG_CD =  FCB_XCHNG_CD               *** Ver 1.1 ***
							 AND    FUS_CLM_MTCH_ACCNT = FAB_CLM_MTCH_ACCNT
							 AND    FUS_CLM_MTCH_ACCNT = FCB_CLM_MTCH_ACCNT
							 AND    FCB_TRD_DT = trunc(sysdate)
							 AND    FCB_GRP_ID= 1
							 AND		FCB_DC_AMT < 0
							 AND		( NVL(FAB_ALCTD_AMT,0) + NVL(FAB_BFT_AMT,0) + NVL(FAB_PLG_AMT,0) + NVL(FAB_ISEC_MRGN_AMT,0) + NVL(FCB_DC_AMT,0) ) < 0
						);
		***/
	
   /*** Ver 1.3 Starts Here ************************************* 	
	 *** Ver 1.2 starts here ***
	 EXEC SQL EXECUTE
		BEGIN
		 OPEN :cur_get_neg_lmt_mtch FOR
		 SELECT	 FAB_CLM_MTCH_ACCNT
		 FROM    FAB_FO_ALC_BFT_SMRY
		 WHERE   FAB_CLM_MTCH_ACCNT IN (
						SELECT  DISTINCT FUS_CLM_MTCH_ACCNT FROM
						( SELECT  FUS_CLM_MTCH_ACCNT 
							 FROM   FUS_FO_UNDRLYNG_SPN_PSTN, FAB_FO_ALC_BFT_SMRY, FCB_FO_CLNT_BLNCS
							 WHERE  FUS_XCHNG_CD =  :c_xchng_cd                
							 AND    FUS_XCHNG_CD =  FCB_XCHNG_CD               
							 AND    FUS_CLM_MTCH_ACCNT = FAB_CLM_MTCH_ACCNT
							 AND    FUS_CLM_MTCH_ACCNT = FCB_CLM_MTCH_ACCNT
							 AND    FCB_TRD_DT = trunc(sysdate)
							 AND    FCB_GRP_ID= 1
							 AND		FCB_DC_AMT < 0
							 AND		( NVL(FAB_ALCTD_AMT,0) + NVL(FAB_BFT_AMT,0) + NVL(FAB_PLG_AMT,0) + NVL(FAB_ISEC_MRGN_AMT,0) + NVL(FCB_DC_AMT,0) ) < 0
							 UNION ALL
							SELECT	FFP_CLM_MTCH_ACCNT
							FROM		FFP_FO_FUTURES_PSTN, FAB_FO_ALC_BFT_SMRY,FCB_FO_CLNT_BLNCS 
							WHERE		FFP_XCHNG_CD = :c_xchng_cd
							AND			FFP_XCHNG_CD = FCB_XCHNG_CD
							AND 		FFP_PRDCT_TYP = 'P'
							AND			FFP_CLM_MTCH_ACCNT = FAB_CLM_MTCH_ACCNT
							AND			FFP_CLM_MTCH_ACCNT = FCB_CLM_MTCH_ACCNT
							AND			FCB_TRD_DT = TRUNC(SYSDATE)  
							AND			FCB_GRP_ID= 1
							AND			FCB_DC_AMT < 0
							AND			( NVL(FAB_ALCTD_AMT,0)+NVL(FAB_BFT_AMT,0)+NVL(FAB_PLG_AMT,0)+NVL(FAB_ISEC_MRGN_AMT,0)+NVL(FCB_DC_AMT,0) ) < 0
						)
					);
		*** Ver 1.2 ends here ***
    *************************** Ver 1.3 Ends Here **********/

  /**** Ver 1.3 Starts Here ****/
 
   EXEC SQL EXECUTE
    BEGIN
     OPEN :cur_get_neg_lmt_mtch FOR
     SELECT clinet_match_id 
    FROM
    (
     select a.c_mtch_id clinet_match_id, sum(NVL(FAB_ALCTD_AMT,0)+NVL(FAB_BFT_AMT,0)+NVL(FAB_PLG_AMT,0)+NVL(FAB_ISEC_MRGN_AMT,0)+NVL(FAB_ISEC_MRGN_AMT_BSE,0) + a.d_dc_amount +FAB_FDR_AMT) final_amt ,a.c_xchng_cd Exchang_cd	/*** FAB_FDR_AMT Added for Ver 1.5 ***/
     FROM
     (
      SELECT distinct c_mtch c_mtch_id,sum(dc_amt) d_dc_amount,xchng_cd c_xchng_cd
      FROM
      (
        select distinct FUS_CLM_MTCH_ACCNT c_mtch,FCB_DC_AMT dc_amt,FUS_XCHNG_CD xchng_cd
        from FUS_FO_UNDRLYNG_SPN_PSTN,FCB_FO_CLNT_BLNCS
        WHERE FUS_CLM_MTCH_ACCNT= FCB_CLM_MTCH_ACCNT
        AND   FUS_XCHNG_CD= :c_xchng_cd
				AND		FUS_XCHNG_CD = FCB_XCHNG_CD			/*** Added for Ver 1.7 ***/
        AND   FCB_DC_AMT < 0
        AND   FCB_GRP_ID =1
        AND   FCB_TRD_DT = trunc(sysdate)
       UNION
        select distinct FFP_CLM_MTCH_ACCNT c_mtch ,FCB_DC_AMT dc_amt, FFP_XCHNG_CD xchng_cd
        FROM   ffp_fo_futures_pstn ,FCB_FO_CLNT_BLNCS
        WHERE  FFP_CLM_MTCH_ACCNT = FCB_CLM_MTCH_ACCNT
        AND    FFP_XCHNG_CD= :c_xchng_cd
				AND		 FFP_XCHNG_CD = FCB_XCHNG_CD			/*** Added for Ver 1.7 ***/
        AND    FFP_PRDCT_TYP = 'P'
        AND    FCB_DC_AMT < 0
        AND    FCB_GRP_ID =1
        AND    FCB_TRD_DT = trunc(sysdate)
      ) b
      group by b.c_mtch,b.xchng_cd
    ) a,FAB_FO_ALC_BFT_SMRY
    WHERE FAB_CLM_MTCH_ACCNT = a.c_mtch_id
    group by a.c_mtch_id,a.c_xchng_cd
    having sum(NVL(FAB_ALCTD_AMT,0)+NVL(FAB_BFT_AMT,0)+NVL(FAB_PLG_AMT,0)+NVL(FAB_ISEC_MRGN_AMT,0)+NVL(FAB_ISEC_MRGN_AMT_BSE,0) + a.d_dc_amount + FAB_FDR_AMT) < 0		/*** FAB_FDR_AMT Added for Ver 1.5 ***/
   )
	 where clinet_match_id not in ( SELECT  MEM_MTCH_ACCNT        /*** Ver 1.4 ***/
                                  FROM    MEM_MTM_EXPTN_MSTR
                                  WHERE   MEM_SEGMENT IN ('FNOIM','FPIM')
                                  AND     SYSDATE BETWEEN MEM_FROM_DT AND MEM_TO_DT );
   
  /*** Ver 1.3 Ends Here *****/
		END;
	END-EXEC;

	if(SQLCODE != 0)
	{
		EXEC SQL FREE :cur_get_neg_lmt_mtch;
	  fn_userlog(c_ServiceName,"Error Selecting Customers with negative limit");
		fn_errlog(c_ServiceName, "S31015", SQLMSG,c_err_msg);
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
		return;
	}
	
	/*** Allocate Space For Input Buffer ***/
	ptr_fml_Sbuf = (FBFR32*)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);

	if(ptr_fml_Sbuf == NULL)
  {
		EXEC SQL CLOSE :cur_get_neg_lmt_mtch;
		EXEC SQL FREE :cur_get_neg_lmt_mtch;
    fn_errlog( c_ServiceName, "S31020", TPMSG, c_err_msg  );
    fn_bat_pst_msg(c_ServiceName,"System error ..exiting",c_tag);
    return; 
  }
	
	while (1)
	{
		MEMSET(c_cln_mtch_accnt);
		Finit32(ptr_fml_Sbuf,MIN_FML_BUF_LEN);

		EXEC SQL
			FETCH :cur_get_neg_lmt_mtch
			INTO :c_cln_mtch_accnt;

		if(SQLCODE != 0)
		{
			if(SQLCODE == NO_DATA_FOUND)
			{
				tpfree((char *)ptr_fml_Sbuf);
				EXEC SQL CLOSE :cur_get_neg_lmt_mtch;
				EXEC SQL FREE :cur_get_neg_lmt_mtch;
				fn_userlog(c_ServiceName,"End of records in Cursor cur_get_neg_lmt_mtch ");
				break;
			}
			tpfree((char *)ptr_fml_Sbuf);
	    fn_errlog( c_ServiceName, "S31025", SQLMSG, c_err_msg  );
			EXEC SQL CLOSE :cur_get_neg_lmt_mtch;
			EXEC SQL FREE :cur_get_neg_lmt_mtch;
			fn_bat_pst_msg(c_ServiceName,"System error ..exiting",c_tag);
			return ;
		}
		
		rtrim(c_cln_mtch_accnt);
		fn_userlog(c_ServiceName,"Processing Match account = :%s:", c_cln_mtch_accnt);

		li_cnt++;


 	  i_returnval = fn_pack_vartofml( c_ServiceName,
                                      c_err_msg,
                                      &ptr_fml_Sbuf,
                                      4,
                                      FFO_EBA_MTCH_ACT_NO, ( char * )c_cln_mtch_accnt,
                                      FFO_TRD_DT, ( char * )c_xchng_date,
                                      FFO_XCHNG_CD, ( char * )c_xchng_cd,
                                      FFO_BAT_TAG, (char * )c_tag );                    /*** Added in Ver 1.6 ***/


    if( i_returnval == -1 )
    {
			 fn_errlog( c_ServiceName, "S31030", FMLMSG, c_err_msg  );
			 fn_bat_pst_msg(c_ServiceName,"system error occured..exiting",c_tag);
			 EXEC SQL CLOSE :cur_get_neg_lmt_mtch;
			 EXEC SQL FREE :cur_get_neg_lmt_mtch;
			 tpfree( (char *)ptr_fml_Sbuf );
			 return;
    }


     i_returnval = fn_pre_prcs_rcrd ( c_ServiceName,
                                      c_err_msg,
                                      "sfr_spn_lmt_neg",
                                      li_cnt,
                                      li_tot_records );
     if ( i_returnval == -1 )
     {
			 EXEC SQL CLOSE :cur_get_neg_lmt_mtch;
			 EXEC SQL FREE :cur_get_neg_lmt_mtch;
			 tpfree((char *)ptr_fml_Sbuf);
       fn_errlog( c_ServiceName, "S31035", LIBMSG, c_err_msg );
			 fn_bat_pst_msg(c_ServiceName,"System error ..exiting",c_tag);
			 return;
     } 

     i_returnval = tpacall ( "SFO_SPN_LMT_NEG" , (char * )ptr_fml_Sbuf ,0, 0);

     if ( i_returnval == -1 )
     {
			 	EXEC SQL CLOSE :cur_get_neg_lmt_mtch;
				EXEC SQL FREE :cur_get_neg_lmt_mtch;
				tpfree((char *)ptr_fml_Sbuf);
				fn_errlog( c_ServiceName, "S31040", LIBMSG, c_err_msg );
				strcpy ( c_msg, "System error. Contact system support" );
				fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
				return;
     }

		 fn_userlog( c_ServiceName,"Match Account |%s| Processed",c_cln_mtch_accnt);

	} /* End of While Loop */


	sprintf ( c_msg, "Batch process %s ended", argv[0] );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  return;
}

int fn_bat_init ( int argc, char *argv[] ) 
{
	fn_var = BAT_SPN_LMT_NEG;
	return 0;
}

void fn_bat_term ( int argc, char *argv[] )
{
  return;
}

int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
	return 0;
}
