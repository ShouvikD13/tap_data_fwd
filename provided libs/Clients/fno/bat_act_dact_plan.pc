/******************************************************************
* Service name :  BAT_ACT_DACT_PLAN                               *
*                                                                 *
* Description  :  This Batch Program will activate or deactivate  *
*                 sensibull subscription                          *
*                                                                 *
* Input        :  Exchange Code                                   *
							 :  Pipe Id                                         *
*                                                                 *
* Output      :                                                   *
*                                                                 *
* Log         :   21-May-2020 Initial Release  - Navina D.        *
******************************************************************/
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_ddr.h>
#include <fml_rout.h>
#include <fn_session.h>
#include <string.h>
#include <fn_read_debug_lvl.h>

void BAT_ACT_DACT_PLAN ( int argc, char *argv[] )
{
  int 		 i_trnsctn;
  char 		 c_msg[256]="\0";
  char 		 c_ServiceName [ 33 ]="\0";
  char 		 c_err_msg [ 256 ] ="\0";
  char		 c_cln_mtch_accnt[10+1] = "\0";

  strcpy ( c_ServiceName, argv[0] );
	INITBATDBGLVL(c_ServiceName);

  sprintf ( c_msg, "Batch process %s started", argv[0] );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

	if( argc < 5 )
  {
    fn_bat_pst_msg ( c_ServiceName, "Invalid Number of Arguments", c_tag );
		fn_userlog( c_ServiceName, "bat_act_dact_plan NFO NFO NA <match_id/ALL>");
		return;
  }

  strcpy(c_cln_mtch_accnt,argv[4]);

	if (strcmp(c_cln_mtch_accnt,"ALL") == 0 )
	{
		strcpy(c_cln_mtch_accnt,"%");
	}

  fn_userlog(c_ServiceName,"Match Accnt<%s>",c_cln_mtch_accnt);

	i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
     	strcpy ( c_msg, "System error. Contact system support" );
     	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
     	fn_errlog(c_ServiceName, "S31005", LIBMSG, c_err_msg );
     	return ;
  }

	EXEC SQL
		UPDATE ACP_API_CURR_PLAN
		SET    ACP_ACTV_FLG = 'N'
		WHERE  ACP_ACTV_FLG = 'A'
		AND    ACP_CLM_MTCH_ACCNT LIKE :c_cln_mtch_accnt
		AND    ACP_END_DT < TRUNC(SYSDATE);
			
	if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
 	{
     	strcpy ( c_msg, "System error. Contact system support" );
     	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     	fn_errlog( c_ServiceName, "S31010", SQLMSG, c_err_msg );
     	return;
 	} 

	fn_userlog(c_ServiceName,"Deactivated count <%ld>",sqlca.sqlerrd[2]);


	EXEC SQL
		UPDATE ACP_API_CURR_PLAN
		SET    ACP_ACTV_FLG = 'A'
		WHERE  ACP_ACTV_FLG = 'P'
		AND    ACP_CLM_MTCH_ACCNT LIKE :c_cln_mtch_accnt
		AND    ACP_START_DT <= TRUNC(SYSDATE);

	if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
 	{
     	strcpy ( c_msg, "System error. Contact system support" );
     	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     	fn_errlog( c_ServiceName, "S31015", SQLMSG, c_err_msg );
     	return;
 	} 

	fn_userlog(c_ServiceName,"Activated count <%ld>",sqlca.sqlerrd[2]);
	
	if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
 	{
     	strcpy ( c_msg, "System error. Contact system support" );
     	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     	fn_errlog( c_ServiceName, "S31020",LIBMSG,c_err_msg);
     	return;
 	}

  sprintf ( c_msg, "Batch process %s ended", argv[0] );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  return;
}

int fn_bat_init ( int argc, char *argv[] )
{
  fn_var = BAT_ACT_DACT_PLAN;
  return 0;
}

void fn_bat_term ( int argc, char *argv[] )
{
  return;
}

int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
  return 0;
}
