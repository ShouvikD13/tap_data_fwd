/******************************************************************
* Service name :  BAT_OFLN_FOBOD                                  *
*                                                                 *
* Description  :  This Batch Program updates the Sequence         *
*                 Tables and the offline next trade date          *
*                                                                 *
* Input        :  Exchange Code                                   *
*                 Offline Exchange Next Trade Date                *
*                                                                 *
* Output      :                                                   *
*                                                                 *
* Log         :   18-Jun-2002 Initial Release  - Vinod Banjan     *
*							:   20-Dec-2007	ver 1.1 IBM Migration 	 - Ranjit		*
******************************************************************/
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <string.h>		/* ver 1.1 */
#include <fn_read_debug_lvl.h>	/* ver 1.1 */

char c_ServiceName[33];

void fn_exit( char* c_err_msg, char c_mem_flg );

void BAT_OFLN_FOBOD ( int argc, char *argv[] )
{

  EXEC SQL BEGIN DECLARE SECTION;
    char   		c_rundt[11 + 1];
  	varchar  	sql_exg_nxt_trd_dt[22+1];
  	char      sql_exg_crrnt_stts;
  	char      sql_exg_ofln_stts;
  	varchar  	sql_exg_ofln_nxt_trd_dt[22+1];
 		char      sql_exg_xchng_cd[3+1];
  EXEC SQL END DECLARE SECTION;

  char c_errmsg[256];
  int  i_returncode;
  int  i_dategreater=0;
  int  i_record_exists=0;

	strcpy ( c_ServiceName, argv[0] );

	INITBATDBGLVL(argv[0]);		/* ver 1.1 */
	strcpy ( sql_exg_xchng_cd, argv[2] );
	strcpy ( c_rundt, argv[4] );

  fn_bat_pst_msg ( c_ServiceName, " ***** OFFLINE BOD Process Started *****", 
																																			c_tag );

	if(DEBUG_MSG_LVL_3)		/* ver 1.1 */
	{
		fn_userlog( c_ServiceName, "sql_exg_xchng_cd:%s", sql_exg_xchng_cd );
		fn_userlog( c_ServiceName, "Run Date is :%s", c_rundt );
	}

  EXEC SQL
    SELECT  exg_crrnt_stts,
            to_char(exg_nxt_trd_dt,'dd-Mon-yyyy'),
						exg_ofln_stts,
            to_char(exg_ofln_nxt_trd_dt,'dd-Mon-yyyy')
    INTO    :sql_exg_crrnt_stts,
            :sql_exg_nxt_trd_dt,
    				:sql_exg_ofln_stts,
            :sql_exg_ofln_nxt_trd_dt
    FROM    exg_xchng_mstr
    WHERE   exg_xchng_cd = :sql_exg_xchng_cd;

  if ( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName,"S31005",SQLMSG,c_errmsg);
    fn_exit ( "Unable to fetch exchange status ",'N');
	  return;
  }
	SETNULL(sql_exg_nxt_trd_dt);
	SETNULL(sql_exg_ofln_nxt_trd_dt);
	
	if(DEBUG_MSG_LVL_3)			/* ver 1.1 */
	{
		fn_userlog( c_ServiceName, "sql_exg_nxt_trd_dt:%s", sql_exg_nxt_trd_dt.arr );
		fn_userlog( c_ServiceName, "Exchange Status :%c", sql_exg_crrnt_stts );
		fn_userlog( c_ServiceName, "Offline Status :%c", sql_exg_ofln_stts );
		fn_userlog( c_ServiceName, "sql_exg_ofln_nxt_trd_dt:%s", 
																							sql_exg_ofln_nxt_trd_dt.arr );
	}

  EXEC SQL
    SELECT  1
    INTO    :i_dategreater
    FROM    dual
    WHERE   trunc(sysdate) > to_date( :c_rundt, 'DD-Mon-YYYY' );

  if ( (SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S31010",SQLMSG,c_errmsg);
    fn_exit ( "Unable to compare date ",'N');
	  return;
  }

  if ( i_dategreater == 1 )
  {
    fn_exit ( "Offline Next trade date cannot be less than system date",'N');
		return;
  }

  if ( sql_exg_crrnt_stts != EXCHANGE_UNDER_EXPIRY )
  {
    fn_exit ( "Exchange not in Expiry mode - contact system support",'N');
		return;
  }
  
  i_dategreater = 0;
  
	EXEC SQL
    SELECT  1
    INTO    :i_dategreater
    FROM    dual
    WHERE   to_date( :sql_exg_nxt_trd_dt ,'DD-Mon-YYYY') 
																		>= to_date( :c_rundt, 'DD-Mon-YYYY' );

  if ( (SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S31015",SQLMSG,c_errmsg);
    fn_exit ( "Unable to compare date ",'N');
	  return;
  }
  
  if ( i_dategreater == 1 )
  {
    fn_exit ( "Offline Next trade date cannot be <= to current Exchnage trade date",'N');
		return;
  }

  if ( sql_exg_ofln_stts != EXCHANGE_CLOSE )
  {
    fn_exit ( "Offline status not closed - contact system support",'N');
		return;
  }
  
  i_dategreater = 0;
  
	EXEC SQL
    SELECT  1
    INTO    :i_dategreater
    FROM    dual
    WHERE   to_date( :sql_exg_ofln_nxt_trd_dt,'DD-Mon-YYYY') 
																			>= to_date( :c_rundt, 'DD-Mon-YYYY' );

  if ( (SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S31020",SQLMSG,c_errmsg);
    fn_exit ( "Unable to compare date ",'N');
	  return;
  }
  
  if ( i_dategreater == 1 )
  {
    fn_exit ( "Offline Next trade date cannot be <= to current offline trade date",'N');
		return;
  }

  i_returncode = tpbegin( TRAN_TIMEOUT, 0 );
  if ( i_returncode == -1 )
  {
    fn_errlog(c_ServiceName,"S31025",TPMSG,c_errmsg);
    fn_exit ( "Unable to start transaction - Contact system support",'N');
		return;
  }

  fn_bat_pst_msg ( c_ServiceName, "Offline BOD Process - Updating Sequence Numbers", c_tag );

  /* Updation of all Sequence Tables - START */
  EXEC SQL
  	SELECT  1
    INTO 		:i_record_exists
    FROM 		fts_fo_tmpord_seq
    WHERE 	fts_trd_dt = :c_rundt;

  if ( (SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S31030",SQLMSG,c_errmsg);
    fn_exit ( "Unable to find ord seq info -Contact system support",'Y');
		return;
  }
  if ( SQLCODE == NO_DATA_FOUND )
  {
    EXEC SQL
      INSERT INTO fts_fo_tmpord_seq
      ( fts_trd_dt,
        fts_seq_num
      )
      VALUES
      (
        :c_rundt,
        0
      );

    if (SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31035",SQLMSG,c_errmsg);
      fn_exit ( "Unable to insert ord seq info-Contact system support",'Y');
		  return;
    }
  }

  EXEC SQL
    DELETE fts_fo_tmpord_seq
    WHERE fts_trd_dt <= :sql_exg_ofln_nxt_trd_dt;

  if ( (SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S31040",SQLMSG,c_errmsg);
    fn_exit ( "Unable to delete temp order seq info -Contact system support",'Y');
	  return;
	}

  /* Updation of all Sequence Tables - END */

  EXEC SQL
    UPDATE  exg_xchng_mstr
    SET     exg_ofln_nxt_trd_dt = to_date(:c_rundt,'dd-Mon-yyyy'),
						exg_ofln_stts = 'O'				
    WHERE   exg_xchng_cd = :sql_exg_xchng_cd;

  if ( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName,"S31045",SQLMSG,c_errmsg);
    fn_exit ( "Unable to update next trade date- Contact system support",'Y');
		return;
  }

  i_returncode = tpcommit(0);
  if ( i_returncode == -1 )
  {
    fn_errlog(c_ServiceName,"S31050",TPMSG,c_errmsg);
    fn_exit ( "Unable to commit transaction- Contact system support",'Y');
	  return;
  }

  fn_exit ( "*** Offline BOD Process Completed ****",'N');

	return;
}

void fn_exit( char* c_err_msg, char c_mem_flg )
{
    fn_bat_pst_msg ( c_ServiceName, c_err_msg, c_tag );
    if( c_mem_flg == 'Y' )
    {
      tpabort(0);
    }
		return;
}

int fn_bat_init ( int argc, char *argv[] ) 
{
	fn_var = BAT_OFLN_FOBOD;

  if ( argc != 5 )
  {
    fn_userlog ( "bat_ofln_fobod",
   "Usage : %s <Tag> <Exchange Code> <Pipe id> <Offline Next Trade Date>", argv[0] );
		return -1;
	}

	return 0;
}

void fn_bat_term (  int argc, char *argv[] )
{
   return ;
}

int fn_prcs_trg ( char *c_pgm_nm, int i_trg_typ )
{
  return 0;
}
