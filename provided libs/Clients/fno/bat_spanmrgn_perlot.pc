/****************************************************************************/
/*  Program           : BAT_SPANMRGN_PERLOT                                   */
/*                                                                            */
/*  Input             :                                                       */
/*                                                                            */
/*  Output            : Success / Failure                                     */
/*                                                                            */
/*  Version           : 1.0        Release(Suchita Dabir)                     */
/*  Version           : 1.1        Mailer added ( Suchita Dabir )             */
/*  Version           : 1.2        Order Journey span per lot ( Naveena )     */
/******************************************************************************/

#include <atmi.h>
#include <fml32.h>
#include <sqlca.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fml_def.h>
#include <fo_fml_def.h>
#include <fn_ddr.h>
#include <string.h>
#include <fml_rout.h>
#include <fn_read_debug_lvl.h>
#include <stdio.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <fn_scklib_iml.h>
#include <unistd.h>

/*** int fn_get_contracts_to_process( char* c_ServiceName,char *c_xchng_cd,char* c_flag ); *** Ver 1.2 ***/

/*** FBFR32   *ptr_fml_buf;  *** Ver 1.2 ***/
varchar c_err_msg[250];
 char c_msg[256]="\0";
 int  i_trnsctn = 0;
 int  i_ch_val = 0;
 int i_returncode = 0;

/********** BAT_SPANMRGN_PERLOT.pc  **********/
void BAT_SPANMRGN_PERLOT ( int argc, char *argv[] )
{

 sql_cursor  sys_cursor_snd; /*** Ver 1.2 ***/

 int i_ret_typ = 0;
 char c_trade_dt[20]="\0";
 char c_xchng_cd[5]="\0";
 char c_ServiceName[20]="\0";
 long li_tot_rcrds = 0;
 long li_cnt = 0;
 char c_exist = '\0';
 
 /*** ver 1.1 starts ***/
 char c_command[300];
 MEMSET( c_command );
 /*** ver 1.1 ends ***/


 /*** char c_iprdct_typ = 'O'; *** Ver 1.2 ***/
 char c_underlyng[25] = "\0";
 /*** int  i_counter = 0; *** Ver 1.2 ***/
 char c_prdct_typ = 'O';
 char c_xchng_code[5]="\0";
 char c_indxstk='\0';
 char c_expry_typ[20]="\0";
 char c_exer_typ='\0';
 char c_opt_typ='\0';
 long l_strike_prc=0;
 long l_min_lot_qty=0;
 double  d_ltp=0.0;

 strcpy ( c_ServiceName, argv[ 0 ] );
 strcpy(c_xchng_cd, argv[2] );
 rtrim(c_xchng_cd);
  sprintf ( c_msg, "Batch process %s started", argv[0] );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

 /***i_ret_typ = fn_get_contracts_to_process( c_ServiceName,c_xchng_cd,&c_exist );
 if( i_ret_typ== -1 )
 {
    fn_errlog(c_ServiceName, "S31005", LIBMSG, c_err_msg.arr);
    fn_userlog(c_ServiceName,"fn_get_clients_to_process FAILED");
    return;
 }

  if ( i_ret_typ == 0 && c_exist == 'N' )
  {
   fn_userlog( c_ServiceName,"No record exist");
   strcpy ( c_msg, "No record exist");
   fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
   return;
  }

  li_tot_rcrds = fn_reccnt_rs ( ptr_fml_buf,
                                c_ServiceName,
                                c_err_msg.arr,
                                FFO_UNDRLYNG);


  if ( li_tot_rcrds == -1 )
  {
    fn_errlog( c_ServiceName, "S31010", LIBMSG, c_err_msg.arr );
    fn_dstry_rs ( ptr_fml_buf );
    return;
  }

  strcpy ( c_msg, "Data created." );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  sprintf ( c_msg, "Total Client Records : %ld", li_tot_rcrds );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );


  for ( li_cnt=1; li_cnt<=li_tot_rcrds; li_cnt++ )
  {
    i_ch_val = fn_getnxt_rs ( ptr_fml_buf,
                              c_ServiceName,
                              c_err_msg.arr,
                              10,
                              FFO_XCHNG_CD, (char *)c_xchng_code,NULL,
                              FFO_PRDCT_TYP,(char *)&c_prdct_typ,NULL,
                              FFO_INDX_INDCTR,(char *)&c_indxstk,NULL,
                              FFO_UNDRLYNG,(char *)c_underlyng,NULL,
                              FFO_EXPRY_DT,(char *)c_expry_typ,NULL,
                              FFO_EXER_TYP,(char *)&c_exer_typ,NULL,
                              FFO_OPT_TYP,(char *)&c_opt_typ,NULL,
                              FFO_STRK_PRC,(char *)&l_strike_prc,NULL,
                              FFO_MIN_LOT_QTY,(char *)&l_min_lot_qty,NULL,
                              FFO_CHNG_OI,(char *)&d_ltp,NULL
                              );
                             
    if ( i_ch_val != 0 )
    {
      fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg.arr );
      fn_dstry_rs ( ptr_fml_buf );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return;
    }
*** Ver 1.2 ***/

		/*** Ver 1.2 starts ***/
EXEC SQL
 SELECT  count(0)
	INTO   :li_tot_rcrds
   FROM  FTQ_FO_TRD_QT,FUM_FO_UNDRLYNG_MSTR
   WHERE FTQ_XCHNG_CD = :c_xchng_cd
     AND FUM_XCHNG_CD = FTQ_XCHNG_CD
     AND FUM_PRDCT_TYP = FTQ_PRDCT_TYP
     AND FUM_QT_TRDNG_FLG = 'T'
    /*** AND FUM_SLTP_FP_TRDNG_FLG = 'T' ***/
     AND FUM_UNDRLYNG = FTQ_UNDRLYNG
     AND    FTQ_EXPRY_DT  >= trunc(sysdate)
     AND    FTQ_EXPRY_DT <= ( select max(FTQ_EXPRY_DT)
                                    from FTQ_FO_TRD_QT
                                    where FTQ_XCHNG_CD = :c_xchng_cd
                                    and FTQ_PRDCT_TYP LIKE 'F'
                                    and FTQ_UNDRLYNG  = 'NIFTY')
     AND FTQ_PRDCT_TYP != 'S'
     ORDER BY FTQ_PRDCT_TYP,FTQ_EXPRY_DT,FTQ_STRK_PRC,FTQ_OPT_TYP;

 if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
 {
  fn_errlog(c_ServiceName, "S31020", SQLMSG, c_err_msg.arr);
  strcpy( c_msg, "System error. Contact system support" );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
  return;
 }


EXEC SQL ALLOCATE :sys_cursor_snd;
 EXEC SQL EXECUTE
 BEGIN
 OPEN :sys_cursor_snd FOR
 SELECT  FTQ_XCHNG_CD,
         FTQ_PRDCT_TYP,
         FTQ_INDSTK,
         FTQ_UNDRLYNG,
         FTQ_EXPRY_DT,
         FTQ_EXER_TYP,
         FTQ_OPT_TYP,
         FTQ_STRK_PRC,
         FTQ_MIN_LOT_QTY,
         FTQ_LST_TRD_PRC/100
   FROM  FTQ_FO_TRD_QT,FUM_FO_UNDRLYNG_MSTR
   WHERE FTQ_XCHNG_CD = :c_xchng_cd
     AND FUM_XCHNG_CD = FTQ_XCHNG_CD
     AND FUM_PRDCT_TYP = FTQ_PRDCT_TYP
     AND FUM_QT_TRDNG_FLG = 'T'
    /*** AND FUM_SLTP_FP_TRDNG_FLG = 'T' ***/
     AND FUM_UNDRLYNG = FTQ_UNDRLYNG
     AND    FTQ_EXPRY_DT  >= trunc(sysdate)
     AND    FTQ_EXPRY_DT <= ( select max(FTQ_EXPRY_DT)
                                    from FTQ_FO_TRD_QT
                                    where FTQ_XCHNG_CD = :c_xchng_cd
                                    and FTQ_PRDCT_TYP LIKE 'F'
                                    and FTQ_UNDRLYNG  = 'NIFTY')
		 AND FTQ_PRDCT_TYP != 'S'
		 ORDER BY FTQ_PRDCT_TYP,FTQ_EXPRY_DT,FTQ_STRK_PRC,FTQ_OPT_TYP;  
    /**  AND FTQ_PRDCT_TYP = :c_iprdct_typ;  *** Ver 1.2 ***/
 END;
 END-EXEC;

 if( SQLCODE != 0 )
 {
  fn_userlog(c_ServiceName,"B");
  fn_errlog(c_ServiceName, "S31025", SQLMSG, c_err_msg.arr);
  strcpy( c_msg, "System error. Contact system support" );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
  return;
 }

/*** i_counter = 0; *** Ver 1.2 ***/
 while(1)
 {
  MEMSET(c_underlyng);
  MEMSET(c_xchng_code);
  MEMSET(c_exer_typ);
  c_prdct_typ='\0';
  c_indxstk='\0';
  c_exer_typ='\0';
  c_opt_typ='\0';
  l_strike_prc=0;
  l_min_lot_qty=0;
  d_ltp=0;

  EXEC SQL
  FETCH :sys_cursor_snd
  INTO :c_xchng_code,
       :c_prdct_typ,
       :c_indxstk,
       :c_underlyng,
       :c_expry_typ,
       :c_exer_typ,
       :c_opt_typ,
       :l_strike_prc,
       :l_min_lot_qty,
       :d_ltp;

  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
   fn_errlog( c_ServiceName, "S31030", SQLMSG, c_err_msg.arr );
   /*** fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr ); *** Ver 1.2 ***/
   EXEC SQL CLOSE :sys_cursor_snd ;
   EXEC SQL FREE  :sys_cursor_snd;
   /*** if( i_counter != 0)
   {
      tpfree((char *)ptr_fml_buf);
   } *** Ver 1.2 ***/
   return;
  }

  if( SQLCODE == NO_DATA_FOUND )
  {
   fn_userlog(c_ServiceName,"All records fetched or Inside No data found for Match Account");
   /*** if( i_counter == 0 )
   {
          *c_flag = 'N';
   } *** Ver 1.2 ***/
   EXEC SQL CLOSE :sys_cursor_snd;
   EXEC SQL FREE  :sys_cursor_snd;
   break;
  }

   rtrim(c_underlyng);
   rtrim(c_xchng_code);
   rtrim(c_expry_typ);
   /*** i_counter = 1; *** Ver 1.2 ***/
   li_cnt++; /*** Ver 1.2 ***/


		if(li_cnt % 10000 == 1) /*** Ver 1.2 ***/
		{
    	sprintf ( c_msg, "Processing record %ld of %ld", li_cnt, li_tot_rcrds );
    	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
		}

		if(DEBUG_MSG_LVL_3)
		{	
		 fn_userlog(c_ServiceName,"Contract packed %d:%c:%s:%s:%ld:%c: successfully... ",li_cnt,c_prdct_typ,c_underlyng,c_expry_typ,l_strike_prc,c_opt_typ);
		}

    i_ch_val = fn_pre_prcs_rcrd ( c_ServiceName,
                                  c_err_msg.arr,
                                  "sfr_beod_prcs",
                                  li_cnt,
                                  li_tot_rcrds );

    if  ( i_ch_val == -1 )
    {
      fn_errlog( c_ServiceName, "S31035", LIBMSG, c_err_msg.arr );
      /*** fn_dstry_rs ( ptr_fml_buf ); *** Ver 1.2 ***/
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return;
    }

    i_ch_val = fn_acall_svc_fml ( c_ServiceName,
                                  c_err_msg.arr,
                                  "SFO_OFLT_MRGN",
                                  0,
                                  11,
                                  FFO_XCHNG_CD, (char *)c_xchng_code,
                                  FFO_PRDCT_TYP,(char *)&c_prdct_typ,
                                  FFO_INDX_INDCTR,(char *)&c_indxstk,
                                  FFO_UNDRLYNG,(char *)c_underlyng,
                                  FFO_EXPRY_DT,(char *)c_expry_typ,
                                  FFO_EXER_TYP,(char *)&c_exer_typ,
                                  FFO_OPT_TYP,(char *)&c_opt_typ,
                                  FFO_STRK_PRC,(char *)&l_strike_prc,
                                  FFO_MIN_LOT_QTY,(char *)&l_min_lot_qty,
                                  FFO_CHNG_OI,(char *)&d_ltp,
                                  FFO_BAT_TAG, ( char * )c_tag
                                 );

    if ( i_ch_val == -1 )
    {
      fn_errlog( c_ServiceName, "S31040", LIBMSG, c_err_msg.arr );
      /*** fn_dstry_rs ( ptr_fml_buf ); *** Ver 1.2 ***/
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return;
    }
  }

  /*** fn_dstry_rs ( ptr_fml_buf ); *** Ver 1.2 ***/

  sprintf(c_command,"ksh $HOME/sh_scripts/fo_span_perlot_failed_rec.sh '%s' ",c_ServiceName); /*** added in ver 1.1 ***/
  system(c_command); /** added in ver 1.1 **/

 sprintf ( c_msg, "Batch process %s ended", argv[ 0 ] );
 fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

 fn_userlog(c_ServiceName,"**  bat_spanmrgn_perlot ended successfully **");


 return;
}
/*** Commented in Ver 1.2 ***
int fn_get_contracts_to_process( char* c_ServiceName,char* c_xchng_cd,char* c_flag )
{
 char c_iprdct_typ = 'O';
 char c_underlyng[25] = "\0";
 int  i_counter = 0;
 char c_prdct_typ = 'O';
 char c_xchng_code[5]="\0";
 char c_indxstk='\0';
 char c_expry_typ[20]="\0";
 char c_exer_typ='\0';
 char c_opt_typ='\0';
 long l_strike_prc=0;
 long l_min_lot_qty=0;
 double  d_ltp=0.0;
 sql_cursor  sys_cursor_snd;

 Finit32(ptr_fml_buf,MIN_FML_BUF_LEN);

 EXEC SQL ALLOCATE :sys_cursor_snd;
 EXEC SQL EXECUTE
 BEGIN
 OPEN :sys_cursor_snd FOR
 SELECT  FTQ_XCHNG_CD,
         FTQ_PRDCT_TYP,
         FTQ_INDSTK,
         FTQ_UNDRLYNG,
         FTQ_EXPRY_DT,
         FTQ_EXER_TYP,
         FTQ_OPT_TYP,
         FTQ_STRK_PRC,
         FTQ_MIN_LOT_QTY,
         FTQ_LST_TRD_PRC/100
   FROM  FTQ_FO_TRD_QT,FUM_FO_UNDRLYNG_MSTR
   WHERE FTQ_XCHNG_CD = :c_xchng_cd 
     AND FUM_XCHNG_CD = FTQ_XCHNG_CD
     AND FUM_PRDCT_TYP = FTQ_PRDCT_TYP
     AND FUM_QT_TRDNG_FLG = 'T'
     AND FUM_SLTP_FP_TRDNG_FLG = 'T' 
     AND FUM_UNDRLYNG = FTQ_UNDRLYNG
     AND FTQ_PRDCT_TYP = :c_iprdct_typ;  
 END;
 END-EXEC;

 if( SQLCODE != 0 )
 {
  fn_userlog(c_ServiceName,"B");
  fn_errlog(c_ServiceName, "S31045", SQLMSG, c_err_msg.arr);
  strcpy( c_msg, "System error. Contact system support" );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
  return -1;
 }
 i_counter = 0;
 while(1)
 {
  MEMSET(c_underlyng);
  MEMSET(c_xchng_code);
  MEMSET(c_exer_typ);
  c_prdct_typ='\0';
  c_indxstk='\0';
  c_exer_typ='\0';
  c_opt_typ='\0';
  l_strike_prc=0;
  l_min_lot_qty=0;
  d_ltp=0;  

  EXEC SQL
  FETCH :sys_cursor_snd
  INTO :c_xchng_code,
       :c_prdct_typ,
       :c_indxstk,
       :c_underlyng,
       :c_expry_typ,
       :c_exer_typ,
       :c_opt_typ,
       :l_strike_prc,
       :l_min_lot_qty,
       :d_ltp; 

  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
   fn_errlog( c_ServiceName, "S31050", SQLMSG, c_err_msg.arr );
   fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg.arr );
   EXEC SQL CLOSE :sys_cursor_snd ;
   EXEC SQL FREE  :sys_cursor_snd;
   if( i_counter != 0)
   {
      tpfree((char *)ptr_fml_buf);
   }
   return -1;
  }

  if( SQLCODE == NO_DATA_FOUND )
  {
   fn_userlog(c_ServiceName,"All records fetched or Inside No data found for Match Account");
   if( i_counter == 0 )
   {
          *c_flag = 'N';
   }
   EXEC SQL CLOSE :sys_cursor_snd;
   EXEC SQL FREE  :sys_cursor_snd;
   break;
  }

   rtrim(c_underlyng);
   rtrim(c_xchng_code);
   rtrim(c_expry_typ);

   i_counter = 1;
   i_returncode = fn_pack_vartofml (c_ServiceName,
                                     c_err_msg.arr,
                                     &ptr_fml_buf,
                                     10,
                                     FFO_XCHNG_CD, (char *)c_xchng_code,
                                     FFO_PRDCT_TYP,(char *)&c_prdct_typ,
                                     FFO_INDX_INDCTR,(char *)&c_indxstk,
                                     FFO_UNDRLYNG,(char *)c_underlyng,
                                     FFO_EXPRY_DT,(char *)c_expry_typ,
                                     FFO_EXER_TYP,(char *)&c_exer_typ,
                                     FFO_OPT_TYP,(char *)&c_opt_typ,
                                     FFO_STRK_PRC,(char *)&l_strike_prc,
                                     FFO_MIN_LOT_QTY,(char *)&l_min_lot_qty,
                                     FFO_CHNG_OI,(char *)&d_ltp);
   if ( i_returncode == -1 )
   {
       fn_errlog( c_ServiceName, "S31055", LIBMSG, c_err_msg.arr  );
       EXEC SQL CLOSE :sys_cursor_snd;
       EXEC SQL FREE  :sys_cursor_snd; 
       strcpy( c_msg, "System error. Contact system support" );
       fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
       return -1;
   }
   else
   {
       fn_userlog(c_ServiceName,"Contract packed %d:%c:%s:%s:%ld:%c: successfully... ",i_cntr,c_prdct_typ,c_underlyng,c_expry_typ,l_strike_prc,c_opt_typ); 
   }
 }
 return 0;
}
***/

int fn_bat_init ( int argc, char *argv[] )
{
  fn_var = BAT_SPANMRGN_PERLOT;
  return 0;
}

void fn_bat_term (  int argc, char *argv[] )
{
   return ;
}

int fn_prcs_trg ( char *c_pgm_nm, int i_trg_typ )
{
  return 0;
}
