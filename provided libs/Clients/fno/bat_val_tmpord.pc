/* ver 1.1 20-Dec-2007 IBM Migration */
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_ddr.h>
#include <string.h> /* ver 1.1 */
#include <stdlib.h>	/* ver 1.1 */
#include <fn_read_debug_lvl.h>	/* ver 1.1 */

void BAT_VAL_TMPORD ( int argc, char *argv[] )
{
	long int li_tot_rcrds;
  int i_ch_val;
  long int li_cnt;
  char c_msg[256];
	FBFR32 *ptr_fml_buf;
  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];

  char c_tmp_ordr_ref [ 19 ];
  char c_clm_mtch_accnt [ 11 ];
  char c_trd_dt [ LEN_DATE ];

  EXEC SQL BEGIN DECLARE SECTION;
  	char c_xchng_cd [ 4 ];
  	char c_crrnt_stts ;
  	char c_exg_ofln_stts ;
  EXEC SQL END DECLARE SECTION;

  strcpy ( c_ServiceName, argv[0] );
	INITBATDBGLVL(argv[0]);		/* ver 1.2 */

	sprintf ( c_msg, "Batch process %s started", argv[0] );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

	strcpy ( c_msg, "Creating data. Please wait ... " );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  if( argc < 5 )
  {
    fn_bat_pst_msg ( c_ServiceName, "Invalid Number of Arguments", c_tag );
    exit(0);
  }

  strcpy( c_xchng_cd, argv[2] );
  strcpy( c_trd_dt, argv[4] );

  EXEC SQL
    SELECT  exg_crrnt_stts,
            EXG_OFLN_STTS
    INTO    :c_crrnt_stts,
            :c_exg_ofln_stts
    FROM    exg_xchng_mstr
    WHERE   exg_xchng_cd = :c_xchng_cd;

  if ( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName,"S31005",SQLMSG,c_err_msg);
  	strcpy ( c_msg, "Unable to fetch exchange status" );
  	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
		return;
  }

  if ( c_crrnt_stts != EXCHANGE_UNDER_EXPIRY )
  {
		fn_errlog( c_ServiceName, "S31010", LIBMSG, c_err_msg );
  	strcpy ( c_msg, "Exchange not in Expiry mode - contact system support" );
  	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
		return;
  }

  if ( c_exg_ofln_stts != EXCHANGE_CLOSE )
  {
		fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg );
  	strcpy ( c_msg, "Exchange offline status not closed - contact system support" );
  	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
		return;
  }

	ptr_fml_buf = fn_create_rs ( c_ServiceName,
                               c_err_msg,
                               "SFO_GT_TMPORDRC",
                               TPNOTIME,
															 2,
                               FFO_XCHNG_CD, ( char * )c_xchng_cd,
                               FFO_TRD_DT, (char * )c_trd_dt );
	if ( ptr_fml_buf == NULL )
	{
		fn_errlog( c_ServiceName, "S31020", LIBMSG, c_err_msg );
		return;
	}

	li_tot_rcrds = fn_reccnt_rs ( ptr_fml_buf,
                                c_ServiceName,
                                c_err_msg,
                                FFO_SPRD_ORD_REF );
	if ( li_tot_rcrds == -1 )
	{
		fn_errlog( c_ServiceName, "S31025", LIBMSG, c_err_msg );
		fn_dstry_rs ( ptr_fml_buf );
		return;
	}

	strcpy ( c_msg, "Data created." );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
  sprintf ( c_msg, "Total records = %ld", li_tot_rcrds );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  for ( li_cnt=1; li_cnt<=li_tot_rcrds; li_cnt++ )
  {
		i_ch_val = fn_getnxt_rs ( ptr_fml_buf,
                              c_ServiceName,
                              c_err_msg,
															2,
												FFO_SPRD_ORD_REF,( char *)c_tmp_ordr_ref,NULL,
                        FFO_EBA_MTCH_ACT_NO, ( char * )c_clm_mtch_accnt,NULL);

		if ( i_ch_val != 0 )
		{
			fn_errlog( c_ServiceName, "S31030", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
  		strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return;
		}

		sprintf ( c_msg, "Processing record %ld of %ld", li_cnt, li_tot_rcrds );
 		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

    i_ch_val = fn_pre_prcs_rcrd ( c_ServiceName,
                                  c_err_msg,
                                  "sfr_beod_gtdt",
                                  li_cnt,
                                  li_tot_rcrds );
    if ( i_ch_val == -1 )
    {
			fn_errlog( c_ServiceName, "S31035", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
  		strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return;
    }

    i_ch_val = fn_acall_svc_fml ( c_ServiceName,
                                  c_err_msg,
                                  "SFO_PRC_TMPORD",
                                  0,
                                  4,
															FFO_SPRD_ORD_REF,( char *)c_tmp_ordr_ref,
                              FFO_EBA_MTCH_ACT_NO, (char * )c_clm_mtch_accnt,
                              FFO_BAT_TAG, ( char * )c_tag,
                              FFO_REC_NO, ( char * )&li_cnt );
    if ( i_ch_val == -1 )
    {
			fn_errlog( c_ServiceName, "S31040", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
  		strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return;
		}
  }

	fn_dstry_rs ( ptr_fml_buf );

	sprintf ( c_msg, "Batch process %s ended", argv[0] );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  return;
}

int fn_bat_init ( int argc, char *argv[] ) 
{
	fn_var = BAT_VAL_TMPORD;
	return 0;
}

void fn_bat_term ( int argc, char *argv[] )
{
  return;
}

int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
	return 0;
}
