/******************************************************************************/
/*  Program           : BAT_EODMTM                                            */
/*                                                                            */
/*  Input             : FFO_EBA_MTCH_ACT_NO                                   */
/*                      FFO_XCHNG_CD                                          */
/*                      FFO_UNDRLYNG                                          */
/*                      FFO_CTGRY_INDSTK                                      */
/*                      FFO_TRD_DT                                            */
/*                      FFO_RUN_NUM  (Need to be asked )                      */
/*                                                                            */
/*  Output            : Success / Failure                                     */
/*                                                                            */
/*  Description       : This batch  process  processes the records in         */
/*                      End of Day (EOD ) MTM  for SPAN customers .           */
/*                                                                            */
/*  Log               : Ver 1.0   25-Jun-2011       													*/
/*                    : Ver 1.1   23-May-2012                                 */
/*                    : Ver 1.2   22-Feb-2013                                 */
/*                    : Ver 1.3   28-Jul-2021                                 */
/******************************************************************************/
/*  Ver 1.0           : New Release                                           */
/*  Ver 1.1           : BSE ADM Changes Sandip Tambe                          */
/*  Ver 1.2           : GAME Backoffice Automation                            */
/*  Ver 1.3           : CR-ISEC10-156987 MarginShotfall_Communication         */
/******************************************************************************/

#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_ddr.h>
#include <string.h>			
#include <stdlib.h>		 
#include <fml_rout.h>	
#include <fn_read_debug_lvl.h>      
#include <sqlca.h>							/** Ver 1.1 **/
#include <fn_pos.h>   /** Ver 1.2 ***/


 /*** void fn_upd_audittab ( char,char *, char * );    *** Ver 1.1 *** Ver 1.2 commented */

void BAT_EODMTM( int argc, char *argv[] )
{
	long int li_tot_rcrds = 0;
  int i_ch_val     ;
  long int li_cnt       = 0;
  long int l_report_no  = 0;
  char c_msg[256];
	FBFR32 *ptr_fml_buf;
  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];

  char c_xchng_cd [ 4 ];
  char c_exp_dt [ LEN_DATE ];
  char c_trd_dt [ LEN_DATE ];
  char c_cln_mtch_accnt [ 11 ];
  char c_undrlyng [ 7 ];
  char c_rout_crt [ 4 ];
  char c_prd_typ;
  char c_exrc_typ;
  char c_cntrct_tag;
  char c_ind_stk;
  char c_run_mode= 'N'; /** Ver 1.3 **/

  int     i_trnsctn;            /* ver 1.1 */
  char    c_flg = 'F';          /* ver 1.1 */

  strcpy ( c_ServiceName, argv[0] );

	INITBATDBGLVL(argv[0]);  

  /**** Ver 1.2 Starts ****/
  char c_program_nm[33];
  char c_xchng_cd_tmp[4];
  char c_match_id[11];
  char c_error_txt[256];

  MEMSET(c_program_nm);
  MEMSET(c_xchng_cd_tmp);
  MEMSET(c_match_id);
  MEMSET(c_error_txt);

  /**** Ver 1.2 Ends ***/

	sprintf ( c_msg, "Batch process %s started", argv[0] );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

	strcpy ( c_msg, "Creating data. Please wait ... " );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  /*** Ver 1.2 ***/
  strcpy(c_program_nm,c_ServiceName);
  strcpy(c_xchng_cd_tmp,argv[2]);

  /** Ver 1.2 ends ***/

  if( argc < 6 )
  {
    fn_bat_pst_msg ( c_ServiceName, "Invalid Number of Arguments", c_tag );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
    exit(0);
  }

  /** Ver 1.3 Starts **/
  if( argc == 7 )
  {
    c_run_mode = argv[6][0];

    fn_userlog(c_ServiceName,"c_run_mode :%c:",c_run_mode);
  }
  /** Ver 1.3 Ends **/


  strcpy( c_xchng_cd, argv[2] );
  strcpy( c_trd_dt, argv[4] );
  l_report_no = atoi ( argv[5] );

  if( DEBUG_MSG_LVL_3 )
  {
    fn_userlog( c_ServiceName, "---------- BAT_EODMTM STARTED ---------");
    fn_userlog( c_ServiceName, "Following Are the Inputs");
    fn_userlog( c_ServiceName, "Exchange code :%s:", c_xchng_cd );
    fn_userlog( c_ServiceName, "Trade Date    :%s:", c_trd_dt );
    fn_userlog( c_ServiceName, "Report number :%ld:", l_report_no );
  }



  fn_init_ddr_pop ( "NA", "NA", "NA" );

	/** Ver 1.2 Starts *****/

	i_trnsctn  = fn_begintran( c_ServiceName, c_err_msg );

  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName, "S31005", LIBMSG, c_err_msg);
    fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
    return;
  }
  fn_userlog(c_ServiceName,"Now Inserting record in audit_prog_runstts");

    EXEC SQL
        INSERT INTO audit_prog_runstts
                 (
                    APR_PROG_NAME,
                    APR_TIME,
                    APR_SUCC_FLG,
										APR_TRD_DT,	
                    APR_XCHNG_CD
                 )
          VALUES (
                    :c_ServiceName,
                    sysdate,
                    'N',
										:c_trd_dt,
                    :c_xchng_cd
                  );

  if( SQLCODE != 0 )
  {
     fn_errlog(c_ServiceName, "S31010", SQLMSG, c_err_msg);
     fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
     fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
     fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
     return;
  }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
     fn_errlog(c_ServiceName, "S31015", LIBMSG, c_err_msg);
     fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
     fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
     fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/  
     return;
  }

  /** Ver 1.1 Ends *****/

	ptr_fml_buf = fn_create_rs ( c_ServiceName,
                               c_err_msg,
                               "SFO_GTEODMTM",
                               TPNOTIME,
															 1,
                               FFO_XCHNG_CD, ( char * )c_xchng_cd);
	if ( ptr_fml_buf == NULL )
	{
		fn_errlog( c_ServiceName, "S31020", LIBMSG, c_err_msg );
		fn_upd_audittab(c_ServiceName,c_ServiceName,c_flg ,c_xchng_cd , c_trd_dt);         /*** Ver 1.1 **//** Ver 1.2 ***/
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
		return;
	}

	li_tot_rcrds = fn_reccnt_rs ( ptr_fml_buf,
                                c_ServiceName,
                                c_err_msg,
                                FFO_EBA_MTCH_ACT_NO );
	if ( li_tot_rcrds == -1 )
	{
		fn_errlog( c_ServiceName, "S31025", LIBMSG, c_err_msg );
		fn_dstry_rs ( ptr_fml_buf );
		fn_upd_audittab(c_ServiceName,c_ServiceName,c_flg ,c_xchng_cd , c_trd_dt);         /*** Ver 1.1 **//*** Ver 1.2 ***/
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
		return;
	}

	strcpy ( c_msg, "Data created." );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
  sprintf ( c_msg, "Total records = %ld", li_tot_rcrds );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  for ( li_cnt=1; li_cnt<=li_tot_rcrds; li_cnt++ )
  {
		i_ch_val = fn_getnxt_rs ( ptr_fml_buf,
                              c_ServiceName,
                              c_err_msg,
															4,
															FFO_EBA_MTCH_ACT_NO,( char *)c_cln_mtch_accnt,NULL,
															FFO_XCHNG_CD,( char * )c_xchng_cd, NULL,
															FFO_UNDRLYNG,( char * )c_undrlyng, NULL,
															FFO_CTGRY_INDSTK,( char * )&c_ind_stk, NULL );

		if ( i_ch_val != 0 )
		{
			fn_errlog( c_ServiceName, "S31030", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
  		strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			fn_upd_audittab(c_ServiceName,c_ServiceName,c_flg ,c_xchng_cd ,c_trd_dt);         /*** Ver 1.1 **//** Ver 1.2 ***/
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
			return;
		}
    
		if(li_cnt % 100 == 1)
		{
			sprintf ( c_msg, "Processing record %ld of %ld", li_cnt, li_tot_rcrds );
 			fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
		}

    i_ch_val = fn_pre_prcs_rcrd ( c_ServiceName,
                                  c_err_msg,
                                  "sfr_prseodmtm",  /** Changed From sfr_beod_gtdt to sfr_prseodmtm ***/
                                  li_cnt,
                                  li_tot_rcrds );
    if ( i_ch_val == -1 )
    {
			fn_errlog( c_ServiceName, "S31035", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
  		strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			fn_upd_audittab(c_ServiceName,c_ServiceName,c_flg ,c_xchng_cd , c_trd_dt);         /*** Ver 1.1 **//** Ver 1.2 ***/
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
			return;
    }

    fn_cpy_ddr ( c_rout_crt ) ;

		 if( DEBUG_MSG_LVL_3 )
    {
    fn_userlog( c_ServiceName, "Just Before calling SFO_PRSEODMTM");
    fn_userlog( c_ServiceName, "Match Account :%s:", c_cln_mtch_accnt);
    fn_userlog( c_ServiceName, "Exchange code :%s:", c_xchng_cd );
    fn_userlog( c_ServiceName, "Underlyng     :%s:", c_undrlyng);
    fn_userlog( c_ServiceName, "Category      :%c:", c_ind_stk);
    fn_userlog( c_ServiceName, "Report number :%ld:", l_report_no );
    }


    i_ch_val = fn_acall_svc_fml ( c_ServiceName,
                                  c_err_msg,
                                  "SFO_PRSEODMTM",
                                  0,
                                  10,  /** Change from to 10 in Ver 1.3 **/
																	FFO_EBA_MTCH_ACT_NO,( char *)c_cln_mtch_accnt,
																	FFO_XCHNG_CD,( char * )c_xchng_cd,
																	FFO_UNDRLYNG,( char * )c_undrlyng,
																	FFO_CTGRY_INDSTK,( char * )&c_ind_stk, 
                               		FFO_TRD_DT, (char * )c_trd_dt,
                                  FFO_RUN_NUM, ( char * )&l_report_no,
                               		FFO_ROUT_CRT, (char * )c_rout_crt,
                                  FFO_BAT_TAG, ( char * )c_tag,
                                  FFO_REC_NO, ( char * )&li_cnt,
                                  FFO_IS_FLG, ( char * )&c_run_mode );   /** Ver 1.3 **/
 
    if ( i_ch_val == -1 )
    {
			fn_errlog( c_ServiceName, "S31040", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
  		strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			fn_upd_audittab(c_ServiceName,c_ServiceName,c_flg ,c_xchng_cd ,c_trd_dt );         /*** Ver 1.1 **//** Ver 1.2 ***/
      strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.2 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.2 ***/
			return;
		}
  }

  fn_userlog( c_ServiceName, "Report number :%ld:", l_report_no );
	fn_dstry_rs ( ptr_fml_buf );

  /** ver 1.1 Starts ***/

  if ( c_run_mode == 'N' ) /** if else Condition added in Ver 1.3 **/
  c_flg='P';
  else
  c_flg='Z';

  fn_upd_audittab(c_ServiceName,c_ServiceName,c_flg,c_xchng_cd , c_trd_dt);/*** Ver 1.2 , Parameter added ***/

  /** Ver 1.1 Ends ***/

	sprintf ( c_msg, "Batch process %s ended", argv[0] );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  return;
}
/**** Ver 1.1 Starts ***  Commented in Ver 1.2 and included in Library *****
void fn_upd_audittab ( char c_flg ,char* c_xchng_cd ,char * c_trd_dt)
{
  char    c_err_msg[256];
  char    c_ServiceName[33];
  char    c_tag[32];

  int     i_trnsctn;

  strcpy ( c_ServiceName, "bat_span_eodmtm" );
  sprintf(c_tag,"%s_%s",c_ServiceName, c_xchng_cd);

  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName, "S31045",LIBMSG,c_err_msg);
    fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
    return;
  }

	fn_userlog(c_ServiceName, "Val of Exg Cd=<%s>, c_flg<%c>, trd_dt<%s>", c_xchng_cd, c_flg, c_trd_dt);

  EXEC SQL
    UPDATE audit_prog_runstts
    SET    apr_succ_flg = :c_flg
    WHERE  apr_prog_name = :c_ServiceName
	  AND     trunc(apr_trd_dt) = to_date(:c_trd_dt,'dd-mon-yyyy') 
    AND    apr_xchng_cd = :c_xchng_cd
    AND    apr_time = ( SELECT max(apr_time)
                        FROM   audit_prog_runstts
                        where  apr_prog_name = :c_ServiceName 
												AND    apr_xchng_cd = :c_xchng_cd);

  if ( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName, "S31050", SQLMSG, c_err_msg);
    fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    return;
  }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
    fn_errlog(c_ServiceName, "S31055", LIBMSG, c_err_msg);
    fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    return;
  }
}

*** Ver 1.1 Ends ***/

int fn_bat_init ( int argc, char *argv[] ) 
{
	fn_var = BAT_EODMTM;
	return 0;
}

void fn_bat_term ( int argc, char *argv[] )
{
  return;
}

int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
	return 0;
}


