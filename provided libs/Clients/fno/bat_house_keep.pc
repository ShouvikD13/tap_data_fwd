/******************************************************************************/
/* Service name :  BAT_HOUSE_KEEP                                             */
/*                                                                            */
/* Description  :  This Batch Program insert the data in order, exchange and  */
/*                 trade history table and deleting the same from the         */
/*                 corresponding parent table.                                */
/*                 Tables                                                     */
/*                                                                            */
/* Input        :  Expiry Date                                                */
/*                 Request Type                                               */
/*                                                                            */
/*                 Request Type will be :                                     */
/*                 O  - HOUSE_KEEP_ORDER                                      */
/*                 C  - HOUSE_KEEP_CNTRCT                                     */
/*                                                                            */
/* Output      :                                                              */
/*                                                                            */
/* Log         :   30-Nov-2001 Initial Release  - S.Balamurugan               */
/*                 26-Apr-2002 Modification being done as separate functions  */
/*                             for each table to be processed  S. Swaminathan */
/* Log 1.1     :   18-jul-2002 BP Changes  - Infotec|Sangeet                  */
/*     1.2         05-oct-2002 Corporate Action.                              */
/*                             Undrlyng wise Close Out - Infotech|Mohit       */
/*     1.3         05-Oct-2005 Ctcl id       Infotech|jagapathi               */
/*     1.4         27-Jun-2006 Null quote update    sangeet                   */
/*     1.5         18-Dec-2006 For Freeze and Y Status Transfer               */
/*     1.6         22-Feb-2007 For addition of uer id in                      */
/*                               fod_fo_ordr_dtls_hstry and                   */
/*                               ftd_fo_trd_dtls_hstry tables - Rupali        */
/*     1.7         25-Jan-2008 For Spread order Transfer - Infotech|Shailesh  */
/*     1.8         07-Mar-2008 IBM Migration Ranjit                           */
/*     1.9         02-Jan-2009 EXTENDED Market typ handling Prakash & Shailesh*/
/*     2.0         02-Feb-2009 Futplus conv-to-fut flag handling   Prakash    */
/*     2.1         12-Mar-2009 CRCNT22353 addition of cse id                  */
/*     2.2         16-Jul-2009 Derivative Strategy                            */
/*     2.3         11-Sep-2009 BRKR Charges changes impact       Venture M    */
/*     2.4         27-Sep-2009 Assgn Brokerage/ Cls out notes    Venture M    */
/*		 2.5				 15-Jan-2010 Logging FNO Positions To History  Sandeep      */
/*		 2.6				 19-Apr-2010 Stream No. Addition In History 	 Sandeep			*/
/*														 Table.																					*/
/*     2.7         27-Jul-2010 Moving FNO FUT underlying pstn Nilesh|Shailesh */
/*														 to History                                     */
/*     2.8         02-Aug-2010 Maintaining last day records   Nitin Save      */
/*                             of FTQ and LTQ 																*/
/*     2.9         07-Jan-2011 Changes for handelling no data Nitin Save      */
/*														 condition in Execrcise-Mkt table               */ 
/* 		 3.0        14-Oct-2010 In FTD min_lot_size columns added and					  */ 
/*														 validation to check if lot size is updated			*/ 
/*														 for calculating Option incentive by shamili    */
/*		 3.1				19-May-2011 Transafering all records of fec to history.     */ 
/*                            Shamili                                         */
/*     3.2        26-Apr-2011 OptionPricing-History Tables included Nitin Save*/
/*     3.3        16-Nov-2011 Delete OPM main Tables included Nitin Save      */
/*     3.4        02-Jan-2012 Moving Span positions from FCP to history				*/		
/*														and log history tables - Navina D.              */
/*     3.5        09-May-2012 Moving Data From FUS table to FUS log history   */
/*                            table --Swati A.B                               */
/*     3.6        06-Feb-2012 BSE ORS		Navina D												      */
/*     3.7        13-Jun-2012 Adding SPAN Flag in FOD and FXB history table   */
/*                            Mahesh Shinde                                   */
/*     3.8        10-Aug-2012 BSE ORS Bug fix -- Navina D.                    */
/*     3.9        08-Oct-2012 FXB_IP column added in FXB hstry table- Navina  */
/*     4.0        31-Aug-2012 ATS OPTION PRICING Tables Added-- Sandip T      */
/*     4.1        26-Nov-2012 Backoffice Optimization- Nitin Save	            */
/*		 4.2				27-Nov-2012 NRI Adj process validation --Bhushan Sonwane    */
/*     4.3        26-Feb-2013 GAME Backoffice Automation - Mahesh Shinde      */
/*		 4.4				05-Mar-2013 Changes for ROLLOVER  -- Vishnu Nair            */
/*     4.5        11-Dec-2012 SLTP FuturePLUS handling - Navina D.            */
/*     4.6        03-Oct-2013 OptionPLUS handling - Navina D.                 */
/*     4.7        16-Dec-2013 FNO VTC Order Changes - Sachin Birje            */
/*     4.8        31-Dec-2013 Preserver month end records - Samip M           */
/*     5.0        26-Mar-2014 FDR Module Changes    - Sachin Birje            */
/*     5.1        16-Apr-2014 CR_ISEC14_48665_Introduction_of_VIX_India Mahesh*/
/*     5.2        08-Jul-2014 Changes for HTML 5  - Vishnu N.                 */
/*     5.3        08-Oct-2014 CR-ISEC14-55222_I_Gain_Profit_Pricing_Model Sandip*/
/*     5.4        15-Jun-2015 FBD History Movement  -Bhupendra Malik          */
/*     5.5        22-Jun-2015 FCM-FTQ Merger Changes - Anand Dhopte           */
/*		 5.6				07-Jul-2015	Date Check for MIS - Tanmay Warkhade						*/
/*		 5.7				18-Aug-2015	Bullet scheme change - Samip M									*/
/*     5.8        13-Aug-2015 AUTO MTM Changes - Sachin Birje                 */
/*     5.9        15-Feb-2016 AUTO MTM Data housekeeping - Sachin Birje       */
/*		 6.0 			  04-Mar-2016 Cloud order changes	-	Kishor Borkar							*/
/*		 6.1        11-Mar-2016 Bhav copy Log changes  - Bhupendra Malik        */	
/*		 6.2        02-Aug-2016 AUTOMTM MAILER CHANGES - Tanmay Warkhade				*/
/*		 6.3        11-Aug-2016 Trade insert and process time changes-Sachin Birje*/
/*     6.4        21-Sep-2016 Trade Date handling for FUS-LogHstry, FCP-LogHstry*/
/*                            And FCP-Hstry tables - Vikram Gadhave           */
/*     6.5        26-Oct-2016 Future Trail Changes - Kishor Borkar            */
/*     6.6        17-Nov-2016 NVL added-Sachin Birje                          */
/*     6.7        31-Aug-2016 MY_EOS changes - Tanmay Warkhade                */
/*     6.8        30-Jun-2017 GST Changes - Anand Dhopte                      */   
/*     6.9        27-Sep-2017 Expired Order Changes - Sandeep                 */
/*     7.0        13-Nov-2017 Changes to shift Future Plus Residual Records   */
/*                            with Contract Tag 'W' to history table - Sandeep*/
/*     7.1        13-Dec-2017 Delete Invalid Token Records From Temp Table    */
/*                            FDT - Sandeep                                   */
/*     7.2        13-Jan-2018 Trade Date handling for FUP-LogHstry  And       */
/*                            FOP-LogHstry tables -  Tanmay Patel             */
/*		 7.3				22-Jan-2018 Userlog added	- (Bhushan Harekar)								*/
/*     7.4        22-Jan-2018 FBL TABLE DELETE CHANGES		- MRINAL KISHORE    */
/*		 7.5				18-Apr-2018 Optimization - (Bhushan Harekar)                */
/*																																						*/
/*     7.6        03-May-2018 PAN No is inserted in                           */
/*                            fod_fo_ordr_dtls_hstry table(Suchita Dabir)     */
/*		 7.7        18-May-2018 Monthly record deletion                         */
/*                            from FO_ERRQ_REPORT table  -  Prachi Bile       */
/*		 7.8        26-Jun-2018 LTQ_TRD_QT_PREV Query Changes - Bhushan Harekar */
/*     7.9        08-Aug-2018 Control for FNO Housekee process - Mrinal Kishor*/
/*     8.0        30-Aug-2018 Physicall Settlement of Stock Derivatives       */
/*                            phase 2 changes - MRINAL KISHORE                */
/*     8.1        03-Sep-2018 Order House keep entry in audit table in case   */
/*                            of No Records Found                             */
/*     8.2        04-Oct-2018 Exchange Code Hard Coding removed - Anand Dhopte*/
/*     8.3        17-Oct-2018 Trigger price time updated  - Varadraj G        */
/*     8.4        26-Mar-2019 Call to batch process (bat_cnv_nrml2spn)        */
/*                              - Suchita Dabir                               */
/*     8.6        18-Jun-2019 Automation of tag shift from EOD_MTM - Mrinal   */
/*     8.7        17-Jul-2019 FO TAP Last Activity Ref Changes- Suchita D.    */ 
/*     8.8        25-Jul-2019 Trans timeout increased from 10 to 20 mins Sachin */ 
/*     8.9        07-Aug-2019 Delivery Margin Changes - Suchita D.            */
/*     9.0        26-Sep-2019 Revised Delivery Margin Changes - Akash B       */
/*     9.1        11-Nov-2019 Rollover with spread - Suchita Dabir            */
/*     9.2        02-Jan-2020 Changes for Option 20 - Sandip Tambe            */
/*     9.3        18-Dec-2019	FUP Backup Live issue - Mrinal Kishore          */
/*     9.4        22-Jan-2020 Deposit Model Changes - Anuj Pancholi           */
/*     9.5        27-Jan-2020 Var Data Delete       - Tanmay Patel            */
/*     9.6        08-Feb-2020 Sensibull             - Tanmay Patel            */
/*     9.7        08-SEP-2020 Trigger Price Changes - Suchita Dabir           */
/*     9.8        08-OCT-2020 Option Plus Margin Changes - Suchita Dabir      */
/*     9.9        03-Dec-2020 Full & Lite Brokerage Model - Akash B           */
/*    10.0        05-Nov-2020 CR-ISEC14-135754 BO LODM changes - Mrinal Kishore */
/*    10.1        17-Apr-2021 Exception handling in EOS - Akash B             */
/*    10.2        17-Jun-2021 Basket order changes    - Suchita D.            */
/*    10.3        14-Jul-2021 CR-ISEC14-150547 Physical Delivery - Abhinav Kumbhar */
/*		10.4				18-Aug-2021	One Click Derivative	- Kiran Itkar							*/
/*    10.5        27-Oct-2021 Average Price for PNL (Mahesh Regulwar)         */
/*    10.6        04-Feb-2022 CR-ISEC14-165712_Disable_OPTCNTRCT_EOSBUYSELL(Nikhil */   
/*                                                                         soni)*/     
/*    10.7        27-Jan-2022 CR-ISEC14-169739 -Introduction of Algorithm Trading Strategies (Sachin Birje)    */
/*    10.8        13-Sep-2022 CR-ISEC18-175354 -To insert session ID (Dipin)  */
/*    10.9        04-Nov-2022 bat_house_keep.pc process changes      (Dipin)  */   
/* 		11.0				16-Jan-2022 Flash Trade (Ravi Malla)												*/
/*    11.1        06-Feb-2023 House keep FNO changes (Ankita Satav)           */
/*    11.2        14-Apr-2023 Real time Margin reporting changes ( Ravindra Panda )                           */
/*    11.3        08-May-2023 Basket order changes for Avail Margin benefit - Prajakta Sutar */
/*    11.4        18-May-2023 RQ:3117 FO GTT changes(Edwin Thomas)						 */
/******************************************************************************/
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <string.h>   /* ver 1.8 */
#include <fn_read_debug_lvl.h>  /* ver 1.8 */
# define SQLROWCOUNT  sqlca.sqlerrd[2]  /** Ver 4.1 **/
#include <fn_pos.h>        /*** Ver 4.3 ***/
#include <stdlib.h>        /** Ver 5.6 **/

/**#define BAT_TRAN_LOCAL 600	** Ver 7.5 ** Ver 8.8 ***/
#define BAT_TRAN_LOCAL 1200	/** Ver 8.8 **/

/*  EXEC SQL INCLUDE "table/ftm_fo_type1mtm_mrgnrpt_hstr.h"; */

char c_ServiceName[33];

void fn_exit( char *c_ServiceName, 
              int i_trnsctn, 
              char* c_err_msg, 
              char c_mem_flg );

void fn_prcs_cntrct( char *c_ServiceName, 
                     char *c_errmsg, 
                     char *c_xchng_cd,
                     char *c_date,
                     char *c_undrlyng );

void fn_prcs_futpos( char *c_ServiceName, 
                     char *c_errmsg, 
                     char *c_xchng_cd, 
                     char *c_date,
                     char *c_undrlyng );

void fn_prcs_optpos( char *c_ServiceName, 
                     char *c_errmsg, 
                     char *c_xchng_cd, 
                     char *c_date,
                     char *c_undrlyng );

void fn_prcs_futclsout( char *c_ServiceName, 
                        char *c_errmsg, 
                        char *c_xchng_cd, 
                        char *c_date,
                        char *c_undrlyng );

void fn_prcs_fvrtlist(  char *c_ServiceName, 
                        char *c_errmsg, 
                        char *c_xchng_cd, 
                        char *c_date,
                        char *c_undrlyng );
/** ver 10.2 starts **/
void fn_prcs_basketlist(  char *c_ServiceName,
                        char *c_errmsg,
                        char *c_xchng_cd,
                        char *c_date,
                        char *c_undrlyng );
/*** ver 10.2 ends ***/

/** ver 11.3 starts **/
void fn_prcs_basketmrgnlist(  char *c_ServiceName,
                        char *c_errmsg,
                        char *c_xchng_cd,
                        char *c_date,
                        char *c_undrlyng );
/*** ver 11.3 ends ***/

/*void fn_prcs_fvrtlist(  char *c_ServiceName, 
                        char *c_errmsg, 
                        char *c_xchng_cd, 
                        char *c_date );*/

void fn_prcs_trdqt(   char *c_ServiceName, 
                      char *c_errmsg, 
                      char *c_xchng_cd, 
                      char *c_date,
                      char *c_undrlyng );

void fn_prcs_asgnbk(  char *c_ServiceName, 
                      char *c_errmsg, 
                      char *c_xchng_cd, 
                      char *c_date,
                      char *c_undrlyng );

void fn_prcs_undrpstn(  char *c_ServiceName,        
                        char *c_errmsg,          /* ver 2.7 */
                      /*  char *c_xchng_cd );     *** Ver 3.6 *** Commented in Ver 7.9 ***/
                        char *c_xchng_cd,        /* Ver 7.9 */
                        char *c_date,            /* Ver 7.9 */
                        char *c_undrlyng);      /* Ver 7.9 */
	

/*** int fn_chk_lot_sz(char *);    *** Ver 3.0 *** Commented in Ver 3.6 ***/
int fn_chk_lot_sz(char *, char *);		/*** Ver 3.6 ***/

void fn_prcs_spnpos( char *c_ServiceName, 
                     char *c_errmsg, 
                     char *c_xchng_cd, 
                     char *c_date,
                     char *c_undrlyng, 		/*** Ver 3.4 ***/
										 char *c_fbc_trd_dt); /*** Ver 6.4 ***/

void fn_amc_hstry( char *c_ServiceName, 
                     char *c_errmsg, 
                     char *c_xchng_cd, 
                     char *c_date
                     );		/*** Ver 4.1 ***/


void fn_fno_hstry(char *c_ServiceName,
									char *c_errmsg
									);  /** Ver 11.1 **/

void fn_prcs_excptnlist(  char *c_ServiceName, 
													char *c_errmsg, 
													char *c_xchng_cd, 
													char *c_date,
													char *c_undrlyng );		/*** Ver 4.6 ***/

void fn_set_dlvry_prcnt(char *c_ServiceName,    /*** Ver 8.9 ***/
                          char *c_errmsg,
                          char *c_xchng_cd,
                          char *c_date
                       );

/*** Ver 4.7 Starts Here ***/
int fn_chk_vtc_prcs(char *c_trd_dt,
                   char *c_xchng_cd);
/*** Ver 4.7 Ends Here ***/


void  fn_eos_excptn(char *c_ServiceName,
                   char *c_errmsg,
                   char *c_xchng_cd,
                   char * c_date);   /*** Ver 10.1 ***/

void fn_prcs_gtt(char* c_ServiceName, char* c_errmsg, char* c_xchng_cd, char* c_date, char* c_undrlyng); /** Ver 11.4 **/

char exp_dt_prs = 'Y';      /* ver 1.2 */
char und_prs = 'Y';         /* ver 1.2 */
char c_cmd_ln[100] = "\0";   /*** Ver 8.4 ***/
int i_ch_val = 0 ;          /*** Ver 8.4 ***/

int fn_chk_nri_adj(char *, char *);    /*** Ver 4.2 ***/
/*** int fn_del_fbd(void);									 ** Ver 5.4 ** Commented in Ver 8.2 ***/
int fn_del_fbd(char *c_xchng_cd);                 /*** Ver 8.2 ***/
int fn_del_fbl(char *c_xchng_cd);                 /*** Ver 6.1 ***/

void BAT_HOUSE_KEEP ( int argc, char *argv[] )
{

  char c_msg [ 100 ];
  char c_errmsg [ 256 ];
  char c_event [ 256 ];     /***  Ver 6.9 ***/
  int i_returncode;
  int i_trnsctn=0;
	int i_ret_val=0;				/** Ver 5.4 **/
  int i_ordr_house_keep = 0;  /***  Ver 6.9 ***/ 
	int i_date_diff = 0;    /** Ver 7.7 **/
	long l_rec_cnt = 0;     /** Ver 7.9 **/
  int  i_upd_flg=0;   /*** ver 8.9 ***/
  int  i_record_cnt = 0; /** Ver 9.5 **/
  int i_rec_cont = 0; /** Ver 9.5 **/

  /**** Ver 4.3 Starts ****/
  char c_program_nm[33];
  char c_xchng_cd_tmp[4];
  char c_match_id[11];
  char c_error_txt[256];
  char c_err_msg[256];
	char  c_command[150] = "\0";    /** Ver 5.6 **/ 
	char   c_path[100] = "\0";     /** Ver 5.6 **/
	char c_max_dt[12];             /** Ver 7.7 **/

  MEMSET(c_program_nm);
  MEMSET(c_xchng_cd_tmp);
  MEMSET(c_match_id);
  MEMSET(c_error_txt);
  MEMSET(c_err_msg);

  /**** Ver 4.3 Ends ***/

  EXEC SQL BEGIN DECLARE SECTION;
    char c_rqst_typ;
    char c_date [ 12 ];
		char c_fbc_trd_dt [12]; 												/**  Ver 5.6 **/
	  char c_prd_trd_dt [12];												/**  Ver 5.6 **/
    int i_rec_cnt;
    int i_exrec_cnt;
    int i_count = 0;					/*** to be removed by MRK ***/
    char c_xchng_cd [ 4 ];
    char c_undrlyng [ 7 ];    /* ver 1.2 */
  varchar insert_stmt[5000];  /** Ver 9.5 **/
  EXEC SQL END DECLARE SECTION;

  strcpy ( c_ServiceName, argv[0] );
  INITBATDBGLVL(argv[0]); /* ver 1.8 */
  strcpy ( c_xchng_cd, argv[2] );
  strcpy ( c_date, argv[4] );
  c_rqst_typ = *argv[5] ;
  strcpy ( c_undrlyng, argv[6] );     /* ver 1.2 */

  /*** Ver 4.3 ***/
  strcpy(c_program_nm,c_ServiceName);
  strcpy(c_xchng_cd_tmp,c_xchng_cd);
  /** Ver 4.3 ends ***/

  fn_userlog( c_ServiceName, "House Keep process started " );  
  fn_bat_pst_msg ( c_ServiceName, " ***** House Keeping Process Started *****",c_tag );

  if(DEBUG_MSG_LVL_3)
  {
    fn_userlog( c_ServiceName, "c_date :%s:", c_date );
    fn_userlog( c_ServiceName, "c_rqst_typ :%c:", c_rqst_typ );
    fn_userlog( c_ServiceName, "c_undrlyng :%s:", c_undrlyng );
  }

  if(strcmp(c_undrlyng,"NA") == 0)  /* date not present - ver 1.2 */
    und_prs = 'N';
  else
    exp_dt_prs = 'N';



	/************************* 3.0 Starts **********************************/
  if ( fn_chk_lot_sz(c_date,c_xchng_cd) )
  {
    fn_userlog (c_ServiceName," I Lot size check failed ");
    /*Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_msg, 0 );
    tpreturn( TPFAIL, ERR_BFR, ( char * )ptr_fml_Ibuf, 0, 0 );*/

		fn_errlog(c_ServiceName,"S31005",DEFMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,
                         "I Lot size check failed",'N');
    strcpy(c_error_txt,"Lot size check failed, Contact System Support");  /*** Ver 4.3 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/ 
    return;
  }

  /************************* 3.0 Ends **********************************/


	/************************* 4.2 Starts **********************************/
	
	if(strcmp(c_xchng_cd,"NFO") == 0)
	{
  	if ( fn_chk_nri_adj(c_date,c_xchng_cd) )
  	{
    	fn_userlog (c_ServiceName," NRI Adj process check failed ");
    	fn_errlog(c_ServiceName,"S31010",DEFMSG,c_errmsg);
    	fn_exit ( c_ServiceName, i_trnsctn, "NRI Adj process check failed",'N');
      strcpy(c_error_txt,"Lot size check failed, Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
    	return;
  	}
	}

  /************************* 4.2 Ends **********************************/

		/***************** Added in Ver 5.6 Starts********************/

   fn_userlog(c_ServiceName,"Anand Exchange Code Is :%s:",c_xchng_cd); /* Testing */

		EXEC SQL
		select max(FBC_TRD_DT) 
		into :c_fbc_trd_dt
		from EXG_XCHNG_MSTR,FBC_FO_BRNCH_CAL 
	/*	where EXG_XCHNG_CD='NFO'   Commented in Ver 8.2 and replaced with bind variable */
    where EXG_XCHNG_CD = :c_xchng_cd 
		and trunc(FBC_TRD_DT) < trunc(EXG_NXT_TRD_DT);

		fn_userlog(c_ServiceName , "the FBC_TRD_DT is ;%s:", c_fbc_trd_dt);

		if ( (SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND ) )
    {
			fn_userlog(c_ServiceName ,"The Batch program failed due to failure of bat_ins_mis pls run rerun ");
      fn_errlog(c_ServiceName,"S31015",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'N');
      strcpy(c_error_txt,"Lot size check failed, Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

   
		EXEC SQL
	 	select max(PRD_TRD_DT) 
		into :c_prd_trd_dt
		from PRD_PGM_RUN_DTLS 
		where PRD_PGM_NAME='bat_ins_mis';
	
		fn_userlog(c_ServiceName , "the PRD_TRD_DT is ;%s:", c_prd_trd_dt);

		 if ( (SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31020",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'N');
      strcpy(c_error_txt,"Lot size check failed, Contact System Support");  /**** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /**** Ver 4.3 ***/
      return;
    }

	  if(strcmp(c_fbc_trd_dt,c_prd_trd_dt) != 0)	
		{

			strcpy(c_path, tuxgetenv("HOME"));
 			strcat(c_path, "/sh_scripts");
			sprintf(c_command,"ksh %s/house_keep_rpt.sh",c_path);
			system(c_command);	
	
			fn_errlog(c_ServiceName,"S31025",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'N');
      strcpy(c_error_txt," MIS report not completed plz run MIS report first ,Contact System Support");  /**** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;	
			
		}

	 /***************** Added in Ver 5.6 Ends ********************/

  /********** Ver 4.7 Starts Here ********/
  if ( fn_chk_vtc_prcs(c_date,c_xchng_cd) )
  {
    fn_userlog (c_ServiceName,"FNO VTC Order Placement process check failed ");
    fn_errlog(c_ServiceName,"S31030",DEFMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, "FNO VTC Order Placement process check failed",'N');
    strcpy(c_error_txt,"FNO VTC Order Placement process check failed, Contact System Support");
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
    return;
  }

  /********** Ver 4.7 Ends Here **********/

  if( c_rqst_typ == HOUSE_KEEP_CNTRCT )
  {

    /*** Ver 6.9 Starts ***/

    EXEC SQL
      SELECT 1
      INTO  :i_ordr_house_keep
      FROM  DUAL
      WHERE EXISTS  ( SELECT APR_XCHNG_CD
                      FROM    AUDIT_PROG_RUNSTTS
                      WHERE APR_PROG_NAME = 'bat_house_keep'
                      and trunc(APR_TRD_DT) =:c_date
                      and APR_SUCC_FLG = 'P'
                      and APR_XCHNG_CD =:c_xchng_cd);

    if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog(c_ServiceName, "S31035", SQLMSG, c_errmsg);
      sprintf(c_event, "Error in checking run of Order House Keep Process.");
      fn_bat_pst_msg( c_ServiceName, c_event, c_tag );
      return;
    }
    else if ( SQLCODE == NO_DATA_FOUND )
    {
      i_ordr_house_keep = 0;
    }

    fn_userlog(c_ServiceName,"i_ordr_house_keep is :%d:",i_ordr_house_keep);

    if(i_ordr_house_keep != 1)
    {
      fn_errlog(c_ServiceName, "S31040", SQLMSG, c_errmsg);
      sprintf(c_event,"Order House Keep Process Is Not Completed For <%s> ",c_date);
      fn_bat_pst_msg( c_ServiceName, c_event, c_tag );
      return ;
    }

    /***  Ver 6.9 Ends  ***/

    EXEC SQL
      SELECT  1
      INTO    :i_count
      FROM    exg_xchng_mstr
      WHERE   exg_nxt_trd_dt < to_date(:c_date,'dd-Mon-yyyy')
      AND     exg_xchng_cd = :c_xchng_cd;
      

    if ( (SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31045",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'N');
      strcpy(c_error_txt,"Lot size check failed, Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

    if ( i_count == 1 )
    {
      fn_errlog(c_ServiceName,"S31050",DEFMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,
                            "Next trade Date less than input date",'N');
      strcpy(c_error_txt,"Next trade Date less than input date");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }
    /*** Add starts in Ver 7.9 ***/
    fn_userlog(c_ServiceName,"***** Open Position check Starts *****");
    EXEC SQL

    SELECT count(*)
    INTO   :l_rec_cnt
    FROM
    (
      SELECT DISTINCT(FFP_CLM_MTCH_ACCNT)
      FROM FFP_FO_FUTURES_PSTN
      WHERE FFP_XCHNG_CD = :c_xchng_cd
      AND FFP_EXPRY_DT < DECODE (:exp_dt_prs,'N',(FFP_EXPRY_DT+1),TO_DATE(:c_date,'dd-Mon-yyyy'))
      AND TRIM(FFP_UNDRLYNG) = TRIM(DECODE(:und_prs,'N',FFP_UNDRLYNG,:c_undrlyng))
      AND ( FFP_IBUY_QTY <> 0
        OR FFP_ISELL_QTY <> 0
        OR FFP_EXBUY_QTY <> 0
        OR FFP_EXSELL_QTY <> 0
        OR FFP_OPNPSTN_QTY <> 0 )
      UNION
      SELECT DISTINCT(FCP_CLM_MTCH_ACCNT)
      FROM FCP_FO_SPN_CNTRCT_PSTN
      WHERE FCP_XCHNG_CD = :c_xchng_cd
      AND FCP_EXPRY_DT < DECODE (:exp_dt_prs,'N',(FCP_EXPRY_DT+1),TO_DATE(:c_date,'dd-Mon-yyyy'))
      AND TRIM(FCP_UNDRLYNG) = TRIM(DECODE(:und_prs,'N',FCP_UNDRLYNG,:c_undrlyng))
      AND ( FCP_IBUY_QTY <> 0
        OR FCP_ISELL_QTY <> 0
        OR FCP_EXBUY_QTY <> 0
        OR FCP_EXSELL_QTY <> 0
        OR FCP_OPNPSTN_QTY <> 0
        OR FCP_OPT_PREMIUM <> 0 )
      UNION
      SELECT DISTINCT(FOP_CLM_MTCH_ACCNT)
      FROM FOP_FO_OPTIONS_PSTN
      WHERE FOP_XCHNG_CD = :c_xchng_cd
      AND FOP_EXPRY_DT < DECODE (:exp_dt_prs,'N',(FOP_EXPRY_DT+1),TO_DATE(:c_date,'dd-Mon-yyyy'))
      AND TRIM(FOP_UNDRLYNG) = TRIM(DECODE(:und_prs,'N',FOP_UNDRLYNG,:c_undrlyng))
      AND ( FOP_IBUY_QTY <> 0
        OR FOP_ISELL_QTY <> 0
        OR FOP_EXBUY_QTY <> 0
        OR FOP_EXSELL_QTY <> 0
        OR FOP_OPNPSTN_QTY <> 0)
    );

    if ( SQLCODE != 0 && (SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31055",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'N');
      strcpy(c_error_txt,"Ordered open position check failed, Contact System Support");
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      return;
    }
		fn_userlog(c_ServiceName,"***** l_rec_cnt :%ld:",l_rec_cnt);
    if( l_rec_cnt != 0 )
    {
			sprintf(c_event,"Contrct Housekeep can not be run for contrct with pending orders");
      fn_bat_pst_msg( c_ServiceName, c_event, c_tag );
      fn_errlog(c_ServiceName,"S31060",DEFMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,"Contrct Housekeep can not be run for contrct with pending orders",'N');
      strcpy(c_error_txt,"Contract housekeep can not be run for contract with pending orders");
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      return;
    }
    fn_userlog(c_ServiceName,"***** After Open Position check *****");
    /*** Add ends for Ver 7.9 ***/
   
     /**** Ver 9.0 starts *********/
     fn_set_dlvry_prcnt( c_ServiceName, c_errmsg, c_xchng_cd, c_date);

    /********* Ver 9.0 ends ********/

    fn_prcs_cntrct( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng );

    /*** fn_prcs_undrpstn should be called before fn_prcs_futpos (Ver 9.3) ***/
    fn_userlog(c_ServiceName,"***** Before calling fn_prcs_undrpstn *****");      /* Ver 9.3 ***/
    fn_prcs_undrpstn( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng );  /* Ver 9.3 ***/

    fn_prcs_futpos( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng );

    fn_prcs_optpos( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng );

    fn_prcs_futclsout( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng );

    fn_prcs_fvrtlist( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng );

    fn_prcs_basketlist( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng );/** 10.2 ***/
   
    fn_prcs_basketmrgnlist( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng );/** 11.3 **/

    fn_prcs_trdqt( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng );

    fn_prcs_asgnbk( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng );

    /*** fn_prcs_undrpstn( c_ServiceName, c_errmsg );   * ver 2.7 *  Commented in Ver 3.6 ***/
		/* fn_userlog(c_ServiceName,"***** Before calling fn_prcs_undrpstn *****");			* Ver 7.9 *
    * fn_prcs_undrpstn( c_ServiceName, c_errmsg, c_xchng_cd );  *** Ver 3.6 **Commented in Ver 7.9 *
    fn_prcs_undrpstn( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng );  * Ver 7.9 commented in Ver 9.3 ***/

		/*** fn_prcs_spnpos( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng );*** Ver 3.4 *****   **Commneted in Ver 6.4 ***/
		fn_prcs_spnpos( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng, c_fbc_trd_dt ); /*** Ve
r 6.4 ***/	
		/** Ver 4.1 Started **/
		fn_amc_hstry( c_ServiceName, c_errmsg, c_xchng_cd, c_date );
		/** Ver 4.1 Ended **/

		fn_prcs_excptnlist( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng );  /*** Ver 4.6 ***/

    /**** Ver 8.9 starts *********/
/*** commented in ver 9.0     fn_set_dlvry_prcnt( c_ServiceName, c_errmsg, c_xchng_cd, c_date);  ***/

    /********* Ver 8.9 ends ********/

     fn_eos_excptn(c_ServiceName, c_errmsg, c_xchng_cd, c_date);  /** Ver 10.1 **/ 

			fn_prcs_gtt( c_ServiceName, c_errmsg, c_xchng_cd, c_date, c_undrlyng); /** Ver 11.4 **/
 
  } /*  c_rqst_typ == HOUSE_KEEP_CNTRCT  */
  else if( c_rqst_typ == HOUSE_KEEP_ORDER )
  {

		/** Ver 11.1 Started **/
     fn_userlog(c_ServiceName,"***** calling fn_fno_hstry *****");
     fn_fno_hstry(c_ServiceName, c_errmsg);
    /** Ver 11.1 Ended **/

    EXEC SQL
      SELECT  1
      INTO    :i_count
      FROM    exg_xchng_mstr
      WHERE   exg_nxt_trd_dt < to_date(:c_date,'dd-Mon-yyyy')
      AND     exg_xchng_cd = :c_xchng_cd;
      

    if ( (SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31065",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'N');
      strcpy(c_error_txt,"System error - Contact System support.");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/ 
      return;
    }

    if ( i_count == 1 )
    {
      fn_errlog(c_ServiceName,"S31070",DEFMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,
                            "Next trade Date less than input date",'N');
      strcpy(c_error_txt,"Next trade Date less than input date");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }
  
    i_trnsctn=0;
    /*** i_trnsctn = fn_begintran( c_ServiceName, c_errmsg ); ** Commented in Ver 7.5 ***/

		i_trnsctn = tpbegin(BAT_TRAN_LOCAL,0); /*** Ver 7.5 ***/
    if ( i_trnsctn == -1 )
    {
      fn_errlog(c_ServiceName,"S31075",LIBMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                  "Unable to start transaction - Contact system support",'N');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/ 
      return;
    }

    /*************************************/
    /*V1.4 no sqlcode check given for it*/
    /*************************************/

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Update Data Into FTQ_FO_TRD_QT");	/*** Ver 7.3 ***/
    }

    EXEC SQL
      UPDATE FTQ_FO_TRD_QT SET FTQ_LST_TRD_PRC= 0 WHERE 
			FTQ_XCHNG_CD	=  :c_xchng_cd	AND			/***Ver 3.6 ***/
      TRUNC(FTQ_LST_TRD_TM) = '01-Jan-1980' AND
      NVL(FTQ_LST_TRD_PRC,0) <> 0 ;

		/***
    EXEC SQL
      DELETE bk_ordr_rfrnc;  Commented in Ver 3.6 ***/

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Delete Data From BK_ORDR_RFRNC");  /*** Ver 7.3 ***/
    }

		/*** Ver 3.6 start ***/
		EXEC SQL
      DELETE bk_ordr_rfrnc 
			WHERE  xchng_cd = :c_xchng_cd; 
		/*** Ver 3.6 End ***/

    if ( (SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31080",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                        "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

		/*** 
    EXEC SQL
      DELETE bk_exrc_rfrnc_no;  Commented in Ver 3.6 ***/

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Delete Data From BK_EXRC_RFRNC_NO");  /*** Ver 7.3 ***/
    }

		/*** Ver 3.6 start ***/
		EXEC SQL
      DELETE bk_exrc_rfrnc_no 
			WHERE  xchng_cd = :c_xchng_cd; 
		/*** Ver 3.6 End ***/

    if ( (SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31085",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                        "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Inserting Data Into BK_ORDR_RFRNC");	/*** 7.3 ***/
    }

    EXEC SQL
      INSERT INTO bk_ordr_rfrnc
      (
        SELECT  fod_ordr_rfrnc ordr_rfrnc,
								fod_xchng_cd													/***Ver 3.6 ***/
        FROM    fod_fo_ordr_dtls 
        WHERE   
								fod_xchng_cd = :c_xchng_cd	AND				/***Ver 3.6 ***/
								/** fod_fo_ordr_dtls.fod_ordr_valid_dt <  ** Ver 4.7 **/
                    fod_fo_ordr_dtls.fod_trd_dt <        /*** Ver 4.7 **/
                     to_date(:c_date,'dd-Mon-yyyy')
        AND     fod_fo_ordr_dtls.fod_ordr_stts IN 
                ( 'B', 'D', 'C', 'J', 'E', 'X','Y','F' ) /*** V1.5**/
      );

      if ( SQLCODE != 0 )  
      {
        fn_errlog(c_ServiceName,"S31090",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
        return;
      }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Get Count From BK_ORDR_RFRNC"); /*** 7.3 ***/
    }

    EXEC SQL
      SELECT count(rowid)			/*** Ver 4.0 '*' changed to 'rowid' **/ 
      INTO   :i_rec_cnt
      FROM   bk_ordr_rfrnc
			WHERE  xchng_cd = :c_xchng_cd; /*** ver 3.6 ***/

    if ( SQLCODE != 0 )  
    {
      fn_errlog(c_ServiceName,"S31095",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }
   
    /*** Commented in Ver 8.1 *** 
    if( i_rec_cnt == 0 )
    {
      fn_exit( c_ServiceName, i_trnsctn, "No data to update history", 'Y' );
      return;
    }
    else
    {
    ***/
    if(i_rec_cnt !=0 )  /*** if condition added in Ver 8.1 ***/
    {
      sprintf( c_msg, "No. of Order to House Keep is :%ld:", i_rec_cnt );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
    }

		/*** Ver 10.4 Stsrted ***/

		if (i_rec_cnt != 0)
		{
			EXEC SQL
				INSERT INTO fod_fo_1clk_ordr_dtls
      	(
        	fod_clm_mtch_accnt,
        	fod_clnt_ctgry,
        	fod_ordr_rfrnc,
        	fod_pipe_id,
        	fod_xchng_cd,
        	fod_prdct_typ,
        	fod_indstk,
        	fod_undrlyng,
        	fod_expry_dt,
        	fod_exer_typ,
        	fod_opt_typ,
        	fod_strk_prc,
        	fod_ordr_flw,
        	fod_lmt_mrkt_sl_flg,
        	fod_dsclsd_qty,
        	fod_ordr_tot_qty,
        	fod_lmt_rt,
        	fod_stp_lss_tgr,
        	fod_ordr_type,
        	fod_ordr_valid_dt,
        	fod_trd_dt,
        	fod_ordr_stts,
        	fod_exec_qty,
        	fod_cncl_qty,
        	fod_exprd_qty,
        	fod_sprd_ordr_ref,
        	fod_mdfctn_cntr,
        	fod_settlor,
        	fod_ack_nmbr,
        	fod_spl_flag,
        	fod_ord_ack_tm,
        	fod_lst_rqst_ack_tm,
        	fod_pro_cli_ind,
        	fod_exec_qty_day,
        	fod_remarks,
        	fod_channel,
        	fod_bp_id,
        	fod_ctcl_id,    
        	fod_usr_id,    
        	fod_mrkt_typ,  
        	fod_cse_id,    
        	fod_is_flg,      
        	fod_spn_flg,     
        	fod_sltp_ordr_rfrnc,    
        	fod_amt_blckd,          
        	fod_lss_amt_blckd,      
        	fod_fc_flag,           
        	fod_diff_amt_blckd,     
        	fod_diff_lss_amt_blckd,  
        	fod_trd_val,            
        	fod_trd_brkg,           
        	fod_cntrctnt_nmbr,      
        	fod_source_flg,         
        	fod_eos_flg,             
        	fod_prcimpv_flg,        
        	fod_trail_amt,           
        	fod_lmt_offset,          
        	fod_pan_no,               
        	FOD_SETLMNT_FLG,            
        	FOD_LST_ACT_REF,         
        	FOD_SROLL_DIFF_AMT,         
        	FOD_SROLL_LSS_AMT,            
        	FOD_ESP_ID,                  
        	FOD_EXPR_MRGN,                   
        	FOD_SPAN_MRGN,  
        	FOD_OPLUS_PREMIUM,  
        	FOD_SLTP_MRGN,  
        	FOD_SLTP_PL,  
        	FOD_SLTP_SEBI_MRGN,
					FOD_1CLICK_FLG,
					FOD_1CLICK_PRTFL_ID
      	)
      	(
        	SELECT  fod_fo_ordr_dtls.fod_clm_mtch_accnt,
                fod_fo_ordr_dtls.fod_clnt_ctgry,
                fod_fo_ordr_dtls.fod_ordr_rfrnc,
                fod_fo_ordr_dtls.fod_pipe_id,
                fod_fo_ordr_dtls.fod_xchng_cd,
                fod_fo_ordr_dtls.fod_prdct_typ,
                fod_fo_ordr_dtls.fod_indstk,
                fod_fo_ordr_dtls.fod_undrlyng,
                fod_fo_ordr_dtls.fod_expry_dt,
                fod_fo_ordr_dtls.fod_exer_typ,
                fod_fo_ordr_dtls.fod_opt_typ,
                fod_fo_ordr_dtls.fod_strk_prc,
                fod_fo_ordr_dtls.fod_ordr_flw,
                fod_fo_ordr_dtls.fod_lmt_mrkt_sl_flg,
                fod_fo_ordr_dtls.fod_dsclsd_qty,
                fod_fo_ordr_dtls.fod_ordr_tot_qty,
                fod_fo_ordr_dtls.fod_lmt_rt,
                fod_fo_ordr_dtls.fod_stp_lss_tgr,
                fod_fo_ordr_dtls.fod_ordr_type,
                fod_fo_ordr_dtls.fod_ordr_valid_dt,
                fod_fo_ordr_dtls.fod_trd_dt,
                fod_fo_ordr_dtls.fod_ordr_stts,
                fod_fo_ordr_dtls.fod_exec_qty,
                fod_fo_ordr_dtls.fod_cncl_qty,
                fod_fo_ordr_dtls.fod_exprd_qty,
                fod_fo_ordr_dtls.fod_sprd_ordr_ref,
                fod_fo_ordr_dtls.fod_mdfctn_cntr,
                fod_fo_ordr_dtls.fod_settlor,
                fod_fo_ordr_dtls.fod_ack_nmbr,
                fod_fo_ordr_dtls.fod_spl_flag,
                fod_fo_ordr_dtls.fod_ord_ack_tm,
                fod_fo_ordr_dtls.fod_lst_rqst_ack_tm,
                fod_fo_ordr_dtls.fod_pro_cli_ind,
                fod_fo_ordr_dtls.fod_exec_qty_day,
                fod_fo_ordr_dtls.fod_remarks,
                fod_fo_ordr_dtls.fod_channel,
                fod_fo_ordr_dtls.fod_bp_id,
                fod_fo_ordr_dtls.fod_ctcl_id,   
                fod_fo_ordr_dtls.fod_usr_id,     
                NVL( fod_fo_ordr_dtls.fod_mrkt_typ, 'N' ),    
                fod_fo_ordr_dtls.fod_cse_id,  
                fod_fo_ordr_dtls.fod_is_flg,   
                fod_fo_ordr_dtls.fod_spn_flg,   
                fod_fo_ordr_dtls.fod_sltp_ordr_rfrnc,     
                fod_fo_ordr_dtls.fod_amt_blckd,          
                fod_fo_ordr_dtls.fod_lss_amt_blckd,       
                fod_fo_ordr_dtls.fod_fc_flag,             
                fod_fo_ordr_dtls.fod_diff_amt_blckd,     
                fod_fo_ordr_dtls.fod_diff_lss_amt_blckd,    
                fod_fo_ordr_dtls.fod_trd_val,              
                fod_fo_ordr_dtls.fod_trd_brkg,             
                fod_fo_ordr_dtls.fod_cntrctnt_nmbr,        
                fod_fo_ordr_dtls.fod_source_flg,             
                fod_fo_ordr_dtls.fod_eos_flg,              
                fod_fo_ordr_dtls.fod_prcimpv_flg,               
                fod_fo_ordr_dtls.fod_trail_amt,              
                fod_fo_ordr_dtls.fod_lmt_offset,             
                fod_fo_ordr_dtls.fod_pan_no,         
                fod_fo_ordr_dtls.FOD_SETLMNT_FLG,    
                fod_fo_ordr_dtls.FOD_LST_ACT_REF,     
                fod_fo_ordr_dtls.FOD_SROLL_DIFF_AMT, 
                fod_fo_ordr_dtls.FOD_SROLL_LSS_AMT,  
                fod_fo_ordr_dtls.FOD_ESP_ID,          
                fod_fo_ordr_dtls.FOD_EXPR_MRGN, 
                fod_fo_ordr_dtls.FOD_SPAN_MRGN, 
                fod_fo_ordr_dtls.FOD_OPLUS_PREMIUM,  
                fod_fo_ordr_dtls.FOD_SLTP_MRGN, 
                fod_fo_ordr_dtls.FOD_SLTP_PL, 
                fod_fo_ordr_dtls.FOD_SLTP_SEBI_MRGN,
								fod_fo_ordr_dtls.FOD_1CLICK_FLG,
								fod_fo_ordr_dtls.FOD_1CLICK_PRTFL_ID
         FROM   fod_fo_ordr_dtls, bk_ordr_rfrnc
        WHERE   fod_fo_ordr_dtls.fod_ordr_rfrnc = bk_ordr_rfrnc.ordr_rfrnc
        AND     bk_ordr_rfrnc.xchng_cd = :c_xchng_cd 
				AND	NVL(fod_fo_ordr_dtls.fod_1click_flg,'N') = 'Y'
    	);			
      
      if( SQLCODE != 0 )
      {
       fn_errlog(c_ServiceName,"S31100",SQLMSG,c_errmsg);
       fn_exit ( c_ServiceName, i_trnsctn,
                         "System error - Contact System support",'Y');
       strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
       fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
       return;
      }  

		}

		/*** Ver 10.4 Ended ***/ 

  /***1.1***/
       
   if (i_rec_cnt != 0)     /*** if condition added in Ver 8.2 ***/
   {
 
    EXEC SQL
      INSERT INTO fod_fo_ordr_dtls_hstry
      (
        fod_clm_mtch_accnt,
        fod_clnt_ctgry,
        fod_ordr_rfrnc,
        fod_pipe_id,
        fod_xchng_cd,
        fod_prdct_typ,
        fod_indstk,
        fod_undrlyng,
        fod_expry_dt,
        fod_exer_typ,
        fod_opt_typ,
        fod_strk_prc,
        fod_ordr_flw,
        fod_lmt_mrkt_sl_flg,
        fod_dsclsd_qty,
        fod_ordr_tot_qty,
        fod_lmt_rt,
        fod_stp_lss_tgr,
        fod_ordr_type,
        fod_ordr_valid_dt,
        fod_trd_dt,
        fod_ordr_stts,
        fod_exec_qty,
        fod_cncl_qty,
        fod_exprd_qty,
        fod_sprd_ordr_ref,
        fod_mdfctn_cntr,
        fod_settlor,
        fod_ack_nmbr,
        fod_spl_flag,
        fod_ord_ack_tm,
        fod_lst_rqst_ack_tm,
        fod_pro_cli_ind,
        fod_exec_qty_day,
        fod_remarks,
        fod_channel,
        fod_bp_id,
        fod_ctcl_id,   /*   1.3     */
        fod_usr_id,   /*   1.6      */
        fod_mrkt_typ,  /* Ver 1.9 */
        fod_cse_id,    /* Ver 2.1 */
        fod_is_flg,     /* Ver 2.2 */
				fod_spn_flg,     /** Ver 3.7 **/
				fod_sltp_ordr_rfrnc,		/*** Ver 4.5 ***/
				fod_amt_blckd,					/*** Ver 4.5 ***/
				fod_lss_amt_blckd,			/*** Ver 4.5 ***/
				fod_fc_flag,						/*** Ver 4.5 ***/
				fod_diff_amt_blckd,			/*** Ver 4.5 ***/
				fod_diff_lss_amt_blckd,	/*** Ver 4.5 ***/
        fod_trd_val,            /*** Ver 5.2 ***/
        fod_trd_brkg,           /*** Ver 5.2 ***/
        fod_cntrctnt_nmbr,      /*** Ver 5.2 ***/
				fod_source_flg,					/*** ver 6.0 ***/
        fod_eos_flg,             /*** Ver 6.7 ***/
        fod_prcimpv_flg,        /*** Ver 6.5 ***/
        fod_trail_amt,          /*** Ver 6.5 ***/
        fod_lmt_offset,          /*** Ver 6.5 ***/
        fod_pan_no,               /** Added in ver 7.6 **/
        FOD_SETLMNT_FLG,           /*** Ver 8.0 ***/
        FOD_LST_ACT_REF,            /*** Ver 8.7 ***/
        FOD_SROLL_DIFF_AMT,          /*** Ver 9.1 ***/ 
        FOD_SROLL_LSS_AMT,           /*** Ver 9.1 ***/
        FOD_ESP_ID,                   /*** Ver 9.6 ***/
        FOD_EXPR_MRGN,                   /*** Ver 9.8 **/
        FOD_SPAN_MRGN, /*** Ver 9.8 **/
        FOD_OPLUS_PREMIUM, /*** Ver 9.8 **/
        FOD_SLTP_MRGN, /*** Ver 9.8 **/
        FOD_SLTP_PL, /*** Ver 9.8 **/
        FOD_SLTP_SEBI_MRGN, /*** Ver 9.8 **/
				FOD_1CLICK_FLG,				/*** ver 10.4 ***/
				FOD_1CLICK_PRTFL_ID,		/*** ver 10.4 ***/
        FOD_ALGO_ID,            /*** ver 10.7 ***/
        FOD_APIREMARKS,          /*** ver 10.7 ***/
				FOD_SQROFF_TM,					/** Ver 11.0 **/
				FOD_UCC_CD              /*** Added in VER 11.2 ***/
      )
      (
        SELECT  fod_fo_ordr_dtls.fod_clm_mtch_accnt,
                fod_fo_ordr_dtls.fod_clnt_ctgry,
                fod_fo_ordr_dtls.fod_ordr_rfrnc,
                fod_fo_ordr_dtls.fod_pipe_id,
                fod_fo_ordr_dtls.fod_xchng_cd,
                fod_fo_ordr_dtls.fod_prdct_typ,
                fod_fo_ordr_dtls.fod_indstk,
                fod_fo_ordr_dtls.fod_undrlyng,
                fod_fo_ordr_dtls.fod_expry_dt,
                fod_fo_ordr_dtls.fod_exer_typ,
                fod_fo_ordr_dtls.fod_opt_typ,
                fod_fo_ordr_dtls.fod_strk_prc,
                fod_fo_ordr_dtls.fod_ordr_flw,
                fod_fo_ordr_dtls.fod_lmt_mrkt_sl_flg,
                fod_fo_ordr_dtls.fod_dsclsd_qty,
                fod_fo_ordr_dtls.fod_ordr_tot_qty,
                fod_fo_ordr_dtls.fod_lmt_rt,
                fod_fo_ordr_dtls.fod_stp_lss_tgr,
                fod_fo_ordr_dtls.fod_ordr_type,
                fod_fo_ordr_dtls.fod_ordr_valid_dt,
                fod_fo_ordr_dtls.fod_trd_dt,
                fod_fo_ordr_dtls.fod_ordr_stts,
                fod_fo_ordr_dtls.fod_exec_qty,
                fod_fo_ordr_dtls.fod_cncl_qty,
                fod_fo_ordr_dtls.fod_exprd_qty,
                fod_fo_ordr_dtls.fod_sprd_ordr_ref,
                fod_fo_ordr_dtls.fod_mdfctn_cntr,
                fod_fo_ordr_dtls.fod_settlor,
                fod_fo_ordr_dtls.fod_ack_nmbr,
                fod_fo_ordr_dtls.fod_spl_flag,
                fod_fo_ordr_dtls.fod_ord_ack_tm,
                fod_fo_ordr_dtls.fod_lst_rqst_ack_tm,
                fod_fo_ordr_dtls.fod_pro_cli_ind,
                fod_fo_ordr_dtls.fod_exec_qty_day,
                fod_fo_ordr_dtls.fod_remarks,
                fod_fo_ordr_dtls.fod_channel,
                fod_fo_ordr_dtls.fod_bp_id,
                fod_fo_ordr_dtls.fod_ctcl_id,   /*    1.3     */
                fod_fo_ordr_dtls.fod_usr_id,    /*   1.6     */  
                NVL( fod_fo_ordr_dtls.fod_mrkt_typ, 'N' ),    /* Ver 1.9 */  
                fod_fo_ordr_dtls.fod_cse_id,  /* Ver 2.1 */
                fod_fo_ordr_dtls.fod_is_flg,   /* Ver 2.2 */
                fod_fo_ordr_dtls.fod_spn_flg,   /** Ver 3.7  **/
								fod_fo_ordr_dtls.fod_sltp_ordr_rfrnc,			/*** Ver 4.5 ***/
								fod_fo_ordr_dtls.fod_amt_blckd,						/*** Ver 4.5 ***/
								fod_fo_ordr_dtls.fod_lss_amt_blckd,				/*** Ver 4.5 ***/
								fod_fo_ordr_dtls.fod_fc_flag,							/*** Ver 4.5 ***/
								fod_fo_ordr_dtls.fod_diff_amt_blckd,			/*** Ver 4.5 ***/
								fod_fo_ordr_dtls.fod_diff_lss_amt_blckd,		/*** Ver 4.5 ***/
                fod_fo_ordr_dtls.fod_trd_val,             /*** Ver 5.2 ***/
                fod_fo_ordr_dtls.fod_trd_brkg,            /*** Ver 5.2 ***/
                fod_fo_ordr_dtls.fod_cntrctnt_nmbr,       /*** Ver 5.2 ***/
								fod_fo_ordr_dtls.fod_source_flg,						/*** Ver 6.0 ***/
                fod_fo_ordr_dtls.fod_eos_flg,              /**** Ver 6.7 ***/
                fod_fo_ordr_dtls.fod_prcimpv_flg,              /**** Ver 6.5 ***/
                fod_fo_ordr_dtls.fod_trail_amt,              /**** Ver 6.5 ***/
                fod_fo_ordr_dtls.fod_lmt_offset,              /**** Ver 6.5 ***/
                fod_fo_ordr_dtls.fod_pan_no,         /** Added in ver 7.6 **/
                fod_fo_ordr_dtls.FOD_SETLMNT_FLG,     /*** Ver 8.0 ***/
                fod_fo_ordr_dtls.FOD_LST_ACT_REF,      /*** Ver 8.7 ***/
                fod_fo_ordr_dtls.FOD_SROLL_DIFF_AMT, /*** ver 9.1 ***/
                fod_fo_ordr_dtls.FOD_SROLL_LSS_AMT,  /*** ver 9.1 ***/
                fod_fo_ordr_dtls.FOD_ESP_ID,          /*** Ver 9.6 ***/
                fod_fo_ordr_dtls.FOD_EXPR_MRGN, /** ver 9.8 **/
                fod_fo_ordr_dtls.FOD_SPAN_MRGN, /** ver 9.8 **/
                fod_fo_ordr_dtls.FOD_OPLUS_PREMIUM,  /** ver 9.8 **/ 
        				fod_fo_ordr_dtls.FOD_SLTP_MRGN, /*** Ver 9.8 **/
        				fod_fo_ordr_dtls.FOD_SLTP_PL, /*** Ver 9.8 **/
        				fod_fo_ordr_dtls.FOD_SLTP_SEBI_MRGN, /*** Ver 9.8 **/
								fod_fo_ordr_dtls.FOD_1CLICK_FLG,		/*** ver 10.4 ***/
								fod_fo_ordr_dtls.FOD_1CLICK_PRTFL_ID,		/*** ver 10.4 ***/
                fod_fo_ordr_dtls.fod_algo_id,           /*** ver 10.7 ***/
                fod_fo_ordr_dtls.fod_apiremarks,         /*** ver 10.7 ***/
                fod_fo_ordr_dtls.FOD_SQROFF_TM,         /*** ver 11.0 ***/
								fod_fo_ordr_dtls.fod_ucc_cd							/*** Added in VER 11.2 ***/
        FROM    fod_fo_ordr_dtls, bk_ordr_rfrnc
        WHERE   fod_fo_ordr_dtls.fod_ordr_rfrnc = bk_ordr_rfrnc.ordr_rfrnc
				AND			bk_ordr_rfrnc.xchng_cd = :c_xchng_cd	 /*** ver 3.6 ***/
    );
    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31105",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/ 
      return;
    }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Delete Data From FOD_FO_ORDR_DTLS");  /*** Ver 7.3 ***/
    }
  
    EXEC SQL
      DELETE  fod_fo_ordr_dtls
      WHERE   fod_ordr_rfrnc IN 
    (
      SELECT  ordr_rfrnc
      FROM    bk_ordr_rfrnc
			WHERE		bk_ordr_rfrnc.xchng_cd = :c_xchng_cd /*** ver 3.6 ***/
    );

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31110",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/ 
      return;
    }
    
    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Insert Data into FSD_FO_SPRD_DTLS_HSTRY");  /*** Ver 7.3 ***/
    }
    
    /** Ver 1.7 Starts***/

    EXEC SQL
    INSERT INTO FSD_FO_SPRD_DTLS_HSTRY
    (
      FSD_SPRD_RFRNC,
      FSD_ORDR_RFRNC,
      FSD_SPRD_ORD_IND,
      FSD_LST_MOD_TM,
      FSD_ACK_NMBR,
      FSD_PIPE_ID,
      FSD_MDFCTN_CNTR,
      FSD_ORS_MSG_TYP,
      FSD_ORD_QTY,
      FSD_EXEC_QTY,
      FSD_CNCL_QTY,
      FSD_ACK_TM
    )
    (
      SELECT FSD_FO_SPRD_DTLS.FSD_SPRD_RFRNC,
             FSD_FO_SPRD_DTLS.FSD_ORDR_RFRNC,
             FSD_FO_SPRD_DTLS.FSD_SPRD_ORD_IND,
             FSD_FO_SPRD_DTLS.FSD_LST_MOD_TM,
             FSD_FO_SPRD_DTLS.FSD_ACK_NMBR,
             FSD_FO_SPRD_DTLS.FSD_PIPE_ID,
             FSD_FO_SPRD_DTLS.FSD_MDFCTN_CNTR,
             FSD_FO_SPRD_DTLS.FSD_ORS_MSG_TYP,
             FSD_FO_SPRD_DTLS.FSD_ORD_QTY,
             FSD_FO_SPRD_DTLS.FSD_EXEC_QTY,
             FSD_FO_SPRD_DTLS.FSD_CNCL_QTY,
             FSD_FO_SPRD_DTLS.FSD_ACK_TM
      FROM  FSD_FO_SPRD_DTLS,BK_ORDR_RFRNC
      WHERE FSD_FO_SPRD_DTLS.FSD_ORDR_RFRNC = BK_ORDR_RFRNC.ORDR_RFRNC
			AND		BK_ORDR_RFRNC.xchng_cd = :c_xchng_cd /*** ver 3.6 ***/
    );

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31115",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/ 
      return;
    }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Delete Data From FSD_FO_SPRD_DTLS");  /*** Ver 7.3 ***/
    }	

    EXEC SQL
      DELETE  FSD_FO_SPRD_DTLS
      WHERE   FSD_ORDR_RFRNC IN
    (
      SELECT  ORDR_RFRNC
      FROM    BK_ORDR_RFRNC
			WHERE		BK_ORDR_RFRNC.xchng_cd = :c_xchng_cd /*** ver 3.6 ***/
    );

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31120",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

  /** Ver 1.7 Ends **/

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Insert Data into FXB_FO_XCHNG_BOOK_HSTRY :1:");  /*** Ver 7.3 ***/
    }	

    EXEC SQL
    INSERT INTO fxb_fo_xchng_book_hstry
    (
      fxb_xchng_cd,
      fxb_ordr_rfrnc,
      fxb_pipe_id,
      fxb_mod_trd_dt,
      fxb_ordr_sqnc,
      fxb_lmt_mrkt_sl_flg,
      fxb_dsclsd_qty,
      fxb_ordr_tot_qty,
      fxb_lmt_rt,
      fxb_stp_lss_tgr,
      fxb_mdfctn_cntr,
      fxb_ordr_valid_dt,
      fxb_ordr_type,
      fxb_sprd_ord_ind,
      fxb_rqst_typ,
      fxb_quote,
      fxb_qt_tm,
      fxb_rqst_tm,
      fxb_frwd_tm,
      fxb_plcd_stts,
      fxb_rms_prcsd_flg,
      fxb_ors_msg_typ,
      FXb_ack_tm,
      fxb_xchng_rmrks,
      fxb_ex_ordr_typ,
      fxb_xchng_cncld_qty,
      fxb_spl_flag,
      fxb_jiffy,
      fxb_mrkt_typ,    /* Ver 1.9 */
			fxb_stream_no,			/***	Ver	2.6	***/
      fxb_spn_flg,         /*** Ver 3.7  ***/
			fxb_ip,              /*** Ver 3.9 ***/
      fxb_init_sltp_rt,    /*** Ver 6.5 ***/
      fxb_init_lmt_rt,     /*** Ver 6.5 ***/
      fxb_ltp_rt,          /*** Ver 6.5 ***/
      fxb_trail_amt,       /*** Ver 6.5 ***/
      fxb_lmt_offset,      /*** Ver 6.5 ***/
      fxb_trl_upd_cond_val,/*** Ver 6.5 ***/
      fxb_prcimpv_flg,     /*** Ver 6.5 ***/
      fxb_incrmnt_prc,     /*** Ver 6.5 ***/
      FXB_LST_ACT_REF,      /*** Ver 8.7 ***/
      FXB_SSSN_ID           /*** Ver 10.8 ***/
    )
    (
    SELECT  fxb_fo_xchng_book.fxb_xchng_cd,
            fxb_fo_xchng_book.fxb_ordr_rfrnc,
            fxb_fo_xchng_book.fxb_pipe_id,
            fxb_fo_xchng_book.fxb_mod_trd_dt,
            fxb_fo_xchng_book.fxb_ordr_sqnc,
            fxb_fo_xchng_book.fxb_lmt_mrkt_sl_flg,
            fxb_fo_xchng_book.fxb_dsclsd_qty,
            fxb_fo_xchng_book.fxb_ordr_tot_qty,
            fxb_fo_xchng_book.fxb_lmt_rt,
            fxb_fo_xchng_book.fxb_stp_lss_tgr,
            fxb_fo_xchng_book.fxb_mdfctn_cntr,
            fxb_fo_xchng_book.fxb_ordr_valid_dt,
            fxb_fo_xchng_book.fxb_ordr_type,
            fxb_fo_xchng_book.fxb_sprd_ord_ind,
            fxb_fo_xchng_book.fxb_rqst_typ,
            fxb_fo_xchng_book.fxb_quote,
            fxb_fo_xchng_book.fxb_qt_tm,
            fxb_fo_xchng_book.fxb_rqst_tm,
            fxb_fo_xchng_book.fxb_frwd_tm,
            fxb_fo_xchng_book.fxb_plcd_stts,
            fxb_fo_xchng_book.fxb_rms_prcsd_flg,
            fxb_fo_xchng_book.fxb_ors_msg_typ,
            fxb_fo_xchng_book.fxb_ack_tm,
            fxb_fo_xchng_book.fxb_xchng_rmrks,
            fxb_fo_xchng_book.fxb_ex_ordr_typ,
            fxb_fo_xchng_book.fxb_xchng_cncld_qty,
            fxb_fo_xchng_book.fxb_spl_flag,
            fxb_fo_xchng_book.fxb_jiffy,
            NVL( fxb_fo_xchng_book.fxb_mrkt_typ, 'N' ),  /* Ver 1.9 */
						fxb_fo_xchng_book.fxb_stream_no,			/***  Ver 2.6 ***/
            fxb_fo_xchng_book.fxb_spn_flg,         /*** Ver 3.7  ***/
						fxb_fo_xchng_book.fxb_ip,              /*** Ver 3.9  ***/
            fxb_fo_xchng_book.fxb_init_sltp_rt,    /*** Ver 6.5 ***/
            fxb_fo_xchng_book.fxb_init_lmt_rt,     /*** Ver 6.5 ***/
            fxb_fo_xchng_book.fxb_ltp_rt,          /*** Ver 6.5 ***/
            fxb_fo_xchng_book.fxb_trail_amt,       /*** Ver 6.5 ***/
            fxb_fo_xchng_book.fxb_lmt_offset,      /*** Ver 6.5 ***/
            fxb_fo_xchng_book.fxb_trl_upd_cond_val,/*** Ver 6.5 ***/
            fxb_fo_xchng_book.fxb_prcimpv_flg,     /*** Ver 6.5 ***/
            fxb_fo_xchng_book.fxb_incrmnt_prc,     /*** Ver 6.5 ***/
            fxb_fo_xchng_book.FXB_LST_ACT_REF,      /*** Ver 8.7 ***/
            fxb_fo_xchng_book.FXB_SSSN_ID      /*** Ver 10.8 ***/
    FROM    fxb_fo_xchng_book, bk_ordr_rfrnc
    WHERE   fxb_fo_xchng_book.fxb_ordr_rfrnc = bk_ordr_rfrnc.ordr_rfrnc
		AND		  bk_ordr_rfrnc.xchng_cd = :c_xchng_cd /*** ver 3.6 ***/
    );

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31125",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Delete Data From FXB_FO_XCHNG_BOOK :1:");  /*** Ver 7.3 ***/
    }

    EXEC SQL
      DELETE  fxb_fo_xchng_book
      WHERE   fxb_ordr_rfrnc IN
    (
      SELECT  ordr_rfrnc
      FROM    bk_ordr_rfrnc
			WHERE		bk_ordr_rfrnc.xchng_cd = :c_xchng_cd /*** ver 3.6 ***/
    );

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31130",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/ 
      return;
    }

		/*** Ver 10.4 started ****/
		EXEC SQL
    INSERT INTO ftd_fo_1clk_trd_dtls
    (
      ftd_xchng_cd,
      ftd_clm_mtch_accnt,
      ftd_eba_trd_ref,
      ftd_ordr_rfrnc,
      ftd_ord_ack_nmbr,
      ftd_xchng_trd_no,
      ftd_prdct_typ,
      ftd_indstk,
      ftd_undrlyng,
      ftd_expry_dt,
      ftd_exer_typ,
      ftd_opt_typ,
      ftd_strk_prc,
      ftd_trd_dt,
      ftd_trnsctn_typ,
      ftd_trd_flw,
      ftd_exctd_qty,
      ftd_exctd_rt,
      ftd_frs_brkg,
      ftd_cvr_brkg,
      ftd_upld_mtch_flg,
      ftd_rms_prcsd_flg,
      ftd_fresh_qty,
      ftd_cover_qty,
      ftd_usr_id,             
      ftd_fut_conv_flg,   
      ftd_brkg,            
      ftd_trd_net_val,      
      ftd_stt,               
      ftd_src_tx,             
      ftd_sebi_tt,             
      ftd_tran_chrg,     
      ftd_stamp_duty,     
      ftd_other_chrg,      
      ftd_stream_no,        
      ftd_min_lot_size,      
      ftd_cntrctnt_nmbr,      
      FTD_BRKG_TYPE,           
      FTD_INSRT_TM,         
      FTD_PRCS_TM,           
      FTD_BRKRG_IGST,         
      FTD_BRKRG_CGST,          
      FTD_BRKRG_SGST,      
      FTD_BRKRG_UGST,       
      FTD_LST_ACT_REF        
    )
    (
    SELECT  ftd_fo_trd_dtls.ftd_xchng_cd,
            ftd_fo_trd_dtls.ftd_clm_mtch_accnt,
            ftd_fo_trd_dtls.ftd_eba_trd_ref,
            ftd_fo_trd_dtls.ftd_ordr_rfrnc,
            ftd_fo_trd_dtls.ftd_ord_ack_nmbr,
            ftd_fo_trd_dtls.ftd_xchng_trd_no,
            ftd_fo_trd_dtls.ftd_prdct_typ,
            ftd_fo_trd_dtls.ftd_indstk,
            ftd_fo_trd_dtls.ftd_undrlyng,
            ftd_fo_trd_dtls.ftd_expry_dt,
            ftd_fo_trd_dtls.ftd_exer_typ,
            ftd_fo_trd_dtls.ftd_opt_typ,
            ftd_fo_trd_dtls.ftd_strk_prc,
            ftd_fo_trd_dtls.ftd_trd_dt,
            ftd_fo_trd_dtls.ftd_trnsctn_typ,
            ftd_fo_trd_dtls.ftd_trd_flw,
            ftd_fo_trd_dtls.ftd_exctd_qty,
            ftd_fo_trd_dtls.ftd_exctd_rt,
            ftd_fo_trd_dtls.ftd_frs_brkg,
            ftd_fo_trd_dtls.ftd_cvr_brkg,
            ftd_fo_trd_dtls.ftd_upld_mtch_flg,
            ftd_fo_trd_dtls.ftd_rms_prcsd_flg,
            ftd_fo_trd_dtls.ftd_fresh_qty,
            ftd_fo_trd_dtls.ftd_cover_qty,
            ftd_fo_trd_dtls.ftd_usr_id,         
            NVL(ftd_fo_trd_dtls.ftd_fut_conv_flg,'N'),    
            ftd_fo_trd_dtls.ftd_brkg,       
            ftd_fo_trd_dtls.ftd_trd_net_val, 
            ftd_fo_trd_dtls.ftd_stt,          
            ftd_fo_trd_dtls.ftd_src_tx,        
            ftd_fo_trd_dtls.ftd_sebi_tt,    
            ftd_fo_trd_dtls.ftd_tran_chrg,   
            ftd_fo_trd_dtls.ftd_stamp_duty,   
            ftd_fo_trd_dtls.ftd_other_chrg,    
            ftd_fo_trd_dtls.ftd_stream_no,  
            ftd_fo_trd_dtls.ftd_min_lot_size,
            ftd_fo_trd_dtls.ftd_cntrctnt_nmbr,
            ftd_fo_trd_dtls.FTD_BRKG_TYPE,    
            ftd_fo_trd_dtls.ftd_insrt_tm,      
            ftd_fo_trd_dtls.ftd_prcs_tm,        
            ftd_fo_trd_dtls.FTD_BRKRG_IGST,      
            ftd_fo_trd_dtls.FTD_BRKRG_CGST,       
            ftd_fo_trd_dtls.FTD_BRKRG_SGST,        
            ftd_fo_trd_dtls.FTD_BRKRG_UGST,         
            ftd_fo_trd_dtls.FTD_LST_ACT_REF          
    FROM    ftd_fo_trd_dtls, fod_fo_1clk_ordr_dtls,bk_ordr_rfrnc 
    WHERE   ftd_fo_trd_dtls.ftd_ordr_rfrnc = bk_ordr_rfrnc.ordr_rfrnc 
    AND     ftd_fo_trd_dtls.ftd_ordr_rfrnc = fod_fo_1clk_ordr_dtls.fod_ordr_rfrnc
    AND     ftd_fo_trd_dtls.ftd_xchng_cd = fod_fo_1clk_ordr_dtls.fod_xchng_cd
	  AND			bk_ordr_rfrnc.xchng_cd = :c_xchng_cd);
    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31135",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    } 
		/*** Ver 10.4 ended ***/

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Insert Data into FTD_FO_TRD_DTLS_HSTRY");  /*** Ver 7.3 ***/
    }

    EXEC SQL
    INSERT INTO ftd_fo_trd_dtls_hstry
    (
      ftd_xchng_cd,
      ftd_clm_mtch_accnt,
      ftd_eba_trd_ref,
      ftd_ordr_rfrnc,
      ftd_ord_ack_nmbr,
      ftd_xchng_trd_no,
      ftd_prdct_typ,
      ftd_indstk,
      ftd_undrlyng,
      ftd_expry_dt,
      ftd_exer_typ,
      ftd_opt_typ,
      ftd_strk_prc,
      ftd_trd_dt,
      ftd_trnsctn_typ,
      ftd_trd_flw,
      ftd_exctd_qty,
      ftd_exctd_rt,
      ftd_frs_brkg,
      ftd_cvr_brkg,
      ftd_upld_mtch_flg,
      ftd_rms_prcsd_flg,
      ftd_fresh_qty,
      ftd_cover_qty,
      ftd_usr_id,             /*   1.6   */
      ftd_fut_conv_flg,        /* Ver 2.0 */
			ftd_brkg,									/** 2.3 **/
			ftd_trd_net_val,					/** 2.3 **/
      ftd_stt,                  /* ** 2.3 ** */                  
      ftd_src_tx,               /* ** 2.3 ** */      
      ftd_sebi_tt,              /* ** 2.3 ** */                    
      ftd_tran_chrg,            /* ** 2.3 ** */                     
      ftd_stamp_duty,           /* ** 2.3 ** */                     
      ftd_other_chrg,           /* ** 2.3 ** */
			ftd_stream_no,						/***	2.6	***/
			ftd_min_lot_size,          /***  3.0 ***/
			ftd_cntrctnt_nmbr,					/*** Ver 5.3 ***/
			FTD_BRKG_TYPE,						/*** Ver 5.7 ***/
      FTD_INSRT_TM,             /*** ver 6.3 ***/
      FTD_PRCS_TM,              /*** ver 6.3 ***/
      FTD_BRKRG_IGST,           /*** Ver 6.8 ***/ 
      FTD_BRKRG_CGST,           /*** Ver 6.8 ***/
      FTD_BRKRG_SGST,           /*** Ver 6.8 ***/
      FTD_BRKRG_UGST,            /*** Ver 6.8 ***/
      FTD_LST_ACT_REF            /*** Ver 8.7 ***/
    )
    (
    SELECT  ftd_fo_trd_dtls.ftd_xchng_cd,
            ftd_fo_trd_dtls.ftd_clm_mtch_accnt,
            ftd_fo_trd_dtls.ftd_eba_trd_ref,
            ftd_fo_trd_dtls.ftd_ordr_rfrnc,
            ftd_fo_trd_dtls.ftd_ord_ack_nmbr,
            ftd_fo_trd_dtls.ftd_xchng_trd_no,
            ftd_fo_trd_dtls.ftd_prdct_typ,
            ftd_fo_trd_dtls.ftd_indstk,
            ftd_fo_trd_dtls.ftd_undrlyng,
            ftd_fo_trd_dtls.ftd_expry_dt,
            ftd_fo_trd_dtls.ftd_exer_typ,
            ftd_fo_trd_dtls.ftd_opt_typ,
            ftd_fo_trd_dtls.ftd_strk_prc,
            ftd_fo_trd_dtls.ftd_trd_dt,
            ftd_fo_trd_dtls.ftd_trnsctn_typ,
            ftd_fo_trd_dtls.ftd_trd_flw,
            ftd_fo_trd_dtls.ftd_exctd_qty,
            ftd_fo_trd_dtls.ftd_exctd_rt,
            ftd_fo_trd_dtls.ftd_frs_brkg,
            ftd_fo_trd_dtls.ftd_cvr_brkg,
            ftd_fo_trd_dtls.ftd_upld_mtch_flg,
            ftd_fo_trd_dtls.ftd_rms_prcsd_flg,
            ftd_fo_trd_dtls.ftd_fresh_qty,
            ftd_fo_trd_dtls.ftd_cover_qty,
            ftd_fo_trd_dtls.ftd_usr_id,         /*    1.6    */
            NVL(ftd_fo_trd_dtls.ftd_fut_conv_flg,'N'),    /*  Ver 2.0  */
            ftd_fo_trd_dtls.ftd_brkg,            /* ** 2.3 ** */                        
            ftd_fo_trd_dtls.ftd_trd_net_val,     /* ** 2.3 ** */                        
            ftd_fo_trd_dtls.ftd_stt,            /* ** 2.3 ** */                        
            ftd_fo_trd_dtls.ftd_src_tx,         /* ** 2.3 ** */                           
            ftd_fo_trd_dtls.ftd_sebi_tt,        /* ** 2.3 ** */                           
            ftd_fo_trd_dtls.ftd_tran_chrg,      /* ** 2.3 ** */                           
            ftd_fo_trd_dtls.ftd_stamp_duty,     /* ** 2.3 ** */                           
            ftd_fo_trd_dtls.ftd_other_chrg,     /* ** 2.3 ** */
            ftd_fo_trd_dtls.ftd_stream_no,			/* **	2.6	** */
						ftd_fo_trd_dtls.ftd_min_lot_size,    /* ** 3.0 ** */
						ftd_fo_trd_dtls.ftd_cntrctnt_nmbr,		/** Ver 5.3 **/
						ftd_fo_trd_dtls.FTD_BRKG_TYPE,				/*** Ver 5.7 ***/
            ftd_fo_trd_dtls.ftd_insrt_tm,         /*** 6.3 ***/
            ftd_fo_trd_dtls.ftd_prcs_tm,          /*** 6.3 ***/
            ftd_fo_trd_dtls.FTD_BRKRG_IGST,           /*** Ver 6.8 ***/
            ftd_fo_trd_dtls.FTD_BRKRG_CGST,           /*** Ver 6.8 ***/
            ftd_fo_trd_dtls.FTD_BRKRG_SGST,           /*** Ver 6.8 ***/
            ftd_fo_trd_dtls.FTD_BRKRG_UGST,            /*** Ver 6.8 ***/
            ftd_fo_trd_dtls.FTD_LST_ACT_REF            /*** ver 8.7 ***/
    FROM    ftd_fo_trd_dtls, bk_ordr_rfrnc
    WHERE   ftd_fo_trd_dtls.ftd_ordr_rfrnc = bk_ordr_rfrnc.ordr_rfrnc
		AND			bk_ordr_rfrnc.xchng_cd = :c_xchng_cd); /*** ver 3.6 ***/

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31140",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Delete Data From FTD_FO_TRD_DTLS");  /*** Ver 7.3 ***/
    }	

    EXEC SQL
      DELETE  ftd_fo_trd_dtls
      WHERE   ftd_ordr_rfrnc IN
    (
      SELECT  ordr_rfrnc
      FROM    bk_ordr_rfrnc
			WHERE		bk_ordr_rfrnc.xchng_cd = :c_xchng_cd /*** ver 3.6 ***/
    );

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31145",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }
  } /*** Ver 8.2 if condition ends ***/

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Insert Data into FTM_FO_TRD_MSG_HSTRY");  /*** Ver 7.3 ***/
    }

    EXEC SQL
      INSERT INTO FTM_FO_TRD_MSG_HSTRY
      (
        FTM_XCHNG_CD,
        FTM_BRKR_CD,
        FTM_MSG_ID,
        FTM_MSG,
        FTM_TM
      )
      (
        SELECT  ftm_xchng_cd,
                ftm_brkr_cd,
                ftm_msg_id,
                ftm_msg,
                ftm_tm
        FROM    ftm_fo_trd_msg
        WHERE   ftm_xchng_cd = :c_xchng_cd		/*** Ver 3.6 ***/
				AND			ftm_tm  < to_date(:c_date,'dd-Mon-yyyy')
      );

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31150",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Delete Data From FTM_FO_TRD_MSG");  /*** Ver 7.3 ***/
    }

    EXEC SQL
      DELETE  ftm_fo_trd_msg
      WHERE   ftm_xchng_cd = :c_xchng_cd		/*** Ver 3.6 ***/
			AND			ftm_tm  < to_date(:c_date,'dd-Mon-yyyy');

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31155",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }


    /***  Ver 2.5 Logging FNO Positions To History  ***/

		if(DEBUG_MSG_LVL_0)
		{
			fn_userlog(c_ServiceName,"Before Inserting Data Into ffp_fo_futures_pstn_loghstry");
		}

    EXEC SQL
      INSERT INTO ffp_fo_futures_pstn_loghstry
									(
										ffp_clm_mtch_accnt,
									 	ffp_xchng_cd,
 										ffp_prdct_typ,
 										ffp_indstk,
 										ffp_undrlyng,
 										ffp_expry_dt,
 										ffp_exer_typ,
 										ffp_cntrct_tag,
 										ffp_ibuy_qty,
 										ffp_ibuy_ord_val,
 										ffp_isell_qty,
 										ffp_isell_ord_val,
 										ffp_exbuy_qty,
 										ffp_exbuy_ord_val,
 										ffp_exsell_qty,
 										ffp_exsell_ord_val,
 										ffp_buy_exctd_qty,
 										ffp_sell_exctd_qty,
 										ffp_opnpstn_flw,
 										ffp_opnpstn_qty,
 										ffp_opnpstn_val,
 										ffp_mtm_opn_val,
 										ffp_imtm_opn_val,
 										ffp_prcsng_tm,
                    FFP_TRG_PRC,   /** Ver 5.8 **/
                    FFP_MIN_TRG_PRC, /** Ver 5.8 **/
                    FFP_EODMTM_DT,    /** Ver 8.6 **/
                    FFP_DLVRY_MODE_FLAG,       /** Ver 10.3 **/
                    FFP_DLVRY_OBLGAMT_BLCKD,   /** Ver 10.3 **/
                    FFP_DLVRY_QTY_BLCKD,        /** Ver 10.3 **/
                    FFP_AVG_PRC                /** Ver 10.5  **/
									)
                	( select  ffp_clm_mtch_accnt,
                  	        ffp_xchng_cd,
                    	      ffp_prdct_typ,
                      	    ffp_indstk,
                        	  ffp_undrlyng,
                          	ffp_expry_dt,
                          	ffp_exer_typ,
                          	ffp_cntrct_tag,
                          	ffp_ibuy_qty,
                        	  ffp_ibuy_ord_val,
                         	  ffp_isell_qty,
                          	ffp_isell_ord_val,
                          	ffp_exbuy_qty,
                          	ffp_exbuy_ord_val,
                          	ffp_exsell_qty,
                          	ffp_exsell_ord_val,
                          	ffp_buy_exctd_qty,
                          	ffp_sell_exctd_qty,
                          	ffp_opnpstn_flw,
                          	ffp_opnpstn_qty,
                          	ffp_opnpstn_val,
                          	ffp_mtm_opn_val,
                          	ffp_imtm_opn_val,
                          	sysdate,
                            FFP_TRG_PRC,   /** Ver 5.8 **/
                            FFP_MIN_TRG_PRC, /** Ver 5.8 **/
                            FFP_EODMTM_DT,    /** Ver 8.6 **/
                            FFP_DLVRY_MODE_FLAG,       /** Ver 10.3 **/
                            FFP_DLVRY_OBLGAMT_BLCKD,   /** Ver 10.3 **/
                            FFP_DLVRY_QTY_BLCKD,        /** Ver 10.3 **/
                            FFP_AVG_PRC                 /** Ver 10.5 **/
                  	from    ffp_fo_futures_pstn
                  	where   ffp_xchng_cd = :c_xchng_cd		/*** Ver 3.6 ***/
										and			ffp_opnpstn_qty <>  0
                	);

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31160",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

		if(DEBUG_MSG_LVL_0)
		{
    	fn_userlog(c_ServiceName,"Before Inserting Data Into fup_fut_undrlyng_pstn_loghstry");
		}

		EXEC SQL
  		INSERT INTO fup_fut_undrlyng_pstn_loghstry
									(
										fup_clm_mtch_accnt,
										fup_xchng_cd,
										fup_prdct_typ,
										fup_indstk,
										fup_undrlyng,
										fup_cntrct_tag,
										fup_uibuy_qty,
										fup_uibuy_val,
										fup_uisell_qty,
										fup_uisell_val,
										fup_uexbuy_qty,
										fup_uexbuy_val,
										fup_uexsell_qty,
										fup_uexsell_val,
										fup_ubuy_exctd_qty,
										fup_usell_exctd_qty,
										fup_uopnpstn_flw,
										fup_uopnpstn_qty,
										fup_uopnpstn_val,
										fup_umtm_opn_val,
										fup_uordr_mrgn,
										fup_uexctd_mrgn,
										fup_uspread_mrgn,
										fup_uspread_pnl,
										fup_add_mrgn_val,
										fup_utrd_mrgn,
										fup_mtm_flg,
										fup_trd_dt,
										fup_umin_trd_mrgn,
										fup_prcsng_tm,
										fup_ucc_cd				/*** Added in VER 11.2 ***/
									)
      		      	( SELECT  fup_clm_mtch_accnt,
          	      	  	    fup_xchng_cd,
            	      	  	  fup_prdct_typ,
              	      	 	  fup_indstk,
                	      		fup_undrlyng,
                  	    		fup_cntrct_tag,
                      			fup_uibuy_qty,
                      			fup_uibuy_val,
                      			fup_uisell_qty,
                      			fup_uisell_val,
                      			fup_uexbuy_qty,
                      			fup_uexbuy_val,
                      			fup_uexsell_qty,
                      			fup_uexsell_val,
                      			fup_ubuy_exctd_qty,
                      			fup_usell_exctd_qty,
                      			fup_uopnpstn_flw,
                      			fup_uopnpstn_qty,
                      			fup_uopnpstn_val,
                      			fup_umtm_opn_val,
                      			fup_uordr_mrgn,
                      			fup_uexctd_mrgn,
                      			fup_uspread_mrgn,
                      			fup_uspread_pnl,
                      			fup_add_mrgn_val,
                      			fup_utrd_mrgn,
                      			fup_mtm_flg,
                        /*  ( fup_trd_dt - 1 ),  ** commented in Ver 7.2 ***/
                            :c_fbc_trd_dt,    /** Ver 7.2 **/
                      			fup_umin_trd_mrgn,
                      			sysdate,
														fup_ucc_cd 			/*** Added in VER 11.2 ***/
              			FROM    fup_fut_undrlyng_pstn
             	 			WHERE   fup_xchng_cd = :c_xchng_cd		/*** Ver 3.6 ***/
										and			(fup_utrd_mrgn 		<>  0
										OR			fup_uopnpstn_qty 	<>  0)
            			);

		if( SQLCODE != 0 )
		{
  		fn_errlog(c_ServiceName,"S31165",SQLMSG,c_errmsg);
  		fn_exit ( c_ServiceName, i_trnsctn,
      		               "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
  		return;
		}

		if(DEBUG_MSG_LVL_0)
		{
			fn_userlog(c_ServiceName,"Before Inserting Data Into fop_fo_options_pstn_loghstry");
		}

    EXEC SQL
      INSERT INTO fop_fo_options_pstn_loghstry
									(
								 		fop_clm_mtch_accnt,
 										fop_xchng_cd,
 										fop_prdct_typ,
 										fop_indstk,
 										fop_undrlyng,
 										fop_expry_dt,
 										fop_strk_prc,
 										fop_exer_typ,
 										fop_opt_typ,
 										fop_ibuy_qty,
 										fop_ibuy_ord_val,
 										fop_isell_qty,
 										fop_isell_ord_val,
 										fop_exbuy_qty,
 										fop_exbuy_ord_val,
 										fop_exsell_qty,
 										fop_exsell_ord_val,
 										fop_buy_exctd_qty,
 										fop_sell_exctd_qty,
 										fop_opnpstn_flw,
 										fop_opnpstn_qty,
 										fop_opnpstn_val,
 										fop_uordr_mrgn,
 										fop_uexctd_mrgn,
 										fop_exrc_qty,
 										fop_dp_qty,
 										fop_asgnd_qty,
 										fop_ord_blkd_qty,
 										fop_trd_blkd_qty,
 										fop_mtm_flg,
 										fop_iexrc_qty,
 										fop_exexrc_qty,
 										fop_trggr_prc,
 										fop_idontexrc_qty,
 										fop_exdontexrc_qty,
 										fop_trd_dt,
 										fop_prcsng_tm,
                    fop_min_trg_prc,  /** Ver 5.8 **/
                    FOP_DLVRY_MODE_FLAG,      /** Ver 10.3 **/
                    FOP_DLVRY_OBLGAMT_BLCKD,  /** Ver 10.3 **/
                    FOP_DLVRY_QTY_BLCKD       /** Ver 10.3 **/
									)
                	( SELECT  fop_clm_mtch_accnt,
                  	        fop_xchng_cd,
                    	      fop_prdct_typ,
                      	    fop_indstk,
                        	  fop_undrlyng,
                         	 	fop_expry_dt,
                          	fop_strk_prc,
                          	fop_exer_typ,
                          	fop_opt_typ,
                          	fop_ibuy_qty,
                          	fop_ibuy_ord_val,
                          	fop_isell_qty,
                          	fop_isell_ord_val,
                          	fop_exbuy_qty,
                          	fop_exbuy_ord_val,
                          	fop_exsell_qty,
                          	fop_exsell_ord_val,
                          	fop_buy_exctd_qty,
                          	fop_sell_exctd_qty,
                          	fop_opnpstn_flw,
                          	fop_opnpstn_qty,
                          	fop_opnpstn_val,
                          	fop_uordr_mrgn,
                          	fop_uexctd_mrgn,
                          	fop_exrc_qty,
                          	fop_dp_qty,
                          	fop_asgnd_qty,
                          	fop_ord_blkd_qty,
                          	fop_trd_blkd_qty,
                          	fop_mtm_flg,
                          	fop_iexrc_qty,
                          	fop_exexrc_qty,
                          	fop_trggr_prc,
                          	fop_idontexrc_qty,
                          	fop_exdontexrc_qty,
                        /*  ( fop_trd_dt - 1 ),  ** commented in Ver 7.2 ***/
                            :c_fbc_trd_dt,    /** Ver 7.2 **/
                          	sysdate,
                            fop_min_trg_prc,  /** Ver 5.8 **/
                            FOP_DLVRY_MODE_FLAG,      /** Ver 10.3 **/
                            FOP_DLVRY_OBLGAMT_BLCKD,  /** Ver 10.3 **/
                            FOP_DLVRY_QTY_BLCKD       /** Ver 10.3 **/
                  	FROM    fop_fo_options_pstn
                  	WHERE   fop_xchng_cd = :c_xchng_cd		/*** Ver 3.6 ***/
										and			fop_opnpstn_qty <>  0
                	);

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31170",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

		if(DEBUG_MSG_LVL_0)
		{
    	fn_userlog(c_ServiceName,"END OF VER 2.5");
		}

    /***  Ver 2.5 Ends  ***/

		/*** Ver 3.4 Logging SPAN FNO Positions To History Starts  ***/

		if(DEBUG_MSG_LVL_0)
		{
			fn_userlog(c_ServiceName,"Before Inserting Data Into fcp_fo_cntrct_pstn_loghstry");
		}

    EXEC SQL
      INSERT INTO fcp_fo_cntrct_pstn_loghstry
									(
										fcp_clm_mtch_accnt,
										fcp_xchng_cd,
										fcp_prdct_typ,
										fcp_indstk,
										fcp_undrlyng,
										fcp_expry_dt,
										fcp_exer_typ,
										fcp_strk_prc,
										fcp_opt_typ,
										fcp_ibuy_qty,
										fcp_ibuy_ord_val,
										fcp_isell_qty,
										fcp_isell_ord_val,
										fcp_exbuy_qty,
										fcp_exbuy_ord_val,
										fcp_exsell_qty,
										fcp_exsell_ord_val,
										fcp_buy_exctd_qty,
										fcp_sell_exctd_qty,
										fcp_opnpstn_flw,
										fcp_opnpstn_qty,
										fcp_opnpstn_val,
										fcp_exrc_qty,
										fcp_asgnd_qty,
										fcp_opt_premium,
										fcp_mtm_opn_val,
										fcp_imtm_opn_val,
										fcp_trd_dt,            /*** Ver 6.4 ***/
                    fcp_avg_prc,            /*** Ver 10.5 ***/
										fcp_ucc_cd						/*** Added in VER 11.2 ***/
									)
                	( select fcp_clm_mtch_accnt,
											fcp_xchng_cd,
											fcp_prdct_typ,
											fcp_indstk,
											fcp_undrlyng,
											fcp_expry_dt,
											fcp_exer_typ,
											fcp_strk_prc,
											fcp_opt_typ,
											fcp_ibuy_qty,
											fcp_ibuy_ord_val,
											fcp_isell_qty,
											fcp_isell_ord_val,
											fcp_exbuy_qty,
											fcp_exbuy_ord_val,
											fcp_exsell_qty,
											fcp_exsell_ord_val,
											fcp_buy_exctd_qty,
											fcp_sell_exctd_qty,
											fcp_opnpstn_flw,
											fcp_opnpstn_qty,
											fcp_opnpstn_val,
											fcp_exrc_qty,
											fcp_asgnd_qty,
											fcp_opt_premium,
											fcp_mtm_opn_val,
											fcp_imtm_opn_val,
											:c_fbc_trd_dt,          /*** Ver 6.4 ***/
                      fcp_avg_prc,             /*** Ver 10.5 ***/
											fcp_ucc_cd							/*** Added in VER 11.2 ***/
                  	from    fcp_fo_spn_cntrct_pstn
                  	where   fcp_xchng_cd = :c_xchng_cd		/*** Ver 3.6 ***/
										and     fcp_opnpstn_qty <>  0
	               	);

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31175",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

		/*** Ver 3.4 Ends ***/

		/*** Ver 3.5 Starts  ***/

    if(DEBUG_MSG_LVL_0)
    {
      fn_userlog(c_ServiceName,"Before Inserting Data Into fus_und_spnpstn_loghstry ");
    }

      fn_userlog(c_ServiceName,"Anand Exchange Code Is :%s:",c_xchng_cd); /* Testing */

    EXEC SQL
     INSERT INTO fus_und_spnpstn_loghstry
    (
        fus_clm_mtch_accnt,
        fus_xchng_cd,
        fus_undrlyng,
        fus_indstk,
        fus_uibuy_qty,
        fus_uibuy_val,
        fus_uisell_qty,
        fus_uisell_val,
        fus_uexbuy_qty,
        fus_uexbuy_val,
        fus_uexsell_qty,
        fus_uexsell_val,
        fus_ubuy_exctd_qty,
        fus_usell_exctd_qty,
        fus_uopnpstn_flw,
        fus_uopnpstn_qty,
        fus_uopnpstn_val,
        fus_umtm_opn_val,
        fus_initial_mrgn,
        fus_span_wemult_mrgn,
        fus_eba_expr_mrgn,
        fus_uspan_wenov_mrgn,
        fus_multiplier,
        fus_uspan_nenov_mrgn,
        fus_net_optn_val,
        fus_mtm_flg,
        fus_trd_dt,
        fus_ntnl_pl,
        fus_blckd_pl,
        fus_min_mrgn,
        fus_reqd_initial_mrgn,
        fus_prcsng_tm,
				fus_ucc_cd				/*** Added in VER 11.2 ***/
    )
    (
      select
        fus_clm_mtch_accnt,
        fus_xchng_cd,
        fus_undrlyng,
        fus_indstk,
        fus_uibuy_qty,
        fus_uibuy_val,
        fus_uisell_qty,
        fus_uisell_val,
        fus_uexbuy_qty,
        fus_uexbuy_val,
        fus_uexsell_qty,
        fus_uexsell_val,
        fus_ubuy_exctd_qty,
        fus_usell_exctd_qty,
        fus_uopnpstn_flw,
        fus_uopnpstn_qty,
        fus_uopnpstn_val,
        fus_umtm_opn_val,
        fus_initial_mrgn,
        fus_span_wemult_mrgn,
        fus_eba_expr_mrgn,
        fus_uspan_wenov_mrgn,
        fus_multiplier,
        fus_uspan_nenov_mrgn,
        fus_net_optn_val,
        fus_mtm_flg,
        /** ( fus_trd_dt - 1), Commented in Ver 6.4 ***/
				:c_fbc_trd_dt,           /*** Ver 6.4 ***/
        fus_ntnl_pl,
        fus_blckd_pl,
        fus_min_mrgn,
        fus_reqd_initial_mrgn,
        sysdate,
				fus_ucc_cd			/*** Added in VER 11.2 ***/
      from    fus_fo_undrlyng_spn_pstn
      where   ( fus_uopnpstn_qty <> 0 OR fus_initial_mrgn !=0 )
        and   fus_xchng_cd = :c_xchng_cd      /*** Added in Ver 8.2 ***/ 
    );

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31180",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

    /*** Ver 3.5 Ends ***/

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Inserting Data Into FEC_FO_EXRC_CONF_HSTRY :1:");	/*** Ver 7.3 ***/
    }

    EXEC SQL
    INSERT INTO fec_fo_exrc_conf_hstry
    (
      fec_clm_mtch_accnt,
      fec_xchng_cd,
      fec_prdct_typ,
      fec_indstk,
      fec_undrlyng,
      fec_expry_dt,
      fec_exer_typ,
      fec_opt_typ,
      fec_strk_prc,
      fec_ca_lvl,
      fec_exrc_qty,
      fec_exrc_dt,
      fec_exrc_rfrnc_no,
      fec_exrc_init,
      fec_opn_pos_qty,
      fec_curr_mkt_prc,
      fec_brkg_val,			/* 2.4 */
       fec_stt,					/* 2.4 */
      fec_src_tx,				/* 2.4 */
      fec_sebi_tt,			/* 2.4 */
      fec_tran_chrg,		/* 2.4 */
      fec_stamp_duty,		/* 2.4 */
      fec_other_chrg,   /* 2.4 */  
			FEC_MIN_LOT_SIZE  /* 3.0 */
    )
    (
    SELECT  fec_fo_exrc_conf.fec_clm_mtch_accnt,
            fec_fo_exrc_conf.fec_xchng_cd,
            fec_fo_exrc_conf.fec_prdct_typ,
            fec_fo_exrc_conf.fec_indstk,
            fec_fo_exrc_conf.fec_undrlyng,
            fec_fo_exrc_conf.fec_expry_dt,
            fec_fo_exrc_conf.fec_exer_typ,
            fec_fo_exrc_conf.fec_opt_typ,
            fec_fo_exrc_conf.fec_strk_prc,
            fec_fo_exrc_conf.fec_ca_lvl,
            fec_fo_exrc_conf.fec_exrc_qty,
            fec_fo_exrc_conf.fec_exrc_dt,
            fec_fo_exrc_conf.fec_exrc_rfrnc_no,
            fec_fo_exrc_conf.fec_exrc_init,
            fec_fo_exrc_conf.fec_opn_pos_qty,
            fec_fo_exrc_conf.fec_curr_mkt_prc,
            fec_fo_exrc_conf.fec_brkg_val,		/* 2.4 */
            fec_fo_exrc_conf.fec_stt,					/* 2.4 */
            fec_fo_exrc_conf.fec_src_tx,			/* 2.4 */
            fec_fo_exrc_conf.fec_sebi_tt,			/* 2.4 */
            fec_fo_exrc_conf.fec_tran_chrg,		/* 2.4 */
            fec_fo_exrc_conf.fec_stamp_duty,	/* 2.4 */	
            fec_fo_exrc_conf.fec_other_chrg,  /* 2.4 */        
						fec_fo_exrc_conf.FEC_MIN_LOT_SIZE /* 3.0 */
    FROM    fec_fo_exrc_conf
    WHERE   
		fec_fo_exrc_conf.fec_xchng_cd = :c_xchng_cd	and 	/*** Ver 3.6 ***/
		/*	fec_fo_exrc_conf.fec_exrc_init = 'E' */				/** Ver 3.1 **/
    fec_fo_exrc_conf.fec_exrc_dt  < to_date(:c_date,'dd-Mon-yyyy')
   );

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31185",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/  
      return;
    }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Delete Data From FEC_FO_EXRC_CONF :1:");   /*** Ver 7.3 ***/
    }	

    EXEC SQL
      DELETE from fec_fo_exrc_conf
    WHERE
		fec_xchng_cd = :c_xchng_cd	and 	/*** Ver 3.6 ***/
		/* fec_exrc_init = 'E'	*/									/** Ver 3.1 **/
    fec_exrc_dt < to_date(:c_date,'dd-Mon-yyyy');

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND) )
    {
      fn_errlog(c_ServiceName,"S31190",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Inserting Data Into BK_EXRC_RFRNC_NO");	/*** 7.3 ***/
    }

    EXEC SQL
      INSERT INTO bk_exrc_rfrnc_no
      (
        SELECT  feb_exrc_rfrnc_no,
								feb_xchng_cd											/*** ver 3.6 ***/
        FROM    feb_fo_exrc_rqst_book 
        WHERE   feb_xchng_cd = :c_xchng_cd		 	/*** Ver 3.6 ***/
				AND			feb_trd_dt < to_date(:c_date,'dd-Mon-yyyy')
        AND     feb_exrc_stts IN ( 'C', 'J', 'E', 'X' )
      );

      if ( SQLCODE != 0 )  
      {
        fn_errlog(c_ServiceName,"S31195",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/ 
        return;
      }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Get Count From BK_EXRC_RFRNC_NO");  /*** Ver 7.3 ***/
    }

    EXEC SQL
      SELECT count(rowid)						/*** Ver 4.0 '*' changed to 'rowid' **/
      INTO   :i_exrec_cnt
      FROM   bk_exrc_rfrnc_no
			WHERE  xchng_cd = :c_xchng_cd	 	/*** Ver 3.6 ***/;

   	/*  if ( SQLCODE != 0 ) */     															/*   Commented in Ver 2.9  */
    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND) )       /* Ver 2.9  */ 
    {
      fn_errlog(c_ServiceName,"S31200",LIBMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

    /***  Commented in Ver 2.9  Start   **********/
    /***************************************************************************    
    if( i_exrec_cnt == 0 )
    {
      fn_exit( c_ServiceName, i_trnsctn,
                        "No data to update history in exercise book", 'N' );

      if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
      {
        fn_errlog(c_ServiceName,"S31205",LIBMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn, 
                    "Unable to commit transaction- Contact system support",'Y');
        return;
      }

      fn_exit ( c_ServiceName, i_trnsctn, 
                    "*** House Keeping Process Completed ****",'N');
      return;
    }
    else
    {
      sprintf( c_msg, "No. of Exercise request to House Keep is :%ld:",i_exrec_cnt );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
     }                                                    

    ***  Commented in Ver 2.9  End   *********/

		sprintf( c_msg, "No. of Exercise request to House Keep is :%ld:", i_exrec_cnt );
    fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );


  /***1.1***/

    if(i_exrec_cnt != 0 )               /*  Condition Checked in Ver 2.9 */
    {
    EXEC SQL
      INSERT INTO feb_fo_exrc_rqst_book_hstry
      (
        feb_clm_mtch_accnt,
        feb_clnt_ctgry,
        feb_exrc_rfrnc_no,
        feb_pipe_id,
        feb_xchng_cd,
        feb_prdct_typ,
        feb_indstk,
        feb_undrlyng,
        feb_expry_dt,
        feb_exer_typ,
        feb_opt_typ,
        feb_strk_prc,
        feb_exrc_rqst_typ,
        feb_exrc_qty,
        feb_exrc_stts,
        feb_trd_dt,
        feb_mdfctn_cntr,
        feb_settlor,
        feb_ack_nmbr,
        feb_exer_ack_tm,
        feb_pro_cli_ind,
        feb_curr_mkt_prc,
        feb_channel,
        feb_bp_id
      )
      (
        SELECT  feb_clm_mtch_accnt,
                feb_clnt_ctgry,
                feb_exrc_rfrnc_no,
                feb_pipe_id,
                feb_xchng_cd,
                feb_prdct_typ,
                feb_indstk,
                feb_undrlyng,
                feb_expry_dt,
                feb_exer_typ,
                feb_opt_typ,
                feb_strk_prc,
                feb_exrc_rqst_typ,
                feb_exrc_qty,
                feb_exrc_stts,
                feb_trd_dt,
                feb_mdfctn_cntr,
                feb_settlor,
                feb_ack_nmbr,
                feb_exer_ack_tm,
                feb_pro_cli_ind,
                feb_curr_mkt_prc,
                feb_channel,
                feb_bp_id
        FROM    feb_fo_exrc_rqst_book, bk_exrc_rfrnc_no
        WHERE   feb_exrc_rfrnc_no = bk_exrc_rfrnc_no.exrc_rfrnc_no
				AND     bk_exrc_rfrnc_no.xchng_cd = :c_xchng_cd    /*** Ver 3.6 ***/
    );

    if( SQLCODE != 0 )          
    {
      fn_errlog(c_ServiceName,"S31210",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Delete Data From FEB_FO_EXRC_RQST_BOOK");  /*** Ver 7.3 ***/
    }
  
    EXEC SQL
      DELETE  feb_fo_exrc_rqst_book
      WHERE   feb_exrc_rfrnc_no IN 
    (
      SELECT  exrc_rfrnc_no
      FROM    bk_exrc_rfrnc_no
			WHERE   xchng_cd = :c_xchng_cd    /*** Ver 3.6 ***/
    );

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31215",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Inserting Data Into FXB_FO_XCHNG_BOOK_HSTRY :2:");  /*** Ver 7.3 ***/
    }

    EXEC SQL
    INSERT INTO fxb_fo_xchng_book_hstry
    (
      fxb_xchng_cd,
      fxb_ordr_rfrnc,
      fxb_pipe_id,
      fxb_mod_trd_dt,
      fxb_ordr_sqnc,
      fxb_lmt_mrkt_sl_flg,
      fxb_dsclsd_qty,
      fxb_ordr_tot_qty,
      fxb_lmt_rt,
      fxb_stp_lss_tgr,
      fxb_mdfctn_cntr,
      fxb_ordr_valid_dt,
      fxb_ordr_type,
      fxb_sprd_ord_ind,
      fxb_rqst_typ,
      fxb_quote,
      fxb_qt_tm,
      fxb_rqst_tm,
      fxb_frwd_tm,
      fxb_plcd_stts,
      fxb_rms_prcsd_flg,
      fxb_ors_msg_typ,
      fxb_ack_tm,
      fxb_xchng_rmrks,
      fxb_ex_ordr_typ,
      fxb_xchng_cncld_qty,
      fxb_spl_flag,
      fxb_jiffy,
      fxb_mrkt_typ,  /* Ver 1.9 */
			fxb_stream_no,			/***	Ver	2.6	***/
			fxb_ip,            /***  Ver 3.9 ***/
      FXB_LST_ACT_REF,    /*** Ver 8.7 ***/
      FXB_SSSN_ID         /*** Ver 10.8 ***/
    )
    (
    SELECT  fxb_fo_xchng_book.fxb_xchng_cd,
            fxb_fo_xchng_book.fxb_ordr_rfrnc,
            fxb_fo_xchng_book.fxb_pipe_id,
            fxb_fo_xchng_book.fxb_mod_trd_dt,
            fxb_fo_xchng_book.fxb_ordr_sqnc,
            fxb_fo_xchng_book.fxb_lmt_mrkt_sl_flg,
            fxb_fo_xchng_book.fxb_dsclsd_qty,
            fxb_fo_xchng_book.fxb_ordr_tot_qty,
            fxb_fo_xchng_book.fxb_lmt_rt,
            fxb_fo_xchng_book.fxb_stp_lss_tgr,
            fxb_fo_xchng_book.fxb_mdfctn_cntr,
            fxb_fo_xchng_book.fxb_ordr_valid_dt,
            fxb_fo_xchng_book.fxb_ordr_type,
            fxb_fo_xchng_book.fxb_sprd_ord_ind,
            fxb_fo_xchng_book.fxb_rqst_typ,
            fxb_fo_xchng_book.fxb_quote,
            fxb_fo_xchng_book.fxb_qt_tm,
            fxb_fo_xchng_book.fxb_rqst_tm,
            fxb_fo_xchng_book.fxb_frwd_tm,
            fxb_fo_xchng_book.fxb_plcd_stts,
            fxb_fo_xchng_book.fxb_rms_prcsd_flg,
            fxb_fo_xchng_book.fxb_ors_msg_typ,
            fxb_fo_xchng_book.fxb_ack_tm,
            fxb_fo_xchng_book.fxb_xchng_rmrks,
            fxb_fo_xchng_book.fxb_ex_ordr_typ,
            fxb_fo_xchng_book.fxb_xchng_cncld_qty,
            fxb_fo_xchng_book.fxb_spl_flag,
            fxb_fo_xchng_book.fxb_jiffy,
            NVL( fxb_fo_xchng_book.fxb_mrkt_typ, 'N' ),             /* Ver 1.9 */
            fxb_fo_xchng_book.fxb_stream_no,			/***	Ver	2.6	***/
						fxb_fo_xchng_book.fxb_ip,              /***  Ver 3.9 ***/
            fxb_fo_xchng_book.FXB_LST_ACT_REF,      /*** Ver 8.7 ***/
            fxb_fo_xchng_book.FXB_SSSN_ID       /*** Ver 10.8 ***/
    FROM    fxb_fo_xchng_book, bk_exrc_rfrnc_no
    WHERE   fxb_fo_xchng_book.fxb_ordr_rfrnc = bk_exrc_rfrnc_no.exrc_rfrnc_no
		AND     bk_exrc_rfrnc_no.xchng_cd = :c_xchng_cd    /*** Ver 3.6 ***/
    );

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31220",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/ 
      return;
    }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Delete Data From FXB_FO_XCHNG_BOOK :2:");  /*** Ver 7.3 ***/
    }

    EXEC SQL
      DELETE  fxb_fo_xchng_book
      WHERE   fxb_ordr_rfrnc IN
    (
      SELECT  exrc_rfrnc_no
      FROM    bk_exrc_rfrnc_no
			WHERE   xchng_cd = :c_xchng_cd    /*** Ver 3.6 ***/
    );

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31225",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Inserting Data Into FEC_FO_EXRC_CONF_HSTRY :2:");  /*** Ver 7.3 ***/
    }

    EXEC SQL
    INSERT INTO fec_fo_exrc_conf_hstry
    (
      fec_clm_mtch_accnt,
      fec_xchng_cd,
      fec_prdct_typ,
      fec_indstk,
      fec_undrlyng,
      fec_expry_dt,
      fec_exer_typ,
      fec_opt_typ,
      fec_strk_prc,
      fec_ca_lvl,
      fec_exrc_qty,
      fec_exrc_dt,
      fec_exrc_rfrnc_no,
      fec_exrc_init,
      fec_opn_pos_qty,
      fec_curr_mkt_prc,
			FEC_MIN_LOT_SIZE    /*ver 3.0*/
    )
    (
    SELECT  fec_fo_exrc_conf.fec_clm_mtch_accnt,
            fec_fo_exrc_conf.fec_xchng_cd,
            fec_fo_exrc_conf.fec_prdct_typ,
            fec_fo_exrc_conf.fec_indstk,
            fec_fo_exrc_conf.fec_undrlyng,
            fec_fo_exrc_conf.fec_expry_dt,
            fec_fo_exrc_conf.fec_exer_typ,
            fec_fo_exrc_conf.fec_opt_typ,
            fec_fo_exrc_conf.fec_strk_prc,
            fec_fo_exrc_conf.fec_ca_lvl,
            fec_fo_exrc_conf.fec_exrc_qty,
            fec_fo_exrc_conf.fec_exrc_dt,
            fec_fo_exrc_conf.fec_exrc_rfrnc_no,
            fec_fo_exrc_conf.fec_exrc_init,
            fec_fo_exrc_conf.fec_opn_pos_qty,
            fec_fo_exrc_conf.fec_curr_mkt_prc,
						fec_fo_exrc_conf.FEC_MIN_LOT_SIZE       /*Ver 3.0*/
    FROM    fec_fo_exrc_conf, bk_exrc_rfrnc_no
    WHERE   fec_fo_exrc_conf.fec_exrc_rfrnc_no = bk_exrc_rfrnc_no.exrc_rfrnc_no
		AND     bk_exrc_rfrnc_no.xchng_cd = :c_xchng_cd    /*** Ver 3.6 ***/
   );

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31230",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Delete Data From FEC_FO_EXRC_CONF");  /*** Ver 7.3 ***/
    }	

    EXEC SQL
      DELETE  fec_fo_exrc_conf
      WHERE   fec_exrc_rfrnc_no IN 
    (
      SELECT  exrc_rfrnc_no
      FROM    bk_exrc_rfrnc_no
			WHERE   xchng_cd = :c_xchng_cd    /*** Ver 3.6 ***/
    );

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND) )
    {
      fn_errlog(c_ServiceName,"S31235",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
      return;
    }


  }

/*    if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
    {
      fn_errlog(c_ServiceName,"S31240",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                    "Unable to commit transaction- Contact system support",'Y');
      return;
    }

*/
/* *******************************************************************/
/* *******************************************************************/
/*  2.8  start*/

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Delete Data From FTQ_FO_TRD_QT_PREV");  /*** Ver 7.3 ***/
    }

     EXEC SQL
       DELETE from FTQ_FO_TRD_QT_PREV
			 WHERE	ftq_xchng_cd = :c_xchng_cd; 	/*** Ver 3.6 ***/

       if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND) )
       {
         fn_errlog(c_ServiceName,"S31245",SQLMSG,c_errmsg);
         fn_exit ( c_ServiceName, i_trnsctn, 
			 "System error - Contact System support",'Y');
         strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
         fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
         return;
       }

    	if(DEBUG_MSG_LVL_5)
    	{
      	fn_userlog(c_ServiceName,"Before Inserting Data Into FTQ_FO_TRD_QT_PREV");  /*** Ver 7.3 ***/
    	}

      EXEC SQL
      INSERT into FTQ_FO_TRD_QT_PREV
      (
				FTQ_XCHNG_CD,
				FTQ_PRDCT_TYP,
				FTQ_INDSTK,
				FTQ_UNDRLYNG,
				FTQ_EXPRY_DT,
				FTQ_EXER_TYP,
				FTQ_OPT_TYP,
				FTQ_STRK_PRC,
				FTQ_CLS_PRC,
				FTQ_OPN_PRC,
				FTQ_HGH_PRC,
				FTQ_LOW_PRC,
				FTQ_PRVS_CLS_PRC,
				FTQ_CHNG_PRVS_CLS,
				FTQ_INDCTR,
				FTQ_HGH_PRC_RNG,
				FTQ_LOW_PRC_RNG,
				FTQ_TOT_QTY_TRDD,
				FTQ_TOT_VAL_TRDD,
				FTQ_LST_TRD_PRC,
				FTQ_LST_TRD_TM,
				FTQ_LST_TRD_QTY,
				FTQ_AVRG_TRD_PRC,
				FTQ_BST1_BID_PRC,
				FTQ_BST1_BID_QTY,
				FTQ_BST2_BID_PRC,
				FTQ_BST2_BID_QTY,
				FTQ_BST3_BID_PRC,
				FTQ_BST3_BID_QTY,
				FTQ_BST4_BID_PRC,
				FTQ_BST4_BID_QTY,
				FTQ_BST5_BID_PRC,
				FTQ_BST5_BID_QTY,
				FTQ_BST1_OFFR_PRC,
				FTQ_BST1_OFFR_QTY,
				FTQ_BST2_OFFR_PRC,
				FTQ_BST2_OFFR_QTY,
				FTQ_BST3_OFFR_PRC,
				FTQ_BST3_OFFR_QTY,
				FTQ_BST4_OFFR_PRC,
				FTQ_BST4_OFFR_QTY,
				FTQ_BST5_OFFR_PRC,
				FTQ_BST5_OFFR_QTY,
				FTQ_TOT_BID_QTY,
				FTQ_TOT_OFFR_QTY,
				FTQ_PRMTD_TO_TRD,
				FTQ_STTS,
				FTQ_MIN_LOT_QTY,
				FTQ_BOARD_LOT_QTY,
				FTQ_TCK_SZ,
				FTQ_RCRD_DT,
				FTQ_ND_STRT_DT,
				FTQ_ND_END_DT,
				FTQ_BK_CLS_STRT_DT,
				FTQ_BK_CLS_END_DT,
				FTQ_SETL_SETLMNT_NO,
				FTQ_CRNT_OI,
				FTQ_CHNG_OI,
				FTQ_OI_INDCTR,
				FTQ_OI_HIGH,
				FTQ_OI_LOW,
				FTQ_BASE_PRC,
				FTQ_BASE_PRC_UPD_DT,
				FTQ_CLS_OI,
				FTQ_CLS_IV,
				FTQ_CLS_TRD_QTY,
				FTQ_ROLL_OVER,
				FTQ_RLVR_PER,
				FTQ_RLVR_OPN_CNTRCTS,
				FTQ_ATS_CLS_PRC,
        FTQ_MULTPLR,             /*** Ver 5.5 ***/
        FTQ_ACT_STTS,            /*** Ver 5.5 ***/
        FTQ_QT_TRDNG_FLG,        /*** Ver 5.5 ***/
        FTQ_TOKEN_NO,            /*** Ver 5.5 ***/
        FTQ_CA_LVL,              /*** Ver 5.5 ***/
        FTQ_CLS_PRC_DT,          /*** Ver 5.5 ***/
        FTQ_CNTRCT_TAG,          /*** Ver 5.5 ***/
        FTQ_MRKT_TYP,            /*** Ver 5.5 ***/
        FTQ_FP_QT_TRDNG_FLG,     /*** Ver 5.5 ***/
        FTQ_ROLLOVER_FLAG,       /*** Ver 5.5 ***/
        FTQ_EBA_CNTRCT_ID,        /*** Ver 5.5 ***/
        FTQ_DLVRY_POS_ALLWD,      /*** Ver 8.0 ***/
        FTQ_SETLMNT_FLG,           /*** Ver 8.0 ***/
        FTQ_SPD_TOKEN2,          /*** ver 9.1 ***/
        FTQ_EXPRY_DT2,           /*** ver 9.1 ***/
        FTQ_ROLLOVER_SPRD_ALLWD_FLG,       /*** ver 9.1 ***/ 
        FTQ_OPLOW_PRICEDIFF, /*** ver 9.1 ***/
        FTQ_OPHIGH_PRICEDIFF, /*** ver 9.1 ***/
        FTQ_ELIGIBILITY, /*** ver 9.1 ***/
			  FTQ_BUY_ALLWD,   /*** ver 10.6 ***/   
        FTQ_SELL_ALLWD  /*** ver 10.6 ***/
        )
			(
		  SELECT 	FTQ_XCHNG_CD,
						FTQ_PRDCT_TYP,
						FTQ_INDSTK,
						FTQ_UNDRLYNG,
						FTQ_EXPRY_DT,
						FTQ_EXER_TYP,
						FTQ_OPT_TYP,
						FTQ_STRK_PRC,
						FTQ_CLS_PRC,
						FTQ_OPN_PRC,
						FTQ_HGH_PRC,
						FTQ_LOW_PRC,
						FTQ_PRVS_CLS_PRC,
						FTQ_CHNG_PRVS_CLS,
						FTQ_INDCTR,
						FTQ_HGH_PRC_RNG,
						FTQ_LOW_PRC_RNG,
						FTQ_TOT_QTY_TRDD,
						FTQ_TOT_VAL_TRDD,
						FTQ_LST_TRD_PRC,
						FTQ_LST_TRD_TM,
						FTQ_LST_TRD_QTY,
						FTQ_AVRG_TRD_PRC,
						FTQ_BST1_BID_PRC,
						FTQ_BST1_BID_QTY,
						FTQ_BST2_BID_PRC,
						FTQ_BST2_BID_QTY,
						FTQ_BST3_BID_PRC,
						FTQ_BST3_BID_QTY,
						FTQ_BST4_BID_PRC,
						FTQ_BST4_BID_QTY,
						FTQ_BST5_BID_PRC,
						FTQ_BST5_BID_QTY,
						FTQ_BST1_OFFR_PRC,
						FTQ_BST1_OFFR_QTY,
						FTQ_BST2_OFFR_PRC,
						FTQ_BST2_OFFR_QTY,
						FTQ_BST3_OFFR_PRC,
						FTQ_BST3_OFFR_QTY,
						FTQ_BST4_OFFR_PRC,
						FTQ_BST4_OFFR_QTY,
						FTQ_BST5_OFFR_PRC,
						FTQ_BST5_OFFR_QTY,
						FTQ_TOT_BID_QTY,
						FTQ_TOT_OFFR_QTY,
						FTQ_PRMTD_TO_TRD,
						FTQ_STTS,
						FTQ_MIN_LOT_QTY,
						FTQ_BOARD_LOT_QTY,
						FTQ_TCK_SZ,
						FTQ_RCRD_DT,
						FTQ_ND_STRT_DT,
						FTQ_ND_END_DT,
						FTQ_BK_CLS_STRT_DT,
						FTQ_BK_CLS_END_DT,
						FTQ_SETL_SETLMNT_NO,
						FTQ_CRNT_OI,
						FTQ_CHNG_OI,
						FTQ_OI_INDCTR,
						FTQ_OI_HIGH,
						FTQ_OI_LOW,
						FTQ_BASE_PRC,
						FTQ_BASE_PRC_UPD_DT,
						FTQ_CLS_OI,
						FTQ_CLS_IV,
						FTQ_CLS_TRD_QTY,
						FTQ_ROLL_OVER,
						FTQ_RLVR_PER,
						FTQ_RLVR_OPN_CNTRCTS,
						FTQ_ATS_CLS_PRC,
            FTQ_MULTPLR,             /*** Ver 5.5 ***/
            FTQ_ACT_STTS,            /*** Ver 5.5 ***/
            FTQ_QT_TRDNG_FLG,        /*** Ver 5.5 ***/
            FTQ_TOKEN_NO,            /*** Ver 5.5 ***/
            FTQ_CA_LVL,              /*** Ver 5.5 ***/
            FTQ_CLS_PRC_DT,          /*** Ver 5.5 ***/
            FTQ_CNTRCT_TAG,          /*** Ver 5.5 ***/
            FTQ_MRKT_TYP,            /*** Ver 5.5 ***/
            FTQ_FP_QT_TRDNG_FLG,     /*** Ver 5.5 ***/
            FTQ_ROLLOVER_FLAG,       /*** Ver 5.5 ***/
            FTQ_EBA_CNTRCT_ID,        /*** Ver 5.5 ***/ 
            FTQ_DLVRY_POS_ALLWD,      /*** Ver 8.0 ***/
            FTQ_SETLMNT_FLG,           /*** Ver 8.0 ***/
        FTQ_SPD_TOKEN2,          /*** ver 9.1 ***/
        FTQ_EXPRY_DT2,           /*** ver 9.1 ***/
        FTQ_ROLLOVER_SPRD_ALLWD_FLG,       /*** ver 9.1 ***/
        FTQ_OPLOW_PRICEDIFF, /*** ver 9.1 ***/
        FTQ_OPHIGH_PRICEDIFF, /*** ver 9.1 ***/
        FTQ_ELIGIBILITY, /*** ver 9.1 ***/
        FTQ_BUY_ALLWD,  /** ver 10.6  **/ 
        FTQ_SELL_ALLWD /** ver 10.6  **/ 
      FROM FTQ_FO_TRD_QT
      /*WHERE trunc(FTQ_LST_TRD_TM) = (select trunc(max(FTQ_LST_TRD_TM)) from FTQ_FO_TRD_QT)*/		/*** Commented in Ver 3.6 ***/
			WHERE ftq_xchng_cd = :c_xchng_cd	/*** Ver 3.6 ***/
			AND		trunc(FTQ_LST_TRD_TM) = (select trunc(max(FTQ_LST_TRD_TM)) from FTQ_FO_TRD_QT WHERE ftq_xchng_cd = :c_xchng_cd) /*** Ver 3.6 ***/
      );

      if( SQLCODE != 0 )
      {
	      fn_errlog(c_ServiceName,"S31250",SQLMSG,c_errmsg);
	      fn_exit ( c_ServiceName, i_trnsctn, 
				 "System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/ 
	      return;
      }



/* *******************************************************************/


  if(DEBUG_MSG_LVL_5)
  {
    fn_userlog(c_ServiceName,"Before Delete Data From LTQ_TRD_QT_PREV");  /*** Ver 7.3 ***/
  }

	/*** Commented in Ver 7.8 ****

      EXEC SQL
	DELETE from LTQ_TRD_QT_PREV
	WHERE ltq_xchng_cd = *** :c_xchng_cd;	*** Ver 3.6 *** Commented in Ver 3.8 ***
	decode(:c_xchng_cd,'NFO','NSE','BSE')	*** Ver 3.8 ***
	*** Added for Ver 4.8 ***
  and to_char(trunc(LTQ_DT),'MM-YYYY') = (select to_char(min(FBC_TRD_DT),'MM-YYYY') from FBC_FO_BRNCH_CAL
  *** where FBC_TRD_DT > trunc(LTQ_DT)); *** Commented in Ver 7.5 **
	** Ver 7.5 Starts **
  WHERE FBC_XCHNG_CD =:c_xchng_cd
  AND   FBC_TRD_DT >= trunc(sysdate));
  ** Ver 7.5 Ends **
  *** Added for Ver 4.8 ***

	*** Ver 7.8 Comment Ends ***/

	/*** Ver 7.8 Starts here ***/

	EXEC SQL
	DELETE FROM LTQ_TRD_QT_PREV
	WHERE LTQ_XCHNG_CD = DECODE(:c_xchng_cd,'NFO','NSE','BSE') 
	AND		TO_CHAR(TRUNC(LTQ_DT),'MM-YYYY') = (SELECT TO_CHAR(TRUNC(MAX(A.LTQ_DT)),'MM-YYYY') 
																						 FROM LTQ_TRD_QT A 
																						 WHERE A.LTQ_XCHNG_CD = DECODE(:c_xchng_cd,'NFO','NSE','BSE'));
	/*** Ver 7.8 Ends ***/

	if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND) )
	{
	      fn_errlog(c_ServiceName,"S31255",SQLMSG,c_errmsg);
	      fn_exit ( c_ServiceName, i_trnsctn, 
				 "System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
	      return;
	}


    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Inserting Data Into LTQ_TRD_QT_PREV");  /*** Ver 7.3 ***/
    }

      EXEC SQL
      INSERT into LTQ_TRD_QT_PREV
      (
					LTQ_STCK_CD,
					LTQ_XCHNG_CD,
					LTQ_DT,
					LTQ_RT,
					LTQ_VLME,
					LTQ_CHNG_INDCTR,
					LTQ_CHNG_PRVS_CLS,
					LTQ_LST_QTY,
					LTQ_AVRG_PRC,
					LTQ_BST1_BID_PRC,
					LTQ_BST1_BID_QTY,
					LTQ_BST2_BID_PRC,
					LTQ_BST2_BID_QTY,
					LTQ_BST3_BID_PRC,
					LTQ_BST3_BID_QTY,
					LTQ_BST4_BID_PRC,
					LTQ_BST4_BID_QTY,
					LTQ_BST5_BID_PRC,
					LTQ_BST5_BID_QTY,
					LTQ_BST1_OFFR_PRC,
					LTQ_BST1_OFFR_QTY,
					LTQ_BST2_OFFR_PRC,
					LTQ_BST2_OFFR_QTY,
					LTQ_BST3_OFFR_PRC,
					LTQ_BST3_OFFR_QTY,
					LTQ_BST4_OFFR_PRC,
					LTQ_BST4_OFFR_QTY,
					LTQ_BST5_OFFR_PRC,
					LTQ_BST5_OFFR_QTY,
					LTQ_PNDNG_BUY,
					LTQ_PNDNG_SAL,
					LTQ_CLS_PRC,
					LTQ_OPN_PRC,
					LTQ_HGH_PRC,
					LTQ_LOW_PRC,
					LTQ_PRCNTG_CHNG_PCLS,
					LTQ_LST_QT_DT,
					LTQ_52_WK_HGH,
					LTQ_52_WK_LW,
					LTQ_DWNLD_FLG,
					LTQ_BASE_PRC,
					LTQ_BASE_UPD_DATE,
					LTQ_TOTAL_BUY,
					LTQ_TOTAL_SELL,
					LTQ_PLG_RT,
					LTQ_PRV_HGH,
					LTQ_PRV_LOW
      )
      (
      SELECT 	LTQ_STCK_CD,
						LTQ_XCHNG_CD,
						LTQ_DT,
						LTQ_RT,
						LTQ_VLME,
						LTQ_CHNG_INDCTR,
						LTQ_CHNG_PRVS_CLS,
						LTQ_LST_QTY,
						LTQ_AVRG_PRC,
						LTQ_BST1_BID_PRC,
						LTQ_BST1_BID_QTY,
						LTQ_BST2_BID_PRC,
						LTQ_BST2_BID_QTY,
						LTQ_BST3_BID_PRC,
						LTQ_BST3_BID_QTY,
						LTQ_BST4_BID_PRC,
						LTQ_BST4_BID_QTY,
						LTQ_BST5_BID_PRC,
						LTQ_BST5_BID_QTY,
						LTQ_BST1_OFFR_PRC,
						LTQ_BST1_OFFR_QTY,
						LTQ_BST2_OFFR_PRC,
						LTQ_BST2_OFFR_QTY,
						LTQ_BST3_OFFR_PRC,
						LTQ_BST3_OFFR_QTY,
						LTQ_BST4_OFFR_PRC,
						LTQ_BST4_OFFR_QTY,
						LTQ_BST5_OFFR_PRC,
						LTQ_BST5_OFFR_QTY,
						LTQ_PNDNG_BUY,
						LTQ_PNDNG_SAL,
						LTQ_CLS_PRC,
						LTQ_OPN_PRC,
						LTQ_HGH_PRC,
						LTQ_LOW_PRC,
						LTQ_PRCNTG_CHNG_PCLS,
						LTQ_LST_QT_DT,
						LTQ_52_WK_HGH,
						LTQ_52_WK_LW,
						LTQ_DWNLD_FLG,
						LTQ_BASE_PRC,
						LTQ_BASE_UPD_DATE,
						LTQ_TOTAL_BUY,
						LTQ_TOTAL_SELL,
						LTQ_PLG_RT,
						LTQ_PRV_HGH,
						LTQ_PRV_LOW
      FROM LTQ_TRD_QT
      /*where trunc(LTQ_DT) = (select trunc(max(LTQ_DT)) from LTQ_TRD_QT)		Commented in Ver 3.6 ***/
			/*** where	ltq_xchng_cd	= :c_xchng_cd		*** Ver 3.6 ***
			and		trunc(LTQ_DT) = (select trunc(max(LTQ_DT)) from LTQ_TRD_QT where ltq_xchng_cd	= :c_xchng_cd)		*** Ver 3.6 *** Commented in Ver 3.8 ***/
			where	ltq_xchng_cd	= decode(:c_xchng_cd,'NFO','NSE','BSE')		/*** Ver 3.8 ***/
			and		trunc(LTQ_DT) = (select trunc(max(LTQ_DT)) from LTQ_TRD_QT where ltq_xchng_cd	= decode(:c_xchng_cd,'NFO','NSE','BSE'))	/*** Ver 3.8 ***/
      );

      if( SQLCODE != 0 )
      {
	      fn_errlog(c_ServiceName,"S31260",SQLMSG,c_errmsg);
	      fn_exit ( c_ServiceName, i_trnsctn, 
				 "System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
	      return;
      }


/* *******************************************************************/
/* 2.8 End */
/* *******************************************************************/

  /***********      Ver 3.2 Starts    ********************/

    	if(DEBUG_MSG_LVL_5)
    	{
      	fn_userlog(c_ServiceName,"Before Inserting Data Into OTD_OPTION_TRD_DTLS_HSTRY");  /*** Ver 7.3 ***/
    	}

      EXEC SQL
        INSERT INTO OTD_OPTION_TRD_DTLS_HSTRY
           (
            OTD_XCHNG_CD,
            OTD_CLM_MTCH_ACCNT,
            OTD_BUY_SUM_QTY,
            OTD_SELL_SUM_QTY,
            OTD_PRDCT_TYP,
            OTD_INDSTK,
            OTD_UNDRLYNG,
            OTD_EXPRY_DT,
            OTD_EXER_TYP,
            OTD_OPT_TYP,
            OTD_STRK_PRC,
            OTD_TRD_DT,
            OTD_SCHM_CODE,
            OTD_MIN_LOT_SIZE,
            OTD_CARRY_FWD_QTY,
            OTD_PRCS_FLG,
						OTD_ATS_FLG												/*** Ver 4.0 ***/
           )
        SELECT OTD_XCHNG_CD,
              OTD_CLM_MTCH_ACCNT,
              OTD_BUY_SUM_QTY,
              OTD_SELL_SUM_QTY,
              OTD_PRDCT_TYP,
              OTD_INDSTK,
              OTD_UNDRLYNG,
              OTD_EXPRY_DT,
              OTD_EXER_TYP,
              OTD_OPT_TYP,
              OTD_STRK_PRC,
              OTD_TRD_DT,
              OTD_SCHM_CODE,
              OTD_MIN_LOT_SIZE,
              OTD_CARRY_FWD_QTY,
              OTD_PRCS_FLG,
							OTD_ATS_FLG										/*** Ver 4.0 ***/
        FROM  OTD_OPTION_TRD_DTLS
				WHERE	OTD_XCHNG_CD = :c_xchng_cd;	/*** Ver 3.6 ***/

      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31265",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
        return;
      }
     
    	if(DEBUG_MSG_LVL_5)
    	{
      	fn_userlog(c_ServiceName,"Before Delete Data From OTD_OPTION_TRD_DTLS");  /*** Ver 7.3 ***/
    	}

			/*** Ver 3.3 Starts ***/ 
      EXEC SQL 
        DELETE FROM OTD_OPTION_TRD_DTLS
				WHERE	OTD_XCHNG_CD = :c_xchng_cd;	/*** Ver 3.6 ***/

      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31270",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
        return;
      }
      /*** Ver 3.3 Ends ***/

    	if(DEBUG_MSG_LVL_5)
    	{
      	fn_userlog(c_ServiceName,"Before Inserting Data Into OBC_OPTION_BRKR_CMPT_HSTRY");  /*** Ver 7.3 ***/
    	}

      EXEC SQL
        INSERT INTO OBC_OPTION_BRKR_CMPT_HSTRY
           (
						OBC_XCHNG_CD,				/*** Ver 3.6 ***/
            OBC_CLM_MTCH_ACCNT,
            OBC_TRD_TIME,
            OBC_EBA_TRD_REF,
            OBC_ORDR_RFRNC,
            OBC_BUY_LOT,
            OBC_SELL_LOT,
            OBC_BUY_SQR_LOT,
            OBC_SELL_SQR_LOT,
            OBC_CARRY_FWD_LOT,
            OBC_BUY_BRKG,
            OBC_SELL_BRKG,
            OBC_CARRY_FWD_BRKG,
            OBC_TOTAL_BRKG,
            OBC_TOTAL_QTY,
            OBC_TRD_LVL_BRKG,
						OBC_ATS_FLG												/** Ver 4.0 ***/
           )
        SELECT
							OBC_XCHNG_CD, /*** Ver 3.6 ***/
							OBC_CLM_MTCH_ACCNT,
              OBC_TRD_TIME,
              OBC_EBA_TRD_REF,
              OBC_ORDR_RFRNC,
              OBC_BUY_LOT,
              OBC_SELL_LOT,
              OBC_BUY_SQR_LOT,
              OBC_SELL_SQR_LOT,
              OBC_CARRY_FWD_LOT,
              OBC_BUY_BRKG,
              OBC_SELL_BRKG,
              OBC_CARRY_FWD_BRKG,
              OBC_TOTAL_BRKG,
              OBC_TOTAL_QTY,
              OBC_TRD_LVL_BRKG,
							OBC_ATS_FLG 													/**** Ver 4.0 ***/
        FROM  OBC_OPTION_BRKR_CMPT
				WHERE OBC_XCHNG_CD = :c_xchng_cd;	/*** Ver 3.6 ***/		

      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
         fn_errlog(c_ServiceName,"S31275",SQLMSG,c_errmsg);
         fn_exit ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
         strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
         fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/ 
         return;
      }

    	if(DEBUG_MSG_LVL_5)
    	{
      	fn_userlog(c_ServiceName,"Before Delete Data From OBC_OPTION_BRKR_CMPT");  /*** Ver 7.3 ***/
    	}	

			/*** Ver 3.3 Starts ***/
      EXEC SQL
        DELETE FROM OBC_OPTION_BRKR_CMPT
				WHERE OBC_XCHNG_CD = :c_xchng_cd;	/*** Ver 3.6 ***/		

      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31280",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
        return;
      }
			/*** Ver 3.3 ends ***/

    	if(DEBUG_MSG_LVL_5)
    	{
      	fn_userlog(c_ServiceName,"Before Inserting Data Into OBC_OPT_BRKR_SMRY_HSTRY");  /*** Ver 7.3 ***/
    	}

      EXEC SQL
        INSERT INTO OBC_OPT_BRKR_SMRY_HSTRY
           (
						OBC_XCHNG_CD,			/*** Ver 3.6 ***/
            OBC_CLM_MTCH_ACCNT,
            OBC_TRD_TIME,
            OBC_EBA_TRD_REF,
            OBC_ORDR_RFRNC,
            OBC_BUY_LOT,
            OBC_SELL_LOT,
            OBC_BUY_SQR_LOT,
            OBC_SELL_SQR_LOT,
            OBC_CARRY_FWD_LOT,
            OBC_BUY_BRKG,
            OBC_SELL_BRKG,
            OBC_CARRY_FWD_BRKG,
            OBC_TOTAL_BRKG,
            OBC_TOTAL_QTY,
            OBC_ABOVE_QTY,
            OBC_BELOW_QTY,
            OBC_INRANGE_QTY,
            OBC_INRANGE_CHARGES,
            OBC_ABOVE_CHARGES,
						OBC_ATS_FLG										/**** Ver 4.0 ***/
           )
        SELECT OBC_XCHNG_CD,			/*** Ver 3.6 ***/
							OBC_CLM_MTCH_ACCNT,
              OBC_TRD_TIME,
              OBC_EBA_TRD_REF,
              OBC_ORDR_RFRNC,
              OBC_BUY_LOT,
              OBC_SELL_LOT,
              OBC_BUY_SQR_LOT,
              OBC_SELL_SQR_LOT,
              OBC_CARRY_FWD_LOT,
              OBC_BUY_BRKG,
              OBC_SELL_BRKG,
              OBC_CARRY_FWD_BRKG,
              OBC_TOTAL_BRKG,
              OBC_TOTAL_QTY,
              OBC_ABOVE_QTY,
              OBC_BELOW_QTY,
              OBC_INRANGE_QTY,
              OBC_INRANGE_CHARGES,
              OBC_ABOVE_CHARGES,
							OBC_ATS_FLG												/*** Ver 4.0 ***/
              FROM OBC_OPTION_BRKR_CMPT_SMRY
							WHERE OBC_XCHNG_CD = :c_xchng_cd;	/*** Ver 3.6 ***/


      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
          fn_errlog(c_ServiceName,"S31285",SQLMSG,c_errmsg);
          fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
          strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
          return;
      }

			/*** Ver 3.3 Starts ***/

    	if(DEBUG_MSG_LVL_5)
    	{
      	fn_userlog(c_ServiceName,"Before Delete Data From OBC_OPTION_BRKR_CMPT_SMRY");  /*** Ver 7.3 ***/
    	}	

      EXEC SQL
        DELETE FROM OBC_OPTION_BRKR_CMPT_SMRY
				WHERE OBC_XCHNG_CD = :c_xchng_cd;	/*** Ver 3.6 ***/		

      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31290",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
        return;
      }
			/*** Ver 3.3 Ends ***/

      fn_userlog (c_ServiceName,"After inserting records into history for OPM process ");

      /***********      Ver 3.2 Ends    ********************/
			/***********      Ver 4.0 Starts *********************/

     if (strcmp(c_xchng_cd,"NFO") == 0)   /*** if condition added in Ver 8.2 ***/
     {

			EXEC SQL
					INSERT INTO FAT_FO_ATS_TRADES_NSE_HSTRY
									(
										FAT_XCHNG_TRD_RFRNC,
										FAT_ACT_TYP,
										FAT_UNDRLYNG,
										FAT_PRDCT_TYP,
									  FAT_INDSTK,
										FAT_EXRC_TYP,
										FAT_OPT_TYP,
										FAT_EXPRY_DT,
										FAT_STRIKE_PRC,
										FAT_CNTRCT_DTLS,
										FAT_BOOK_TYP,
										FAT_MKT_TYP,
										FAT_USER_ID,
										FAT_BRANCH_ID,
										FAT_ORDR_FLW,
										FAT_EXCTD_QTY,
										FAT_EXCTD_RT,
										FAT_PRO_CLI_IND,
										FAT_CLM_MTCH_ACCNT,
										FAT_PARTCIPANT_ID,
										FAT_SETT_DAYS,
										FAT_TRD_DT,
										FAT_MOD_TRD_DT,
										FAT_XCHNG_ACK,
										FAT_CP_ID,
										FAT_ENTRY_DT,
										FAT_CTCL_ID,
										FAT_ORDR_RFRNC,
										FAT_EBA_TRD_REF,
										FAT_MIN_LOT_SIZE,
										FAT_BRKG,
										FAT_ENTERED_BY,
										FAT_ENTERED_DT,	
									  FAT_MODIFIED_BY,
										FAT_MODIFIED_DT
								)
 								SELECT
										FAT_XCHNG_TRD_RFRNC,
										FAT_ACT_TYP,
										FAT_UNDRLYNG,
										FAT_PRDCT_TYP,
									  FAT_INDSTK,
										FAT_EXRC_TYP,
										FAT_OPT_TYP,
										FAT_EXPRY_DT,
										FAT_STRIKE_PRC,
										FAT_CNTRCT_DTLS,
										FAT_BOOK_TYP,
										FAT_MKT_TYP,
										FAT_USER_ID,
										FAT_BRANCH_ID,
										FAT_ORDR_FLW,
										FAT_EXCTD_QTY,
										FAT_EXCTD_RT,
										FAT_PRO_CLI_IND,
										FAT_CLM_MTCH_ACCNT,
										FAT_PARTCIPANT_ID,
										FAT_SETT_DAYS,
										FAT_TRD_DT,
										FAT_MOD_TRD_DT,
										FAT_XCHNG_ACK,
										FAT_CP_ID,
										FAT_ENTRY_DT,
										FAT_CTCL_ID,
										FAT_ORDR_RFRNC,
										FAT_EBA_TRD_REF,
										FAT_MIN_LOT_SIZE,
										FAT_BRKG,
										FAT_ENTERED_BY,
										FAT_ENTERED_DT,	
									  FAT_MODIFIED_BY,
										FAT_MODIFIED_DT
								FROM FAT_FO_ATS_TRADES_NSE;

      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
          fn_errlog(c_ServiceName,"S31295",SQLMSG,c_errmsg);
          fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
          strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
          return;
      }

      EXEC SQL
        DELETE FROM FAT_FO_ATS_TRADES_NSE;

      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31300",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/ 
        return;
      }
    }
			/**** Ver 5.3 Starts ***/
      fn_userlog (c_ServiceName,"Shifting order and trade details into history for I-Gain process");
         fn_userlog(c_ServiceName,"Anand Exchange Code Is :%s:",c_xchng_cd); /* Testing */ 

			EXEC SQL
				INSERT INTO IOD_IGAIN_ORDR_DTLS_HSTRY
										( IOD_XCHNG_CD,
											IOD_ORDR_DT,
											IOD_CLM_MTCH_ACCNT,
											IOD_ORDR_RFRNC,
											IOD_FRSH_COVER_FLG,
											IOD_BUY_SELL,
											IOD_ORDR_QTY,
											IOD_TOTAL_VAL,
											IOD_TOTAL_LOTS,
											IOD_TOTAL_TRADES,
											IOD_AVRG_TRD_PRC,
											IOD_ORDR_LVL_BRKG,
											IOD_TRD_LVL_BRKRG,
											IOD_PRFT_LOSS_FLG,
											IOD_ORD_ACK_NMBR,
											IOD_PROFIT_RATE,
                      IOD_SCHM_CD, /*** Ver 9.2 **/
                      IOD_VAR_BRKRG, /** Ver 9.2 **/
                      IOD_CNT_CHRGS, /** Ver 9.9 **/
                      IOD_SYS_CHRGS /** Ver 9.9 **/
										)
							 SELECT
                      IOD_XCHNG_CD,
                      IOD_ORDR_DT,
                      IOD_CLM_MTCH_ACCNT,
                      IOD_ORDR_RFRNC,
                      IOD_FRSH_COVER_FLG,
                      IOD_BUY_SELL,
                      IOD_ORDR_QTY,
                      IOD_TOTAL_VAL,
                      IOD_TOTAL_LOTS,
                      IOD_TOTAL_TRADES,
                      IOD_AVRG_TRD_PRC,
                      IOD_ORDR_LVL_BRKG,
                      IOD_TRD_LVL_BRKRG,
                      IOD_PRFT_LOSS_FLG,
											IOD_ORD_ACK_NMBR,
											IOD_PROFIT_RATE,
                      IOD_SCHM_CD, /** Ver 9.2 **/
                      IOD_VAR_BRKRG, /** Ver 9.2 **/
                      IOD_CNT_CHRGS, /** Ver 9.9 **/
                      IOD_SYS_CHRGS /** Ver 9.9 **/
							FROM IOD_IGAIN_ORDR_DTLS
             WHERE IOD_XCHNG_CD = :c_xchng_cd ;  /*** where clause added in Ver 8.2 ***/

      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31305",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
        return;
      }
      EXEC SQL
        DELETE FROM IOD_IGAIN_ORDR_DTLS
              WHERE IOD_XCHNG_CD = :c_xchng_cd ;  /*** where clause added in Ver 8.2 ***/   

      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31310",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
        return;
      }

    	if(DEBUG_MSG_LVL_5)
    	{
      	fn_userlog(c_ServiceName,"Before Inserting Data Into ITD_IGAIN_TRD_DTLS_HSTRY");  /*** Ver 7.3 ***/
    	}

        fn_userlog(c_ServiceName,"Anand Exchange Code Is :%s:",c_xchng_cd); /* Testing */

			EXEC SQL
				INSERT INTO  ITD_IGAIN_TRD_DTLS_HSTRY
								(
									ITD_XCHNG_CD,
									ITD_CLM_MTCH_ACCNT,
									ITD_PRDCT_TYP,
									ITD_UNDRLYNG,
									ITD_EXPRY_DT,
									ITD_EXER_TYP,
									ITD_OPT_TYP,
									ITD_STRK_PRC,
									ITD_TRD_DT,
									ITD_FRSH_ORDR_RFRNC,
									ITD_COVER_ORDR_RFRNC,
									ITD_FRSH_ORDR_TYP,
									ITD_COVER_ORDR_TYP,
									ITD_FRSH_ORDR_QTY,
									ITD_COVER_ORDR_QTY,
									ITD_BUY_VAL,
									ITD_SELL_VAL,
									ITD_PRFT_LOSS_VAL,
									ITD_PRFT_LOSS_FLG,
									ITD_SCHM_CODE,
									ITD_MIN_LOT_SIZE,
									ITD_PRCS_FLG,
									ITD_C2_ORDR_RFRNC,
									ITD_C2_ORDR_TYP,
									ITD_C2_ORDR_QTY,
									ITD_C2_TRD_VAL
								)
					SELECT	ITD_XCHNG_CD,
									ITD_CLM_MTCH_ACCNT,
									ITD_PRDCT_TYP,
									ITD_UNDRLYNG,
									ITD_EXPRY_DT,
									ITD_EXER_TYP,
									ITD_OPT_TYP,
									ITD_STRK_PRC,
									ITD_TRD_DT,
									ITD_FRSH_ORDR_RFRNC,
									ITD_COVER_ORDR_RFRNC,
									ITD_FRSH_ORDR_TYP,
									ITD_COVER_ORDR_TYP,
									ITD_FRSH_ORDR_QTY,
									ITD_COVER_ORDR_QTY,
									ITD_BUY_VAL,
									ITD_SELL_VAL,
									ITD_PRFT_LOSS_VAL,
									ITD_PRFT_LOSS_FLG,
									ITD_SCHM_CODE,
									ITD_MIN_LOT_SIZE,
									ITD_PRCS_FLG,
									ITD_C2_ORDR_RFRNC,
									ITD_C2_ORDR_TYP,
									ITD_C2_ORDR_QTY,
									ITD_C2_TRD_VAL
					FROM		ITD_IGAIN_TRD_DTLS
         WHERE    ITD_XCHNG_CD = :c_xchng_cd ;  /* where clause added in Ver 8.2 */

      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31315",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
        return;
      }
      EXEC SQL
        DELETE FROM ITD_IGAIN_TRD_DTLS
              WHERE ITD_XCHNG_CD = :c_xchng_cd ;  /* where clause added in Ver 1.8 */

      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31320",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
        return;
      }
      fn_userlog (c_ServiceName,"After Shifting details into history for I-Gain process");
										
			/**** Ver 5.3 Ends   ***/

      /***** Ver 5.9 Starts here ******/
	
      EXEC SQL
        INSERT INTO FMD_FO_MTM_DTLS_HSTRY
                (FMD_CLM_MTCH_ACCNT,
                 FMD_XCHNG_CD,
                 FMD_PRDCT_TYP,
                 FMD_INDSTK,
                 FMD_UNDRLYNG,
                 FMD_EXPRY_DT,
                 FMD_EXER_TYP,
                 FMD_OPT_TYP,
                 FMD_STRK_PRC,
                 FMD_ORDR_FLW,
                 FMD_CNTRCT_TAG,
                 FMD_CNTRCT_DESC,
                 FMD_STATUS,
                 FMD_LMT_RT,
                 FMD_TRGR_RT,
                 FMD_SEM_VAL,
                 FMD_SEQUENCE,
                 FMD_ROWID,
                 FMD_REMARKS,
                 FMD_SND_DATE,
                 FMD_MIN_TRGR_RT,
                 FMD_LOG_TIME,    
                 FMD_LTQ_RT,     
                 FMD_SVC_FLG,
								 FMD_PSTN_TYP,  						/** Ver 6.2 **/
                 FMD_TRG_SYSTM              /*** Ver 8.3 ***/  
                )
                (SELECT FMD_CLM_MTCH_ACCNT,
                 FMD_XCHNG_CD,
                 FMD_PRDCT_TYP,
                 FMD_INDSTK,
                 FMD_UNDRLYNG,
                 FMD_EXPRY_DT,
                 FMD_EXER_TYP,
                 FMD_OPT_TYP,
                 FMD_STRK_PRC,
                 FMD_ORDR_FLW,
                 FMD_CNTRCT_TAG,
                 FMD_CNTRCT_DESC,
                 FMD_STATUS,
                 FMD_LMT_RT,
                 FMD_TRGR_RT,
                 FMD_SEM_VAL,
                 FMD_SEQUENCE,
                 FMD_ROWID,
                 FMD_REMARKS,
                 FMD_SND_DATE,
                 FMD_MIN_TRGR_RT,
                 FMD_LOG_TIME,  
                 FMD_LTQ_RT,   
                 FMD_SVC_FLG, 
                 FMD_PSTN_TYP,             /** Ver 6.2 **/
                 FMD_TRG_SYSTM             /*** Ver 8.3 ***/
                 FROM FMD_FO_MTM_DTLS_LOG 
                WHERE FMD_XCHNG_CD =:c_xchng_cd
                );
      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31325",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
        return;
      }

    	if(DEBUG_MSG_LVL_5)
    	{
      	fn_userlog(c_ServiceName,"Before Delete Data From FMD_FO_MTM_DTLS");  /*** Ver 7.3 ***/
    	}		
 
      EXEC SQL
      DELETE FROM FMD_FO_MTM_DTLS WHERE FMD_XCHNG_CD=:c_xchng_cd;
      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31330",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
        return;
      }

      if(DEBUG_MSG_LVL_5)
      {
        fn_userlog(c_ServiceName,"Before Delete Data From FMD_FO_MTM_DTLS_LOG");  /*** Ver 7.3 ***/
      }

      EXEC SQL
      DELETE FROM FMD_FO_MTM_DTLS_LOG WHERE FMD_XCHNG_CD=:c_xchng_cd;
      if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31335",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
        return;
      }

    	if(DEBUG_MSG_LVL_5)
    	{
      	fn_userlog(c_ServiceName,"Before Inserting Data Into FTP_FO_TRGPRC_POSDTLS_LOG");  /*** Ver 7.3 ***/
    	}
   
      EXEC SQL
        INSERT INTO FTP_FO_TRGPRC_POSDTLS_LOG
                    (	FTP_CLM_MTCH_ACCNT,
											FTP_XCHNG_CD,
											FTP_PRDCT_TYP,
											FTP_INDSTK,
											FTP_UNDRLYNG,
											FTP_EXPRY_DT,
											FTP_STRK_PRC,
											FTP_OPT_TYP,
											FTP_EXER_TYP,
											FTP_CNTRCT_TAG,
											FTP_IBUY_QTY,
											FTP_IBUY_ORD_VAL,
											FTP_ISELL_QTY,
											FTP_ISELL_ORD_VAL,
											FTP_EXBUY_QTY,
											FTP_EXBUY_ORD_VAL,
											FTP_EXSELL_QTY,
											FTP_EXSELL_ORD_VAL,
											FTP_BUY_EXCTD_QTY,
											FTP_SELL_EXCTD_QTY,
											FTP_OPNPSTN_FLW,
											FTP_OPNPSTN_QTY,
											FTP_OPNPSTN_VAL,
											FTP_MTM_OPN_VAL,
											FTP_IMTM_OPN_VAL,
											FTP_UORDR_MRGN,
											FTP_UEXCTD_MRGN,
											FTP_FUP_TRD_MRGN,
											FTP_FUP_ADD_MRGN,
											FTP_FUP_UEXCTD_MRGN,
											FTP_FUP_UMTM_OPN_VAL,
											FTP_FUP_UOPNPSTN_VAL,
											FTP_FUP_UOPNPSTN_FLW,
											FTP_FUP_UOPNPSTN_QTY,
											FTP_FUP_USPREAD_MRGN,
											FTP_FUP_USPREAD_PNL,
											FTP_TRGR_RT,
											FTP_MIN_TRGR_RT,
											FTP_TRG_DT
                     )
                     (SELECT 	FTP_CLM_MTCH_ACCNT,
											FTP_XCHNG_CD,
											FTP_PRDCT_TYP,
											FTP_INDSTK,
											FTP_UNDRLYNG,
											FTP_EXPRY_DT,
											FTP_STRK_PRC,
											FTP_OPT_TYP,
											FTP_EXER_TYP,
											FTP_CNTRCT_TAG,
											FTP_IBUY_QTY,
											FTP_IBUY_ORD_VAL,
											FTP_ISELL_QTY,
											FTP_ISELL_ORD_VAL,
											FTP_EXBUY_QTY,
											FTP_EXBUY_ORD_VAL,
											FTP_EXSELL_QTY,
											FTP_EXSELL_ORD_VAL,
											FTP_BUY_EXCTD_QTY,
											FTP_SELL_EXCTD_QTY,
											FTP_OPNPSTN_FLW,
											FTP_OPNPSTN_QTY,
											FTP_OPNPSTN_VAL,
											FTP_MTM_OPN_VAL,
											FTP_IMTM_OPN_VAL,
											FTP_UORDR_MRGN,
											FTP_UEXCTD_MRGN,
											FTP_FUP_TRD_MRGN,
											FTP_FUP_ADD_MRGN,
											FTP_FUP_UEXCTD_MRGN,
											FTP_FUP_UMTM_OPN_VAL,
											FTP_FUP_UOPNPSTN_VAL,
											FTP_FUP_UOPNPSTN_FLW,
											FTP_FUP_UOPNPSTN_QTY,
											FTP_FUP_USPREAD_MRGN,
											FTP_FUP_USPREAD_PNL,
											FTP_TRGR_RT,
											FTP_MIN_TRGR_RT,
											FTP_TRG_DT
                  FROM FTP_FO_TRGPRC_POSDTLS 
                 WHERE FTP_XCHNG_CD=:c_xchng_cd
               );
    if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
        fn_errlog(c_ServiceName,"S31340",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
        return;
    }       

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Delete Data From FTP_FO_TRGPRC_POSDTLS");  /*** Ver 7.3 ***/
    }

    EXEC SQL
    DELETE FROM FTP_FO_TRGPRC_POSDTLS WHERE FTP_XCHNG_CD =:c_xchng_cd;
    if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog(c_ServiceName,"S31345",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      return;
    }
    /***** Ver 5.9 Ends here *******/


    /***** Ver 9.5 Starts Here *****/

      fn_userlog(c_ServiceName,"Before Inserting Data Into CHL_COLL_HAIRCUT_LOG");


  sprintf(insert_stmt.arr,"INSERT INTO CHL_COLL_HAIRCUT_LOG (CHL_RECORD_STRT,CHL_STCK_CD, \
          CHL_XCHNG_CD,CHL_SERIES,CHL_ISIN_NMBR,CHL_SECURITY_VAR,CHL_INDEX_VAR,CHL_VAR_MARGIN, \
          CHL_EXTRM_LOSS_RT,CHL_ADHOC_MRGN,CHL_APPLCBL_MRGN,CHL_TRD_DATE,CHL_RUN_NO,CHL_PRCSD_FLG ) \
          ( SELECT CHM_RECORD_STRT,CHM_STCK_CD,CHM_XCHNG_CD,CHM_SERIES,CHM_ISIN_NMBR,CHM_SECURITY_VAR, \
          CHM_INDEX_VAR,CHM_VAR_MARGIN,CHM_EXTRM_LOSS_RT,CHM_ADHOC_MRGN,CHM_APPLCBL_MRGN,CHM_TRD_DATE, \
          CHM_RUN_NO,CHM_PRCSD_FLG \
          FROM  CHM_COLL_HAIRCUT_MSTR A \
          WHERE EXISTS( SELECT 1 FROM \
          (SELECT C.rowid row_id, \
          rank() over ( partition by CHM_STCK_CD,CHM_SERIES order by CHM_RUN_NO desc) as rank \
          FROM   CHM_COLL_HAIRCUT_MSTR C \
          WHERE  CHM_XCHNG_CD = '%s') \
          WHERE  rank > 2 \
          AND    CHM_XCHNG_CD = '%s' \
          AND    A.rowid = row_id ))",c_xchng_cd,c_xchng_cd);

  SETLEN( insert_stmt );

  EXEC SQL PREPARE sql_stmt FROM :insert_stmt;
    if( SQLCODE != 0 )
    {
       fn_errlog(c_ServiceName,"S31350",SQLMSG,c_errmsg);
       fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
       strcpy(c_error_txt,"System Error. Contact System Support");
       fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
       return;
    }

  EXEC SQL EXECUTE sql_stmt;
    if( SQLCODE != 0 )
    {
       fn_errlog(c_ServiceName,"S31355",SQLMSG,c_errmsg);
       fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
       strcpy(c_error_txt,"System Error. Contact System Support");
       fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
       return;
    }

  i_record_cnt = sqlca.sqlerrd[2];
  fn_userlog(c_ServiceName,"i_record_cnt Is :%d:",i_record_cnt);
  if( i_record_cnt == 0 )
  {
    fn_userlog(c_ServiceName, "No records found " );
  }

  fn_userlog(c_ServiceName,"Before Delete Data From CHM_COLL_HAIRCUT_MSTR");

  MEMSET( insert_stmt );

  sprintf(insert_stmt.arr,"DELETE FROM CHM_COLL_HAIRCUT_MSTR A \
          WHERE EXISTS( SELECT 1 FROM  \
          ( SELECT C.rowid row_id,rank() \
          over (partition by CHM_STCK_CD,CHM_SERIES order by CHM_RUN_NO desc) as rank \
          FROM  CHM_COLL_HAIRCUT_MSTR C \
          WHERE   CHM_XCHNG_CD = '%s') \
          WHERE rank > 2 \
          AND   CHM_XCHNG_CD = '%s' \
          AND   A.rowid = row_id )",c_xchng_cd,c_xchng_cd);

  SETLEN( insert_stmt );

  EXEC SQL PREPARE sql_stmt FROM :insert_stmt;

    if( SQLCODE != 0 )
    {
       fn_errlog(c_ServiceName,"S31360",SQLMSG,c_errmsg);
       fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
       strcpy(c_error_txt,"System Error. Contact System Support");
       fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
       return;
    }

  EXEC SQL EXECUTE sql_stmt;

    if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
       fn_errlog(c_ServiceName,"S31365",SQLMSG,c_errmsg);
       fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
       strcpy(c_error_txt,"System Error. Contact System Support");
       fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
       return;
    }

  i_record_cnt = sqlca.sqlerrd[2];
  fn_userlog(c_ServiceName,"i_record_cnt Is :%d:",i_record_cnt);
  if( i_record_cnt == 0 )
  {
    fn_userlog(c_ServiceName, "No records found " );
  }
    fn_userlog(c_ServiceName, "After Delete from CHM_COLL_HAIRCUT_MSTR");

    /***** Ver 9.5 Ends Here *****/
    
    /*** Ver 6.5 Starts Here ****/
  
      fn_userlog(c_ServiceName,"Anand Exchange Code Is :%s:",c_xchng_cd); /* Testing */

    EXEC SQL
      DELETE FROM FTO_FO_TRAIL_ORD
            WHERE FTO_XCHNG_CD = :c_xchng_cd; /* where clause added in Ver 8.2 */
    if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog(c_ServiceName,"S31370",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      return;
    } 
    /*** Ver 6.5 Ends Here *****/

		 /**********       Ver 4.0 Ends ************************/	
		 /******* Ver 6.1 Starts **********/
    fn_userlog(c_ServiceName,"Before Function call for del Fbl records");
    i_ret_val=fn_del_fbl(c_xchng_cd);

    if(i_ret_val !=0 )
    {
      fn_errlog(c_ServiceName,"S31375","Error in function fn_del_fbl",c_errmsg);
		  fn_exit ( c_ServiceName, i_trnsctn, "Unable to commit transaction- Contact system support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      return;
    }
    fn_userlog(c_ServiceName,"After Function call for del Fbl records");
		/******** Ver 6.1 Ends *******/
    /*****Ver 10.9 start ********/
    EXEC SQL
        INSERT INTO FTM_FO_TYPE1MTM_MRGNRPT_HSTR
                    ( 
                      FTM_REPORT_NO,
                      FTM_CLM_MTCH_ACCNT,
                      FTM_XCHNG_CD,
                      FTM_INDSTK,
                      FTM_UNDRLYNG,
                      FTM_RPRT_TM_STMP,
                      FTM_EBA_EXPR_MRGN_REQD,
                      FTM_EBA_EXPR_MRGN_BLKD,
                      FTM_SPAN_MRGN_REQD,
                      FTM_SPAN_MRGN_BLKD
                     )
                     (SELECT FTM_REPORT_NO,
                      FTM_CLM_MTCH_ACCNT,
                      FTM_XCHNG_CD,
                      FTM_INDSTK,
                      FTM_UNDRLYNG,
                      FTM_RPRT_TM_STMP,
                      FTM_EBA_EXPR_MRGN_REQD,
                      FTM_EBA_EXPR_MRGN_BLKD,
                      FTM_SPAN_MRGN_REQD,
                      FTM_SPAN_MRGN_BLKD
                  FROM FTM_FO_TYPE1MTM_MRGNRPT
                 WHERE trunc(FTM_RPRT_TM_STMP) <trunc(sysdate-3)
               );
        if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
        {
          fn_errlog(c_ServiceName,"S31380",SQLMSG,c_errmsg);
          fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
          strcpy(c_error_txt,"System Error. Contact System Support");
          fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
          return;
        }
        if(DEBUG_MSG_LVL_5)
        {
         fn_userlog(c_ServiceName,"Before Delete Data From FTM_FO_TYPE1MTM_MRGNRPT");  
        }
        EXEC SQL 
          DELETE FROM FTM_FO_TYPE1MTM_MRGNRPT
          WHERE trunc(FTM_RPRT_TM_STMP)<trunc(sysdate-3);
       if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
       {
        fn_errlog(c_ServiceName,"S31385",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        strcpy(c_error_txt,"System Error. Contact System Support");
        fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
        return;
       }   
       /*****Ver 10.9 end************/
     /***  Ver 6.9 Starts ***/

    EXEC SQL
      INSERT INTO AUDIT_PROG_RUNSTTS
                ( APR_PROG_NAME,
                  APR_TIME,
                  APR_SUCC_FLG,
                  APR_TRD_DT,
                  APR_XCHNG_CD
                )
            VALUES
                (
                  :c_ServiceName,
                  sysdate,
                  'P',
                  :c_date,
                  :c_xchng_cd
                );

    if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    {
      fn_errlog(c_ServiceName,"S31390",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      return;
    }

    /***  Ver 6.9 Ends  ***/

		/******** Ver 7.7 starts here *************/

      fn_userlog(c_ServiceName,"Anand Exchange Code Is :%s:",c_xchng_cd); /* Testing */

    EXEC SQL
      SELECT MAX(FBC_TRD_DT)
      INTO   :c_max_dt
      FROM   fbc_fo_brnch_cal
	/*		WHERE FBC_XCHNG_CD = 'NFO'  Commented in Ver 8.2 and replaced with bind variable */
    WHERE   FBC_XCHNG_CD = :c_xchng_cd /* added in Ver 8.2 */
      AND  	FBC_TRD_DT < :c_date;

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31395",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,
      "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      return;
    }

    EXEC SQL
      SELECT TO_CHAR(to_date(:c_date),'MM') - TO_CHAR(to_date(:c_max_dt),'MM')
      INTO :i_date_diff
      FROM DUAL;

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31400",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,
      "System error - Contact System support",'Y');
      strcpy(c_error_txt,"System Error. Contact System Support");
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      return;
    }

    if(DEBUG_MSG_LVL_5)
    {
      fn_userlog(c_ServiceName,"Before Deleting Data from FO_ERRQ_REPORT");
    }

    if( i_date_diff > 0 )
    {
      EXEC SQL
        DELETE FROM FO_ERRQ_REPORT
        WHERE trunc(FER_TIME) <= :c_max_dt ;

      if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND) )
      {
         fn_errlog(c_ServiceName,"S31405",SQLMSG,c_errmsg);
         fn_exit ( c_ServiceName, i_trnsctn,
                 "System error - Contact System support",'Y');
         strcpy(c_error_txt,"System Error. Contact System Support");
         fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
         return;
      }

      if(DEBUG_MSG_LVL_5)
      {
        fn_userlog(c_ServiceName,"After Deleting Data from FO_ERRQ_REPORT");
      }
    }
    /******** Ver 7.7 ends here ***************/


     if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
     {
       fn_errlog(c_ServiceName,"S31410",SQLMSG,c_errmsg);
       fn_exit ( c_ServiceName, i_trnsctn,
                     "Unable to commit transaction- Contact system support",'Y');
       strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
       fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/
       return;
     }

     /*** ver 8.4 started ***/
     if (strcmp(c_xchng_cd,"NFO") == 0 )
     {
       sprintf(c_cmd_ln,"nohup bat_cnv_nrml2spn %s %s NA 3 NA K &",c_xchng_cd,c_xchng_cd);
       i_ch_val = system(c_cmd_ln);
       if (i_ch_val == -1 )
       {
          fn_errlog( c_ServiceName, "S31415", LIBMSG, c_err_msg );
          return;
       }
     }
     /*** ver 8.4 ended ***/

  } /* rqst_typ == HOUSE_KEEP_ORDER  */
  else
  {
    fn_errlog(c_ServiceName,"S31420","Invalid Request Type", c_errmsg );
    fn_exit( c_ServiceName, i_trnsctn, "*** Invalid Request Type ***", 'N' );
    strcpy(c_error_txt,"System Error. Contact System Support");  /*** Ver 4.3 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 4.3 ***/ 
    return;
  }

  fn_exit ( c_ServiceName, i_trnsctn, 
                    "*** House Keeping Process Completed ****",'N');

	/** Ver 5.4 start   **/
	i_ret_val = fn_del_fbd(c_xchng_cd);    /*** c_xchng_cd parameter added in Ver 8.2 ***/

	if(i_ret_val!=0)
	{
		fn_errlog(c_ServiceName,"S31425","Invalid Request Type", c_errmsg );
	  strcpy(c_error_txt,"System Error. Contact System Support"); 
		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
		return ;
	}
	/** Ver 5.4 end **/


  return;
}  


void fn_exit( char *c_ServiceName, 
              int i_trnsctn, 
              char* c_err_msg, 
              char c_mem_flg )
{
    fn_bat_pst_msg ( c_ServiceName, c_err_msg, c_tag );
    if( c_mem_flg == 'Y' )
    {
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    }
    return;
}

int fn_bat_init ( int argc, char *argv[] ) 
{
  fn_var = BAT_HOUSE_KEEP;

  if ( argc != 7 )   /* ver 1.2 -- from 6 to 7   */
  {
    fn_userlog ( c_ServiceName,
   "Usage : %s <Tag> <Exchange Code> <Pipe id> <Housekeep Date> <Rqst Typ>", argv[0] );
    return -1;
  }

  return 0;
}

void fn_bat_term (  int argc, char *argv[])
{
   return ;
}

int fn_prcs_trg ( char *c_pgm_nm, int i_trg_typ )
{
  return 0;
}

void fn_prcs_cntrct( char *c_ServiceName, 
                     char *c_errmsg, 
                     char *c_xchng_cd, 
                     char *c_date,
                     char *c_undrlyng )
{
  int i_rec_cnt = 0;
  int i_trnsctn=0;
  int i_fod_cnt=0;  /*** Ver 6.9 ***/
 
	/*** Commented in Ver 5.5 ***
  EXEC SQL
    SELECT count(rowid)					*** Ver 4.0 '*' changed to 'rowid' ** 
    INTO   :i_rec_cnt
    FROM   fcm_fo_cntrct_mstr
    WHERE  fcm_expry_dt < DECODE(:exp_dt_prs,'N',(fcm_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND    TRIM(fcm_undrlyng) = TRIM(DECODE(:und_prs,'N',fcm_undrlyng,:c_undrlyng))
    AND    fcm_xchng_cd = :c_xchng_cd;

		***/

		/*** Ver 5.5 Starts ***/

  EXEC SQL
    SELECT count(rowid)
    INTO   :i_rec_cnt
    FROM   ftq_fo_trd_qt
    WHERE  ftq_expry_dt < DECODE(:exp_dt_prs,'N',(ftq_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND    TRIM(ftq_undrlyng) = TRIM(DECODE(:und_prs,'N',ftq_undrlyng,:c_undrlyng))
    AND    ftq_xchng_cd = :c_xchng_cd;

  /*** Ver 5.5 Ends   ***/

  if ( SQLCODE != 0 )  
  {
    fn_errlog(c_ServiceName,"S31430",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                   "Unable to count the No. of Records in Contract Master",'Y');
    return;
  }
    
  if( i_rec_cnt == 0 )
  {
    fn_exit( c_ServiceName, i_trnsctn, "No Data Found To Update History", 'Y' );
    return;
  }
  else
  {
    sprintf( c_errmsg, "No. of Contract updating in History Table :%ld:", 
                        i_rec_cnt );
    fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
  }

  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31435",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,
                 "Unable to start transaction - Contact system support", 'N');
    return;
  }
	
	/*** Commented in Ver 5.5 ***

  EXEC SQL
    INSERT INTO fcm_fo_cntrct_mstr_hstr
    (
      fcm_eba_cntrct_id,
      fcm_xchng_cd,
      fcm_prdct_typ,
      fcm_indstk,
      fcm_undrlyng,
      fcm_expry_dt, 
      fcm_exer_typ,
      fcm_opt_typ,
      fcm_strk_prc,
      fcm_lot_sz,
      fcm_multplr,
      fcm_act_stts,
      fcm_qt_trdng_flg,
      fcm_tck_sz,
      fcm_token_no,
      fcm_ca_lvl,
      fcm_cls_prc,
      fcm_cls_prc_dt,
      fcm_mrkt_typ,      * Ver 1.9 *
			fcm_rollover_flag  * Ver 4.4 *
    )
    (
      SELECT  fcm_eba_cntrct_id,
              fcm_xchng_cd,
              fcm_prdct_typ,
              fcm_indstk,
              fcm_undrlyng,
              fcm_expry_dt, 
              fcm_exer_typ,
              fcm_opt_typ,
              fcm_strk_prc,
              fcm_lot_sz,
              fcm_multplr,
              fcm_act_stts,
              fcm_qt_trdng_flg,
              fcm_tck_sz,
              fcm_token_no,
              fcm_ca_lvl,
              fcm_cls_prc,
              fcm_cls_prc_dt,
              NVL( fcm_mrkt_typ, 'N' ),       * ver 1.9 *
							NVL( fcm_rollover_flag,'Q')			* Ver 4.4 *
      FROM    fcm_fo_cntrct_mstr
      WHERE   fcm_expry_dt < DECODE(:exp_dt_prs,'N',(fcm_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
      AND     TRIM(fcm_undrlyng) = TRIM(DECODE(:und_prs,'N',fcm_undrlyng,:c_undrlyng)) 
      AND     fcm_xchng_cd = :c_xchng_cd
    );

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31440",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      return;
    }

		***/

		/*** Ver 5.5 Starts ***/

		if(DEBUG_MSG_LVL_0)
    {
			fn_userlog(c_ServiceName,"Before Insert Into FTQ History.");
		}

		EXEC SQL
    INSERT INTO ftq_fo_trd_qt_hstr
    (
      ftq_eba_cntrct_id,
      ftq_xchng_cd,
      ftq_prdct_typ,
      ftq_indstk,
      ftq_undrlyng,
      ftq_expry_dt,
      ftq_exer_typ,
      ftq_opt_typ,
      ftq_strk_prc,
      ftq_min_lot_qty,
      ftq_multplr,
      ftq_act_stts,
      ftq_qt_trdng_flg,
      ftq_tck_sz,
      ftq_token_no,
      ftq_ca_lvl,
      ftq_cls_prc,
      ftq_cls_prc_dt,
      ftq_mrkt_typ,
      ftq_rollover_flag,
      FTQ_SETLMNT_FLG,          /*** added in Ver 8.0 ***/
      FTQ_DLVRY_POS_ALLWD,       /*** added in Ver 8.0 ***/
      FTQ_SPD_TOKEN2,          /*** ver 9.1 ***/
      FTQ_EXPRY_DT2,           /*** ver 9.1 ***/
      FTQ_ROLLOVER_SPRD_ALLWD_FLG,       /*** ver 9.1 ***/
        FTQ_OPLOW_PRICEDIFF, /*** ver 9.1 ***/
        FTQ_OPHIGH_PRICEDIFF, /*** ver 9.1 ***/
        FTQ_ELIGIBILITY, /*** ver 9.1 ***/
        FTQ_BUY_ALLWD,    /*** ver 10.6 ***/ 
        FTQ_SELL_ALLWD   /*** ver 10.6 ***/
     )
    (
      SELECT  ftq_eba_cntrct_id,
              ftq_xchng_cd,
              ftq_prdct_typ,
              ftq_indstk,
              ftq_undrlyng,
              ftq_expry_dt,
              ftq_exer_typ,
              ftq_opt_typ,
              ftq_strk_prc,
              ftq_min_lot_qty,
              ftq_multplr,
              ftq_act_stts,
              ftq_qt_trdng_flg,
              ftq_tck_sz,
              ftq_token_no,
              ftq_ca_lvl,
              ftq_cls_prc,
              ftq_cls_prc_dt,
              NVL( ftq_mrkt_typ, 'N' ),
              NVL( ftq_rollover_flag,'Q'),
              NVL( FTQ_SETLMNT_FLG,'C'),               /*** added in Ver 8.0 ***/
              NVL(FTQ_DLVRY_POS_ALLWD,'Y'),             /*** added in Ver 8.0 ***/
              FTQ_SPD_TOKEN2,          /*** ver 9.1 ***/
              FTQ_EXPRY_DT2,           /*** ver 9.1 ***/
              NVL(FTQ_ROLLOVER_SPRD_ALLWD_FLG,'Y'),       /*** ver 9.1 ***/
        FTQ_OPLOW_PRICEDIFF, /*** ver 9.1 ***/
        FTQ_OPHIGH_PRICEDIFF, /*** ver 9.1 ***/
        FTQ_ELIGIBILITY, /*** ver 9.1 ***/
        FTQ_BUY_ALLWD,  /*** ver 10.6 ***/   
        FTQ_SELL_ALLWD  /*** ver 10.6 ***/
      FROM    ftq_fo_trd_qt
      WHERE   ftq_expry_dt < DECODE(:exp_dt_prs,'N',(ftq_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
      AND     TRIM(ftq_undrlyng) = TRIM(DECODE(:und_prs,'N',ftq_undrlyng,:c_undrlyng))
      AND     ftq_xchng_cd = :c_xchng_cd
    );

		if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31445",SQLMSG,c_errmsg);
      fn_exit  ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
      return;
    }

		if(DEBUG_MSG_LVL_0)
		{
    	fn_userlog(c_ServiceName,"After Insert Into FTQ History.");
		}

    /*** Ver 5.5 Ends ***/

		/*** Commented in Ver 5.5 ***

    EXEC SQL
      DELETE  fcm_fo_cntrct_mstr
      WHERE   fcm_expry_dt < DECODE(:exp_dt_prs,'N',(fcm_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
      AND     TRIM(fcm_undrlyng) = TRIM(DECODE(:und_prs,'N',fcm_undrlyng,:c_undrlyng))
      AND     fcm_xchng_cd = :c_xchng_cd; 

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31450",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      return;
    }

		** Ver 4.4 Starts **

		fn_userlog(c_ServiceName,"Before Enabling Roll Over Flag For Near Month.");

    EXEC SQL
       UPDATE FCM_FO_CNTRCT_MSTR 
       SET    FCM_ROLLOVER_FLAG = 'T'
       WHERE  FCM_PRDCT_TYP     = 'F'
       AND    FCM_XCHNG_CD  = 'NFO'  
       AND    FCM_EXPRY_DT = ( SELECT MIN(FCM_EXPRY_DT)
                               FROM   FCM_FO_CNTRCT_MSTR 
                               WHERE  FCM_UNDRLYNG  ='NIFTY' 
                               AND    FCM_PRDCT_TYP = 'F'
                               AND    FCM_XCHNG_CD  = 'NFO'
                              );

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31455",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
      return;
    }
  
		fn_userlog(c_ServiceName,"After Enabling Roll Over Flag For Near Month.");

    ** Ver 4.4 Ends **

    ** Ver 5.1 Starts **

    fn_userlog(c_ServiceName,"Before Enabling Roll Over Flag For Near Month of INDIA VIX.");

    EXEC SQL
       UPDATE FCM_FO_CNTRCT_MSTR
       SET    FCM_ROLLOVER_FLAG = 'T'
       WHERE  FCM_PRDCT_TYP     = 'F'
       AND    FCM_XCHNG_CD  = 'NFO'
       AND    FCM_EXPRY_DT = ( SELECT MIN(FCM_EXPRY_DT)
                               FROM   FCM_FO_CNTRCT_MSTR
                               WHERE  FCM_UNDRLYNG  ='INDVIX'
                               AND    FCM_PRDCT_TYP = 'F'
                               AND    FCM_XCHNG_CD  = 'NFO'
                              )
       AND   FCM_UNDRLYNG  ='INDVIX';

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31460",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
      return;
    }

    fn_userlog(c_ServiceName,"After Enabling Roll Over Flag For Near Month of INDIA VIX.");

    ** Ver 5.1 Ends **
		

		*** Ver 5.5 Comment Ends ***/

    if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
    {
      fn_errlog(c_ServiceName,"S31465",LIBMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                 "Unable to commit transaction- Contact system support",'Y');
      return;
    }

    /*** Ver 6.9 Starts ***/

   i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
   if ( i_trnsctn == -1 )
   {
    fn_errlog(c_ServiceName,"S31470",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, "Unable to start transaction - Contact system support", 'N');
    return;
   }

   EXEC SQL
    SELECT count(rowid)
    INTO   :i_fod_cnt
    FROM   fod_fo_ordr_dtls
    WHERE  fod_expry_dt < DECODE(:exp_dt_prs,'N',(fod_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND    TRIM(fod_undrlyng) = TRIM(DECODE(:und_prs,'N',fod_undrlyng,:c_undrlyng))
    AND    fod_xchng_cd = :c_xchng_cd;

    if ( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31475",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, "Unable to count the No. of Records in Order Details with expired contracts",'Y');
      return;
    }

    fn_userlog(c_ServiceName,"ISEC Old Expiry Order Count :%d:",i_fod_cnt);

    if (i_fod_cnt != 0 )
    {
      fn_userlog(c_ServiceName,"ISEC Before Invalid Order FXB_FO_XCHNG_BOOK_HSTRY INSERT.");
         fn_userlog(c_ServiceName,"Anand Exchange Code Is :%s:",c_xchng_cd); /* Testing */

      EXEC SQL
        INSERT INTO fxb_fo_xchng_book_hstry
        (
          fxb_xchng_cd,
          fxb_ordr_rfrnc,
          fxb_pipe_id,
          fxb_mod_trd_dt,
          fxb_ordr_sqnc,
          fxb_lmt_mrkt_sl_flg,
          fxb_dsclsd_qty,
          fxb_ordr_tot_qty,
          fxb_lmt_rt,
          fxb_stp_lss_tgr,
          fxb_mdfctn_cntr,
          fxb_ordr_valid_dt,
          fxb_ordr_type,
          fxb_sprd_ord_ind,
          fxb_rqst_typ,
          fxb_quote,
          fxb_qt_tm,
          fxb_rqst_tm,
          fxb_frwd_tm,
          fxb_plcd_stts,
          fxb_rms_prcsd_flg,
          fxb_ors_msg_typ,
          fxb_ack_tm,
          fxb_xchng_rmrks,
          fxb_ex_ordr_typ,
          fxb_xchng_cncld_qty,
          fxb_spl_flag,
          fxb_jiffy,
          fxb_mrkt_typ,
          fxb_stream_no,
          fxb_spn_flg,
          fxb_ip,
          fxb_init_sltp_rt,
          fxb_init_lmt_rt,
          fxb_ltp_rt,
          fxb_trail_amt,
          fxb_lmt_offset,
          fxb_trl_upd_cond_val,
          fxb_prcimpv_flg,
          fxb_incrmnt_prc,
          FXB_LST_ACT_REF, /*** Ver 8.7 ***/
          FXB_SSSN_ID      /*** Ver 10.8 ***/
        )
        (
          SELECT  fxb_fo_xchng_book.fxb_xchng_cd,
                  fxb_fo_xchng_book.fxb_ordr_rfrnc,
                  fxb_fo_xchng_book.fxb_pipe_id,
                  fxb_fo_xchng_book.fxb_mod_trd_dt,
                  fxb_fo_xchng_book.fxb_ordr_sqnc,
                  fxb_fo_xchng_book.fxb_lmt_mrkt_sl_flg,
                  fxb_fo_xchng_book.fxb_dsclsd_qty,
                  fxb_fo_xchng_book.fxb_ordr_tot_qty,
                  fxb_fo_xchng_book.fxb_lmt_rt,
                  fxb_fo_xchng_book.fxb_stp_lss_tgr,
                  fxb_fo_xchng_book.fxb_mdfctn_cntr,
                  fxb_fo_xchng_book.fxb_ordr_valid_dt,
                  fxb_fo_xchng_book.fxb_ordr_type,
                  fxb_fo_xchng_book.fxb_sprd_ord_ind,
                  fxb_fo_xchng_book.fxb_rqst_typ,
                  fxb_fo_xchng_book.fxb_quote,
                  fxb_fo_xchng_book.fxb_qt_tm,
                  fxb_fo_xchng_book.fxb_rqst_tm,
                  fxb_fo_xchng_book.fxb_frwd_tm,
                  fxb_fo_xchng_book.fxb_plcd_stts,
                  fxb_fo_xchng_book.fxb_rms_prcsd_flg,
                  fxb_fo_xchng_book.fxb_ors_msg_typ,
                  fxb_fo_xchng_book.fxb_ack_tm,
                  fxb_fo_xchng_book.fxb_xchng_rmrks,
                  fxb_fo_xchng_book.fxb_ex_ordr_typ,
                  fxb_fo_xchng_book.fxb_xchng_cncld_qty,
                  fxb_fo_xchng_book.fxb_spl_flag,
                  fxb_fo_xchng_book.fxb_jiffy,
                  NVL( fxb_fo_xchng_book.fxb_mrkt_typ, 'N' ),
                  fxb_fo_xchng_book.fxb_stream_no,
                  fxb_fo_xchng_book.fxb_spn_flg,
                  fxb_fo_xchng_book.fxb_ip,
                  fxb_fo_xchng_book.fxb_init_sltp_rt,
                  fxb_fo_xchng_book.fxb_init_lmt_rt,
                  fxb_fo_xchng_book.fxb_ltp_rt,
                  fxb_fo_xchng_book.fxb_trail_amt,
                  fxb_fo_xchng_book.fxb_lmt_offset,
                  fxb_fo_xchng_book.fxb_trl_upd_cond_val,
                  fxb_fo_xchng_book.fxb_prcimpv_flg,
                  fxb_fo_xchng_book.fxb_incrmnt_prc,
                  fxb_fo_xchng_book.FXB_LST_ACT_REF, /** Ver 8.7 **/
                  fxb_fo_xchng_book.FXB_SSSN_ID  /** Ver 10.8 **/
          FROM    fxb_fo_xchng_book
          WHERE   fxb_fo_xchng_book.fxb_ordr_rfrnc in ( select fod_ordr_rfrnc
                                                        from fod_fo_ordr_dtls
                                                      /*  where fod_xchng_cd ='NFO' Commented in Ver 8.2 */
                                                         where fod_xchng_cd = :c_xchng_cd  /* added in Ver 8.2 */
                                                         and  fod_expry_dt < DECODE(:exp_dt_prs,'N',(fod_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
                                                         AND  TRIM(fod_undrlyng) = TRIM(DECODE(:und_prs,'N',fod_undrlyng,:c_undrlyng))
                                                       )
        );

        if( SQLCODE != 0 )
        {
          fn_errlog(c_ServiceName,"S31480",SQLMSG,c_errmsg);
          fn_exit  ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
          return;
        }

       fn_userlog(c_ServiceName,"ISEC Before Invalid Order FXB_FO_XCHNG_BOOK DELETE.");

         fn_userlog(c_ServiceName,"Anand Exchange Code Is :%s:",c_xchng_cd); /* Testing */

        EXEC SQL
          DELETE FROM FXB_FO_XCHNG_BOOK
          WHERE fxb_ordr_rfrnc IN ( SELECT  FOD_ORDR_RFRNC
                                    FROM    FOD_FO_ORDR_DTLS
                                  /*  WHERE   FOD_XCHNG_CD ='NFO'  Commented in Ver 8.2 */
                                    WHERE   FOD_XCHNG_CD = :c_xchng_cd  /* added in Ver 8.2 */
                                    AND     FOD_EXPRY_DT < DECODE(:exp_dt_prs,'N',(FOD_EXPRY_DT+1),to_date(:c_date,'dd-Mon-yyyy'))
                                    AND     TRIM(fod_undrlyng) = TRIM(DECODE(:und_prs,'N',fod_undrlyng,:c_undrlyng))
                                  );

        if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
        {
          fn_errlog(c_ServiceName,"S31485",SQLMSG,c_errmsg);
          fn_exit ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
          return;
        }

      fn_userlog(c_ServiceName,"ISEC Before Invalid Order FOD_FO_ORDR_DTLS_HSTRY INSERT.");
         fn_userlog(c_ServiceName,"Anand Exchange Code Is :%s:",c_xchng_cd); /* Testing */

      EXEC SQL
      INSERT INTO fod_fo_ordr_dtls_hstry
      (
        fod_clm_mtch_accnt,
        fod_clnt_ctgry,
        fod_ordr_rfrnc,
        fod_pipe_id,
        fod_xchng_cd,
        fod_prdct_typ,
        fod_indstk,
        fod_undrlyng,
        fod_expry_dt,
        fod_exer_typ,
        fod_opt_typ,
        fod_strk_prc,
        fod_ordr_flw,
        fod_lmt_mrkt_sl_flg,
        fod_dsclsd_qty,
        fod_ordr_tot_qty,
        fod_lmt_rt,
        fod_stp_lss_tgr,
        fod_ordr_type,
        fod_ordr_valid_dt,
        fod_trd_dt,
        fod_ordr_stts,
        fod_exec_qty,
        fod_cncl_qty,
        fod_exprd_qty,
        fod_sprd_ordr_ref,
        fod_mdfctn_cntr,
        fod_settlor,
        fod_ack_nmbr,
        fod_spl_flag,
        fod_ord_ack_tm,
        fod_lst_rqst_ack_tm,
        fod_pro_cli_ind,
        fod_exec_qty_day,
        fod_remarks,
        fod_channel,
        fod_bp_id,
        fod_ctcl_id,
        fod_usr_id,
        fod_mrkt_typ,
        fod_cse_id,
        fod_is_flg,
        fod_spn_flg,
        fod_sltp_ordr_rfrnc,
        fod_amt_blckd,
        fod_lss_amt_blckd,
        fod_fc_flag,
        fod_diff_amt_blckd,
        fod_diff_lss_amt_blckd,
        fod_trd_val,
        fod_trd_brkg,
        fod_cntrctnt_nmbr,
        fod_source_flg,
        fod_eos_flg,
        fod_prcimpv_flg,
        fod_trail_amt,
        fod_lmt_offset,
        FOD_SETLMNT_FLG,     /*** Ver 8.0 ***/
				fod_ucc_cd					/*** Added in VER 11.2 ***/
      )
      (
        SELECT  fod_fo_ordr_dtls.fod_clm_mtch_accnt,
                fod_fo_ordr_dtls.fod_clnt_ctgry,
                fod_fo_ordr_dtls.fod_ordr_rfrnc,
                fod_fo_ordr_dtls.fod_pipe_id,
                fod_fo_ordr_dtls.fod_xchng_cd,
                fod_fo_ordr_dtls.fod_prdct_typ,
                fod_fo_ordr_dtls.fod_indstk,
                fod_fo_ordr_dtls.fod_undrlyng,
                fod_fo_ordr_dtls.fod_expry_dt,
                fod_fo_ordr_dtls.fod_exer_typ,
                fod_fo_ordr_dtls.fod_opt_typ,
                fod_fo_ordr_dtls.fod_strk_prc,
                fod_fo_ordr_dtls.fod_ordr_flw,
                fod_fo_ordr_dtls.fod_lmt_mrkt_sl_flg,
                fod_fo_ordr_dtls.fod_dsclsd_qty,
                fod_fo_ordr_dtls.fod_ordr_tot_qty,
                fod_fo_ordr_dtls.fod_lmt_rt,
                fod_fo_ordr_dtls.fod_stp_lss_tgr,
                fod_fo_ordr_dtls.fod_ordr_type,
                fod_fo_ordr_dtls.fod_ordr_valid_dt,
                fod_fo_ordr_dtls.fod_trd_dt,
                fod_fo_ordr_dtls.fod_ordr_stts,
                fod_fo_ordr_dtls.fod_exec_qty,
                fod_fo_ordr_dtls.fod_cncl_qty,
                fod_fo_ordr_dtls.fod_exprd_qty,
                fod_fo_ordr_dtls.fod_sprd_ordr_ref,
                fod_fo_ordr_dtls.fod_mdfctn_cntr,
                fod_fo_ordr_dtls.fod_settlor,
                fod_fo_ordr_dtls.fod_ack_nmbr,
                fod_fo_ordr_dtls.fod_spl_flag,
                fod_fo_ordr_dtls.fod_ord_ack_tm,
                fod_fo_ordr_dtls.fod_lst_rqst_ack_tm,
                fod_fo_ordr_dtls.fod_pro_cli_ind,
                fod_fo_ordr_dtls.fod_exec_qty_day,
                fod_fo_ordr_dtls.fod_remarks,
                fod_fo_ordr_dtls.fod_channel,
                fod_fo_ordr_dtls.fod_bp_id,
                fod_fo_ordr_dtls.fod_ctcl_id,
                fod_fo_ordr_dtls.fod_usr_id,
                NVL( fod_fo_ordr_dtls.fod_mrkt_typ, 'N' ),
                fod_fo_ordr_dtls.fod_cse_id,
                fod_fo_ordr_dtls.fod_is_flg,
                fod_fo_ordr_dtls.fod_spn_flg,
                fod_fo_ordr_dtls.fod_sltp_ordr_rfrnc,
                fod_fo_ordr_dtls.fod_amt_blckd,
                fod_fo_ordr_dtls.fod_lss_amt_blckd,
                fod_fo_ordr_dtls.fod_fc_flag,
                fod_fo_ordr_dtls.fod_diff_amt_blckd,
                fod_fo_ordr_dtls.fod_diff_lss_amt_blckd,
                fod_fo_ordr_dtls.fod_trd_val,
                fod_fo_ordr_dtls.fod_trd_brkg,
                fod_fo_ordr_dtls.fod_cntrctnt_nmbr,
                fod_fo_ordr_dtls.fod_source_flg,
                fod_fo_ordr_dtls.fod_eos_flg,
                fod_fo_ordr_dtls.fod_prcimpv_flg,
                fod_fo_ordr_dtls.fod_trail_amt,
                fod_fo_ordr_dtls.fod_lmt_offset,
                FOD_FO_ORDR_DTLS.FOD_SETLMNT_FLG,          /*** Ver 8.0 ***/
								fod_ucc_cd																 /*** Added in VER 11.2 ***/
        FROM    fod_fo_ordr_dtls
     /*   WHERE   fod_fo_ordr_dtls.fod_xchng_cd = 'NFO' Commented in Ver 8.2 */
      WHERE     fod_fo_ordr_dtls.fod_xchng_cd = :c_xchng_cd /* added in Ver 8.2 */  
        AND     fod_fo_ordr_dtls.fod_expry_dt < DECODE(:exp_dt_prs,'N',(fod_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
        AND     TRIM(fod_undrlyng) = TRIM(DECODE(:und_prs,'N',fod_undrlyng,:c_undrlyng))
    );

      if( SQLCODE != 0 )
      {
        fn_errlog(c_ServiceName,"S31490",SQLMSG,c_errmsg);
        fn_exit  ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
        return;
      }
    

   fn_userlog(c_ServiceName,"ISEC Before Invalid Order FOD_FO_ORDR_DTLS DELETE.");
      fn_userlog(c_ServiceName,"Anand Exchange Code Is :%s:",c_xchng_cd); /* Testing */
  
   /*** Below query taken inside if block in Ver 8.2 ***/

   EXEC SQL
    DELETE  FROM FOD_FO_ORDR_DTLS
  /*  WHERE   FOD_XCHNG_CD = 'NFO'  Commented in Ver 8.2 */
    WHERE   FOD_XCHNG_CD = :c_xchng_cd  /* added in Ver 8.2 */
    AND     FOD_EXPRY_DT < DECODE(:exp_dt_prs,'N',(FOD_EXPRY_DT+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND     TRIM(FOD_UNDRLYNG) = TRIM(DECODE(:und_prs,'N',FOD_UNDRLYNG,:c_undrlyng)) ;

   if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
   {
     fn_errlog(c_ServiceName,"S31495",SQLMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
     return;
   }
  }
    if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
    {
      fn_errlog(c_ServiceName,"S31500",LIBMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,
                 "Unable to commit transaction- Contact system support",'Y');
      return;
    }

    fn_userlog(c_ServiceName,"ISEC Invalid Order Processing End");
   /*** Ver 6.9 Ends ***/

}
void fn_prcs_futpos( char *c_ServiceName, 
                     char *c_errmsg, 
                     char *c_xchng_cd, 
                     char *c_date,
                     char *c_undrlyng )
{
  int i_rec_cnt = 0;
  int i_trnsctn=0;

    EXEC SQL
      SELECT count(rowid)						/*** Ver 4.0 '*' changed to 'rowid' **/ 
      INTO   :i_rec_cnt
      FROM   ffp_fo_futures_pstn
      WHERE  ffp_expry_dt < DECODE(:exp_dt_prs,'N',(ffp_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
      AND    TRIM(ffp_undrlyng) = TRIM(DECODE(:und_prs,'N',ffp_undrlyng,:c_undrlyng))
      AND    ffp_xchng_cd = :c_xchng_cd;

    if ( SQLCODE != 0 )  
    {
      fn_errlog(c_ServiceName,"S31505",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'N');
      return;
    }
    
    if( i_rec_cnt == 0 )
    {
      fn_exit( c_ServiceName, i_trnsctn, 
                   "No Data Found In Future Position To Update History", 'N' );
      return;
    }
    else
    {
      sprintf( c_errmsg, 
              "No. of Future Position updating in History Table :%ld:",
              i_rec_cnt );
      fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
    }

    i_trnsctn=0;
    i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
    if ( i_trnsctn == -1 )
    {
      fn_errlog(c_ServiceName,"S31510",LIBMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                    "Unable to start transaction - Contact system support",'N');
      return;
    }

    EXEC SQL
      INSERT INTO ffp_fo_futures_pstn_hstry
      (
          ffp_clm_mtch_accnt,
          ffp_xchng_cd,
          ffp_prdct_typ,
          ffp_indstk,
          ffp_undrlyng,
          ffp_expry_dt,
          ffp_exer_typ,
          ffp_cntrct_tag,
          ffp_ibuy_qty,
          ffp_ibuy_ord_val,
          ffp_isell_qty,
          ffp_isell_ord_val,
          ffp_exbuy_qty,
          ffp_exbuy_ord_val,
          ffp_exsell_qty,
          ffp_exsell_ord_val,
          ffp_buy_exctd_qty,
          ffp_sell_exctd_qty,
          ffp_opnpstn_flw,
          ffp_opnpstn_qty,
          ffp_opnpstn_val,
          ffp_mtm_opn_val,
          ffp_imtm_opn_val,
          FFP_TRG_PRC,   /** Ver 5.8 **/
          FFP_MIN_TRG_PRC, /** Ver 5.8 **/  
          FFP_EODMTM_DT,    /** Ver 8.6 **/
          FFP_DLVRY_MODE_FLAG,       /** Ver 10.3 **/
          FFP_DLVRY_OBLGAMT_BLCKD,   /** Ver 10.3 **/
          FFP_DLVRY_QTY_BLCKD,        /** Ver 10.3 **/
          FFP_AVG_PRC                /**  Ver 10.5 **/
    )
    (
      SELECT  ffp_clm_mtch_accnt,
              ffp_xchng_cd,
              ffp_prdct_typ,
              ffp_indstk,
              ffp_undrlyng,
              ffp_expry_dt,
              ffp_exer_typ,
              ffp_cntrct_tag,
              ffp_ibuy_qty,
              ffp_ibuy_ord_val,
              ffp_isell_qty,
              ffp_isell_ord_val,
              ffp_exbuy_qty,
              ffp_exbuy_ord_val,
              ffp_exsell_qty,
              ffp_exsell_ord_val,
              ffp_buy_exctd_qty,
              ffp_sell_exctd_qty,
              ffp_opnpstn_flw,
              ffp_opnpstn_qty,
              ffp_opnpstn_val,
              ffp_mtm_opn_val,
              ffp_imtm_opn_val,
              FFP_TRG_PRC,   /** Ver 5.8 **/
              FFP_MIN_TRG_PRC, /** Ver 5.8 **/
              FFP_EODMTM_DT,    /** Ver 8.6 **/
              FFP_DLVRY_MODE_FLAG,       /** Ver 10.3 **/
              FFP_DLVRY_OBLGAMT_BLCKD,   /** Ver 10.3 **/
              FFP_DLVRY_QTY_BLCKD,        /** Ver 10.3 **/
              FFP_AVG_PRC                /** Ver 10.5  **/
      FROM    ffp_fo_futures_pstn
      WHERE   ffp_expry_dt < DECODE(:exp_dt_prs,'N',(ffp_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
      AND     TRIM(ffp_undrlyng) = TRIM(DECODE(:und_prs,'N',ffp_undrlyng,:c_undrlyng))
      AND     ffp_xchng_cd  = :c_xchng_cd
    );

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31515",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      return;
    }
    
    EXEC SQL
      DELETE  ffp_fo_futures_pstn
      WHERE   ffp_expry_dt < DECODE(:exp_dt_prs,'N',(ffp_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
      AND     TRIM(ffp_undrlyng) = TRIM(DECODE(:und_prs,'N',ffp_undrlyng,:c_undrlyng))
      AND     ffp_xchng_cd  = :c_xchng_cd; 

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31520",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      return;
    }

    if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
    {
      fn_errlog(c_ServiceName,"S31525",LIBMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                    "Unable to commit transaction- Contact system support",'Y');
      return;
    }
}

void fn_prcs_optpos( char *c_ServiceName, 
                     char *c_errmsg, 
                     char *c_xchng_cd, 
                     char *c_date,
                     char *c_undrlyng )
{
  int i_rec_cnt = 0;
  int i_trnsctn=0;

  EXEC SQL
    SELECT count(rowid) 				/*** Ver 4.0 '*' changed to 'rowid' **/
    INTO   :i_rec_cnt
    FROM   fop_fo_options_pstn
    WHERE  fop_expry_dt < DECODE(:exp_dt_prs,'N',(fop_expry_dt+1) ,to_date(:c_date,'dd-Mon-yyyy'))
    AND    TRIM(fop_undrlyng) = TRIM(DECODE(:und_prs,'N',fop_undrlyng,:c_undrlyng))
    AND    fop_xchng_cd = :c_xchng_cd;

  if ( SQLCODE != 0 )  
  {
    fn_errlog(c_ServiceName,"S31530",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'N');
    return;
  }
    
  if( i_rec_cnt == 0 )
  {
    fn_exit( c_ServiceName, i_trnsctn,
                "No Data Found In Option Position To Update History", 'N' );
    return;
  }
  else
  {
    sprintf( c_errmsg, 
               "No. of Option Position updating in History Table :%ld:",
             i_rec_cnt );
    fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
  }

  i_trnsctn=0;
  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31535",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,
                  "Unable to start transaction - Contact system support",'N');
    return;
  }

  EXEC SQL
    INSERT INTO fop_fo_options_pstn_hstry
    (
      fop_clm_mtch_accnt,
      fop_xchng_cd,
      fop_prdct_typ,
      fop_indstk,
      fop_undrlyng,
      fop_expry_dt,
      fop_strk_prc,
      fop_exer_typ,
      fop_opt_typ,
      fop_ibuy_qty,
      fop_ibuy_ord_val,
      fop_isell_qty,
      fop_isell_ord_val,
      fop_exbuy_qty,
      fop_exbuy_ord_val,
      fop_exsell_qty,
      fop_exsell_ord_val,
      fop_buy_exctd_qty,
      fop_sell_exctd_qty,
      fop_opnpstn_flw,
      fop_opnpstn_qty,
      fop_opnpstn_val,
      fop_uordr_mrgn,
      fop_uexctd_mrgn,
      fop_exrc_qty,
      fop_dp_qty,
      fop_asgnd_qty,
      fop_ord_blkd_qty,
      fop_trd_blkd_qty,
      fop_mtm_flg,
      fop_iexrc_qty,
      fop_exexrc_qty,
      fop_trggr_prc,
      fop_idontexrc_qty,
      fop_exdontexrc_qty,
      fop_trd_dt,
      fop_min_trg_prc,  /** Ver 5.8 **/
			fop_udlvry_mrgn,  /** Ver 8.9 **/
      FOP_DLVRY_MODE_FLAG,      /** Ver 10.3 **/
      FOP_DLVRY_OBLGAMT_BLCKD,  /** Ver 10.3 **/
      FOP_DLVRY_QTY_BLCKD       /** Ver 10.3 **/
    )
    (
      SELECT  fop_clm_mtch_accnt,
              fop_xchng_cd,
              fop_prdct_typ,
              fop_indstk,
              fop_undrlyng,
              fop_expry_dt,
              fop_strk_prc,
              fop_exer_typ,
              fop_opt_typ,
              fop_ibuy_qty,
              fop_ibuy_ord_val,
              fop_isell_qty,
              fop_isell_ord_val,
              fop_exbuy_qty,
              fop_exbuy_ord_val,
              fop_exsell_qty,
              fop_exsell_ord_val,
              fop_buy_exctd_qty,
              fop_sell_exctd_qty,
              fop_opnpstn_flw,
              fop_opnpstn_qty,
              fop_opnpstn_val,
              fop_uordr_mrgn,
              fop_uexctd_mrgn,
              fop_exrc_qty,
              fop_dp_qty,
              fop_asgnd_qty,
              fop_ord_blkd_qty,
              fop_trd_blkd_qty,
              fop_mtm_flg,
              fop_iexrc_qty,
              fop_exexrc_qty,
              fop_trggr_prc,
              fop_idontexrc_qty,
              fop_exdontexrc_qty,
              fop_trd_dt,
              fop_min_trg_prc,  /** Ver 5.8 **/
							fop_udlvry_mrgn,  /** Ver 8.9 **/
              FOP_DLVRY_MODE_FLAG,      /** Ver 10.3 **/
              FOP_DLVRY_OBLGAMT_BLCKD,  /** Ver 10.3 **/
              FOP_DLVRY_QTY_BLCKD       /** Ver 10.3 **/
      FROM    fop_fo_options_pstn
      WHERE   fop_expry_dt < DECODE(:exp_dt_prs,'N',(fop_expry_dt+1) ,to_date(:c_date,'dd-Mon-yyyy'))
      AND     TRIM(fop_undrlyng) = TRIM(DECODE(:und_prs,'N',fop_undrlyng,:c_undrlyng))
      AND     fop_xchng_cd  = :c_xchng_cd
    );

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31540",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      return;
    }
    
    EXEC SQL
      DELETE  fop_fo_options_pstn
      WHERE   fop_expry_dt < DECODE(:exp_dt_prs,'N',(fop_expry_dt+1) ,to_date(:c_date,'dd-Mon-yyyy'))
      AND     TRIM(fop_undrlyng) = TRIM(DECODE(:und_prs,'N',fop_undrlyng,:c_undrlyng))
      AND     fop_xchng_cd  = :c_xchng_cd; 

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31545",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
      return;
    }

    if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
    {
      fn_errlog(c_ServiceName,"S31550",LIBMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn,
                  "Unable to commit transaction- Contact system support",'Y');
      return;
    }
    
}

void fn_prcs_futclsout( char *c_ServiceName, 
                        char *c_errmsg, 
                        char *c_xchng_cd, 
                        char *c_date,
                        char *c_undrlyng )
{
  int i_rec_cnt = 0;
  int i_trnsctn=0;

  EXEC SQL
    SELECT count(rowid)				/*** Ver 4.0 '*' changed to 'rowid' **/ 
    INTO   :i_rec_cnt
    FROM   fco_fo_fclsout
    WHERE  fco_expry_dt < DECODE(:exp_dt_prs,'N',(fco_expry_dt+1) ,to_date(:c_date,'dd-Mon-yyyy'))
    AND    TRIM(fco_undrlyng) = TRIM(DECODE(:und_prs,'N',fco_undrlyng,:c_undrlyng))
    AND    fco_xchng_cd = :c_xchng_cd;

  if ( SQLCODE != 0 )  
  {
    fn_errlog(c_ServiceName,"S31555",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'N');
    return;
  }
    
  if( i_rec_cnt == 0 )
  {
    fn_exit( c_ServiceName, i_trnsctn,
                     "No Data Found In Closeout To Update History", 'N' );
    return;
  }
  else
  {
    sprintf( c_errmsg, "No. of Closeout updating in History Table :%ld:",
                                                             i_rec_cnt );
    fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
  }

  i_trnsctn=0;
  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31560",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                  "Unable to start transaction - Contact system support",'N');
    return;
  }

  EXEC SQL
    INSERT INTO fco_fo_fclsout_hstry
    (
      fco_clm_mtch_accnt,
      fco_xchng_cd,
      fco_prdct_typ,
      fco_indstk,
      fco_undrlyng,
      fco_expry_dt,
      fco_exer_typ,
      fco_opt_typ,
      fco_strk_prc,
      fco_ordr_flw,
      fco_cls_rt,
      fco_cls_tm,
      fco_cls_qty,
      fco_brkg,
      fco_stt,
      fco_src_tx,
      fco_sebi_tt,
      fco_tran_chrg,
      fco_stamp_duty
    )
    (
      SELECT  fco_clm_mtch_accnt,
              fco_xchng_cd,
              fco_prdct_typ,
              fco_indstk,
              fco_undrlyng,
              fco_expry_dt,
              fco_exer_typ,
              fco_opt_typ,
              fco_strk_prc,
              fco_ordr_flw,
              fco_cls_rt,
              fco_cls_tm,
              fco_cls_qty,
              fco_brkg,
              fco_stt,
              fco_src_tx,
              fco_sebi_tt,
              fco_tran_chrg,
              fco_stamp_duty
      FROM    fco_fo_fclsout
      WHERE   fco_expry_dt < DECODE(:exp_dt_prs,'N',(fco_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
      AND     TRIM(fco_undrlyng) = TRIM(DECODE(:und_prs,'N',fco_undrlyng,:c_undrlyng))
      AND     fco_xchng_cd  = :c_xchng_cd
    );

  if( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName,"S31565",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
    return;
  }
    
  EXEC SQL
    DELETE  fco_fo_fclsout
    WHERE   fco_expry_dt < DECODE(:exp_dt_prs,'N',(fco_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND     TRIM(fco_undrlyng) = TRIM(DECODE(:und_prs,'N',fco_undrlyng,:c_undrlyng))
    AND     fco_xchng_cd  = :c_xchng_cd; 

  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S31570",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
    return;
  }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
  {
    fn_errlog(c_ServiceName,"S31575",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                "Unable to commit transaction- Contact system support",'Y');
    return;
  }
}

void fn_prcs_fvrtlist(  char *c_ServiceName, 
                        char *c_errmsg, 
                        char *c_xchng_cd, 
                        char *c_date,
                        char *c_undrlyng )
{
  int i_rec_cnt = 0;
  int i_trnsctn=0;

  EXEC SQL
    SELECT count(rowid)				/*** Ver 4.0 '*' changed to 'rowid' **/ 
    INTO   :i_rec_cnt
    FROM   ffc_fo_fvrt_cntrct_lst
    WHERE  ffc_expry_dt < DECODE(:exp_dt_prs,'N',(ffc_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND    TRIM(ffc_undrlyng) = TRIM(DECODE(:und_prs,'N',ffc_undrlyng,:c_undrlyng))
    AND    ffc_xchng_cd = :c_xchng_cd;

  if ( SQLCODE != 0 )  
  {
    fn_errlog(c_ServiceName,"S31580",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'N');
    return;
  }
    
  if( i_rec_cnt == 0 )
  {
    fn_errlog(c_ServiceName,"S31585",LIBMSG,c_errmsg);
    fn_exit( c_ServiceName, i_trnsctn, 
                "No Data Found In Favorites To Update History", 'N' );
    return;
  }
  else
  {
    sprintf( c_errmsg, "No. of Favorites updating in History Table :%ld:",
                                                                 i_rec_cnt );
    fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
  }

  i_trnsctn=0;
  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31590",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
           "Unable to start transaction - Contact system support",'N');
    return;
  }

  EXEC SQL
    DELETE  ffc_fo_fvrt_cntrct_lst
    WHERE   ffc_xchng_cd = :c_xchng_cd
    AND     ffc_expry_dt < DECODE(:exp_dt_prs,'N',(ffc_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND     TRIM(ffc_undrlyng) = TRIM(DECODE(:und_prs,'N',ffc_undrlyng,:c_undrlyng));

  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S31595",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
    return;
  }
  
  if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
  {
    fn_errlog(c_ServiceName,"S31600",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                   "Unable to commit transaction- Contact system support",'Y');
    return;
  }
}

/*** ver 10.2 starts ************/

void fn_prcs_basketlist(  char *c_ServiceName,
                        char *c_errmsg,
                        char *c_xchng_cd,
                        char *c_date,
                        char *c_undrlyng )
{
  int i_rec_cnt = 0;
  int i_trnsctn=0;

  EXEC SQL
    SELECT count(rowid)      
    INTO   :i_rec_cnt
    FROM   FBC_FO_BSKT_CNTRCT_LST
    WHERE  fbc_expry_dt < DECODE(:exp_dt_prs,'N',(fbc_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND    TRIM(fbc_undrlyng) = TRIM(DECODE(:und_prs,'N',fbc_undrlyng,:c_undrlyng))
    AND    fbc_xchng_cd = :c_xchng_cd;

  if ( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName,"S31605",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,
                         "System error - Contact System support",'N');
    return;
  }

  if( i_rec_cnt == 0 )
  {
    fn_errlog(c_ServiceName,"S31610",LIBMSG,c_errmsg);
    fn_exit( c_ServiceName, i_trnsctn,
                "No Data Found In Favorites To Update History", 'N' );
    return;
  }
  else
  {
    sprintf( c_errmsg, "No. of Favorites updating in History Table :%ld:",
                                                                 i_rec_cnt );
    fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
  }

  i_trnsctn=0;
  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31615",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,
           "Unable to start transaction - Contact system support",'N');
    return;
  }
  EXEC SQL
    DELETE  FBC_FO_BSKT_CNTRCT_LST
    WHERE   fbc_xchng_cd = :c_xchng_cd
    AND     fbc_expry_dt < DECODE(:exp_dt_prs,'N',(fbc_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND     TRIM(fbc_undrlyng) = TRIM(DECODE(:und_prs,'N',fbc_undrlyng,:c_undrlyng));

  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S31620",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,
                         "System error - Contact System support",'Y');
    return;
  }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
  {
    fn_errlog(c_ServiceName,"S31625",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,
                   "Unable to commit transaction- Contact system support",'Y');
    return;
  }
}

/*** ver 10.2 ends ************/
void fn_prcs_trdqt(   char *c_ServiceName, 
                      char *c_errmsg, 
                      char *c_xchng_cd, 
                      char *c_date,
                      char *c_undrlyng )
{
  int i_trnsctn=0;

  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31630",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
            "Unable to start transaction - Contact system support",'N');
    return;
  }

  EXEC SQL
    DELETE  ftq_fo_trd_qt
    WHERE   ftq_expry_dt < DECODE(:exp_dt_prs,'N',(ftq_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND     TRIM(ftq_undrlyng) = TRIM(DECODE(:und_prs,'N',ftq_undrlyng,:c_undrlyng))
    AND     ftq_xchng_cd  = :c_xchng_cd; 
    
  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S31635",SQLMSG,c_errmsg);
    fn_exit( c_ServiceName, i_trnsctn, "Error in SQL Statement",'Y' );
    return;
  }

 if(strcmp(c_xchng_cd,"NFO") == 0)   /*** if condition added in Ver 8.2 ***/
 {

  /*** Ver 5.5 Starts ***/
    fn_userlog(c_ServiceName,"Before Enabling Roll Over Flag For Near Month.");
    fn_userlog(c_ServiceName,"Anand Exchange Code Is :%s:",c_xchng_cd); /* Testing */
    EXEC SQL
       UPDATE FTQ_FO_TRD_QT
       SET    FTQ_ROLLOVER_FLAG = 'T'
       WHERE  FTQ_PRDCT_TYP     = 'F'
       AND    FTQ_XCHNG_CD  = 'NFO' 
       AND    FTQ_EXPRY_DT = ( SELECT MIN(FTQ_EXPRY_DT)
                               FROM   FTQ_FO_TRD_QT
                               WHERE  FTQ_UNDRLYNG  ='NIFTY'
                               AND    FTQ_PRDCT_TYP = 'F'
                               AND    FTQ_XCHNG_CD  = 'NFO'
                              );

   if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31640",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
      return;
    }

 fn_userlog(c_ServiceName,"After Enabling Roll Over Flag For Near Month.");

 fn_userlog(c_ServiceName,"Before Enabling Roll Over Flag For Near Month of INDIA VIX.");
    fn_userlog(c_ServiceName,"Anand Exchange Code Is :%s:",c_xchng_cd); /* Testing */ 

    EXEC SQL
       UPDATE FTQ_FO_TRD_QT
       SET    FTQ_ROLLOVER_FLAG = 'T'
       WHERE  FTQ_PRDCT_TYP     = 'F'
       AND    FTQ_XCHNG_CD  = 'NFO'    
       AND    FTQ_EXPRY_DT = ( SELECT MIN(FTQ_EXPRY_DT)
                               FROM   FTQ_FO_TRD_QT
                               WHERE  FTQ_UNDRLYNG  ='INDVIX'
                               AND    FTQ_PRDCT_TYP = 'F'
                               AND    FTQ_XCHNG_CD  = 'NFO'
                              )
       AND   FTQ_UNDRLYNG  ='INDVIX';

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31645",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
      return;
    }

 fn_userlog(c_ServiceName,"After Enabling Roll Over Flag For Near Month of INDIA VIX.");

 /*** Ver 5.5 Ends ***/
 }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
  {
    fn_errlog(c_ServiceName,"S31650",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                   "Unable to commit transaction- Contact system support",'Y');
    return;
  }

	/***  Ver 7.1 Starts  ***/

  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31655",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,"Unable to start transaction - Contact system support",'N');
    return;
  }

  EXEC SQL
    DELETE FROM FDT_FTQ_DPLCT_TKN
    WHERE  FDT_EXPRY_DT < DECODE(:exp_dt_prs,'N',(FDT_EXPRY_DT+1),TO_DATE(:c_date,'dd-Mon-yyyy'))
    AND    TRIM(FDT_UNDRLYNG) = TRIM(DECODE(:und_prs,'N',FDT_UNDRLYNG,:c_undrlyng))
    AND    FDT_XCHNG_CD  = :c_xchng_cd;

  if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
  {
    fn_errlog(c_ServiceName,"S31660",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, "Unable to commit transaction- Contact system support",'Y');
    return;
  }

  /***  Ver 7.1 Ends  ***/
}

void fn_prcs_asgnbk(  char *c_ServiceName, 
                      char *c_errmsg, 
                      char *c_xchng_cd, 
                      char *c_date,
                      char *c_undrlyng )
{
  int i_rec_cnt = 0;
  int i_trnsctn=0;

  EXEC SQL
    SELECT count(rowid)				/*** Ver 4.0 '*' changed to 'rowid' **/ 
    INTO   :i_rec_cnt
    FROM   fab_fo_asgnmnt_book
    WHERE  fab_asgnd_dt < DECODE(:exp_dt_prs,'N',(fab_asgnd_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND     TRIM(fab_undrlyng) = TRIM(DECODE(:und_prs,'N',fab_undrlyng,:c_undrlyng))
    AND    fab_xchng_cd = :c_xchng_cd;

  if ( SQLCODE != 0 )  
  {
    fn_errlog(c_ServiceName,"S31665",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'N');
    return;
  }
    
  if( i_rec_cnt == 0 )
  {
    fn_errlog(c_ServiceName,"S31670",LIBMSG,c_errmsg);
    fn_exit( c_ServiceName, i_trnsctn,
                     "No Data Found In Assignment To Update History", 'N' );
    return;
  }
  else
  {
    sprintf( c_errmsg, "No. of Assignment updating in History Table :%ld:",
                                                             i_rec_cnt );
    fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
  }

  i_trnsctn=0;
  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31675",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                  "Unable to start transaction - Contact system support",'N');
    return;
  }

  EXEC SQL
    INSERT INTO fab_fo_asgnmnt_book_hstry
    (
      fab_clm_mtch_accnt,
      fab_xchng_cd,
      fab_prdct_typ,
      fab_indstk,
      fab_undrlyng,
      fab_expry_dt,
      fab_exer_typ,
      fab_opt_typ,
      fab_strk_prc,
      fab_asgn_rfrnc_no,
      fab_asgnd_dt,
      fab_asgnd_qty,
      fab_opnpstn_qty,
      fab_sttlmnt_prc,
      fab_curr_mkt_prc,
      fab_can_prcsd_flg,
      fab_brkrg_val,			/* 2.4 */
      fab_stt,						/* 2.4 */
      fab_src_tx,					/* 2.4 */
      fab_sebi_tt,				/* 2.4 */
      fab_tran_chrg,			/* 2.4 */
      fab_stamp_duty,			/* 2.4 */
      fab_other_chrg,     /* 2.4 */	
			FAB_MIN_LOT_SIZE    /* 3.0 */
    )
    (
      SELECT  fab_clm_mtch_accnt,
              fab_xchng_cd,
              fab_prdct_typ,
              fab_indstk,
              fab_undrlyng,
              fab_expry_dt,
              fab_exer_typ,
              fab_opt_typ,
              fab_strk_prc,
              fab_asgn_rfrnc_no,
              fab_asgnd_dt,
              fab_asgnd_qty,
              fab_opnpstn_qty,
              fab_sttlmnt_prc,
              fab_curr_mkt_prc,
              fab_can_prcsd_flg,		
              fab_brkrg_val,		/* 2.4 */
              fab_stt,					/* 2.4 */
              fab_src_tx,				/* 2.4 */
              fab_sebi_tt,			/* 2.4 */
              fab_tran_chrg,		/* 2.4 */
              fab_stamp_duty,		/* 2.4 */
              fab_other_chrg,		/* 2.4 */
							FAB_MIN_LOT_SIZE  /* 3.0 */
      FROM    fab_fo_asgnmnt_book
      WHERE   fab_asgnd_dt < DECODE(:exp_dt_prs,'N',(fab_asgnd_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
      AND     TRIM(fab_undrlyng) = TRIM(DECODE(:und_prs,'N',fab_undrlyng,:c_undrlyng))
      AND     fab_xchng_cd  = :c_xchng_cd
    );

  if( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName,"S31680",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
    return;
  }
    
  EXEC SQL
    DELETE  fab_fo_asgnmnt_book
    WHERE   fab_asgnd_dt < DECODE(:exp_dt_prs,'N',(fab_asgnd_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND     TRIM(fab_undrlyng) = TRIM(DECODE(:und_prs,'N',fab_undrlyng,:c_undrlyng))
    AND     fab_xchng_cd  = :c_xchng_cd; 

  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S31685",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'Y');
    return;
  }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
  {
    fn_errlog(c_ServiceName,"S31690",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, 
                "Unable to commit transaction- Contact system support",'Y');
    return;
  }
}


  /* ver 2.7 starts */

void fn_prcs_undrpstn(  char *c_ServiceName,
                        char *c_errmsg,
                    /*    char *c_xchng_cd)   *** Ver 3.6 *** Commented in Ver 7.9 ***/
                        char *c_xchng_cd,     /*** Ver 7.9 ***/
                        char *c_date,         /*** Ver 7.9 ***/
                        char *c_undrlyng)   /*** Ver 7.9 ***/

{
  long l_rec_cnt = 0;
  long l_fp_cnt  = 0;     /***  Ver 7.0 ***/
  int i_trnsctn = 0;

	fn_userlog(c_ServiceName,"***** inside fn_prcs_undrpstn");			/* Ver 7.9 */
  EXEC SQL
    SELECT count(rowid)					/*** Ver 4.0 '*' changed to 'rowid' **/
    INTO   :l_rec_cnt
    FROM   fup_fut_undrlyng_pstn
    WHERE  fup_xchng_cd = :c_xchng_cd			/*** Ver 3.6 ***/
		AND    fup_cntrct_tag = 'D' 
    AND    fup_uopnpstn_flw = 'N'
    AND    FUP_UORDR_MRGN = 0           /*** Ver 7.9 ***/
    AND    FUP_UNDRLYNG IN (SELECT DISTINCT(FFP_UNDRLYNG)                               /*** Ver 7.9 ***/
                    FROM FFP_FO_FUTURES_PSTN
                    WHERE FFP_XCHNG_CD = :c_xchng_cd
                    AND FFP_EXPRY_DT < DECODE(:exp_dt_prs,'N',(FFP_EXPRY_DT+1),TO_DATE(:c_date,'dd-Mon-yyyy'))
                    AND TRIM(FFP_UNDRLYNG) = TRIM(DECODE(:und_prs,'N',FFP_UNDRLYNG,:c_undrlyng)));

  if ( SQLCODE != 0 )
  {
   fn_errlog(c_ServiceName,"S31695",SQLMSG,c_errmsg);
   fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
   return;
  }


 if( l_rec_cnt == 0 )
 {
  fn_errlog(c_ServiceName,"S31700",LIBMSG,c_errmsg);
  fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag ); 
  return;
 }
 else
 {
  sprintf( c_errmsg, "No. of underlying position in History Table :%ld:",
                                                           l_rec_cnt );
  fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
 }

 i_trnsctn=0;
 i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
 if ( i_trnsctn == -1 )
 {
  fn_errlog(c_ServiceName,"S31705",LIBMSG,c_errmsg);
  fn_exit ( c_ServiceName, i_trnsctn,
                "Unable to start transaction - Contact system support",'N');
  return;
 }


 EXEC SQL
   INSERT INTO fup_fut_undrlyng_pstn_hstry
   (
     fup_clm_mtch_accnt,
     fup_xchng_cd,
     fup_prdct_typ,
     fup_indstk,
     fup_undrlyng,
     fup_cntrct_tag,
     fup_uibuy_qty,
     fup_uibuy_val,
     fup_uisell_qty,
     fup_uisell_val,
     fup_uexbuy_qty,
     fup_uexbuy_val,
     fup_uexsell_qty,
     fup_uexsell_val,
     fup_ubuy_exctd_qty,
     fup_usell_exctd_qty, 
     fup_uopnpstn_flw,      
     fup_uopnpstn_qty,      
     fup_uopnpstn_val,      
     fup_umtm_opn_val,     
     fup_uordr_mrgn,      
     fup_uexctd_mrgn,
     fup_uspread_mrgn,
     fup_uspread_pnl,
     fup_add_mrgn_val,
     fup_utrd_mrgn,
     fup_mtm_flg,
     fup_trd_dt,
     fup_umin_trd_mrgn,
		 fup_ucc_cd					/*** Added in VER 11.2 ***/
   )
    (
      SELECT fup_clm_mtch_accnt,
						 fup_xchng_cd,
		 				 fup_prdct_typ,                     
		         fup_indstk,                          
						 fup_undrlyng,                      
		 			 	 fup_cntrct_tag,                   
		 				 fup_uibuy_qty,                     
						 fup_uibuy_val,                      
						 fup_uisell_qty,                    
						 fup_uisell_val,                     
						 fup_uexbuy_qty,                   
						 fup_uexbuy_val,                   
						 fup_uexsell_qty,                  
						 fup_uexsell_val,                  
						 fup_ubuy_exctd_qty,            
						 fup_usell_exctd_qty,           
						 fup_uopnpstn_flw,               
						 fup_uopnpstn_qty,               
						 fup_uopnpstn_val,               
						 fup_umtm_opn_val,               
						 fup_uordr_mrgn,                  
						 fup_uexctd_mrgn,                 
						 fup_uspread_mrgn,               
						 fup_uspread_pnl,                  
						 fup_add_mrgn_val,               
						 fup_utrd_mrgn,                    
						 fup_mtm_flg,                        
						 fup_trd_dt,                          
						 fup_umin_trd_mrgn,
						 fup_ucc_cd 						/*** Added in VER 11.2 ***/
      FROM   fup_fut_undrlyng_pstn
      WHERE  fup_xchng_cd = :c_xchng_cd	/*** Ver 3.6 ***/
			AND		 fup_cntrct_tag='D'             
      AND    fup_uopnpstn_flw='N'          
      AND    FUP_UORDR_MRGN = 0     /*** Ver 7.9 ***/
      AND    FUP_UNDRLYNG IN (SELECT DISTINCT(FFP_UNDRLYNG)                               /*** Ver 7.9 ***/
                    FROM FFP_FO_FUTURES_PSTN
                    WHERE FFP_XCHNG_CD = :c_xchng_cd
                    AND FFP_EXPRY_DT < DECODE(:exp_dt_prs,'N',(FFP_EXPRY_DT+1),TO_DATE(:c_date,'dd-Mon-yyyy'))
                    AND TRIM(FFP_UNDRLYNG) = TRIM(DECODE(:und_prs,'N',FFP_UNDRLYNG,:c_undrlyng)))
    );

  if( SQLCODE != 0 )
 {
   fn_errlog(c_ServiceName,"S31710",SQLMSG,c_errmsg);
   fn_exit ( c_ServiceName, i_trnsctn,
                        "System error - Contact System support",'Y');
   return;
 }
  
 EXEC SQL
   DELETE  fup_fut_undrlyng_pstn
   WHERE   fup_xchng_cd = :c_xchng_cd	/*** Ver 3.6 ***/
	 AND		 fup_cntrct_tag='D'             
   AND     fup_uopnpstn_flw='N'
   AND     FUP_UORDR_MRGN = 0       /*** Ver 7.9 ***/
   AND    FUP_UNDRLYNG IN (SELECT DISTINCT(FFP_UNDRLYNG)                               /*** Ver 7.9 ***/
                    FROM FFP_FO_FUTURES_PSTN
                    WHERE FFP_XCHNG_CD = :c_xchng_cd
                    AND FFP_EXPRY_DT < DECODE(:exp_dt_prs,'N',(FFP_EXPRY_DT+1),TO_DATE(:c_date,'dd-Mon-yyyy'))
                    AND TRIM(FFP_UNDRLYNG) = TRIM(DECODE(:und_prs,'N',FFP_UNDRLYNG,:c_undrlyng)));   
   
    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
   {
     fn_errlog(c_ServiceName,"S31715",SQLMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn,
                          "System error - Contact System support",'Y');
     return;
   }

   if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
   {
     fn_errlog(c_ServiceName,"S31720",LIBMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn,
                 "Unable to commit transaction- Contact system support",'Y');
     return;
   }

	 /***  Ver 7.0 Starts  ***/

	fn_userlog(c_ServiceName,"Before Future Plus Residual Records Shifting.");

	EXEC SQL
    SELECT count(rowid)
    INTO   :l_fp_cnt
    FROM   fup_fut_undrlyng_pstn
    WHERE  fup_xchng_cd = :c_xchng_cd
    AND    fup_prdct_typ  = 'P'
    AND    fup_cntrct_tag = 'W'
    AND    fup_uopnpstn_flw = 'N';

  if ( SQLCODE != 0 )
  {
   fn_errlog(c_ServiceName,"S31725",SQLMSG,c_errmsg);
   fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
   return;
  }

  if( l_fp_cnt == 0 )
  {
    fn_errlog(c_ServiceName,"S31730",LIBMSG,c_errmsg);
    fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
    return;
  }
  else
  {
    sprintf( c_errmsg, "No. of Future Plus underlying Position In History Table :%ld:", l_fp_cnt );
    fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
  }

	i_trnsctn	=	0;

  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31735",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, "Unable to start transaction - Contact system support",'N');
    return;
  }

	EXEC SQL
    INSERT INTO fup_fut_undrlyng_pstn_hstry
    (
     fup_clm_mtch_accnt,
     fup_xchng_cd,
     fup_prdct_typ,
     fup_indstk,
     fup_undrlyng,
     fup_cntrct_tag,
     fup_uibuy_qty,
     fup_uibuy_val,
     fup_uisell_qty,
     fup_uisell_val,
     fup_uexbuy_qty,
     fup_uexbuy_val,
     fup_uexsell_qty,
     fup_uexsell_val,
     fup_ubuy_exctd_qty,
     fup_usell_exctd_qty,
     fup_uopnpstn_flw,
     fup_uopnpstn_qty,
     fup_uopnpstn_val,
     fup_umtm_opn_val,
     fup_uordr_mrgn,
     fup_uexctd_mrgn,
     fup_uspread_mrgn,
     fup_uspread_pnl,
     fup_add_mrgn_val,
     fup_utrd_mrgn,
     fup_mtm_flg,
     fup_trd_dt,
     fup_umin_trd_mrgn,
		 fup_ucc_cd 					/*** Added in VER 11.2 ***/
   )
	 (
      SELECT fup_clm_mtch_accnt,
             fup_xchng_cd,
             fup_prdct_typ,
             fup_indstk,
             fup_undrlyng,
             fup_cntrct_tag,
             fup_uibuy_qty,
             fup_uibuy_val,
             fup_uisell_qty,
             fup_uisell_val,
             fup_uexbuy_qty,
             fup_uexbuy_val,
             fup_uexsell_qty,
             fup_uexsell_val,
             fup_ubuy_exctd_qty,
             fup_usell_exctd_qty,
             fup_uopnpstn_flw,
             fup_uopnpstn_qty,
             fup_uopnpstn_val,
             fup_umtm_opn_val,
             fup_uordr_mrgn,
             fup_uexctd_mrgn,
             fup_uspread_mrgn,
             fup_uspread_pnl,
             fup_add_mrgn_val,
             fup_utrd_mrgn,
             fup_mtm_flg,
             fup_trd_dt,
             fup_umin_trd_mrgn,
						 fup_ucc_cd 					/*** Added in VER 11.2 ***/
      FROM   fup_fut_undrlyng_pstn
      WHERE  fup_xchng_cd = :c_xchng_cd
      AND    fup_prdct_typ ='P'
      AND    fup_cntrct_tag='W'
      AND    fup_uopnpstn_flw='N'
    );

	if( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName,"S31740",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
    return;
  }

  fn_userlog(c_ServiceName,"Before Delete Records With Contract Tag W.");

  EXEC SQL
    DELETE  fup_fut_undrlyng_pstn
    WHERE   fup_xchng_cd = :c_xchng_cd
    AND     fup_prdct_typ ='P'
    AND     fup_cntrct_tag='W'
    AND     fup_uopnpstn_flw='N';

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31745",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
      return;
    }

    if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
    {
      fn_errlog(c_ServiceName,"S31750",LIBMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, "Unable to commit transaction- Contact system support",'Y');
      return;
    }

    /***  Ver 7.0 Ends  ***/
	
	
 }

    /* ver 2.7 ends */

/************************* 3.0 Starts **********************************/

int fn_chk_lot_sz(char *c_trd_dt,
									char *c_xchng_cd)		/*** Ver 3.6 ***/
{

	char c_errmsg [ 256 ];
	char c_msg[ 256 ];

  EXEC SQL BEGIN DECLARE SECTION;
  long l_lot_sz_zero_count=0;
  EXEC SQL END   DECLARE SECTION;

/******************************************************************************/
fn_userlog (c_ServiceName,"111");

  EXEC SQL
    SELECT COUNT(rowid)						/*** Ver 4.0 '*' changed to 'rowid' **/
    INTO  :l_lot_sz_zero_count
    FROM  FTD_FO_TRD_DTLS
    WHERE FTD_XCHNG_CD = :c_xchng_cd	/*** Ver 3.6 ***/
		AND		TRUNC(FTD_TRD_DT) < :c_trd_dt
    AND   FTD_PRDCT_TYP = 'O'
    AND ( FTD_MIN_LOT_SIZE = 0 OR FTD_MIN_LOT_SIZE is null )
    ;

     if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
     {
        fn_errlog ( c_ServiceName, "S31755", SQLMSG, c_errmsg  );
        return (-1);
     }

     if ( l_lot_sz_zero_count > 0 )
     {
       fn_userlog (c_ServiceName," NULL Lot size : FTD |%ld| ",l_lot_sz_zero_count);
       sprintf(c_msg," WARNING : Found records in FTD with lot size null / 0");
       return (-1);
     }

/******************************************************************************/
fn_userlog (c_ServiceName,"222");
EXEC SQL
    SELECT COUNT(rowid)					/*** Ver 4.0 '*' changed to 'rowid' **/
    INTO  :l_lot_sz_zero_count
    FROM  FAB_FO_ASGNMNT_BOOK
    WHERE FAB_XCHNG_CD = :c_xchng_cd	/*** Ver 3.6 ***/
		AND		TRUNC(FAB_ASGND_DT) < :c_trd_dt
    AND   FAB_PRDCT_TYP = 'O'
    AND   (FAB_MIN_LOT_SIZE = 0 OR FAB_MIN_LOT_SIZE is null )
    ;

    if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog ( c_ServiceName, "S31760", SQLMSG, c_errmsg  );
      return (-1);
    }

    if ( l_lot_sz_zero_count > 0 )
    {
      fn_userlog (c_ServiceName," NULL Lot size : FAB |%ld| ",l_lot_sz_zero_count);
      sprintf(c_msg," WARNING : Found records in FAB with lot size null / 0 ");
      return (-1);
    }


/******************************************************************************/
fn_userlog (c_ServiceName,"333");
EXEC SQL
    SELECT COUNT(rowid)						/*** Ver 4.0 '*' changed to 'rowid' **/
    INTO  :l_lot_sz_zero_count
    FROM  FEC_FO_EXRC_CONF
    WHERE FEC_XCHNG_CD = :c_xchng_cd	/*** Ver 3.6 ***/
		AND		TRUNC(FEC_EXRC_DT) < :c_trd_dt
    AND   FEC_PRDCT_TYP = 'O'
    AND   (FEC_MIN_LOT_SIZE = 0 OR FEC_MIN_LOT_SIZE is null )
    ;

    if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog ( c_ServiceName, "S31765", SQLMSG, c_errmsg  );
      return (-1);
    }
    if ( l_lot_sz_zero_count > 0 )
    {
      fn_userlog (c_ServiceName," NULL Lot size : FEC |%ld| ",l_lot_sz_zero_count);
      sprintf(c_msg," WARNING : Found records in FEC with lot size null ");
      return (-1);
    }

/******************************************************************************/
		/**** Ver 4.0 Starts **/
fn_userlog (c_ServiceName,"444");
l_lot_sz_zero_count = 0;

  EXEC SQL
    SELECT COUNT(rowid)					/*** Ver 4.0 '*' changed to 'rowid' **/
    INTO  :l_lot_sz_zero_count
    FROM  FAT_FO_ATS_TRADES_NSE
    WHERE TRUNC(FAT_TRD_DT) < :c_trd_dt
    AND   FAT_PRDCT_TYP = 'O'
    AND ( FAT_MIN_LOT_SIZE = 0 OR FAT_MIN_LOT_SIZE is null )
    ;

     if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
     {
        fn_errlog ( c_ServiceName, "S31770", SQLMSG, c_errmsg  );
        return (-1);
     }

     if ( l_lot_sz_zero_count > 0 )
     {
       fn_userlog (c_ServiceName," NULL Lot size : FAT |%ld| ",l_lot_sz_zero_count);
       sprintf(c_msg," WARNING : Found records in FAT with lot size null / 0");
       return (-1);
     }
/******************************************************************************/
		/**** Ver 4.0 Ends **/
  return (0);
}

/************************* 3.0 Ends   **********************************/

/*** Ver 3.4 starts ***/
void fn_prcs_spnpos( char *c_ServiceName, 
                     char *c_errmsg, 
                     char *c_xchng_cd, 
                     char *c_date,
                     char *c_undrlyng, 
										 char *c_fbc_trd_dt )   /*** Ver 6.4 ***/
{
  int i_rec_cnt = 0;
  int i_trnsctn=0;

    EXEC SQL
      SELECT count(rowid)							/*** Ver 4.0 '*' changed to 'rowid' **/ 
      INTO   :i_rec_cnt
      FROM   fcp_fo_spn_cntrct_pstn
      WHERE  fcp_expry_dt < DECODE(:exp_dt_prs,'N',(fcp_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
      AND    TRIM(fcp_undrlyng) = TRIM(DECODE(:und_prs,'N',fcp_undrlyng,:c_undrlyng))
      AND    fcp_xchng_cd = :c_xchng_cd;

    if ( SQLCODE != 0 )  
    {
      fn_errlog(c_ServiceName,"S31775",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, 
                         "System error - Contact System support",'N');
      return;
    }
    
    if( i_rec_cnt == 0 )
    {
      fn_exit( c_ServiceName, i_trnsctn, "No Data Found In Span Position To Update History", 'N' );
      return;
    }
    else
    {
      sprintf( c_errmsg,"No. of Span Position updating in History Table :%ld:", i_rec_cnt );
      fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
    }

    i_trnsctn=0;
    i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
    if ( i_trnsctn == -1 )
    {
      fn_errlog(c_ServiceName,"S31780",LIBMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, "Unable to start transaction - Contact system support",'N');
      return;
    }

    EXEC SQL
      INSERT INTO fcp_fo_spn_cntrct_pstn_hstry
      (
				fcp_clm_mtch_accnt,
				fcp_xchng_cd,
				fcp_prdct_typ,
				fcp_indstk,
				fcp_undrlyng,
				fcp_expry_dt,
				fcp_exer_typ,
				fcp_strk_prc,
				fcp_opt_typ,
				fcp_ibuy_qty,
				fcp_ibuy_ord_val,
				fcp_isell_qty,
				fcp_isell_ord_val,
				fcp_exbuy_qty,
				fcp_exbuy_ord_val,
				fcp_exsell_qty,
				fcp_exsell_ord_val,
				fcp_buy_exctd_qty,
				fcp_sell_exctd_qty,
				fcp_opnpstn_flw,
				fcp_opnpstn_qty,
				fcp_opnpstn_val,
				fcp_exrc_qty,
				fcp_asgnd_qty,
				fcp_opt_premium,
				fcp_mtm_opn_val,
				fcp_imtm_opn_val,
				fcp_trd_dt,        /*** Ver 6.4 ***/
				fcp_udlvry_mrgn,   /*** Ver 8.9 ***/
				fcp_mtm_flg,				 /*** Ver 8.9 ***/
        FCP_TRG_PRC, /*** ver 9.7 ***/
        FCP_MIN_TRG_PRC, /*** ver 9.7 ***/
        fcp_avg_prc,      /*** Ver 10.5 ***/
				fcp_ucc_cd				/*** Added in VER 11.2 ***/
			)
			(
				SELECT  
					fcp_clm_mtch_accnt,
					fcp_xchng_cd,
					fcp_prdct_typ,
					fcp_indstk,
					fcp_undrlyng,
					fcp_expry_dt,
					fcp_exer_typ,
					fcp_strk_prc,
					fcp_opt_typ,
					fcp_ibuy_qty,
					fcp_ibuy_ord_val,
					fcp_isell_qty,
					fcp_isell_ord_val,
					fcp_exbuy_qty,
					fcp_exbuy_ord_val,
					fcp_exsell_qty,
					fcp_exsell_ord_val,
					fcp_buy_exctd_qty,
					fcp_sell_exctd_qty,
					fcp_opnpstn_flw,
					fcp_opnpstn_qty,
					fcp_opnpstn_val,
					fcp_exrc_qty,
					fcp_asgnd_qty,
					fcp_opt_premium,
					fcp_mtm_opn_val,
					fcp_imtm_opn_val,
					:c_fbc_trd_dt,         /*** Ver 6.4 ***/
					fcp_udlvry_mrgn,   /*** Ver 8.9 ***/
          fcp_mtm_flg,        /*** Ver 8.9 ***/
          FCP_TRG_PRC, /*** ver 9.7 ***/
          FCP_MIN_TRG_PRC, /*** ver 9.7 ***/
          fcp_avg_prc,      /*** Ver 10.5 ***/
					fcp_ucc_cd				/*** Added in VER 11.2 ***/
				FROM    fcp_fo_spn_cntrct_pstn
				WHERE   fcp_expry_dt < DECODE(:exp_dt_prs,'N',(fcp_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
				AND     TRIM(fcp_undrlyng) = TRIM(DECODE(:und_prs,'N',fcp_undrlyng,:c_undrlyng))
				AND     fcp_xchng_cd  = :c_xchng_cd
			);

    if( SQLCODE != 0 )
    {
      fn_errlog(c_ServiceName,"S31785",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
      return;
    }
    
    EXEC SQL
      DELETE  fcp_fo_spn_cntrct_pstn
      WHERE   fcp_expry_dt < DECODE(:exp_dt_prs,'N',(fcp_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
      AND     TRIM(fcp_undrlyng) = TRIM(DECODE(:und_prs,'N',fcp_undrlyng,:c_undrlyng))
      AND     fcp_xchng_cd  = :c_xchng_cd; 

    if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName,"S31790",SQLMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, "System error - Contact System support",'Y');
      return;
    }

    if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
    {
      fn_errlog(c_ServiceName,"S31795",LIBMSG,c_errmsg);
      fn_exit ( c_ServiceName, i_trnsctn, "Unable to commit transaction- Contact system support",'Y');
      return;
    }
}
/*** Ver 3.4 Ends ***/

/**** Ver 4.1 Starts ****/

void fn_amc_hstry( char *c_ServiceName, 
                     char *c_errmsg, 
                     char *c_xchng_cd, 
                     char *c_date
                   )
{
  int i_rec_cnt = 0;
  int i_trnsctn=0;

  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31800",LIBMSG,c_errmsg);
    fn_userlog (c_ServiceName," Error- in begin tran for AMC-Hstry");
    fn_exit ( c_ServiceName, i_trnsctn, "Unable to start transaction - Contact system support", 'N');
    return;
  }

  EXEC SQL
    INSERT INTO AMC_ADM_MRGN_CALC_HSTRY
    (
			AMC_CLM_MTCH_ACCNT,      
			AMC_BNK_ACCNT,           
			AMC_TRD_DT,              
			AMC_TOTAL_MRGN_REQ,      
			AMC_OLD_PLG_AMT,         
			AMC_OLD_ALCTD_AMT,       
			AMC_OLD_BFT_AMT,         
			AMC_OLD_ISEC_MRGN_AMT,   
			AMC_RUN_DT,              
			AMC_RUN_NO,              
			AMC_NEW_PLG_AMT,         
			AMC_NEW_ALCTD_AMT,       
			AMC_NEW_BFT_AMT,         
			AMC_NEW_ISEC_MRGN_AMT,   
			AMC_APPL_AMT,            
			AMC_DBCR_CD,             
			AMC_BILL_NO,             
			AMC_BILL_PST_FLG,        
			AMC_BILL_PST_DT,         
			AMC_NWB_AMT,             
			AMC_BATCH_SITE_IND,      
			AMC_STATUS_FLG,          
			AMC_XCHNG_CD,            
			AMC_TO_CR_ALCTD_AMT,     
			AMC_TO_DB_ALCTD_AMT,     
			AMC_TO_DB_BFT_AMT,
      AMC_OLD_FDR_AMT,     /*** Ver 5.0 ***/
      AMC_NEW_FDR_AMT,     /*** Ver 5.0 ***/
      AMC_FUND_MODEL_FLG   /*** Ver 9.4 ***/        
     )
    SELECT 
			AMC_CLM_MTCH_ACCNT,      
			AMC_BNK_ACCNT,           
			AMC_TRD_DT,              
			AMC_TOTAL_MRGN_REQ,      
			AMC_OLD_PLG_AMT,         
			AMC_OLD_ALCTD_AMT,       
			AMC_OLD_BFT_AMT,         
			AMC_OLD_ISEC_MRGN_AMT,   
			AMC_RUN_DT,              
			AMC_RUN_NO,              
			AMC_NEW_PLG_AMT,         
			AMC_NEW_ALCTD_AMT,       
			AMC_NEW_BFT_AMT,         
			AMC_NEW_ISEC_MRGN_AMT,   
			AMC_APPL_AMT,            
			AMC_DBCR_CD,             
			AMC_BILL_NO,             
			AMC_BILL_PST_FLG,        
			AMC_BILL_PST_DT,         
			AMC_NWB_AMT,             
			AMC_BATCH_SITE_IND,      
			AMC_STATUS_FLG,          
			AMC_XCHNG_CD,            
			AMC_TO_CR_ALCTD_AMT,     
			AMC_TO_DB_ALCTD_AMT,     
			AMC_TO_DB_BFT_AMT,
      AMC_OLD_FDR_AMT,    /*** Ver 5.0 ***/
      AMC_NEW_FDR_AMT,    /*** Ver 5.0 ***/    
      AMC_FUND_MODEL_FLG  /*** Ver 9.4 ***/    
    FROM AMC_ADM_MRGN_CALC
    WHERE trunc(AMC_RUN_DT) < trunc(SYSDATE- 50)
		AND   NVL(AMC_XCHNG_CD,'NFO') = :c_xchng_cd; /** Added during movement of Ver 4.2 **/
  

  if( SQLCODE != 0 )
 	{
   fn_errlog(c_ServiceName,"S31805",SQLMSG,c_errmsg);
   fn_exit ( c_ServiceName, i_trnsctn,
                        "System error - Contact System support",'Y');
   return;
 	}

 	fn_userlog (c_ServiceName," After inserting into AMC-Hstry -No of records|%ld| ",SQLROWCOUNT);
  
  EXEC SQL
      DELETE  AMC_ADM_MRGN_CALC
      WHERE   trunc(AMC_RUN_DT)  < trunc(SYSDATE- 50)
      AND     NVL(AMC_XCHNG_CD,'NFO') = :c_xchng_cd; 

  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
     fn_errlog(c_ServiceName,"S31810",SQLMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
     return;
  }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
  {
     fn_errlog(c_ServiceName,"S31815",LIBMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn, 
                "Unable to commit transaction- Contact system support",'Y');
      return;
  }
  fn_userlog (c_ServiceName," After deleting AMC -No of records|%ld| ",SQLROWCOUNT);
}

/**** Ver 4.1 Ends ****/

/**** Ver 11.1 Starts ****/
void fn_fno_hstry(char *c_ServiceName,
             char *c_errmsg)
{
  int i_rec_cnt = 0;
  int i_qr_cnt = 0;
  int i_fo_cnt = 0;
  int i_iclck_cnt = 0;
  int i_oclck_cnt = 0;
	int i_trnsctn=0;

	EXEC SQL
		SELECT count(*)
    INTO   :i_rec_cnt
    FROM   IDIRECT_QR_LOGIN
    WHERE  IQL_CREATED_DT <= to_date(current_date -1);

  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
  {
    fn_errlog(c_ServiceName,"S31820",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,"Unable to count the No. of Records in IDIRECT_QR_LOGIN",'Y');
    return;
  }
  
  if(i_rec_cnt != 0)
  {
    fn_userlog (c_ServiceName, "No. of Contract updating in History Table :%ld:",i_rec_cnt );
    //fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
  
 	i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31825",LIBMSG,c_errmsg);
	  fn_userlog (c_ServiceName," Error- in begin tran for Hstry");
    fn_exit ( c_ServiceName, i_trnsctn,"Unable to start transaction - Contact system support", 'N');
    return;
  }

    fn_userlog(c_ServiceName,"Before Insert Into IDIRECT_QR_LOGIN History.");

  EXEC SQL
    INSERT INTO IDIRECT_QR_LOGIN_HSTRY
    (
     IQL_IP_ID           ,                               
     IQL_WEBSRVR_IP_ADDR ,                              
     IQL_CLNT_DL_VER     ,                               
     IQL_LOGIN_SOURCE    ,                      
     IQL_PUB_KEY         ,                      
     IQL_REDIRECT_URL    ,                               
     IQL_CREATED_DT      ,                               
     IQL_EXPIRY          ,                               
     IQL_TOKEN_NO        ,                               
     IQL_CLAIM_FLAG      ,                               
     IQL_USER_ID         ,                               
     IQL_SESSION_ID      ,                               
     IQL_API_SESSION_ID  ,                               
     IQL_NEW_SESSION_ID  ,                               
     IQL_UPDATED_DT      ,                               
     IQL_UUID            ,                               
     IQL_CLN_USR_AGNT_STR    			 	
    )
   (
     SELECT IQL_IP_ID           ,                               
            IQL_WEBSRVR_IP_ADDR ,                               
            IQL_CLNT_DL_VER     ,                               
            IQL_LOGIN_SOURCE    ,                      
            IQL_PUB_KEY         ,                      
            IQL_REDIRECT_URL    ,                               
            IQL_CREATED_DT      ,                               
            IQL_EXPIRY          ,                               
            IQL_TOKEN_NO        ,                               
            IQL_CLAIM_FLAG      ,                               
            IQL_USER_ID         ,                               
            IQL_SESSION_ID      ,                               
            IQL_API_SESSION_ID  ,                               
            IQL_NEW_SESSION_ID  ,                               
            IQL_UPDATED_DT      ,                               
            IQL_UUID            ,                               
            IQL_CLN_USR_AGNT_STR  
       FROM IDIRECT_QR_LOGIN
      WHERE IQL_CREATED_DT <= to_date(current_date -1)
   );

   if( SQLCODE != 0 )
   {
     fn_errlog(c_ServiceName,"S31830",SQLMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
     return;
   }         
  
     fn_userlog(c_ServiceName,"Before delete Data From  IDIRECT_QR_LOGIN History.");
   
   EXEC SQL
      DELETE IDIRECT_QR_LOGIN
      WHERE IQL_CREATED_DT <= to_date(current_date -1);
 
   if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND ) 
   {
     fn_errlog(c_ServiceName,"S31835",SQLMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
     return;
   }	 
   fn_userlog (c_ServiceName," After deleting Data From  IDIRECT_QR_LOGIN");

   if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
   {
    fn_errlog(c_ServiceName,"S31840",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, "Unable to commit transaction- Contact system support",'Y');
    return;
   } 	
 }
 else
 {
	 fn_exit( c_ServiceName, i_trnsctn, "No Data Found To Update History", 'Y' );
 }

    EXEC SQL
    SELECT count(*)
    INTO   :i_qr_cnt
    FROM   QR_LOGIN_RI
    WHERE  QRR_CREATED_DT <= to_date(current_date -1);

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
     fn_errlog(c_ServiceName,"S31845",SQLMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn,"Unable to count the No. of Records in QR_LOGIN_RI",'Y');
     return;
    }

    if( i_qr_cnt != 0 )
    {
     fn_userlog (c_ServiceName, "No. of Contract updating in History Table :%ld:",i_qr_cnt );
     //fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );

    i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
    if ( i_trnsctn == -1 )
    {
     fn_errlog(c_ServiceName,"S31850",LIBMSG,c_errmsg);
     fn_userlog (c_ServiceName," Error- in begin tran for Hstry");
     fn_exit ( c_ServiceName, i_trnsctn,"Unable to start transaction - Contact system support", 'N');
     return;
    }

     fn_userlog(c_ServiceName,"Before Insert Into QR_LOGIN_RI History.");

  EXEC SQL
    INSERT INTO QR_LOGIN_RI_HSTRY
    (
      QRR_SEQ_NO           ,                     
      QRR_IP_ID            ,                             
      QRR_WEBSRVR_IP_ADDR  ,                              
      QRR_CLNT_DL_VER      ,                              
      QRR_LOGIN_SOURCE     ,                     
      QRR_REDIRECT_URL     ,                              
      QRR_CREATED_DT       ,                              
      QRR_EXPIRY           ,                              
      QRR_TOKEN_NO         ,                              
      QRR_CLAIM_FLAG       ,                              
      QRR_USER_ID          ,                              
      QRR_SESSION_ID       ,                              
      QRR_API_SESSION_ID   ,                              
      QRR_NEW_SESSION_ID   ,                              
      QRR_UPDATED_DT       ,                              
      QRR_SEND_STTS        ,                              
      QRR_RI_STTS          ,                              
      QRR_MOB_STTS                
    )
   (
     SELECT QRR_SEQ_NO           ,                     
            QRR_IP_ID            ,                             
            QRR_WEBSRVR_IP_ADDR  ,                              
            QRR_CLNT_DL_VER      ,                              
            QRR_LOGIN_SOURCE     ,                     
            QRR_REDIRECT_URL     ,                              
            QRR_CREATED_DT       ,                              
            QRR_EXPIRY           ,                              
            QRR_TOKEN_NO         ,                              
            QRR_CLAIM_FLAG       ,                              
            QRR_USER_ID          ,                              
            QRR_SESSION_ID       ,                              
            QRR_API_SESSION_ID   ,                              
            QRR_NEW_SESSION_ID   ,                              
            QRR_UPDATED_DT       ,                              
            QRR_SEND_STTS        ,                              
            QRR_RI_STTS          ,                              
            QRR_MOB_STTS               
       FROM QR_LOGIN_RI
      WHERE QRR_CREATED_DT <= to_date(current_date -1)
   );

   if( SQLCODE != 0 )
   {
     fn_errlog(c_ServiceName,"S31855",SQLMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
     return;
   }

     fn_userlog(c_ServiceName,"Before delete Data From  QR_LOGIN_RI History.");

   EXEC SQL
      DELETE QR_LOGIN_RI
      WHERE QRR_CREATED_DT <= to_date(current_date -1);

   if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
   {
     fn_errlog(c_ServiceName,"S31860",SQLMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
     return;
   }

   if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
   {
    fn_errlog(c_ServiceName,"S31865",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, "Unable to commit transaction- Contact system support",'Y');
    return;
   } 

   fn_userlog (c_ServiceName," After deleting Data From  QR_LOGIN_RI");     
}
else
{
  fn_exit( c_ServiceName, i_trnsctn, "No Data Found To Update History", 'Y' );
}

    EXEC SQL
    SELECT count(*)
    INTO   :i_oclck_cnt
    FROM   ONECLICK_RI
    WHERE  OCR_INSRT_DT <= to_date(current_date -1)
      AND  OCR_SENT_FLG != 'Z';

  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
  {
    fn_errlog(c_ServiceName,"S31870",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,"Unable to count the No. of Records in ONECLICK_RI",'Y');
    return;
  }

  if( i_oclck_cnt != 0 )
  {
    fn_userlog (c_ServiceName,"No. of Contract updating in History Table :%ld:",i_oclck_cnt );
    //fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );

  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31875",LIBMSG,c_errmsg);
    fn_userlog (c_ServiceName," Error- in begin tran for Hstry");
    fn_exit ( c_ServiceName, i_trnsctn,"Unable to start transaction - Contact system support", 'N');
    return;
  }

    fn_userlog(c_ServiceName,"Before Insert Into ONECLICK_RI History.");

  EXEC SQL
    INSERT INTO ONECLICK_RI_HSTRY
    (
       OCR_SEQ_NO         ,                                
       OCR_STRGY_DT       ,                                
       OCR_MOD_DT         ,                                
       OCR_PRTFL_ID       ,                                
       OCR_CALL_ACTION    ,                                
       OCR_PRTFL_NAME     ,                                
       OCR_XCHNG_CD       ,                                
       OCR_PRDCT_TYP      ,                                
       OCR_INDSTK         ,                                
       OCR_UNDRLYNG       ,                                
       OCR_EXPRY_DT       ,                                
       OCR_EXER_TYP       ,                                
       OCR_OPT_TYP        ,                                
       OCR_STRK_PRC       ,                                
       OCR_ACTION         ,                                
       OCR_RCMEND_PRC_FRM ,                                
       OCR_RCMEND_PRC_TO  ,                                
       OCR_MIN_LOT_QTY    ,                                
       OCR_LST_TRD_PRC    ,                                
       OCR_BST1_BID_PRC   ,                               
       OCR_BST1_OFFR_PRC  ,                                
       OCR_LTQ_RT         ,                                
       OCR_TRGT_PRC       ,                                
       OCR_SLTP_PRC       ,                                
       OCR_EXPTD_PRFT_PERLOT ,                             
       OCR_EXPTD_LOSS_PERLOT ,                            
       OCR_TOTAL_MARGIN      ,                             
       OCR_LEG_NO            ,                             
       OCR_STATUS            ,                             
       OCR_INSRT_DT          ,                             
       OCR_SENT_FLG          ,                             
       OCR_SENT_DT  
    )
   (
     SELECT OCR_SEQ_NO         ,                                
            OCR_STRGY_DT       ,                                
            OCR_MOD_DT         ,                                
            OCR_PRTFL_ID       ,                                
            OCR_CALL_ACTION    ,                                
            OCR_PRTFL_NAME     ,                                
            OCR_XCHNG_CD       ,                                
            OCR_PRDCT_TYP      ,                                
            OCR_INDSTK         ,                                
            OCR_UNDRLYNG       ,                                
            OCR_EXPRY_DT       ,                                
            OCR_EXER_TYP       ,                                
            OCR_OPT_TYP        ,                                
            OCR_STRK_PRC       ,                                
            OCR_ACTION         ,                                
            OCR_RCMEND_PRC_FRM ,                                
            OCR_RCMEND_PRC_TO  ,                                
            OCR_MIN_LOT_QTY    ,                                
            OCR_LST_TRD_PRC    ,                                
            OCR_BST1_BID_PRC   ,                               
            OCR_BST1_OFFR_PRC  ,                                
            OCR_LTQ_RT         ,                                
            OCR_TRGT_PRC       ,                                
            OCR_SLTP_PRC       ,                                
            OCR_EXPTD_PRFT_PERLOT ,                             
            OCR_EXPTD_LOSS_PERLOT ,                            
            OCR_TOTAL_MARGIN      ,                             
            OCR_LEG_NO            ,                             
            OCR_STATUS            ,                             
            OCR_INSRT_DT          ,                             
            OCR_SENT_FLG          ,                             
            OCR_SENT_DT        
       FROM ONECLICK_RI
      WHERE OCR_INSRT_DT <= to_date(current_date -1)
        AND OCR_SENT_FLG != 'Z'
   );

   if( SQLCODE != 0 )
   {
     fn_errlog(c_ServiceName,"S31880",SQLMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
     return;
   }

     fn_userlog(c_ServiceName,"Before delete Data From  ONECLICK_RI History.");

   EXEC SQL
      DELETE ONECLICK_RI
      WHERE OCR_INSRT_DT <= to_date(current_date -1)
        AND OCR_SENT_FLG != 'Z';

   if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
   {
     fn_errlog(c_ServiceName,"S31885",SQLMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
     return;
   }
   fn_userlog (c_ServiceName," After deleting Data From  ONECLICK_RI"); 

   if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
   {
    fn_errlog(c_ServiceName,"S31890",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, "Unable to commit transaction- Contact system support",'Y');
    return;
   } 
}
else
{
  fn_exit( c_ServiceName, i_trnsctn, "No Data Found To Update History", 'Y' );
}

    EXEC SQL
    SELECT count(*)
    INTO   :i_iclck_cnt
    FROM   ICLICK_RI
    WHERE  ICR_INSRT_DT <= to_date(current_date -1)
      AND  ICR_SENT_FLG != 'Z';

  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
  {
    fn_errlog(c_ServiceName,"S31895",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,"Unable to count the No. of Records in ICLICK_RI",'Y');
    return;
  }

  if( i_iclck_cnt != 0 )
  {
    fn_userlog (c_ServiceName, "No. of Contract updating in History Table :%ld:",i_iclck_cnt );
    //fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );

  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31900",LIBMSG,c_errmsg);
    fn_userlog (c_ServiceName," Error- in begin tran for Hstry");
    fn_exit ( c_ServiceName, i_trnsctn,"Unable to start transaction - Contact system support", 'N');
    return;
  }

    fn_userlog(c_ServiceName,"Before Insert Into ICLICK_RI History.");

  EXEC SQL
    INSERT INTO ICLICK_RI_HSTRY
    (
       ICR_SEQ_NO              ,                            
       ICR_STCK_NM             ,                            
       ICR_MOD_DT              ,                            
       ICR_CALL_TYP            ,                            
       ICR_CALL_DESC           ,                            
       ICR_RCMNDTN_PRC_ND_DT   ,                            
       ICR_TRGT1_PRC           ,                            
       ICR_SLTP_PRC            ,                            
       ICR_BK_PART_PRFT_PRCNTG ,                           
       ICR_BK_PFT_PRC          ,                          
       ICR_EXIT_PRC            ,                           
       ICR_RCMNDTN_UPDT        ,                           
       ICR_STATUS              ,                           
       ICR_INSRT_DT            ,                           
       ICR_SENT_FLG            ,                           
       ICR_SENT_DT             /*,                           
       ICR_STCK_CD             ,                           
       ICR_ACTION              ,                           
       ICR_FO_EXPIRY_DT        ,                          
       ICR_STRK_PRC            ,                           
       ICR_OPT_TYP             ,                           
       ICR_RCMNDTN_FRM_PRC     ,                           
       ICR_RCMNDTN_TO_PRC      ,                           
       ICR_RCMNDTN_DT          ,                           
       ICR_SUBSCRPN_TYP             */
    )
   (
       SELECT ICR_SEQ_NO              ,                            
              ICR_STCK_NM             ,                            
              ICR_MOD_DT              ,                            
              ICR_CALL_TYP            ,                            
              ICR_CALL_DESC           ,                            
              ICR_RCMNDTN_PRC_ND_DT   ,                            
              ICR_TRGT1_PRC           ,                            
              ICR_SLTP_PRC            ,                            
              ICR_BK_PART_PRFT_PRCNTG ,                           
              ICR_BK_PFT_PRC          ,                          
              ICR_EXIT_PRC            ,                           
              ICR_RCMNDTN_UPDT        ,                           
              ICR_STATUS              ,                           
              ICR_INSRT_DT            ,                           
              ICR_SENT_FLG            ,                           
              ICR_SENT_DT             /*,                           
              ICR_STCK_CD             ,                           
              ICR_ACTION              ,                           
              ICR_FO_EXPIRY_DT        ,                          
              ICR_STRK_PRC            ,                           
              ICR_OPT_TYP             ,                           
              ICR_RCMNDTN_FRM_PRC     ,                           
              ICR_RCMNDTN_TO_PRC      ,                           
              ICR_RCMNDTN_DT          ,                           
              ICR_SUBSCRPN_TYP                   */
         FROM ICLICK_RI
        WHERE ICR_INSRT_DT <= to_date(current_date -1)
          AND ICR_SENT_FLG != 'Z'
   );

   if( SQLCODE != 0 )
   {
     fn_errlog(c_ServiceName,"S31905",SQLMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
     return;
   }

     fn_userlog(c_ServiceName,"Before delete Data From  ICLICK_RI History.");

   EXEC SQL
      DELETE ICLICK_RI
      WHERE ICR_INSRT_DT <= to_date(current_date -1)
        AND ICR_SENT_FLG != 'Z';

   if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
   {
     fn_errlog(c_ServiceName,"S31910",SQLMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
     return;
   }
   fn_userlog (c_ServiceName," After deleting Data From  ICLICK_RI");

  if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
  {
   fn_errlog(c_ServiceName,"S31915",LIBMSG,c_errmsg);
   fn_exit ( c_ServiceName, i_trnsctn, "Unable to commit transaction- Contact system support",'Y');
   return;
  } 
}
else
{
 fn_exit( c_ServiceName, i_trnsctn, "No Data Found To Update History", 'Y' );
}

    EXEC SQL
    SELECT count(*)
    INTO   :i_fo_cnt
    FROM   FFS_FO_FLASH_DISCRYP
    WHERE  FFS_INS_DT <= add_months(current_date,-3);

  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
  {
    fn_errlog(c_ServiceName,"S31920",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,"Unable to count the No. of Records in FFS_FO_FLASH_DISCRYP",'Y');
    return;
  }

  if( i_fo_cnt != 0 )
  {
    fn_userlog(c_ServiceName, "No. of Contract updating in History Table :%ld:",i_fo_cnt );
    //fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );

  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31925",LIBMSG,c_errmsg);
    fn_userlog (c_ServiceName," Error- in begin tran for Hstry");
    fn_exit ( c_ServiceName, i_trnsctn,"Unable to start transaction - Contact system support", 'N');
    return;
  }

    fn_userlog(c_ServiceName,"Before Insert Into FFS_FO_FLASH_DISCRYP History.");

  EXEC SQL
    INSERT INTO FFS_FO_FLASH_DISCRYP_HSTRY
    (
       FFS_CLM_MTCH_ACCNT ,                      
       FFS_XCHNG_CD       ,                        
       FFS_PRDCT_TYP      ,                        
       FFS_UNDRLYNG       ,                        
       FFS_EXPRY_DT       ,                        
       FFS_EXER_TYP       ,                        
       FFS_OPT_TYP        ,                        
       FFS_STRK_PRC       ,                        
       FFS_LMT_MRKT_FLG   ,                        
       FFS_LMT_RT         ,                        
       FFS_ORDR_TOT_QTY   ,                        
       FFS_CLS_TIME       ,                        
       FFS_CONF_REQ       ,                       
       FFS_INS_DT         ,                        
       FFS_CONSENT_DATE       
    )
   (
       SELECT  FFS_CLM_MTCH_ACCNT ,                      
               FFS_XCHNG_CD       ,                        
               FFS_PRDCT_TYP      ,                        
               FFS_UNDRLYNG       ,                        
               FFS_EXPRY_DT       ,                        
               FFS_EXER_TYP       ,                        
               FFS_OPT_TYP        ,                        
               FFS_STRK_PRC       ,                        
               FFS_LMT_MRKT_FLG   ,                        
               FFS_LMT_RT         ,                        
               FFS_ORDR_TOT_QTY   ,                        
               FFS_CLS_TIME       ,                        
               FFS_CONF_REQ       ,                       
               FFS_INS_DT         ,                        
               FFS_CONSENT_DATE              
         FROM FFS_FO_FLASH_DISCRYP
        WHERE FFS_INS_DT <= add_months(current_date,-3) 
         
   );

   if( SQLCODE != 0 )
   {
     fn_errlog(c_ServiceName,"S31930",SQLMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
     return;
   }

     fn_userlog(c_ServiceName,"Before delete Data From  FFS_FO_FLASH_DISCRYP History.");

   EXEC SQL
      DELETE FFS_FO_FLASH_DISCRYP
      WHERE FFS_INS_DT <= add_months(current_date,-3);

   if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
   {
     fn_errlog(c_ServiceName,"S31935",SQLMSG,c_errmsg);
     fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
     return;
   }
   fn_userlog (c_ServiceName," After deleting Data From  FFS_FO_FLASH_DISCRYP"); 

   if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
   {
    fn_errlog(c_ServiceName,"S31940",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, "Unable to commit transaction- Contact system support",'Y');
    return;
   } 
 }
 else
 {
	fn_exit( c_ServiceName, i_trnsctn, "No Data Found To Update History", 'Y' );
 }
}
/**** Ver 11.1 Ends ****/

/************************* 4.2 Starts **********************************/

int fn_chk_nri_adj(char *c_trd_dt,
                   char *c_xchng_cd)
{
  char c_errmsg [ 256 ];
  char c_event [ 256 ];
	char c_prv_trd_dt[23];
  int i_nri_adj_success_flag = 0;

	 EXEC SQL
    SELECT MAX(fbc_trd_dt)
    INTO   :c_prv_trd_dt
    FROM   fbc_fo_brnch_cal
    WHERE  fbc_trd_dt < :c_trd_dt
      AND  fbc_xchng_cd = :c_xchng_cd;   /*** Added in Ver 8.2 ***/

  if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
  {
    fn_userlog(c_ServiceName,"Failed To Get Current Trade Date");
    return (-1);
  }

	fn_userlog(c_ServiceName,"Curent Trade Date Is :%s:",c_trd_dt);
	fn_userlog(c_ServiceName,"Previous Trade Date Is :%s:",c_prv_trd_dt);


  EXEC SQL
      SELECT   1
      INTO     :i_nri_adj_success_flag
      FROM     DUAL
      WHERE    EXISTS (SELECT APR_XCHNG_CD
                       FROM AUDIT_PROG_RUNSTTS
                       WHERE APR_PROG_NAME = 'bat_adj_nri'
                       and trunc(APR_TRD_DT) = :c_prv_trd_dt
                       and APR_SUCC_FLG = 'P'
                /***       and APR_XCHNG_CD ='NFO');   Commented in Ver 8.2 ***/
                       and APR_XCHNG_CD = :c_xchng_cd );  /*** Ver 8.2 ***/

  if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
  {
    fn_errlog(c_ServiceName, "S31945", SQLMSG, c_errmsg);
    sprintf(c_event, "Error in checking run of NRI -Adj process in a day");
    fn_bat_pst_msg( c_ServiceName, c_event, c_tag );
    return (-1);
  }
  else if ( SQLCODE == NO_DATA_FOUND )
  {
    i_nri_adj_success_flag = 0;
  }

	fn_userlog(c_ServiceName,"i_nri_adj_success_flag is :%d:",i_nri_adj_success_flag);

  if(i_nri_adj_success_flag != 1)
  {
    fn_errlog(c_ServiceName, "S31950", SQLMSG, c_errmsg);
    sprintf(c_event,"NRI Adjustment process not completed for <%s>-Process it first",c_trd_dt);
    fn_bat_pst_msg( c_ServiceName, c_event, c_tag );
    return (-1);
  }

return 0;

}

/************************* 4.2 Ends **********************************/

/*** Ver 8.9 starts here *****/
void fn_set_dlvry_prcnt(char *c_ServiceName,
                          char *c_errmsg,
                          char *c_xchng_cd,
                          char *c_date
                       )
{
 int i_trnsctn=0;
 int i_upd_flg=0;
 char c_max_fbc_trd_dt[12];
 char c_min_ftq_trd_dt[12];

 MEMSET(c_max_fbc_trd_dt);
 MEMSET(c_min_ftq_trd_dt);

 i_trnsctn=0;

 i_upd_flg=0;

  if( exp_dt_prs == 'Y' && (strcmp(c_xchng_cd,"NFO") == 0)) /*** Expiry Date Specific Contract Housekeep ***/
  {
     
     /***  commented in ver 9.0
      EXEC SQL
      SELECT count(1)
        INTO :i_upd_flg
        FROM DUAL
       WHERE to_date(:c_date,'dd-Mon-yyyy') = ( Select to_date(min(FTQ_EXPRY_DT),'dd-Mon-yyyy') AS min_expry_dt from ftq_fo_trd_qt where FTQ_XCHNG_CD
='NFO' AND  FTQ_PRDCT_TYP='F' AND  FTQ_UNDRLYNG='NIFTY' and FTQ_EXPRY_DT >=trunc(sysdate));
     if ( SQLCODE != 0 )
     {
       fn_errlog(c_ServiceName,"S31955",SQLMSG,c_errmsg);
       fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
       return;
     }

       ******/
      
       /***** Ver 9.0 Starts ******/

      EXEC SQL
      SELECT TO_CHAR(MAX(FBC_TRD_DT),'DD-Mon-YYYY')
      INTO :c_max_fbc_trd_dt
      FROM FBC_FO_BRNCH_CAL,EXG_XCHNG_MSTR
      WHERE  EXG_XCHNG_CD = :c_xchng_cd
      /* AND   trunc(FBC_TRD_DT) < trunc(EXG_NXT_TRD_DT);		* Ver 10.0 Commented */
      AND   trunc(FBC_TRD_DT) < to_date(:c_date,'dd-Mon-yyyy');
 
     if ( SQLCODE != 0 )
     {
       fn_errlog(c_ServiceName,"S31960",SQLMSG,c_errmsg);
       fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
       return;
     }


      /* EXEC SQL
      SELECT TO_CHAR(MIN(FTQ_EXPRY_DT),'DD-Mon-YYYY')
      INTO :c_min_ftq_trd_dt
      FROM FTQ_FO_TRD_QT
      WHERE FTQ_XCHNG_CD='NFO'
      AND  FTQ_PRDCT_TYP='F'
      AND  FTQ_UNDRLYNG='NIFTY';

     if ( SQLCODE != 0 )
     {
       fn_errlog(c_ServiceName,"S31965",SQLMSG,c_errmsg);
       fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
       return; 
     }

     if(strcmp(c_max_fbc_trd_dt,c_min_ftq_trd_dt)==0)
     {
      i_upd_flg=1;  
     }
     else
     {
      i_upd_flg=0;
     }

     fn_userlog(c_ServiceName," i_upd_flg :%d:",i_upd_flg);

     ******* Ver 9.0 Ends ************
 

     if( i_upd_flg > 0 )
     {				*** Commented in Ver 10.0 ***/
      fn_userlog(c_ServiceName,"Reseting the DLVRY_MRGPRCNT Value to Zero");


      i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
      if ( i_trnsctn == -1 )
      {
        fn_errlog(c_ServiceName,"S31970",LIBMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn, "Unable to start transaction - Contact system support",'N');
        return;
      }

      EXEC SQL
         /* UPDATE FSP_FO_SYSTM_PRMTR
         SET    FSP_DLVRY_MRGPRCNT = 0;			* Ver 10.0 */
        /*** Ver 10.0 Starts ***/
        UPDATE  FLM_FO_LODM_MSTR
        SET     FLM_TODAYS_LODM_PERCNT = 0,
                FLM_DLVRYENBL_FLG='N',        /*** Ver 10.3 ***/
                FLM_PRVSLN_PRCSRUN_FLG='N'    /*** Ver 10.3 ***/
        WHERE   FLM_EOS_DT = to_date( :c_max_fbc_trd_dt, 'DD-Mon-yyyy');
        /*** Ver 10.0 Ends ***/
      if ( SQLCODE != 0 )
      {
        fn_errlog(c_ServiceName,"S31975",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
        return; 
      }

      if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
      {
        fn_errlog(c_ServiceName,"S31980",LIBMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn, "Unable to commit transaction- Contact system support",'Y');
        return;
      }

    /* }  Commented In ver 10.0 ***/
    }

}

/*** Ver 8.9 Ends Here ***/


/*** Ver 4.6 starts ***/
void fn_prcs_excptnlist(  char *c_ServiceName, 
													char *c_errmsg, 
													char *c_xchng_cd, 
													char *c_date,
													char *c_undrlyng )
{
  int i_rec_cnt = 0;
  int i_trnsctn=0;

  EXEC SQL
    SELECT count(rowid)
    INTO   :i_rec_cnt
    FROM   foe_fo_oplus_excpmstr
    WHERE  foe_expry_dt < DECODE(:exp_dt_prs,'N',(foe_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND    TRIM(foe_undrlyng) = TRIM(DECODE(:und_prs,'N',foe_undrlyng,:c_undrlyng))
    AND    foe_xchng_cd = :c_xchng_cd;

  if ( SQLCODE != 0 )  
  {
    fn_errlog(c_ServiceName,"S31985",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'N');
    return;
  }
    
  if( i_rec_cnt == 0 )
  {
    fn_errlog(c_ServiceName,"S31990",LIBMSG,c_errmsg);
    fn_exit( c_ServiceName, i_trnsctn,"No Data Found In Favorites To Update History", 'N' );
    return;
  }
  else
  {
    sprintf( c_errmsg, "No. of contracts updating in exception master:%ld:",i_rec_cnt );
    fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
  }

  i_trnsctn=0;
  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31995",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, "Unable to start transaction - Contact system support",'N');
    return;
  }

  EXEC SQL
    UPDATE  foe_fo_oplus_excpmstr
		SET			foe_flag = 'N'
    WHERE   foe_xchng_cd = :c_xchng_cd
    AND     foe_expry_dt < DECODE(:exp_dt_prs,'N',(foe_expry_dt+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND     TRIM(foe_undrlyng) = TRIM(DECODE(:und_prs,'N',foe_undrlyng,:c_undrlyng));

  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S32000",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
    return;
  }
  
  if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
  {
    fn_errlog(c_ServiceName,"S32005",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, "Unable to commit transaction- Contact system support",'Y');
    return;
  }
}
/*** Ver 4.6 ends ***/

/*** Ver 4.7 Starts Here ***/

int fn_chk_vtc_prcs(char *c_trd_dt,
                   char *c_xchng_cd)
{
  char c_errmsg [ 256 ];
  char c_event [ 256 ];
  char c_prv_trd_dt[23];
  int i_vtc_success_flag = 0;

   EXEC SQL
    SELECT MAX(fbc_trd_dt)
    INTO   :c_prv_trd_dt
    FROM   fbc_fo_brnch_cal
    WHERE  fbc_trd_dt < :c_trd_dt
      AND  fbc_xchng_cd = :c_xchng_cd;   /*** Added in Ver 8.2 ***/

  if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
  {
    fn_userlog(c_ServiceName,"Failed To Get Current Trade Date");
    return (-1);
  }

  fn_userlog(c_ServiceName,"Curent Trade Date Is :%s:",c_trd_dt);
  fn_userlog(c_ServiceName,"Previous Trade Date Is :%s:",c_prv_trd_dt);

  EXEC SQL
      SELECT   1
      INTO     :i_vtc_success_flag
      FROM     DUAL
      WHERE    EXISTS (SELECT APR_XCHNG_CD
                       FROM AUDIT_PROG_RUNSTTS
                       WHERE APR_PROG_NAME = 'bat_plc_vtc'
                       and trunc(APR_TRD_DT) = :c_prv_trd_dt
                       and APR_SUCC_FLG = 'P'
                       and APR_XCHNG_CD =:c_xchng_cd);

  if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
  {
    fn_errlog(c_ServiceName, "S32010", SQLMSG, c_errmsg);
    sprintf(c_event, "Error in checking run of FNO VTC process in a day");
    fn_bat_pst_msg( c_ServiceName, c_event, c_tag );
    return (-1);
  }
  else if ( SQLCODE == NO_DATA_FOUND )
  {
    i_vtc_success_flag = 0;
  }

  fn_userlog(c_ServiceName,"i_vtc_success_flag is :%d:",i_vtc_success_flag);
   if(i_vtc_success_flag != 1)
  {
    fn_errlog(c_ServiceName, "S32015", SQLMSG, c_errmsg);
    sprintf(c_event,"FNO VTC Order Placement process not completed for <%s>-Process it first",c_trd_dt);
    fn_bat_pst_msg( c_ServiceName, c_event, c_tag );
    return (-1);
  }

return 0;

}

/*** Ver 4.7 Ends Here ***/


/** start Ver 5.4 **/

int fn_del_fbd(char *c_xchng_cd)
{
	int i_rec_cnt = 0;
  int i_trnsctn=0;
  char c_errmsg [ 256 ];

	 i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
	  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S32020",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, "Unable to start transaction - Contact system support",'N');
    return 1;
  }
  
  fn_userlog(c_ServiceName,"Inside Function to  del Fbd records for exchange code :%s:",c_xchng_cd); /*** Ver 8.2 ***/

  EXEC SQL	
	INSERT INTO FBD_FO_BNK_DRCR_HSTRY
	(
		FBD_XCHNG_CD,
		FBD_TRD_DT,
		FBD_GRP_ID,
		FBD_BILL_NO,
		FBD_CLM_MTCH_ACCNT,
		FBD_PAYIN_DT,
		FBD_PAYOUT_DT,
		FBD_DC_FLG,
		FBD_DC_AMT,
		FBD_PI_PO_AMT,
		FBD_INT_ADJ_AMT,
		FBD_WRITEOFF_FLG
		)
		SELECT 
		FBD_XCHNG_CD,
		FBD_TRD_DT,
		FBD_GRP_ID,
		FBD_BILL_NO,
		FBD_CLM_MTCH_ACCNT,
		FBD_PAYIN_DT,
		FBD_PAYOUT_DT,
		FBD_DC_FLG,
		FBD_DC_AMT,
		FBD_PI_PO_AMT,
		FBD_INT_ADJ_AMT,
		FBD_WRITEOFF_FLG
		FROM FBD_FO_BNK_DRCR
		WHERE (FBD_DC_AMT-FBD_PI_PO_AMT-FBD_INT_ADJ_AMT)=0
		AND    FBD_TRD_DT < ADD_MONTHS(SYSDATE,-3)
    AND    FBD_XCHNG_CD = :c_xchng_cd;  /*** Added in Ver 8.2 ***/
	 
  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S32025",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
    return 1;
  }
  EXEC SQL 
	DELETE FROM FBD_FO_BNK_DRCR
		WHERE (FBD_DC_AMT-FBD_PI_PO_AMT-FBD_INT_ADJ_AMT)=0
		AND    FBD_TRD_DT < ADD_MONTHS(SYSDATE,-3)
    AND    FBD_XCHNG_CD = :c_xchng_cd;  /*** Added in Ver 8.2 ***/

   	 
  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S32030",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
    return 1;
  }
  if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
  {
    fn_errlog(c_ServiceName,"S32035",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn, "Unable to commit transaction- Contact system support",'Y');
    return 1;
  }

 return 0;
}
/* Ver 5.4 end */

/**** Ver 6.1 Starts ***************/
int fn_del_fbl(char *c_xchng_cd)
{
  int i_rec_cnt = 0;
  int i_trnsctn=0;
  char c_errmsg [ 256 ];
	char c_date[12];
	MEMSET(c_date);
  fn_userlog(c_ServiceName,"Inside Function to  del Fbc records for exchange code :%s:",c_xchng_cd);	
	
	EXEC SQL
  /*** commented in ver 7.4	**** select min(dt) *** Ver 6.6 ***
  select NVL(min(dt),sysdate)          *******VER 6.6*****
	INTO  :c_date
	FROM	(select count(1),trunc(FBL_TIME) dt
				from FBL_FO_BHAVCP_LOG
        WHERE FBL_XCHNG_CD=:c_xchng_cd
				group by trunc(FBL_TIME)
				order by trunc(FBL_TIME) desc ) a
				where rownum <= 7 ; 			
	****** commented in ver 7.4	****/
	/*** Added in ver 7.4 ***/
  select  min(trunc(FBC_TRD_DT))
  INTO    :c_date
  from    FBC_FO_BRNCH_CAL
  where   FBC_TRD_DT>=trunc(sysdate-91)
  /*** and     FBC_XCHNG_CD='NFO'  Commented in Ver 8.2 ***/
  and     FBC_XCHNG_CD= :c_xchng_cd   /*** Ver 8.2 ***/
  and     FBC_GRP_ID='1';
  /*** Added in ver 7.4 ***/
	 if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S32040",SQLMSG,c_errmsg);
    return 1;
  }
	fn_userlog(c_ServiceName,"FBL Last 3 month's trading day date :%s:",c_date);

	EXEC SQL
	DELETE FROM FBL_FO_BHAVCP_LOG 
	WHERE FBL_XCHNG_CD=:c_xchng_cd
  AND   trunc(FBL_TIME) < :c_date; 
					
  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S32045",SQLMSG,c_errmsg);
    return 1;
  }
	fn_userlog(c_ServiceName,"After deleting Bhav copy Fbl records");	
	return 0;
}
/********* Ver 6.1 Ends ********/
/***** Ver 10.1 ********/
void fn_eos_excptn(char *c_ServiceName, char *c_errmsg,char *c_xchng_cd,char *c_date)
{
  char c_exg_date[12];
  int i_trnsctn=0;
  MEMSET(c_exg_date);
 
  EXEC SQL
  SELECT to_char(exg_nxt_trd_dt,'DD-MON-YYYY') 
  INTO :c_exg_date 
  FROM exg_xchng_mstr
  WHERE exg_xchng_cd = :c_xchng_cd;
 
  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
   fn_errlog(c_ServiceName,"S32050",SQLMSG,c_errmsg);
   return ;
  }
 
  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );

  if ( i_trnsctn == -1 )
  {
   fn_errlog(c_ServiceName,"S32055",LIBMSG,c_errmsg);
   fn_exit ( c_ServiceName, i_trnsctn, "Unable to start transaction - Contact system support",'N');
   return ;
  }


  EXEC SQL
  INSERT INTO FPE_FO_PHYEOS_EXCPTNMSTR_HSTRY
  (
   FPE_MTCH_ACCNT,   
   FPE_XCHNG_CD,     
   FPE_PRDCT_TYP,    
   FPE_UNDRLYNG,     
   FPE_EXPRY_DT,     
   FPE_OPT_TYP,      
   FPE_STRK_PRC,     
   FPE_UPLD_TM,      
   FPE_USER,         
   FPE_ACTV_FLG     
  )
   SELECT FPE_MTCH_ACCNT,
   FPE_XCHNG_CD,
   FPE_PRDCT_TYP,
   FPE_UNDRLYNG,
   FPE_EXPRY_DT,
   FPE_OPT_TYP,
   FPE_STRK_PRC,
   FPE_UPLD_TM,
   FPE_USER,
   FPE_ACTV_FLG
   FROM FPE_FO_PHYEOS_EXCPTNMSTR 
   WHERE trunc(FPE_UPLD_TM) < to_date(:c_exg_date,'DD-MON-YYYY'); 
  

  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
   fn_errlog(c_ServiceName,"S32060",SQLMSG,c_errmsg);
   fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
   return ;
  }

  EXEC SQL
  DELETE FROM FPE_FO_PHYEOS_EXCPTNMSTR ;
 
  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
   fn_errlog(c_ServiceName,"S32065",SQLMSG,c_errmsg);
   fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
   return ;
  }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
  {
   fn_errlog(c_ServiceName,"S32070",LIBMSG,c_errmsg);
   fn_exit ( c_ServiceName, i_trnsctn, "Unable to commit transaction- Contact system support",'Y');
   return ;
  }


 return ;
}

/*** ver 11.3 starts ************/

void fn_prcs_basketmrgnlist(  char *c_ServiceName,
                        char *c_errmsg,
                        char *c_xchng_cd,
                        char *c_date,
                        char *c_undrlyng )
{
  int i_rec_cnt = 0;
  int i_trnsctn=0;

 if(DEBUG_MSG_LVL_3)
 {
  fn_userlog(c_ServiceName,"Housekeep for Basket Margin Starts");
 }

  EXEC SQL
    SELECT count(rowid)
    INTO   :i_rec_cnt
    FROM   FBC_FO_BSKT_CNTRCT_MRGN
    WHERE  FBC_EXPRY_DT < DECODE(:exp_dt_prs,'N',(FBC_EXPRY_DT+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND    TRIM(FBC_UNDRLYNG) = TRIM(DECODE(:und_prs,'N',FBC_UNDRLYNG,:c_undrlyng))
    AND    FBC_XCHNG_CD = :c_xchng_cd;

  if ( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName,"S32075",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,
                         "System error - Contact System support",'N');
    return;
  }

  if( i_rec_cnt == 0 )
  {
    fn_errlog(c_ServiceName,"S32080",LIBMSG,c_errmsg);
    fn_exit( c_ServiceName, i_trnsctn,"No Data Found In Basket Margin List To Update History", 'N' );
    return;
  }
  else
  {
    sprintf( c_errmsg, "No. of contracts updating in MRGN_History Table :%ld:",i_rec_cnt);
    fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
  }

  i_trnsctn=0;
  i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S32085",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,"Unable to start transaction - Contact system support",'N');
    return;
  }
 
 if(DEBUG_MSG_LVL_3)
 {
  fn_userlog(c_ServiceName,"Insertion starting in History table for housekeeping of Basket Margin");
 }

 EXEC SQL

  INSERT INTO  FBC_FO_BSKT_CNTRCT_MRGN_HSTRY
  (
    FBC_USR_ID,
    FBC_CLM_MTCH_ACCNT,
    FBC_XCHNG_CD,
    FBC_PRDCT_TYP,
    FBC_INDSTK,
    FBC_UNDRLYNG,
    FBC_EXPRY_DT,
    FBC_EXER_TYP,
    FBC_OPT_TYP,
    FBC_STRK_PRC,
    FBC_ORDR_FLW,
    FBC_ORDR_TOT_QTY,
    FBC_LMT_MRKT_FLG,
    FBC_ORDR_TYPE,
    FBC_FRS_LMT_RT,
    FBC_CVR_LMT_RT,
    FBC_CVR_SLTP_RT,
    FBC_SRC_TYP,
    FBC_ORDR_RFRNC,
    FBC_BSKT_ID,
    FBC_INSRT_TM,
    FBC_ORDR_PLC_STTS
  )
  (
   SELECT 
    FBC_USR_ID,
    FBC_CLM_MTCH_ACCNT,
    FBC_XCHNG_CD,
    FBC_PRDCT_TYP,
    FBC_INDSTK,
    FBC_UNDRLYNG,
    FBC_EXPRY_DT,
    FBC_EXER_TYP,
    FBC_OPT_TYP,
    FBC_STRK_PRC,
    FBC_ORDR_FLW,
    FBC_ORDR_TOT_QTY,
    FBC_LMT_MRKT_FLG,
    FBC_ORDR_TYPE,
    FBC_FRS_LMT_RT,
    FBC_CVR_LMT_RT,
    FBC_CVR_SLTP_RT,
    FBC_SRC_TYP,
    FBC_ORDR_RFRNC,
    FBC_BSKT_ID,
    FBC_INSRT_TM,
    FBC_ORDR_PLC_STTS
    FROM   FBC_FO_BSKT_CNTRCT_MRGN
    WHERE  FBC_EXPRY_DT < DECODE(:exp_dt_prs,'N',(FBC_EXPRY_DT+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND    TRIM(FBC_UNDRLYNG) = TRIM(DECODE(:und_prs,'N',FBC_UNDRLYNG,:c_undrlyng))
    AND    FBC_XCHNG_CD = :c_xchng_cd
  );
  if( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName,"S32090",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,
                          "System error - Contact System support",'Y');
    return;
  }

  if(DEBUG_MSG_LVL_3)
  {
   fn_userlog(c_ServiceName,"Insertion in History table completed for housekeeping of Basket Margin");
  }

  EXEC SQL
    DELETE  FBC_FO_BSKT_CNTRCT_MRGN
    WHERE   FBC_XCHNG_CD = :c_xchng_cd
    AND     FBC_EXPRY_DT < DECODE(:exp_dt_prs,'N',(FBC_EXPRY_DT+1),to_date(:c_date,'dd-Mon-yyyy'))
    AND     TRIM(FBC_UNDRLYNG) = TRIM(DECODE(:und_prs,'N',FBC_UNDRLYNG,:c_undrlyng));

  if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName,"S32095",SQLMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,"System error - Contact System support",'Y');
    return;
  }

  if(DEBUG_MSG_LVL_3)
  {
   fn_userlog(c_ServiceName,"Delete from FBC_MRGN table completed for housekeeping of Basket Margin");
  }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
  {
    fn_errlog(c_ServiceName,"S32100",LIBMSG,c_errmsg);
    fn_exit ( c_ServiceName, i_trnsctn,"Unable to commit transaction- Contact system support",'Y');
    return;
  }
}
/*** ver 11.3 ends ************/


/*** Ver 11.4 starts ***/

void fn_prcs_gtt(char* c_ServiceName, char* c_errmsg, char* c_xchng_cd, char* c_date, char* c_undrlyng)
{       
        int i_rec_cnt = 0;
        int i_trnsctn=0;

        EXEC SQL
        SELECT count(rowid)
        INTO   :i_rec_cnt
        FROM   FGL_FO_GTT_LEGDTLS
        WHERE  FGL_EXPRY_DT < DECODE(:exp_dt_prs,'N',(FGL_EXPRY_DT+1),to_date(:c_date,'dd-Mon-yyyy'))
        AND    TRIM(FGL_UNDRLYNG) = TRIM(DECODE(:und_prs,'N',FGL_UNDRLYNG,:c_undrlyng))
        AND    FGL_XCHNG_CD = :c_xchng_cd;

        if ( SQLCODE != 0 )
        {
        fn_errlog(c_ServiceName,"S32105",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,
                        "System error - Contact System support",'N');
        return;
        }

        if( i_rec_cnt == 0 )
        {
        fn_errlog(c_ServiceName,"S32110",LIBMSG,c_errmsg);
        fn_exit( c_ServiceName, i_trnsctn,
                "No Data Found In GTT To Cancel", 'N' );
        return;
        }
        else
        {
        sprintf( c_errmsg, "No. of gtt requests to cancel :%ld:",
                                                                i_rec_cnt );
        fn_bat_pst_msg ( c_ServiceName, c_errmsg, c_tag );
        }
        i_trnsctn=0;
        i_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
        if ( i_trnsctn == -1 )
        {
        fn_errlog(c_ServiceName,"S32115",LIBMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,
                "Unable to start transaction - Contact system support",'N');
        return;
        }

        EXEC SQL
        UPDATE  FGL_FO_GTT_LEGDTLS
        SET FGL_GTT_STTS = 'c'
        WHERE  FGL_EXPRY_DT < DECODE(:exp_dt_prs,'N',(FGL_EXPRY_DT+1),to_date(:c_date,'dd-Mon-yyyy'))
        AND    TRIM(FGL_UNDRLYNG) = TRIM(DECODE(:und_prs,'N',FGL_UNDRLYNG,:c_undrlyng))
        AND    FGL_XCHNG_CD = :c_xchng_cd;

        if( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
        {
        fn_errlog(c_ServiceName,"S32120",SQLMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,
                        "System error - Contact System support",'Y');
        return;
        }

        if ( fn_committran( c_ServiceName, i_trnsctn, c_errmsg ) == -1 )
        {
        fn_errlog(c_ServiceName,"S32125",LIBMSG,c_errmsg);
        fn_exit ( c_ServiceName, i_trnsctn,
                        "Unable to commit transaction- Contact system support",'Y');
        return;
        }
}


/*** Ver 11.4 ends ***/
