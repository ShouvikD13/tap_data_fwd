/*******************************************************************************
*  Program           : bat_fo_opt_pricing.pc                                   *
*                                                                              *
*  Description       : To Calculate Trade wise brokerage                       *  
*                                                                              *
*  Input Parameters  :	NFO NFO NA <Run Date><Run Mode>  											 *
*                                                                              *
*  Change Log        : 1.0   09-Nov-2010  Nitin Save|Infotech                  *
*  Change Log        : 1.1   21-Mar-2012  Nitin Save|Infotech                  *
*  Change Log        : 1.2   17-Aug-2012  Sandip Tambe| Infotech               *
*  Change Log        : 1.3   22-Feb-2013  Sandip Tambe| Infotech               *
*  Change Log        : 1.4   05-Dec-2013  Navina D| Infotech                   *
*  Change Log        : 1.5   07-Sep-2014  Sachin B| Infotech                   *
*  Change Log        : 1.6   22-Sep-2014  Sandip T| Infotech                   *
*  Change Log        : 1.7   05-Jan-2015  Sandip T| Infotech                   *
*  Change Log        : 1.9   11-Aug-2015	Samip M| Infotech										 *
*  Change Log        : 2.0   17-Aug-2015  Ritesh D| Infotech                   *
*  Change Log        : 2.1   29-Oct-2015  Sandip T| Infotech                   *
*  Change Log        : 2.2   26-Nov-2015  Sachin B| Infotech                   *
*  Change Log        : 2.3   08-Sep-2017  Tanmay P| Infotech                   *
*  Change Log        : 2.4   02-May-2018  Anand Dhopte                         *
*  Change Log        : 2.5   15-May-2018  Tanmay Patel                         *        
*  Change Log        : 2.6   04-Jul-2019	Samip M| Infotech										 *
*  Change Log        : 2.7   18-Sep-2019  Anuj Pancholi                        *  
*  Change Log        : 2.8   22-Dec-2019  Sandip Tambe                         *  
*  Change Log        : 2.9   08-Oct-2020  Akash B                              *
*  Change Log        : 3.0   28-Dec-2020  Akash B                              *
*  Change Log        : TOL   23-Aug-2023  Agam                                 *
********************************************************************************
*  1.0    -  New Release                                                       *
*  1.1    -  BSE-FNO -Exchange Code Change                                     *
*  1.2    -  ATS customer handling                                             * 
*  1.3    -  OPM CHANGES                                                       * 
*  1.4    -  OptionPlus handling                                               * 
*  1.5    -  View to FML Changes                                               * 
*  1.6    -  CR-ISEC14-55222_I_Gain_Profit_Pricing_Model                       * 
*  1.7    -  CN download check added before running OPM/I-Gain Mapping process *
*  1.9    -  Changes for Bullet Scheme																				 *
*  2.0    -  Contract Master and Trade Quote Table Merger Changes              *
*  2.1    -  Transaction Time Changes                                          *
*  2.2    -  OptionPlus Conversion Dummy Trade Changes                         *
*  2.3    -  Bullet Brokerage Pricing Scheme Phase 2                           *
*  2.4    -  Bullet Trial Map through Bulk Upload                              *
*  2.5    -  Optimization                                                      *
*  2.6    -  Transaction Time Changes                                          *
*  2.7    -  CR-ISEC18-127043 Removal of Igain Scheme                          * 
*  2.8    -  Option 20 CR change                                               *
*  2.9    -  FULL and Lite Brokerage model changes                             *
*  3.0    -  NEO Phase 2 Changes                                               * 
*  TOL    -  Tux On Linux                                                      * 
*******************************************************************************/

/* Header Files */

#include<stdio.h>
#include<string.h>
#include<sqlca.h>
#include<atmi.h>
#include <string.h>
#include <stdlib.h>
#include<fo.h>
#include<fml32.h>
#include<fn_log.h>
#include<fn_tuxlib.h>
#include<fn_battmpt.h>
#include<fml_def.h>
#include<fo_fml_def.h>
#include<fn_ddr.h>
/** #include<fo_view_def.h> ** Ver 1.5 **/
#include <fn_read_debug_lvl.h>
#include <time.h>
#include<fn_igain_process_lib.h>	/** Ver 1.6 **/
#include <fn_pp_card.h> /*** Ver 2.4 ***/
#include<fn_env.h> 
#include <sys/time.h>                   /* Added in Ver TOL */

#define TRAN_TIME 6000			/** Ver 2.1 **//** Changed to 2400 from 1200 for Ver 2.6 **/
# define SQLCODE	sqlca.sqlcode 
# define SQLMSG  sqlca.sqlerrm.sqlerrmc 
# define SQLROWCOUNT  sqlca.sqlerrd[2] 
# define NO_DATA_FOUND 1403 
# define SETLEN(a)	a.len = strlen((char *)a.arr) 
# define SETNULL(a)	a.arr[a.len]='\0' 
# define MASTER_COMMIT_INTERVAL 50
#define MAX_LENGTH  1000  /*** Ver 2.4 ***/
#define EQ_CONTRACT "EQ_CONTRACT.ini" /*** Ver 2.4 ***/

EXEC SQL INCLUDE "table/osm_option_scheme_mstr.h";  /** Ver 1.6 **/
EXEC SQL INCLUDE "table/iod_igain_ordr_dtls.h";  /** Ver 1.6 **/
EXEC SQL INCLUDE "table/itd_igain_trd_dtls.h";  /** Ver 1.6 **/
EXEC SQL INCLUDE "table/usr_user_master.h";  /** Ver 1.6 **/
EXEC SQL INCLUDE "table/uac_usr_accnts.h";  /** Ver 1.6 **/


int func_calc_brkg_total(int p_obc_sqr_lot, int p_obc_carry_fwd_lot ,char * c_obc_clm_mtch_accnt, char * c_obc_ordr_rfrnc,                            char * c_otd_schm_code);  /** Schm_code Addded in Ver 2.5 **/

int fn_upd_ord_ref(char * c_ServiceName,char *c_date , char * c_err_msg);		/** Ver 1.2 ***/
int fn_upd_min_lot_size(char *c_ServiceName,char *c_xchng_cd,char *c_date,char *c_err_msg);								 /** Ver 1.2 ***/
/*int fn_populate_itd_iod(char *,char *,char *,char *); * Ver 1.6 **
int fn_cal_igain_brkg(char *,char *,char *,char *); * Ver 1.6 **
int fn_eos_dtls(char *,char *,char *,char *);       * Ver 1.6 **/
int fn_process_bullet(char *, char *, char *, char *); /** Ver 1.9 **/
int fn_cal_op20_brkg(char *, char *, char *, char *); /** Ver 2.8 **/
int fn_cal_lite_brkg(char *, char *, char *, char *); /** Ver 2.9 **/
void fn_gettime(void);
char c_time[12];

/* ------------------------------------------------------------------------------ */

  EXEC SQL BEGIN DECLARE SECTION;

	int  			i_trnsctn=0;
  char 			c_err_msg[256]={0};
  char 			c_ServiceName[256]={0};
  varchar   c_otd_clm_mtch_accnt[11];
  char      c_otd_xchng_cd[4]; /* Added in Ver 1.1 */
  char 		  c_xchng_cd[4];     /* Added in Ver 1.1 */
  char    	c_otd_prdct_typ;
  char    	c_otd_indstk;
  varchar 	c_otd_undrlyng[10];
  varchar 	c_otd_expry_dt[21];
  char    	c_otd_exer_typ ;
  char    	c_otd_opt_typ ;
  char      c_otd_schm_code[9];  /** Ver 2.5 **/
  int  	    i_otd_strk_prc = 0 ;
  int     	i_otd_buy_sum_qty = 0;
  int   		i_otd_sell_sum_qty = 0;
  int   		i_otd_carry_fwd_qty = 0;

  int   		i_carry_fwd_qty = 0;
  int       i_lot_upd_qty = 0;

  char c_obc_xchng_cd[4]; /* Added in Ver 1.1 */
  varchar 	c_obc_clm_mtch_accnt[11];
  varchar 	c_obc_trd_time[21];
  varchar 	c_obc_eba_trd_ref[50];
  varchar 	c_obc_ordr_rfrnc[50];    

  int 			i_obc_buy_lot = 0;
  int 			i_obc_sell_lot = 0;
  int 			i_obc_buy_sqr_lot    = 0;
  int 			i_obc_sell_sqr_lot   = 0;
  int 			i_obc_carry_fwd_lot  = 0;
  int 			i_obc_buy_brkg  		 = 0;
  int 			i_obc_sell_brkg 		 = 0;
  int 			i_obc_carry_fwd_brkg = 0;

  double 		d_tot_obc_trd_lvl_brkg = 0.00; /** Added for rounding issue  **/
  double 		d_obc_total_brkg 			 = 0.00; /** Added for rounding issue  **/        
  double 		d_diff 								 = 0.00; /** Added for rounding issue  **/                  

  int 			i_returncode = 0;
  int       i_counter_1  = 0;
  int       i_counter_2    = 0;
  long      l_commit_counter = 0;
  long      l_master_loop_counter=0;

  int       i_diff_cnt = 0;  /** Added on 02-Aug-11  For decimal rounding issue **/

  long      l_otd_rec_cnt = 0;
  char      c_flg;
  char      c_date[12];
	char      c_ip_ats_flg='N';					/** Ver 1.2 ***/

  EXEC SQL END DECLARE SECTION;

	void fn_print_date_time(void);
	char *trim(char *str);
	char   		c_path[100];							/*** Ver 1.7 ***/
	char   		c_command[100];						/*** Ver 1.7 ***/
	int 			i_ch_val=0;								/*** Ver 1.3 ***/
	int 			i_gain_trd_cnt=0;					/*** Ver 1.6 ***/
	int  			i_cn_upload_stts=0;    		/*** Ver 1.7 ***/
  long long ll_iod_total_val=0;				/*** Ver 1.6 ***/
/* ------------------------------------------------------------------------------ */

  /*** Ver 2.4 Starts ***/

  char    c_err_skip[8];
  char    c_uid[50];
  char    c_pwd[50];
  
  /*** Ver 2.4 Ends ***/

  int fn_read_db_para_ini(void ); /*** Ver 2.4 ***/

 void bat_fo_opt_pricing (int argc, char *argv[])
 {                 /*     Main Function stars    */

  char c_rout_str[4];
  char c_msg[256]={0};
  char c_pgm_name[33];  /** Ver 2.9 **/
  char c_cmd_str[100];   /** Ver 2.9 **/
  char c_pipe_id[3];     /** Ver 2.9 **/
  char c_ini[4];         /** Ver 2.9 **/

  strcpy(c_ServiceName,argv[0]);
  /*sprintf(c_tag,"%s_na",argv[0]);*/

  strcpy(c_xchng_cd,argv[2]);  /* Added in ver 1.1 */
  fn_userlog (c_ServiceName,"Val of c_xchng_cd  <%s> ",c_xchng_cd);

  INITBATDBGLVL(argv[0]);

  fn_userlog (c_ServiceName,"====================================================");
  sprintf(c_msg,"Batch process %s is started",argv[0]);
  fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);
  fn_userlog (c_ServiceName,"Batch process %s is started",argv[0]);

  c_flg = argv[5][0];
  fn_userlog (c_ServiceName,"Val of rerun flag <%c> ",c_flg);
  strcpy(c_date,argv[4]);
  trim(c_date);
  fn_userlog (c_ServiceName,"Val of run date <%s> ",c_date);
  FBFR32  *ptr_fml_Sbuf;						/** Ver 1.3 ***/
  FBFR32  *ptr_fml_Rbuf;						/** Ver 1.3 ***/
	long  li_recvbuf = 0;			/** Ver 1.3 ***/	
	c_ip_ats_flg = argv[6][0];					 /*** Ver 1.2 ***/
  

 /* if ( argc != 6 ) 										*** Ver 1.2 comment **/
  if ( argc != 7 && argc !=5 )          /*** Ver 1.2 ***/ /*** Ver 1.6 condition added ***/
  {
    fn_userlog (c_ServiceName,"Invalid Arguments passed %d",argc);
    fn_bat_pst_msg ( c_ServiceName, "Invalid Number of Arguments", c_tag );
    fn_userlog (c_ServiceName,"Usage:%s NFO NFO NA <Run Date> <Rerun Flag> <run_typ[A-ATS,N-Normal]>",argv[0]);
    /** Here Rerun Flag = F -> Fresh Run and R -> Rerun mode in case of error in earlier run **/
		fn_userlog (c_ServiceName,"========= End of %s due to invalid argument   =========",argv[0]);   		return;													  /*** Ver 1.2 as BPS was  not getting updated **/ 
    exit(0);
  }

 /* fn_userlog(c_ServiceName,"Program Parameters:<%s><%s><%s><%s><%s><%c>",argv[0],argv[1],argv[2],argv[3],argv[4],argv[5][0]); ** Ver 1.2 Comment **/

  fn_userlog(c_ServiceName,"Program Parameters:<%s><%s><%s><%s><%s><%c><%c>",argv[0],argv[1],argv[2],argv[3],argv[4],argv[5][0],argv[6][0]);				/*** Ver 1.2 ***/

	/*** Ver 1.3 starts ***/
	if(argc == 5 && argv[4][0] =='M' )											/*** Ver 1.6 if condition added **/
	{
  	fn_userlog(c_ServiceName,"Program Parameters:<%s><%s><%s><%s><%c>",argv[0],argv[1],argv[2],argv[3],argv[4][0]);				/*** Ver 1.6 ***/

		/** Ver 2.8 comment ********
  	** Ver 1.7 Check for CN upload starts ***
		strcpy(c_path, tuxgetenv("FNO_HOME"));
		fn_userlog(c_ServiceName,"c_path =:%s",c_path);

  	EXEC SQL
    	SELECT max(fbc_trd_dt)
    	into   :c_date
    	FROM   fbc_fo_brnch_cal
    	WHERE  FBC_XCHNG_CD=:c_xchng_cd
    	AND    fbc_trd_dt < trunc(sysdate);

  	if(SQLCODE != 0)
  	{
      fn_errlog( c_ServiceName, "S31005", SQLMSG, c_err_msg );
      strcpy ( c_msg, "System error. Error Selecting Previous trade date.." );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return;
  	}

  	fn_userlog(c_ServiceName,"Previous trade date :%s:",c_date);

  	EXEC SQL
      SELECT count(rowid)
      into   :i_cn_upload_stts
      FROM PRD_PGM_RUN_DTLS
      WHERE PRD_PGM_NAME='cln_upl_fnocontr'
      AND  PRD_XCHNG_CD=decode(:c_xchng_cd,'NFO','NSE')
      AND  PRD_TRD_DT = :c_date
      AND  PRD_PGM_STATUS='P';

  	if(SQLCODE != 0)
  	{
      fn_errlog( c_ServiceName, "S31010", SQLMSG, c_err_msg );
      strcpy ( c_msg, "System error. Error Selecting Audit table.." );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return;
  	}
  	if(i_cn_upload_stts == 0 )
  	{
			sprintf(c_command,"ksh %s/igain_status_mailer.sh %s", c_path,c_date);
			fn_userlog(c_ServiceName,"c_command =:%s",c_command);
			system(c_command);
    	sprintf(c_msg,"CN Upload for :%s: not run Yet..Pls try after some time",c_date);
    	fn_errlog(c_ServiceName,"S31015",SQLMSG,c_err_msg);
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return;
  	}
  	** Ver 1.7  Check for CN upload ends ***/ /** Ver 2.8 comment ends ***/


  	ptr_fml_Sbuf  = (FBFR32 *)tpalloc("FML32", NULL, MIN_FML_BUF_LEN);
  	if ( ptr_fml_Sbuf == NULL )
  	{
    	fn_errlog( c_ServiceName, "S31020", TPMSG, c_err_msg  );
  	}

  	ptr_fml_Rbuf  = (FBFR32 *)tpalloc("FML32", NULL, MIN_FML_BUF_LEN);
  	if ( ptr_fml_Rbuf == NULL )
  	{
    	fn_errlog( c_ServiceName, "S31025", TPMSG, c_err_msg  );
  	}

     i_ch_val = tpcall ( "SFO_OPM_MAP",
        									(char *)ptr_fml_Sbuf,
         									0,
         									(char **)&ptr_fml_Rbuf,
         									&li_recvbuf,
         									0
       									);

    if ( i_ch_val == -1 )
    {
			fn_userlog(c_ServiceName,"SCHEME MAP process complete with ERROR. ");	
      fn_errlog( c_ServiceName, "S31030", LIBMSG, c_err_msg );
      strcpy ( c_msg, "System error. Contact system support. Continue...." );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
    }
		fn_userlog(c_ServiceName,"SCHEME MAP process completed.");	
  	fn_userlog (c_ServiceName,"Batch process %s completed",argv[0]);
  	fn_print_date_time();
  	fn_userlog (c_ServiceName,"==================End of %s =================",argv[0]);
	 	return ;
	} /** Ver 1.6 end of if condition ***/
	/*** Ver 1.3 Ends ***/
  /*** Ver 2.4 Starts ***/
  else if ( argc == 5 && argv[4][0] =='U' )
  {
     
  char    c_path_upl[250];
  char    c_path_upl1[250];
  char    c_ctl_upl[100];
  char    c_log_upl[100];
  char    c_ora_upl[100];
  char    c_loader_upl[MAX_LENGTH];
  char    c_tmp_date2[9];
  char    *ptr_c_tmp;
 
  char c_osr_mtch_accnt[11];
  char c_osr_schm_strt_dt[12];
  char c_osr_schm_end_dt[12];
 
  int i_ret = 0;
  long li_cntr = 0;

  sql_cursor   cur_bullet_stts_chng;
  
  FILE    *fp_upl,*fp_upl1;

  MEMSET(c_path_upl);
  MEMSET(c_path_upl1);
  MEMSET(c_loader_upl);
  MEMSET(c_osr_mtch_accnt);
  MEMSET(c_osr_schm_strt_dt);
  MEMSET(c_osr_schm_end_dt);

  if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"Inside insert into OSR using SQL Loader");
  }


  ptr_c_tmp = (char*)getenv("EBALOG_PATH");
  if (ptr_c_tmp == NULL)
  {
    errlog(c_ServiceName, "S31035", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
    fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
    return;
  }

   EXEC SQL
      SELECT to_char(sysdate,'yyyymmdd')
      INTO :c_tmp_date2
      from dual;

      rtrim(c_tmp_date2);

  sprintf(c_path_upl,"%s/%s/others/BCARD_%s.csv",tuxgetenv("EBALOG_PATH"),c_tmp_date2,c_tmp_date2);
  sprintf(c_path_upl1,"%s/%s/others/BCARD_%s.bad",tuxgetenv("EBALOG_PATH"),c_tmp_date2,c_tmp_date2); 

  MEMSET(c_ctl_upl);
  MEMSET(c_log_upl);

  sprintf(c_log_upl,"%s/%s/others/BCARD_%s.log",tuxgetenv("EBALOG_PATH"),c_tmp_date2,c_tmp_date2);
  sprintf(c_ctl_upl,"%s/%s/others/BCARD_%s.ctl",tuxgetenv("EBALOG_PATH"),c_tmp_date2,c_tmp_date2);

  fp_upl1=NULL;
  fp_upl1=fopen(c_path_upl,"r");  /*** checking if the file is present at specified location or not ****/
  if (fp_upl1 == NULL)
  {
    fn_userlog(c_ServiceName,"CSV file not found at specified location ...");
    errlog(c_ServiceName, "S31040", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
    fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
    return;
  }

  fp_upl=NULL;
  fp_upl=fopen(c_ctl_upl,"w");

  fprintf(fp_upl," LOAD DATA\n \
INFILE \"%s\"\n \
BADFILE \"%s\"\n \
APPEND INTO TABLE OSR_OPM_SUBS_RQST\n \
FIELDS TERMINATED by ',' OPTIONALLY ENCLOSED BY '\"'\n \
TRAILING NULLCOLS\n \
(\n \
OSR_CLM_MTCH_ACCNT,\n \
OSR_SCHEME_END_DT,\n \
OSR_CURRENT_SCHEME \"'NA'\",\n \
OSR_TO_SCHEME \"'BULLET'\",\n \
OSR_MAP_UNMAP_FLG \"'M'\",\n \
OSR_SUBSC_DT SYSDATE,\n \
OSR_CHANNEL \"'SYS'\",\n \
OSR_PRCS_FLG \"'N'\",\n \
OSR_PRDCT_FLG \"'B'\",\n \
OSR_SCHEME_START_DT SYSDATE,\n \
OSR_SCHEME_REMARK \"'NULL'\"\n \
)\n",c_path_upl,c_path_upl1);

  fclose(fp_upl);

  if(fn_read_db_para_ini() == -1)
  {
    fn_userlog(c_ServiceName,"Unable to read data from ini file.");
    errlog(c_ServiceName, "S31045", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
    return ;
  }

  MEMSET(c_ora_upl);
  strcpy(c_ora_upl,tuxgetenv("ORACLE_HOME"));
  sprintf(c_loader_upl,"%s/bin/sqlldr userid=%s/%s control=%s log=%s skip=1 errors=%s",c_ora_upl,c_uid,c_pwd,c_ctl_upl,c_log_upl,c_err_skip);

  if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"sql*Loader command is |%s|",c_loader_upl);
  }

  i_ret = system(c_loader_upl);
    if (i_ret == -1)
     {
      fn_userlog (c_ServiceName,"Error in fn_bullet_status_chng ");
      fn_errlog ( c_ServiceName, "S31050", TPMSG, c_err_msg  );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return ;
     }
  

  if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"sqlldr command done.....");
    fn_userlog(c_ServiceName,"Records inserted in OSR table from file ...");
  }

  EXEC SQL ALLOCATE :cur_bullet_stts_chng; 

  i_trnsctn =  tpbegin(TRAN_TIME, 0 )  ;              
  if ( i_trnsctn == -1 )
  {
    fn_userlog (c_ServiceName,"Error in initial begin transaction ");
    fn_errlog ( c_ServiceName, "S31055", TPMSG, c_err_msg  );
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
    return ;
  }

    EXEC SQL EXECUTE
      BEGIN
      OPEN :cur_bullet_stts_chng FOR
      SELECT OSR_CLM_MTCH_ACCNT,
             OSR_SCHEME_START_DT,
             OSR_SCHEME_END_DT
        FROM OSR_OPM_SUBS_RQST
       WHERE TRUNC(OSR_SUBSC_DT) = TRUNC(SYSDATE)
         AND OSR_TO_SCHEME ='BULLET'
         AND OSR_MAP_UNMAP_FLG = 'M'
         AND OSR_PRCS_FLG = 'N'
         AND OSR_PRDCT_FLG = 'B';  
  
    END;
    END-EXEC;

   while (1)
   {
    
    MEMSET(c_osr_mtch_accnt);
     EXEC SQL
     FETCH :cur_bullet_stts_chng
      INTO :c_osr_mtch_accnt,
           :c_osr_schm_strt_dt,
           :c_osr_schm_end_dt ;
  
     if ( SQLCODE != 0 )
     {
      if ( SQLCODE == NO_DATA_FOUND )
      {
        fn_userlog( c_ServiceName, "ALL Done");
        break;
      }
      fn_errlog ( c_ServiceName, "S31060", SQLMSG, c_err_msg  );
      tpabort(0); 
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return;
     }
 
     fn_userlog(c_ServiceName,"call for :%s:",c_osr_mtch_accnt);
     i_ret = fn_bullet_status_chng(c_ServiceName,c_osr_mtch_accnt,'U','M',c_osr_schm_strt_dt,c_osr_schm_end_dt,c_err_msg);
     if (i_ret == -1)
     {
      fn_userlog (c_ServiceName,"Error in fn_bullet_status_chng ");
      fn_errlog ( c_ServiceName, "S31065", TPMSG, c_err_msg  );
      tpabort(0);
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return ;
     }
    
     li_cntr++;
   }
  
   if( tpcommit(0) == -1 ) 
   {
    fn_userlog (c_ServiceName,"Error in commit transaction for OSR_OPM_SUBS_RQST");
    fn_errlog ( c_ServiceName, "S31070", SQLMSG, c_err_msg);
    tpabort(0);
    strcpy ( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
    return ;
   }
 
    fn_userlog(c_ServiceName,"Total :%ld: records processed for bullet map.",li_cntr);

    fn_userlog(c_ServiceName,"BULK SCHEME MAP process completed.");
    fn_userlog (c_ServiceName,"Batch process %s completed",argv[0]);
    fn_print_date_time();
    fn_userlog (c_ServiceName,"==================End of %s =================",argv[0]);
    return ;

  }
  /*** Ver 2.4 Ends ***/

 /**  fn_gettime();	
  fn_userlog( c_ServiceName, "bat_fo_opt_pricing process Start Time :%s:",c_time); ** Commented in Ver 2.5 ***/
	/*** Ver 1.2 Starts **/
	if(c_ip_ats_flg == 'A' )
	{
		if( fn_upd_min_lot_size(c_ServiceName,c_xchng_cd,c_date,c_err_msg) == -1 )
		{
	  	fn_userlog (c_ServiceName,"Error in Updating Lot Size in FAT_NSE Table ");
	  	fn_errlog ( c_ServiceName, "S31075", TPMSG, c_err_msg  );
	  	strcpy ( c_msg, "System error. Contact system support" );
	  	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	  	return ;
		}
	
		fn_userlog(c_ServiceName,"Lot Size Update Successfull for ATS Trades");

		if( fn_upd_ord_ref(c_ServiceName,c_date,c_err_msg) == -1 )
		{
	  	fn_userlog (c_ServiceName,"Error in Updating Order And trade reference ");
	  	fn_errlog ( c_ServiceName, "S31080", TPMSG, c_err_msg  );
	  	strcpy ( c_msg, "System error. Contact system support" );
	  	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	  	return ;
		}
		fn_userlog(c_ServiceName,"Order Ref generation Successfull for ATS Trades");
	}

	/**** Ver 1.2 Ends **/
  /*i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );  Ver 2.1 comment**/
  i_trnsctn =  tpbegin(TRAN_TIME, 0 )  ;							/**  ver 2.1 **/
  if ( i_trnsctn == -1 )
	{
	  fn_userlog (c_ServiceName,"Error in initial begin transaction ");
	  fn_errlog ( c_ServiceName, "S31085", TPMSG, c_err_msg  );
	  strcpy ( c_msg, "System error. Contact system support" );
	  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	  return ;
	}


  if(c_flg == 'R')
  {
	  fn_userlog( c_ServiceName, "bat_fo_opt_pricing process Run for Rerun cases ");
		if(c_ip_ats_flg == 'N' )				/** Ver 1.2 Added if else condition  ***/
		{
	  	EXEC SQL 
		  		UPDATE FTD_FO_TRD_DTLS
			  	SET FTD_BRKG = null,
							FTD_BRKG_TYPE = null					/*** Ver 1.9 **/
					WHERE FTD_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */
					AND  FTD_PRDCT_TYP in ('O','I','U') /* Product type 'I' added in Ver 1.4 *//*Ver 1.6 U */
					AND trunc(FTD_TRD_DT) = :c_date
					AND  FTD_BRKG is not null 
					AND  FTD_UPLD_MTCH_FLG = 'N'
					AND  nvl(FTD_BRKG_TYPE,'N') <> 'N';													/** ver 1.9 **/
					/*AND FTD_CLM_MTCH_ACCNT in (	SELECT DISTINCT CLM_MTCH_ACCNT  
																			FROM   CLM_CLNT_MSTR 
																			*WHERE  (CLM_BRKR_CMPT_FLG ='N' ** ver 1.6 comment ***
																			WHERE 
																			(
																				( CLM_BRKR_CMPT_FLG ='N' AND  FTD_PRDCT_TYP in ('O','I')) OR
																				(	nvl(CLM_IGAIN_FP_FLG,'N')='Y' AND FTD_PRDCT_TYP ='U' ) OR 
																				(	nvl(CLM_IGAIN_OP_FLG,'N')='Y'	AND FTD_PRDCT_TYP ='I')
																			)	** Ver 1.6 **
																		)**** Ver 1.9 comment **/

		}	/*** Ver 1.2 Starts **/
		else if (c_ip_ats_flg == 'A')
		{
			fn_userlog(c_ServiceName,"Updating Brokerage for ATS Customers in FAT ");
			EXEC SQL
					UPDATE FAT_FO_ATS_TRADES_NSE
					SET FAT_BRKG = null
					WHERE FAT_PRDCT_TYP = 'O'
					AND trunc(FAT_TRD_DT) = :c_date
					AND FAT_BRKG is not null
					AND FAT_CLM_MTCH_ACCNT in (select distinct ICD_CLNT_CD_ATS 
																		 from 	CLM_CLNT_MSTR,ICD_INFO_CLIENT_DTLS
																		 where  CLM_MTCH_ACCNT = ICD_CLNT_CD        
																		 and		ICD_ATS_STATUS = 'Y' 
																		 and  	CLM_BRKR_CMPT_FLG = 'N' 
																		) ;
		}	
	  if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
		{
		 	fn_userlog (c_ServiceName,"Error in updating FTD/FAT brokerage to null for rerun case ");
		 	fn_errlog ( c_ServiceName, "S31090", SQLMSG, c_err_msg  );
			tpabort(0); /** Ver 2.1  **/
		 	/*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** Ver 2.1 comment **/
  	 	strcpy ( c_msg, "System error. Contact system support" );
	   	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
		 	return;
		}
		/*** Ver 1.2 Ends ***/
  }
	/** Ver 1.6 starts ****/
	if(c_ip_ats_flg == 'N' )
	{
		EXEC SQL
			DELETE  FROM TTD_TMP_TRD_DTLS 
			WHERE TTD_XCHNG_CD=:c_xchng_cd;

			if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
			{
	 			fn_userlog (c_ServiceName,"Error in deleting existing records from TTD_TMP_TRD_DTLS ");
	 			fn_errlog ( c_ServiceName, "S31095", SQLMSG, c_err_msg  );
				tpabort(0); /** Ver 2.1  **/
	 			/*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** Ver 2.1 comment **/
   			strcpy ( c_msg, "System error. Contact system support" );
   			fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	 			return;
			}

		EXEC SQL
			DELETE FROM ITD_IGAIN_TRD_DTLS
			WHERE ITD_XCHNG_CD = :c_xchng_cd
			AND		trunc(ITD_TRD_DT)=:c_date;

			if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
			{
	 			fn_userlog (c_ServiceName,"Error in deleting existing records from ITD_IGAIN_TRD_DTLS ");
	 			fn_errlog ( c_ServiceName, "S31100", SQLMSG, c_err_msg  );
				tpabort(0); /** Ver 2.1  **/
	 			/*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** Ver 2.1 comment **/
   			strcpy ( c_msg, "System error. Contact system support" );
   			fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	 			return;
			}

		EXEC SQL
			DELETE FROM IOD_IGAIN_ORDR_DTLS 
			WHERE 	IOD_XCHNG_CD =:c_xchng_cd
			AND     trunc(IOD_ORDR_DT)	=:c_date;

			if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
			{
	 			fn_userlog (c_ServiceName,"Error in deleting existing records from IOD_IGAIN_ORDR_DTLS ");
	 			fn_errlog ( c_ServiceName, "S31105", SQLMSG, c_err_msg  );
				tpabort(0); /** ver 2.1 **/
	 			/*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); * ver 2.1 comment */
   			strcpy ( c_msg, "System error. Contact system support" );
   			fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	 			return;
			}
	 }
	/** Ver 1.6 Ends   ***/

  fn_userlog (c_ServiceName," c_xchng_cd :%s:",c_xchng_cd); /* Testing */
    fn_userlog (c_ServiceName," c_date :%s:",c_date); /* Testing */
    fn_userlog (c_ServiceName," c_ip_ats_flg :%:",c_ip_ats_flg); /* Testing */

  EXEC SQL 
			DELETE FROM OTD_OPTION_TRD_DTLS 
			WHERE OTD_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */
			AND OTD_TRD_DT = :c_date
			AND nvl(OTD_ATS_FLG,'N') = :c_ip_ats_flg;		/** Ver 1.2 ***/

		/*** Added OTD_TRD_DT filter for house keep skip issue **/
						
	if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
	{
	 fn_userlog (c_ServiceName,"Error in deleting existing records from OTD_OPTION_TRD_DTLS ");
	 fn_errlog ( c_ServiceName, "S31110", SQLMSG, c_err_msg  );
	 tpabort(0); /** Ver 2.1 **/
	 /*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** ver 2.1 comment */
   strcpy ( c_msg, "System error. Contact system support" );
   fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	 return;
	}

	EXEC SQL 
			DELETE FROM OBC_OPTION_BRKR_CMPT_TEMP
			WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */ 
		  AND nvl(OBC_ATS_FLG,'N') = :c_ip_ats_flg;   /** Ver 1.2 ***/
				
	if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
	{
	 fn_userlog (c_ServiceName,"Error in deleting existing records from OBC_OPTION_BRKR_CMPT_TEMP");
	 fn_errlog ( c_ServiceName, "S31115", SQLMSG, c_err_msg  );
	 tpabort(0); /** ver 2.1 **/
	 /*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** ver 2.1 comment */
   strcpy ( c_msg, "System error. Contact system support" );
   fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	 return;
	}
 	
	EXEC SQL 
			DELETE FROM OBC_OPTION_BRKR_CMPT 
			WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */ 
			AND trunc(OBC_TRD_TIME) = :c_date
			AND nvl(OBC_ATS_FLG,'N')= :c_ip_ats_flg ;     /** Ver 1.2 ***/

		/*** Added OBC_TRD_TIME filter for house keep skip issue **/

	if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
	{
	 fn_userlog (c_ServiceName,"Error in deleting existing records from OBC_OPTION_BRKR_CMPT");
	 fn_errlog ( c_ServiceName, "S31120", SQLMSG, c_err_msg  );
	 tpabort(0); /** Ver 2.1 **/
	 /*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** ver 2.1 comment */
	 strcpy ( c_msg, "System error. Contact system support" );
   fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	 return;
	}

	EXEC SQL 
			DELETE FROM OBC_OPTION_BRKR_CMPT_SMRY_TEMP
			WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */  
			AND nvl(OBC_ATS_FLG,'N')= :c_ip_ats_flg;   /** Ver 1.2 ***/

	if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
	{
	 fn_userlog (c_ServiceName,"Error in deleting existing records from OBC_OPTION_BRKR_CMPT_SMRY_TEMP");
	 fn_errlog ( c_ServiceName, "S31125", SQLMSG, c_err_msg  );
	 tpabort(0); /** Ver 2.1 **/
	 /*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** ver 2.1 comment*/
   strcpy ( c_msg, "System error. Contact system support" );
   fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	 return;
	}
		
	EXEC SQL 
			DELETE FROM OBC_OPTION_BRKR_CMPT_SMRY 
		  WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */ 
		  AND trunc(OBC_TRD_TIME) = :c_date
			AND nvl(OBC_ATS_FLG,'N')= :c_ip_ats_flg;   /** Ver 1.2 ***/  
		/*** Added OBC_TRD_TIME filter for house keep skip issue **/


	if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
	{
	 fn_userlog (c_ServiceName,"Error in deleting existing records from OBC_OPTION_BRKR_CMPT_SMRY");
	 fn_errlog ( c_ServiceName, "S31130", SQLMSG, c_err_msg  );
	 tpabort(0); /** ver 2.1 **/
	 /*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** ver 2.1 comment */
   strcpy ( c_msg, "System error. Contact system support" );
   fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	 return;
	}
	/*** Ver 1.2 Starts **/
  if(c_ip_ats_flg == 'A' )
	{
		EXEC SQL 
	  	 SELECT count(1)
				INTO :i_lot_upd_qty
      	FROM FAT_FO_ATS_TRADES_NSE 
				WHERE  trunc(FAT_TRD_DT) = :c_date
				AND FAT_PRDCT_TYP= 'O'								  
				AND FAT_MIN_LOT_SIZE is null;
	}
	else
	{														
	/** Ver 1.2 Ends **/ 
		EXEC SQL 
	  	 SELECT count(1)
				INTO :i_lot_upd_qty
      	FROM FTD_FO_TRD_DTLS ,clm_clnt_mstr					/** Ver 1.6 clm added **/
				WHERE  FTD_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */
				AND		FTD_CLM_MTCH_ACCNT = CLM_MTCH_ACCNT					/**  Ver 1.6 **/
				AND trunc(FTD_TRD_DT) = :c_date    /* Added in Ver 1.1 */
				AND FTD_PRDCT_TYP in ('O','I','U')		 /* Added in Ver 1.2 */ /*** Product type 'I' added in Ver 1.4 ***/	/**** Ver 1.6 product type 'U' added **/ /** to confirm ***/							  
			 /**AND (( CLM_BRKR_CMPT_FLG ='N' AND  FTD_PRDCT_TYP in ('O','I')) OR
					 (	nvl(CLM_IGAIN_FP_FLG,'N')='Y' AND FTD_PRDCT_TYP ='U' ) OR 
					 (	nvl(CLM_IGAIN_OP_FLG,'N')='Y'	AND FTD_PRDCT_TYP ='I') OR 
						(	nvl(clm_bullet_schm_flg,'N') ='Y' AND FTD_PRDCT_TYP in ('I','U'))) ** Ver 2.8 comment **/ /** Ver 1.6 **/ 		/** Ver 1.9 **/
				AND FTD_MIN_LOT_SIZE is null;
	}																				 /*** Ver 1.2 '}' added **/

  if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
  {
   fn_userlog (c_ServiceName,"Error in checking lot updation in Trdae table");
   fn_errlog ( c_ServiceName, "S31135", SQLMSG, c_err_msg  );
	 tpabort(0); /** Ver 2.1 **/
   /*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** ver 2.1 comment */
   strcpy ( c_msg, "System error. Contact system support" );
	 fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
   return ;
  }
		 
  if(i_lot_upd_qty > 0)
	{
	 fn_userlog (c_ServiceName,"Records not updated for lot qty in Trdae table");
   fn_errlog ( c_ServiceName, "S31140", SQLMSG, c_err_msg  );
	 tpabort(0); /** Ver 2.1 **/
   /*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** ver 2.1 comment */
	 strcpy ( c_msg, "Update lot size on trade book process has not run yet" );
   fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
   return ;
  }	
	/*** Ver 1.6 Starts ****/
	if(c_ip_ats_flg == 'N' )
	{
    /*** Ver 2.9 Starts ***/
		 fn_userlog(c_ServiceName,"Now calculating Lite Brokerage");

     i_ch_val =   fn_cal_lite_brkg(c_ServiceName,
                                     c_xchng_cd,
                                     c_date,
                                     c_err_msg
                                     );

     if(i_ch_val != 0 )
     {
      fn_userlog (c_ServiceName," Lite model  brokerage calculation failed.");
      fn_errlog ( c_ServiceName, "S31145", SQLMSG, c_err_msg  );
      tpabort(0);
      strcpy(c_msg," System error. Contact System Support ");
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return ;
     }
		 fn_userlog(c_ServiceName,"Calculating of Lite Brokerage Comepleted");
     strcpy(c_msg,"Calculating of Lite Brokerage Comepleted");
     fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

    /*** Ver 2.9 Ends ****/
		/** Ver 2.8 **/
		i_ch_val = fn_cal_op20_brkg (c_ServiceName,
																	c_xchng_cd,
																	c_date,
																	c_err_msg	
																  );
		if(i_ch_val != 0 )
		{
	 		fn_userlog (c_ServiceName," Option 20 brokerage calculation failed.");
   		fn_errlog ( c_ServiceName, "S31150", SQLMSG, c_err_msg  );
	 		tpabort(0); 
      strcpy(c_msg," System error. Contact System Support ");
			fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
   		return ;
		}
		/** Ver 2.8 ends **/
     strcpy(c_msg,"Calculating of Option 20 Brokerage Comepleted");
     fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

 
  
		/*** Ver 1.9 Starts ******/
		fn_userlog(c_ServiceName,"Now Creating Order and Trade Data for Bullet Scheme.");

		i_ch_val = fn_process_bullet (c_ServiceName,
																	c_xchng_cd,
																	c_date,
																	c_err_msg	
																  );
		if(i_ch_val != 0 )
		{
	 		fn_userlog (c_ServiceName,"Bullet order trade records creation failed.");
   		fn_errlog ( c_ServiceName, "S31155", SQLMSG, c_err_msg  );
	 		tpabort(0); /*** ver 2.1 **/
   		/*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** ver 2.1 comment */
      strcpy(c_msg," System error. Contact System Support ");
			fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
   		return ;
		}
    strcpy(c_msg,"Calculating of Bullet Brokerage Comepleted");
    fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

	  /** Commented in Ver 2.7 **	
	   
     *** Ver 1.9 Ends ***

		fn_userlog(c_ServiceName,"Now Creating Order and Trade Data for IGain.");
		i_ch_val =  fn_populate_itd_iod	( c_ServiceName,
																			c_xchng_cd,
																			c_date,
																			c_err_msg	
																   	 );
		if(i_ch_val != 0 )
		{
	 		fn_userlog (c_ServiceName,"IGain order trade records creation failed.");
   		fn_errlog ( c_ServiceName, "S31160", SQLMSG, c_err_msg  );
	 		tpabort(0); ** ver 2.1  **
   		*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** ver 2.1 comment *
   		return ;
		}
		fn_userlog(c_ServiceName,"ITD IOD Population completed.");
		i_ch_val = fn_cal_igain_brkg ( c_ServiceName,
																	 c_xchng_cd,
																	 c_date,
																	 c_err_msg
																 );
		if(i_ch_val != 0 )
		{
	 		fn_userlog (c_ServiceName,"IGain Brokerage Calculation Failed.");
   		fn_errlog ( c_ServiceName, "S31165", SQLMSG, c_err_msg  );
	 		tpabort(0); ** Ver 2.1 **
   		*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** ver 2.1 comment * 
   		return ;
		}
		fn_userlog(c_ServiceName,"Completed I-Gain Brokerage calculation.");
    
    *** comment Ends for Ver 2.7 **/
	}
	/*** Ver 1.6 Ends ****/
  /**********************************************************************************************************/
	/** Step 1:   To populate OTD_OPTION_TRD_DTLS table for specific clients marked with CLM_BRKR_CMPT_FLG= N 
                in CLM_CLNT_MSTR  */
  /**********************************************************************************************************/
  /* Replaced hard coding of exg code- NFO with: c_xchng_cd & Added FTD_XCHNG_CD in select & group by clause-in Ver 1.1 */
 if(c_ip_ats_flg == 'N')				 /** Ver 1.2 Added if else condition  ***/
 {
		fn_userlog(c_ServiceName,"Inside OTD insert for Normal Customer");	/** Ver 1.2 **/
  	EXEC SQL 
			INSERT INTO OTD_OPTION_TRD_DTLS
						 (OTD_XCHNG_CD,
							OTD_CLM_MTCH_ACCNT,
							OTD_BUY_SUM_QTY,
							OTD_SELL_SUM_QTY,
							OTD_PRDCT_TYP,
				 		  OTD_INDSTK,
							OTD_UNDRLYNG,
							OTD_EXPRY_DT,	
							OTD_EXER_TYP,
							OTD_OPT_TYP,
							OTD_STRK_PRC,
							OTD_TRD_DT,
				 			OTD_SCHM_CODE,
							OTD_MIN_LOT_SIZE,
							OTD_CARRY_FWD_QTY,
							OTD_PRCS_FLG,
							OTD_ATS_FLG												/** Ver 1.2 ***/
						 )
						 (
					 		SELECT  FTD_XCHNG_CD,
											FTD_CLM_MTCH_ACCNT,
											SUM(NVL(BUY_SUM_LOTS,0)),
											SUM(NVL(SELL_SUM_LOTS,0)),
											/*** 'O',  *** Commented in Ver 1.4 ***/
											FTD_PRDCT_TYP,		/*** Ver 1.4 ***/
						 					FTD_INDSTK,
											FTD_UNDRLYNG,
											FTD_EXPRY_DT,
											FTD_EXER_TYP,
											FTD_OPT_TYP,
											FTD_STRK_PRC,	
										  trunc(FTD_TRD_DT),
						 					CLM_OPT_SCHM_CD,
											FTD_MIN_LOT_SIZE,
											'0',
											'N',
											:c_ip_ats_flg															/** Ver 1.2 **/
					 		FROM
					 		     (
					      		SELECT  FTD_XCHNG_CD,
													  FTD_CLM_MTCH_ACCNT,
														FTD_PRDCT_TYP,		/*** Ver 1.4 ***/
														FTD_INDSTK,
														FTD_UNDRLYNG,
														FTD_EXPRY_DT,
														FTD_EXER_TYP,
														FTD_OPT_TYP,
														FTD_STRK_PRC,
													  FTD_TRD_DT,
														FTD_TRD_FLW,
														CLM_OPT_SCHM_CD,
														FTD_MIN_LOT_SIZE,			 
						     					 DECODE( FTD_TRD_FLW, 'B', SUM(FTD_EXCTD_QTY)/FTD_MIN_LOT_SIZE ) BUY_SUM_LOTS,        
						     					 DECODE( FTD_TRD_FLW, 'S', SUM(FTD_EXCTD_QTY)/FTD_MIN_LOT_SIZE ) SELL_SUM_LOTS
					      		FROM   FTD_FO_TRD_DTLS,CLM_CLNT_MSTR
					      		WHERE  FTD_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */  
										AND FTD_PRDCT_TYP in ('O','I') /*** Product type 'I' added in Ver 1.4 ***/
										AND    FTD_BRKG is null
										AND    trunc(FTD_TRD_DT) = :c_date /** Added for house keep skip issue **/
										AND    FTD_UPLD_MTCH_FLG = 'N'     /** Post UAT  **/
										AND FTD_CLM_MTCH_ACCNT = CLM_MTCH_ACCNT
										AND CLM_BRKR_CMPT_FLG = 'N'
										AND nvl(CLM_IGAIN_OP_FLG,'N') ='N'						/*** Ver 1.6 **/
										AND 	 nvl(ftd_brkg_type,'N')  ='N' 						/*** Ver 1.9 **/
					      		GROUP BY FTD_XCHNG_CD,FTD_CLM_MTCH_ACCNT,FTD_PRDCT_TYP,FTD_INDSTK,FTD_UNDRLYNG,FTD_EXPRY_DT,
														 FTD_EXER_TYP,FTD_OPT_TYP,FTD_STRK_PRC,FTD_TRD_DT,FTD_TRD_FLW,
														 CLM_OPT_SCHM_CD,FTD_MIN_LOT_SIZE		/*** FTD_PRDCT_TYP added in Ver 1.4 ***/
					      		ORDER BY FTD_CLM_MTCH_ACCNT,FTD_PRDCT_TYP,FTD_INDSTK,FTD_UNDRLYNG,FTD_EXPRY_DT,FTD_EXER_TYP,
														 FTD_OPT_TYP,FTD_STRK_PRC	/*** FTD_PRDCT_TYP added in Ver 1.4 ***/
					  	     )
					  	GROUP BY 
					  	/*** FTD_XCHNG_CD,FTD_CLM_MTCH_ACCNT,'O',FTD_INDSTK,FTD_UNDRLYNG,FTD_EXPRY_DT,
						  FTD_EXER_TYP,FTD_OPT_TYP,FTD_STRK_PRC, trunc(FTD_TRD_DT),CLM_OPT_SCHM_CD,
							FTD_MIN_LOT_SIZE,'0','N'  *** Commented in Ver 1.4 ***/
					  	FTD_XCHNG_CD,FTD_CLM_MTCH_ACCNT,FTD_PRDCT_TYP,FTD_INDSTK,FTD_UNDRLYNG,FTD_EXPRY_DT,
						  FTD_EXER_TYP,FTD_OPT_TYP,FTD_STRK_PRC, trunc(FTD_TRD_DT),CLM_OPT_SCHM_CD,
							FTD_MIN_LOT_SIZE,'0','N'	/*** Ver 1.4 ***/
				 	   );
	}		/*** Ver 1.2 Starts **/
	else if (c_ip_ats_flg == 'A' )
	{
		fn_userlog(c_ServiceName,"Inside OTD insert for ATS Customer");	/** Ver 1.2 **/
  	EXEC SQL 
			INSERT INTO OTD_OPTION_TRD_DTLS
						 (OTD_XCHNG_CD,
							OTD_CLM_MTCH_ACCNT,
							OTD_BUY_SUM_QTY,
							OTD_SELL_SUM_QTY,
							OTD_PRDCT_TYP,
				 		  OTD_INDSTK,
							OTD_UNDRLYNG,
							OTD_EXPRY_DT,	
							OTD_EXER_TYP,
							OTD_OPT_TYP,
							OTD_STRK_PRC,
							OTD_TRD_DT,
				 			OTD_SCHM_CODE,
							OTD_MIN_LOT_SIZE,
							OTD_CARRY_FWD_QTY,
							OTD_PRCS_FLG,
							OTD_ATS_FLG												
						 )
						 (
					 		SELECT  'NFO',
											FAT_CLM_MTCH_ACCNT,
											SUM(NVL(BUY_SUM_LOTS,0)),
											SUM(NVL(SELL_SUM_LOTS,0)),
											'O',
						 					FAT_INDSTK,
											FAT_UNDRLYNG,
											FAT_EXPRY_DT,
											FAT_EXRC_TYP,
											FAT_OPT_TYP,
											FAT_STRIKE_PRC,	
										  trunc(FAT_TRD_DT),
						 					CLM_OPT_SCHM_CD,
											FAT_MIN_LOT_SIZE,
											'0',
											'N',
											:c_ip_ats_flg			
					 		FROM
					 		     (
					      		SELECT  'NFO',
													  FAT_CLM_MTCH_ACCNT,
														FAT_INDSTK,
														FAT_UNDRLYNG,
														FAT_EXPRY_DT,
														FAT_EXRC_TYP,
														FAT_OPT_TYP,
														FAT_STRIKE_PRC,
													  FAT_TRD_DT,
														FAT_ORDR_FLW,
														CLM_OPT_SCHM_CD,
														FAT_MIN_LOT_SIZE,			 
						     					 DECODE( FAT_ORDR_FLW, 'B', SUM(FAT_EXCTD_QTY)/FAT_MIN_LOT_SIZE ) BUY_SUM_LOTS,        
						     					 DECODE( FAT_ORDR_FLW, 'S', SUM(FAT_EXCTD_QTY)/FAT_MIN_LOT_SIZE ) SELL_SUM_LOTS
					      		FROM   FAT_FO_ATS_TRADES_NSE,CLM_CLNT_MSTR,ICD_INFO_CLIENT_DTLS
					      		WHERE  FAT_PRDCT_TYP ='O'
										AND    trunc(FAT_TRD_DT) = :c_date
										AND 	 FAT_CLM_MTCH_ACCNT = ICD_CLNT_CD_ATS
										AND    CLM_MTCH_ACCNT = ICD_CLNT_CD
										AND    ICD_ATS_STATUS = 'Y'
										AND    FAT_BRKG is null
										AND    CLM_BRKR_CMPT_FLG = 'N'
					      		GROUP BY 'NFO',FAT_CLM_MTCH_ACCNT,FAT_INDSTK,FAT_UNDRLYNG,FAT_EXPRY_DT,
														 FAT_EXRC_TYP,FAT_OPT_TYP,FAT_STRIKE_PRC,FAT_TRD_DT,FAT_ORDR_FLW,
														 CLM_OPT_SCHM_CD,FAT_MIN_LOT_SIZE
					      		ORDER BY FAT_CLM_MTCH_ACCNT,FAT_INDSTK,FAT_UNDRLYNG,FAT_EXPRY_DT,FAT_EXRC_TYP,
														 FAT_OPT_TYP,FAT_STRIKE_PRC
					  	     )
					  	GROUP BY 
					  	'NFO',FAT_CLM_MTCH_ACCNT,'O',FAT_INDSTK,FAT_UNDRLYNG,FAT_EXPRY_DT,
						  FAT_EXRC_TYP,FAT_OPT_TYP,FAT_STRIKE_PRC, trunc(FAT_TRD_DT),CLM_OPT_SCHM_CD,
							FAT_MIN_LOT_SIZE,'0','N'
				 	   );

	}
	/*** ver 1.2 Ends **/
	if (DEBUG_MSG_LVL_3)
	{
	 fn_userlog (c_ServiceName," After insert in OTD_OPTION_TRD_DTLS <%ld>", SQLCODE);  
  }

  if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
	{
	 fn_userlog (c_ServiceName,"Error in inserting records in OTD_OPTION_TRD_DTLS -1 ");		
	 fn_errlog ( c_ServiceName, "S31170", SQLMSG, c_err_msg  );
	 /*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** ver 2.1 comment */
	 tpabort(0); /** Ver 2.1  **/
   strcpy ( c_msg, "System error. Contact system support" );
	 fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	 return ;
	}

  if(SQLROWCOUNT == 0)
	{			  
	 fn_userlog (c_ServiceName,"No data found to insert in OTD_OPTION_TRD_DTLS- count =0");	
	 /** Ver 1.6  check for igain trades **
	 EXEC SQL
			select count(1) 
			into :i_gain_trd_cnt
			from ITD_IGAIN_TRD_DTLS
			where trunc(itd_trd_dt)=:c_date;

	 if(SQLCODE !=0 )
	 {
	 	fn_errlog ( c_ServiceName, "S31175", SQLMSG, c_err_msg  );
	 	*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** ver 2.1 comment *
	  tpabort(0); ** Ver 2.1 **
   	strcpy ( c_msg, "Error in getting Igain trade count..");
	 	return ;
	 }
	 if(i_gain_trd_cnt >0 )
	 { 
		*if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 ) ** ver 2.1 comment **
		if( tpcommit(0) == -1 )		** ver 2.1  **
		{
	 		fn_userlog (c_ServiceName,"Error in commit trans of IGAIN brokerage update when no OPM trades");
	 		fn_errlog ( c_ServiceName, "S31180", SQLMSG, c_err_msg);
   		strcpy ( c_msg, "System error. Contact system support" );
	 		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	 		return ;
		}
		fn_userlog(c_ServiceName,"exiting as there are no Option trades present for date:%s:",c_date);
		return;
	 }
	 else				*** Ver 1.6 Ends **
	 {	
	 		fn_errlog ( c_ServiceName, "S31185", SQLMSG, c_err_msg  );
	  	tpabort(0); ** ver 2.1  **
	 		*fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); ** ver 2.1 comment *
   		strcpy ( c_msg, "No Records found..." );
	 		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	 		return ;
	 }* Ver 2.9 ** comment **/
	 /** ver 2.9  **/

    EXEC SQL
    INSERT INTO PRD_PGM_RUN_DTLS (
    PRD_PGM_NAME,
    PRD_XCHNG_CD,
    PRD_INS_DT,
    PRD_TRD_DT,
    PRD_PIPE_ID,
    PRD_USER_ID,
    PRD_PGM_STATUS)
   VALUES
   ( 'bat_fo_opt_pricing',
     :c_xchng_cd ,
     SYSDATE,
     :c_date,
     'NA',
     'system',
     'P'
    );

    if(SQLCODE !=0)
    {
     fn_userlog (c_ServiceName,"Error in inserting in PRD_PGM_RUN_DTLS");
     fn_errlog ( c_ServiceName, "S31190", SQLMSG, c_err_msg  );
     tpabort(0);
     fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
     return ;
    } 
    
		if( tpcommit(0) == -1 )		
		{
	 		fn_userlog (c_ServiceName,"Error in commit trans of IGAIN brokerage update when no OPM trades");
	 		fn_errlog ( c_ServiceName, "S31195", SQLMSG, c_err_msg);
   		strcpy ( c_msg, "System error. Contact system support" );
	 		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	 		return ;
		}
    /** ver 2.9  **/

		fn_userlog(c_ServiceName,"exiting as there are no Option trades present for date:%s:",c_date);
    strcpy ( c_msg, "Exiting as there are no Option trades present for OPM 195" );
	  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

    /**** Added in Ver 3.0 ********/

    strcpy(c_pgm_name,"bat_prcs_cntsys_chrg");
    strcpy(c_pipe_id,"NA");
    strcpy(c_xchng_cd,"NFO");
    strcpy(c_ini,c_xchng_cd);

    MEMSET(c_cmd_str);
    sprintf( c_cmd_str, "nohup %s %s %s  %s  %s  &", c_pgm_name, c_xchng_cd,c_ini, c_pipe_id,c_date );
    fn_userlog( c_ServiceName,"Calling :%s:", c_cmd_str );
    system( c_cmd_str );
 
    /****** Added in Ver 3.0 *******/
  
		return;
	 /** ver 2.9  **/
	}

	/*if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 ) ** ver 2.1 comment */
	if( tpcommit(0) == -1 )   /** Ver 2.1 **/
	{
	 fn_userlog (c_ServiceName,"Error in commit transaction of first insert in OTD_OPTION_TRD_DTLS");
	 fn_errlog ( c_ServiceName, "S31200", SQLMSG, c_err_msg);
   strcpy ( c_msg, "System error. Contact system support" );
	 fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	 return ;
	}

	l_otd_rec_cnt = SQLROWCOUNT;
	fn_userlog (c_ServiceName,"Record inserted in  OTD_OPTION_TRD_DTLS : <%ld>", SQLROWCOUNT);   

  fn_gettime();	
  fn_userlog( c_ServiceName, "TIME- After Insrting into OTD Time :%s:",c_time);

/**********************************************************************************************************************/
/*     STEP-2 : To populate OBC_OPTION_BRKR_CMPT_TEMP and OBC_OPTION_BRKR_CMPT_SMRY_TEMP table in Cursor loop 
								 for all records in OTD_OPTION_TRD_DTLS for SYADATE*/
/** OBC_OPTION_BRKR_CMPT_SMRY_TEMP : Order Ref level details **/
/** OBC_OPTION_BRKR_CMPT_TEMP : Trade level details **/
/**********************************************************************************************************************/
  
  while (1)  /* Outer while loop-1 for transaction commit begin */  
	{    /* While-1 Start  */
		l_master_loop_counter++;

		fn_userlog (c_ServiceName,"Main loop counter for records in OTD in While-1:: <%ld>", l_master_loop_counter);		
		fn_gettime();	
	        fn_userlog( c_ServiceName, "TIME- In each loop for OTD in While-1 time is :%s:",c_time);
	
	  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  	if ( i_trnsctn == -1 )
		{
			fn_userlog (c_ServiceName,"Error in step-2 begin transaction ");
			fn_errlog ( c_ServiceName, "S31205", TPMSG, c_err_msg  );
			strcpy ( c_msg, "System error. Contact system support" );
			fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return ;
		}

		while(1) /*   While Loop-2  START To populate OBC_OPTION_BRKR_CMPT_TEMP table against each rec in OTD  */
    {		/* While-2 Start */   
		
			  i_counter_1 = 0;     
			  i_diff_cnt = 0;
			  /* Counter for records in OBC_TEMP is initialised to 0 for every main loop of OTD*/
				l_commit_counter ++ ;
				/** Added OTD_XCHNG_CD in Ver 1.1 **/
				EXEC SQL 	
					SELECT OTD_XCHNG_CD, OTD_CLM_MTCH_ACCNT,OTD_PRDCT_TYP,OTD_INDSTK,OTD_UNDRLYNG,OTD_EXPRY_DT,OTD_EXER_TYP,
				  	     OTD_OPT_TYP,OTD_STRK_PRC,OTD_BUY_SUM_QTY, OTD_SELL_SUM_QTY, OTD_CARRY_FWD_QTY,
                 OTD_SCHM_CODE /** Ver 2.5 **/
			 		INTO   :c_otd_xchng_cd, /** Added in Ver 1.1 **/
								 :c_otd_clm_mtch_accnt,
								 :c_otd_prdct_typ,
								 :c_otd_indstk,
								 :c_otd_undrlyng,
								 :c_otd_expry_dt,
								 :c_otd_exer_typ,
								 :c_otd_opt_typ,
								 :i_otd_strk_prc,
								 :i_otd_buy_sum_qty,
								 :i_otd_sell_sum_qty,
								 :i_otd_carry_fwd_qty,
                 :c_otd_schm_code   /*** Ver 2.5 ***/

					FROM   OTD_OPTION_TRD_DTLS
					WHERE  OTD_XCHNG_CD = :c_xchng_cd  /* Addd in Ver 1.1 */ 
					AND OTD_PRCS_FLG = 'N'
					AND    ROWNUM =1
					AND OTD_TRD_DT = :c_date /** Added for house keep skip issue **/
					AND OTD_ATS_FLG = :c_ip_ats_flg				/** Ver 1.2 ***/
					ORDER BY OTD_TRD_DT;

	/*	    fn_gettime();	
	      fn_userlog( c_ServiceName, "TIME- In While-2 loop after each OTD rec select- time is :%s:",c_time);
	*/
        rtrim(c_otd_schm_code);  /** Ver 2.5 **/
			  if (DEBUG_MSG_LVL_3)
			  {
   		 	  fn_userlog (c_ServiceName,"Record count in OTD fetch <%ld>", SQLROWCOUNT); 
			  }

				if(SQLCODE !=0)
				{
					if(SQLCODE == NO_DATA_FOUND)
					{
						if(i_counter_2>0)
						{ 
							fn_userlog (c_ServiceName,"Number of records fetched from OTD in While-2 for Prcs_flg -N :<%d>", i_counter_2);		
							break; 
						}
						else
						{
							fn_userlog (c_ServiceName,"Error- No records found during fetching from OTD in While-2 for Prcs_flg -N ");		
							fn_errlog ( c_ServiceName, "S31210", SQLMSG, c_err_msg  );
						  strcpy ( c_msg, "System error. Contact system support" );
							fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
							fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
							return ;
						}
					} 		 
				  else
				  {
					  fn_userlog (c_ServiceName,"Error in fetching from OTD in While-2 for Prcs_flg -N ");		
					  fn_errlog ( c_ServiceName, "S31215", SQLMSG, c_err_msg  );
				    strcpy ( c_msg, "System error. Contact system support" );
					  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
					  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
					  return ;
					}
				}

	   	  SETNULL(c_otd_undrlyng);
	   	  SETNULL(c_otd_expry_dt);
    		SETNULL(c_otd_clm_mtch_accnt);

			  if (DEBUG_MSG_LVL_5)
			  {
			 	 fn_userlog (c_ServiceName,"Val of c_otd_xchng_cd 			= <%s>",  c_otd_xchng_cd);  /** Added in Ver 1.1 **/
  		 	 fn_userlog (c_ServiceName,"Val of c_otd_clm_mtch_accnt = <%s>",  c_otd_clm_mtch_accnt.arr); 
  		 	 fn_userlog (c_ServiceName,"Val of i_otd_buy_sum_qty 	  = <%d>",  i_otd_buy_sum_qty);        
  		 	 fn_userlog (c_ServiceName,"Val of i_otd_sell_sum_qty 	= <%d>",  i_otd_sell_sum_qty);       
  		 	 fn_userlog (c_ServiceName,"Val of i_otd_carry_fwd_qty  = <%d>",  i_otd_carry_fwd_qty);      
  		 	 fn_userlog (c_ServiceName,"Val of c_otd_prdct_typ 		  = <%c>",  c_otd_prdct_typ);           
  		 	 fn_userlog (c_ServiceName,"Val of c_otd_indstk 			  = <%c>",  c_otd_indstk);              
  		 	 fn_userlog (c_ServiceName,"Val of c_otd_undrlyng 		  = <%s>",  c_otd_undrlyng.arr);        
  		 	 fn_userlog (c_ServiceName,"Val of c_otd_expry_dt 		  = <%s>",  c_otd_expry_dt.arr);        
  		 	 fn_userlog (c_ServiceName,"Val of c_otd_exer_typ 		  = <%c>",  c_otd_exer_typ);            
  		 	 fn_userlog (c_ServiceName,"Val of c_otd_opt_typ 			  = <%c>",  c_otd_opt_typ);             
  		 	 fn_userlog (c_ServiceName,"Val of i_otd_strk_prc 		  = <%d>",  i_otd_strk_prc);            
	  	  }

				EXEC SQL
							DELETE FROM OBC_OPTION_BRKR_CMPT_TEMP
							WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */ 
							AND   OBC_ATS_FLG  = :c_ip_ats_flg;		/*** Ver 1.2 ***/
				if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
				{
				  fn_userlog (c_ServiceName,"Error in deleting records from OBC_TEMP in each loop");		
				  fn_errlog ( c_ServiceName, "S31220", SQLMSG, c_err_msg  );
				  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			    strcpy ( c_msg, "System error. Contact system support" );
				  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
				  return ;				
				}

				EXEC SQL
							DELETE FROM OBC_OPTION_BRKR_CMPT_SMRY_TEMP
							WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */  
							AND   OBC_ATS_FLG  = :c_ip_ats_flg;		/*** Ver 1.2 ***/

				if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
				{
				  fn_userlog (c_ServiceName,"Error in deleting records from OBC_SMRY_TEMP in each loop");		
				  fn_errlog ( c_ServiceName, "S31225", SQLMSG, c_err_msg  );
				  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			    strcpy ( c_msg, "System error. Contact system support" );
				  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
				  return ;				
				}

				/** Added OBC_XCHNG_CD,FTD_XCHNG_CD in below qury for Ver 1.1  **/
							
			if(c_ip_ats_flg == 'N')
			{	
				EXEC SQL
							INSERT INTO OBC_OPTION_BRKR_CMPT_TEMP (OBC_XCHNG_CD,
																											OBC_CLM_MTCH_ACCNT,
																											OBC_TRD_TIME,
																											OBC_EBA_TRD_REF,
																											OBC_ORDR_RFRNC, 
																											OBC_BUY_LOT,
																											OBC_SELL_LOT,
																											OBC_BUY_SQR_LOT,
																											OBC_SELL_SQR_LOT, 
																											OBC_CARRY_FWD_LOT,
																											OBC_BUY_BRKG,
																											OBC_SELL_BRKG,
																											OBC_CARRY_FWD_BRKG,
																											OBC_TOTAL_BRKG ,
																											OBC_ATS_FLG)	/** Ver 1.2**/
							SELECT FTD_XCHNG_CD, 
										 FTD_CLM_MTCH_ACCNT , 
										 FTD_TRD_DT ,
										 FTD_EBA_TRD_REF ,
										 FTD_ORDR_RFRNC, 
										 OBC_BUY_LOT,
										 OBC_SELL_LOT,
										 0,0,0,0,0,0,0,
										 :c_ip_ats_flg										/*** Ver 1.2 **/
							FROM 
										(	SELECT FTD_XCHNG_CD, FTD_CLM_MTCH_ACCNT , FTD_TRD_DT ,FTD_EBA_TRD_REF , FTD_ORDR_RFRNC,
	               						 DECODE(FTD_TRD_FLW, 'B',nvl(FTD_EXCTD_QTY/FTD_MIN_LOT_SIZE,0), 0) as OBC_BUY_LOT,  
														 DECODE(FTD_TRD_FLW, 'S',nvl(FTD_EXCTD_QTY/FTD_MIN_LOT_SIZE,0),0)  as OBC_SELL_LOT,
		       									 0,0,0,0,0,0
										  FROM   FTD_FO_TRD_DTLS
											WHERE  FTD_CLM_MTCH_ACCNT  = :c_otd_clm_mtch_accnt
											AND              FTD_XCHNG_CD        = :c_xchng_cd  /* Replaced hardcoding of 'NFO' in Ver 1.1 */
											AND		 FTD_PRDCT_TYP       = :c_otd_prdct_typ     
											AND		 FTD_UNDRLYNG        = :c_otd_undrlyng      
											AND		 FTD_EXPRY_DT        = :c_otd_expry_dt      
											AND		 FTD_INDSTK          = :c_otd_indstk        
											AND		 FTD_EXER_TYP        = :c_otd_exer_typ      
											AND		 FTD_OPT_TYP         = :c_otd_opt_typ       
										  AND		 FTD_STRK_PRC        = :i_otd_strk_prc
											AND    nvl(FTD_BRKG_TYPE,'N') = 'N'									/*** Ver 1.9 ***/
                      AND    nvl(FTD_UPLD_MTCH_FLG,'N') = 'N'                      /*** Ver 2.2 ***/
										  AND trunc(FTD_TRD_DT) = :c_date /** Added for house keep skip issue **/
											ORDER BY FTD_TRD_DT
 	     							);
					}		/** Ver 1.2 starts **/
					else if (c_ip_ats_flg == 'A' )
					{
						EXEC SQL
							INSERT INTO OBC_OPTION_BRKR_CMPT_TEMP (OBC_XCHNG_CD,
																											OBC_CLM_MTCH_ACCNT,
																											OBC_TRD_TIME,
																											OBC_EBA_TRD_REF,
																											OBC_ORDR_RFRNC, 
																											OBC_BUY_LOT,
																											OBC_SELL_LOT,
																											OBC_BUY_SQR_LOT,
																											OBC_SELL_SQR_LOT, 
																											OBC_CARRY_FWD_LOT,
																											OBC_BUY_BRKG,
																											OBC_SELL_BRKG,
																											OBC_CARRY_FWD_BRKG,
																											OBC_TOTAL_BRKG ,
																											OBC_ATS_FLG)	
							SELECT 'NFO', 
										 FAT_CLM_MTCH_ACCNT , 
										 FAT_TRD_DT ,
										 FAT_EBA_TRD_REF ,
										 FAT_ORDR_RFRNC, 
										 OBC_BUY_LOT,
										 OBC_SELL_LOT,
										 0,0,0,0,0,0,0,
										 :c_ip_ats_flg										
							FROM 
										(	SELECT 'NFO', FAT_CLM_MTCH_ACCNT , FAT_TRD_DT ,FAT_EBA_TRD_REF , FAT_ORDR_RFRNC,
	               						 DECODE(FAT_ORDR_FLW, 'B',nvl(FAT_EXCTD_QTY/FAT_MIN_LOT_SIZE,0), 0) as OBC_BUY_LOT,  
														 DECODE(FAT_ORDR_FLW, 'S',nvl(FAT_EXCTD_QTY/FAT_MIN_LOT_SIZE,0),0)  as OBC_SELL_LOT,
		       									 0,0,0,0,0,0
										  FROM   FAT_FO_ATS_TRADES_NSE
											WHERE  FAT_CLM_MTCH_ACCNT  = :c_otd_clm_mtch_accnt
											AND		 FAT_PRDCT_TYP       = :c_otd_prdct_typ     
											AND		 FAT_UNDRLYNG        = :c_otd_undrlyng      
											AND		 FAT_EXPRY_DT        = :c_otd_expry_dt      
											AND		 FAT_INDSTK          = :c_otd_indstk        
											AND		 FAT_EXRC_TYP        = :c_otd_exer_typ      
											AND		 FAT_OPT_TYP         = :c_otd_opt_typ       
										  AND		 FAT_STRIKE_PRC        = :i_otd_strk_prc
										  AND trunc(FAT_TRD_DT) = :c_date /** Added for house keep skip issue **/
											ORDER BY FAT_TRD_DT
 	     							);
					}
				/** Ver 1.2 Ends **/
				/* fn_gettime();	
				fn_userlog( c_ServiceName, "TIME- In While-2 loop after insert in OBC_TEMP for each OTD rec- time is :%s:",c_time);
				*/
	
			  if (DEBUG_MSG_LVL_3)
			  {
			    fn_userlog (c_ServiceName,"Record inserted in OBC_TEMP -1 for each loop of while-2 <%ld>", SQLROWCOUNT);  
			  }

				if(SQLCODE !=0)
				{
				  fn_userlog (c_ServiceName,"Error in inserting into OBC_TEMP for each entry of loop while-2");		
				  fn_errlog ( c_ServiceName, "S31230", SQLMSG, c_err_msg  );
				  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			    strcpy ( c_msg, "System error. Contact system support" );
				  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
				  return ;				
				}

					EXEC SQL
							INSERT INTO OBC_OPTION_BRKR_CMPT_SMRY_TEMP (OBC_XCHNG_CD, 
																													OBC_CLM_MTCH_ACCNT,
																													OBC_TRD_TIME,
																												  OBC_ORDR_RFRNC,
																												  OBC_BUY_LOT,
																													OBC_SELL_LOT,
																													OBC_BUY_SQR_LOT,
																													OBC_SELL_SQR_LOT,
									 																				OBC_CARRY_FWD_LOT,
																													OBC_BUY_BRKG,OBC_SELL_BRKG,
																													OBC_CARRY_FWD_BRKG,
									 																			  OBC_TOTAL_BRKG,
																													OBC_TOTAL_QTY, /* Added OBC_XCHNG_CD in Ver 1.1 */
																													OBC_ATS_FLG) 	/** Ver 1.2 **/
							SELECT XCHNG_CD, 
										 MATCH_ACT, 
										 to_date(min_time,'yyyyddmm HH24:MI:SS'), 
											ORD_REF, 
										 SUM_BUY, 
										 SUM_SELL,
										 0,0,0,0,0,0,0,0, 							/* Added XCHNG_CD in Ver 1.1 */
										 :c_ip_ats_flg									/** Ver 1.2 **/
							FROM 
							(
								SELECT XCHNG_CD, 
											 MATCH_ACT, 
												min(time1) min_time, 
											ORD_REF, 
										  SUM_BUY, 
										  SUM_SELL,
											0,0,0,0,0,0,0,0,  /* Added XCHNG_CD in Ver 1.1 */
											:c_ip_ats_flg			/** Ver 1.2 **/
								FROM 
								(
										SELECT A.OBC_XCHNG_CD XCHNG_CD, 
													 A.OBC_CLM_MTCH_ACCNT MATCH_ACT, 	
													 A.OBC_ORDR_RFRNC ORD_REF, 
													 A.SUM_OBC_BUY_LOT SUM_BUY, 
													 A.SUM_OBC_SELL_LOT SUM_SELL,
													 to_char(B.OBC_TRD_TIME,'yyyyddmm-HH24:MI:SS') time1 /* Added A.OBC_XCHNG_CD in Ver 1.1 */
										FROM 
										(  
                       /* Added OBC_XCHNG_CD in Ver 1.1 */
											 SELECT OBC_XCHNG_CD, 
															OBC_CLM_MTCH_ACCNT, 
															OBC_ORDR_RFRNC, 
															SUM_OBC_BUY_LOT , 
														  SUM_OBC_SELL_LOT 
											 FROM 
											 (
													SELECT OBC_XCHNG_CD,
																 OBC_CLM_MTCH_ACCNT,
																 OBC_ORDR_RFRNC, /* Added OBC_XCHNG_CD in Ver 1.1 */
												  			 sum(OBC_BUY_LOT) SUM_OBC_BUY_LOT, 
																 sum(OBC_SELL_LOT) SUM_OBC_SELL_LOT
													FROM OBC_OPTION_BRKR_CMPT_TEMP
													WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */
													AND OBC_ATS_FLG = :c_ip_ats_flg		/** Ver 1.2 **/ 
												  GROUP BY OBC_XCHNG_CD, OBC_CLM_MTCH_ACCNT , OBC_ORDR_RFRNC /* Added OBC_XCHNG_CD in Ver 1.1 */
											 ) 
									  ) A, OBC_OPTION_BRKR_CMPT_TEMP B
									  Where A.OBC_ORDR_RFRNC = B.OBC_ORDR_RFRNC
								)
					      GROUP by XCHNG_CD, MATCH_ACT, ORD_REF, SUM_BUY, SUM_SELL
					      ORDER by min_time
			  	    );							
				if(SQLCODE !=0)
				{
				  fn_userlog (c_ServiceName,"Error in inserting into OBC_SMRY_TEMP for each entry in loop while-2");		
				  fn_errlog ( c_ServiceName, "S31235", SQLMSG, c_err_msg  );
				  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			    strcpy ( c_msg, "System error. Contact system support" );
				  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
				  return ;				
				}

				/*fn_gettime();	
				fn_userlog( c_ServiceName, "TIME- In While-2 loop after insert in OBC_SMRY for each OTD rec- time is :%s:",c_time);
				*/

			  if (DEBUG_MSG_LVL_3)
			  {
  		 	 fn_userlog (c_ServiceName,"Record inserted in OBC_SMRY_TEMP  for each entry of loop while-2<%ld>", SQLROWCOUNT); 
			  }

/**********************************************************************************************************************/
/*     STEP -3 : Loop Processing for calculation of Brokerage against single Record from OTD_OPTION_TRD_DTLS 
								 and each entry of OBC_SMRY_TEMP in same loop*/
/**********************************************************************************************************************/

			  if (DEBUG_MSG_LVL_5)
			  {
  		 	 fn_userlog (c_ServiceName,"Val of i_otd_buy_sum_qty initially = <%d>",  i_otd_buy_sum_qty); 
  		 	 fn_userlog (c_ServiceName,"Val of i_otd_sell_sum_qty initially= <%d>",  i_otd_sell_sum_qty); 
			  }

				i_carry_fwd_qty =  i_otd_buy_sum_qty - i_otd_sell_sum_qty;

			  if (DEBUG_MSG_LVL_5)
			  {
					if(i_carry_fwd_qty > 0)
					{
				    fn_userlog (c_ServiceName,"Val of i_carry_fwd_qty in case of more Buy= <%d>",  i_carry_fwd_qty);   
					}
					if(i_carry_fwd_qty < 0)
					{
		  		  fn_userlog (c_ServiceName,"Val of i_carry_fwd_qty in case of more Sell= <%d>",  i_carry_fwd_qty);  
					}
			  }

				EXEC SQL UPDATE OTD_OPTION_TRD_DTLS
								 SET   OTD_CARRY_FWD_QTY  = :i_carry_fwd_qty,
								       OTD_PRCS_FLG       = 'Y'
								 WHERE   OTD_XCHNG_CD =:c_xchng_cd  /* Added in Ver 1.1 */ 
								 AND     OTD_CLM_MTCH_ACCNT = :c_otd_clm_mtch_accnt 
								 AND	 OTD_PRDCT_TYP      = :c_otd_prdct_typ             
								 AND	 OTD_INDSTK         = :c_otd_indstk       
								 AND	 OTD_UNDRLYNG       = :c_otd_undrlyng       
								 AND	 OTD_EXPRY_DT       = :c_otd_expry_dt       
								 AND	 OTD_EXER_TYP       = :c_otd_exer_typ       
								 AND	 OTD_OPT_TYP        = :c_otd_opt_typ 
								 AND	 OTD_STRK_PRC       = :i_otd_strk_prc
								 AND   OTD_ATS_FLG				= :c_ip_ats_flg							/** Ver 1.2 **/
								 AND     OTD_TRD_DT         = :c_date; /** Added for house keep skip issue **/

				if(SQLCODE !=0)
				{
				  fn_userlog (c_ServiceName,"Error in updating OTD_OPTION_TRD_DTLS for Carry-FWD qty and process flag as Y");		
				  fn_errlog ( c_ServiceName, "S31240", SQLMSG, c_err_msg  );
				  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			    strcpy ( c_msg, "System error. Contact system support" );
				  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
				  return ;				
				}

				/*
				fn_gettime();	
				fn_userlog( c_ServiceName, "TIME- In While-2 loop after Update of OTD for flag-Y- time is :%s:",c_time);
				*/

			  if (DEBUG_MSG_LVL_3)
			  {
  		 	  fn_userlog (c_ServiceName,"After updating OTD for Process Flag-Y and Carry-FWD qty in loop while-2"); 
			  }

/******************************************************************************************/
/* Declare Cursor to Calculate brokerage against each entry in OBC_OPTION_BRKR_CMPT_TEMP */
/******************************************************************************************/

			 	EXEC SQL 
									Declare get_obc_smry_temp CURSOR for
																SELECT OBC_XCHNG_CD, OBC_CLM_MTCH_ACCNT,OBC_ORDR_RFRNC,
																			 OBC_BUY_LOT,OBC_SELL_LOT  /* Added OBC_XCHNG_CD in Ver 1.1 */ 
																FROM OBC_OPTION_BRKR_CMPT_SMRY_TEMP
																WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */
																AND  OBC_ATS_FLG = :c_ip_ats_flg	/** Ver 1.2 **/ 
																ORDER BY OBC_TRD_TIME;

				if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND )
				{
				  fn_userlog (c_ServiceName,"Error in declaring Cursor: get_obc_smry_temp");		
				  fn_errlog ( c_ServiceName, "S31245", SQLMSG, c_err_msg  );
				  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			    strcpy ( c_msg, "System error. Contact system support" );
				  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
				  return ;				
				}

				/*
				fn_gettime();	
				fn_userlog( c_ServiceName, "TIME- In While-2 loop after Declaring Cur get_obc_smry_temp- time is :%s:",c_time);
				*/

				EXEC SQL
							OPEN get_obc_smry_temp;

				if(SQLCODE !=0)
				{
				  fn_userlog (c_ServiceName,"Error in opening Cursor: get_obc_smry_temp");		
				  fn_errlog ( c_ServiceName, "S31250", SQLMSG, c_err_msg  );
				  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			    strcpy ( c_msg, "System error. Contact system support" );
				  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
				  return ;				
				}

				/***  Inner While-3 Start -- Loop against data in OBC_SMRY_TEMP - using cursor get_obc_smry_temp START *****/
				while(1)    
        {   /* While-3 Start */

								EXEC SQL 	
										FETCH get_obc_smry_temp 
										INTO    :c_obc_xchng_cd,  /** Added in ver 1.1 **/
														:c_obc_clm_mtch_accnt,
														:c_obc_ordr_rfrnc,
														:i_obc_buy_lot,
														:i_obc_sell_lot;

								if(SQLCODE !=0)
								{
									if(SQLCODE == NO_DATA_FOUND)
									{
										if(i_counter_1>0)
										{	 
											fn_userlog (c_ServiceName,"Reached end of records for Cursor- get_obc_smry_temp");		
											break; 
										}
										else
										{
											fn_userlog (c_ServiceName,"Error- No records found during fetching Cursor get_obc_smry_temp");		
											fn_errlog ( c_ServiceName, "S31255", SQLMSG, c_err_msg  );
											EXEC SQL CLOSE get_obc_smry_temp;
											fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
											strcpy ( c_msg, "System error. Contact system support" );
											fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
											return ;
										}
									} 		 
				 				  else
								  {
					  				fn_userlog (c_ServiceName,"Error in fetching into for Cursor- get_obc_smry_temp");		
					 				  fn_errlog ( c_ServiceName, "S31260", SQLMSG, c_err_msg  );
									  EXEC SQL CLOSE get_obc_smry_temp;
									  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
									  strcpy ( c_msg, "System error. Contact system support" );
										fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
					 					return ;
									}
								}

					/*
					fn_gettime();	
					fn_userlog( c_ServiceName, "TIME- In While-3 loop after Fetching Cur get_obc_smry_temp- time is :%s:",c_time);
					*/

							  SETNULL(c_obc_clm_mtch_accnt);
								SETNULL(c_obc_ordr_rfrnc);

								if (DEBUG_MSG_LVL_5)
								{
								fn_userlog (c_ServiceName,"Val of c_obc_xchng_cd = <%s>",  c_obc_xchng_cd);  /** Added in Ver 1.1 **/
			  					fn_userlog (c_ServiceName,"Val of c_obc_clm_mtch_accnt = <%s>",  c_obc_clm_mtch_accnt.arr); 
			  					fn_userlog (c_ServiceName,"Val of c_obc_ordr_rfrnc = <%s>",  c_obc_ordr_rfrnc.arr);        

			  					fn_userlog (c_ServiceName,"Val of i_obc_buy_lot = <%d>",  i_obc_buy_lot);       
			  					fn_userlog (c_ServiceName,"Val of i_obc_sell_lot = <%d>",  i_obc_sell_lot);       
								}

								/**************************************************************************************************/
    						/*    LOGIC to calculate OBC_BUY_SQR , OBC_SELL_SQR and OBC_CARRY_FWD lot in OBC_SMRY_TEMP table start */
								/**************************************************************************************************/

							  i_obc_buy_sqr_lot     = 0;
								i_obc_sell_sqr_lot    = 0;
								i_obc_carry_fwd_lot   = 0;

								if(i_obc_buy_lot != 0)
								{	
								 		if(i_otd_sell_sum_qty - i_obc_buy_lot >= 0)
										/*  i_obc_buy_lot qty is present .. square off it  */
										{
											if (DEBUG_MSG_LVL_5)
											{
										  	fn_userlog (c_ServiceName,"In buy-1 case"); 
											}
			  						 	i_obc_buy_sqr_lot = i_obc_buy_lot;
			  						 	i_otd_sell_sum_qty = i_otd_sell_sum_qty - i_obc_buy_sqr_lot;
										}
										else if(i_otd_sell_sum_qty - i_obc_buy_lot < 0)
												 /*  i_otd_sell_sum_qty qty is not sufficient  .. square off - part and carry forward rest  */
										{
											if (DEBUG_MSG_LVL_5)
											{
										  	fn_userlog (c_ServiceName,"In buy-2 case"); 
											}
			 							 	i_obc_buy_sqr_lot   = i_otd_sell_sum_qty;
			 							 	i_obc_carry_fwd_lot = i_obc_buy_lot - i_obc_buy_sqr_lot;
			 							 	i_otd_sell_sum_qty  = i_otd_sell_sum_qty - i_obc_buy_sqr_lot;
										}
								}

							  if(i_obc_sell_lot != 0)
								{
										if(i_otd_buy_sum_qty - i_obc_sell_lot >= 0)
											/*  i_obc_sell_lot qty is present .. square off it  */
										{
											if (DEBUG_MSG_LVL_5)
											{
										  	fn_userlog (c_ServiceName,"In sell-1 case"); 
											}
			  							i_obc_sell_sqr_lot =  i_obc_sell_lot;
			  							i_otd_buy_sum_qty  =  i_otd_buy_sum_qty - i_obc_sell_sqr_lot;
										}
										else if(i_otd_buy_sum_qty - i_obc_sell_lot < 0)
													/*  i_otd_buy_sum_qty qty is not sufficient  .. square off - part and carry 4ward rest */
										{
											if (DEBUG_MSG_LVL_5)
											{
										  	fn_userlog (c_ServiceName,"In sell-2 case"); 
											}
			  							i_obc_sell_sqr_lot   = i_otd_buy_sum_qty;
			  							i_obc_carry_fwd_lot  = i_obc_sell_lot - i_obc_sell_sqr_lot;
			  							i_otd_buy_sum_qty    = i_otd_buy_sum_qty - i_obc_sell_sqr_lot;
										}
							 	}

							  if (DEBUG_MSG_LVL_5)
								{
			  				  fn_userlog (c_ServiceName,"Val of c_obc_xchng_cd = <%s>",  c_obc_xchng_cd); /** Added in Ver 1.1 **/
							    fn_userlog (c_ServiceName,"Val of c_obc_ordr_rfrnc = <%s>",  c_obc_ordr_rfrnc.arr); 
								  fn_userlog (c_ServiceName,"Val of i_obc_buy_sqr_lot = <%d>",  i_obc_buy_sqr_lot);        
								  fn_userlog (c_ServiceName,"Val of i_obc_sell_sqr_lot = <%d>",  i_obc_sell_sqr_lot);       
								  fn_userlog (c_ServiceName,"Val of i_obc_carry_fwd_lot = <%d>",  i_obc_carry_fwd_lot);       
								}

					      /*
					      fn_gettime();	
					      fn_userlog( c_ServiceName, "TIME- In While-3 loop after calc of Sqr-Lot- time is :%s:",c_time);							
					      */

								EXEC SQL UPDATE OBC_OPTION_BRKR_CMPT_SMRY_TEMP
										 SET	   OBC_BUY_SQR_LOT    = :i_obc_buy_sqr_lot,
													   OBC_SELL_SQR_LOT   = :i_obc_sell_sqr_lot,
													   OBC_CARRY_FWD_LOT  = :i_obc_carry_fwd_lot
										 WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */ 
										 AND   OBC_ATS_FLG  = :c_ip_ats_flg 		/*** Ver 1.2 **/
										 AND OBC_CLM_MTCH_ACCNT = :c_obc_clm_mtch_accnt
										 AND     OBC_ORDR_RFRNC     = :c_obc_ordr_rfrnc;

								if(SQLCODE !=0)
								{
								  fn_userlog (c_ServiceName,"Error in updating OBC_OPTION_BRKR_CMPT_SMRY_TEMP for SQR_LOT");		
								  fn_errlog ( c_ServiceName, "S31265", SQLMSG, c_err_msg  );
								  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
							    strcpy ( c_msg, "System error. Contact system support" );
								  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
								  return ;				
								}

					      /*
					      fn_gettime();	
					      fn_userlog( c_ServiceName, "TIME- In While-3 loop after Update of Sqr-Lot in OBC_SMRY- time is :%s:",c_time);							
					      */

                /**************************************************************************************************/
                /*    LOGIC to calculate OBC_BUY_SQR , OBC_SELL_SQR and OBC_CARRY_FWD lot in OBC_SMRY table end */
                /**************************************************************************************************/

			          if (DEBUG_MSG_LVL_3)
			          {
			           fn_userlog (c_ServiceName,"******* After OBC_SMRY UPDATE for SQR of qty in loop While-3 ************");	 
			          }

			/*'##################################################################################################' */
			/*     STEP-4  -- Call Function to calculate Brokerage for each entry in OBC_OPTION_BRKR_CMPT_SMRY_TEMP     */
			/*'##################################################################################################' */

							  /* Initiating all brokerage value holding variables to 0 */
								
							  i_obc_buy_brkg  = 0;     
							  i_obc_sell_brkg = 0;     
						   	i_obc_carry_fwd_brkg = 0;


								if(i_obc_buy_sqr_lot != 0) 
								{
								fn_userlog (c_ServiceName,"val of i_obc_buy_sqr_lot passed to func_calc_brkg_total <%d>", i_obc_buy_sqr_lot );		

								i_obc_buy_brkg = func_calc_brkg_total(i_obc_buy_sqr_lot, i_obc_carry_fwd_lot, c_obc_clm_mtch_accnt.arr, c_obc_ordr_rfrnc.arr,c_otd_schm_code);  /** schm_code Added Ver 2.5 **/

								 /*
								 fn_gettime();	
								 fn_userlog( c_ServiceName, "TIME- In While-3 loop After fn call func_calc_brkg_total for BUY- time is :%s:",c_time);							
								 */
		
								if ( i_obc_buy_brkg == -1 )
								{
								  fn_userlog (c_ServiceName,"Error in in fn call-Buy : func_calc_brkg_total");		
								  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
							          strcpy ( c_msg, "System error. Contact system support" );
								  fn_errlog ( c_ServiceName, "S31270", c_err_msg, c_err_msg  );
								  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
								  return ;				
								}

								if (DEBUG_MSG_LVL_3)
								{
							 		fn_userlog (c_ServiceName,"Val of i_obc_buy_brkg after fn is is :<%d>", i_obc_buy_brkg);		
								}

								}	
								if(i_obc_sell_sqr_lot != 0) 
								{

								i_obc_sell_brkg = func_calc_brkg_total(i_obc_sell_sqr_lot, i_obc_carry_fwd_lot, c_obc_clm_mtch_accnt.arr, c_obc_ordr_rfrnc.arr,c_otd_schm_code);  /** schm_code Added Ver 2.5 **/

								 /*
								 fn_gettime();	
								 fn_userlog( c_ServiceName, "TIME- In While-3 loop After fn call func_calc_brkg_total for SELL- time is :%s:",c_time);							
								 */

								if ( i_obc_sell_brkg == -1 )
								{
								  fn_userlog (c_ServiceName,"Error in in fn call-Sell : func_calc_brkg_total");		
								  fn_errlog ( c_ServiceName, "S31275", c_err_msg, c_err_msg  );
								  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
								  strcpy ( c_msg, "System error. Contact system support" );
								  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
								  return ;				
								}

								if (DEBUG_MSG_LVL_5)
								{
							 		fn_userlog (c_ServiceName,"Val of i_obc_sell_brkg after fn is :<%d>", i_obc_sell_brkg);		
								}
								}

								EXEC SQL SELECT (OSM_CARRY_FRWD * :i_obc_carry_fwd_lot) 
		 										 INTO  :i_obc_carry_fwd_brkg
		 										 FROM  OSM_OPTION_SCHEME_MSTR
												 WHERE OSM_SCHM_CODE = ( SELECT distinct OTD_SCHM_CODE
															 FROM OTD_OPTION_TRD_DTLS
															 WHERE OTD_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */ 
															 AND OTD_CLM_MTCH_ACCNT = :c_obc_clm_mtch_accnt
															 AND OTD_TRD_DT = :c_date); /** Added date condition for house keep skip issue **/ 

								if(SQLCODE !=0)
								{
							  	fn_userlog (c_ServiceName,"Error in selecting carry_fwd val from OSM table");		
							  	fn_errlog ( c_ServiceName, "S31280", SQLMSG, c_err_msg  );
							  	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
							    strcpy ( c_msg, "System error. Contact system support" );
								  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
							  	return ;
								}

								if (DEBUG_MSG_LVL_5)
								{
							 		fn_userlog (c_ServiceName,"Val of i_obc_carry_fwd_brkg is :<%d>", i_obc_carry_fwd_brkg);		
									fn_userlog (c_ServiceName,"Val of i_obc_sell_brkg is :<%d>", i_obc_sell_brkg);		
									fn_userlog (c_ServiceName,"Val of i_obc_buy_brkg is :<%d>", i_obc_buy_brkg);		
								}

				       /********  Update OBC_OPTION_BRKR_CMPT_SMRY_TEMP for final calculated Brkg   Start **********/
	
							  EXEC SQL UPDATE OBC_OPTION_BRKR_CMPT_SMRY_TEMP
							  				 SET		OBC_BUY_BRKG        = :i_obc_buy_brkg,
																OBC_SELL_BRKG       = :i_obc_sell_brkg,
															  OBC_CARRY_FWD_BRKG  = :i_obc_carry_fwd_brkg,
															  OBC_TOTAL_BRKG  = (:i_obc_buy_brkg + :i_obc_sell_brkg + :i_obc_carry_fwd_brkg),
															  OBC_ABOVE_QTY = decode(OBC_ABOVE_QTY, null,'0',OBC_ABOVE_QTY),
															  OBC_BELOW_QTY = decode(OBC_BELOW_QTY, null,'0',OBC_BELOW_QTY),
															  OBC_INRANGE_QTY = decode(OBC_INRANGE_QTY, null,'0',OBC_INRANGE_QTY),
															  OBC_INRANGE_CHARGES = decode(OBC_INRANGE_CHARGES, null,'0',OBC_INRANGE_CHARGES),
															  OBC_ABOVE_CHARGES = decode(OBC_ABOVE_CHARGES, null,'0',OBC_ABOVE_CHARGES)
						    				 WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */
												 AND  OBC_ATS_FLG   = :c_ip_ats_flg	/** Ver 1.2 **/ 
										     AND 	OBC_CLM_MTCH_ACCNT  = :c_obc_clm_mtch_accnt
							  				 AND  OBC_ORDR_RFRNC     = :c_obc_ordr_rfrnc;

							  if(SQLCODE !=0)
							  {
							  	fn_userlog (c_ServiceName,"Error in updating Brkg val in OBC_SMRY in loop While-3 ");		
							  	fn_errlog ( c_ServiceName, "S31285", SQLMSG, c_err_msg  );
							  	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
							    strcpy ( c_msg, "System error. Contact system support" );
								  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
							  	return ;
							  }

				        /********  Update OBC_OPTION_BRKR_CMPT_SMRY_TEMP for final calculated Brkg  END **********/

								i_counter_1 ++;


        }  /****    While-3 End - Inner Loop for OBC_TEMP  for Cursor-get_obc_smry_temp fetch   *********/

				EXEC SQL
					CLOSE get_obc_smry_temp;

				if (DEBUG_MSG_LVL_3)
				{
				 fn_userlog (c_ServiceName,"After Closing Cur:get_obc_smry_temp --1 After end of While-3");		
				}

  			if(SQLCODE !=0)
  			{
						fn_userlog (c_ServiceName,"Error in closing cursor get_obc_smry_temp");		
						fn_errlog ( c_ServiceName, "S31290", SQLMSG, c_err_msg  );
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
					  strcpy ( c_msg, "System error. Contact system support" );
						fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
						return ;
  			}

				EXEC SQL
							INSERT INTO OBC_OPTION_BRKR_CMPT
							SELECT * FROM OBC_OPTION_BRKR_CMPT_TEMP
							WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */
							AND  OBC_ATS_FLG = :c_ip_ats_flg;	/** Ver 1.2 **/ 

				if(SQLCODE !=0)
				{
				  fn_userlog (c_ServiceName,"Error in inserting into OBC from OBC_TEMP After while-3 end");		
				  fn_errlog ( c_ServiceName, "S31295", SQLMSG, c_err_msg  );
				  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
					strcpy ( c_msg, "System error. Contact system support" );
					fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
				  return ;				
				}

				if (DEBUG_MSG_LVL_3)
				{
				 fn_userlog (c_ServiceName,"After insert into OBC_OPTION_BRKR_CMPT from temp in while-2 :<%ld>", SQLROWCOUNT);		
				}	

				/*
				fn_gettime();	
				fn_userlog( c_ServiceName, "TIME- After inserting into OBC from OBC_TEMP- time is :%s:",c_time);							
				*/

				EXEC SQL
							INSERT INTO OBC_OPTION_BRKR_CMPT_SMRY
							SELECT * FROM OBC_OPTION_BRKR_CMPT_SMRY_TEMP
							WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */
							AND OBC_ATS_FLG    = :c_ip_ats_flg;	/** Ver 1.2 **/ 

				if(SQLCODE !=0)
				{
				  fn_userlog (c_ServiceName,"Error in inserting into OBC_SMRY from OBC_SMRY_TEMP After while-3 end");		
				  fn_errlog ( c_ServiceName, "S31300", SQLMSG, c_err_msg  );
				  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
					strcpy ( c_msg, "System error. Contact system support" );
					fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
				  return ;				
				}

				if (DEBUG_MSG_LVL_3)
				{
				 fn_userlog (c_ServiceName,"After insert into OBC_SMRY from SMRY_TEMP in while-2 :<%ld>", SQLROWCOUNT);		
				}
/***************************************************************************************************************/

/*** Commented in Ver 2.5 Starts ******
				EXEC SQL
							UPDATE OBC_OPTION_BRKR_CMPT a
							SET (a.OBC_TOTAL_BRKG, a.OBC_TOTAL_QTY) = 
																( SELECT b.OBC_TOTAL_BRKG , 
																  decode(b.OBC_SELL_LOT, '0',b.OBC_BUY_LOT, b.OBC_SELL_LOT) TOT_QTY
																	FROM   OBC_OPTION_BRKR_CMPT_SMRY b
																	WHERE  a.OBC_ORDR_RFRNC = b.OBC_ORDR_RFRNC
																	AND  b.OBC_ATS_FLG = :c_ip_ats_flg	** Ver 1.2 **
																)
							WHERE a.OBC_XCHNG_CD = :c_xchng_cd  * Added in Ver 1.1 * 
							AND  trunc(a.OBC_TRD_TIME)= :c_date  ** Added for house keep skip issue **
							AND a.OBC_ATS_FLG = :c_ip_ats_flg;	 ** Ver 1.2 **

				if(SQLCODE !=0)
				{
				  fn_userlog (c_ServiceName,"Error in Update total BRKG into OBC_CMPT in While-2 ");		
				  fn_errlog ( c_ServiceName, "S31305", SQLMSG, c_err_msg  );
				  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
					strcpy ( c_msg, "System error. Contact system support" );
					fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
				  return ;				
				}
				
				if (DEBUG_MSG_LVL_3)
				{
				 fn_userlog (c_ServiceName,"After update of OBC_OPTION_BRKR_CMPT for TOTAL_QTY and  TOTAL_Brkg in While-2");		
				}

				*fn_gettime();	
				fn_userlog( c_ServiceName, "TIME- in While-2After Updating OBC_CMPT for Total BRKG AND QTY- time is :%s:",c_time);							
				*


				EXEC SQL
						Update OBC_OPTION_BRKR_CMPT
						set OBC_TRD_LVL_BRKG = (decode(OBC_BUY_LOT, '0', OBC_SELL_LOT, OBC_BUY_LOT) / decode(OBC_TOTAL_QTY,'0',1,OBC_TOTAL_QTY)) * OBC_TOTAL_BRKG
						WHERE OBC_XCHNG_CD = :c_xchng_cd  * Added in Ver 1.1 *
						AND OBC_ATS_FLG 	 = :c_ip_ats_flg  ** Ver 1.2 ** 
						AND trunc(OBC_TRD_TIME) = :c_date ; ** Added for house keep skip issue **

				if(SQLCODE !=0)
				{
				  fn_userlog (c_ServiceName,"Error in Update total trade level brkg into OBC_CMPT in While-2");		
				  fn_errlog ( c_ServiceName, "S31310", SQLMSG, c_err_msg  );
				  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
					        strcpy ( c_msg, "System error. Contact system support" );
						fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
				  return ;				
				}

				if (DEBUG_MSG_LVL_3)
				{
				fn_userlog (c_ServiceName,"After update of OBC_OPTION_BRKR_CMPT for trd_level Brkg in While-2");		
				}

************** Ends Ver 2.5 *************/
				/*fn_gettime();	
				fn_userlog( c_ServiceName, "TIME- in While-2 After Updating OBC_CMPT for Trd lvl BRKG- time is :%s:",c_time);							
				*/
        /********************************************************************************/
                
    		i_counter_2++;         /*  Counter for main while */
		
        if ( (l_commit_counter % MASTER_COMMIT_INTERVAL) == 0 )	
				{
  				fn_userlog (c_ServiceName,"Regular Interval Commit after processing <%d> FTD Rec", MASTER_COMMIT_INTERVAL);		
					break;
				}

    }    /*  While-2 END - Loop To populate and calculate OBC_OPTION_BRKR_CMPT_TEMP and OBC_OPTION_BRKR_CMPT_SMRY_TEMP table  against each entry in OTD */

		if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
		{
	   		fn_userlog (c_ServiceName,"Error in commit transaction of final commit :<%ld> ",SQLCODE);
		    fn_userlog (c_ServiceName,"Failed in loop commit transaction |LOOP|-|%ld| ", l_master_loop_counter);
	  		fn_errlog ( c_ServiceName, "S31315", SQLMSG, c_err_msg);
				strcpy ( c_msg, "System error. Contact system support" );
				fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	  		return ;
		}

	  fn_userlog (c_ServiceName,"Transaction Committed final for Min commit block------");
		fn_gettime();	
		fn_userlog( c_ServiceName, "TIME- After commiting while-1 rec is :%s:",c_time);							

		if( (SQLCODE == NO_DATA_FOUND) || (l_master_loop_counter == l_otd_rec_cnt ) )
		{
					fn_userlog (c_ServiceName,"End of records in main OTD for Process_flag -N");		
					break; 
		}


	 }	/*  While-1 End - Main loop for transaction commit End */


	  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  	if ( i_trnsctn == -1 )
		{
			fn_userlog (c_ServiceName,"Error in step-3 begin transaction ");
			fn_errlog ( c_ServiceName, "S31320", TPMSG, c_err_msg  );
			strcpy ( c_msg, "System error. Contact system support" );
			fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return ;
		}

/***************    Ver 2.5 Starts **************/
        EXEC SQL
              UPDATE OBC_OPTION_BRKR_CMPT a
              SET (a.OBC_TOTAL_BRKG, a.OBC_TOTAL_QTY) =
                                ( SELECT b.OBC_TOTAL_BRKG ,
                                  decode(b.OBC_SELL_LOT, '0',b.OBC_BUY_LOT, b.OBC_SELL_LOT) TOT_QTY
                                  FROM   OBC_OPTION_BRKR_CMPT_SMRY b
                                  WHERE  a.OBC_ORDR_RFRNC = b.OBC_ORDR_RFRNC
                                  AND  b.OBC_ATS_FLG = :c_ip_ats_flg
                                )
              WHERE a.OBC_XCHNG_CD = :c_xchng_cd
              AND  trunc(a.OBC_TRD_TIME)= :c_date
              AND a.OBC_ATS_FLG = :c_ip_ats_flg;

        if(SQLCODE !=0)
        {
          fn_userlog (c_ServiceName,"Error in Update total BRKG into OBC_CMPT in While-2 ");
          fn_errlog ( c_ServiceName, "S31325", SQLMSG, c_err_msg  );
          fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
          strcpy ( c_msg, "System error. Contact system support" );
          fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
          return ;
        }

        EXEC SQL
            Update OBC_OPTION_BRKR_CMPT
            set OBC_TRD_LVL_BRKG = (decode(OBC_BUY_LOT, '0', OBC_SELL_LOT, OBC_BUY_LOT) / decode(OBC_TOTAL_QTY,'0',1,OBC_TOTAL_QTY)) * OBC_TOTAL_BRKG
            WHERE OBC_XCHNG_CD = :c_xchng_cd
            AND OBC_ATS_FLG    = :c_ip_ats_flg
            AND trunc(OBC_TRD_TIME) = :c_date ;

        if(SQLCODE !=0)
        {
          fn_userlog (c_ServiceName,"Error in Update total trade level brkg into OBC_CMPT in While-2");
          fn_errlog ( c_ServiceName, "S31330", SQLMSG, c_err_msg  );
          fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
                  strcpy ( c_msg, "System error. Contact system support" );
            fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
          return ;
        }

/************************** Ends Ver 2.5 ****************************/
		/************************************************************************************************************/
		/** Added below part for rounding issue on 02-Aug-2011  Starts   **/
		/************************************************************************************************************/

		EXEC SQL 
		Declare get_diff_ord_ref CURSOR for
						SELECT DISTINCT OBC_XCHNG_CD, OBC_CLM_MTCH_ACCNT, 
								   OBC_ORDR_RFRNC, 
									 TOT_OBC_TRD_LVL_BRKG, 
									 OBC_TOTAL_BRKG, 
									 (OBC_TOTAL_BRKG - TOT_OBC_TRD_LVL_BRKG ) DIFF  /** Added OBC_XCHNG_CD in Ver 1.1 **/
						FROM 
						(
							 SELECT OBC_XCHNG_CD, OBC_CLM_MTCH_ACCNT, 
											OBC_ORDR_RFRNC, 
										  SUM(trunc(OBC_TRD_LVL_BRKG,2)) TOT_OBC_TRD_LVL_BRKG , 
										  OBC_TOTAL_BRKG  /** Added OBC_XCHNG_CD in Ver 1.1 **/
							 FROM   OBC_OPTION_BRKR_CMPT 
							 WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */
							 AND   OBC_ATS_FLG  = :c_ip_ats_flg	/** Ver 1.2 ***/ 
							 AND trunc(OBC_TRD_TIME) = :c_date /** Added for house keep skip issue **/
						   GROUP  BY OBC_XCHNG_CD, OBC_CLM_MTCH_ACCNT, OBC_ORDR_RFRNC, OBC_TOTAL_BRKG 
               /** Added OBC_XCHNG_CD in Ver 1.1 **/
						)
					  WHERE TOT_OBC_TRD_LVL_BRKG <> OBC_TOTAL_BRKG;

						if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND )
						{
  						fn_userlog (c_ServiceName,"Error in Selecting ord_ref no with decimal diff");		
  						fn_errlog ( c_ServiceName, "S31335", SQLMSG, c_err_msg  );
  						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
							strcpy ( c_msg, "System error. Contact system support" );
							fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
  						return ;				
						}

		EXEC SQL
			OPEN get_diff_ord_ref;

		if(SQLCODE !=0)
		{
  		fn_userlog (c_ServiceName,"Error in opening Cursor: get_diff_ord_ref");		
  		fn_errlog ( c_ServiceName, "S31340", SQLMSG, c_err_msg  );
 			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
  		return ;				
		}

		while(1)    
		{   /* While-4 Start */

				EXEC SQL 	
						FETCH get_diff_ord_ref 
						INTO   :c_obc_xchng_cd, /** Added in Ver 1.1 **/ 
										:c_obc_clm_mtch_accnt,
										:c_obc_ordr_rfrnc,
										:d_tot_obc_trd_lvl_brkg,
										:d_obc_total_brkg,
										:d_diff;

				if(SQLCODE !=0)
				{
					if(SQLCODE == NO_DATA_FOUND)
					{
						if(i_diff_cnt>0)
						{	 
							fn_userlog (c_ServiceName,"Reached end of records for Cursor- get_diff_ord_ref");		
							break; 
						}
						else
						{
							fn_userlog (c_ServiceName,"Note- No records found during fetching into for Cursor- get_diff_ord_ref");		
							/* fn_errlog ( c_ServiceName, "S31345", SQLMSG, c_err_msg  ); */ /** Commented in ver 1.1 **/
							EXEC SQL CLOSE get_diff_ord_ref;
							/* fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); */
							strcpy ( c_msg, "No decimal diff amount found in calculation" );
							fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
							break ;
						}
					} 		 
				  else
				  {
					  fn_userlog (c_ServiceName,"Error in fetching into for Cursor- get_diff_ord_ref");		
					  fn_errlog ( c_ServiceName, "S31350", SQLMSG, c_err_msg  );
					  EXEC SQL CLOSE get_diff_ord_ref;
					  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
					  strcpy ( c_msg, "System error. Contact system support" );
						fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
						return ;
					}
				}

				SETNULL(c_obc_clm_mtch_accnt);
				SETNULL(c_obc_ordr_rfrnc);


				EXEC SQL 
						UPDATE OBC_OPTION_BRKR_CMPT
					 	SET	    OBC_TRD_LVL_BRKG_NEW   = trunc(OBC_TRD_LVL_BRKG,2) + :d_diff
				 		WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */
						AND   OBC_ATS_FLG  = :c_ip_ats_flg	/** Ver 1.2 ***/ 
						AND   OBC_CLM_MTCH_ACCNT     = :c_obc_clm_mtch_accnt
				 		AND     OBC_ORDR_RFRNC         = :c_obc_ordr_rfrnc
				 		AND ROWNUM < 2;

				if(SQLCODE !=0)
				{
		  		fn_userlog (c_ServiceName,"Error in updating OBC_OPTION_BRKR_CMPT for new rounded brkg");		
		  		fn_errlog ( c_ServiceName, "S31355", SQLMSG, c_err_msg  );
		  		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
	    		strcpy ( c_msg, "System error. Contact system support" );
		  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
		  		return ;				
				}

				i_diff_cnt ++;

    } /** While-4 Ends **/

/************************************************************************************************************/
	/** Added below part for rounding issue on 02-Aug-2011  Ends   **/
/************************************************************************************************************/




/**   Final FTD_BRKG is updated in paisa  **/

/*			  EXEC SQL UPDATE FTD_FO_TRD_DTLS
						  SET FTD_BRKG = (select (OBC_TRD_LVL_BRKG*100) from OBC_OPTION_BRKR_CMPT where OBC_EBA_TRD_REF = FTD_EBA_TRD_REF);
*/

/*			  EXEC SQL UPDATE FTD_FO_TRD_DTLS
						  SET FTD_BRKG = (select (nvl(OBC_TRD_LVL_BRKG_NEW, OBC_TRD_LVL_BRKG)*100) from OBC_OPTION_BRKR_CMPT where OBC_EBA_TRD_REF = FTD_EBA_TRD_REF)
						  WHERE trunc(FTD_TRD_DT) = :c_date ;  */
						  /** Added for house keep skip issue **/  /** Changed to handle rounding issue **/
			if(c_ip_ats_flg == 'N')													/** Ver 1.2 **/
			{
			  EXEC SQL 
							UPDATE FTD_FO_TRD_DTLS
						  SET (FTD_BRKG,FTD_BRKG_TYPE) = ( select (nvl(OBC_TRD_LVL_BRKG_NEW, trunc(OBC_TRD_LVL_BRKG,2))*100) ,'O' 
															 from OBC_OPTION_BRKR_CMPT 
															 where OBC_EBA_TRD_REF = FTD_EBA_TRD_REF 
															 and OBC_ATS_FLG = :c_ip_ats_flg				/** Ver 1.2 **/
														 )		/** Ver 1.9 ftd new column added **/
						  WHERE FTD_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */
						  AND trunc(FTD_TRD_DT) = :c_date  /** Added for house keep skip issue **/
							AND nvl(FTD_BRKG_TYPE,'N') = 'N';												/*** Ver 1.9 **/
							/*AND  ftd_ordr_rfrnc not in (	select distinct iod_ordr_rfrnc 
																						from iod_igain_ordr_dtls
																						where trunc(iod_ordr_dt) = :c_date
																				 );	*** ver 1.6 Check added for I-Gain Orders **/ /** Ver 1.9 comment **/
			}
		  else if (c_ip_ats_flg == 'A')
			{
			  EXEC SQL 
							UPDATE FAT_FO_ATS_TRADES_NSE
						  SET FAT_BRKG = ( select (nvl(OBC_TRD_LVL_BRKG_NEW, trunc(OBC_TRD_LVL_BRKG,2))*100) 
															 from OBC_OPTION_BRKR_CMPT 
															 where OBC_EBA_TRD_REF = FAT_EBA_TRD_REF 
															 and OBC_ATS_FLG = :c_ip_ats_flg	
														 )
						  WHERE trunc(FAT_TRD_DT) = :c_date ; /** Added for house keep skip issue **/
				
			}
			if(SQLCODE !=0)
			{
					  	fn_userlog (c_ServiceName,"Error in updating final Brkg val in FTD");		
					  	fn_errlog ( c_ServiceName, "S31360", SQLMSG, c_err_msg  );
					  	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
					    strcpy ( c_msg, "System error. Contact system support" );
						  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
					  	return ;
			}

			if (DEBUG_MSG_LVL_3)
			{
			   fn_userlog (c_ServiceName,"After update of <%ld> Records in Trade table for final Brkg", SQLROWCOUNT); 
				 /* Added SQLROWCOUNT in Ver 1.2 */
			}

      /** Added in Ver 1.2 Starts **/
      sprintf(c_msg,"No of records updated for brokerage is: <%ld>", SQLROWCOUNT);
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
     /** Added in Ver 1.2 Ends **/

     /***  Ver 2.3 Start  ***/

  EXEC SQL
  INSERT INTO PRD_PGM_RUN_DTLS (
     PRD_PGM_NAME,
     PRD_XCHNG_CD,
     PRD_INS_DT,
     PRD_TRD_DT,
     PRD_PIPE_ID,
     PRD_USER_ID,
     PRD_PGM_STATUS)
  VALUES
    ( 'bat_fo_opt_pricing',
      :c_xchng_cd ,
      SYSDATE,
      :c_date,
      'NA',
      'system',
      'P'
    );

   if(SQLCODE !=0)
      {
       fn_userlog (c_ServiceName,"Error in inserting in PRD_PGM_RUN_DTLS");
       fn_errlog ( c_ServiceName, "S31365", SQLMSG, c_err_msg  );
       fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
       fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
       return ;
      }
    fn_userlog (c_ServiceName,"Inserting into PRD_PGM_RUN_DTLS completed");
  /****    Ver 2.3 End ****/

		if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
		{
	   		fn_userlog (c_ServiceName,"Error in commit transaction of final FTD update :<%ld> ",SQLCODE);
	  		fn_errlog ( c_ServiceName, "S31370", SQLMSG, c_err_msg);
			  strcpy ( c_msg, "System error. Contact system support" );
				fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	  		return ;
		}

	  	fn_userlog (c_ServiceName,"Transaction Committed final for FTD------");
			  fn_gettime();	
			  fn_userlog( c_ServiceName, "TIME- 2After Updating FTD for final Trd lvl BRKG- time is :%s:",c_time);							

  sprintf(c_msg,"Batch process %s completed Successfully",argv[0]);
  fn_userlog (c_ServiceName,"Batch process %s completed",argv[0]);
  fn_print_date_time();
  fn_userlog (c_ServiceName,"==================End of %s =================",argv[0]);
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
 

 /******** Added in Ver 3.0  **********/ 

  strcpy(c_pgm_name,"bat_prcs_cntsys_chrg");
  strcpy(c_pipe_id,"NA");
  strcpy(c_xchng_cd,"NFO");
  strcpy(c_ini,c_xchng_cd);

  MEMSET(c_cmd_str);
  sprintf( c_cmd_str, "nohup %s %s %s  %s  %s  &", c_pgm_name, c_xchng_cd,c_ini, c_pipe_id,c_date );
  fn_userlog( c_ServiceName,"Calling :%s:", c_cmd_str );
  system( c_cmd_str );

  /************* Ver 3.0  ***********************/
   
  return ;

 }         /*     Main Function ENDS    */

/*'##################################################################################################' */

/******************************************************************************/

	int fn_bat_init ( int argc, char *argv[] )
	{
	  fn_var = bat_fo_opt_pricing;
  	return 0;
	}
 
	void fn_bat_term ( int argc, char *argv[] )
	{
 	 return;
	} 
 
	int fn_prcs_trg ( char *c_pgm_nm, int i_trg_typ )
	{
 	 return 0;
	}

/******************************************************************************/

/*'##################################################################################################' */
/*     STEP-5  -- Function logic to calculate Brokerage for each entry in OBC_OPTION_BRKR_CMPT_TEMP     */
/*'##################################################################################################' */



 int func_calc_brkg_total(int p_obc_sqr_lot, int p_obc_carry_fwd_lot, char * p_obc_clm_mtch_accnt, char * p_obc_ordr_rfrnc,
                          char * p_otd_schm_code) /** schm_code Added in Ver 2.5 **/
 {     /************     func_calc_brkg_total Function Start  *************/
		
		EXEC SQL BEGIN DECLARE SECTION;

		 /*char * p_obc_clm_mtch_accnt; 
		   char * p_obc_ordr_rfrnc; */

  		int i_osd_seq_no = 0;       
  		int i_osd_lwr_rng_lotsz = 0;
  		varchar c_osd_upr_rng_lotsz[10];
  		int i_osd_brkr_rng_rate = 0;
  		varchar c_osd_chrg_base[30];

			int i_osd_lwr_rng_lotsz_1 = 0; 
	  		varchar c_osd_upr_rng_lotsz_1[10];
			int i_osd_brkr_rng_rate_1 = 0; 
			varchar c_osd_chrg_base_1[30];

			int i_osd_lwr_rng_lotsz_2 = 0; 
			int i_osd_upr_rng_lotsz_2 = 0;
	  		varchar c_osd_upr_rng_lotsz_2[10];
			int i_osd_brkr_rng_rate_2 = 0; 
			varchar c_osd_chrg_base_2[30];

			int i_obc_above_qty = 0;
			int i_obc_below_qty = 0;
			int i_obc_inrange_qty = 0;

  		int i_excess_lot_brkg_1 = 0;
  		int i_excess_lot_brkg   = 0;

		EXEC SQL END DECLARE SECTION;


		  fn_userlog (c_ServiceName,"Val of p_obc_sqr_lot inside fn <%d>", p_obc_sqr_lot);		
		  fn_userlog (c_ServiceName,"Val of p_obc_clm_mtch_accnt inside fn <%s>", p_obc_clm_mtch_accnt);
      
    /* if(p_obc_sqr_lot != 0 && p_obc_sqr_lot != 1) */
    if(p_obc_sqr_lot != 0)     /* Nitin Post UAT **/
    {     /************     Main if with qty > 0 for brokerage calculation Start *************/

		 MEMSET(c_osd_chrg_base);  /** Nitin Post UAT **/
		 SETLEN(c_osd_chrg_base);  /** Nitin Post UAT **/

		 EXEC SQL 
						 SELECT OSD_SEQ_NO, 
										OSD_LWR_RNG_LOTSZ, 
										OSD_UPR_RNG_LOTSZ, 
										OSD_BRKR_RNG_RATE ,
										OSD_CHRG_BASE    /** Nitin Post UAT **/
							INTO	:i_osd_seq_no, 
										:i_osd_lwr_rng_lotsz, 
										:c_osd_upr_rng_lotsz, 
										:i_osd_brkr_rng_rate,
										:c_osd_chrg_base /** Nitin Post UAT **/
							FROM  OSD_OPTION_SCHEME_DTLS
				/**			WHERE OSD_SCHM_CODE = ( SELECT distinct OTD_SCHM_CODE
										FROM OTD_OPTION_TRD_DTLS 
										WHERE OTD_CLM_MTCH_ACCNT = :p_obc_clm_mtch_accnt
										AND  OTD_ATS_FLG         = :c_ip_ats_flg					** Ver 1.2 ***
										AND OTD_TRD_DT = :c_date ) ** Commented in Ver 2.5 ** /** Added for house keep skip issue **/
              WHERE OSD_SCHM_CODE = :p_otd_schm_code  /** Ver 2.5 **/     
							AND   OSD_LWR_RNG_LOTSZ <= :p_obc_sqr_lot
						  AND   ( instr(OSD_UPR_RNG_LOTSZ,'Above') > 0 OR to_char(OSD_UPR_RNG_LOTSZ) >= :p_obc_sqr_lot);
	   if(SQLCODE !=0)
	   {
		  fn_userlog (c_ServiceName,"Error in Selecting from OSD_OPTION_SCHEME_DTLS");		
		  fn_errlog ( c_ServiceName, "S31375", SQLMSG, c_err_msg  );
		  fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
		  return(-1) ;
		 }

		 SETNULL(c_osd_upr_rng_lotsz);
		 SETNULL(c_osd_chrg_base);  /** Nitin Post UAT **/

		 i_excess_lot_brkg_1 = 0;

		 /***  Nitin -Post UAT added Start **/
		 if (i_osd_seq_no == 1)
		 {
		  i_obc_below_qty =  p_obc_sqr_lot;	
		 }
		 /***  Nitin -Post UAT added End **/


		 while(i_osd_seq_no > 2)
		 {          /****   While for OSD seq Start  *********/

		    i_excess_lot_brkg_1 = i_excess_lot_brkg_1 + ( (p_obc_sqr_lot - i_osd_lwr_rng_lotsz + 1) * i_osd_brkr_rng_rate );
		    i_osd_seq_no = i_osd_seq_no -1;

			  if(i_osd_seq_no != 2)	
			  {
						EXEC SQL 
									  SELECT OSD_LWR_RNG_LOTSZ, 
							   					 OSD_UPR_RNG_LOTSZ, 
						  	 					 OSD_BRKR_RNG_RATE
									  INTO	 :i_osd_lwr_rng_lotsz_1, 
						  						 :c_osd_upr_rng_lotsz_1, 
						  						 :i_osd_brkr_rng_rate_1 
										FROM   OSD_OPTION_SCHEME_DTLS
						/**				WHERE  OSD_SCHM_CODE = ( SELECT distinct OTD_SCHM_CODE
												 	 								   FROM OTD_OPTION_TRD_DTLS 
													 								   WHERE OTD_XCHNG_CD = :c_xchng_cd  * Added in Ver 1.1 * 
																					   AND OTD_CLM_MTCH_ACCNT = :p_obc_clm_mtch_accnt 
																					   AND OTD_TRD_DT = :c_date) ** Ver 2.5 **/   /** Added on 27-Sep-2011 Post UAT **/
                    WHERE  OSD_SCHM_CODE = :p_otd_schm_code /** Ver 2.5 **/
								  	AND    OSD_SEQ_NO = :i_osd_seq_no;

						if(SQLCODE !=0)
				  	{
				  		fn_userlog (c_ServiceName,"Error in Selecting from OSD_OPTION_SCHEME_DTLS in While loop");		
				  		fn_errlog ( c_ServiceName, "S31380", SQLMSG, c_err_msg  );
				  		fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				  		return(-1) ;
						}

				 		SETNULL(c_osd_upr_rng_lotsz_1);

				 		i_excess_lot_brkg_1 = i_excess_lot_brkg_1 +  ((atoi(c_osd_upr_rng_lotsz_1.arr) - i_osd_lwr_rng_lotsz_1 + 1) * i_osd_brkr_rng_rate_1);

				 		i_osd_seq_no = i_osd_seq_no -1;
				}

		 }  /****   While for OSD seq >2 End *********/

		
		 /*********** After While loop for Seq no >2 fixed Brkg for Seq-2 is added into i_excess_lot_brkg_1 *************/				

		 MEMSET(c_osd_chrg_base_2);   /** Nitin Post UAT **/
		 SETLEN(c_osd_chrg_base_2);  /** Nitin Post UAT **/

		 if (i_osd_seq_no < 3 ) /** Added if Start - Nitin Post UAT **/
		 {
		  EXEC SQL 
					   SELECT OSD_LWR_RNG_LOTSZ, 
										OSD_UPR_RNG_LOTSZ, 
										OSD_BRKR_RNG_RATE,
										OSD_CHRG_BASE   /** Nitin Post UAT **/
		  				INTO  :i_osd_lwr_rng_lotsz, 
										:i_osd_upr_rng_lotsz_2, 
										:i_osd_brkr_rng_rate_2,
										:c_osd_chrg_base_2 /** Nitin Post UAT **/
		  				FROM  OSD_OPTION_SCHEME_DTLS
			/***				WHERE OSD_SCHM_CODE = ( SELECT distinct OTD_SCHM_CODE
									  FROM OTD_OPTION_TRD_DTLS
									  WHERE OTD_XCHNG_CD = :c_xchng_cd  * Added in Ver 1.1 * 
									  AND OTD_CLM_MTCH_ACCNT = :p_obc_clm_mtch_accnt
									  AND OTD_TRD_DT = :c_date) ** Commented in Ver 2.5 **//** Added on 27-Sep-11 Post UAT -housekeep issue **/
              WHERE OSD_SCHM_CODE = :p_otd_schm_code  /** Ver 2.5 **/ 
						 	AND   OSD_SEQ_NO = :i_osd_seq_no; /** Nitin - Post UAT  Chahnged '2' to seq varaible **/

	 	  if(SQLCODE !=0)
		  {
		   fn_userlog (c_ServiceName,"Error in Selecting from OSD_OPTION_SCHEME_DTLS for OSD_SEQ_NO = '2'");		
		   fn_errlog ( c_ServiceName, "S31385", SQLMSG, c_err_msg  );
		   fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
		   return(-1) ;
		  }

		  /* i_excess_lot_brkg = i_excess_lot_brkg_1	+ i_osd_brkr_rng_rate_2; */ /** Nitin Post UAT Commented **/
		
		  /** Nitin Post UAT Start **/
		  SETNULL(c_osd_chrg_base_2);  
		  if (strcmp(c_osd_chrg_base_2.arr, "PerLot")== 0)
		  {
		   i_excess_lot_brkg = i_excess_lot_brkg_1 + i_osd_brkr_rng_rate_2 * p_obc_sqr_lot ;	
		  }
		  if (strcmp(c_osd_chrg_base_2.arr, "PerOrderTraded")== 0)
		  {
		   i_excess_lot_brkg = i_excess_lot_brkg_1 + i_osd_brkr_rng_rate_2 ;	
		  }
		  /** Nitin Post UAT End **/

		
		  if(p_obc_sqr_lot >= i_osd_upr_rng_lotsz_2)
		  {
		   i_obc_above_qty =  p_obc_sqr_lot - i_osd_upr_rng_lotsz_2 ;   
		   i_obc_inrange_qty =  i_osd_upr_rng_lotsz_2 ;   
      }

		  if(p_obc_sqr_lot < i_osd_upr_rng_lotsz_2)
		  {
		   i_obc_inrange_qty =  p_obc_sqr_lot ;   
      }

      /** Added Start -Nitin Post UAT 	**/
      if (i_osd_seq_no == 1)
      {
       i_obc_inrange_qty = 0;
       i_osd_brkr_rng_rate_2 = 0;
      }
      /** Added End -Nitin Post UAT 	**/
     } /** Added if End - Nitin Post UAT **/ 

		
    }     /*******  Main if with qty > 1 for brokerage calculation END ***********/


     /*** Commnted Start Nitin -Post UAT **/
    /*********************  
    if(p_obc_sqr_lot != 0 && p_obc_sqr_lot == 1)
    {

		  	EXEC SQL 
						     SELECT  OSD_LWR_RNG_LOTSZ, 
											   OSD_UPR_RNG_LOTSZ, 
											 	 OSD_BRKR_RNG_RATE, 
											   OSD_CHRG_BASE 
		  						INTO   :i_osd_lwr_rng_lotsz, 
											   :c_osd_upr_rng_lotsz, 
											   :i_osd_brkr_rng_rate, 
											   :c_osd_chrg_base
		  					 FROM    OSD_OPTION_SCHEME_DTLS
							   WHERE   OSD_SCHM_CODE = ( SELECT distinct OTD_SCHM_CODE
										   										 FROM OTD_OPTION_TRD_DTLS
										   									   WHERE OTD_CLM_MTCH_ACCNT = :p_obc_clm_mtch_accnt
										   									   AND OTD_TRD_DT = :c_date)  
							 	 AND OSD_SEQ_NO = '1'; 

		 	  if(SQLCODE !=0)
		 	  {
			  	fn_userlog (c_ServiceName,"Error in Selecting from OSD_OPTION_SCHEME_DTLS for OSD_SEQ_NO = '1'");		
			  	fn_errlog ( c_ServiceName, "S31390", SQLMSG, c_err_msg  );
			  	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			  	return(-1) ;

			  }

			  i_obc_below_qty = 1 ;

		 	  i_excess_lot_brkg = i_osd_brkr_rng_rate;
    } 

    ***************/
    /*** Commnted End Nitin -Post UAT **/


    EXEC SQL 
					   UPDATE OBC_OPTION_BRKR_CMPT_SMRY_TEMP
				 			SET		OBC_ABOVE_QTY       = :i_obc_above_qty,
										OBC_BELOW_QTY       = :i_obc_below_qty,
										OBC_INRANGE_QTY     = :i_obc_inrange_qty,
										OBC_INRANGE_CHARGES = :i_osd_brkr_rng_rate_2,
										OBC_ABOVE_CHARGES = :i_excess_lot_brkg_1
			 				WHERE OBC_XCHNG_CD = :c_xchng_cd  /* Added in Ver 1.1 */ 
							AND OBC_CLM_MTCH_ACCNT  = :p_obc_clm_mtch_accnt
				 			AND   OBC_ORDR_RFRNC      = :p_obc_ordr_rfrnc;

    if(SQLCODE !=0)
    {
			fn_userlog (c_ServiceName,"Error in updating Above and Below Qty in OBC_SMRY in loop While-3 ");
			fn_errlog ( c_ServiceName, "S31395", SQLMSG, c_err_msg  );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			return(-1) ;

    }


    if (DEBUG_MSG_LVL_3)
    {
       fn_userlog (c_ServiceName,"Val of i_excess_lot_brkg before passing back= <%d>",  i_excess_lot_brkg); 
    }

    return(i_excess_lot_brkg);

  }


/* ###########################################################################################  */

	char *trim(char *str)
	{
  
  	int i;
  	for (i=0;i<strlen(str);i++)
    if (str[i]==' ') str[i]='\0';

  	return(str);
	}

	void fn_print_date_time()
	{
  	EXEC SQL BEGIN DECLARE SECTION;
  	char c_date_time[30];
  	EXEC SQL END   DECLARE SECTION;
  
  	EXEC SQL
  	SELECT
  	to_char(SYSDATE , 'dd-Mon-yyyy--hh24:mi:ss')
  	INTO :c_date_time
  	from dual;

 	  if ( SQLCODE != 0 )
  	{
    	fn_errlog ( c_ServiceName, "S31400", SQLMSG, c_err_msg  );
    	return ;
  	}
  
  	trim(c_date_time);
  	fn_userlog (c_ServiceName," ----  Time : %s  ---- ",c_date_time);  
	}

	void fn_gettime()
	{
	  int i_mili_sec = 0;
	  struct timeval tv;
	  struct timezone tz;
	  struct tm *tm;

	  gettimeofday(&tv, &tz);
	  tm=localtime(&tv.tv_sec);
	  i_mili_sec= tv.tv_usec/1000;
	  sprintf(c_time,"%d:%d:%d:%d",tm->tm_hour, tm->tm_min, tm->tm_sec, i_mili_sec);

	  return;
	}
		/******** Ver 1.2 Starts ************/
int fn_upd_ord_ref(char * c_ServiceName,char *c_date , char * c_err_msg)
{
	char c_ordr_rfrnc[19];
	char c_trd_rfrnc[19];
  char c_ordr_ack[19];
	long l_ord_seq_num;
	long l_trd_seq_num;
	char c_ord_seq_num[9];
	char c_trd_seq_num[9];
	int i_trnsctn;
	int i_trd_cnt=0;
	int i_loop=0;
	char c_msg[256];
	
	EXEC SQL
		Declare get_fat_ordr_dtls CURSOR  for
		SELECT distinct FAT_XCHNG_ACK
		from FAT_FO_ATS_TRADES_NSE
		WHERE trunc(FAT_TRD_DT)=:c_date
		AND   FAT_PRDCT_TYP='O'
		AND 	FAT_ORDR_RFRNC is null
		AND   FAT_EBA_TRD_REF is null
		AND 	FAT_CLM_MTCH_ACCNT in (  select distinct ICD_CLNT_CD_ATS
                                 	 from   CLM_CLNT_MSTR,ICD_INFO_CLIENT_DTLS
                                 	 where 	CLM_MTCH_ACCNT = ICD_CLNT_CD
                                   and    ICD_ATS_STATUS = 'Y'
                                   and    CLM_BRKR_CMPT_FLG = 'N' 
                                 ) ;
	 if(SQLCODE != 0 && SQLCODE!= NO_DATA_FOUND)
	 {
      fn_userlog (c_ServiceName,"Error in declaring Cursor: get_fat_ordr_dtls");
      fn_errlog ( c_ServiceName, "S31405", SQLMSG, c_err_msg  );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return -1;
	 }
   EXEC SQL
              OPEN get_fat_ordr_dtls;

   if(SQLCODE !=0)
   {
      fn_userlog (c_ServiceName,"Error in opening Cursor: get_fat_ordr_dtls");
      fn_errlog ( c_ServiceName, "S31410", SQLMSG, c_err_msg  );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return -1;
   }
   i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );

   if ( i_trnsctn == -1)
   {
     fn_errlog ( c_ServiceName, "S31415", SQLMSG, c_err_msg  );
     return -1; 
   }

	while(1)
	{
		l_ord_seq_num=0;
		memset(c_ordr_rfrnc,'\0',sizeof(c_ordr_rfrnc));
		memset(c_ord_seq_num,'\0',sizeof(c_ord_seq_num));

 		EXEC SQL
      FETCH get_fat_ordr_dtls
    	INTO :c_ordr_ack;
   
			if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND) 
      {
      	fn_userlog (c_ServiceName,"Error in opening Cursor: get_fat_ordr_dtls");
      	fn_errlog ( c_ServiceName, "S31420", SQLMSG, c_err_msg  );
				EXEC SQL Close get_fat_ordr_dtls;
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      	strcpy ( c_msg, "System error. Contact system support" );
      	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );	
      	return -1;
		 	}
			if(SQLCODE == NO_DATA_FOUND)
			{
				fn_userlog(c_ServiceName,"ALL Records Updated OR No Records Found to Update ");
       	break;	
			}
			EXEC SQL
				SELECT GET_ATS_ORD_SEQ_FN.NEXTVAL
				INTO   :l_ord_seq_num
				FROM DUAL;
      if( SQLCODE != 0 )
      {
        fn_errlog ( c_ServiceName, "S31425", SQLMSG, c_err_msg);
				fn_userlog (c_ServiceName,"Error in create seq-Ord_ref -ATS");
				EXEC SQL Close get_fat_ordr_dtls;
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      	strcpy ( c_msg, "System error. Contact system support" );
      	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );	
        return -1; 
      }
			sprintf( c_ord_seq_num, "%08d", l_ord_seq_num );;
			fn_userlog(c_ServiceName,"c_date is :%s:",c_date);

			EXEC SQL
           SELECT to_char(to_date(:c_date,'dd-mon-yyyy'),'yyyymmdd') || 'FN' || :c_ord_seq_num
           INTO   :c_ordr_rfrnc
           FROM   DUAL;

      if( SQLCODE != 0 )
      {
        fn_errlog ( c_ServiceName, "S31430", SQLMSG, c_err_msg);
				EXEC SQL Close get_fat_ordr_dtls;
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      	strcpy ( c_msg, "System error. Contact system support" );
      	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
        return -1; 
      }
			rtrim(c_ordr_rfrnc);
			if(DEBUG_MSG_LVL_3)
			{
				fn_userlog(c_ServiceName,"Order reference No is :%s:",c_ordr_rfrnc);
				fn_userlog(c_ServiceName,"Order ACK No is :%s:",c_ordr_ack);
			}

			EXEC SQL
				UPDATE FAT_FO_ATS_TRADES_NSE
				SET   FAT_ORDR_RFRNC =:c_ordr_rfrnc
				WHERE FAT_XCHNG_ACK = :c_ordr_ack
				AND 	FAT_ORDR_RFRNC is NULL
				AND  FAT_PRDCT_TYP='O';
		 if(SQLCODE !=0  && SQLCODE != NO_DATA_FOUND )
		 {
      	fn_userlog (c_ServiceName,"Error in updating FAT order refrence");
      	fn_errlog ( c_ServiceName, "S31435", SQLMSG, c_err_msg  );
				EXEC SQL Close get_fat_ordr_dtls;
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      	strcpy ( c_msg, "System error. Contact system support" );
      	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      	return -1;
		 }
		 i_trd_cnt= SQLROWCOUNT;
		 fn_userlog(c_ServiceName,"total trade count for ack:%s: = :%d:",c_ordr_ack,i_trd_cnt);

		 for( i_loop = 0 ; i_loop < i_trd_cnt ; i_loop++)
		 {
			memset(c_trd_rfrnc,'\0',sizeof(c_trd_rfrnc));
			memset(c_trd_seq_num,'\0',sizeof(c_trd_seq_num));
			fn_userlog(c_ServiceName,"c_trd_rfrnc After memset =:%s:",c_trd_rfrnc);
			fn_userlog(c_ServiceName,"c_trd_seq_num After memset =:%s:",c_trd_seq_num);

			l_trd_seq_num=0;
			 EXEC SQL
				SELECT GET_ATS_TRD_SEQ_FN.NEXTVAL
				INTO   :l_trd_seq_num
				FROM DUAL;
       if( SQLCODE != 0 )
       {
         fn_errlog ( c_ServiceName, "S31440", SQLMSG, c_err_msg);
	 			 EXEC SQL Close get_fat_ordr_dtls;
				 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      	 strcpy ( c_msg, "System error. Contact system support" );
      	 fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
				 fn_userlog (c_ServiceName,"Error in create seq-trd_ref -ATS");
         return -1; 
       }
			 sprintf( c_trd_seq_num, "%08d", l_trd_seq_num );;
			 fn_userlog(c_ServiceName,"c_trd_seq_num from Sequence =:%s:",c_trd_seq_num);

			 EXEC SQL
           SELECT to_char(to_date(:c_date,'dd-mon-yyyy'),'yyyymmdd') || 'FN' || :c_trd_seq_num
           INTO   :c_trd_rfrnc
           FROM   DUAL;

       if( SQLCODE != 0 )
       {
         fn_errlog ( c_ServiceName, "S31445", SQLMSG, c_err_msg);
	 			 EXEC SQL Close get_fat_ordr_dtls;
				 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      	 strcpy ( c_msg, "System error. Contact system support" );
      	 fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
				 fn_userlog (c_ServiceName,"Error in generate Ord_ref -ATS");
         return -1; 
       }
			 rtrim(c_trd_rfrnc);
			 EXEC SQL
				UPDATE FAT_FO_ATS_TRADES_NSE
				SET   FAT_EBA_TRD_REF = :c_trd_rfrnc
				WHERE FAT_XCHNG_ACK 	= :c_ordr_ack
				AND   FAT_ORDR_RFRNC  = :c_ordr_rfrnc
				AND 	FAT_EBA_TRD_REF is NULL
				AND   FAT_PRDCT_TYP	  ='O'
				AND   rownum < 2;
		 	 if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND )
		   {
      		fn_userlog (c_ServiceName,"Error in updating FAT trader refrence");
      		fn_errlog ( c_ServiceName, "S31450", SQLMSG, c_err_msg  );
					EXEC SQL Close get_fat_ordr_dtls;
					fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      		strcpy ( c_msg, "System error. Contact system support" );
      		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      		return -1;
		   }
			 if(SQLCODE == NO_DATA_FOUND)
			 {
				 fn_userlog(c_ServiceName," inside no data found for FAT trad ref update");
				 if( i_loop == 0)
				 {
					 fn_userlog(c_ServiceName,"At least One Trade must be there for One order reference");
					 EXEC SQL Close get_fat_ordr_dtls;
					 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
		       strcpy ( c_msg, "System error. Contact system support" );
        	 fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
        	 return -1;
				 }
				 break; 
			 }
		 } 
	}		/*** While Ends for each exchange ack ***/
	EXEC SQL
		Close get_fat_ordr_dtls;
	if(SQLCODE != 0)
	{
    fn_errlog ( c_ServiceName, "S31455", SQLMSG, c_err_msg  );
		return -1;
	}
  if( fn_committran( c_ServiceName,i_trnsctn, c_err_msg )== -1 )
  {
     fn_errlog ( c_ServiceName, "S31460", SQLMSG, c_err_msg  );
     return -1; 
  }
	return 0;
}
int fn_upd_min_lot_size(char *c_ServiceName,char *c_xchng_cd, char *c_date, char *c_err_msg)
{
	char c_msg[256];
	int i_trnsctn;

   i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );

   if ( i_trnsctn == -1)
   {
     fn_errlog ( c_ServiceName, "S31465", SQLMSG, c_err_msg  );
     return -1; 
   }
	fn_userlog(c_ServiceName,"c_date as input =:%s:",c_date);
	fn_userlog(c_ServiceName,"c_xchng_cd as input =:%s:",c_xchng_cd);

  /*** Commented in Ver 2.0 ***

	EXEC SQL
		Update FAT_FO_ATS_TRADES_NSE 
		SET FAT_MIN_LOT_SIZE = ( SELECT FCM_LOT_SZ
														 From FCM_FO_CNTRCT_MSTR
														 WHERE FCM_PRDCT_TYP ='O' 
														 AND FCM_UNDRLYNG = FAT_UNDRLYNG
														 AND FCM_EXPRY_DT = FAT_EXPRY_DT
														 AND FCM_EXER_TYP = FAT_EXRC_TYP
														 AND FCM_OPT_TYP = FAT_OPT_TYP
														 AND FCM_STRK_PRC = FAT_STRIKE_PRC
														 AND fcm_xchng_cd =:c_xchng_cd
													  ) 
		WHERE TRUNC(FAT_TRD_DT) =:c_date
		AND FAT_MIN_LOT_SIZE is Null;

  *** Ver 2.0 Comment Ends ***/

  /*** Ver 2.0 Starts ***/

  EXEC SQL
    Update FAT_FO_ATS_TRADES_NSE
    SET FAT_MIN_LOT_SIZE = ( SELECT FTQ_MIN_LOT_QTY
                             From FTQ_FO_TRD_QT
                             WHERE FTQ_PRDCT_TYP ='O'
                             AND FTQ_UNDRLYNG = FAT_UNDRLYNG
                             AND FTQ_EXPRY_DT = FAT_EXPRY_DT
                             AND FTQ_EXER_TYP = FAT_EXRC_TYP
                             AND FTQ_OPT_TYP = FAT_OPT_TYP
                             AND FTQ_STRK_PRC = FAT_STRIKE_PRC
                             AND fTQ_xchng_cd =:c_xchng_cd
                            )
    WHERE TRUNC(FAT_TRD_DT) =:c_date
    AND FAT_MIN_LOT_SIZE is Null;

  /*** Ver 2.0 Ends ***/

	 fn_userlog(c_ServiceName,"No of records Updated =:%d:",SQLROWCOUNT);
	 if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
	 {
     	fn_userlog (c_ServiceName,"Error in updating LOT SIZE in FAT ");
     	fn_errlog ( c_ServiceName, "S31470", SQLMSG, c_err_msg  );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     	strcpy ( c_msg, "System error. Contact system support" );
     	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
     	return -1;
	 }
	 if(SQLCODE == NO_DATA_FOUND )
	 {
			fn_userlog(c_ServiceName,"No Record found for Updating LOT SIZE ");
     	strcpy ( c_msg, "No Record found for Updating LOT SIZE for ATS" );
     	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	 }
   if( fn_committran( c_ServiceName,i_trnsctn, c_err_msg )== -1 )
   {
     fn_errlog ( c_ServiceName, "S31475", SQLMSG, c_err_msg  );
     return -1; 
   }

	 return 0;
}	 
		/******** Ver 1.2 Ends  *************/
/*******************************************************************************
	END OF CODE
*******************************************************************************/
/*** Ver 2.4 Starts ***/

int fn_read_db_para_ini()
{

  char *ptr;
  char c_filepath[200];

  ptr = NULL;

  MEMSET(c_filepath);

  sprintf(c_filepath,"%s/%s",tuxgetenv("BIN"),EQ_CONTRACT);

  if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"File Path is :%s:", c_filepath);
  }

  if(fn_init_prcs_spc(c_ServiceName, c_filepath , "CONTRACT") == -1 )
  {
    fn_userlog(c_ServiceName,"Error in Reading the ini File for Equity Contract");
    return -1;
  }

  ptr = fn_get_prcs_spc(c_ServiceName,"UID");

  if(ptr == NULL)
  {
    fn_userlog(c_ServiceName,"Unable to read User id from ini file.");
    return -1;
  }

  MEMSET(c_uid);
  strcpy(c_uid,ptr);

  ptr = NULL;
  ptr = fn_get_prcs_spc(c_ServiceName,"PWD");

  if(ptr == NULL)
  {
    fn_userlog(c_ServiceName,"Unable to read c_pwd from ini file.");
    return -1;
  }

  MEMSET(c_pwd);
  strcpy(c_pwd,ptr);

  ptr = NULL;
  ptr = fn_get_prcs_spc(c_ServiceName,"MF_ERR_SKIP");   /*Parameter for no. of records to be skipped in case of error in file reading*/

  if(ptr == NULL)
  {
    fn_userlog(c_ServiceName,"Unable to read err_skip value from ini file.");
    return -1;
  }

  MEMSET(c_err_skip);
  strcpy(c_err_skip,ptr);

  return 0;
}

/*** Ver 2.4 Ends ***/

