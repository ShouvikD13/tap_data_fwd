/*  Program           : BAT_ENBLDSBL_MKT_OPT		          		            		*/
/*                                                                            */
/*  Output            : Success / Failure                                     */
/*                                                                            */
/*  Description       : Enable market order placement for options contract    */
/*                                                                            */
/*  Log               :                                                       */
/*                                                                            */
/******************************************************************************/
/*  10-Jun-2022     Ver 1.0  Suchita Dabir   CR-ISEC14-163069(New Release)   	*/ 
/*  22-Mar-2023     Ver 1.1  Vipul Sharma		 																	*/
/******************************************************************************/
#include <stdio.h>
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <Usysflds.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fo_view_def.h>
#include <eba_to_ors.h>
#include <fn_ddr.h>
#include <errno.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <fn_read_debug_lvl.h>
#include <fn_env.h>      

#define BHAVCOPY_UPLOAD 'B'
#define ONLINE_BROADCAST 'O'
#define EOD 'E'
#define BAT_TRAN_LOCAL 2000
#define MAX_LENGTH  1000  
#define EQ_CONTRACT "EQ_CONTRACT.ini"   

char    c_ServiceName[33]="\0";

int fn_mkt_ordr_enbl_dsbl(char *c_ServiceName,
                        struct vw_contract *ptr_cntrct_details,
                        double  d_open_interest,
                        double  d_volume,
												char    *c_time,
												char    *c_frm_dt,
												char    *c_to_dt,
                        long l_runno,                        
                        struct vw_err_msg *ptr_st_err_msg,
                        char *c_trade_dt,char c_mv_flag);

void BAT_ENBLDSBL_MKT_OPT( int argc, char *argv[] )
{
	char c_msg[256]="\0";
  char c_err_msg[256]="\0";
  char c_trd_dt[12];  

EXEC SQL BEGIN DECLARE SECTION;
	char c_xchng_cd[3+1]="\0";
  char c_instrument[6+1]="\0";
  char c_symbol[20+1]="\0";
  char c_expry_dt[11+1]="\0";
  long l_strike_prc=0;
  double d_strike_prc=0.0;
  char c_ex_opt_typ[2+1]="\0";
  double d_volume=0.0;
  double d_val=0.0;
  double d_open_interest=0.0;

  char c_stck_cd[6+1]="\0";
  char c_prdct_typ='\0';
  char c_indstk_typ='\0';
  char c_exer_typ='\0';
  char c_opt_typ='\0';
  char c_apply_flg='\0';
  char c_remarks[200]="\0";
  char c_traded_flag[2]="\0"; 
  char c_traded_flg='\0';    
  char c_mv_flag='\0';
    
  double d_fum_volume=0.0;
  char c_qt_trdng_flg='\0';
  char c_fcm_qt_trdng_flg='\0';
  char c_exg_crrnt_stts='\0';  
  char c_time[20+1]="\0";
	char c_from_dt[11+1]="\0";
	char c_to_dt[11+1]="\0"; 
	char c_tmp_date[8+1]="\0"; 
	char c_max_dt[11+1]="\0";
  char c_tmp_mail_date[20] = "\0"; 

	struct vw_contract st_cntrct_details;	
	struct vw_err_msg st_err_msg;				

	int i_date_check=0; 	
  int    i_tot_cntrcts = 0;
  long l_run_no=0;       

	int iValue=0;										/** Ver 1.1 **/
	int i_FailFlg =0;								/** Ver 1.1 **/
 
 EXEC SQL END DECLARE SECTION;

  int i_ch_val=0;
  int i=0;
  int i_len=0;
  int i_trnsctn=0;
  int i_counter=0;  

	strcpy(c_ServiceName, argv[0]);
  strcpy(c_xchng_cd, argv[2]);

	if (argc != 4)
      {
        fn_userlog(c_ServiceName,"Usage -  <Exchange code> <pipe_id> ");
        fn_bat_pst_msg ( c_ServiceName, "Invalid number of arguments", c_tag );
        return ;
      }
  
  MEMSET(c_trd_dt);

    EXEC SQL
       SELECT exg_crrnt_stts,
              to_char(EXG_NXT_TRD_DT,'dd-mon-yyyy')      /**** 1.2 *****/
       INTO   :c_exg_crrnt_stts,
              :c_trd_dt
       FROM   exg_xchng_mstr
       WHERE  exg_xchng_cd = :c_xchng_cd ;
  
    if (SQLCODE != 0)
    {
     fn_errlog(c_ServiceName, "S31005", SQLMSG, c_err_msg);
     fn_bat_pst_msg ( c_ServiceName, "System error occured. Contact system support", c_tag );
     return;
    }  


    fn_userlog( c_ServiceName, "Exchange Current Status is :%c:",c_exg_crrnt_stts);
    fn_userlog(c_ServiceName,"Exchange trade date :%s:",c_trd_dt);  /**** 1.2 ****/

		MEMSET(c_time);

		EXEC SQL
		SELECT to_char(SYSDATE,'DD-MON-YYYY HH24:MI:SS')
		INTO :c_time
		FROM DUAL;
		if (SQLCODE != 0)
		{
			fn_errlog(c_ServiceName, "S31010", SQLMSG, c_err_msg);
			fn_bat_pst_msg ( c_ServiceName, "System error occured. Contact system support", c_tag );
			return;
		}

	fn_userlog(c_ServiceName,"batch Started");

	EXEC SQL TRUNCATE TABLE FED_FO_MKT_FLG_UPD_TEMP;
	
	if ( SQLCODE != 0 )
  {
      fn_errlog(c_ServiceName,"S31015",SQLMSG,c_err_msg);
      fn_bat_pst_msg ( c_ServiceName, "Error in itruncate FED_FO_ENB_DSB_TEMP Table....",c_tag);
      return;
  }

	i_trnsctn = tpbegin(BAT_TRAN_LOCAL,0);

  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName,"S31020",LIBMSG,c_err_msg);
    return;
  }

	if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"Records are ready to insert in market flag temp table");
  }

	/** Ver 1.1 Starts**/
	EXEC SQL
	INSERT INTO FED_FO_MKT_FLG_UPD_TEMP(FED_XCHNG_CD,FED_PRDCT_TYP, FED_INDSTK, FED_UNDRLYNG, FED_EXPRY_DT, FED_EXER_TYP, FED_OPT_TYP, FED_STRK_PRC, FED_TOT_QTY_TRDD, FED_CRNT_OI, FED_MRKT_ORDR_FLG, FED_MRKT_FLG_VOL, FED_PRCS_FLG)
  SELECT 		FTQ_XCHNG_CD,
          	FTQ_PRDCT_TYP,
          	FTQ_INDSTK,
          	FTQ_UNDRLYNG,
          	FTQ_EXPRY_DT,
          	FTQ_EXER_TYP,
          	FTQ_OPT_TYP,
          	FTQ_STRK_PRC,
          	NVL(FTQ_TOT_QTY_TRDD,0),
          	NVL(FTQ_CRNT_OI,0),
						CASE
							WHEN NVL(FTQ_TOT_QTY_TRDD,0) <= NVL(FUM_MRKT_FLG_VOL,0) AND NVL(FTQ_MRKT_ORDR_FLG,'Y') ='N' THEN 'I'
							WHEN NVL(FTQ_TOT_QTY_TRDD,0) >  NVL(FUM_MRKT_FLG_VOL,0) AND NVL(FTQ_MRKT_ORDR_FLG,'Y') ='Y' THEN 'I'
							WHEN NVL(FTQ_TOT_QTY_TRDD,0) <= NVL(FUM_MRKT_FLG_VOL,0) THEN 'N'
							WHEN NVL(FTQ_TOT_QTY_TRDD,0) >  NVL(FUM_MRKT_FLG_VOL,0) THEN 'Y'
							ELSE NVL(FTQ_MRKT_ORDR_FLG,'Y')
						END AS FTQ_MRKT_ORDR_FLG,
						NVL(FUM_MRKT_FLG_VOL,0),
			 			'N'
  FROM  		FTQ_FO_TRD_QT,FUM_FO_UNDRLYNG_MSTR
  WHERE 		FTQ_XCHNG_CD 		 = :c_xchng_cd
  AND   		FTQ_QT_TRDNG_FLG = 'T'
  AND    		FTQ_PRDCT_TYP 	 = 'O'
  AND   		FUM_PRDCT_TYP		 = FTQ_PRDCT_TYP
	AND    		FUM_UNDRLYNG		 = FTQ_UNDRLYNG
	AND   		FUM_XCHNG_CD		 = FTQ_XCHNG_CD
	AND (FTQ_XCHNG_CD,FTQ_PRDCT_TYP,FTQ_INDSTK,FTQ_UNDRLYNG,FTQ_EXPRY_DT,FTQ_EXER_TYP,FTQ_OPT_TYP,FTQ_STRK_PRC) not in 
  		(SELECT FEM_XCHNG_CD,FEM_PRDCT_TYP,FEM_INDSTK,FEM_UNDRLYNG,FEM_EXPRY_DT,FEM_EXER_TYP,FEM_OPT_TYP,FEM_STRK_PRC 
			 FROM 	FEM_FO_EXCEPTION_MSTR);

	if ( SQLCODE != 0 )
  {
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_errlog(c_ServiceName,"S31025",SQLMSG,c_err_msg);
      fn_bat_pst_msg ( c_ServiceName, "Error in inserting records in FED_FO_MKT_FLG_UPD_TEMP Table....",c_tag);
      return;
  }

	if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
    tpabort(0);
    fn_errlog ( c_ServiceName,"S31030",LIBMSG,c_err_msg);
    return ;
  }

	if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"Records are inserted in market flag temp table");
  }

	while(1)
	{
		MEMSET(st_cntrct_details);
    MEMSET(c_expry_dt);
    c_mv_flag='\0';
		i_FailFlg = 0;

		EXEC SQL	
		SELECT  	FED_XCHNG_CD,
            	FED_PRDCT_TYP,
            	FED_INDSTK,
            	FED_UNDRLYNG,
            	FED_EXPRY_DT,
            	FED_EXER_TYP,
            	FED_OPT_TYP,
            	FED_STRK_PRC,
            	FED_MRKT_ORDR_FLG
    INTO    	:st_cntrct_details.c_xchng_cd,
            	:st_cntrct_details.c_prd_typ,
            	:st_cntrct_details.c_ctgry_indstk,
            	:st_cntrct_details.c_undrlyng,
            	:c_expry_dt,
            	:st_cntrct_details.c_exrc_typ,
            	:st_cntrct_details.c_opt_typ,
            	:st_cntrct_details.l_strike_prc,
            	:c_mv_flag
		FROM    	FED_FO_MKT_FLG_UPD_TEMP
  	WHERE    	FED_XCHNG_CD  =:c_xchng_cd
  	AND      	FED_PRCS_FLG  ='N'
		AND       FED_MRKT_ORDR_FLG IN ('Y','N')
		AND 			ROWNUM < 2;

		if ( SQLCODE != 0 )
    {
        if ( SQLCODE == NO_DATA_FOUND )
        {
					fn_userlog( c_ServiceName, "No More records in Temp for update %d",iValue);
          break;
        }
        fn_errlog ( c_ServiceName, "S31035", SQLMSG, c_err_msg );
        fn_bat_pst_msg ( c_ServiceName, "System error occured. Contact system support", c_tag );
				return;
		}	

		iValue++;

		rtrim(st_cntrct_details.c_undrlyng);

    strcpy(st_cntrct_details.c_expry_dt,c_expry_dt);

		i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
    if ( i_trnsctn == -1 )
    {
      fn_userlog( c_ServiceName, "Error in Begin is :%c:",c_exg_crrnt_stts);
      fn_errlog(c_ServiceName,"S31040",LIBMSG,c_err_msg);
      return;
    }
		
		EXEC SQL
		UPDATE 	FTQ_FO_TRD_QT
    SET 		FTQ_MRKT_ORDR_FLG = :c_mv_flag
    WHERE  	FTQ_XCHNG_CD   		= :st_cntrct_details.c_xchng_cd
    AND    	FTQ_PRDCT_TYP  		= :st_cntrct_details.c_prd_typ
    AND    	FTQ_INDSTK     		= :st_cntrct_details.c_ctgry_indstk
    AND    	FTQ_UNDRLYNG   		= :st_cntrct_details.c_undrlyng
    AND    	FTQ_EXPRY_DT   		= :c_expry_dt
    AND    	FTQ_EXER_TYP   		= :st_cntrct_details.c_exrc_typ
    AND    	FTQ_OPT_TYP    		= :st_cntrct_details.c_opt_typ
    AND    	FTQ_STRK_PRC   		= :st_cntrct_details.l_strike_prc;

    if ( SQLCODE != 0 )
    {
			strcpy ( c_msg, "Issue updating N FTQ_FO_TRD_QT" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      fn_errlog( c_ServiceName, "S31045",SQLMSG,c_err_msg);
		
			EXEC SQL
            UPDATE  FED_FO_MKT_FLG_UPD_TEMP
            SET     FED_PRCS_FLG  = 'I'
            WHERE   FED_XCHNG_CD  = :st_cntrct_details.c_xchng_cd
            AND     FED_PRDCT_TYP = :st_cntrct_details.c_prd_typ
            AND     FED_UNDRLYNG  = :st_cntrct_details.c_undrlyng
            AND     FED_EXPRY_DT  = :c_expry_dt
            AND     FED_INDSTK    = :st_cntrct_details.c_ctgry_indstk
            AND     FED_OPT_TYP   = :st_cntrct_details.c_opt_typ
            AND     FED_STRK_PRC  = :st_cntrct_details.l_strike_prc
            AND     FED_EXER_TYP  = :st_cntrct_details.c_exrc_typ;

      if ( SQLCODE != 0 )
      {
				tpabort(0);
      	strcpy ( c_msg, "Issue updating FED_FO_MKT_FLG_UPD_TEMP" );
        fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
        fn_errlog( c_ServiceName, "S31050",SQLMSG,c_err_msg);
        break;
      }
			i_FailFlg = 1;
		}
		
		if (i_FailFlg == 0)
		{
			EXEC SQL
          UPDATE  FED_FO_MKT_FLG_UPD_TEMP
          SET     FED_PRCS_FLG  = 'P'
          WHERE   FED_XCHNG_CD  = :st_cntrct_details.c_xchng_cd
          AND     FED_PRDCT_TYP = :st_cntrct_details.c_prd_typ
          AND     FED_UNDRLYNG  = :st_cntrct_details.c_undrlyng
          AND     FED_EXPRY_DT  = :c_expry_dt
          AND     FED_INDSTK    = :st_cntrct_details.c_ctgry_indstk
          AND     FED_OPT_TYP   = :st_cntrct_details.c_opt_typ
          AND     FED_STRK_PRC  = :st_cntrct_details.l_strike_prc
          AND     FED_EXER_TYP  = :st_cntrct_details.c_exrc_typ;

    	if ( SQLCODE != 0 )
    	{
				tpabort(0);
      	strcpy ( c_msg, "Issue updating P FED_FO_MKT_FLG_UPD_TEMP" );
      	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      	fn_errlog( c_ServiceName, "S31055",SQLMSG,c_err_msg);
      	break;
    	}
		}

		if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
    {
        tpabort(0);
        fn_errlog ( c_ServiceName,"S31060",LIBMSG,c_err_msg);
        return ;
    }
	}
	fn_userlog( c_ServiceName, "Batch Process Completed, %d Records are fetched",iValue);

	return;
	/** Ver 1.1. Ends **/
 
	/******Commented By Ver 1.1 Start 
    EXEC SQL
    DECLARE cur_online_brd CURSOR FOR
      SELECT FTQ_XCHNG_CD,
             FTQ_PRDCT_TYP,
             FTQ_INDSTK,
             FTQ_UNDRLYNG,
             FTQ_EXPRY_DT,
             FTQ_EXER_TYP,
             FTQ_OPT_TYP,
             FTQ_STRK_PRC,
             NVL(FTQ_TOT_QTY_TRDD,0),
             NVL(FTQ_CRNT_OI,0),
             NVL(FTQ_MRKT_ORDR_FLG,'Y')
      FROM  FTQ_FO_TRD_QT
      WHERE FTQ_XCHNG_CD = :c_xchng_cd
*       AND   trunc(FTQ_LST_TRD_TM) = trunc(sysdate) *
      AND   FTQ_QT_TRDNG_FLG = 'T' 
      AND    FTQ_PRDCT_TYP = 'O'
      ORDER BY FTQ_XCHNG_CD,
               FTQ_PRDCT_TYP,
               FTQ_INDSTK,
               FTQ_UNDRLYNG,
               FTQ_EXPRY_DT,
               FTQ_STRK_PRC,
               FTQ_EXER_TYP,
               FTQ_OPT_TYP;

	if ( SQLCODE != 0 )
  {
		tpabort(0);
    fn_errlog ( c_ServiceName, "S31065", SQLMSG, c_err_msg );
		fn_bat_pst_msg ( c_ServiceName, "System error occured. Contact system support", c_tag );
    return ;
  }

  EXEC SQL
      OPEN cur_online_brd;
	
	while(1)
	{
		MEMSET(st_cntrct_details);
		MEMSET(c_expry_dt);
		d_volume	= 0;
		d_open_interest	= 0;
    c_mv_flag='\0';

		EXEC SQL  FETCH   cur_online_brd
							INTO    :st_cntrct_details.c_xchng_cd,
											:st_cntrct_details.c_prd_typ, 
											:st_cntrct_details.c_ctgry_indstk, 
											:st_cntrct_details.c_undrlyng,
											:c_expry_dt,
											:st_cntrct_details.c_exrc_typ,  
											:st_cntrct_details.c_opt_typ,
											:st_cntrct_details.l_strike_prc,
											:d_volume,
											:d_open_interest,
                      :c_mv_flag;
	 		if ( SQLCODE != 0 )
      {
        if ( SQLCODE == NO_DATA_FOUND )
        {
          break;
        }
				tpabort(0);
        EXEC SQL CLOSE cur_online_brd;
        fn_errlog ( c_ServiceName, "S31070", SQLMSG, c_err_msg );
				fn_bat_pst_msg ( c_ServiceName, "System error occured. Contact system support", c_tag );
        return ;
      }

			**Fill the structure contract details*
				rtrim(st_cntrct_details.c_undrlyng);
			
				strcpy(st_cntrct_details.c_expry_dt,c_expry_dt);

				st_cntrct_details.c_rqst_typ = ONLINE_BROADCAST ;

				**Call function for enabling or disabling of contract **
				i_ch_val =	fn_mkt_ordr_enbl_dsbl(c_ServiceName,
                                        &st_cntrct_details,
																				d_open_interest,
																				d_volume,
																				c_time,
																				c_from_dt,
																				c_to_dt,
                                        l_run_no,   
																				&st_err_msg,
                                        c_trd_dt,c_mv_flag); ** 1.2 **
			 if(i_ch_val == -1)
			 {
					tpabort(0);
					EXEC SQL CLOSE cur_online_brd;
					fn_errlog(c_ServiceName, "S31075", LIBMSG, st_err_msg.c_err_msg);
					fn_bat_pst_msg ( c_ServiceName, "System error occured. Contact system support", c_tag );
					return;
			 }
	 }

        EXEC SQL CLOSE cur_online_brd;


	if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
	{
		tpabort(0);
		fn_errlog ( c_ServiceName,"S31080",LIBMSG,c_err_msg);
		return ;
	}
   **** Ver 1.1 Commented Ends***/ 
}

int fn_bat_init ( int argc, char *argv[] )
{

  fn_var = BAT_ENBLDSBL_MKT_OPT;
  return 0;
}

void fn_bat_term ( int argc, char *argv[] )
{
  char c_msg[256];
  sprintf ( c_msg, "Batch process %s ended", argv[0] ); fn_bat_pst_msg (  argv[0], c_msg, c_tag );
  return;
}

int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
  return 0;
}


int fn_mkt_ordr_enbl_dsbl(char *c_ServiceName,
												struct vw_contract *ptr_cntrct_details,
												double	d_open_interest,	
												double	d_volume,	
												char    *c_time,
												char    *c_frm_dt,
												char    *c_to_dt,
                        long l_runno,        
												struct vw_err_msg *ptr_st_err_msg,
                        char *c_trade_dt,char c_mv_flag)
{
int i_trnsctn;
char c_msg[256];
int i_enable_range=0;  
int i_consider_rec=0;
int i_count=0; 
int dt_count=0;

EXEC SQL BEGIN DECLARE SECTION;
int i_rec_exists;
int i_date_check;
double d_fum_mkt_flg_vol = 0.0; 
double d_fum_open_interest = 0.0;
double d_fum_volume =0.0;
char c_remarks[200]="\0";
int i_cntrct_enbld =0; /*** variable used to check fot proper update of contract ***/

EXEC SQL END DECLARE SECTION;

if( DEBUG_MSG_LVL_3 ) {
fn_userlog(c_ServiceName,"The inputed contract is:%s:%c:%s:%s:%c:%ld:",ptr_cntrct_details->c_xchng_cd, ptr_cntrct_details->c_prd_typ,ptr_cntrct_details->c_undrlyng,ptr_cntrct_details->c_expry_dt,ptr_cntrct_details->c_opt_typ,ptr_cntrct_details->l_strike_prc);
fn_userlog(c_ServiceName,"Volume for the contract is d_vloume:%lf",d_volume); 
}
 rtrim(ptr_cntrct_details->c_undrlyng); 

  i_rec_exists = 0;

  EXEC SQL
  SELECT 1
  INTO   :i_rec_exists
  FROM DUAL
  WHERE EXISTS
  ( SELECT FEM_XCHNG_CD
    FROM   FEM_FO_EXCEPTION_MSTR
    WHERE  FEM_XCHNG_CD   = :ptr_cntrct_details->c_xchng_cd
    AND    FEM_PRDCT_TYP  = :ptr_cntrct_details->c_prd_typ
    AND    FEM_INDSTK     = :ptr_cntrct_details->c_ctgry_indstk
    AND    FEM_UNDRLYNG   = :ptr_cntrct_details->c_undrlyng
    AND    FEM_EXPRY_DT   = :ptr_cntrct_details->c_expry_dt
    AND    FEM_EXER_TYP   = :ptr_cntrct_details->c_exrc_typ
    AND    FEM_OPT_TYP    = :ptr_cntrct_details->c_opt_typ
    AND    FEM_STRK_PRC   = :ptr_cntrct_details->l_strike_prc
  );
  if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
  {
      fn_errlog(c_ServiceName,"S31085", SQLMSG, ptr_st_err_msg->c_err_msg);
      return FAILURE;
  }

  else if ( SQLCODE == NO_DATA_FOUND )
  {
     i_rec_exists = 0;
  }

  if( i_rec_exists == 1)    /**Contract is present in exception list, to be skipped **/
  {
    fn_userlog(c_ServiceName,"The inputed contract Present in Exception Master :%s:%c:%s:%s:%c:%c:%ld:",  \
    ptr_cntrct_details->c_xchng_cd, ptr_cntrct_details->c_prd_typ,ptr_cntrct_details->c_undrlyng,       \
    ptr_cntrct_details->c_expry_dt, \
    ptr_cntrct_details->c_exrc_typ,ptr_cntrct_details->c_opt_typ,ptr_cntrct_details->l_strike_prc);

    sprintf(c_msg,"The inputed contract Present in Exception Master :%s:%c:%s:%s:%c:%c:%ld:",  \
    ptr_cntrct_details->c_xchng_cd, ptr_cntrct_details->c_prd_typ,ptr_cntrct_details->c_undrlyng,       \
    ptr_cntrct_details->c_expry_dt, \
    ptr_cntrct_details->c_exrc_typ,ptr_cntrct_details->c_opt_typ,ptr_cntrct_details->l_strike_prc);

    fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
    return SUCCESS;
  }


  EXEC SQL
  SELECT NVL(FUM_OPEN_INTEREST,0),
         NVL(FUM_VOLUME,0),
         NVL(FUM_MRKT_FLG_VOL,0) /** ver 3.3 ***/
  INTO   :d_fum_open_interest,
         :d_fum_volume,
         :d_fum_mkt_flg_vol /*** ver 3.3 ***/
  FROM FUM_FO_UNDRLYNG_MSTR
  WHERE FUM_PRDCT_TYP = :ptr_cntrct_details->c_prd_typ
  AND   FUM_UNDRLYNG  = :ptr_cntrct_details->c_undrlyng
  AND   FUM_XCHNG_CD  = :ptr_cntrct_details->c_xchng_cd;  /*** Ver 1.8 ***/
  if(SQLCODE!=0 && SQLCODE!=NO_DATA_FOUND)
  {
    fn_errlog(c_ServiceName,"S31090",SQLMSG,ptr_st_err_msg->c_err_msg);
    return FAILURE;
  }

  if(SQLCODE == NO_DATA_FOUND )
  {
    fn_userlog(c_ServiceName," Inside NO DATA FOUND FOR FUM");
    sprintf(ptr_st_err_msg->c_err_msg,"Apply BhavCopy is failed for:%s:%c: as Underlyng Master Entry not Present",ptr_cntrct_details->c_undrlyng,ptr_cntrct_details->c_prd_typ);
    return SUCCESS;
  }


if( DEBUG_MSG_LVL_3 ) {
fn_userlog(c_ServiceName,":%s:%c:%c:%s:%s:%c:%c:%ld:",ptr_cntrct_details->c_xchng_cd,ptr_cntrct_details->c_prd_typ,ptr_cntrct_details->c_ctgry_indstk,ptr_cntrct_details->c_undrlyng,ptr_cntrct_details->c_expry_dt,ptr_cntrct_details->c_exrc_typ,ptr_cntrct_details->c_opt_typ,ptr_cntrct_details->l_strike_prc);

fn_userlog(c_ServiceName,"Fum Open Interest:%lf:Fum Volume:%lf:",d_fum_open_interest,d_fum_volume);
fn_userlog(c_ServiceName,"FTQ Open Interest:%lf:FTQ Volume:%lf:",d_open_interest,d_volume); /*** Ver 2.6 ***/
fn_userlog(c_ServiceName,"Fum Mkt ALlwd flag :%lf:",d_fum_mkt_flg_vol); /** ver 3.3 **/
}

  /*** 500 == 500 File mode BHAV COPY changes to N **
       we dont't have to enable it ***/
  
  if( (((long long)d_volume)== ((long)(long)d_fum_mkt_flg_vol)) && ( c_mv_flag == 'N' ))
  {
   return 0;
  }

  /*** contract master volume 500
       underlying master volume 600
       We should disable such contract 
       if already disbaled dont do anything ***/
  
  if( ( d_volume < d_fum_mkt_flg_vol ) && ( c_mv_flag == 'N' ))
  {
    return 0;
  }  


  /*** contract master volume 800
       underlying master volume 600
       We should enble such contract
       if already enabled dont do anything ***/

  if( (d_volume > d_fum_mkt_flg_vol ) && ( c_mv_flag == 'Y' ))
  {
    return 0;
  }
  
  if( (ptr_cntrct_details->c_prd_typ == 'O')  )
  {
  if ( d_volume > d_fum_mkt_flg_vol )
  {
    EXEC SQL
    UPDATE FTQ_FO_TRD_QT
    SET FTQ_MRKT_ORDR_FLG = 'Y'
    WHERE FTQ_XCHNG_CD = :ptr_cntrct_details->c_xchng_cd
    AND FTQ_PRDCT_TYP  = :ptr_cntrct_details->c_prd_typ
    AND FTQ_INDSTK     = :ptr_cntrct_details->c_ctgry_indstk
    AND FTQ_UNDRLYNG   = :ptr_cntrct_details->c_undrlyng
    AND FTQ_EXPRY_DT   = :ptr_cntrct_details->c_expry_dt
    AND FTQ_EXER_TYP   = :ptr_cntrct_details->c_exrc_typ
    AND FTQ_OPT_TYP    = :ptr_cntrct_details->c_opt_typ
    AND FTQ_STRK_PRC   = :ptr_cntrct_details->l_strike_prc;
   }
   else if( d_volume <= d_fum_mkt_flg_vol )
   {
    EXEC SQL
    UPDATE FTQ_FO_TRD_QT
    SET FTQ_MRKT_ORDR_FLG = 'N'
    WHERE FTQ_XCHNG_CD = :ptr_cntrct_details->c_xchng_cd
    AND FTQ_PRDCT_TYP  = :ptr_cntrct_details->c_prd_typ
    AND FTQ_INDSTK     = :ptr_cntrct_details->c_ctgry_indstk
    AND FTQ_UNDRLYNG   = :ptr_cntrct_details->c_undrlyng
    AND FTQ_EXPRY_DT   = :ptr_cntrct_details->c_expry_dt
    AND FTQ_EXER_TYP   = :ptr_cntrct_details->c_exrc_typ
    AND FTQ_OPT_TYP    = :ptr_cntrct_details->c_opt_typ
    AND FTQ_STRK_PRC   = :ptr_cntrct_details->l_strike_prc;
   }
    if(SQLCODE != 0 && SQLCODE !=NO_DATA_FOUND)
    {
      fn_errlog ( c_ServiceName,"S31095",SQLMSG,ptr_st_err_msg->c_err_msg);
      return FAILURE;
    }
    if(SQLCODE == NO_DATA_FOUND )
    {
      sprintf(ptr_st_err_msg->c_err_msg,"Update BhavCpy is failed for :%s:%s:%ld:%c:%c:  \
      as Contract Master Entry not Present",ptr_cntrct_details->c_undrlyng,ptr_cntrct_details->c_expry_dt,  \
      ptr_cntrct_details->l_strike_prc,ptr_cntrct_details->c_exrc_typ,ptr_cntrct_details->c_opt_typ);
      return SUCCESS;
    }

  }

 return SUCCESS;

}
