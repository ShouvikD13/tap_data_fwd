/*** ver 1.1 IBM Migration Changes sandeep ***/
/*** Ver 1.2 FNO BSE Changes | Sachin Birje ***/
/*** Ver 1.4 Physical Settlement Of Stock Derivative | Suchita Dabir ***/

#include <atmi.h>
#include <fml32.h>
#include<sqlca.h>             /*** Ver 1.2 ***/
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fml_def.h>
#include <fo_fml_def.h>
#include <fn_ddr.h>
#include <string.h>			/*** Ver 1.1 ***/	
#include <fml_rout.h>	  /*** Ver 1.1 ***/
#include <fn_read_debug_lvl.h>      /*** Ver 1.1 ***/

void BAT_CNTRCT_DWLD ( int argc, char *argv[] )
{
	long int li_tot_rcrds;
  int i_ch_val;
  int  i_trnsctn;  /** Ver 1.2 **/
  long int li_cnt;
  char c_msg[256];
	FBFR32 *ptr_fml_buf;
  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];

	char  c_usr_id[8];
	long  l_session_id;
	char	c_ixchng_cd [21]; 
	char	c_oxchng_cd [21]; 
	char	c_trd_dt[12]; 

	long l_script_id;
	char c_instrmnt_typ[9];
	char c_symbol[12];
	char c_expry_dt[12];
	char c_opt_typ[3];
  char c_bse_opt_typ[5];   /*** Ver 1.2 ***/
  double d_strike_prc;
  long l_ca_lvl;
	long l_min_lot_qty;
	long l_tck_sc;
	long l_multplr;
	char	c_rout_crt[4]; 
  
  char c_series_cd[20+1];   /*** Ver 1.2 ****/ 
  char c_asset_cd[8+1];     /*** Ver 1.2 ***/
  char c_underlying_asset[12+1];  /*** Ver 1.2 ***/
  char c_settlmnt_indicator[2]; /*** Ver 1.4 ***/ 
  MEMSET( c_settlmnt_indicator ); /*** Ver 1.4 ***/
 
  /*** Ver 1.2 ***/
  EXEC SQL BEGIN DECLARE SECTION;
  varchar c_expiry_dt [ LEN_DATE ];  
  EXEC SQL END DECLARE SECTION;
  /*** Ver 1.2 ***/
	
  strcpy ( c_ServiceName, argv[0] );

	INITBATDBGLVL(argv[0]);     /*** Ver 1.1 ***/

	sprintf ( c_msg, "Batch process %s started", argv[0] );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

	strcpy ( c_msg, "Creating data. Please wait ... " );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
	strcpy(c_usr_id,"system");
	l_session_id = 0;

	strcpy( c_ixchng_cd, argv[2] );
	strcpy(c_trd_dt, argv[4] );

  fn_init_ddr_pop ( "NA", "NA", "NA" );
  fn_userlog(c_ServiceName,"4444"); /*** Ver 1.2 ***/
	ptr_fml_buf = fn_create_rs ( c_ServiceName,
                               c_err_msg,
                               "SFO_GETCONTMAST",
                               TPNOTIME,
															 4,
															 FFO_USR_ID, ( char * )c_usr_id,
															 FFO_SSSN_ID, ( char * )&l_session_id,
															 FFO_XCHNG_CD, ( char * )c_ixchng_cd,
															 FFO_TRD_DT, ( char * )c_trd_dt	);
															 	
	if ( ptr_fml_buf == NULL )
	{
		fn_errlog( c_ServiceName, "S31005", LIBMSG, c_err_msg );
		return;
	}

	li_tot_rcrds = fn_reccnt_rs ( ptr_fml_buf,
                                c_ServiceName,
                                c_err_msg,
																FFO_SYMBOL);
	if ( li_tot_rcrds == SYSTEM_ERROR )
	{
		fn_errlog( c_ServiceName, "S31010", LIBMSG, c_err_msg );
		fn_dstry_rs ( ptr_fml_buf );
		return;
	}

	strcpy ( c_msg, "Data created." );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
  sprintf ( c_msg, "Total records = %ld", li_tot_rcrds );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  fn_userlog(c_ServiceName," Exchange code :%s:",c_ixchng_cd);  /** Ver 1.2 **/

  if( strcmp(c_ixchng_cd,"NFO") == 0)  /*** Ver 1.2 ***/
  {
   for ( li_cnt=1; li_cnt<=li_tot_rcrds; li_cnt++ )
   {
		i_ch_val = fn_getnxt_rs ( ptr_fml_buf,
                              c_ServiceName,
                              c_err_msg,
															12, /*** ver 1.4 changed 11 to 12 ***/
															FFO_XCHNG_CD, ( char * )c_oxchng_cd, NULL,
															FFO_EBA_CNTRCT_ID, ( char * )&l_script_id, NULL,
															FFO_INSTRMNT_TYP, ( char * )c_instrmnt_typ, NULL,
															FFO_SYMBOL, ( char * )c_symbol, NULL,
															FFO_EXPRY_DT, ( char * )c_expry_dt, NULL,
															FFO_OPTION_TYP, ( char * )c_opt_typ, NULL,
															FFO_STRIKE_PRC, ( char * )&d_strike_prc, NULL,
															FFO_CA_LVL, ( char * )&l_ca_lvl, NULL,
															FFO_MIN_LOT_QTY, ( char * )&l_min_lot_qty, NULL,
															FFO_TCK_SZ, ( char * )&l_tck_sc, NULL,
															FFO_MULTPLR, ( char * )&l_multplr, NULL,
                              FFO_ND_STRT_DT,(char *)c_settlmnt_indicator,NULL); /* ver 1.4 **/

		if ( i_ch_val != 0 )
		{
			fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
  		strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return;
		}
  

		if(li_cnt % 250 == 1)
		{
			sprintf ( c_msg, "Processing record %ld of %ld", li_cnt, li_tot_rcrds );
 			fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
		}
    i_ch_val = fn_pre_prcs_rcrd ( c_ServiceName,
                                  c_err_msg,
                                  "sfr_beod_mtchgt",
                                  li_cnt,
                                  li_tot_rcrds );
    if ( i_ch_val == -1 )
    {
			fn_errlog( c_ServiceName, "S31020", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
  		strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return;
    }

    fn_cpy_ddr ( c_rout_crt ) ;

    i_ch_val = fn_acall_svc_fml ( c_ServiceName,
                                  c_err_msg,
                                  "SFO_CNT_DWLD",
                                  0,
																	15,/** in ver 1.4 ,14 changed to 15 ***/
																	FFO_XCHNG_CD, ( char * )c_oxchng_cd,
																	FFO_EBA_CNTRCT_ID, ( char * )&l_script_id,
																	FFO_INSTRMNT_TYP, ( char * )c_instrmnt_typ,
																	FFO_SYMBOL, ( char * )c_symbol,
																	FFO_EXPRY_DT, ( char * )c_expry_dt,
																	FFO_OPTION_TYP, ( char * )c_opt_typ,
																	FFO_STRIKE_PRC, ( char * )&d_strike_prc,
																	FFO_CA_LVL, ( char * )&l_ca_lvl,
																	FFO_MIN_LOT_QTY, ( char * )&l_min_lot_qty,
																	FFO_TCK_SZ, ( char * )&l_tck_sc,
																	FFO_MULTPLR, ( char * )&l_multplr,
																	FFO_ROUT_CRT, ( char * )c_rout_crt,
																	FFO_BAT_TAG, ( char * )c_tag,
                                  FFO_REC_NO, ( char * )&li_cnt,
                                  FFO_ND_STRT_DT,(char *)c_settlmnt_indicator);/* ver 1.4 **/ 
                               
    if ( i_ch_val != 0 )
    {
			fn_errlog( c_ServiceName, "S31025", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
  		strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return;
		}
   }
  }  /*** Ver 1.2 ***/
  else if(strcmp(c_ixchng_cd,"BFO") == 0)  /*** Ver 1.2 starts ***/
  {
     
    i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
    if ( i_trnsctn == -1 )
    {
      fn_userlog (c_ServiceName,"Error in initial begin transaction ");
      fn_errlog ( c_ServiceName, "S31030", TPMSG, c_err_msg  );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return ;
    }

    EXEC SQL
         DELETE FROM FBM_FO_BSE_CO_MSTR;

    if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
     fn_userlog (c_ServiceName,"Error in inserting ");
     fn_errlog ( c_ServiceName, "S31035", SQLMSG, c_err_msg  );
     fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     strcpy ( c_msg, "System error. Contact system support" );
     fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
     return ;
    } 
    if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
    {
     fn_userlog (c_ServiceName,"Error in commit transaction ");
     fn_errlog ( c_ServiceName, "S31040", SQLMSG, c_err_msg);
     strcpy ( c_msg, "System error. Contact system support" );
     fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
     return ;
    }

    for ( li_cnt=1; li_cnt<=li_tot_rcrds; li_cnt++ )
    {
			
     i_ch_val = fn_getnxt_rs ( ptr_fml_buf,
                              c_ServiceName,
                              c_err_msg,
                              14,
                              FFO_XCHNG_CD, ( char * )c_oxchng_cd, NULL,
                              FFO_EBA_CNTRCT_ID, ( char * )&l_script_id, NULL,
                              FFO_INSTRMNT_TYP, ( char * )c_instrmnt_typ, NULL,
                              FFO_SYMBOL, ( char * )c_symbol, NULL,
                              FFO_EXPRY_DT, ( char * )c_expry_dt, NULL,
                              FFO_OPTION_TYP, ( char * )c_bse_opt_typ, NULL,
                              FFO_STRIKE_PRC, ( char * )&d_strike_prc, NULL,
                              FFO_CA_LVL, ( char * )&l_ca_lvl, NULL,
                              FFO_MIN_LOT_QTY, ( char * )&l_min_lot_qty, NULL,
                              FFO_TCK_SZ, ( char * )&l_tck_sc, NULL,
                              FFO_MULTPLR, ( char * )&l_multplr, NULL,
                              FFO_INDX_CD, (char * )c_series_cd, NULL,
                              FFO_STCK_CD, (char * )c_asset_cd, NULL,
                              FFO_REFACK_DTLS, (char * )c_underlying_asset, NULL );

    if ( i_ch_val != 0 )
    {
      fn_errlog( c_ServiceName, "S31045", LIBMSG, c_err_msg );
      fn_dstry_rs ( ptr_fml_buf );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return;
    }
    if(li_cnt % 250 == 1)
    {
      sprintf ( c_msg, "Processing record %ld of %ld", li_cnt, li_tot_rcrds );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
    }
    i_ch_val = fn_pre_prcs_rcrd ( c_ServiceName,
                                  c_err_msg,
                                  "sfr_beod_mtchgt",
                                  li_cnt,
                                  li_tot_rcrds );
    if ( i_ch_val == -1 )
    {
      fn_errlog( c_ServiceName, "S31050", LIBMSG, c_err_msg );
      fn_dstry_rs ( ptr_fml_buf );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return;
    }
    
    fn_cpy_ddr ( c_rout_crt ) ;

    if( strncmp(c_series_cd,"MSX", 3) == 0 )
    {
     MEMSET(c_symbol);
     strcpy(c_symbol,"MSX");    /*** for Series code starting with MSX, SEM MAP val is MSX in SEM ENTITY table***/
     rtrim(c_symbol);
     fn_userlog(c_ServiceName," MSX Symbol :%s:",c_symbol);
    }
    i_ch_val = fn_acall_svc_fml ( c_ServiceName,
                                  c_err_msg,
                                  "SFO_CNT_DWLD",
                                  0,
                                  15,
                                  FFO_XCHNG_CD, ( char * )c_oxchng_cd,
                                  FFO_EBA_CNTRCT_ID, ( char * )&l_script_id,
                                  FFO_INSTRMNT_TYP, ( char * )c_instrmnt_typ,
                                  FFO_SYMBOL, ( char * )c_symbol,
                                  FFO_EXPRY_DT, ( char * )c_expry_dt,
                                  FFO_OPTION_TYP, ( char * )c_bse_opt_typ,
                                  FFO_STRIKE_PRC, ( char * )&d_strike_prc,
                                  FFO_CA_LVL, ( char * )&l_ca_lvl,
                                  FFO_MIN_LOT_QTY, ( char * )&l_min_lot_qty,
                                  FFO_TCK_SZ, ( char * )&l_tck_sc,
                                  FFO_MULTPLR, ( char * )&l_multplr,
                                  FFO_IMTM_RMRKS, ( char * )c_series_cd, 
                                  FFO_ROUT_CRT, ( char * )c_rout_crt,
                                  FFO_BAT_TAG, ( char * )c_tag,
                                  FFO_REC_NO, ( char * )&li_cnt );

    if ( i_ch_val != 0 )
    {
      fn_errlog( c_ServiceName, "S31055", LIBMSG, c_err_msg );
      fn_dstry_rs ( ptr_fml_buf );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return;
    }

    i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
    if ( i_trnsctn == -1 )
    {
     fn_userlog (c_ServiceName,"Error in initial begin transaction ");
     fn_errlog ( c_ServiceName, "S31060", TPMSG, c_err_msg  );
     strcpy ( c_msg, "System error. Contact system support" );
     fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
     return ;
    }

    fn_userlog(c_ServiceName," c_expry_dt :%s:",c_expry_dt);
    strcpy ( ( char * )c_expiry_dt.arr,c_expry_dt);
    SETLEN(c_expiry_dt);
    rtrim(c_asset_cd);
    rtrim(c_underlying_asset);
    if (DEBUG_MSG_LVL_3)
    { 
     fn_userlog(c_ServiceName," l_script_id :%ld:",l_script_id);
     fn_userlog(c_ServiceName," c_instrmnt_typ :%s:",c_instrmnt_typ);
     fn_userlog(c_ServiceName," c_expiry_dt  :%s:",c_expiry_dt.arr);
     fn_userlog(c_ServiceName,"  d_strike_prc :%lf:",d_strike_prc);
     fn_userlog(c_ServiceName," c_bse_opt_typ :%s:",c_bse_opt_typ);
     fn_userlog(c_ServiceName," c_series_cd   :%s:",c_series_cd);
     fn_userlog(c_ServiceName," c_symbol  :%s:",c_symbol);
     fn_userlog(c_ServiceName," c_asset_cd :%s:",c_asset_cd);
     fn_userlog(c_ServiceName," c_underlying_asset :%s:",c_underlying_asset);
     fn_userlog(c_ServiceName," l_min_lot_qty :%ld:",l_min_lot_qty);
     fn_userlog(c_ServiceName," l_tck_sc      :%ld:",l_tck_sc);
    }

    EXEC SQL 
         INSERT INTO FBM_FO_BSE_CO_MSTR
                     (FBM_SERIES_ID,
                      FBM_PRDCT_TYP,
                      FBM_EXPIRY_DT, 
                      FBM_STRK_PRC,
                      FBM_OPT_TYP,
                      FBM_SERIES_CD,
                      FBM_SCRIP_CD,
                      FBM_ASSET_CD,
                      FBM_UNDRLYNG_ASSET,
                      FBM_MIN_LOT_SZ,
                      FBM_TCK_SZ)
               VALUES( :l_script_id,
                       :c_instrmnt_typ,
                       to_date(:c_expiry_dt,'dd-MM-yyyy'),
                       :d_strike_prc,
                       :c_bse_opt_typ,
                       :c_series_cd,
                       :c_symbol,   
                       :c_asset_cd,
                       :c_underlying_asset,
                       :l_min_lot_qty,
                       :l_tck_sc
                     );
     if(SQLCODE !=0)
     {
      fn_userlog (c_ServiceName,"Error in inserting ");
      fn_errlog ( c_ServiceName, "S31065", SQLMSG, c_err_msg  );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return ;
     }

     if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
     {
      fn_userlog (c_ServiceName,"Error in commit transaction ");
      fn_errlog ( c_ServiceName, "S31070", SQLMSG, c_err_msg);
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
      return ;
     }
   }
  } /*** Ver 1.2 Ends Here ***/

	fn_dstry_rs ( ptr_fml_buf );

	sprintf ( c_msg, "Batch process %s ended", argv[0] );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  return;
}

int fn_bat_init ( int argc, char *argv[] ) 
{
	fn_var = BAT_CNTRCT_DWLD;
	return 0;
}

void fn_bat_term ( int argc, char *argv[] )
{
	return;
}

int fn_prcs_trg ( char *c_pgm_nm , int i_trg_typ )
{
	return 0;
}
