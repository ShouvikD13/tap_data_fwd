/*******************************************************************************************************
* Service name :  BAT_FOPHYEOS_SMSNTFMSG                                                               *
*                                                                                                      *
* Description  :  This Batch Program will send SMS, NOTIFICATION AND MYMSSG  to all customer having    * 
*                 open position in physically settled underlyings before squaring off their position   * 
*                                                                                                      *
* LOG          :  08-Apr-2019         1.0       -Anuj Pancholi                                         *
********************************************************************************************************
* 1.0          :  Initial Release                                                                      *
* 1.1          :  Block delivery margin on ITM long Call & Put options from                            *
*                 Expry-4 days till  Expiry  (Anuj Pancholi)                                           * 
* 1.2          :  Delivery square off process time change from current 12 pm to 2 pm (Anuj Pancholi)   *
* 1.3          :  Modified the csm update query for csm message column.                                *  
********************************************************************************************************/
#include <stdio.h>
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <Usysflds.h>
#include <fo.h>
#include <fn_env.h>			/*** Ver 1.2 ***/
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fml_def.h>
#include <fo_view_def.h>
#include <eba_to_ors.h>
#include <fn_ddr.h>
#include <errno.h>
#include <string.h>
#include <fn_read_debug_lvl.h>
#include <fml_rout.h>
#include <ctype.h>
#include <stdlib.h>
#include <userlog.h>
#define TOTAL_FML 8 
#define MYMSG_NOTFCN_AND_SMS 'A'

int fn_snd_mymsg_sms_notfcn(char *c_ServiceName,
                            FBFR32 **ptr_fml_Sendbuffer,
                            char *c_user_id,
                            long l_sssn_id,
                            char *c_mtch_acc,
                            char *c_csm_msg_typ,
                            char c_msg_rqst_typ,
                            char *c_err_msg);

void BAT_FOPHYEOS_SMSNTFMSG( int argc, char *argv[])
{
  char c_ServiceName[33] = {'\0'};
  char c_err_msg[256] = {'\0'};
  char c_msg[256] = {'\0'};
  char c_xchng_cd[4] = {'\0'};
  int i_returncode = 0;
  int i_ch_val = 0;
  int i_err[TOTAL_FML];
  int i_counter;
  char c_undrlyng  [256]; 
  char c_expry_dt [12];
  char c_EOS_dt [12];
  char c_prdct_typ;
  char c_run_mode; /** Ver 1.1 **/
  long int i=0;
  long int rcrdCount=0;
  int  i_trnsctn=0;
  int  i_cmt_rcrd_cnt=0;

	/*** Ver 1.2 Started ***/
	char c_fut_runtime [5];		
	char c_opt_runtime [5];		
	char c_INIFileName[256];
  MEMSET( c_INIFileName );
	char c_paramToRead[20];
  MEMSET( c_paramToRead );
	char    *ptr;

	strcpy(c_paramToRead,argv[0] );
	 
	/*** Ver 1.2 Ended ***/

  FBFR32  *Sbuffer;

 
  EXEC SQL BEGIN DECLARE SECTION;
  varchar v_get_lsm_dept_id[30+1];
  varchar v_get_lsm_app_id[30+1];
  varchar v_get_lsm_mssg[350];
  varchar v_get_usr_id[15];
  varchar v_get_mobile_num[12+1];
  varchar v_get_match_accnt[10+1];
  varchar v_gsd_msg_hdr[10+1];
  varchar v_gsd_bus_user_grp[6+1];
  EXEC SQL END DECLARE SECTION;
 
  typedef struct phyEosrcds
  {
   char c_st_lsm_dept_id[12];
   char c_st_lsm_app_id[12];
   char c_st_mobile_num[11];
   char c_st_lsm_mssg[301];   /** Ver 1.1 changed frm 300 to 301 **/
   char c_st_usr_id[20];
   char c_st_match_accnt[11];
  }struct_phyeos_recrds;


  struct_phyeos_recrds * var_st_phyeos_recrds= NULL;



  MEMSET(v_gsd_msg_hdr);
  MEMSET(v_gsd_bus_user_grp);
  
  strcpy(v_gsd_msg_hdr.arr,"PHYEOS"); 
  strcpy(v_gsd_bus_user_grp.arr,"EPG");

  MEMSET(c_ServiceName);
  MEMSET(c_expry_dt);
  MEMSET(c_undrlyng);
  MEMSET(c_EOS_dt);
  MEMSET(c_prdct_typ);

  EXEC SQL BEGIN DECLARE SECTION;
     sql_cursor  sys_cursor;
  EXEC SQL END DECLARE SECTION;

 
  strcpy(c_ServiceName, argv[0]);
  INITBATDBGLVL(argv[0]);

  fn_userlog(c_ServiceName, "'%s'", c_ServiceName);

  sprintf( c_msg, "Batch process %s started", c_ServiceName );
  fn_bat_pst_msg( c_ServiceName, c_msg, c_tag );
  
  /* Allocate for Sbuffer */
  Sbuffer = (FBFR32 *)tpalloc("FML32", NULL, MIN_FML_BUF_LEN);
  if(Sbuffer == NULL)
  {
    fn_errlog(c_ServiceName, "S31005", TPMSG, c_err_msg);   
    return;
  }

  c_prdct_typ = argv[4][0]; 
  strcpy(c_undrlyng, argv[5]);
  strcpy(c_expry_dt, argv[6]);
  strcpy(c_EOS_dt, argv[7]);


  c_run_mode =  argv[8][0]; /** Ver 1.1 **/ 
		
  rtrim(c_undrlyng);
  rtrim(c_expry_dt);

  EXEC SQL
    SELECT TRIM(TO_CHAR(to_date(:c_EOS_dt,'dd-Mon-yyyy'),'Mon'))||' '||TO_CHAR(to_date(:c_EOS_dt,'dd-Mon-yyyy'),'dd')
    INTO
    :c_EOS_dt
    FROM DUAL;
  rtrim(c_EOS_dt);
  
  if(SQLCODE != 0)
   {
    fn_errlog( c_ServiceName, "S31010", SQLMSG, c_err_msg );
    tpfree((char *)Sbuffer);
    return;
   }

  fn_userlog( c_ServiceName,"modified c_EOS_dt :%s:",c_EOS_dt);

  if (DEBUG_MSG_LVL_0) 
   {
    fn_userlog( c_ServiceName,"c_prdct_typ :%c:",c_prdct_typ);
    fn_userlog( c_ServiceName,"c_undrlyng :%s:",c_undrlyng);
    fn_userlog( c_ServiceName,"c_expry_dt :%s:",c_expry_dt);
    fn_userlog( c_ServiceName,"c_EOS_dt :%s:",c_EOS_dt);
    fn_userlog( c_ServiceName,"c_run_mode :%c:",c_run_mode);
   }

  
  if( c_prdct_typ != 'F' && c_prdct_typ != 'O' )
  {
   fn_errlog( c_ServiceName, "S31015","Invalid Product Type", c_err_msg );
   strcpy ( c_msg, "Invalid Product Type" );
   fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
   tpfree((char *)Sbuffer);
   return;
  }
  
  if(c_run_mode =='D' &&  c_prdct_typ =='F')
  {
   fn_errlog( c_ServiceName, "S31020","Run Mode cannot be D for Product Type F", c_err_msg );
   strcpy ( c_msg, "Invalid Product Type" );
   fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
   tpfree((char *)Sbuffer);
   return; 
  }


  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
      fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
      fn_errlog ( c_ServiceName, "S31025", SQLMSG, c_err_msg  );
      return; 
  }

  
 
  EXEC SQL
  DELETE FROM CMT_CLNTSPEC_MSG_TEMP WHERE trunc(CSM_UPD_DT) != TRUNC(SYSDATE);
  
    if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
  {
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    fn_errlog(c_ServiceName,"S31030",SQLMSG,c_err_msg);
    tpfree((char *)Sbuffer);
    return;
  }



  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    fn_errlog( c_ServiceName, "S31035",LIBMSG,c_err_msg);
    return;
  }
 
    
  if (strcmp(c_undrlyng ,"ALL") == 0 )
   {
    MEMSET(c_undrlyng);      
    strcpy(c_undrlyng,"%");
   }

  /* Ver 1.1 RUNE MODE 'N' for Normal run , RUN MODE 'D' for Sufficient Delivery Mrgn Run */

 if (c_prdct_typ =='F' && c_run_mode == 'N') /** Ver 1.1  Added RUN MODE check **/
   {                      
    if ( strcmp(c_undrlyng,"%") == 0 )
      {
       EXEC SQL
       SELECT COUNT(1)
       INTO   :rcrdCount
       FROM (
              SELECT FFP_CLM_MTCH_ACCNT match_accnt,
                     FFP_XCHNG_CD       xchng_cd,
                     FFP_PRDCT_TYP      prdct_typ,
                     FFP_UNDRLYNG       undrlyng,
                     FFP_EXPRY_DT       expry_dt,
                     NVL(USR_MBL_NMBRS,'**********')      mobile_num,
                     USR_USR_ID         usr_id
              FROM   FFP_FO_FUTURES_PSTN,FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
              WHERE  FFP_UNDRLYNG  = FTQ_UNDRLYNG
              AND    FFP_PRDCT_TYP = FTQ_PRDCT_TYP
              AND    FFP_XCHNG_CD  = FTQ_XCHNG_CD
              AND    FFP_EXPRY_DT  = FTQ_EXPRY_DT
              AND    FFP_XCHNG_CD  = 'NFO' 
              AND    FFP_PRDCT_TYP = :c_prdct_typ
              AND    FFP_EXPRY_DT  = :c_expry_dt
              AND    FFP_OPNPSTN_FLW != 'N'
              AND    FTQ_SETLMNT_FLG  = 'P'
              AND    TRIM(FTQ_UNDRLYNG) LIKE  :c_undrlyng
              AND    FFP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
              AND    USR_USR_ID = UAC_USR_ID
              UNION ALL
              SELECT FCP_CLM_MTCH_ACCNT match_accnt,
                     FCP_XCHNG_CD       xchng_cd,
                     FCP_PRDCT_TYP      prdct_typ,
                     FCP_UNDRLYNG       undrlyng,
                     FCP_EXPRY_DT       expry_dt,
                     NVL(USR_MBL_NMBRS,'**********')    mobile_num,
                     USR_USR_ID         usr_id
              FROM   FCP_FO_SPN_CNTRCT_PSTN,FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
              WHERE  FCP_UNDRLYNG  = FTQ_UNDRLYNG
              AND    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
              AND    FCP_XCHNG_CD  = FTQ_XCHNG_CD
              AND    FCP_EXPRY_DT  = FTQ_EXPRY_DT
              AND    FCP_XCHNG_CD  = 'NFO' 
              AND    FCP_PRDCT_TYP = :c_prdct_typ
              AND    FCP_EXPRY_DT  = :c_expry_dt
              AND    FCP_OPNPSTN_FLW != 'N'
              AND    FTQ_SETLMNT_FLG  = 'P'
              AND    TRIM(FTQ_UNDRLYNG) LIKE :c_undrlyng
              AND    FCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
              AND    USR_USR_ID = UAC_USR_ID);

        }
     else
        {
          EXEC SQL
          SELECT COUNT(1)
          INTO   :rcrdCount
          FROM (
                SELECT FFP_CLM_MTCH_ACCNT match_accnt,
                       FFP_XCHNG_CD       xchng_cd,
                       FFP_PRDCT_TYP      prdct_typ,
                       FFP_UNDRLYNG       undrlyng,
                       FFP_EXPRY_DT       expry_dt,
                       NVL(USR_MBL_NMBRS,'**********')    mobile_num,
                       USR_USR_ID         usr_id
                FROM   FFP_FO_FUTURES_PSTN,FTQ_FO_TRD_QT, USR_USER_MASTER, UAC_USR_ACCNTS
                WHERE  FFP_UNDRLYNG  = FTQ_UNDRLYNG
                AND    FFP_PRDCT_TYP = FTQ_PRDCT_TYP
                AND    FFP_XCHNG_CD  = FTQ_XCHNG_CD
                AND    FFP_EXPRY_DT  = FTQ_EXPRY_DT
                AND    FFP_XCHNG_CD  = 'NFO' 
                AND    FFP_PRDCT_TYP = :c_prdct_typ
                AND    FFP_EXPRY_DT  = :c_expry_dt
                AND    FFP_OPNPSTN_FLW != 'N'
                AND    FTQ_SETLMNT_FLG  = 'P'
                AND    TRIM(FTQ_UNDRLYNG) IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM)
                                     FROM   DUAL
                                     CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
                AND    FFP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
                AND    USR_USR_ID = UAC_USR_ID
                UNION ALL
                SELECT FCP_CLM_MTCH_ACCNT match_accnt,
                       FCP_XCHNG_CD       xchng_cd,
                       FCP_PRDCT_TYP      prdct_typ,
                       FCP_UNDRLYNG       undrlyng,
                       FCP_EXPRY_DT       expry_dt,
                       NVL(USR_MBL_NMBRS,'**********')   mobile_num,
                       USR_USR_ID         usr_id
                FROM   FCP_FO_SPN_CNTRCT_PSTN,FTQ_FO_TRD_QT, USR_USER_MASTER, UAC_USR_ACCNTS
                WHERE  FCP_UNDRLYNG  = FTQ_UNDRLYNG
                AND    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
                AND    FCP_XCHNG_CD  = FTQ_XCHNG_CD
                AND    FCP_EXPRY_DT  = FTQ_EXPRY_DT
                AND    FCP_XCHNG_CD  = 'NFO' 
                AND    FCP_PRDCT_TYP = :c_prdct_typ
                AND    FCP_EXPRY_DT  = :c_expry_dt
                AND    FCP_OPNPSTN_FLW != 'N'
                AND    FTQ_SETLMNT_FLG  = 'P'
                AND    TRIM(FTQ_UNDRLYNG)  IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM)
                                      FROM   DUAL
                                      CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
                AND    FCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
                AND    USR_USR_ID = UAC_USR_ID );

         }

    }

   else if( c_prdct_typ =='O' && c_run_mode == 'N')  /** Ver 1.1 **/
   {
       if(strcmp(c_undrlyng,"%") == 0)
        {
         EXEC SQL
          SELECT COUNT(1)
          INTO   :rcrdCount
          FROM (
              SELECT DISTINCT FCP_UNDRLYNG  undrlyng,
              FCP_CLM_MTCH_ACCNT match_accnt,
              FCP_XCHNG_CD       xchng_cd,
              FCP_PRDCT_TYP      prdct_typ,
              FCP_EXPRY_DT       expry_dt,
              NVL(USR_MBL_NMBRS,'**********')   mobile_num,
              USR_USR_ID         usr_id
       FROM   FCP_FO_SPN_CNTRCT_PSTN,FTQ_FO_TRD_QT,USR_USER_MASTER, UAC_USR_ACCNTS
       WHERE  FCP_UNDRLYNG  = FTQ_UNDRLYNG
       AND    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
       AND    FCP_XCHNG_CD  = FTQ_XCHNG_CD
       AND    FCP_EXPRY_DT  = FTQ_EXPRY_DT
       AND    FCP_STRK_PRC  = FTQ_STRK_PRC
       AND    FCP_OPT_TYP   = FTQ_OPT_TYP
       AND    FCP_XCHNG_CD  = 'NFO' 
       AND    FCP_PRDCT_TYP = :c_prdct_typ
       AND    FCP_EXPRY_DT  = :c_expry_dt
       AND    FCP_OPNPSTN_FLW != 'N'
       AND    FTQ_SETLMNT_FLG  = 'P'
       AND    TRIM(FTQ_UNDRLYNG) LIKE :c_undrlyng
       AND    FCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
       AND    USR_USR_ID = UAC_USR_ID
       UNION ALL
       SELECT DISTINCT FOP_UNDRLYNG  undrlyng,
              FOP_CLM_MTCH_ACCNT match_accnt,
              FOP_XCHNG_CD       xchng_cd,
              FOP_PRDCT_TYP      prdct_typ,
              FOP_EXPRY_DT       expry_dt,
              NVL(USR_MBL_NMBRS,'**********')      mobile_num,
              USR_USR_ID         usr_id
       FROM   FOP_FO_OPTIONS_PSTN,FTQ_FO_TRD_QT, USR_USER_MASTER, UAC_USR_ACCNTS
       WHERE  FOP_UNDRLYNG  = FTQ_UNDRLYNG
       AND    FOP_PRDCT_TYP = FTQ_PRDCT_TYP
       AND    FOP_XCHNG_CD  = FTQ_XCHNG_CD
       AND    FOP_EXPRY_DT  = FTQ_EXPRY_DT
       AND    FOP_STRK_PRC  = FTQ_STRK_PRC
       AND    FOP_OPT_TYP   = FTQ_OPT_TYP     /** Ver 1.2 **/
       AND    FOP_XCHNG_CD  = 'NFO' 
       AND    FOP_PRDCT_TYP = :c_prdct_typ
       AND    FOP_EXPRY_DT  = :c_expry_dt
       AND    FOP_OPNPSTN_FLW != 'N'
       AND    FTQ_SETLMNT_FLG  = 'P'
       AND    TRIM(FTQ_UNDRLYNG) LIKE :c_undrlyng
       AND    FOP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
       AND    USR_USR_ID = UAC_USR_ID );

        }
      else
      {
       EXEC SQL
          SELECT COUNT(1)
          INTO   :rcrdCount
          FROM (
              SELECT  DISTINCT FCP_UNDRLYNG  undrlyng,
              FCP_CLM_MTCH_ACCNT match_accnt,
              FCP_XCHNG_CD       xchng_cd,
              FCP_PRDCT_TYP      prdct_typ,
              FCP_EXPRY_DT       expry_dt,
              NVL(USR_MBL_NMBRS,'**********')    mobile_num,
              USR_USR_ID         usr_id
       FROM   FCP_FO_SPN_CNTRCT_PSTN,FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
       WHERE  FCP_UNDRLYNG  = FTQ_UNDRLYNG
       AND    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
       AND    FCP_XCHNG_CD  = FTQ_XCHNG_CD
       AND    FCP_EXPRY_DT  = FTQ_EXPRY_DT
       AND    FCP_STRK_PRC  = FTQ_STRK_PRC
       AND    FCP_OPT_TYP   = FTQ_OPT_TYP
       AND    FCP_XCHNG_CD  = 'NFO' 
       AND    FCP_PRDCT_TYP = :c_prdct_typ
       AND    FCP_EXPRY_DT  = :c_expry_dt
       AND    FCP_OPNPSTN_FLW != 'N'
       AND    FTQ_SETLMNT_FLG  = 'P'
       AND    TRIM(FTQ_UNDRLYNG)   IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM)
                                       FROM   DUAL
                                       CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
       AND    FCP_CLM_MTCH_ACCNT  = UAC_CLM_MTCH_ACCNT
       AND    USR_USR_ID = UAC_USR_ID
       UNION ALL
       SELECT DISTINCT FOP_UNDRLYNG  undrlyng,
              FOP_CLM_MTCH_ACCNT match_accnt,
              FOP_XCHNG_CD       xchng_cd,
              FOP_PRDCT_TYP      prdct_typ,
              FOP_EXPRY_DT       expry_dt,
              NVL(USR_MBL_NMBRS,'**********')    mobile_num,
              USR_USR_ID         usr_id
       FROM   FOP_FO_OPTIONS_PSTN,FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
       WHERE  FOP_UNDRLYNG  = FTQ_UNDRLYNG
       AND    FOP_PRDCT_TYP = FTQ_PRDCT_TYP
       AND    FOP_XCHNG_CD  = FTQ_XCHNG_CD
       AND    FOP_EXPRY_DT  = FTQ_EXPRY_DT
       AND    FOP_STRK_PRC  = FTQ_STRK_PRC
       AND    FOP_OPT_TYP   = FTQ_OPT_TYP
       AND    FOP_XCHNG_CD  = 'NFO' 
       AND    FOP_PRDCT_TYP = :c_prdct_typ
       AND    FOP_EXPRY_DT  = :c_expry_dt
       AND    FOP_OPNPSTN_FLW != 'N'
       AND    FTQ_SETLMNT_FLG  = 'P'
       AND    TRIM(FTQ_UNDRLYNG)   IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM)
                                       FROM   DUAL
                                       CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
       AND    FOP_CLM_MTCH_ACCNT  = UAC_CLM_MTCH_ACCNT
       AND    USR_USR_ID = UAC_USR_ID );

      }
   }
 
  /** Ver 1.1 Starts **/
 
  else if( c_prdct_typ =='O' && c_run_mode == 'D')  /* Ver 1.1 'D' Batch run for Delivery margin notifier */
   {
     if(strcmp(c_undrlyng,"%") == 0)
     {
      EXEC SQL
      SELECT COUNT(1)
      INTO   :rcrdCount       
      FROM (
            SELECT  DISTINCT FOP_UNDRLYNG  undrlyng ,
                    FOP_CLM_MTCH_ACCNT match_accnt,
	                  FOP_XCHNG_CD       xchng_cd,
	                  FOP_PRDCT_TYP      prdct_typ,
	                  FOP_EXPRY_DT       expry_dt,
	                  NVL(USR_MBL_NMBRS,'**********')      mobile_num,
	                  USR_USR_ID         usr_id
            FROM    FOP_FO_OPTIONS_PSTN, LTQ_TRD_QT,FTQ_FO_TRD_QT, USR_USER_MASTER, UAC_USR_ACCNTS
            WHERE   FOP_UNDRLYNG = LTQ_STCK_CD
            AND     FOP_PRDCT_TYP=:c_prdct_typ
            and     FOP_OPNPSTN_FLW='B'
            and     FOP_OPT_TYP='C'
            and     FOP_XCHNG_CD= decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
            and     FOP_XCHNG_CD='NFO'
            and     FOP_STRK_PRC <= (LTQ_CLS_PRC*100)
            and     FOP_EXPRY_DT= :c_expry_dt
            and     FTQ_SETLMNT_FLG  = 'P'
            and     FOP_PRDCT_TYP = FTQ_PRDCT_TYP
            and     FOP_XCHNG_CD  = FTQ_XCHNG_CD
            and     FOP_EXPRY_DT  = FTQ_EXPRY_DT
            and     FOP_STRK_PRC  = FTQ_STRK_PRC
            and     FOP_OPT_TYP   = FTQ_OPT_TYP
            and     FOP_UNDRLYNG  = FTQ_UNDRLYNG
            and     TRIM(FTQ_UNDRLYNG) LIKE '%'
            and     FOP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
            and     USR_USR_ID = UAC_USR_ID 
        UNION ALL
           select  DISTINCT FOP_UNDRLYNG  undrlyng ,                
	                 FOP_CLM_MTCH_ACCNT match_accnt,                 
	                 FOP_XCHNG_CD       xchng_cd,                    
	                 FOP_PRDCT_TYP      prdct_typ,                   
	                 FOP_EXPRY_DT       expry_dt,                    
                   NVL(USR_MBL_NMBRS,'**********')      mobile_num,
	                 USR_USR_ID         usr_id                       
          FROM     FOP_FO_OPTIONS_PSTN, LTQ_TRD_QT, FTQ_FO_TRD_QT, USR_USER_MASTER, UAC_USR_ACCNTS
          WHERE   FOP_UNDRLYNG = LTQ_STCK_CD
          and    FOP_PRDCT_TYP=:c_prdct_typ
          and    FOP_OPNPSTN_FLW='B'
          and    FOP_OPT_TYP='P'
          and    FOP_XCHNG_CD= decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
          and    FOP_XCHNG_CD='NFO'
          and    FOP_STRK_PRC >= (LTQ_CLS_PRC*100)
          and    FOP_EXPRY_DT=:c_expry_dt
          and    FTQ_SETLMNT_FLG  = 'P'
          and    FOP_PRDCT_TYP = FTQ_PRDCT_TYP
          and    FOP_XCHNG_CD  = FTQ_XCHNG_CD
          and    FOP_EXPRY_DT  = FTQ_EXPRY_DT
          and    FOP_STRK_PRC  = FTQ_STRK_PRC
          and    FOP_OPT_TYP   = FTQ_OPT_TYP
          and    FOP_UNDRLYNG  = FTQ_UNDRLYNG
          and    TRIM(FTQ_UNDRLYNG) LIKE '%'
          and    FOP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
          and    USR_USR_ID = UAC_USR_ID 
      UNION ALL
         select DISTINCT FCP_UNDRLYNG  undrlyng,
                FCP_CLM_MTCH_ACCNT match_accnt,
                FCP_XCHNG_CD       xchng_cd,
                FCP_PRDCT_TYP      prdct_typ,
                FCP_EXPRY_DT       expry_dt,
                NVL(USR_MBL_NMBRS,'**********')    mobile_num,
                USR_USR_ID         usr_id
         FROM   FCP_FO_SPN_CNTRCT_PSTN,LTQ_TRD_QT, FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
         WHERE  FCP_UNDRLYNG=LTQ_STCK_CD
         and    FCP_PRDCT_TYP=:c_prdct_typ
         and    FCP_OPNPSTN_FLW='B'
         and    FCP_OPT_TYP='C'
         and    FCP_XCHNG_CD=decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
         and    FCP_XCHNG_CD='NFO'
         and    FCP_STRK_PRC <= (LTQ_CLS_PRC*100)
         and    FCP_EXPRY_DT =:c_expry_dt
         and    FTQ_SETLMNT_FLG  = 'P'
         and    FCP_UNDRLYNG  = FTQ_UNDRLYNG
         and    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
         and    FCP_XCHNG_CD  = FTQ_XCHNG_CD
         and    FCP_EXPRY_DT  = FTQ_EXPRY_DT
         and    FCP_STRK_PRC  = FTQ_STRK_PRC
         and    FCP_OPT_TYP   = FTQ_OPT_TYP
         and    TRIM(FTQ_UNDRLYNG) LIKE '%'
         and    FCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
         and    USR_USR_ID = UAC_USR_ID
      UNION ALL
         select DISTINCT FCP_UNDRLYNG  undrlyng,               
                FCP_CLM_MTCH_ACCNT match_accnt,                
                FCP_XCHNG_CD       xchng_cd,                   
                FCP_PRDCT_TYP      prdct_typ,                  
                FCP_EXPRY_DT       expry_dt,                   
                NVL(USR_MBL_NMBRS,'**********')    mobile_num, 
                USR_USR_ID         usr_id                      
         FROM   FCP_FO_SPN_CNTRCT_PSTN, LTQ_TRD_QT,FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
         where  FCP_UNDRLYNG=LTQ_STCK_CD
         and    FCP_PRDCT_TYP=:c_prdct_typ
         and    FCP_OPNPSTN_FLW='B'
         and    FCP_OPT_TYP='P'
         and    FCP_XCHNG_CD=decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
         and    FCP_XCHNG_CD='NFO'
         and    FCP_STRK_PRC >= (LTQ_CLS_PRC*100)
         and    FCP_EXPRY_DT =:c_expry_dt
         and    FTQ_SETLMNT_FLG  = 'P'
         and    FCP_UNDRLYNG  = FTQ_UNDRLYNG
         and    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
         and    FCP_XCHNG_CD  = FTQ_XCHNG_CD
         and    FCP_EXPRY_DT  = FTQ_EXPRY_DT
         and    FCP_STRK_PRC  = FTQ_STRK_PRC
         and    FCP_OPT_TYP   = FTQ_OPT_TYP
         and    TRIM(FTQ_UNDRLYNG) LIKE '%'
         and    FCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
         and    USR_USR_ID = UAC_USR_ID );
    
     }
    else
    {
     EXEC SQL
     SELECT COUNT(1)
     INTO   :rcrdCount
     FROM (
            SELECT  DISTINCT FOP_UNDRLYNG  undrlyng ,
                    FOP_CLM_MTCH_ACCNT match_accnt,
                    FOP_XCHNG_CD       xchng_cd,
                    FOP_PRDCT_TYP      prdct_typ,
                    FOP_EXPRY_DT       expry_dt,
                    NVL(USR_MBL_NMBRS,'**********')      mobile_num,
                    USR_USR_ID         usr_id
            FROM    FOP_FO_OPTIONS_PSTN, LTQ_TRD_QT,FTQ_FO_TRD_QT, USR_USER_MASTER, UAC_USR_ACCNTS
            WHERE   FOP_UNDRLYNG = LTQ_STCK_CD
            AND     FOP_PRDCT_TYP=:c_prdct_typ
            and     FOP_OPNPSTN_FLW='B'
            and     FOP_OPT_TYP='C'
            and     FOP_XCHNG_CD= decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
            and     FOP_XCHNG_CD='NFO'
            and     FOP_STRK_PRC  <= (LTQ_CLS_PRC*100)
            and     FOP_EXPRY_DT=:c_expry_dt 
            and     FTQ_SETLMNT_FLG  = 'P'
            and     FOP_PRDCT_TYP = FTQ_PRDCT_TYP
            and     FOP_XCHNG_CD  = FTQ_XCHNG_CD
            and     FOP_EXPRY_DT  = FTQ_EXPRY_DT
            and     FOP_STRK_PRC  = FTQ_STRK_PRC
            and     FOP_OPT_TYP   = FTQ_OPT_TYP
            and     FOP_UNDRLYNG  = FTQ_UNDRLYNG
            and     TRIM(FTQ_UNDRLYNG) IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) FROM DUAL CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
            and     FOP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
            and     USR_USR_ID = UAC_USR_ID
        UNION ALL
           select  DISTINCT FOP_UNDRLYNG  undrlyng ,
                   FOP_CLM_MTCH_ACCNT match_accnt,
                   FOP_XCHNG_CD       xchng_cd,
                   FOP_PRDCT_TYP      prdct_typ,
                   FOP_EXPRY_DT       expry_dt,
                   NVL(USR_MBL_NMBRS,'**********')      mobile_num,
                   USR_USR_ID         usr_id
          FROM     FOP_FO_OPTIONS_PSTN, LTQ_TRD_QT, FTQ_FO_TRD_QT, USR_USER_MASTER, UAC_USR_ACCNTS
          WHERE   FOP_UNDRLYNG = LTQ_STCK_CD
          and    FOP_PRDCT_TYP=:c_prdct_typ
          and    FOP_OPNPSTN_FLW='B'
          and    FOP_OPT_TYP='P'
          and    FOP_XCHNG_CD= decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
          and    FOP_XCHNG_CD='NFO'
          and    FOP_STRK_PRC  >= (LTQ_CLS_PRC*100)
          and    FOP_EXPRY_DT=:c_expry_dt
          and    FTQ_SETLMNT_FLG  = 'P'
          and    FOP_PRDCT_TYP = FTQ_PRDCT_TYP
          and    FOP_XCHNG_CD  = FTQ_XCHNG_CD
          and    FOP_EXPRY_DT  = FTQ_EXPRY_DT
          and    FOP_STRK_PRC  = FTQ_STRK_PRC
          and    FOP_OPT_TYP   = FTQ_OPT_TYP
          and    FOP_UNDRLYNG  = FTQ_UNDRLYNG
          and    TRIM(FTQ_UNDRLYNG) IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) FROM DUAL CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
          and    FOP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
          and    USR_USR_ID = UAC_USR_ID
      UNION ALL
         select DISTINCT FCP_UNDRLYNG  undrlyng,
                FCP_CLM_MTCH_ACCNT match_accnt,
                FCP_XCHNG_CD       xchng_cd,
                FCP_PRDCT_TYP      prdct_typ,
                FCP_EXPRY_DT       expry_dt,
                NVL(USR_MBL_NMBRS,'**********')    mobile_num,
                USR_USR_ID         usr_id
         FROM   FCP_FO_SPN_CNTRCT_PSTN,LTQ_TRD_QT, FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
         WHERE  FCP_UNDRLYNG=LTQ_STCK_CD
         and    FCP_PRDCT_TYP=:c_prdct_typ
         and    FCP_OPNPSTN_FLW='B'
         and    FCP_OPT_TYP='C'
         and    FCP_XCHNG_CD=decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
         and    FCP_XCHNG_CD='NFO'
         and    FCP_STRK_PRC <= (LTQ_CLS_PRC*100)
         and    FCP_EXPRY_DT =:c_expry_dt
         and    FTQ_SETLMNT_FLG  = 'P'
         and    FCP_UNDRLYNG  = FTQ_UNDRLYNG
         and    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
         and    FCP_XCHNG_CD  = FTQ_XCHNG_CD
         and    FCP_EXPRY_DT  = FTQ_EXPRY_DT
         and    FCP_STRK_PRC  = FTQ_STRK_PRC
         and    FCP_OPT_TYP   = FTQ_OPT_TYP
         and    TRIM(FTQ_UNDRLYNG) IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) FROM DUAL CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
         and    FCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
         and    USR_USR_ID = UAC_USR_ID
      UNION ALL
         select DISTINCT FCP_UNDRLYNG  undrlyng,
                FCP_CLM_MTCH_ACCNT match_accnt,
                FCP_XCHNG_CD       xchng_cd,
                FCP_PRDCT_TYP      prdct_typ,
                FCP_EXPRY_DT       expry_dt,
                NVL(USR_MBL_NMBRS,'**********')    mobile_num,
                USR_USR_ID         usr_id
         FROM   FCP_FO_SPN_CNTRCT_PSTN, LTQ_TRD_QT,FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
         where  FCP_UNDRLYNG=LTQ_STCK_CD
         and    FCP_PRDCT_TYP=:c_prdct_typ
         and    FCP_OPNPSTN_FLW='B'
         and    FCP_OPT_TYP='P'
         and    FCP_XCHNG_CD=decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
         and    FCP_XCHNG_CD='NFO'
         and    FCP_STRK_PRC >= (LTQ_CLS_PRC*100)
         and    FCP_EXPRY_DT =:c_expry_dt
         and    FTQ_SETLMNT_FLG  = 'P'
         and    FCP_UNDRLYNG  = FTQ_UNDRLYNG
         and    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
         and    FCP_XCHNG_CD  = FTQ_XCHNG_CD
         and    FCP_EXPRY_DT  = FTQ_EXPRY_DT
         and    FCP_STRK_PRC  = FTQ_STRK_PRC
         and    FCP_OPT_TYP   = FTQ_OPT_TYP
         and    TRIM(FTQ_UNDRLYNG) IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) FROM DUAL CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
         and    FCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
         and    USR_USR_ID = UAC_USR_ID );
     
    }
   } 
 
/** Ver 1.1 Ends **/ 

  fn_userlog( c_ServiceName,"Record count is :%ld:",rcrdCount);
  var_st_phyeos_recrds = calloc(sizeof(struct_phyeos_recrds),rcrdCount);
   
  if(var_st_phyeos_recrds == NULL)
   {
    fn_errlog ( c_ServiceName, "S31040", UNXMSG, c_err_msg );
    return ;
    }


  
  EXEC SQL ALLOCATE :sys_cursor;
  
  if (c_prdct_typ =='F' && c_run_mode == 'N') /** Ver 1.1 **/
   {

		/**** Ver 1.2 Started ****/
  
    sprintf(c_INIFileName, "%s/%s", getenv("BIN"), "NFO.ini");
    if( fn_init_prcs_spc ( c_ServiceName,c_INIFileName,c_paramToRead ) == -1 )
    {
      fn_userlog(c_ServiceName,"Unable to read PIPE_LIST from ini File"); 
      EXEC SQL CLOSE :sys_cursor;
      EXEC SQL FREE  :sys_cursor;
      tpfree((char *)Sbuffer);
      return;    
    }

    ptr = (char *)fn_get_prcs_spc(c_ServiceName,"FUT_RUNTIME");
    if ( ptr == NULL )
    {
      fn_userlog(c_ServiceName,"Unable to read PIPE_LIST from ini File");
      EXEC SQL CLOSE :sys_cursor;
      EXEC SQL FREE  :sys_cursor;
      tpfree((char *)Sbuffer);
      return; 
    }

		strcpy(c_fut_runtime, ptr );
		fn_userlog(c_ServiceName,"After fn_get_prcs_spc c_fut_runtime is :%s: and ptr is :%s:",c_fut_runtime,ptr); 

  	/**** Ver 1.2 Ended ****/

    if ( strcmp(c_undrlyng,"%") == 0 )
      {
       EXEC SQL EXECUTE
        BEGIN
         OPEN :sys_cursor FOR
         SELECT  LSM_DEPT_ID, LSM_APP_ID, mobile_num, replace(replace(replace(replace(replace(LSM_MSG_TXT, 'Prdct',decode(prdct_typ,'F','FUT','O','OPT')),'Undrlyn',undrlyng),'Expry',TO_CHAR(expry_dt)),'EOSDte',:c_EOS_dt),'TME',:c_fut_runtime) AS lsm_txt,usr_id, match_accnt
            FROM (                                                                 /** Ver 1.1 time chnged frm 3 to 12PM **/ /** Ver 1.2 time chnged frm 12PM to 2PM **/
              SELECT FFP_CLM_MTCH_ACCNT match_accnt,
                     FFP_XCHNG_CD       xchng_cd,
                     FFP_PRDCT_TYP      prdct_typ,
                     TRIM(FFP_UNDRLYNG)  undrlyng,
                     FFP_EXPRY_DT       expry_dt,
	                   NVL(USR_MBL_NMBRS,'**********')      mobile_num,
	                   USR_USR_ID         usr_id
              FROM   FFP_FO_FUTURES_PSTN,FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
              WHERE  FFP_UNDRLYNG  = FTQ_UNDRLYNG
              AND    FFP_PRDCT_TYP = FTQ_PRDCT_TYP
              AND    FFP_XCHNG_CD  = FTQ_XCHNG_CD
              AND    FFP_EXPRY_DT  = FTQ_EXPRY_DT
              AND    FFP_XCHNG_CD  = 'NFO' 
              AND    FFP_PRDCT_TYP = :c_prdct_typ
              AND    FFP_EXPRY_DT  = :c_expry_dt
              AND    FFP_OPNPSTN_FLW != 'N'
              AND    FTQ_SETLMNT_FLG  = 'P'
              AND    TRIM(FTQ_UNDRLYNG) LIKE  :c_undrlyng
              AND    FFP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
              AND    USR_USR_ID = UAC_USR_ID 
              UNION ALL
              SELECT FCP_CLM_MTCH_ACCNT match_accnt,
                     FCP_XCHNG_CD       xchng_cd,
                     FCP_PRDCT_TYP      prdct_typ,
                     TRIM(FCP_UNDRLYNG)  undrlyng,
                     FCP_EXPRY_DT       expry_dt,
                     NVL(USR_MBL_NMBRS,'**********')    mobile_num,
	                   USR_USR_ID         usr_id
              FROM   FCP_FO_SPN_CNTRCT_PSTN,FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS 
              WHERE  FCP_UNDRLYNG  = FTQ_UNDRLYNG
              AND    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
              AND    FCP_XCHNG_CD  = FTQ_XCHNG_CD
              AND    FCP_EXPRY_DT  = FTQ_EXPRY_DT
              AND    FCP_XCHNG_CD  = 'NFO' 
              AND    FCP_PRDCT_TYP = :c_prdct_typ 
              AND    FCP_EXPRY_DT  = :c_expry_dt
              AND    FCP_OPNPSTN_FLW != 'N'
              AND    FTQ_SETLMNT_FLG  = 'P'
              AND    TRIM(FTQ_UNDRLYNG) LIKE :c_undrlyng
              AND    FCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
              AND    USR_USR_ID = UAC_USR_ID ),LSM_LCK_SMS_MSG_MSTR
              WHERE  LSM_SMS_ID =141;

         END;
        END-EXEC;  
      }
    else
      {
       EXEC SQL EXECUTE
        BEGIN
         OPEN :sys_cursor FOR
                 SELECT  LSM_DEPT_ID, LSM_APP_ID, mobile_num,replace(replace(replace(replace(replace(LSM_MSG_TXT, 'Prdct',decode(prdct_typ,'F','FUT','O','OPT')),'Undrlyn',undrlyng),'Expry',TO_CHAR(expry_dt)),'EOSDte',:c_EOS_dt),'TME',:c_fut_runtime) AS lsm_txt,usr_id, match_accnt
         FROM (                                                                              /** Ver 1.1 time chnged frm 3 to 12PM **/ /** Ver 1.2 time chnged frm 12PM to 2PM **/ 
                SELECT FFP_CLM_MTCH_ACCNT match_accnt,
                       FFP_XCHNG_CD       xchng_cd,
                       FFP_PRDCT_TYP      prdct_typ,
                       TRIM(FFP_UNDRLYNG)  undrlyng,
                       FFP_EXPRY_DT       expry_dt,
	                     NVL(USR_MBL_NMBRS,'**********')    mobile_num,
	                     USR_USR_ID         usr_id
                FROM   FFP_FO_FUTURES_PSTN,FTQ_FO_TRD_QT, USR_USER_MASTER, UAC_USR_ACCNTS 
                WHERE  FFP_UNDRLYNG  = FTQ_UNDRLYNG
                AND    FFP_PRDCT_TYP = FTQ_PRDCT_TYP
                AND    FFP_XCHNG_CD  = FTQ_XCHNG_CD
                AND    FFP_EXPRY_DT  = FTQ_EXPRY_DT
                AND    FFP_XCHNG_CD  = 'NFO' 
                AND    FFP_PRDCT_TYP = :c_prdct_typ
                AND    FFP_EXPRY_DT  = :c_expry_dt
                AND    FFP_OPNPSTN_FLW != 'N'
                AND    FTQ_SETLMNT_FLG  = 'P'
                AND    TRIM(FTQ_UNDRLYNG) IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM)
                                     FROM   DUAL
                                     CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
                AND    FFP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
                AND    USR_USR_ID = UAC_USR_ID 
                UNION ALL
                SELECT FCP_CLM_MTCH_ACCNT match_accnt,
                       FCP_XCHNG_CD       xchng_cd,
                       FCP_PRDCT_TYP      prdct_typ,
                       TRIM(FCP_UNDRLYNG)  undrlyng,
                       FCP_EXPRY_DT       expry_dt,
	                     NVL(USR_MBL_NMBRS,'**********')   mobile_num,
	                     USR_USR_ID         usr_id
                FROM   FCP_FO_SPN_CNTRCT_PSTN,FTQ_FO_TRD_QT, USR_USER_MASTER, UAC_USR_ACCNTS 
                WHERE  FCP_UNDRLYNG  = FTQ_UNDRLYNG
                AND    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
                AND    FCP_XCHNG_CD  = FTQ_XCHNG_CD
                AND    FCP_EXPRY_DT  = FTQ_EXPRY_DT
                AND    FCP_XCHNG_CD  = 'NFO' 
                AND    FCP_PRDCT_TYP = :c_prdct_typ
                AND    FCP_EXPRY_DT  = :c_expry_dt
                AND    FCP_OPNPSTN_FLW != 'N'
                AND    FTQ_SETLMNT_FLG  = 'P'
                AND    TRIM(FTQ_UNDRLYNG)  IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM)
                                      FROM   DUAL
                                      CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
                AND    FCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
                AND    USR_USR_ID = UAC_USR_ID ),LSM_LCK_SMS_MSG_MSTR
                WHERE  LSM_SMS_ID =141;  
           
             END;
            END-EXEC; 
       }
 
   }
  else if( c_prdct_typ =='O' && c_run_mode == 'N') /** Ver 1.1 check for normal mode **/
  {

    /**** Ver 1.2 Started ****/
    
    sprintf(c_INIFileName, "%s/%s", getenv("BIN"), "NFO.ini");
    if( fn_init_prcs_spc ( c_ServiceName,c_INIFileName,c_paramToRead ) == -1 )
    {
      fn_userlog(c_ServiceName,"Unable to read PIPE_LIST from ini File");
      EXEC SQL CLOSE :sys_cursor;
      EXEC SQL FREE  :sys_cursor;
      tpfree((char *)Sbuffer);
      return;
    }

    ptr = (char *)fn_get_prcs_spc(c_ServiceName,"OPT_RUNTIME");
    if ( ptr == NULL )
    {
      fn_userlog(c_ServiceName,"Unable to read PIPE_LIST from ini File");
      EXEC SQL CLOSE :sys_cursor;
      EXEC SQL FREE  :sys_cursor;
      tpfree((char *)Sbuffer);
      return;
    } 
    
    strcpy(c_opt_runtime, ptr );
    fn_userlog(c_ServiceName,"After fn_get_prcs_spc c_opt_runtime is :%s: and ptr is :%s:",c_opt_runtime,ptr);

    /**** Ver 1.2 Ended ****/

   if(strcmp(c_undrlyng,"%") == 0)
    {
     EXEC SQL EXECUTE
        BEGIN
         OPEN :sys_cursor FOR
         SELECT  LSM_DEPT_ID, LSM_APP_ID, mobile_num, replace(replace(replace(replace(replace(LSM_MSG_TXT, 'Prdct',decode(prdct_typ,'F', 'FUT','O','OPT')),'Undrlyn',undrlyng),'Expry',TO_CHAR(expry_dt)),'EOSDte',:c_EOS_dt),'TME',:c_opt_runtime)
AS lsm_txt , usr_id, match_accnt  /** Ver 1.2 time chnged frm 12PM to 2PM **/ 
       FROM (
       SELECT DISTINCT TRIM(FCP_UNDRLYNG)  undrlyng,
              FCP_CLM_MTCH_ACCNT match_accnt,
              FCP_XCHNG_CD       xchng_cd,
              FCP_PRDCT_TYP      prdct_typ,
              FCP_EXPRY_DT       expry_dt,
	            NVL(USR_MBL_NMBRS,'**********')   mobile_num,
	            USR_USR_ID         usr_id
       FROM   FCP_FO_SPN_CNTRCT_PSTN,FTQ_FO_TRD_QT,USR_USER_MASTER, UAC_USR_ACCNTS
       WHERE  FCP_UNDRLYNG  = FTQ_UNDRLYNG
       AND    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
       AND    FCP_XCHNG_CD  = FTQ_XCHNG_CD
       AND    FCP_EXPRY_DT  = FTQ_EXPRY_DT
       AND    FCP_STRK_PRC  = FTQ_STRK_PRC
       AND    FCP_OPT_TYP   = FTQ_OPT_TYP 
       AND    FCP_XCHNG_CD  = 'NFO' 
       AND    FCP_PRDCT_TYP = :c_prdct_typ
       AND    FCP_EXPRY_DT  = :c_expry_dt
       AND    FCP_OPNPSTN_FLW != 'N'
       AND    FTQ_SETLMNT_FLG  = 'P'
       AND    TRIM(FTQ_UNDRLYNG) LIKE :c_undrlyng
       AND    FCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
       AND    USR_USR_ID = UAC_USR_ID 
       UNION ALL
       SELECT DISTINCT TRIM(FOP_UNDRLYNG)  undrlyng, 
              FOP_CLM_MTCH_ACCNT match_accnt,
              FOP_XCHNG_CD       xchng_cd,
              FOP_PRDCT_TYP      prdct_typ,
              FOP_EXPRY_DT       expry_dt,
              NVL(USR_MBL_NMBRS,'**********')      mobile_num,
	            USR_USR_ID         usr_id
       FROM   FOP_FO_OPTIONS_PSTN,FTQ_FO_TRD_QT, USR_USER_MASTER, UAC_USR_ACCNTS
       WHERE  FOP_UNDRLYNG  = FTQ_UNDRLYNG
       AND    FOP_PRDCT_TYP = FTQ_PRDCT_TYP
       AND    FOP_XCHNG_CD  = FTQ_XCHNG_CD
       AND    FOP_EXPRY_DT  = FTQ_EXPRY_DT
       AND    FOP_STRK_PRC  = FTQ_STRK_PRC
       AND    FOP_OPT_TYP   = FTQ_OPT_TYP     /** Ver 1.2 **/
       AND    FOP_XCHNG_CD  = 'NFO' 
       AND    FOP_PRDCT_TYP = :c_prdct_typ
       AND    FOP_EXPRY_DT  = :c_expry_dt
       AND    FOP_OPNPSTN_FLW != 'N'
       AND    FTQ_SETLMNT_FLG  = 'P'
       AND    TRIM(FTQ_UNDRLYNG) LIKE :c_undrlyng
       AND    FOP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
       AND    USR_USR_ID = UAC_USR_ID ),LSM_LCK_SMS_MSG_MSTR
       where LSM_SMS_ID =142;
   
     END;
     END-EXEC; 
    }   
   else
   {
    EXEC SQL EXECUTE
        BEGIN
         OPEN :sys_cursor FOR
          SELECT  LSM_DEPT_ID, LSM_APP_ID, mobile_num, replace(replace(replace(replace(replace(LSM_MSG_TXT, 'Prdct',decode(prdct_typ,'F', 'FUT','O','OPT')),'Undrlyn',undrlyng),'Expry',TO_CHAR(expry_dt)),'EOSDte',:c_EOS_dt),'TME',:c_opt_runtime)
AS lsm_txt , usr_id, match_accnt      /** Ver 1.2 time chnged frm 12PM to 2PM **/ 
FROM      
    ( SELECT  DISTINCT TRIM(FCP_UNDRLYNG)  undrlyng,
              FCP_CLM_MTCH_ACCNT match_accnt,
              FCP_XCHNG_CD       xchng_cd,
              FCP_PRDCT_TYP      prdct_typ,
              FCP_EXPRY_DT       expry_dt,
	            NVL(USR_MBL_NMBRS,'**********')    mobile_num,
	            USR_USR_ID         usr_id
       FROM   FCP_FO_SPN_CNTRCT_PSTN,FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
       WHERE  FCP_UNDRLYNG  = FTQ_UNDRLYNG
       AND    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
       AND    FCP_XCHNG_CD  = FTQ_XCHNG_CD
       AND    FCP_EXPRY_DT  = FTQ_EXPRY_DT
       AND    FCP_STRK_PRC  = FTQ_STRK_PRC
       AND    FCP_OPT_TYP   = FTQ_OPT_TYP
       AND    FCP_XCHNG_CD  = 'NFO' 
       AND    FCP_PRDCT_TYP = :c_prdct_typ
       AND    FCP_EXPRY_DT  = :c_expry_dt
       AND    FCP_OPNPSTN_FLW != 'N'
       AND    FTQ_SETLMNT_FLG  = 'P'
       AND    TRIM(FTQ_UNDRLYNG)   IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM)
                                       FROM   DUAL
                                       CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
       AND    FCP_CLM_MTCH_ACCNT  = UAC_CLM_MTCH_ACCNT
       AND    USR_USR_ID = UAC_USR_ID  
       UNION ALL
       SELECT DISTINCT TRIM(FOP_UNDRLYNG)  undrlyng, 
              FOP_CLM_MTCH_ACCNT match_accnt,
              FOP_XCHNG_CD       xchng_cd,
              FOP_PRDCT_TYP      prdct_typ,
              FOP_EXPRY_DT       expry_dt,
              NVL(USR_MBL_NMBRS,'**********')    mobile_num,
	            USR_USR_ID         usr_id
       FROM   FOP_FO_OPTIONS_PSTN,FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
       WHERE  FOP_UNDRLYNG  = FTQ_UNDRLYNG
       AND    FOP_PRDCT_TYP = FTQ_PRDCT_TYP
       AND    FOP_XCHNG_CD  = FTQ_XCHNG_CD
       AND    FOP_EXPRY_DT  = FTQ_EXPRY_DT
       AND    FOP_STRK_PRC  = FTQ_STRK_PRC
       AND    FOP_OPT_TYP   = FTQ_OPT_TYP
       AND    FOP_XCHNG_CD  = 'NFO' 
       AND    FOP_PRDCT_TYP = :c_prdct_typ
       AND    FOP_EXPRY_DT  = :c_expry_dt
       AND    FOP_OPNPSTN_FLW != 'N'
       AND    FTQ_SETLMNT_FLG  = 'P'
       AND    TRIM(FTQ_UNDRLYNG)   IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM)
                                       FROM   DUAL
                                       CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
       AND    FOP_CLM_MTCH_ACCNT  = UAC_CLM_MTCH_ACCNT
       AND    USR_USR_ID = UAC_USR_ID ),LSM_LCK_SMS_MSG_MSTR
       where LSM_SMS_ID =142;
       
     END;
     END-EXEC;
   }
  }

 /** Ver 1.1 Starts **/
 else if( c_prdct_typ =='O' && c_run_mode == 'D')
  {
   if(strcmp(c_undrlyng,"%") == 0)
    {
      EXEC SQL EXECUTE
        BEGIN
         OPEN :sys_cursor FOR   
        SELECT  LSM_DEPT_ID, LSM_APP_ID, mobile_num, replace(replace(replace(LSM_MSG_TXT, 'Prdct',decode('O','F','FUT','O','OPT')),'Undrlyn',undrlyng),'Expry',TO_CHAR(expry_dt)) AS lsm_txt,usr_id, match_accnt
       FROM ( 
       	    SELECT  DISTINCT TRIM(FOP_UNDRLYNG)  undrlyng ,
                    FOP_CLM_MTCH_ACCNT match_accnt,
                    FOP_XCHNG_CD       xchng_cd,
                    FOP_PRDCT_TYP      prdct_typ,
                    FOP_EXPRY_DT       expry_dt,
                    NVL(USR_MBL_NMBRS,'**********')      mobile_num,
                    USR_USR_ID         usr_id
            FROM    FOP_FO_OPTIONS_PSTN, LTQ_TRD_QT,FTQ_FO_TRD_QT, USR_USER_MASTER, UAC_USR_ACCNTS
            WHERE   FOP_UNDRLYNG = LTQ_STCK_CD
            AND     FOP_PRDCT_TYP=:c_prdct_typ
            and     FOP_OPNPSTN_FLW='B'
            and     FOP_OPT_TYP='C'
            and     FOP_XCHNG_CD= decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
            and     FOP_XCHNG_CD='NFO'
            and     FOP_STRK_PRC <= (LTQ_CLS_PRC*100)
            and     FOP_EXPRY_DT= :c_expry_dt 
            and     FTQ_SETLMNT_FLG  = 'P'
            and     FOP_PRDCT_TYP = FTQ_PRDCT_TYP
            and     FOP_XCHNG_CD  = FTQ_XCHNG_CD
            and     FOP_EXPRY_DT  = FTQ_EXPRY_DT
            and     FOP_STRK_PRC  = FTQ_STRK_PRC
            and     FOP_OPT_TYP   = FTQ_OPT_TYP
            and     FOP_UNDRLYNG  = FTQ_UNDRLYNG
            and     TRIM(FTQ_UNDRLYNG) LIKE '%'
            and     FOP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
            and     USR_USR_ID = UAC_USR_ID
        UNION ALL
           select  DISTINCT TRIM(FOP_UNDRLYNG)  undrlyng ,
                   FOP_CLM_MTCH_ACCNT match_accnt,
                   FOP_XCHNG_CD       xchng_cd,
                   FOP_PRDCT_TYP      prdct_typ,
                   FOP_EXPRY_DT       expry_dt,
                   NVL(USR_MBL_NMBRS,'**********')      mobile_num,
                   USR_USR_ID         usr_id
          FROM     FOP_FO_OPTIONS_PSTN, LTQ_TRD_QT, FTQ_FO_TRD_QT, USR_USER_MASTER, UAC_USR_ACCNTS
          WHERE   FOP_UNDRLYNG = LTQ_STCK_CD
          and    FOP_PRDCT_TYP=:c_prdct_typ
          and    FOP_OPNPSTN_FLW='B'
          and    FOP_OPT_TYP='P'
          and    FOP_XCHNG_CD= decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
          and    FOP_XCHNG_CD='NFO'
          and    FOP_STRK_PRC  >= (LTQ_CLS_PRC*100)
          and    FOP_EXPRY_DT=:c_expry_dt
          and    FTQ_SETLMNT_FLG  = 'P'
          and    FOP_PRDCT_TYP = FTQ_PRDCT_TYP
          and    FOP_XCHNG_CD  = FTQ_XCHNG_CD
          and    FOP_EXPRY_DT  = FTQ_EXPRY_DT
          and    FOP_STRK_PRC  = FTQ_STRK_PRC
          and    FOP_OPT_TYP   = FTQ_OPT_TYP
          and    FOP_UNDRLYNG  = FTQ_UNDRLYNG
          and    TRIM(FTQ_UNDRLYNG) LIKE '%'
          and    FOP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
          and    USR_USR_ID = UAC_USR_ID
      UNION ALL
         select DISTINCT TRIM(FCP_UNDRLYNG)  undrlyng,
                FCP_CLM_MTCH_ACCNT match_accnt,
                FCP_XCHNG_CD       xchng_cd,
                FCP_PRDCT_TYP      prdct_typ,
                FCP_EXPRY_DT       expry_dt,
                NVL(USR_MBL_NMBRS,'**********')    mobile_num,
                USR_USR_ID         usr_id
         FROM   FCP_FO_SPN_CNTRCT_PSTN,LTQ_TRD_QT, FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
         WHERE  FCP_UNDRLYNG=LTQ_STCK_CD
         and    FCP_PRDCT_TYP=:c_prdct_typ
         and    FCP_OPNPSTN_FLW='B'
         and    FCP_OPT_TYP='C'
         and    FCP_XCHNG_CD=decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
         and    FCP_XCHNG_CD='NFO'
         and    FCP_STRK_PRC <= (LTQ_CLS_PRC*100)
         and    FCP_EXPRY_DT =:c_expry_dt
         and    FTQ_SETLMNT_FLG  = 'P'
         and    FCP_UNDRLYNG  = FTQ_UNDRLYNG
         and    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
         and    FCP_XCHNG_CD  = FTQ_XCHNG_CD
         and    FCP_EXPRY_DT  = FTQ_EXPRY_DT
         and    FCP_STRK_PRC  = FTQ_STRK_PRC
         and    FCP_OPT_TYP   = FTQ_OPT_TYP
         and    TRIM(FTQ_UNDRLYNG) LIKE '%'
         and    FCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
         and    USR_USR_ID = UAC_USR_ID
      UNION ALL
         select DISTINCT TRIM(FCP_UNDRLYNG)  undrlyng,
                FCP_CLM_MTCH_ACCNT match_accnt,
                FCP_XCHNG_CD       xchng_cd,
                FCP_PRDCT_TYP      prdct_typ,
                FCP_EXPRY_DT       expry_dt,
                NVL(USR_MBL_NMBRS,'**********')    mobile_num,
                USR_USR_ID         usr_id
         FROM   FCP_FO_SPN_CNTRCT_PSTN, LTQ_TRD_QT,FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
         where  FCP_UNDRLYNG=LTQ_STCK_CD
         and    FCP_PRDCT_TYP=:c_prdct_typ
         and    FCP_OPNPSTN_FLW='B'
         and    FCP_OPT_TYP='P'
         and    FCP_XCHNG_CD=decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
         and    FCP_XCHNG_CD='NFO'
         and    FCP_STRK_PRC >= (LTQ_CLS_PRC*100)
         and    FCP_EXPRY_DT =:c_expry_dt
         and    FTQ_SETLMNT_FLG  = 'P'
         and    FCP_UNDRLYNG  = FTQ_UNDRLYNG
         and    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
         and    FCP_XCHNG_CD  = FTQ_XCHNG_CD
         and    FCP_EXPRY_DT  = FTQ_EXPRY_DT
         and    FCP_STRK_PRC  = FTQ_STRK_PRC
         and    FCP_OPT_TYP   = FTQ_OPT_TYP
         and    TRIM(FTQ_UNDRLYNG) LIKE '%'
         and    FCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
         and    USR_USR_ID = UAC_USR_ID ),LSM_LCK_SMS_MSG_MSTR
	 WHERE  LSM_SMS_ID =144;
   END;
     END-EXEC; 
         
    }
    else
    {
     EXEC SQL EXECUTE
        BEGIN
         OPEN :sys_cursor FOR
        SELECT  LSM_DEPT_ID, LSM_APP_ID, mobile_num, replace(replace(replace(LSM_MSG_TXT, 'Prdct',decode('O','F','FUT','O','OPT')),'Undrlyn',undrlyng),'Expry',TO_CHAR(expry_dt)) AS lsm_txt,usr_id, match_accnt
       FROM (
            SELECT  DISTINCT TRIM(FOP_UNDRLYNG)  undrlyng ,
                    FOP_CLM_MTCH_ACCNT match_accnt,
                    FOP_XCHNG_CD       xchng_cd,
                    FOP_PRDCT_TYP      prdct_typ,
                    FOP_EXPRY_DT       expry_dt,
                    NVL(USR_MBL_NMBRS,'**********')      mobile_num,
                    USR_USR_ID         usr_id
            FROM    FOP_FO_OPTIONS_PSTN, LTQ_TRD_QT,FTQ_FO_TRD_QT, USR_USER_MASTER, UAC_USR_ACCNTS
            WHERE   FOP_UNDRLYNG = LTQ_STCK_CD
            AND     FOP_PRDCT_TYP=:c_prdct_typ
            and     FOP_OPNPSTN_FLW='B'
            and     FOP_OPT_TYP='C'
            and     FOP_XCHNG_CD= decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
            and     FOP_XCHNG_CD='NFO'
            and     FOP_STRK_PRC  <= (LTQ_CLS_PRC*100)
            and     FOP_EXPRY_DT=:c_expry_dt 
            and     FTQ_SETLMNT_FLG  = 'P'
            and     FOP_PRDCT_TYP = FTQ_PRDCT_TYP
            and     FOP_XCHNG_CD  = FTQ_XCHNG_CD
            and     FOP_EXPRY_DT  = FTQ_EXPRY_DT
            and     FOP_STRK_PRC  = FTQ_STRK_PRC
            and     FOP_OPT_TYP   = FTQ_OPT_TYP
            and     FOP_UNDRLYNG  = FTQ_UNDRLYNG
            and     TRIM(FTQ_UNDRLYNG) IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) FROM DUAL CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
            and     FOP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
            and     USR_USR_ID = UAC_USR_ID
        UNION ALL
           select  DISTINCT TRIM(FOP_UNDRLYNG)  undrlyng ,
                   FOP_CLM_MTCH_ACCNT match_accnt,
                   FOP_XCHNG_CD       xchng_cd,
                   FOP_PRDCT_TYP      prdct_typ,
                   FOP_EXPRY_DT       expry_dt,
                   NVL(USR_MBL_NMBRS,'**********')      mobile_num,
                   USR_USR_ID         usr_id
          FROM     FOP_FO_OPTIONS_PSTN, LTQ_TRD_QT, FTQ_FO_TRD_QT, USR_USER_MASTER, UAC_USR_ACCNTS
          WHERE   FOP_UNDRLYNG = LTQ_STCK_CD
          and    FOP_PRDCT_TYP=:c_prdct_typ
          and    FOP_OPNPSTN_FLW='B'
          and    FOP_OPT_TYP='P'
          and    FOP_XCHNG_CD= decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
          and    FOP_XCHNG_CD='NFO'
          and    FOP_STRK_PRC  >= (LTQ_CLS_PRC*100)
          and    FOP_EXPRY_DT=:c_expry_dt
          and    FTQ_SETLMNT_FLG  = 'P'
          and    FOP_PRDCT_TYP = FTQ_PRDCT_TYP
          and    FOP_XCHNG_CD  = FTQ_XCHNG_CD
          and    FOP_EXPRY_DT  = FTQ_EXPRY_DT
          and    FOP_STRK_PRC  = FTQ_STRK_PRC
          and    FOP_OPT_TYP   = FTQ_OPT_TYP
          and    FOP_UNDRLYNG  = FTQ_UNDRLYNG
          and    TRIM(FTQ_UNDRLYNG) IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) FROM DUAL CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
          and    FOP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
          and    USR_USR_ID = UAC_USR_ID
      UNION ALL
         select DISTINCT TRIM(FCP_UNDRLYNG)  undrlyng,
                FCP_CLM_MTCH_ACCNT match_accnt,
                FCP_XCHNG_CD       xchng_cd,
                FCP_PRDCT_TYP      prdct_typ,
                FCP_EXPRY_DT       expry_dt,
                NVL(USR_MBL_NMBRS,'**********')    mobile_num,
                USR_USR_ID         usr_id
         FROM   FCP_FO_SPN_CNTRCT_PSTN,LTQ_TRD_QT, FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
         WHERE  FCP_UNDRLYNG=LTQ_STCK_CD
         and    FCP_PRDCT_TYP=:c_prdct_typ
         and    FCP_OPNPSTN_FLW='B'
         and    FCP_OPT_TYP='C'
         and    FCP_XCHNG_CD=decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
         and    FCP_XCHNG_CD='NFO'
         and    FCP_STRK_PRC <= (LTQ_CLS_PRC*100)
         and    FCP_EXPRY_DT =:c_expry_dt
         and    FTQ_SETLMNT_FLG  = 'P'
         and    FCP_UNDRLYNG  = FTQ_UNDRLYNG
         and    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
         and    FCP_XCHNG_CD  = FTQ_XCHNG_CD
         and    FCP_EXPRY_DT  = FTQ_EXPRY_DT
         and    FCP_STRK_PRC  = FTQ_STRK_PRC
         and    FCP_OPT_TYP   = FTQ_OPT_TYP
         and    TRIM(FTQ_UNDRLYNG) IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) FROM DUAL CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
         and    FCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
         and    USR_USR_ID = UAC_USR_ID
      UNION ALL
         select DISTINCT TRIM(FCP_UNDRLYNG)  undrlyng,
                FCP_CLM_MTCH_ACCNT match_accnt,
                FCP_XCHNG_CD       xchng_cd,
                FCP_PRDCT_TYP      prdct_typ,
                FCP_EXPRY_DT       expry_dt,
                NVL(USR_MBL_NMBRS,'**********')    mobile_num,
                USR_USR_ID         usr_id
         FROM   FCP_FO_SPN_CNTRCT_PSTN, LTQ_TRD_QT,FTQ_FO_TRD_QT,USR_USER_MASTER,UAC_USR_ACCNTS
         where  FCP_UNDRLYNG=LTQ_STCK_CD
         and    FCP_PRDCT_TYP=:c_prdct_typ
         and    FCP_OPNPSTN_FLW='B'
         and    FCP_OPT_TYP='P'
         and    FCP_XCHNG_CD=decode(LTQ_XCHNG_CD,'NSE','NFO','BSE','BFO')
         and    FCP_XCHNG_CD='NFO'
         and    FCP_STRK_PRC >= (LTQ_CLS_PRC*100)
         and    FCP_EXPRY_DT =:c_expry_dt
         and    FTQ_SETLMNT_FLG  = 'P'
         and    FCP_UNDRLYNG  = FTQ_UNDRLYNG
         and    FCP_PRDCT_TYP = FTQ_PRDCT_TYP
         and    FCP_XCHNG_CD  = FTQ_XCHNG_CD
         and    FCP_EXPRY_DT  = FTQ_EXPRY_DT
         and    FCP_STRK_PRC  = FTQ_STRK_PRC
         and    FCP_OPT_TYP   = FTQ_OPT_TYP
         and    TRIM(FTQ_UNDRLYNG)IN (SELECT REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) FROM DUAL CONNECT BY REGEXP_SUBSTR(:c_undrlyng,'[^,]+',1,ROWNUM) IS NOT NULL)
         and    FCP_CLM_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
         and    USR_USR_ID = UAC_USR_ID ),LSM_LCK_SMS_MSG_MSTR
	       WHERE  LSM_SMS_ID =144;
         END;
     END-EXEC; 
   } 
  } 
 /** Ver 1.1 Ends **/

  if(SQLCODE != 0)
   {
    fn_errlog( c_ServiceName, "S31045", SQLMSG, c_err_msg );
    EXEC SQL CLOSE :sys_cursor;
    EXEC SQL FREE  :sys_cursor;
    tpfree((char *)Sbuffer);
    return;
   }

  EXEC SQL for :rcrdCount
   FETCH :sys_cursor 
   INTO :var_st_phyeos_recrds;

    if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName, "S31050", SQLMSG, c_err_msg );
      tpfree((char *)Sbuffer);
      return;
    }

  EXEC SQL CLOSE :sys_cursor;

  for(i = 0 ; i < rcrdCount ; i++)
  {
   MEMSET(v_get_lsm_dept_id);
   MEMSET(v_get_lsm_app_id);
   MEMSET(v_get_mobile_num);
   MEMSET(v_get_lsm_mssg);
   MEMSET(v_get_usr_id);
   MEMSET(v_get_match_accnt);
 


   strcpy(v_get_lsm_dept_id.arr,var_st_phyeos_recrds[i].c_st_lsm_dept_id);
   strcpy(v_get_lsm_app_id.arr,var_st_phyeos_recrds[i].c_st_lsm_app_id);
   strcpy(v_get_mobile_num.arr,var_st_phyeos_recrds[i].c_st_mobile_num);
   strcpy(v_get_lsm_mssg.arr,var_st_phyeos_recrds[i].c_st_lsm_mssg);
   strcpy(v_get_usr_id.arr,var_st_phyeos_recrds[i].c_st_usr_id);
   strcpy(v_get_match_accnt.arr,var_st_phyeos_recrds[i].c_st_match_accnt);
   
   rtrim(v_get_lsm_app_id.arr);
   rtrim(v_get_lsm_dept_id.arr);
   rtrim(v_get_lsm_mssg.arr);
   rtrim(v_get_mobile_num.arr);
   rtrim(v_get_usr_id.arr);
   rtrim(v_get_match_accnt.arr);
    
   if(DEBUG_MSG_LVL_3)
   {
   fn_userlog( c_ServiceName,"Department is :%s:",v_get_lsm_dept_id.arr);
   fn_userlog( c_ServiceName,"Appilcatin is :%s:",v_get_lsm_app_id.arr);
   fn_userlog( c_ServiceName,"Mobile No is :%s:",v_get_mobile_num.arr);
  /*  fn_userlog( c_ServiceName,"Message string:%s:",v_get_lsm_mssg.arr); */
   fn_userlog( c_ServiceName,"user id :%s:",v_get_usr_id.arr);
   fn_userlog( c_ServiceName,"Match account number :%s:",v_get_match_accnt.arr);
   fn_userlog( c_ServiceName,"Message Header :%s:",v_gsd_msg_hdr.arr);
   }

    
   SETLEN(v_get_lsm_dept_id);
   SETLEN(v_get_lsm_app_id);
   SETLEN(v_get_mobile_num);
   SETLEN(v_get_lsm_mssg);
   SETLEN(v_get_usr_id);
   SETLEN(v_get_match_accnt);

   Finit32(Sbuffer, (FLDLEN32) Fsizeof32(Sbuffer));

     i_err[0] = Fchg32(Sbuffer,FML_ARD_APPLCTN_RFRNC,0,(char *)v_get_lsm_app_id.arr,0);
     i_err[1] = Fchg32(Sbuffer,FML_ORD_DP_ID,0,(char *)v_get_lsm_dept_id.arr,0);
     i_err[2] = Fchg32(Sbuffer,FML_USR_MBL_NMBRS,0,(char *)v_get_mobile_num.arr,0);
     i_err[3] = Fchg32(Sbuffer,FML_SYS_MSG,0,(char *)v_get_lsm_mssg.arr,0);
     i_err[4] = Fchg32(Sbuffer,FML_USR_ID, 0, (char *)v_get_usr_id.arr, 0);
     i_err[5] = Fchg32(Sbuffer,FML_MATCH_ACCNT , 0, (char *)v_get_match_accnt.arr, 0);
     i_err[6] = Fchg32(Sbuffer,FML_MKT_MSG, 0, (char *)v_gsd_msg_hdr.arr, 0);
     i_err[7] = Fchg32(Sbuffer,FML_SEC_GRP, 0, (char *)v_gsd_bus_user_grp.arr, 0);

  for(i_counter =0; i_counter < 8; i_counter++)
    {
      if(i_err[i_counter] == -1)
      {
        fn_userlog( c_ServiceName,"Fchg failed at :%d:",i_counter);
        fn_errlog( c_ServiceName, "S31055",FMLMSG, c_err_msg );
        EXEC SQL CLOSE :sys_cursor;
        EXEC SQL FREE  :sys_cursor;
        tpfree((char *)Sbuffer);
        return;
      }
    }
   
    SETNULL(v_get_lsm_mssg);   
   /**  userlog("Main Message details :%s: ",v_get_lsm_mssg.arr); **/

    i_cmt_rcrd_cnt=0;

    EXEC SQL
    SELECT COUNT(1)
    INTO :i_cmt_rcrd_cnt
    FROM CMT_CLNTSPEC_MSG_TEMP
    WHERE CSM_MTCH_ACCNT = :v_get_match_accnt
    AND  TRUNC(CSM_UPD_DT) = TRUNC(SYSDATE)
    AND  CSM_MSG_TYPE = 'PHYEOS'
    AND  TRIM(CSM_MESSAGE) = :v_get_lsm_mssg; 
   
    fn_userlog( c_ServiceName,"Records in  CMT temp is :%d:",i_cmt_rcrd_cnt); 
    
    if(i_cmt_rcrd_cnt == 0)
    {
      if(fn_snd_mymsg_sms_notfcn(c_ServiceName,
                                 &Sbuffer,
                                 v_get_usr_id.arr,
                                 DEF_SSSN,
                                 v_get_match_accnt.arr,
                                 "PHYEOS",
                                 MYMSG_NOTFCN_AND_SMS,
                                 c_err_msg) != 0)
       {
        fn_userlog(c_ServiceName,"Error while calling fn_snd_mymsg_sms_notfcn");
        fn_errlog( c_ServiceName, "S31060",DEF_USR, c_err_msg );
        tpfree((char *)Sbuffer);
        return;
       } 
     
     i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
     if ( i_trnsctn == -1 )
      {
       fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
       fn_errlog ( c_ServiceName, "S31065", SQLMSG, c_err_msg  );
       tpfree((char *) Sbuffer);
       free(var_st_phyeos_recrds);
       return ;
      }
    
  fn_userlog (c_ServiceName,"Before UPdate of csm table ");
    if( c_run_mode == 'N' )
    {
     EXEC SQL
     UPDATE CSM_CLNT_SPEC_MSG
/*   SET CSM_MESSAGE = replace(replace(:v_get_lsm_mssg,' Click https://goo.gl/R5ya6o to know more.',''),'ICICIdirect:','Dear Customer,') commented in Ver 1.3  */
     SET CSM_MESSAGE = replace(replace(:v_get_lsm_mssg,' Know more: https://goo.gl/R5ya6o',''),'ICICIdirect:','Dear Customer,') /* Added in Ver 1.3 */ 
     WHERE CSM_MTCH_ACCNT = :v_get_match_accnt
     AND   TRIM(CSM_MESSAGE) = :v_get_lsm_mssg
/*  AND  CSM_REV_MSG_TYP = 'S' */
     AND TRUNC(CSM_UPD_DT) = TRUNC(SYSDATE)
     AND CSM_MSG_TYPE = 'PHYEOS'; 

     if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
     {
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      tpfree((char *) Sbuffer);
      free(var_st_phyeos_recrds);
      return;
     }    
    }
    /** Ver 1.1 Starts **/
    else if( c_run_mode == 'D' )
    {

     EXEC SQL
     UPDATE CSM_CLNT_SPEC_MSG
     SET CSM_MESSAGE = replace(:v_get_lsm_mssg,'ICICIdirect: ','')
     WHERE CSM_MTCH_ACCNT = :v_get_match_accnt
     AND   TRIM(CSM_MESSAGE) = :v_get_lsm_mssg
 /*  AND  CSM_REV_MSG_TYP = 'S' */
     AND TRUNC(CSM_UPD_DT) = TRUNC(SYSDATE)
     AND CSM_MSG_TYPE = 'PHYEOS';

     if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
     {
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      tpfree((char *) Sbuffer);
      free(var_st_phyeos_recrds);
      return;
     }    
    
    }
    /** Ver 1.1 Ends **/
   fn_userlog (c_ServiceName,"After update of CSM table");

     EXEC SQL
     INSERT INTO CMT_CLNTSPEC_MSG_TEMP
     (
      CSM_MTCH_ACCNT,
      CSM_UPD_DT, 
      CSM_MSG_TYPE,
      CSM_MESSAGE
      )
     VALUES 
     (
      :v_get_match_accnt,
       SYSDATE,
       'PHYEOS',
      :v_get_lsm_mssg
      );  
  
    if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
     {

      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      tpfree((char *) Sbuffer);
      free(var_st_phyeos_recrds);
      return;
     }
   
     if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
      {
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_errlog( c_ServiceName, "S31070",LIBMSG,c_err_msg);
      tpfree((char *) Sbuffer);
      free(var_st_phyeos_recrds);
      return;
      }     

    }
  
  }
  
  tpfree((char *) Sbuffer);
  free(var_st_phyeos_recrds);
  return;
 }

int fn_bat_init( int argc, char *argv[])
{
  fn_var = BAT_FOPHYEOS_SMSNTFMSG;

if( argc != 9 )
 {
  fn_userlog ( "bat_fophyeos_smsntfmsg", "Usage : %s <configuration file> <Exchange code> <pipe_id> <product type> <Underlying/All> <Expiry date> <EOS Date> <Run Mode>", argv[0] );
    return -1;
 }

  return 0;
}

void fn_bat_term( int argc, char *argv[])
{
  char c_msg[256];
  fn_userlog(argv[0], "%s - Process Ended", argv[0]);
  sprintf( c_msg, "%s - Process Ended", argv[0] );
  fn_bat_pst_msg( argv[0], c_msg, c_tag );
  return;
}

int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
  return 0;
}
