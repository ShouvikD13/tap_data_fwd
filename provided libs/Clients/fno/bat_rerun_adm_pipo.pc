/*************************************************************************************/
/* BAT_RERUN_ADM_PIPO                                                                */
/* This program Initiates the rerun process and after completion call                */
/* the normal pipo program                                                           */
/*  12-MAy-2011        Ver 1.0        Sachin B      Release 1.0	      		   			   */
/*  14-Sep-2011        Ver 1.1        Nitin Save    FNO Narration	      	    		   */
/*  23-Mar-2015				 Ver 1.2				Sonu Jalap		Error handling for Backoffice automation*/
/*  20-Nov-2015				 Ver 1.3				Sachin Birje ADM Rerun Chnages                 */
/*  25-sep-2019        Ver 1.4        Anuj Pancholi  Deposit Model Changes           */
/*  06-Oct-2021        Ver 1.5        Bilal Ahmed    IDFC Changes                    */
/*************************************************************************************/
#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <fo_fml_def.h>
#include <fml_def.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <string.h>   
#include <userlog.h>
#include <stdlib.h>  
#include <fn_read_debug_lvl.h>  
#include <sqlca.h>  /** Adedd in Ver 1.1 **/
#include <fn_pos.h>   /** Ver 1.2 ***/

int i;
#define INIT(x,y) for(i=0 ;i<y;i++)x[i] = 0

void BAT_RERUN_ADM_PIPO ( int argc, char *argv[] )
{
  long int li_tot_rcrds;
  int i_ch_val,i_err;
  long int li_cnt;
  long int li_run_no;
  long int li_block_cd;
  char c_msg[256];
  FBFR32 *ptr_fml_buf;
  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];
  char c_xchng_cd [ 4 ];
  char c_bank_nm [11];        /**  Ver 1.5  **/
  char c_run_dt [ LEN_DATE ];
  char c_cln_mtch_accnt [ 11 ];
  char c_bnk_accnt[21];
  char c_tm[ LEN_DATE ];
  char c_trace[12 + 1];
  char c_command[60];
  char c_prdct_cd[4];

  char c_trn_typ;
  char c_dr_cr_flg;
  char c_eba_stts;
  char c_bnk_stts;
  char c_stts='\0';  /** Ver 1.3 **/
  char c_model_flag = '\0';   /** Fund Model Flag Ver 1.4 **/
  char c_src_rowid[20+1];   /** Ver 1.4 **/

  double d_rerun_amount;
  double d_bal_rerun_amt;

  char c_bnk_narration[21];  /*** Added in Ver 1.1 ***/
  /*** char c_narration_dt[11];   *** Added in Ver 1.1 *** commented in Ver 1.3 **/
  char c_narration_dt[12];   /*** Added in Ver 1.3 ***/
 
  /**** Ver 1.2 Starts ****/
  char c_program_nm[33];
  char c_xchng_cd_tmp[4];
  char c_match_id[11];
  char c_error_txt[256];

  MEMSET(c_program_nm);
  MEMSET(c_xchng_cd_tmp);
  MEMSET(c_match_id);
  MEMSET(c_error_txt);

  /**** Ver 1.2 Ends ***/
 
  /*** Ver 1.4 Starts ***/
  char c_payin_pool_acc_nse[20];
  char c_payout_pool_acc_nse[20];
  char c_payin_pool_acc_bse[20];
  char c_payout_pool_acc_bse[20];
  char c_main_nse_payin_ac[20];
  char c_main_nse_payout_ac[20]; 
  /*** Ver 1.4 Ends ***/
 
  INIT(c_msg,256);
  INIT(c_ServiceName,33);
  INIT(c_err_msg,256);
  INIT(c_xchng_cd,4);
  INIT(c_run_dt,21);
  INIT(c_cln_mtch_accnt,11);
  INIT(c_bnk_accnt,21);
  INIT(c_tm,21);
  INIT(c_trace,13);
  INIT(c_prdct_cd,4);
  INIT(c_src_rowid,21); /** Ver 1.4 **/
 
  /*****  Ver 1.4 Starts  *****/ 
 
  MEMSET(c_payin_pool_acc_nse);
  MEMSET(c_payout_pool_acc_nse);
  MEMSET(c_payin_pool_acc_bse);
  MEMSET(c_payout_pool_acc_bse);
  MEMSET(c_main_nse_payin_ac);
  MEMSET(c_main_nse_payout_ac);
 
  /*****  Ver 1.4 Ends   ******/ 

  strcpy ( c_ServiceName, argv[0] );

  INITBATDBGLVL(argv[0]);   

  sprintf ( c_msg, "Batch process %s started", argv[0] );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  /*** Ver 1.2 starts ***/
  strcpy(c_program_nm,c_ServiceName);
  strcpy(c_xchng_cd_tmp,argv[2]);

  /** Ver 1.2 ends *****/

  strcpy ( c_msg, "Creating data. Please wait ... " );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  if( argc < 6 )      /**  Ver 1.5 , Changed from 5 to 6  **/
  {
    fn_bat_pst_msg ( c_ServiceName, "Invalid Number of Arguments", c_tag );
    exit(0);
  }

  strcpy( c_xchng_cd, argv[2] );
  strcpy( c_run_dt, argv[4] );
  li_run_no = atoi( argv[5] );
  strcpy( c_bank_nm, argv[6] );    /**  Ver 1.5, Bank Name  **/
  strcpy( c_prdct_cd, "ADM");
 
  fn_userlog(c_ServiceName," Inputs passed are :%s %s %ld :",c_xchng_cd,c_run_dt,li_run_no); 
 
  /*** Ver 1.4  Starts ***/  
   EXEC SQL
     SELECT  FSP_ISECPAYIN_ACC,
             FSP_ISECPAYOUT_ACC,
             FSP_BSE_ISECPAYIN_ACC,
             FSP_BSE_ISECPAYOUT_ACC,
             FSP_PAYIN_ACC,
             FSP_PAYOUT_ACC
     INTO    :c_payin_pool_acc_nse,
             :c_payout_pool_acc_nse,
             :c_payin_pool_acc_bse,
             :c_payout_pool_acc_bse,
             :c_main_nse_payin_ac,
             :c_main_nse_payout_ac
     FROM    FSP_FO_SYSTM_PRMTR;
  
   if(SQLCODE != 0)
   {
    fn_errlog(c_ServiceName, "S31005", SQLMSG, c_err_msg);
    return;
   } 
   
   rtrim(c_payin_pool_acc_nse);
   rtrim(c_payout_pool_acc_nse);
   rtrim(c_payin_pool_acc_bse);
   rtrim(c_payout_pool_acc_bse);
   rtrim(c_main_nse_payin_ac);
   rtrim(c_main_nse_payout_ac);
   
  
  /** testing **/
   fn_userlog(c_ServiceName,"payin pool account for ADMNSE <%s>", c_payin_pool_acc_nse);
   fn_userlog(c_ServiceName,"payout pool account for ADMNSE <%s>", c_payout_pool_acc_nse);
   fn_userlog(c_ServiceName,"payin pool account for ADMBSE <%s>", c_payin_pool_acc_bse);
   fn_userlog(c_ServiceName,"payout pool account for ADMBSE <%s>", c_payout_pool_acc_bse);
   fn_userlog(c_ServiceName,"payin pool account for NSE <%s>", c_main_nse_payin_ac);
   fn_userlog(c_ServiceName,"payout pool account for NSE <%s>", c_main_nse_payout_ac);
  /** testing **/ 


  /***  Ver 1.4  Ends ***/

  ptr_fml_buf = fn_create_rs ( c_ServiceName,
                               c_err_msg,
                               "SFO_GT_ADMRERUN",
                               TPNOTIME,
                               3,                        /**  Ver 1.5 , Changed from 2 to 3  **/
                               FFO_XCHNG_CD, ( char * )c_xchng_cd,
                               FFO_STCK_CD, (char * )c_prdct_cd,
                               FFO_QUEUE_NAME, (char *)c_bank_nm );    /**  Ver 1.5  **/
  if ( ptr_fml_buf == NULL )
  {
    fn_errlog( c_ServiceName, "S31010", LIBMSG, c_err_msg );
    strcpy(c_error_txt,"System error. Contact System Support");   /*** Ver 1.2 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); /*** Ver 1.2 ***/
    return;
  }

  li_tot_rcrds = fn_reccnt_rs ( ptr_fml_buf,
                                c_ServiceName,
                                c_err_msg,
                                FFO_EBA_MTCH_ACT_NO );
  if ( li_tot_rcrds == -1 )
  {
    fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg );
    fn_dstry_rs ( ptr_fml_buf );
    strcpy(c_error_txt,"System error. Contact System Support");   /*** Ver 1.2 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); /*** Ver 1.2 ***/
    return;
  }

  strcpy ( c_msg, "Data created." );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
  sprintf ( c_msg, "Total records = %ld", li_tot_rcrds );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
  
    for ( li_cnt=1; li_cnt<=li_tot_rcrds; li_cnt++ )
  {
    i_ch_val = fn_getnxt_rs ( ptr_fml_buf,
                              c_ServiceName,
                              c_err_msg,
                              16,  /** Ver 1.3 changed to 14 **/ /** chngd frm 14 to 16 in Ver 1.4 **/
                          FFO_XCHNG_CD, ( char * )c_xchng_cd, NULL,
                          FFO_EBA_MTCH_ACT_NO ,(char *)c_cln_mtch_accnt,NULL,
                          FFO_RUN_NUM, (char * )&li_run_no, NULL,
                          FFO_TRD_DT, (char * )c_run_dt, NULL,
                          FFO_BNK_ACT_NO ,(char *)c_bnk_accnt,NULL,
                          FFO_BNK_TRN_TYP ,(char *)&c_trn_typ,NULL,
                          FFO_BNK_BLK_CD ,(char *)&li_block_cd,NULL,
                          FFO_DR_CR_FLG ,(char *)&c_dr_cr_flg,NULL,
                          FFO_PI_PO_AMT ,(char *)&d_rerun_amount,NULL,
                          FFO_EBA_STTS ,(char *)&c_eba_stts,NULL,
                          FFO_BNK_STTS ,(char *)&c_bnk_stts,NULL,
                          FML_SYSTEM_TRACE ,(char *)c_trace,NULL,
                          FML_TM ,(char *)c_tm,NULL,
                          FFO_STATUS_FLG ,(char *)&c_stts,NULL,    /*** Ver 1.3 ***/
                          FFO_UPLD_MTCH_FLG,(char *)&c_model_flag,NULL, /** Ver 1.4 **/
                          FFO_DPID, (char *)c_src_rowid,NULL ); /** Ver 1.4 **/

    if ( i_ch_val != 0 )
    {
      fn_errlog( c_ServiceName, "S31020", LIBMSG, c_err_msg );
      fn_dstry_rs ( ptr_fml_buf );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
    	strcpy(c_error_txt,"System error. Contact System Support");   /*** Ver 1.2 ***/
    	fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); /*** Ver 1.2 ***/
      return;
    }

    fn_userlog(c_ServiceName,"Bank Account no. after Fprint32 :[%s]",c_bnk_accnt);
    sprintf ( c_msg, "Processing record %ld of %ld", li_cnt, li_tot_rcrds );
    fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

    i_ch_val = fn_pre_prcs_rcrd ( c_ServiceName,
                                  c_err_msg,
                                  "sfr_beod_gtdt",
                                  li_cnt,
                                  li_tot_rcrds );

        if ( i_ch_val == -1 )
    {
      fn_errlog( c_ServiceName, "S31025", LIBMSG, c_err_msg );
      fn_dstry_rs ( ptr_fml_buf );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
    	strcpy(c_error_txt,"System error. Contact System Support");   /*** Ver 1.2 ***/
    	fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); /*** Ver 1.2 ***/
      return;
    }

    if(DEBUG_MSG_LVL_3)
    {
      fn_userlog(c_ServiceName,"***  ST for ADM Data      ***");
      fn_userlog(c_ServiceName,"Exchange code    :[%s]",c_xchng_cd);
      fn_userlog(c_ServiceName,"Match account    :[%s]",c_cln_mtch_accnt);
      fn_userlog(c_ServiceName,"Run no.         :[%ld]",li_run_no);
      fn_userlog(c_ServiceName,"Run date         :[%s]",c_run_dt);
      fn_userlog(c_ServiceName,"Bank Account no. :[%s]",c_bnk_accnt);
      fn_userlog(c_ServiceName,"Transaction Type :[%c]",c_trn_typ);
      fn_userlog(c_ServiceName,"Block code      :[%ld]",li_block_cd);
      fn_userlog(c_ServiceName,"Debit/Credit Flag:[%c]",c_dr_cr_flg);
      fn_userlog(c_ServiceName,"PIPO Rerun Amount:[%lf]",d_rerun_amount);
      fn_userlog(c_ServiceName,"EBA status       :[%c]",c_eba_stts);
      fn_userlog(c_ServiceName,"Bank status      :[%c]",c_bnk_stts);
      fn_userlog(c_ServiceName,"System trace      :[%s]",c_trace);
      fn_userlog(c_ServiceName,"Placed time      :[%s]",c_tm);
      fn_userlog(c_ServiceName,"C_STTS           :[%c]",c_stts);
      fn_userlog(c_ServiceName,"C_MODEL_FLAG     :[%c]",c_model_flag); /** Ver 1.4 **/
      fn_userlog(c_ServiceName,"C_SRC_ROWID      :[%s]",c_src_rowid); /** Ver 1.4 **/
      fn_userlog(c_ServiceName,"Bank Name        :[%s]",c_bank_nm);   /**  Ver 1.5  **/
      fn_userlog(c_ServiceName,"*** END for ADM Data    ***");
    }

    /***** Added for Ver 1.1 Starts ******/
    MEMSET(c_bnk_narration);
    MEMSET(c_narration_dt);
    strcpy(c_bnk_narration,"F&OMargin");
  
    EXEC SQL
        SELECT to_char(sysdate, 'dd-Mon-yyyy')
        INTO   :c_narration_dt
        FROM   dual;

    if(SQLCODE  != 0)
    {
     fn_errlog(c_ServiceName, "S31030",SQLMSG,c_err_msg);
     strcpy ( c_msg, "System error. Contact system support" );
     fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
     strcpy(c_error_txt,"System error. Contact System Support");   /*** Ver 1.2 ***/
     fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); /*** Ver 1.2 ***/
     return;
    }
    rtrim(c_narration_dt);
    fn_userlog(c_ServiceName,"Val of c_narration_dt for ADM:%s:",c_narration_dt);
    strcat(c_bnk_narration,c_narration_dt); 
    rtrim(c_bnk_narration);
    fn_userlog(c_ServiceName,"Val of Bank Narration :%s:",c_bnk_narration);
    /*** Added for Ver 1.1 ends **/ 
    
    i_ch_val = fn_acall_svc_fml ( c_ServiceName,
                                  c_err_msg,
                                  "SFO_ADM_RERUN",
                                  0,
                                  27,                                     /** Changed to 17 for Ver 1.1 **/ /** Ver 1.3 changed to 18 **/ /** chnged frm 18 to 26 in Ver 1.4 **/  /**  Ver 1.5 , Changed from 26 to 27  **/
                              FFO_XCHNG_CD, ( char * )c_xchng_cd,
                              FFO_EBA_MTCH_ACT_NO ,(char *)c_cln_mtch_accnt,
                              FFO_RUN_NUM ,(char *)&li_run_no,
                              FFO_TRD_DT, (char * )c_run_dt,
                              FFO_BNK_ACT_NO ,(char *)c_bnk_accnt,
                              FFO_BNK_TRN_TYP ,(char *)&c_trn_typ,
                              FFO_BNK_BLK_CD ,(char *)&li_block_cd,
                              FFO_DR_CR_FLG ,(char *)&c_dr_cr_flg,
                              FFO_PI_PO_AMT ,(char *)&d_rerun_amount,
                              FFO_EBA_STTS ,(char *)&c_eba_stts,
                              FFO_BNK_STTS ,(char *)&c_bnk_stts,
                              FML_SYSTEM_TRACE ,(char *)c_trace,
                              FML_TM ,(char *)c_tm,
                              FFO_BAT_TAG, ( char * )c_tag,
                              FFO_REC_NO, ( char * )&li_cnt, 
                              FFO_STCK_CD, ( char * )c_prdct_cd,
			      								  FFO_NARRATION_ID,( char * )c_bnk_narration,  /** Added in Ver 1.1 **/
			      								  FFO_STATUS_FLG,( char * )&c_stts,  /** Added in Ver 1.3 **/
                              FFO_UPLD_MTCH_FLG, ( char * )&c_model_flag,   /** Ver 1.4 **/
                              FFO_DPID, (char *)c_src_rowid,                /** Ver 1.4 **/
                              FFO_STRIKE1, (char*)c_payin_pool_acc_nse,     /** Ver 1.4 **/
                              FFO_STRIKE2, (char*)c_payout_pool_acc_nse,    /** Ver 1.4 **/
                              FFO_STRIKE3, (char*)c_payin_pool_acc_bse,     /** Ver 1.4 **/
                              FFO_STRIKE4, (char*)c_payout_pool_acc_bse,    /** Ver 1.4 **/
                              FFO_LOW_PT,  (char*)c_main_nse_payin_ac,      /** Ver 1.4 **/
                              FFO_HIGH_PT, (char*)c_main_nse_payout_ac,    /** Ver 1.4 **/
                              FFO_QUEUE_NAME, (char *)c_bank_nm );        /**  Ver 1.5  **/

    if ( i_ch_val == -1 )
    {
      fn_errlog( c_ServiceName, "S31035", LIBMSG, c_err_msg );
      fn_dstry_rs ( ptr_fml_buf );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
    	strcpy(c_error_txt,"System error. Contact System Support");   /*** Ver 1.2 ***/
    	fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); /*** Ver 1.2 ***/
      return;
    }

  }/*End of loop*/
  fn_dstry_rs ( ptr_fml_buf );

  sprintf ( c_msg, "Batch process %s ended", argv[0] );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  return;

}


int fn_bat_init ( int argc, char *argv[] )
{
  fn_var = BAT_RERUN_ADM_PIPO;
  return 0;
}

void fn_bat_term ( int argc, char *argv[] )
{
  return;
}

int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
  return 0;
}


