/********************************************************************************
*  Program           : bat_fopk_drcr                                            *
*                                                                               *
*  Description       : To Debit/Credit Peak margin                              * 
*                                                                               *
*  Input Parameters  : Pgm_NM NFO NFO NA <run date>                             *
*                                                                               *
*  Change Log        : 1.0   08-Aug-2021 Akash B|Infotech                       *
*********************************************************************************
*  1.0    -  New Release                                                        *
********************************************************************************/


/* Header Files */
#include <stdio.h>
#include <string.h>
#include <sqlca.h>
#include <stdlib.h>
#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <fo_fml_def.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fn_ddr.h>
#include <string.h>
#include <stdlib.h>
#include <fml_rout.h>
#include <unistd.h>
#include <fn_read_debug_lvl.h>

FBFR32 *ptr_fml_Ibuf ;

char c_mtch_accnt[11];
char c_ServiceName[33];
char c_rqst_typ='B';
char c_err_msg[256];
char c_int_dt[12];
char c_run_dt[12];
char c_input_mtch_id[11];
char c_input_mtch_flg;
double d_amount=0.0;

int i_returncode=0;
int fn_get_pk_records(char *,char *,char *,char *,char );

void BAT_FOPK_DRCR ( int argc, char *argv[] )
{
 char c_xchng_cd[4];
 char c_msg[256];
 char c_event[256];
 char c_cmd[256];
 char c_peak_enblflg='N';	 
 int i_mtm_success_flag=0;
 int i_mtm_span_success_flag=0;
 int i_ch_val;
 int i_trnsctn;
 long int li_tot_rcrds;
 long int li_cnt;
 long int li_run_no;
 
 MEMSET(c_run_dt);
 MEMSET(c_xchng_cd);
 MEMSET(c_err_msg);
 MEMSET(c_msg);
 MEMSET(c_event);
 MEMSET(c_mtch_accnt);
 MEMSET(c_input_mtch_id);
 c_input_mtch_flg = 'N';

 strcpy ( c_ServiceName, argv[0] );
 strcpy(c_xchng_cd,argv[2]);
 strcpy(c_run_dt,argv[4]);
 rtrim(c_ServiceName);


 rtrim(c_run_dt);

 if(DEBUG_MSG_LVL_3)
	{
		fn_userlog(c_ServiceName,"Exchange code :%s:",c_xchng_cd);
 		fn_userlog(c_ServiceName,"Run date :%s:",c_run_dt);
 		fn_userlog(c_ServiceName,"argc :%ld:",argc);	
	}
	if(argc == 7 )
	{
		strcpy(c_input_mtch_id,argv[6]);
		fn_userlog(c_ServiceName,"c_input_mtch_id :%s:",c_input_mtch_id);
		c_input_mtch_flg = 'Y';	
	}

	EXEC SQL	
  select NVL(FSP_PEAKMRGN_ENBLFLG,'N')
  INTO :c_peak_enblflg
  FROM FSP_FO_SYSTM_PRMTR;

  if ( SQLCODE != 0 )
  {
     fn_errlog( c_ServiceName, "S31005",SQLMSG,c_err_msg);
      fn_userlog(c_ServiceName,"Error in fetching data");
      tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
  if( c_peak_enblflg != 'Y')
  {
    strcpy(c_err_msg,"Peak Margin is Currently Closed by Exchange..");
    fn_userlog(c_ServiceName,"ERROR........ :%s:",c_err_msg);
    Fadd32( ptr_fml_Ibuf, FFO_ERR_MSG, c_err_msg, 0 );
    tpreturn(TPFAIL, ERR_BFR, (char *)ptr_fml_Ibuf, 0, 0 );
  }
 EXEC SQL
 SELECT   1
 INTO     :i_mtm_success_flag
 FROM     DUAL
 WHERE    EXISTS (SELECT APR_XCHNG_CD
                  FROM AUDIT_PROG_RUNSTTS
                  WHERE APR_PROG_NAME = 'bat_eod_mtm'
                  and trunc(APR_TRD_DT) = :c_run_dt
                  and APR_SUCC_FLG = 'P'
                  and APR_XCHNG_CD ='NFO')
 AND      EXISTS (SELECT APR_XCHNG_CD
                  FROM AUDIT_PROG_RUNSTTS
                  WHERE APR_PROG_NAME ='bat_eod_mtm'
                  AND trunc(APR_TRD_DT) = :c_run_dt
                  AND APR_SUCC_FLG = 'P'
                  AND APR_XCHNG_CD ='BFO');

 if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
 {
  fn_errlog(c_ServiceName, "S31010", SQLMSG, c_err_msg);
  sprintf(c_event, "Error in checking run of EOD MTM program in a day");
  fn_bat_pst_msg( c_ServiceName, c_event, c_tag );
  return;
 }
 else if ( SQLCODE == NO_DATA_FOUND )
 {
  i_mtm_success_flag = 0;
 }

 if(i_mtm_success_flag != 1)
 {
  fn_errlog(c_ServiceName, "S31015", SQLMSG, c_err_msg);
  sprintf(c_event,"EOD MTM is not successfully completed for BSE or NSE for<%s>-Please process EOD MTM first", c_run_dt);
  fn_bat_pst_msg( c_ServiceName, c_event, c_tag );
  return;
 }

  EXEC SQL
  SELECT   1
  INTO     :i_mtm_span_success_flag
  FROM     DUAL
  WHERE    EXISTS (SELECT APR_XCHNG_CD
                   FROM AUDIT_PROG_RUNSTTS
                   WHERE APR_PROG_NAME = 'bat_span_eodmtm'
                   and trunc(APR_TRD_DT) = :c_run_dt
                   and APR_SUCC_FLG = 'P'
                   and APR_XCHNG_CD ='NFO')
	AND      EXISTS (SELECT APR_XCHNG_CD
                  FROM AUDIT_PROG_RUNSTTS
                  WHERE APR_PROG_NAME ='bat_eod_mtm'
                  AND trunc(APR_TRD_DT) = :c_run_dt
                  AND APR_SUCC_FLG = 'P'
                  AND APR_XCHNG_CD ='BFO');
   
 if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
 {
  fn_errlog(c_ServiceName, "S31020", SQLMSG, c_err_msg);
  sprintf(c_event, "Error in checking run of EOD MTM -SPAN program in a day");
  fn_bat_pst_msg( c_ServiceName, c_event, c_tag );
  return;
 }
 else if ( SQLCODE == NO_DATA_FOUND )
 {
  i_mtm_span_success_flag = 0;
 }

 if(i_mtm_span_success_flag != 1)
 {
  fn_errlog(c_ServiceName, "S31025", SQLMSG, c_err_msg);
  sprintf(c_event,"EOD MTM-SPAN is not successfully completed for BSE or NSE for<%s>-Process SPAN-EOD MTM first",c_run_dt);
  fn_bat_pst_msg( c_ServiceName, c_event, c_tag );
  return;
 }

 i_ch_val= fn_get_pk_records(c_ServiceName,
                               c_run_dt,
                               c_xchng_cd,
															 c_input_mtch_id,
															 c_input_mtch_flg);

 if ( i_ch_val != 0 )
 {
  fn_errlog( c_ServiceName, "S31030", LIBMSG, c_err_msg);
  strcpy ( c_msg, "System error. Contact system support" );
  fn_bat_pst_msg ( c_ServiceName, "Failed in Fetching Position Data", c_tag );
  return;
 }



 li_tot_rcrds = fn_reccnt_rs ( ptr_fml_Ibuf,
                               c_ServiceName,
                               c_err_msg,
                               FFO_EBA_MTCH_ACT_NO 
                               );

 if ( li_tot_rcrds == -1 )
 {
  fn_errlog( c_ServiceName, "S31035", LIBMSG, c_err_msg );
  strcpy ( c_msg, "System error. Contact system support" );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
  fn_dstry_rs ( ptr_fml_Ibuf );
  return;
 }

 sprintf ( c_msg, "Total records = %ld", li_tot_rcrds );
 fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

 for ( li_cnt=1; li_cnt<=li_tot_rcrds; li_cnt++ )
 {
  i_ch_val = fn_getnxt_rs ( ptr_fml_Ibuf,
                            c_ServiceName,
                            c_err_msg,
                            4,
                            FFO_EBA_MTCH_ACT_NO, ( char * )c_mtch_accnt,NULL,
                            FFO_ORD_VALID_DT, ( char * )c_run_dt,NULL,
													  FFO_AMOUNT,(char *)&d_amount,NULL,
										  			FFO_RQST_TYP,(char *)&c_rqst_typ,NULL
                          );


  if ( i_ch_val != 0 )
  {
   fn_errlog( c_ServiceName, "S31040", LIBMSG, c_err_msg);
   strcpy ( c_msg, "System error. Contact system support" );
   fn_bat_pst_msg ( c_ServiceName, "Failed in Processing Data", c_tag );
   fn_dstry_rs ( ptr_fml_Ibuf );
   return;
  }


  sprintf ( c_msg, "Processing record %ld of %ld", li_cnt, li_tot_rcrds );
  fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);

  i_ch_val = fn_pre_prcs_rcrd ( c_ServiceName,
                                c_err_msg,
                                "sfr_beod_prcs",
                                li_cnt,
                                li_tot_rcrds );
  if (  i_ch_val == -1 )
  {
   fn_errlog( c_ServiceName, "S31045", LIBMSG, c_err_msg );
   strcpy ( c_msg, "System error. Contact system support" );
   fn_bat_pst_msg ( c_ServiceName,"Failed in Processing Data" , c_tag );
   fn_dstry_rs ( ptr_fml_Ibuf );
   return;
  }



  i_ch_val = fn_acall_svc_fml ( c_ServiceName,
                                c_err_msg,
                               "SFO_FOPK_DRCR",
                                0,
                                4,
                                FFO_EBA_MTCH_ACT_NO,(char*)c_mtch_accnt,
                                FFO_ORD_VALID_DT, ( char * )c_run_dt,
														    FFO_AMOUNT,(char *)&d_amount,
                                FFO_RQST_TYP,(char *)&c_rqst_typ
                               );


  if ( i_ch_val == -1 )
  {
   fn_errlog( c_ServiceName, "S31050", LIBMSG, c_err_msg );
   strcpy ( c_msg, "System error. Contact system support" );
   fn_bat_pst_msg ( c_ServiceName,c_msg , c_tag );
   fn_dstry_rs ( ptr_fml_Ibuf );
   return;
  }
 }

fn_dstry_rs ( ptr_fml_Ibuf );

/***************************************************************************/
i_trnsctn  = fn_begintran( c_ServiceName, c_err_msg );

  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName, "S31055", LIBMSG, c_err_msg);
    fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
    strcpy(c_err_msg,"System error. Contact System Support");  /*** Ver 1.2 ***/
    return;
  }
  fn_userlog(c_ServiceName,"Now Inserting record in audit_prog_runstts");

    EXEC SQL
        INSERT INTO audit_prog_runstts
                 (
                    APR_PROG_NAME,
                    APR_TIME,
                    APR_SUCC_FLG,
                    APR_TRD_DT,
                    APR_XCHNG_CD
                 )
          VALUES (
                    :c_ServiceName,
                    sysdate,
                    'P',
                    :c_run_dt,
                    :c_xchng_cd
                  );

  if( SQLCODE != 0 )
  {
     fn_errlog(c_ServiceName, "S31060", SQLMSG, c_err_msg);
     fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
     fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     strcpy(c_err_msg,"System error. Contact System Support"); 
     return;
  }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
     fn_errlog(c_ServiceName, "S31065", LIBMSG, c_err_msg);
     fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
     fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     strcpy(c_err_msg,"System error. Contact System Support");  
     return;
  }
/****************************************************************************/


	MEMSET(c_cmd);
  sprintf(c_cmd,"ksh %s/sh_scripts/sfo_fopk_rpt_mlr.sh %s",tuxgetenv("HOME"),c_run_dt);
	
	if(DEBUG_MSG_LVL_3)
	{
  	fn_userlog( c_ServiceName, "sfo_pkdrcr_mlr.sh  report mailer run command :%s:",c_cmd);
  }
   system(c_cmd);	

 return;
}

int fn_bat_init ( int argc, char *argv[] )
{
  fn_var = BAT_FOPK_DRCR; 
  return 0;
}

void fn_bat_term ( int argc, char *argv[] )
{
  return;
}

int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
  return 0;
}

int fn_get_pk_records(char *c_ServiceName,char *c_trd_dt, char *c_xchng_cd, char *c_input_mtch_id,char c_input_mtch_flg)
{
 Finit32(ptr_fml_Ibuf,MIN_FML_BUF_LEN);
 ptr_fml_Ibuf = NULL;


 EXEC SQL BEGIN DECLARE SECTION;
 sql_cursor  sys_cursor_peak;
 EXEC SQL END DECLARE SECTION;

 EXEC SQL ALLOCATE :sys_cursor_peak;

 fn_userlog(c_ServiceName,"c_trd_dt :%s:",c_trd_dt);

 /**EXEC SQL EXECUTE
 BEGIN
  OPEN :sys_cursor_peak FOR
 select distinct FOD_CLM_MTCH_ACCNT 
 from FOD_FO_ORDR_DTLS
 WHERE FOD_TRD_DT=:c_trd_dt
 UNION 
 select FLL_CLM_MTCH_ACCNT 
 from FLL_FO_LMTUPD_LOG
 where FLL_NARRATION_ID='X' 
 and FLL_TRD_DT=:c_trd_dt;****/
 if(c_input_mtch_flg == 'N')
 {	
 		EXEC SQL EXECUTE
 		BEGIN
 		OPEN :sys_cursor_peak FOR	
 		SELECT FCB_CLM_MTCH_ACCNT,
        NVL(FCB_DAY_PEAK_MARGIN,0)
  	FROM FCB_FO_CLNT_BLNCS
 		WHERE FCB_XCHNG_CD=:c_xchng_cd
   	AND FCB_TRD_DT=:c_trd_dt
   	AND FCB_GRP_ID=1
   	AND NVL(FCB_DAY_PEAK_MARGIN,0)!=0
   	AND NVL(FCB_PEAK_MARGIN_DEBIT,0) < NVL(FCB_DAY_PEAK_MARGIN,0);
		END;
 		END-EXEC; 
 }
 else if(c_input_mtch_flg == 'Y')
 {
	EXEC SQL EXECUTE
    BEGIN
    OPEN :sys_cursor_peak FOR
    SELECT FCB_CLM_MTCH_ACCNT,
        NVL(FCB_DAY_PEAK_MARGIN,0)
    FROM FCB_FO_CLNT_BLNCS
    WHERE FCB_XCHNG_CD=:c_xchng_cd
    AND FCB_TRD_DT=:c_trd_dt
		AND FCB_CLM_MTCH_ACCNT = :c_input_mtch_id 
    AND FCB_GRP_ID=1
    AND NVL(FCB_DAY_PEAK_MARGIN,0)!=0
    AND NVL(FCB_PEAK_MARGIN_DEBIT,0) < NVL(FCB_DAY_PEAK_MARGIN,0);	
 		END;
 		END-EXEC; 
 }		


 if( SQLCODE != 0 )
 {
  fn_errlog( c_ServiceName, "S31070",SQLMSG, c_err_msg );
  EXEC SQL CLOSE :sys_cursor_peak;
  EXEC SQL FREE  :sys_cursor_peak;
  return -1;
 }


 while(1)
 {
  MEMSET(c_mtch_accnt);
  d_amount=0.0;
  EXEC SQL FETCH :sys_cursor_peak
  INTO  :c_mtch_accnt,
        :d_amount;
 
	 if(DEBUG_MSG_LVL_3)
 	 {
 	   fn_userlog(c_ServiceName,"SQLCODE :%d:",SQLCODE); 
 	   fn_userlog(c_ServiceName,"In while Match account is :%s:",c_mtch_accnt);
   }

   if( SQLCODE != 0  &&  SQLCODE != NO_DATA_FOUND )
   {
    fn_errlog( c_ServiceName, "S31075", SQLMSG, c_err_msg );
    EXEC SQL CLOSE :sys_cursor_peak ;
    return -1;
   }


   if( SQLCODE == NO_DATA_FOUND )
   {
    fn_userlog(c_ServiceName,"All records fetched or Inside No data found for Match Account");
    EXEC SQL CLOSE :sys_cursor_peak;
    break;
   }

   i_returncode = fn_pack_vartofml (c_ServiceName,
                                   c_err_msg,
                                   &ptr_fml_Ibuf,
                                   4,
                                   FFO_EBA_MTCH_ACT_NO, ( char * )c_mtch_accnt,
                                   FFO_ORD_VALID_DT, ( char * )c_run_dt,
                                   FFO_AMOUNT,(char *)&d_amount,
                                   FFO_RQST_TYP,(char *)&c_rqst_typ
                                   );


   if( i_returncode == -1 )
   {
    fn_errlog( c_ServiceName, "S31080", SQLMSG, c_err_msg );
    EXEC SQL CLOSE :sys_cursor_peak ;
    return -1;
   }

 
 }

 return 0;

}
