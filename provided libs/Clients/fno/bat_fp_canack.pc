/******************************************************************
* Service name :  BAT_FP_CANACK                                   *
*                                                                 *
* Description  :  This Batch Program cancels all Future Plus      *
*                 orders in the given pipe.                       *
*                                                                 *
* Input        :  Exchange Code                                   *
							 :  Pipe Id                                         *
*                                                                 *
* Output      :                                                   *
*                                                                 *
* Log Ver 1.0 :   16-Jul-2013 Game Simulator BOF - Sachin Birje   *
* Log Ver 1.1 :   04-Oct-2013 Temporary Opening the Exchange      *
*                             Sachin Birje                        *
******************************************************************/
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_ddr.h>
#include <fml_rout.h>
#include <fn_session.h>
#include <string.h>
#include <fn_read_debug_lvl.h>
#include <unistd.h>     
#include <fo_exch_comnN.h>
#include <fo_view_def.h>
#include <eba_to_ors.h>

char c_xchng_cd[3+1]; /** Ver 1.1 ***/
void BAT_FP_CANACK ( int argc, char *argv[] )
{
	long int li_tot_rcrds;
  int 	   i_ch_val;
  int 		 i_trnsctn;
	int      i_order_in_queue_exists;
  int      i_ferr[14];
  int      i_err[14];
  int      i_ret_cd=0;
  int      i_loop=0;

  long int li_cnt;
	long     l_rec_cnt = 0;
	long     l_cnt = 0;
	long     l_run_no = 0;
  long     l_recvbuff;
  long     l_modfn_cntr=0;

  char 		 c_msg[256];
  char 		 c_ServiceName [ 33 ];
  char 		 c_err_msg [ 256 ];
  char 		 c_rout_str [ 4 ];
	char     c_rqst_typ;
	char     c_svc_name[ 30 ];
	FBFR32   *ptr_fml_buf;
	FBFR32   *ptr_fml_bufs;
	FBFR32   *ptr_fml_bufr;

	EXEC SQL INCLUDE "table/ffp_fo_futures_pstn.h";
	EXEC SQL INCLUDE "table/fod_fo_ordr_dtls.h";
	EXEC SQL INCLUDE "table/usr_user_master.h";
	EXEC SQL INCLUDE "table/clm_clnt_mstr.h";

  EXEC SQL BEGIN DECLARE SECTION;
   char     c_exg_stts ;
  EXEC SQL END DECLARE SECTION;

  struct vw_xchngbook st_i_xchngbk;

  strcpy ( c_ServiceName, argv[0] );
	INITBATDBGLVL(c_ServiceName);

	if( argc < 5 )
  {
    fn_userlog( c_ServiceName, "Invalid Number of Arguments" );
		return;
  }

   if((ptr_fml_bufs= (FBFR32 *)tpalloc("FML32", NULL, 1024)) == NULL)
   {
    strcpy ( c_msg, "System error. Contact system support" );
    fn_errlog( c_ServiceName, "S31005", FMLMSG, c_err_msg );
    return; 
   }

   if((ptr_fml_bufr= (FBFR32 *)tpalloc("FML32", NULL, 1024)) == NULL)
   {
    strcpy ( c_msg, "System error. Contact system support" );
    fn_errlog( c_ServiceName, "S31010", FMLMSG, c_err_msg );
    return;
   }

  fn_userlog ( c_ServiceName, " 1 Req for cancellation placed for all underlying and all pipe" );
	memset(sql_fod_pipe_id,'\0',sizeof(sql_fod_pipe_id));
	memset(sql_ffp_clm_mtch_accnt,'\0',sizeof(sql_ffp_clm_mtch_accnt));			
	memset(sql_fod_ordr_rfrnc,'\0',sizeof(sql_fod_ordr_rfrnc));						
	memset(sql_fod_xchng_cd,'\0',sizeof(sql_fod_xchng_cd));
	memset(sql_ffp_undrlyng,'\0',sizeof(sql_ffp_undrlyng));
		fn_userlog ( c_ServiceName, " 2 Req for cancellation placed for all underlying and all pipe" );
	
  strcpy( sql_fod_xchng_cd, argv[2] );
	strcpy( sql_fod_pipe_id, argv[3] );
	strcpy( sql_ffp_undrlyng,argv[4] );

		fn_userlog ( c_ServiceName, " 3 Req for cancellation placed for all underlying and all pipe" );
	rtrim(sql_fod_pipe_id);
	rtrim(sql_fod_xchng_cd);
	rtrim(sql_ffp_undrlyng);
  MEMSET(c_xchng_cd);
  strcpy(c_xchng_cd,sql_fod_xchng_cd); /*** Ver 1.1 ***/

	if( (strcmp(sql_ffp_undrlyng,"A") == 0) && (strcmp(sql_fod_pipe_id,"A") == 0) )
	{
		c_rqst_typ = FPEOS_ALL_UND_ALL_PIPE;	
		strcpy ( c_msg, "Req for cancellation placed for all underlying and all pipe" );
		fn_userlog ( c_ServiceName, "Req for cancellation placed for all underlying and all pipe" );
	}

	else if( (strcmp(sql_ffp_undrlyng,"A") != 0) && (strcmp(sql_fod_pipe_id,"A") == 0) )
	{
		c_rqst_typ = FPEOS_UND_ALL_PIPE;	
		fn_userlog ( c_ServiceName, "Req for cancellation placed for :%s: and all pipes", sql_ffp_undrlyng );
	}

	else if( (strcmp(sql_ffp_undrlyng,"A") == 0) && (strcmp(sql_fod_pipe_id,"A") != 0) )
	{
	  c_rqst_typ = FPEOS_ALL_UND_PIPE;
		fn_userlog ( c_ServiceName, "Req for cancellation placed for all underlyng and pipe :%s:", sql_fod_pipe_id );
	}

	else if( (strcmp(sql_ffp_undrlyng,"A") != 0) && (strcmp(sql_fod_pipe_id,"A") != 0) )
	{
		c_rqst_typ = FPEOS_UNDRLYNG_PIPE;
		fn_userlog ( c_ServiceName, "Req for cancellation placed for underlying :%s: and pipe :%s:", sql_ffp_undrlyng, sql_fod_pipe_id );
	}

	else
	{
		fn_userlog(c_ServiceName,"Please enter valid inputs");
		strcpy(c_msg, "System error. Contact system support" );
		return;
	}

	if( strcmp(sql_fod_pipe_id,"A") == 0 )
	{
		strcpy ( sql_fod_pipe_id,"%" );
	}
	if( strcmp(sql_ffp_undrlyng,"A") == 0)
	{
		strcpy( sql_ffp_undrlyng,"%" );
	}

  sql_fod_prdct_typ = 'P';

  /* Commented in Version 1.1 **
	EXEC SQL
       SELECT  exg_crrnt_stts
       INTO    :c_exg_stts
       FROM    exg_xchng_mstr
       WHERE   exg_xchng_cd = :sql_fod_xchng_cd
       AND     exg_mkt_typ  = 'D';

  if( SQLCODE != 0 )
  {
    strcpy ( c_msg, "System error. Contact system support" );
    fn_errlog( c_ServiceName, "S31015", SQLMSG, c_err_msg );
    return;
  }

  if( c_exg_stts != EXCHANGE_OPEN )
  {
    strcpy ( c_msg, "Exchange should be open for running cancellation of Future Plus orders" );
    fn_errlog( c_ServiceName, "B28520", DEFMSG, c_err_msg );
    return;
  }
  ***********************/
 
	i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
     	strcpy ( c_msg, "System error. Contact system support" );
     	fn_errlog(c_ServiceName, "S31020", LIBMSG, c_err_msg );
     	return ;
  }	
	EXEC SQL
			 UPDATE mtm_appln_stts
			 SET    mtm_can_req = 'Y',
							mtm_roll_stts = 'N',
							mtm_can_sqr_off = 'Y'									
			 WHERE  mtm_xchng_cd = :sql_fod_xchng_cd
			 AND    mtm_pipe_id LIKE :sql_fod_pipe_id;

			
	if( SQLCODE != 0 )
 	{
     	strcpy ( c_msg, "System error. Contact system support" );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     	fn_errlog( c_ServiceName, "S31025", SQLMSG, c_err_msg );
     	return;
 	} 

  /******* Ver 1.1 Starts here *****/
  EXEC SQL
    UPDATE exg_xchng_mstr
       SET exg_crrnt_stts='O'
     WHERE exg_xchng_cd = :sql_fod_xchng_cd
       AND     exg_mkt_typ  = 'D';
  if( SQLCODE != 0 )
  {
      strcpy ( c_msg, "System error. Contact system support" );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_errlog( c_ServiceName, "S31030", SQLMSG, c_err_msg );
      return;
  }

  /**** Ver 1.1 Ends Here ***/

	if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
 	{
     	strcpy ( c_msg, "System error. Contact system support" );
			fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     	fn_errlog( c_ServiceName, "S31035",LIBMSG,c_err_msg);
     	return;
 	}


  ptr_fml_buf = fn_create_rs (  c_ServiceName,
                                c_err_msg,
                                "SFO_GT_CANFP",
                                 TPNOTIME,
                                 5,
                                 FFO_XCHNG_CD, ( char * )sql_fod_xchng_cd,
                                 FFO_PRDCT_TYP, (char * )&sql_fod_prdct_typ,
                                 FFO_RQST_TYP, (char *)&c_rqst_typ,
																 FFO_UNDRLYNG,(char *)sql_ffp_undrlyng,
																 FFO_PIPE_ID,(char *)sql_fod_pipe_id);
  if ( ptr_fml_buf == NULL )
  {
    fn_errlog( c_ServiceName, "S31040", LIBMSG, c_err_msg );
    return;
  }	

	fn_userlog ( c_ServiceName," Returned from get service , creating record set");

	li_tot_rcrds = fn_reccnt_rs ( ptr_fml_buf,
                                c_ServiceName,
                                c_err_msg,
                                FFO_EBA_MTCH_ACT_NO);
  if ( li_tot_rcrds == -1 )
  {
    fn_errlog( c_ServiceName, "S31045", LIBMSG, c_err_msg );
    fn_dstry_rs ( ptr_fml_buf );
    return;
  }

  strcpy ( c_msg, "Data created." );
  fn_userlog(c_ServiceName, "Total records = %ld", li_tot_rcrds );

  for ( li_cnt=1; li_cnt<=li_tot_rcrds; li_cnt++ )
	{
	  i_ch_val = fn_getnxt_rs ( ptr_fml_buf,
                              c_ServiceName,
                              c_err_msg,
                              8,
                              FFO_EBA_MTCH_ACT_NO, ( char * ) sql_ffp_clm_mtch_accnt, NULL,
                              FFO_XCHNG_CD, ( char * )sql_fod_xchng_cd, NULL,
                              FFO_PRDCT_TYP, ( char * )&sql_fod_prdct_typ, NULL,
                              FFO_CTGRY_INDSTK, ( char * )&sql_ffp_indstk, NULL,
                              FFO_UNDRLYNG, ( char * )sql_ffp_undrlyng, NULL,
                              FFO_ORDR_RFRNC, ( char * )sql_fod_ordr_rfrnc, NULL,	
															FFO_EXPRY_DT, (char * )sql_ffp_expry_dt.arr, NULL,
															FFO_PIPE_ID, ( char * )sql_fod_pipe_id, NULL);

		if ( i_ch_val != 0 )
    {
      fn_errlog( c_ServiceName, "S31050", LIBMSG, c_err_msg );
      fn_dstry_rs ( ptr_fml_buf );
      strcpy ( c_msg, "System error. Contact system support" );
      return;
    }

    fn_userlog( c_ServiceName, "Processing record %ld of %ld", li_cnt, li_tot_rcrds );

	  fn_userlog ( c_ServiceName," STEP 2");
		rtrim(sql_ffp_clm_mtch_accnt);
		rtrim(sql_fod_ordr_rfrnc);				
		rtrim(sql_fod_xchng_cd);
		rtrim(sql_ffp_undrlyng);
		rtrim(sql_fod_pipe_id);

	  fn_userlog ( c_ServiceName," STEP 3");
		sql_ffp_expry_dt.len = strlen((char *)sql_ffp_expry_dt.arr);

	  fn_userlog ( c_ServiceName," STEP 4");
	  fn_userlog ( c_ServiceName," STEP 5");
	  strcpy((char *)sql_fod_remarks.arr,"EOS System placed Cancellation");
	  fn_userlog ( c_ServiceName," STEP 6");
		sql_fod_remarks.len = strlen((char *)sql_fod_remarks.arr);
	  fn_userlog ( c_ServiceName," STEP 7");

		memset(c_svc_name,'\0',sizeof(c_svc_name));
		strcpy( c_svc_name,"SFO_PRCS_CANFP");
	  fn_userlog ( c_ServiceName," STEP 8");

	  /** call to SFO_ORD_ROUT is done to get the Pipe id for   **/
    /** creating the DDR string in the service SFO_PRCS_CANFP **/

    SETLEN(sql_ffp_expry_dt);

		fn_userlog ( c_ServiceName,"MATCH ACCOUNT IS :%s:",sql_ffp_clm_mtch_accnt );
		fn_userlog ( c_ServiceName,"EXCHANGE CODE IS :%s:",sql_fod_xchng_cd );
		fn_userlog ( c_ServiceName,"PRODUCT TYPE IS :%c:",sql_fod_prdct_typ );
		fn_userlog ( c_ServiceName,"UNDERLYNG IS :%s:",sql_ffp_undrlyng );
		fn_userlog ( c_ServiceName,"INDEX-STOCK IS :%c:",sql_ffp_indstk );
		fn_userlog ( c_ServiceName,"CONTRACT TAG IS :%c:",sql_ffp_cntrct_tag );
		fn_userlog ( c_ServiceName,"REMARKS IS :%s:",sql_fod_remarks.arr );
		fn_userlog ( c_ServiceName,"SERVICENAME IS :%s:",c_svc_name );
		fn_userlog ( c_ServiceName,"Order Rfrnc is:%s:",sql_fod_ordr_rfrnc);
		fn_userlog ( c_ServiceName,"TAG IS :%s:",c_tag );
		fn_userlog ( c_ServiceName,"RECORD NO IS :%ld:",li_cnt );
		fn_userlog ( c_ServiceName,"PIPE IS IS :%s:",sql_fod_pipe_id );
		fn_userlog ( c_ServiceName,"Expiry Date is :%s:",sql_ffp_expry_dt.arr );

		
		fn_init_ddr_pop ( sql_fod_pipe_id,TRADING_SECTION,F_CS);

    strcpy(c_rout_str,"000");
		fn_userlog ( c_ServiceName,"ROUT STRING IS :%s:",c_rout_str );
	
     i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
     if ( i_trnsctn == -1 )
     {
      strcpy ( c_msg, "System error. Contact system support" );
      fn_errlog(c_ServiceName, "S31055", LIBMSG, c_err_msg );
      return ;
     }

     i_err[0]  = Fchg32(ptr_fml_bufs, FFO_XCHNG_CD, 0, (char *)sql_fod_xchng_cd, 0);
     i_ferr[0] = Ferror32;
     i_err[1]  = Fchg32(ptr_fml_bufs, FFO_EBA_MTCH_ACT_NO, 0, (char *)sql_ffp_clm_mtch_accnt, 0);
     i_ferr[1] = Ferror32;
     i_err[2]  = Fchg32(ptr_fml_bufs, FFO_PRDCT_TYP, 0, (char *)&sql_fod_prdct_typ, 0);
     i_ferr[2] = Ferror32;
     i_err[3]  = Fchg32(ptr_fml_bufs, FFO_UNDRLYNG, 0, (char *)sql_ffp_undrlyng, 0);
     i_ferr[3] = Ferror32;
     i_err[4]  = Fchg32(ptr_fml_bufs, FFO_CTGRY_INDSTK, 0, (char *)&sql_ffp_indstk, 0);
     i_ferr[4] = Ferror32;
     i_err[5]  = Fchg32(ptr_fml_bufs, FFO_ORDR_RFRNC, 0, (char *)sql_fod_ordr_rfrnc, 0);
     i_ferr[5] = Ferror32;
     i_err[6]  = Fchg32(ptr_fml_bufs, FFO_IMTM_RMRKS, 0, (char *)sql_fod_remarks.arr, 0);
     i_ferr[6] = Ferror32;
     i_err[7]  = Fchg32(ptr_fml_bufs, FFO_SVC_NAME, 0, (char *)c_svc_name, 0);
     i_ferr[7] = Ferror32;
     i_err[8]  = Fchg32(ptr_fml_bufs, FFO_BAT_TAG, 0, (char *) c_tag, 0);
     i_ferr[8] = Ferror32;
     i_err[9]  = Fchg32(ptr_fml_bufs, FFO_EXPRY_DT, 0, (char *) sql_ffp_expry_dt.arr, 0);
     i_ferr[9] = Ferror32;
     i_err[10]  = Fchg32(ptr_fml_bufs, FFO_PIPE_ID, 0, (char *) sql_fod_pipe_id, 0);
     i_ferr[10] = Ferror32;
     i_err[11]  = Fchg32(ptr_fml_bufs, FFO_ROUT_CRT, 0, (char *) c_rout_str, 0);
     i_ferr[11] = Ferror32;
     i_err[12]  = Fchg32(ptr_fml_bufs, FFO_REC_NO, 0, (char *) &li_cnt, 0);
     i_ferr[12] = Ferror32;

     for( i_loop=0; i_loop<=8; i_loop++ )
      {
        if(i_err[i_loop] == -1)
        {
          fn_errlog(c_ServiceName, "S31060", FMLMSG, c_err_msg);
          fn_userlog(c_ServiceName,"Error [%d] in Fchange at [%d] ", i_ferr[i_loop],i_loop );
          break;
        }
      }

     i_ret_cd = tpcall( "SFO_PRCS_CANFP", (char *)ptr_fml_bufs, 0, (char **)&ptr_fml_bufr, &l_recvbuff, 0);
     if( i_ret_cd == -1 ) 
     {
      fn_errlog( c_ServiceName, "S31065", TPMSG, c_err_msg );
      fn_dstry_rs ( ptr_fml_buf );
      strcpy ( c_msg, "System error. Contact system support" );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg ); 
      tpfree ( ( char * ) ptr_fml_bufs);
      tpfree ( ( char * ) ptr_fml_bufr);
      return; 
     }

     EXEC SQL
      UPDATE FXB_FO_XCHNG_BOOK
         SET FXB_PLCD_STTS='A',
             FXB_ORS_MSG_TYP= '5341',
             FXB_XCHNG_RMRKS = FXB_XCHNG_RMRKS||'Cancellation Accepted',
             FXB_ACK_TM =sysdate
       WHERE FXB_ORDR_RFRNC = :sql_fod_ordr_rfrnc 
          AND FXB_PLCD_STTS  ='R'
          RETURNING FXB_MDFCTN_CNTR
               INTO :l_modfn_cntr; 
          
    if( SQLCODE != 0 )
    {
      strcpy ( c_msg, "System error. Contact system support" );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_errlog( c_ServiceName, "S31070", SQLMSG, c_err_msg );
      return;
    } 

    MEMSET(st_i_xchngbk);
    strcpy(st_i_xchngbk.c_rout_crt,c_rout_str); 

    strcpy(st_i_xchngbk.c_pipe_id,sql_fod_pipe_id);
    strcpy ( st_i_xchngbk.c_ordr_rfrnc , sql_fod_ordr_rfrnc);
    strcpy ( st_i_xchngbk.c_xchng_cd , sql_fod_xchng_cd);
    st_i_xchngbk.l_ord_seq = 0;
    st_i_xchngbk.l_mdfctn_cntr = l_modfn_cntr;
    st_i_xchngbk.c_plcd_stts = CANCELLED;
    st_i_xchngbk.c_rms_prcsd_flg = NOT_PROCESSED;
    st_i_xchngbk.l_ors_msg_typ = ORS_CAN_ORD_ACPT; 
    strcpy ( st_i_xchngbk.c_xchng_rmrks ," ");
    st_i_xchngbk.d_jiffy = 0;
    st_i_xchngbk.l_dwnld_flg = 0;
    st_i_xchngbk.c_oprn_typ = UPDATION_ON_EXCHANGE_RESPONSE;
    st_i_xchngbk.l_bit_flg = 0;

    strcpy ( c_svc_name , "SFO_FUT_ACK" );

    i_ch_val = fn_call_svc ( c_ServiceName,
                             c_err_msg,
                             &st_i_xchngbk,
                             &st_i_xchngbk,
                             "vw_xchngbook",
                             "vw_xchngbook",
                             sizeof ( st_i_xchngbk),
                             sizeof ( st_i_xchngbk),
                             0,
                             "SFO_FUT_ACK" );

    if ( i_ch_val != 0 )
    {
     fn_errlog(c_ServiceName,"L31040", LIBMSG, c_err_msg);
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     return ;
    }

    if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
    {
      strcpy ( c_msg, "System error. Contact system support" );
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_errlog( c_ServiceName, "S31075",LIBMSG,c_err_msg);
      return;
    }
 
	}	

	fn_dstry_rs ( ptr_fml_buf );
  fn_dstry_rs ( ptr_fml_bufs);
  fn_dstry_rs ( ptr_fml_bufr);

  fn_userlog( c_ServiceName, "Batch process %s ended", argv[0] );

  return;
}

int fn_bat_init ( int argc, char *argv[] )
{
  fn_var = BAT_FP_CANACK;
  return 0;
}


void fn_bat_term ( int argc, char *argv[] )
{
 /******* Ver 1.1 Starts Here ****/
 int i_trnsctn;
 char c_ServiceName[22];
 char c_err_msg[100];

  strcpy(c_ServiceName,"bat_fp_canack");

  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
      fn_errlog(c_ServiceName, "S31080", LIBMSG, c_err_msg );
      return ;
  }

  EXEC SQL
    UPDATE exg_xchng_mstr
       SET exg_crrnt_stts='X'
     WHERE exg_xchng_cd = :c_xchng_cd
       AND     exg_mkt_typ  = 'D';
  if( SQLCODE != 0 )
  {
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_errlog( c_ServiceName, "S31085", SQLMSG, c_err_msg );
      return ;
  }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      fn_errlog( c_ServiceName, "S31090",LIBMSG,c_err_msg);
      return ;
  }

  /******* Ver 1.1 Ends Here ****/
 return;
}


int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
  return 0;
}
