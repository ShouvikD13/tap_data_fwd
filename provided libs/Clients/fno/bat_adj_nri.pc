/***********************************************************************************/
/*  Program           : BAT_ADJ_NRI																								 */
/*                                                                                 */
/*  Output            : Success / Failure                                          */
/*                                                                                 */
/*  Description       : To process the records in End of Day (EOD) adjustment      */
/*                      of TDS incurred on profit loss for nri                     */
/*                                                                                 */
/*  Log               :                                                            */
/*                                                                                 */
/***********************************************************************************/
/*  19-Dec-2001   Ver 1.0        Abhishek Agrawal  Release 1.0                	   */
/*  03-Mar-2008   Ver 1.1        Sandeep Patil     IBM MIGRATION CHANEGS        	 */
/*  07-Apr-2010		Ver 1.2				 Sandeep Patil		 CRCSN43261								       */	
/* 	04-Dec-2012   Ver 1.3	AUDIT TABLE INSERT added	Nitin Save/ Bhushan Sonwane	   */	
/*  23-Feb-2013   Ver 1.4 Game Simulator Backoffice Automation                     */
/*	25-Mar-2013	  Ver 1.5 Game Simulator changes	Vishnu N											   */
/*	17-Oct-2018	  Ver 1.6 RI NRI conversion changes for	Navina D.								   */
/*                        settlement CR-ISEC03-111748															 */
/***********************************************************************************/
#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_ddr.h>
#include <sqlca.h>
#include <string.h>			/** Ver 1.1 **/
#include <fml_rout.h>		 /** Ver 1.1 **/
#include <fn_read_debug_lvl.h>		 /** Ver 1.1 **/
#include <sqlca.h>									/*** Ver 1.3 ***/
#include <fn_pos.h>				 /*** Ver 1.3 ***/


void BAT_ADJ_NRI( int argc, char *argv[] )
{
	long int li_tot_rcrds;
  int i_ch_val;
	int i_returncode;
  long int li_cnt;
  char c_msg[256];
	FBFR32 *ptr_fml_buf;
  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];

  char c_xchng_cd [ 4 ];
  char c_trd_dt [ LEN_DATE ];
  char c_cln_mtch_accnt [ 11 ];
  char c_rout_crt [ 4 ];
  char c_dr_cr_flg;
	char c_setoff_flg;	

	double  d_amount;

	short li_count = 0;
	int     i_trnsctn;						/* ver 1.3 */
	int     i_dt_flg = 0;					/* ver 1.3 */
	char    c_flg = 'F';          /* ver 1.3 */
	char		c_flg_chk;						/* ver 1.3 */
	char    c_Batch_Name [ 33 ];  /* ver 1.3 */

  /**** Ver 1.4 Starts ****/
  char c_program_nm[33];
  char c_xchng_cd_tmp[4];
  char c_match_id[11];
  char c_error_txt[256];

  MEMSET(c_program_nm);
  MEMSET(c_xchng_cd_tmp);
  MEMSET(c_match_id);
  MEMSET(c_error_txt);

  /**** Ver 1.4 Ends ***/
	
	if(argc < 4 )
  {
   sprintf ( c_msg, "Syntax: %s <ini> <NFO> <NA> <trd dt>", argv[0] );
   printf("%s\n\n",c_msg);
   fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
   fn_errlog( c_ServiceName, "S31005", LIBMSG, c_err_msg );
   return;
  }

  strcpy ( c_ServiceName, argv[0] );
		
	strcpy (c_Batch_Name, "bat_adj_nri");
	
	INITBATDBGLVL(argv[0]);			 /** Ver 1.1 **/

	sprintf ( c_msg, "Batch process %s started ", argv[0] );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

	strcpy ( c_msg, "Creating data. Please wait ... " );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  strcpy( c_xchng_cd, argv[2] );
	strcpy( c_trd_dt, argv[4] );

  /*** Ver 1.4 ***/
  strcpy(c_program_nm,c_ServiceName);
  strcpy(c_xchng_cd_tmp,c_xchng_cd);
  /** Ver 1.4 ends ***/
 
  fn_init_ddr_pop ( "NA", "NA", "NA" );

	fn_userlog ( c_ServiceName, "Inputs to the program:%s:%s:",c_xchng_cd,c_trd_dt );

	/** Ver 1.3 Starts *****/


 	i_trnsctn  = fn_begintran( c_ServiceName, c_err_msg );

  if ( i_trnsctn == -1 )
  {
    fn_errlog(c_ServiceName, "S31010", LIBMSG, c_err_msg);
    fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
    return;
  }

  EXEC SQL 
        INSERT INTO audit_prog_runstts
                 (
                    APR_PROG_NAME,
                    APR_TIME,
                    APR_SUCC_FLG,
										APR_TRD_DT,
                    APR_XCHNG_CD
                 )
          VALUES (
                    :c_ServiceName,
                    sysdate,
                    'N',
										:c_trd_dt,
                    :c_xchng_cd
                  );

  if( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName, "S31015", SQLMSG, c_err_msg);
    fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
    return;
  }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
    fn_errlog(c_ServiceName, "S31020", LIBMSG, c_err_msg);
    fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
    return;
  }
	
	/** Ver 1.3 ENDS *****/




	/***	Commented In Ver 1.2

	EXEC SQL
  SELECT  1
  INTO    :li_count
  FROM    EXG_XCHNG_MSTR
  WHERE   TO_CHAR(EXG_NXT_TRD_DT,'MON') = TO_CHAR(TO_DATE( :c_trd_dt, 'DD-MON-YYYY'),'MON')
  AND     EXG_XCHNG_CD = :c_xchng_cd
  AND     EXG_MKT_TYP = 'D'
	AND			EXG_SETT_OFF_FLG = 'N';		**** monthly adjustment only for set off flag 'N' ****

	*****************************************/

	EXEC SQL			/***	Ver	1.2	***/
		SELECT	1
		INTO		:li_count
		FROM		exg_xchng_mstr
		WHERE		exg_nxt_trd_dt	=	TO_DATE( :c_trd_dt, 'DD-MON-YYYY')
		AND			exg_xchng_cd = :c_xchng_cd
	  AND     exg_mkt_typ = 'D'
		AND			exg_sett_off_flg = 'N';

  if( SQLCODE != 0 && SQLCODE  != NO_DATA_FOUND )
  {
    sprintf( c_msg, "Error Occurred...Contact System support.");
    fn_bat_pst_msg( c_ServiceName, c_msg, c_tag );
    fn_errlog( c_ServiceName, "S31025", SQLMSG, c_err_msg );
		fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt );  /*** Ver 1.3 ***/
    strcpy(c_error_txt,"System error. Contact System Support");  /*** Ver 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/ 
    return;
  }

	if( li_count == 1  )			/***	Ver	1.2	***/
	{
    sprintf( c_msg, "Pls Complete EOD First Before Running TDS Adjustment");
		fn_bat_pst_msg( c_ServiceName, c_msg, c_tag );
		fn_errlog( c_ServiceName, "S31030", "Pls Run EOD First Before Running TDS Adjustment",c_err_msg); 
		fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt );     /*** Ver 1.3 ***/
    strcpy(c_error_txt,c_msg); /*** 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
		return;
	}

	/***	Commented In Ver	1.2 Process Can Run On Last Day Of Month To Carry Forward Losses.
	if(( li_count != 1 || SQLCODE == NO_DATA_FOUND ) )
	{
    sprintf( c_msg, "TDS Adjustments for NRIs is not done at end of month.");
    fn_bat_pst_msg( c_ServiceName, c_msg, c_tag );
    fn_errlog( c_ServiceName, "S31035", "TDS Adjustment for NRIs is not done at end of month", c_err_msg );
		return;
	}

	***************************************/

	/*** Ver 1.6 starts ***/
	li_count = 0;
	EXEC SQL		
		SELECT  count(0)	
		INTO		:li_count
		FROM		FCV_RI_NRI_CONV_LOG
		WHERE		FCV_PIPO_DT = TO_DATE( :c_trd_dt, 'DD-MON-YYYY')
		AND			FCV_STATUS IN ('R','P');

  if( SQLCODE != 0 )
  {
    sprintf( c_msg, "Error Occurred...Contact System support.");
    fn_bat_pst_msg( c_ServiceName, c_msg, c_tag );
    fn_errlog( c_ServiceName, "S31040", SQLMSG, c_err_msg );
		fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt ); 
    strcpy(c_error_txt,"System error. Contact System Support");  
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
    return;
  }

	if( li_count > 0  )		
	{
    sprintf( c_msg, "Pls Complete NRI PIPO process First Before Running TDS Adjustment");
		fn_bat_pst_msg( c_ServiceName, c_msg, c_tag );
		fn_errlog( c_ServiceName, "S31045", "Pls Run NRI PIPO process First Before Running TDS Adjustment",c_err_msg); 
		fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt );     
    strcpy(c_error_txt,c_msg);
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg); 
		return;
	}
	/*** Ver 1.6 ends ***/

	/**** Ver 1.3 Starts ***/	
  EXEC SQL
  SELECT 1
  into  :i_dt_flg
  FROM   FBC_FO_BRNCH_CAL
  WHERE  FBC_XCHNG_CD = :c_xchng_cd
  AND    FBC_GRP_ID = 9
	AND 	 FBC_TRD_DT = :c_trd_dt
	AND    FBC_CLN_PYIN_DT = to_char(LAST_DAY(:c_trd_dt),'DD-Mon-YYYY');
		
  if( SQLCODE != 0 )
  {
		if(SQLCODE == NO_DATA_FOUND && i_dt_flg !=1)
		{
			fn_errlog(c_ServiceName, "S31050","Please Check payin/Payout date in branch calendar",c_err_msg);
      strcpy(c_err_msg,"Please Check payin/Payout date in branch calendar");
      fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
			fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt );  /*** Ver 1.3 ***/
      fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      strcpy(c_error_txt,"Please Check payin/Payout date in branch calendar"); /*** 1.4 ***/
			fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
      return;	
		}
    fn_errlog(c_ServiceName, "S31055", SQLMSG, c_err_msg);
    fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);	
		fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt ); /*** Ver 1.3 ***/
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    strcpy(c_error_txt,"System error. Contact System Support"); /*** 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
    return;
  }


	/***** Ver 1.3 Ends ***/
	
	EXEC SQL
	DECLARE cur_eodnri CURSOR FOR
	SELECT 	FCB_CLM_MTCH_ACCNT,
					FCB_DC_AMT
	FROM		FCB_FO_CLNT_BLNCS
	WHERE 	FCB_XCHNG_CD = :c_xchng_cd
	AND			FCB_TRD_DT = to_date(:c_trd_dt, 'dd-Mon-yyyy' )
	AND			FCB_GRP_ID = 9
	AND			FCB_DC_AMT <> 0;
	
	EXEC SQL OPEN cur_eodnri;

	if( SQLCODE != 0 ) 
	{
		sprintf( c_msg, "Error in Selecting records" );
		fn_bat_pst_msg( c_ServiceName, c_msg, c_tag );
		fn_userlog( c_ServiceName, "Error in selecting records from fcb" );
		fn_errlog( c_ServiceName, "S31060", SQLMSG, c_err_msg );
		fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt );  /*** Ver 1.3 ***/
    strcpy(c_error_txt,"System error. Contact System Support"); /*** 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
	 	return;
	}
	
	ptr_fml_buf = NULL;
	while( 1 )
	{
		EXEC SQL
		FETCH cur_eodnri
		INTO	:c_cln_mtch_accnt,
					:d_amount;
		if( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
		{
			fn_dstry_rs ( ptr_fml_buf );
			sprintf( c_msg, "Error Occurrred,Contact System Support" );
			fn_bat_pst_msg( c_ServiceName, c_msg, c_tag );
			fn_errlog(c_ServiceName, "S31065", SQLMSG, c_err_msg );
			fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt );  /*** Ver 1.3 ***/
      strcpy(c_error_txt,"System error. Contact System Support"); /*** 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
			EXEC SQL CLOSE cur_eodnri;
		}

		if( SQLCODE == NO_DATA_FOUND )
		{
			fn_userlog( c_ServiceName, "NDF for FCB cursor" );
			break;
		}
		rtrim( c_cln_mtch_accnt );
		if (DEBUG_MSG_LVL_3)			 /** Ver 1.1 **/ 
		{
			fn_userlog( c_ServiceName, "The values :%s:%s:%s:%lf",c_xchng_cd,c_trd_dt,c_cln_mtch_accnt,d_amount);
		}
		i_returncode = fn_pack_vartofml( c_ServiceName,
																			c_err_msg,
																			&ptr_fml_buf,
																			4,
																			FFO_XCHNG_CD, ( char * )c_xchng_cd,
																			FFO_TRD_DT, ( char * )c_trd_dt,
																			FFO_EBA_MTCH_ACT_NO, ( char * )c_cln_mtch_accnt,
																			FFO_AMOUNT, ( char * )&d_amount );
		if( i_returncode == -1 )
		{
			fn_dstry_rs ( ptr_fml_buf );
			fn_errlog( c_ServiceName, "S31070", LIBMSG, c_err_msg );
			EXEC SQL CLOSE cur_eodnri;
			fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt );   /*** Ver 1.3 ***/
      strcpy(c_error_txt,"System Error. Contact System Support"); /*** 1.4 ***/ 
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
			return;
		}
	}
	EXEC SQL CLOSE cur_eodnri;

	if( ptr_fml_buf == NULL )
	{
		fn_userlog( c_ServiceName, "No value in FML" );
		c_flg = 'P';  		/*** Added in Ver 1.3 ***/ 
		fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt );  /*** Ver 1.3 ***/
  /* Commented in ver 1.5 **
	  strcpy(c_error_txt,"System Error. Contact System Support"); ** 1.4 ***
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  *** Ver 1.4 ***/
		return;
	}
	
	li_tot_rcrds = fn_reccnt_rs ( ptr_fml_buf,
                                c_ServiceName,
                                c_err_msg,
                                FFO_EBA_MTCH_ACT_NO );
	if ( li_tot_rcrds == -1 )
	{
		fn_errlog( c_ServiceName, "S31075", LIBMSG, c_err_msg );
		fn_dstry_rs ( ptr_fml_buf );
		fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt );  /*** Ver 1.3 ***/
    strcpy(c_error_txt,"System Error. Contact System Support"); /*** 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
		return;
	}

	strcpy ( c_msg, "Data created." );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
  sprintf ( c_msg, "Total records = %ld", li_tot_rcrds );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  for ( li_cnt=1; li_cnt<=li_tot_rcrds; li_cnt++ )
  {
		i_ch_val = fn_getnxt_rs ( ptr_fml_buf,
                              c_ServiceName,
                              c_err_msg,
                              4,
                            FFO_XCHNG_CD,( char * )c_xchng_cd, NULL,
                            FFO_TRD_DT,( char * )c_trd_dt, NULL,
                            FFO_EBA_MTCH_ACT_NO,( char *)c_cln_mtch_accnt,NULL,
                            FFO_AMOUNT,( char * )&d_amount, NULL );

		if ( i_ch_val != 0 )
		{
			fn_errlog( c_ServiceName, "S31080", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
  		strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt );  /*** Ver 1.3 ***/
      strcpy(c_error_txt,"System Error. Contact System Support"); /*** 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
			return;
		}

    if(li_cnt % 100 == 1)
		{
			sprintf ( c_msg, "Processing record %ld of %ld", li_cnt, li_tot_rcrds );
 			fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
		}

    i_ch_val = fn_pre_prcs_rcrd ( c_ServiceName,
                                  c_err_msg,
                                  "sfr_beod_gtdt",
                                  li_cnt,
                                  li_tot_rcrds );
    if ( i_ch_val == -1 )
    {
			fn_errlog( c_ServiceName, "S31085", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
  		strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt );   /*** Ver 1.3 ***/
      strcpy(c_error_txt,"System Error. Contact System Support"); /*** 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/ 
			return;
    }

    fn_cpy_ddr ( c_rout_crt ) ;

	  i_ch_val = fn_acall_svc_fml ( c_ServiceName,
	                                  c_err_msg,
	                                  "SFO_PRCS_ADJNRI",
	                                  0,
	                                  7,
	                                FFO_XCHNG_CD,( char * )c_xchng_cd,
	                                FFO_TRD_DT,( char * )c_trd_dt,
	                                FFO_EBA_MTCH_ACT_NO,( char *)c_cln_mtch_accnt,
	                                FFO_AMOUNT,( char * )&d_amount,
	                                FFO_ROUT_CRT, ( char * )c_rout_crt,
	                                FFO_BAT_TAG, ( char * )c_tag,
	                                FFO_REC_NO, ( char * )&li_cnt );
	  

		if ( i_ch_val == -1 )
	  {
			fn_errlog( c_ServiceName, "S31090", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
	  	strcpy ( c_msg, "System error. Contact system support" );
	  	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt );   /*** Ver 1.3 ***/
      strcpy(c_error_txt,"System Error. Contact System Support"); /*** 1.4 ***/
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
			return;
		}

  }

	fn_dstry_rs ( ptr_fml_buf );

	/** ver 1.3 Starts ***/

 	EXEC SQL
  	SELECT  apr_succ_flg  
    INTO 		:c_flg_chk
		FROM audit_prog_runstts
    WHERE  apr_prog_name = :c_ServiceName
    AND    apr_trd_dt =:c_trd_dt
    AND    apr_xchng_cd = :c_xchng_cd
    AND    apr_time = ( SELECT max(apr_time)
                        FROM   audit_prog_runstts
                        where  apr_prog_name = :c_ServiceName
                        AND   apr_xchng_cd = :c_xchng_cd  );

  if ( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName, "S31095", SQLMSG, c_err_msg);
    fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    strcpy(c_error_txt,"System Error. Contact System Support"); /*** 1.4 ***/
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  /*** Ver 1.4 ***/
    return;
  }

	if (c_flg_chk != 'F')
	{
		c_flg='P';
		fn_upd_audittab(c_ServiceName, c_Batch_Name, c_flg, c_xchng_cd, c_trd_dt ); 
	}

	  /** Ver 1.3 Ends ***/

	sprintf ( c_msg, "Batch process %s ended", argv[0] );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  return;
}



int fn_bat_init ( int argc, char *argv[] ) 
{
	fn_var = BAT_ADJ_NRI;
	return 0;
}

void fn_bat_term ( int argc, char *argv[] )
{
  return;
}

int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
	return 0;
}


