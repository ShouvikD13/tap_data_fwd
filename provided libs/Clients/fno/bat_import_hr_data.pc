/*******************************************************************************
*  Program           :  bat_import_hr_data.pc                                  *
*                                                                              *
*  Description       :  Program to import HR data for IBANK and ISEC and       *
*                       calls ICIS SP for applying schemes and also update ITE *
*                                                                              *
*  Input Parameters  :  This Progarm will run based on IOM_PROCESS_FLG and     *
*                       IOM_DOWNLOAD_FLG in IOM Table For for all companies    *
*                                                                              *
*  Change Log        : 1.0   02-Dec-2009  Venture M|Infotech                   *
*  Log               : 1.1   02-Sep-2010 Sachin Birje | Infotech               * 
*                    : 1.2   14-Jul-2011 Sachin Birje | Infotech               * 
*                    : 1.3   03-Jan-2012 Sachin Birje | Infotech               *
*                    : 1.4   04-May-2012 Sachin Birje | Infotech               *
*                    : 1.5   09-Oct-2012 Sachin Birje | Infotech               * 
*                    : 1.6   26-Feb-2013 Sachin Birje | Infotech               *
*                    : 1.7   25-Mar-2013 Shamili Dalvi| Infotech               *
*										 : 1.8 	 12-Aug-2013 Bhushan Sonwane | Infotech            *
*                    : 1.9   04-Jul-2013 Sandip Tambe | Infotech               *
*                    : 2.0   12-Sep-2013 Sachin Birje | Infotech               *
*                    : 2.1   15-Sep-2013 Sandip Tambe | Infotech               *
*                    : 2.2   05-Nov-2013 Sandip Tambe | Infotech               *
*                    : 2.3   06-Jun-2014 Sachin Birje | Infotech               *
*                    : 2.4   27-Oct-2014 Sachin Birje | Infotech               *
*                    : 2.4   09-Sep-2014 Sachin Birje | Infotech               *
*                    : 2.5   16-Mar-2015 Sachin Birje | Infotech               *
*                    : 2.7   14-jan-2016 Sachin Birje | Infotech               *
*                    : 2.8   11-Feb-2016 Kishor Borkar| Infotech               *
*                    : 2.9   20-Sep-2016 Sachin Birje | Infotech               *
*                    : 3.0   18-Oct-2016 Sachin Birje | Infotech               *
*                    : 3.1   20-Oct-2016 Vishal Borhade | Infotech             *
*                    : 3.3   14-Oct-2017 Samip M  | Infotech                   *
*                    : 3.4   19-Mar-2018 Sandip Tambe   | Infotech             *
*                    : 3.5   04-Apr-2018 Sandip Tambe   | Infotech             *
*                    : 3.6   04-Oct-2018 Sandip Tambe   | Infotech             *
*                    : 3.7   10-Oct-2018 Sandip Tambe   | Infotech             *
*                    : 3.8   01-Oct-2020 Sandip Tambe   | Infotech             *
*                    : 3.9   25-Apr-2019 Tanmay Patel   | Infotech             *
*                    : 4.0   03-Nov-2019 Tanmay Patel   | Infotech             *
*                    : 4.1   19-Nov-2019 Tanmay Patel   | Infotech             *
*                    : 4.2   24-Mar-2021 Sanjeet Pawar  | Infotech             *
*                    : 4.3   22-Apr-2021 Tanmay Patel   | Infotech             *
*                    : 4.4   30-Apr-2021 Tanmay Patel   | Infotech             *
*                    : 4.5   19-May-2023 Sandip Tambe   | Infotech             *
********************************************************************************
*  1.0    -  New Release                                                       *
*  1.1    -  CRCSN43.92- Download & scheme apply to Isec HR employee           *
*  1.2    -  Change of IOM_CODE ( changed to BANK & ISEC )                     *
*  1.3    -  increase in variable size                                         *
*  1.4    -  ITE Upload Changes                                                *
*  1.5    -  Handling of PAN null (NA) from ISEC or BANK 											 *
*  1.6    -  Handling of new columns in HEE table(NPS Corporate Model impact)  *
*	 1.7    -  SP name is changed due to Integration of CDX class with EBACLASS	 * 
*	 1.8 		-  Changes for Bank_ITMS_CR-ISEC04-41513 														 *
*	 1.9    -  CDX_MF_SCHM_MAP_CR-ISEC04-39733 changes                         	 * 
*	 2.0    -  ICICI Prudential Employee Data Download & Brokerage Scheme apply  * 
*	 2.1    -  ICICI Lombard Employee Data Download & Brokerage Scheme apply  	 * 
*	 2.2    -  ICICI Prudential AMC Data Download & Brokerage Scheme apply  	   * 
*  2.3    -  Employee brokerage Scheme mapping to NRI Employees-CR-ISEC04-48216*
*	 2.4    -  Handling of Suspended Match Ides at the time of Resign Scheme apply*
*  2.5    -  View to FML Changes                                               * 
*  2.6    -  Avoiding the Duplicate insertion in ITE                           *
*  2.7    -  If PAN null then insert NA                                        *
*  2.8    -  Employee name Update                                              * 
*  2.9    -  In case of error from stored proc, the data is reverted           *
*            from HEE temp table to HEE main table                             * 
*  3.0    -  Added in additional columns in HEE table                          *
*  3.1    -  Added in additional columns in HEE table                          * 
*  3.3    -  Bullet Brokerage Plan                                             *
*  3.4    -  PAMC view change                                                  *
*  3.5    -  ISEC Insider Control CR                                           *
*  3.6    -  BANK Insider Control CR movement changes                          *
*  3.7    -  IED insert delete handling for IPRD                               *
*  3.8    -  new column in HEE                                                 *
*  3.9    -  ISEC employee scheme to employee's family members                 *
*  4.0    -  Desigante ISEC employee changes                                   *
*  4.1    -  Desigante IPRD employee changes                                   *
*  4.2    -  Minor changes (Match account Blank)                               * 
*  4.3    -  CR-ISEC03-131428 - Validation on  mapping and demapping of employee accounts to Group employee scheme *
*  4.4    -  CR-ISEC04-147533 : Handling of Employee wise Stock wise restriction for ICICI venture employees       *
*  4.5    -  Isec consultant handling                                          *
********************************************************************************************************************/

/* Header Files */

#include<stdio.h>      /* C Header File                */
#include<stdlib.h>     /* C Header File                */
#include<atmi.h>       /* TUXEDO Header File           */
#include<userlog.h>    /* TUXEDO Header File           */
#include<fml32.h>      /* TUXEDO Header File           */
#include<Usysflds.h>   /* TUXEDO Field Definitions     */
#include<fn_battmpt.h>

#include<unistd.h>     /* ODBC Header file */
#include<sqlext.h>     /* ODBC Header file */
#include <errno.h>

#include <fo.h>
/** #include <fo_view_def.h> ** Ver 2.5 **/
#include <fn_session.h>
#include <strings.h>
#include <ctype.h>
#include <sqlcode.h>
#include <fn_log.h>
#include <fn_env.h>     
#include <fn_tuxlib.h>
#include<sqlca.h>
#include <fn_read_debug_lvl.h>
#include <fo_fml_def.h>           /** Ver 1.1 **/
#include <fml_def.h>        

#define DEFLOG0 if (DEBUG_MSG_LVL_0)
#define DEFLOG1 if (DEBUG_MSG_LVL_1)
#define DEFLOG2 if (DEBUG_MSG_LVL_0)
#define DEFLOG3 if (DEBUG_MSG_LVL_0)
#define DEFLOG4 if (DEBUG_MSG_LVL_4)
#define DEFLOG5 if (DEBUG_MSG_LVL_5)

#define TOTAL_FML 86
#define TOTAL_FML1 9						/** Ver 2.1 **/ 

EXEC SQL INCLUDE "table/clm_clnt_mstr.h"; /** Ver 4.3 **/

#define SQL_ROW_COUNT sqlca.sqlerrd[2]

char    ServiceName [ 33 ];  
extern HDBC   hdbc;
extern HENV   henv;
extern HSTMT  hstmt;
RETCODE rc;
CHAR    uid[20];
CHAR    pwd[20];
CHAR    driver[20];

char* ODBC_error (HSTMT l_hstmt);
char *trim(char *str);
void fn_print_date_time(void);

char c_mtch_accnt1[50+1];
char c_mtch_accnt2[50+1];
char c_ServiceName[255];

char c_errmsg[255]={'\0'};
char c_file_path[255]={'\0'};

char c_command[50]; /** added in Ver 4.5 **/

/******************************************************************************/

 EXEC SQL BEGIN DECLARE SECTION;

typedef struct iom_mstr    /**** Ver 1.1 ****/
{
 char iom_org_cd[6];
 char iom_org_desc[200];
 char iom_eq_scheme_cd[50];
 char iom_fno_scheme_cd[50];
 char iom_group_comp_cd[4];
 char iom_created_by[15];
 char iom_created_dt[22];
 char iom_modified_by[15];
 char iom_modified_dt[22];
 char iom_eq_rsgn_scheme_cd[50];
 char iom_fno_rsgn_scheme_cd[50];
 char iom_download_flg[2];
 char iom_cdx_scheme_cd[50];					/*** Ver 1.9 starts **/
 char iom_cdx_resign_scheme_cd[50];
 char iom_mf_permnt_comm_cd[10];
 char iom_mf_curr_comm_cd[10];
 char iom_mf_resign_permnt_comm_cd[10];
 char iom_mf_resign_curr_comm_cd[10];
 char iom_mf_validity_flg[2];
 char iom_mf_resign_validity_flg[2];		/** Ver 1.9 Ends ***/
}st_iom_mstr;

st_iom_mstr * var_st_iom_mstr= NULL;

char   hee_emplid[255]={'0'};
char   hee_name_prefix[255]={'0'};
char   hee_first_name[255]={'0'};
char   hee_middle_name[255]={'0'};
char   hee_last_name[255]={'0'};
char   hee_name[255]={'0'};
char   hee_national_id[255]={'0'};
char   hee_passport_nbr[255]={'0'};
char   hee_birthdate[255]={'0'};
char   hee_hire_dt[255]={'0'};
char   hee_probation_dt[255]={'0'};
char   hee_rehire_dt[255]={'0'};
char   hee_termination_dt[255]={'0'};
char   hee_mar_status[255]={'0'};
char   hee_diagnosis_cd[255]={'0'};
char   hee_gpin_caste[255]={'0'};
char   hee_nationality[255]={'0'};
char   hee_birthcountry[255]={'0'};
char   hee_birthstate[255]={'0'};
char   hee_empl_status[255]={'0'};
char   hee_ici_emr_cnt_name1[255]={'0'};
char   hee_ici_emr_cnt_name2[255]={'0'};
char   hee_ici_emr_cnt_phone1[255]={'0'};
char   hee_ici_emr_cnt_phone2[255]={'0'};
char   hee_blood_type[255]={'0'};
char   hee_sex[255]={'0'};
char   hee_height[255]={'0'};
char   hee_weight[255]={'0'};
char   hee_smoker[255]={'0'};
char   hee_ici_id_mark1[255]={'0'};
char   hee_ici_id_mark2[255]={'0'};
char   hee_tree_node_start[255]={'0'};
char   hee_ici_dept_descr[255]={'0'};
char   hee_position_nbr[255]={'0'};
char   hee_ici_posn_descr[255]={'0'};
char   hee_descr2[255]={'0'};
char   hee_grade[255]={'0'};
char   hee_ici_sal_lng_descr[255]={'0'};
char   hee_ici_sal_shrt_descr[255]={'0'};
char   hee_jobtitle[255]={'0'};
char   hee_supervisor_id[255]={'0'};
char   hee_email_addr[255]={'0'};
char   hee_address1[255]={'0'};
char   hee_address2[255]={'0'};
char   hee_address3[255]={'0'};
char   hee_city[255]={'0'};
char   hee_state[255]={'0'};
char   hee_country[255]={'0'};
char   hee_postal[255]={'0'};
char   hee_alter_emplid[255]={'0'};
char   hee_empl_ctg[255]={'0'};
char   hee_ici_acquistion_dt[255]={'0'};
char   hee_tree_node[255]={'0'};
char   hee_ici_maingrp_descr[255]={'0'};
char   hee_tcd_node_id[255]={'0'};
char   hee_ici_subgrp_descr[255]={'0'};
char   hee_ici_cost_centr_cod[255]={'0'};
char   hee_ici_descr1[255]={'0'};
char   hee_ici_tree_node_loc[255]={'0'};
char   hee_ici_locnzone_descr[255]={'0'};
char   hee_noticeperiod[255]={'0'};
char   hee_descr10[255]={'0'};
char   hee_ici_confirm_status[255]={'0'};
char   hee_ici_rip_status[255]={'0'};
char   hee_ici_rsgn_dt[255]={'0'};
char   hee_ici_mngr_name[255]={'0'};
char   hee_ici_ermgr_emplid[255]={'0'};
char   hee_ici_ermngr_name[255]={'0'};
char   hee_location[255]={'0'};
char   hee_ici_locn_descr[255]={'0'};
char   hee_ici_office_city[255]={'0'};
char   hee_ici_office_state[255]={'0'};
char   hee_ici_branch_flag[255]={'0'};
char   hee_ici_treenodstrt_tr[255]={'0'};
char   hee_ici_tree_node_tr[255]={'0'};
char   hee_ici_tcd_node_id_tr[255]={'0'};
char   hee_ici_actual_trns_dt[255]={'0'};
char   hee_ici_resignation_dt[255]={'0'};
char   hee_ici_rsgn_apprvd_dt[255]={'0'};
char   hee_last_date_worked[255]={'0'};
char   hee_withdraw_date[255]={'0'};
char   hee_ici_clearance_flag[255]={'0'};
char   hee_religion_cd[255]={'0'};
char   hee_empl_class[255]={'0'};
char   hee_updated_datetime[255]={'0'};
char   hee_job_code[255]={'0'};
char   hee_emp_id [10+1]={'0'};     /*** Ver 1.3 ****/
char   hee_nm_prefix [10+1]={'0'};  /*** Ver 1.3 ****/
char   hee_fst_nm [90+1]={'0'};     /*** Ver 1.3 ****/  
char   hee_lst_nm [90+1]={'0'};     /*** Ver 1.3 ****/
char   hee_mdl_nm [90+1]={'0'};     /*** Ver 1.3 ****/
char   hee_emp_knw [50+1]={'0'};    /*** Ver 1.3 ****/
char   hee_pancard_no [10+1]={'0'}; /*** Ver 1.3 ****/
char   hee_passport_no [10+1]={'0'};
char   hee_birth_dt [255]={'0'};
char   hee_emp_stts [5+1]={'0'};    /*** Ver 1.3 ****/
char   hee_loc_code [10+1]={'0'};   /*** Ver 1.3 ****/
char   hee_office_city [100+1]={'0'}; /*** Ver 1.3 ****/
char   hee_office_state [50+1]={'0'}; /*** Ver 1.3 ****/
char   c_hee_source[50+1] = {'0'}; /*** Ver 2.0 ****/
int i_rowcnt;
char c_g_date[9]={'0'};
char c_hee_upd_dt[23];
char c_l_success_flag;  
char c_l_error_msg[512]={'\0'};

char c_l_new_emp_eq_scheme[30] = {'\0'}; 
char c_l_new_emp_fo_scheme[30] = {'\0'};                   
char c_l_rsgn_emp_eq_scheme[30]= {'\0'};
char c_l_rsgn_emp_fo_scheme[30]= {'\0'};

char c_l_isec_new_emp_eq_scheme[30] = {'\0'};    /**** Ver 1.1 Starts ****/
char c_l_isec_new_emp_fo_scheme[30] = {'\0'};
char c_l_isec_rsgn_emp_eq_scheme[30]= {'\0'};
char c_l_isec_rsgn_emp_fo_scheme[30]= {'\0'};    /**** Ver 1.1 Ends ****/  

/** ver 1.9 starts **/
char c_l_new_emp_cdx_scheme[30] = {'\0'}; 
char c_l_new_emp_mf_permnt_comm_cd[30] = {'\0'};                   
char c_l_new_emp_mf_curr_comm_cd[30] = {'\0'};                   
char c_l_new_emp_mf_validity_flg[2] = {'\0'};                   
char c_l_rsgn_emp_cdx_scheme[30]= {'\0'};
char c_l_rsgn_emp_mf_prmnt_com_cd[30]= {'\0'};
char c_l_rsgn_emp_mf_curr_comm_cd[30]= {'\0'};
char c_l_rsgn_emp_mf_validity_flg[2] = {'\0'};    
               
char c_l_isec_new_emp_cdx_scheme[30] = {'\0'}; 
char c_l_isec_new_mf_prmnt_com_cd[30] = {'\0'};                   
char c_l_isec_new_mf_curr_comm_cd[30] = {'\0'};                   
char c_l_isec_new_emp_mf_val_flg[2] = {'\0'};                   
char c_l_isec_rsgn_emp_cdx_scheme[30]= {'\0'};
char c_l_isec_rsgn_mf_prmnt_com_cd[30]= {'\0'};
char c_l_isec_rsgn_mf_cur_com_cd[30]= {'\0'};
char c_l_isec_rsgn_mf_val_flg[2] = {'\0'};   

/** Ver 1.9 Ends   **/
int  i_g_step_number=0;
int  i_g_trnsctn=0;

/******************************************************************************/

SQLINTEGER  ind1=0;

EXEC SQL END DECLARE SECTION;

int fn_apply_bankemp_scheme(int);  /**** Ver 1.1 starts****/
int fn_apply_isecemp_scheme(int);
int fn_download_bank_data(int);
int fn_download_isec_data(int);
int fn_emp_ite_upld(int);  /*** Ver 1.4 ***/
int fn_download_lomb_data(int); /** 2.1 **/
int fn_download_pruamc_data(int); /** 2.2 **/
int fn_updt_isec_empnm(int);      /** 2.8 **/
int fn_rvrt_data_tmptomaintab(char *c_hee_source);  /*** ver 2.9 ***/

long counter = 0;

int fn_chng_ite_match (char *mtch_acnt_no);  /*** Ver 1.8 ***/
char c_l_mtch_acnt_no[11] = {'\0'};          /*** Ver 1.8 ***/
int fn_bullet_status_chng(char *c_ServiceName, char  *c_mtch_accnt, char c_source_flg,char c_map_dmap, char *c_from_dt, char *c_to_dt, char *c_err_msg );     /* Ver 3.3 */
int fn_emp_CLM_chng(char *c_ServiceName,char *c_l_mtch_acnt_id, char c_map_dmap, char *c_errmsg); /** Ver 4.3 **/

/*******************************/

 double d_iom_lpc;  /** Ver 4.3 **/

 FBFR32 *ptr_fml_Sbuf;          /**** Ver 1.1 ****/
 FBFR32 *ptr_fml_Rbuf;
 
  int i=0;

  long int li_len_Obuf;            /**** Ver 1.1 Starts ****/
  int i_return_cd;
  long int tot_rcrds;
  long int r_cnt;
  int i_rd_val;

void BAT_IMPORT_HR_DATA(int argc, char *argv[])
{

     INITBATDBGLVL(argv[0]);
     strcpy(c_ServiceName,argv[0]);
     DEFLOG3 fn_userlog(c_ServiceName, " Batch Process Started ");
     
    if( argc != 4 )
     {
      fn_bat_pst_msg ( c_ServiceName, "Invalid Number of Arguments",c_tag);
      fn_userlog(c_ServiceName," Usage : bat_import_hr_data NFO NFO NA ");
      exit(0);
     }    
      
     EXEC SQL SELECT COUNT(*) 
     INTO  :i_rowcnt 
     FROM IOM_INFO_ORGANIZATION_MSTR 
     WHERE IOM_PROCESS_FLG='Y';  

    if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
     {
      fn_errlog(c_ServiceName, "S31005", SQLMSG, c_errmsg );
      return;
     }
 
    /** Ver 4.3 Starts **/
    EXEC SQL
    SELECT NVL(IOM_LPC,0)
    into   :d_iom_lpc
    FROM   IOM_INFO_ORGANIZATION_MSTR
    WHERE  IOM_ORGANIZATION_CODE = 'ISEC';

    if ( SQLCODE != 0 )
    {
      fn_errlog ( c_ServiceName, "S31010", SQLMSG, c_errmsg  );
      return;
    }
    /** Ver 4.3 Ends **/
 
     var_st_iom_mstr = calloc(sizeof(st_iom_mstr),i_rowcnt);
     
     if(var_st_iom_mstr == NULL)
     {
       fn_errlog ( c_ServiceName, "S31015", UNXMSG, c_errmsg );
      return ;
     }

    DEFLOG3 fn_userlog(c_ServiceName, " The no of 'Y' Status Companies in IOM = %d", i_rowcnt); 
 
    EXEC SQL DECLARE cur_iom_mstr CURSOR
      FOR SELECT
         IOM_ORGANIZATION_CODE,
         nvl(IOM_ORGANIZATION_DESC,'NA'),
         nvl(IOM_EQ_SCHEME_CD,'NA'),
         nvl(IOM_FNO_SCHEME_CD,'NA'),
         nvl(IOM_GROUP_COMP_CD,'NA'),
         nvl(IOM_CREATED_BY,'NA'),
         nvl(IOM_CREATED_DT,'1-Jan-1800'), 
         nvl(IOM_MODIFIED_BY,'NA'),
         nvl(IOM_MODIFIED_DT,'1-Jan-1800'),
         nvl(IOM_EQ_RESIGN_SCHEME_CD,'NA'),
         nvl(IOM_FNO_RESIGN_SCHEME_CD,'NA'),
         IOM_DOWNLOAD_FLG,
				 nvl(IOM_CDX_SCHEME_CD,'NA'),							/** ver 1.9 starts **/
				 nvl(IOM_CDX_RESIGN_SCHEME_CD,'NA'), 
				 nvl(IOM_MF_PERMNT_COMM_CD,'NA'),
				 nvl(IOM_MF_CURR_COMM_CD,'NA'),
				 nvl(IOM_MF_RESIGN_PERMNT_COMM_CD,'NA'),
				 nvl(IOM_MF_RESIGN_CURR_COMM_CD,'NA'),
				 nvl(IOM_MF_VALIDITY_FLG,'F'),					 
				 nvl(IOM_MF_RESIGN_VALIDITY_FLG,'F')		 /** ver 1.9 ends **/
     FROM
          IOM_INFO_ORGANIZATION_MSTR
     WHERE IOM_PROCESS_FLG='Y';
    
     if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
     {
      fn_errlog(c_ServiceName, "S31020", SQLMSG, c_errmsg );
      return;
     }

   EXEC SQL OPEN cur_iom_mstr;
   
    if(SQLCODE != 0)
    {
      fn_errlog(c_ServiceName, "S31025", SQLMSG, c_errmsg );
      return;
    }

   EXEC SQL for :i_rowcnt 
   FETCH cur_iom_mstr
   INTO :var_st_iom_mstr;  
    
    if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
    {
      fn_errlog(c_ServiceName, "S31030", SQLMSG, c_errmsg );
      return;
    }

  EXEC SQL CLOSE cur_iom_mstr;
 
  for(i = 0 ; i < i_rowcnt ; i++)
  {
    rtrim(var_st_iom_mstr[i].iom_org_desc); 
    DEFLOG3 fn_userlog(c_ServiceName, " The Organization Code = %s ", var_st_iom_mstr[i].iom_org_cd);
    DEFLOG3 fn_userlog(c_ServiceName, " The Organization Description = %s ", var_st_iom_mstr[i].iom_org_desc);
    DEFLOG3 fn_userlog(c_ServiceName, " The Organization EQ Scheme code = %s ", var_st_iom_mstr[i].iom_eq_scheme_cd);
    DEFLOG3 fn_userlog(c_ServiceName, " The Organization Fno Scheme Code = %s ", var_st_iom_mstr[i].iom_fno_scheme_cd);
    DEFLOG3 fn_userlog(c_ServiceName, " The Organization group cmp Code = %s ", var_st_iom_mstr[i].iom_group_comp_cd);
    DEFLOG3 fn_userlog(c_ServiceName, " DownLoad Flag  = %s ", var_st_iom_mstr[i].iom_download_flg);

		/** Ver 1.9 starts ***/
    DEFLOG3 fn_userlog(c_ServiceName, " The Organization CDX Scheme code = %s ", var_st_iom_mstr[i].iom_cdx_scheme_cd);
    DEFLOG3 fn_userlog(c_ServiceName, " The Organization MF PERMNT COMM Code = %s ", var_st_iom_mstr[i].iom_mf_permnt_comm_cd);
    DEFLOG3 fn_userlog(c_ServiceName, " The Organization MF CURR COMM Code = %s ", var_st_iom_mstr[i].iom_mf_curr_comm_cd);
    DEFLOG3 fn_userlog(c_ServiceName, " The Organization MF Validity Flag = %s ", var_st_iom_mstr[i].iom_mf_validity_flg);

		/** ver 1.9 Ends **/

    rtrim(var_st_iom_mstr[i].iom_org_cd);   

    /*if(strcmp(var_st_iom_mstr[i].iom_org_cd,"BANK")==0)      *** Ver 1.2 *** ver 2.1 comment ***/
    if( ( strcmp(var_st_iom_mstr[i].iom_org_cd,"BANK") == 0 ) ||
			 	( strcmp(var_st_iom_mstr[i].iom_org_cd,"ILOM") ==	0 ) ||
			 	( strcmp(var_st_iom_mstr[i].iom_org_cd,"PAMC") ==	0 )			/** Ver 2.2 added **/ 
			)        /*** Ver 2.1 ***/
    { 
       if(strcmp(var_st_iom_mstr[i].iom_download_flg,"D")==0)   /** Check only for Download **/ 
       {
				 if(strcmp(var_st_iom_mstr[i].iom_org_cd,"BANK") ==0 ) /** Ver 2.1 if cond added**/
				 { 
         	if(fn_download_bank_data(i))
         	{
          	fn_errlog(c_ServiceName, "S31035", "Error in calling fetch_bank_data function ", c_errmsg );
          	continue;
         	}
				 } /** Ver 2.1 starts **/
				 else if(strcmp(var_st_iom_mstr[i].iom_org_cd,"ILOM") ==0 )
				 {
         	if(fn_download_lomb_data(i))
         	{
          	fn_errlog(c_ServiceName,"S31040","Error in calling fetch_lombard_datafunction ", c_errmsg );
          	continue;
         	}
				 } /*** Ver 2.1 ends **/ 
				 else if(strcmp(var_st_iom_mstr[i].iom_org_cd,"PAMC") ==0 ) /** Ver 2.2 starts **/
				 {
         	if(fn_download_pruamc_data(i))
         	{
          	fn_errlog(c_ServiceName,"S31045","Error in calling fetch_PruAMC_data function ", c_errmsg );
          	continue;
         	}
				 } /*** Ver 2.2 ends **/ 
       }
       else if(strcmp(var_st_iom_mstr[i].iom_download_flg,"A")==0) /** Check only for Scheme Apply **/ 
       {
         if (fn_apply_bankemp_scheme(i) )
         {
          fn_errlog(c_ServiceName, "S31050", "Error in calling ICIS procedure for Bank ", c_errmsg );
          continue;
         }
       }     
       else if(strcmp(var_st_iom_mstr[i].iom_download_flg,"B")==0) /** Check for both Download & Scheme Apply **/ 
       {
				 if(strcmp(var_st_iom_mstr[i].iom_org_cd,"BANK") ==0 ) /** Ver 2.1 if cond added**/
				 { 
         	if(fn_download_bank_data(i))
         	{
          	fn_errlog(c_ServiceName, "S31055", "Error in calling fetch_bank_data function ", c_errmsg );
          	continue;
         	}
				 } /** Ver 2.1 starts **/
				 else if(strcmp(var_st_iom_mstr[i].iom_org_cd,"ILOM") ==0 )
				 {
         	if(fn_download_lomb_data(i))
         	{
          	fn_errlog(c_ServiceName,"S31060","Error in calling fetch_lombard_data function ", c_errmsg );
          	continue;
         	}
				 } /*** Ver 2.1 ends **/ 
				 else if(strcmp(var_st_iom_mstr[i].iom_org_cd,"PAMC") ==0 ) /** Ver 2.2 **/
				 {
         	if(fn_download_pruamc_data(i))
         	{
          	fn_errlog(c_ServiceName,"S31065","Error in calling fetch_PruAMC_data function ", c_errmsg );
          	continue;
         	}
				 } /*** Ver 2.2 ends **/ 
         if (fn_apply_bankemp_scheme(i) )
         {
          	fn_errlog(c_ServiceName, "S31070", "Error in calling ICIS procedure for Bank ", c_errmsg );
          	continue;
         }
       }
       else if(strcmp(var_st_iom_mstr[i].iom_download_flg,"I")==0) /** Ver 1.4, Download and Insert in ITE **/
       {
				 if(strcmp(var_st_iom_mstr[i].iom_org_cd,"BANK") ==0 ) /** Ver 2.1 if cond added**/
				 { 
         	if(fn_download_bank_data(i))
         	{
          	fn_errlog(c_ServiceName, "S31075", "Error in calling fetch_bank_data function ", c_errmsg );
          	continue;
         	}
				 } /** Ver 2.1 starts **/
				 else if(strcmp(var_st_iom_mstr[i].iom_org_cd,"ILOM") ==0 )
				 {
         	if(fn_download_lomb_data(i))
         	{
          	fn_errlog(c_ServiceName,"S31080","Error in calling fetch_lombard_data function ", c_errmsg );
          	continue;
         	}
				 } /*** Ver 2.1 ends **/ 
				 else if(strcmp(var_st_iom_mstr[i].iom_org_cd,"PAMC") ==0 ) /** Ver 2.2 **/
				 {
         	/*if(fn_download_lomb_data(i))				** Ver 3.4 **/
         	if(fn_download_pruamc_data(i))
         	{
          	fn_errlog(c_ServiceName,"S31085","Error in calling fetch_PruAMC_data function ", c_errmsg );
          	continue;
         	}
				 } /*** Ver 2.2 ends **/ 
         if (fn_emp_ite_upld(i) )
         {
          /*fn_errlog(c_ServiceName, "S31090", "Error in calling ICIS procedure for Bank ", c_errmsg ); */
          fn_errlog(c_ServiceName, "S31095", "Error in calling ICIS procedure", c_errmsg ); /** 2.2 **/
          continue;
         }
       } 
   }
   else if( (strcmp(var_st_iom_mstr[i].iom_org_cd,"ISEC")==0) || 
            (strcmp(var_st_iom_mstr[i].iom_org_cd,"IPRD")==0) ||   /*** Ver 1.2 ***/  /** Ver 2.0 IPRD added **/
            (strcmp(var_st_iom_mstr[i].iom_org_cd,"IVEN")==0) )     /** IVEN added in Ver 4.4 **/
   {
      
      if(strcmp(var_st_iom_mstr[i].iom_download_flg,"D")==0) /** Check only for Download **/
      {
       if( fn_download_isec_data(i) )
        {
          fn_errlog(c_ServiceName, "S31100", "Error in calling fetch_isec_data function ", c_errmsg );
          continue;
        }
      }
      else if(strcmp(var_st_iom_mstr[i].iom_download_flg,"A")==0) /** Check only for Apply **/
      {

       if (fn_apply_isecemp_scheme(i) )
        {
          fn_errlog(c_ServiceName, "S31105", "Error in calling ICIS procedure for Isec ", c_errmsg );
          continue;
        }
      }
      else if(strcmp(var_st_iom_mstr[i].iom_download_flg,"B")==0) /** Check for both Download & Scheme Apply **/
      {

       if( fn_download_isec_data(i) )
        {
          fn_errlog(c_ServiceName, "S31110", "Error in calling fetch_isec_data function ", c_errmsg );
          continue;
        }   
        if (fn_apply_isecemp_scheme(i) )
        {
          fn_errlog(c_ServiceName, "S31115", "Error in calling ICIS procedure for Isec ", c_errmsg );
          continue;
        }
      }
      else if(strcmp(var_st_iom_mstr[i].iom_download_flg,"I")==0) /** Ver 1.4 Download and Insert in ITE **/
      {
    
       if( fn_download_isec_data(i) )
        {
          fn_errlog(c_ServiceName, "S31120", "Error in calling fetch_isec_data function ", c_errmsg );
          continue;
        }
        if (fn_emp_ite_upld(i) )
        {
          fn_errlog(c_ServiceName, "S31125", "Error in calling ICIS procedure for Isec ", c_errmsg );
          continue;
        }
      }     
  }
  else
  {
     fn_userlog(c_ServiceName," Company Data Base is Not Accessible ");
  }


 } /**** ENd of For Loop ****/

	  /** Ver 4.5 Starts ***/
  userlog(c_ServiceName," Invoking Auto Match account correction and Designate Mapping");
  MEMSET(c_command);
  strcpy(c_command , "nohup bat_itms_mtch_crctn NFO NFO NA & ");
  userlog(c_ServiceName,"Command tobe executed is:%s:",c_command);
  system(c_command);
  userlog(c_ServiceName," Post Call to : Auto Match account correction and Designate Mapping");
  /** Ver 4.5 Ends ***/


  	fn_userlog(c_ServiceName, "bat_itms_mtch_crctn has been properly "); /** aded in ver 4.5 **/


   fn_userlog(c_ServiceName,"Batch Complete " );
   tpsvrdone();


}/** ENd of Batch **/  /*** Ver 1.1 Ends ***/
  
/************************************************************************************/
/************************** Fetch Bank Employee  Data ********************************/  
/*************************************************************************************/ 

int fn_download_bank_data(int i)
{
 FILE * fpfile=NULL;
 RETCODE rc;
 RETCODE rc1[TOTAL_FML];
 RETCODE i_err[TOTAL_FML];
 HSTMT   hstmt;
 char *ptr;											/** Ver 2.1 ***/
 char c_connect_id[5]={'\0'};		/** Ver 2.1 **/
 
 fn_userlog(c_ServiceName,"***********Inside fn_download_bank_data Function *****");
 strcpy(c_connect_id,"BANK");		/** Ver 2.1 ***/
 ptr=c_connect_id;							/** Ver 2.1 ***/

  /**tpsvrinit(5, NULL);    **** Ver 2.1 comment ***/
  tpsvrinit(5, &ptr);				/** Ver 2.1 ***/ 

  rc=SQLAllocStmt (hdbc, &hstmt);

  if ((rc != SQL_SUCCESS) && (rc != SQL_SUCCESS_WITH_INFO))
  {
    fn_userlog(c_ServiceName,"Unable to Allocate a hstmt.");
    return (-1);
  }
  else
  {
    fn_userlog(c_ServiceName,"SQL Allocation done ");
  } 
  
  EXEC SQL
    SELECT to_char(sysdate,'yyyymmdd') 
    INTO   :c_g_date
    FROM   dual;

  if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName, "S31130", SQLMSG, c_errmsg );
    return (-1);
  } 
 
  if(tuxgetenv("EBALOG_PATH")== NULL)
  {
    fn_errlog(c_ServiceName, "S31135", TPMSG,c_errmsg);
    fn_userlog(c_ServiceName,"Unable to access EBALOG_PATH location ");
    return (-1);
  }
  strcpy(c_file_path,tuxgetenv("EBALOG_PATH"));
  strcat(c_file_path,"/");
  strcat(c_file_path, c_g_date);
  strcat(c_file_path,"/employee"); 
  fn_userlog(c_ServiceName,"EBALOG_PATH location %s", c_file_path );
    
  if (c_file_path[strlen(c_file_path)] == '/')
     strcat(c_file_path,"hr_bank_data.txt");
  else
     strcat(c_file_path,"/hr_bank_data.txt");
    
  fpfile=(FILE *)fopen(c_file_path,"w+");

  if(fpfile==NULL)
  {
    fn_userlog(c_ServiceName,"File opening failed-Path=%s", c_file_path);
    fn_errlog(c_ServiceName, "S31140","File Opening Failed",c_errmsg);
    return (-1);
  }  
  
  DEFLOG3 fn_userlog(c_ServiceName,"File opened %s", c_file_path );
  
  i_g_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_g_trnsctn == -1 )
  {
      fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
      fn_errlog ( c_ServiceName, "S31145", TPMSG, c_errmsg );
      return(-1);
  }

   
  EXEC SQL
    DELETE FROM HEE_HR_EMP_EXTRCT where HEE_SOURCE='ICICI BANK';

  if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName, "S31150", SQLMSG, c_errmsg );
    fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );  /*** Ver 1.4 ***/  
    return (-1);
  }
  DEFLOG3 fn_userlog(c_ServiceName," Old Bank data deleted ");  
  rc = SQLPrepare(hstmt,(UCHAR*)"Select EMPLID,NAME_PREFIX,FIRST_NAME,MIDDLE_NAME,LAST_NAME,NAME,NATIONAL_ID,PASSPORT_NBR,BIRTHDATE,HIRE_DT,PROBATION_DT,REHIRE_DT,TERMINATION_DT,MAR_STATUS,DIAGNOSIS_CD,GPIN_CASTE,NATIONALITY,BIRTHCOUNTRY,BIRTHSTATE,EMPL_STATUS,ICI_EMR_CNT_NAME1,ICI_EMR_CNT_NAME2,ICI_EMR_CNT_PHONE1,ICI_EMR_CNT_PHONE2,BLOOD_TYPE,SEX,HEIGHT,WEIGHT,SMOKER,ICI_ID_MARK1,ICI_ID_MARK2,TREE_NODE_START,ICI_DEPT_DESCR,POSITION_NBR,ICI_POSN_DESCR,DESCR2,GRADE,ICI_SAL_LNG_DESCR,ICI_SAL_SHRT_DESCR,JOBTITLE,SUPERVISOR_ID,EMAIL_ADDR,ADDRESS1,ADDRESS2,ADDRESS3,CITY,STATE,COUNTRY,POSTAL,ALTER_EMPLID,EMPL_CTG,ICI_ACQUISTION_DT,TREE_NODE,ICI_MAINGRP_DESCR,TCD_NODE_ID,ICI_SUBGRP_DESCR,ICI_COST_CENTR_COD,ICI_DESCR1,ICI_TREE_NODE_LOC,ICI_LOCNZONE_DESCR,NOTICEPERIOD,DESCR10,ICI_CONFIRM_STATUS,ICI_RIP_STATUS,ICI_RSGN_DT,ICI_MNGR_NAME,ICI_ERMGR_EMPLID,ICI_ERMNGR_NAME,LOCATION,ICI_LOCN_DESCR,ICI_OFFICE_CITY,ICI_OFFICE_STATE,ICI_BRANCH_FLAG,ICI_TREENODSTRT_TR,ICI_TREE_NODE_TR,ICI_TCD_NODE_ID_TR,ICI_ACTUAL_TRNS_DT,ICI_RESIGNATION_DT,ICI_RSGN_APPRVD_DT,LAST_DATE_WORKED,WITHDRAW_DATE,ICI_CLEARANCE_FLAG,RELIGION_CD,EMPL_CLASS,UPDATED_DATETIME,JOB_CODE  from PSFT_V_TEMP",SQL_NTS);  
  if ((rc != SQL_SUCCESS) && (rc != SQL_SUCCESS_WITH_INFO))
  {
    fn_userlog(c_ServiceName,"Unable to prepare a hstmt.");
    fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );  /*** Ver 1.4 ***/
    return (-1);
  }
  else
  {
    fn_userlog(c_ServiceName,"SQLPrepare successful " );
  }
  
  rc = SQLExecute(hstmt);

  if ((rc != SQL_SUCCESS) && (rc != SQL_SUCCESS_WITH_INFO))
  {
    fn_userlog(c_ServiceName,"......SQLExcute has Failed. RC=%d", rc);
    fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /*** Ver 1.4 ***/
    return (-1);
  }

      ind1=SQL_NTS;
      rc1[0] = SQLBindCol(hstmt,1, SQL_C_CHAR,hee_emplid,               (SDWORD)sizeof(hee_emplid), &ind1);
      rc1[1] = SQLBindCol(hstmt,2, SQL_C_CHAR,hee_name_prefix,          (SDWORD)sizeof(hee_name_prefix), &ind1);
      rc1[2] = SQLBindCol(hstmt,3, SQL_C_CHAR,hee_first_name,           (SDWORD)sizeof(hee_first_name), &ind1);
      rc1[3] = SQLBindCol(hstmt,4, SQL_C_CHAR,hee_middle_name,          (SDWORD)sizeof(hee_middle_name), &ind1);
      rc1[4] = SQLBindCol(hstmt,5, SQL_C_CHAR,hee_last_name,            (SDWORD)sizeof(hee_last_name), &ind1);
      rc1[5] = SQLBindCol(hstmt,6, SQL_C_CHAR,hee_name,                 (SDWORD)sizeof(hee_name), &ind1);
      rc1[6] = SQLBindCol(hstmt,7, SQL_C_CHAR,hee_national_id,          (SDWORD)sizeof(hee_national_id), &ind1);
      rc1[7] = SQLBindCol(hstmt,8, SQL_C_CHAR,hee_passport_nbr,         (SDWORD)sizeof(hee_passport_nbr), &ind1);
      rc1[8] = SQLBindCol(hstmt,9, SQL_C_CHAR,hee_birthdate,            (SDWORD)sizeof(hee_birthdate), &ind1);
      rc1[9] = SQLBindCol(hstmt,10, SQL_C_CHAR,hee_hire_dt,             (SDWORD)sizeof(hee_hire_dt), &ind1);
      rc1[10] = SQLBindCol(hstmt,11, SQL_C_CHAR,hee_probation_dt,       (SDWORD)sizeof(hee_probation_dt), &ind1);
      rc1[11] = SQLBindCol(hstmt,12, SQL_C_CHAR,hee_rehire_dt,          (SDWORD)sizeof(hee_rehire_dt), &ind1);
      rc1[12] = SQLBindCol(hstmt,13, SQL_C_CHAR,hee_termination_dt,     (SDWORD)sizeof(hee_termination_dt), &ind1);
      rc1[13] = SQLBindCol(hstmt,14, SQL_C_CHAR,hee_mar_status,         (SDWORD)sizeof(hee_mar_status), &ind1);
      rc1[14] = SQLBindCol(hstmt,15, SQL_C_CHAR,hee_diagnosis_cd,       (SDWORD)sizeof(hee_diagnosis_cd), &ind1);
      rc1[15] = SQLBindCol(hstmt,16, SQL_C_CHAR,hee_gpin_caste,         (SDWORD)sizeof(hee_gpin_caste), &ind1);
      rc1[16] = SQLBindCol(hstmt,17, SQL_C_CHAR,hee_nationality,        (SDWORD)sizeof(hee_nationality), &ind1);
      rc1[17] = SQLBindCol(hstmt,18, SQL_C_CHAR,hee_birthcountry,       (SDWORD)sizeof(hee_birthcountry), &ind1);
      rc1[18] = SQLBindCol(hstmt,19, SQL_C_CHAR,hee_birthstate,         (SDWORD)sizeof(hee_birthstate), &ind1);
      rc1[19] = SQLBindCol(hstmt,20, SQL_C_CHAR,hee_empl_status,        (SDWORD)sizeof(hee_empl_status), &ind1);
      rc1[20] = SQLBindCol(hstmt,21, SQL_C_CHAR,hee_ici_emr_cnt_name1,  (SDWORD)sizeof(hee_ici_emr_cnt_name1), &ind1);
      rc1[21] = SQLBindCol(hstmt,22, SQL_C_CHAR,hee_ici_emr_cnt_name2,  (SDWORD)sizeof(hee_ici_emr_cnt_name2), &ind1);
      rc1[22] = SQLBindCol(hstmt,23, SQL_C_CHAR,hee_ici_emr_cnt_phone1, (SDWORD)sizeof(hee_ici_emr_cnt_phone1), &ind1);
      rc1[23] = SQLBindCol(hstmt,24, SQL_C_CHAR,hee_ici_emr_cnt_phone2, (SDWORD)sizeof(hee_ici_emr_cnt_phone2), &ind1);
      rc1[24] = SQLBindCol(hstmt,25, SQL_C_CHAR,hee_blood_type,         (SDWORD)sizeof(hee_blood_type), &ind1);
      rc1[25] = SQLBindCol(hstmt,26, SQL_C_CHAR,hee_sex,                (SDWORD)sizeof(hee_sex), &ind1);
      rc1[26] = SQLBindCol(hstmt,27, SQL_C_CHAR,hee_height,             (SDWORD)sizeof(hee_height), &ind1);
      rc1[27] = SQLBindCol(hstmt,28, SQL_C_CHAR,hee_weight,             (SDWORD)sizeof(hee_weight), &ind1);
      rc1[28] = SQLBindCol(hstmt,29, SQL_C_CHAR,hee_smoker,             (SDWORD)sizeof(hee_smoker), &ind1);
      rc1[29] = SQLBindCol(hstmt,30, SQL_C_CHAR,hee_ici_id_mark1,       (SDWORD)sizeof(hee_ici_id_mark1), &ind1);
      rc1[30] = SQLBindCol(hstmt,31, SQL_C_CHAR,hee_ici_id_mark2,       (SDWORD)sizeof(hee_ici_id_mark2), &ind1);
      rc1[31] = SQLBindCol(hstmt,32, SQL_C_CHAR,hee_tree_node_start,    (SDWORD)sizeof(hee_tree_node_start), &ind1);
      rc1[32] = SQLBindCol(hstmt,33, SQL_C_CHAR,hee_ici_dept_descr,     (SDWORD)sizeof(hee_ici_dept_descr), &ind1);
      rc1[33] = SQLBindCol(hstmt,34, SQL_C_CHAR,hee_position_nbr,       (SDWORD)sizeof(hee_position_nbr), &ind1);
      rc1[34] = SQLBindCol(hstmt,35, SQL_C_CHAR,hee_ici_posn_descr,     (SDWORD)sizeof(hee_ici_posn_descr), &ind1);
      rc1[35] = SQLBindCol(hstmt,36, SQL_C_CHAR,hee_descr2,             (SDWORD)sizeof(hee_descr2), &ind1);
      rc1[36] = SQLBindCol(hstmt,37, SQL_C_CHAR,hee_grade,              (SDWORD)sizeof(hee_grade), &ind1);
      rc1[37] = SQLBindCol(hstmt,38, SQL_C_CHAR,hee_ici_sal_lng_descr,  (SDWORD)sizeof(hee_ici_sal_lng_descr), &ind1);
      rc1[38] = SQLBindCol(hstmt,39, SQL_C_CHAR,hee_ici_sal_shrt_descr, (SDWORD)sizeof(hee_ici_sal_shrt_descr), &ind1);
      rc1[39] = SQLBindCol(hstmt,40, SQL_C_CHAR,hee_jobtitle,           (SDWORD)sizeof(hee_jobtitle), &ind1);
      rc1[40] = SQLBindCol(hstmt,41, SQL_C_CHAR,hee_supervisor_id,      (SDWORD)sizeof(hee_supervisor_id), &ind1);
      rc1[41] = SQLBindCol(hstmt,42, SQL_C_CHAR,hee_email_addr,         (SDWORD)sizeof(hee_email_addr), &ind1);
      rc1[42] = SQLBindCol(hstmt,43, SQL_C_CHAR,hee_address1,           (SDWORD)sizeof(hee_address1), &ind1);
      rc1[43] = SQLBindCol(hstmt,44, SQL_C_CHAR,hee_address2,           (SDWORD)sizeof(hee_address2), &ind1);
      rc1[44] = SQLBindCol(hstmt,45, SQL_C_CHAR,hee_address3,           (SDWORD)sizeof(hee_address3), &ind1);
      rc1[45] = SQLBindCol(hstmt,46, SQL_C_CHAR,hee_city,               (SDWORD)sizeof(hee_city), &ind1);
      rc1[46] = SQLBindCol(hstmt,47, SQL_C_CHAR,hee_state,              (SDWORD)sizeof(hee_state), &ind1);
      rc1[47] = SQLBindCol(hstmt,48, SQL_C_CHAR,hee_country,            (SDWORD)sizeof(hee_country), &ind1);
      rc1[48] = SQLBindCol(hstmt,49, SQL_C_CHAR,hee_postal,             (SDWORD)sizeof(hee_postal), &ind1);
      rc1[49] = SQLBindCol(hstmt,50, SQL_C_CHAR,hee_alter_emplid,       (SDWORD)sizeof(hee_alter_emplid), &ind1);
      rc1[50] = SQLBindCol(hstmt,51, SQL_C_CHAR,hee_empl_ctg,           (SDWORD)sizeof(hee_empl_ctg), &ind1);
      rc1[51] = SQLBindCol(hstmt,52, SQL_C_CHAR,hee_ici_acquistion_dt,  (SDWORD)sizeof(hee_ici_acquistion_dt), &ind1);
      rc1[52] = SQLBindCol(hstmt,53, SQL_C_CHAR,hee_tree_node,          (SDWORD)sizeof(hee_tree_node), &ind1);
      rc1[53] = SQLBindCol(hstmt,54, SQL_C_CHAR,hee_ici_maingrp_descr,  (SDWORD)sizeof(hee_ici_maingrp_descr), &ind1);
      rc1[54] = SQLBindCol(hstmt,55, SQL_C_CHAR,hee_tcd_node_id,        (SDWORD)sizeof(hee_tcd_node_id), &ind1);
      rc1[55] = SQLBindCol(hstmt,56, SQL_C_CHAR,hee_ici_subgrp_descr,   (SDWORD)sizeof(hee_ici_subgrp_descr), &ind1);
      rc1[56] = SQLBindCol(hstmt,57, SQL_C_CHAR,hee_ici_cost_centr_cod, (SDWORD)sizeof(hee_ici_cost_centr_cod), &ind1);
      rc1[57] = SQLBindCol(hstmt,58, SQL_C_CHAR,hee_ici_descr1,         (SDWORD)sizeof(hee_ici_descr1), &ind1);
      rc1[58] = SQLBindCol(hstmt,59, SQL_C_CHAR,hee_ici_tree_node_loc,  (SDWORD)sizeof(hee_ici_tree_node_loc), &ind1);
      rc1[59] = SQLBindCol(hstmt,60, SQL_C_CHAR,hee_ici_locnzone_descr, (SDWORD)sizeof(hee_ici_locnzone_descr), &ind1);
      rc1[60] = SQLBindCol(hstmt,61, SQL_C_CHAR,hee_noticeperiod,       (SDWORD)sizeof(hee_noticeperiod), &ind1);
      rc1[61] = SQLBindCol(hstmt,62, SQL_C_CHAR,hee_descr10,            (SDWORD)sizeof(hee_descr10), &ind1);
      rc1[62] = SQLBindCol(hstmt,63, SQL_C_CHAR,hee_ici_confirm_status, (SDWORD)sizeof(hee_ici_confirm_status), &ind1);
      rc1[63] = SQLBindCol(hstmt,64, SQL_C_CHAR,hee_ici_rip_status,     (SDWORD)sizeof(hee_ici_rip_status), &ind1);
      rc1[64] = SQLBindCol(hstmt,65, SQL_C_CHAR,hee_ici_rsgn_dt,        (SDWORD)sizeof(hee_ici_rsgn_dt), &ind1);
      rc1[65] = SQLBindCol(hstmt,66, SQL_C_CHAR,hee_ici_mngr_name,      (SDWORD)sizeof(hee_ici_mngr_name), &ind1);
      rc1[66] = SQLBindCol(hstmt,67, SQL_C_CHAR,hee_ici_ermgr_emplid,   (SDWORD)sizeof(hee_ici_ermgr_emplid), &ind1);
      rc1[67] = SQLBindCol(hstmt,68, SQL_C_CHAR,hee_ici_ermngr_name,    (SDWORD)sizeof(hee_ici_ermngr_name), &ind1);
      rc1[68] = SQLBindCol(hstmt,69, SQL_C_CHAR,hee_location,           (SDWORD)sizeof(hee_location), &ind1);
      rc1[69] = SQLBindCol(hstmt,70, SQL_C_CHAR,hee_ici_locn_descr,     (SDWORD)sizeof(hee_ici_locn_descr), &ind1);
      rc1[70] = SQLBindCol(hstmt,71, SQL_C_CHAR,hee_ici_office_city,    (SDWORD)sizeof(hee_ici_office_city), &ind1);
      rc1[71] = SQLBindCol(hstmt,72, SQL_C_CHAR,hee_ici_office_state,   (SDWORD)sizeof(hee_ici_office_state), &ind1);
      rc1[72] = SQLBindCol(hstmt,73, SQL_C_CHAR,hee_ici_branch_flag,    (SDWORD)sizeof(hee_ici_branch_flag), &ind1);
      rc1[73] = SQLBindCol(hstmt,74, SQL_C_CHAR,hee_ici_treenodstrt_tr, (SDWORD)sizeof(hee_ici_treenodstrt_tr), &ind1);
      rc1[74] = SQLBindCol(hstmt,75, SQL_C_CHAR,hee_ici_tree_node_tr,   (SDWORD)sizeof(hee_ici_tree_node_tr), &ind1);
      rc1[75] = SQLBindCol(hstmt,76, SQL_C_CHAR,hee_ici_tcd_node_id_tr, (SDWORD)sizeof(hee_ici_tcd_node_id_tr), &ind1);
      rc1[76] = SQLBindCol(hstmt,77, SQL_C_CHAR,hee_ici_actual_trns_dt, (SDWORD)sizeof(hee_ici_actual_trns_dt), &ind1);
      rc1[77] = SQLBindCol(hstmt,78, SQL_C_CHAR,hee_ici_resignation_dt, (SDWORD)sizeof(hee_ici_resignation_dt), &ind1);
      rc1[78] = SQLBindCol(hstmt,79, SQL_C_CHAR,hee_ici_rsgn_apprvd_dt, (SDWORD)sizeof(hee_ici_rsgn_apprvd_dt), &ind1);
      rc1[79] = SQLBindCol(hstmt,80, SQL_C_CHAR,hee_last_date_worked,   (SDWORD)sizeof(hee_last_date_worked), &ind1);
      rc1[80] = SQLBindCol(hstmt,81, SQL_C_CHAR,hee_withdraw_date,      (SDWORD)sizeof(hee_withdraw_date), &ind1);
      rc1[81] = SQLBindCol(hstmt,82, SQL_C_CHAR,hee_ici_clearance_flag, (SDWORD)sizeof(hee_ici_clearance_flag), &ind1);
      rc1[82] = SQLBindCol(hstmt,83, SQL_C_CHAR,hee_religion_cd,        (SDWORD)sizeof(hee_religion_cd), &ind1);
      rc1[83] = SQLBindCol(hstmt,84, SQL_C_CHAR,hee_empl_class,         (SDWORD)sizeof(hee_empl_class), &ind1);
      rc1[84] = SQLBindCol(hstmt,85, SQL_C_CHAR,hee_updated_datetime,   (SDWORD)sizeof(hee_updated_datetime), &ind1);
      rc1[85] = SQLBindCol(hstmt,86, SQL_C_CHAR,hee_job_code,           (SDWORD)sizeof(hee_job_code), &ind1);

      for (i=0;i<TOTAL_FML;i++) /* Check for Errors */
      { 
      if ((rc1[i] != SQL_SUCCESS) && (rc1[i] != SQL_SUCCESS_WITH_INFO))
        {
          fn_userlog(c_ServiceName,"Failure in binding " );
          SQLFreeStmt(hstmt, SQL_DROP); 
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /*** Ver 1.4 ***/
          return(-1);
        }
      }

  while (1)
  {
    rc = SQLFetch(hstmt);

    if (rc == SQL_NO_DATA_FOUND)
    {
      fn_userlog (c_ServiceName, "SQL_NO_DATA_FOUND...." );
      fn_userlog(c_ServiceName,"End of Data encountered" );
      break;
    }

    if ((rc != SQL_SUCCESS) && (rc != SQL_SUCCESS_WITH_INFO))
    {
      fn_userlog(c_ServiceName,"SQLFetch Error Code %d encountered",rc );
      fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );  /**** Ver 1.4 ***/
      return (-1);     
    }

      fprintf (
        fpfile,
        "%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|\n",
        hee_emplid,
        hee_name_prefix,
        hee_first_name,
        hee_middle_name,
        hee_last_name,
        hee_name,
        hee_national_id,
        hee_passport_nbr,
        hee_birthdate,
        hee_hire_dt,
        hee_probation_dt,
        hee_rehire_dt,
        hee_termination_dt,
        hee_mar_status,
        hee_diagnosis_cd,
        hee_gpin_caste,
        hee_nationality,
        hee_birthcountry,
        hee_birthstate,
        hee_empl_status,
        hee_ici_emr_cnt_name1,
        hee_ici_emr_cnt_name2,
        hee_ici_emr_cnt_phone1,
        hee_ici_emr_cnt_phone2,
        hee_blood_type,
        hee_sex,
        hee_height,
        hee_weight,
        hee_smoker,
        hee_ici_id_mark1,
        hee_ici_id_mark2,
        hee_tree_node_start,
        hee_ici_dept_descr,
        hee_position_nbr,
        hee_ici_posn_descr,
        hee_descr2,
        hee_grade,
        hee_ici_sal_lng_descr,
        hee_ici_sal_shrt_descr,
        hee_jobtitle,
        hee_supervisor_id,
        hee_email_addr,
        hee_address1,
        hee_address2,
        hee_address3,
        hee_city,
        hee_state,
        hee_country,
        hee_postal,
        hee_alter_emplid,
        hee_empl_ctg,
        hee_ici_acquistion_dt,
        hee_tree_node,
        hee_ici_maingrp_descr,
        hee_tcd_node_id,
        hee_ici_subgrp_descr,
        hee_ici_cost_centr_cod,
        hee_ici_descr1,
        hee_ici_tree_node_loc,
        hee_ici_locnzone_descr,
        hee_noticeperiod,
        hee_descr10,
        hee_ici_confirm_status,
        hee_ici_rip_status,
        hee_ici_rsgn_dt,
        hee_ici_mngr_name,
        hee_ici_ermgr_emplid,
        hee_ici_ermngr_name,
        hee_location,
        hee_ici_locn_descr,
        hee_ici_office_city,
        hee_ici_office_state,
        hee_ici_branch_flag,
        hee_ici_treenodstrt_tr,
        hee_ici_tree_node_tr,
        hee_ici_tcd_node_id_tr,
        hee_ici_actual_trns_dt,
        hee_ici_resignation_dt,
        hee_ici_rsgn_apprvd_dt,
        hee_last_date_worked,
        hee_withdraw_date,
        hee_ici_clearance_flag,
        hee_religion_cd,
        hee_empl_class,
        hee_updated_datetime,
        hee_job_code
      );

      /*Terminating the dates so that Oracle does not have format conversion issues*/

      hee_birthdate[19]='\0';
      hee_hire_dt[19]='\0';
      hee_probation_dt[19]='\0';
      hee_rehire_dt[19]='\0';
      hee_termination_dt[19]='\0';
      hee_ici_acquistion_dt[19]='\0';
      hee_ici_actual_trns_dt[19]='\0';
      hee_ici_resignation_dt[19]='\0';
      hee_ici_rsgn_apprvd_dt[19]='\0';
      hee_last_date_worked[19]='\0';
      hee_withdraw_date[19]='\0';
      hee_updated_datetime[19]='\0';
      hee_ici_rsgn_dt[19]='\0';

      counter++;

      DEFLOG3   fn_userlog(c_ServiceName,"[%ld]", counter);
      DEFLOG4  fn_userlog(c_ServiceName,"[%ld] - %s %s ", counter, hee_emplid,hee_name); 
      DEFLOG5
      fn_userlog(c_ServiceName," Names [%ld]-|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",counter,
              hee_emplid,
              hee_name_prefix,
              hee_first_name,
              hee_middle_name,
              hee_last_name,
              hee_name,
              hee_national_id,
              hee_passport_nbr,
              hee_birthdate,
              hee_hire_dt,
              hee_probation_dt
            );

      DEFLOG5
      fn_userlog(c_ServiceName,"\n  Dates ----|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",       
        hee_birthdate,
        hee_hire_dt,
        hee_probation_dt,
        hee_rehire_dt,
        hee_termination_dt,
        hee_ici_acquistion_dt,
        hee_ici_actual_trns_dt,
        hee_ici_resignation_dt,
        hee_ici_rsgn_apprvd_dt,
        hee_last_date_worked,
        hee_withdraw_date,
        hee_updated_datetime,
        hee_ici_rsgn_dt);

      DEFLOG4 fn_userlog(c_ServiceName,"*********** BEFORE SQLCODE : %d ", SQLCODE);

      EXEC SQL
      INSERT INTO HEE_HR_EMP_EXTRCT 
      VALUES
      (
        :hee_emplid,
        :hee_name_prefix,
        :hee_first_name,
        :hee_middle_name,
        :hee_last_name,
        :hee_name,
        :hee_national_id,
        :hee_passport_nbr,
        decode (:hee_birthdate,'0',NULL,to_date(:hee_birthdate,'YYYY-MM-DD HH24:MI:SS') ) ,
        decode (:hee_hire_dt,'0',NULL,to_date(:hee_hire_dt,'YYYY-MM-DD HH24:MI:SS')) ,
        decode (:hee_probation_dt,'0',NULL,to_date(:hee_probation_dt,'YYYY-MM-DD HH24:MI:SS')) ,
        decode (:hee_rehire_dt,'0',NULL,to_date(:hee_rehire_dt,'YYYY-MM-DD HH24:MI:SS')) ,
        decode (:hee_termination_dt,'0',NULL,to_date(:hee_termination_dt,'YYYY-MM-DD HH24:MI:SS')) ,
        :hee_mar_status,
        :hee_diagnosis_cd,
        :hee_gpin_caste,
        :hee_nationality,
        :hee_birthcountry,
        :hee_birthstate,
        :hee_empl_status,
        :hee_ici_emr_cnt_name1,
        :hee_ici_emr_cnt_name2,
        :hee_ici_emr_cnt_phone1,
        :hee_ici_emr_cnt_phone2,
        :hee_blood_type,
        :hee_sex,
        :hee_height,
        :hee_weight,
        :hee_smoker,
        :hee_ici_id_mark1,
        :hee_ici_id_mark2,
        :hee_tree_node_start,
        :hee_ici_dept_descr,
        :hee_position_nbr,
        :hee_ici_posn_descr,
        :hee_descr2,
        :hee_grade,
        :hee_ici_sal_lng_descr,
        :hee_ici_sal_shrt_descr,
        :hee_jobtitle,
        :hee_supervisor_id,
        :hee_email_addr,
        :hee_address1,
        :hee_address2,
        :hee_address3,
        :hee_city,
        :hee_state,
        :hee_country,
        :hee_postal,
        :hee_alter_emplid,
        :hee_empl_ctg,
        decode ( :hee_ici_acquistion_dt,'0',NULL, to_date(:hee_ici_acquistion_dt,'YYYY-MM-DD HH24:MI:SS') ),
        :hee_tree_node,
        :hee_ici_maingrp_descr,
        :hee_tcd_node_id,
        :hee_ici_subgrp_descr,
        :hee_ici_cost_centr_cod,
        :hee_ici_descr1,
        :hee_ici_tree_node_loc,
        :hee_ici_locnzone_descr,
        :hee_noticeperiod,
        :hee_descr10,
        :hee_ici_confirm_status,
        :hee_ici_rip_status,
        /**decode (:hee_ici_rsgn_dt, '0',NULL,to_date(:hee_ici_actual_trns_dt,'YYYY-MM-DD HH24:MI:SS')), 1.4 **/
        decode (:hee_ici_rsgn_dt, '0',NULL,to_date(:hee_ici_rsgn_dt,'YYYY-MM-DD HH24:MI:SS')), /** 1.4 adds**/
        :hee_ici_mngr_name,
        :hee_ici_ermgr_emplid,
        :hee_ici_ermngr_name,
        :hee_location,
        :hee_ici_locn_descr,
        :hee_ici_office_city,
        :hee_ici_office_state,
        :hee_ici_branch_flag,
        :hee_ici_treenodstrt_tr,
        :hee_ici_tree_node_tr,
        :hee_ici_tcd_node_id_tr,
        decode (:hee_ici_actual_trns_dt, '0',NULL,to_date(:hee_ici_actual_trns_dt,'YYYY-MM-DD HH24:MI:SS')),
        decode (:hee_ici_resignation_dt, '0',NULL,to_date(:hee_ici_resignation_dt,'YYYY-MM-DD HH24:MI:SS')),
        decode (:hee_ici_rsgn_apprvd_dt, '0',NULL,to_date(:hee_ici_rsgn_apprvd_dt,'YYYY-MM-DD HH24:MI:SS')),
        decode (:hee_last_date_worked, '0',NULL,to_date(:hee_last_date_worked,'YYYY-MM-DD HH24:MI:SS')),
        decode (:hee_withdraw_date, '0',NULL,to_date(:hee_withdraw_date,'YYYY-MM-DD HH24:MI:SS')),
        :hee_ici_clearance_flag,
        :hee_religion_cd,
        :hee_empl_class,
        decode (:hee_updated_datetime, '0',NULL,to_date(:hee_updated_datetime,'YYYY-MM-DD HH24:MI:SS') ),
        :hee_job_code,
        'N',
        'N',
        'Fresh Record',
        'ICICI BANK',
        'N',       /*** Ver 1.6 ***/
        '000000', /*** Ver 1.6 *** Junk value **/
        'N',       /*** Ver 1.6 ***/
        '',   /*** Ver 3.0 Starts Here **/
        '',
        '',
        '',
        '',
        '',
        '',
        '',   /*** Ver 3.0 Ends Here **/
				'',		/*** Ver 3.1 **/
				'',		/*** Ver 3.1 **/
        null, /** Ver 3.8 **/
        ''    /*** Ver 4.0 **/
      );

      DEFLOG4     fn_userlog(c_ServiceName,"---------- AFTER SQLCODE : %d ", SQLCODE);
        
      if ( SQLCODE != 0 )
      {
        fn_errlog(c_ServiceName, "S31155", SQLMSG, c_errmsg );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );   /**** Ver 1.4 ****/
        return (-1);
      }
 
      /*******************************************************************************/
      
      /*need to add code here that will update ITE with updated employee data*/
      /*This means that we can have one record updated incase of an error in nect record*/
      
                              /*Done below as a bulk insert*/ 
      
      /******************************************************************************/

  } /* End of while */
  
   fclose(fpfile);
	 fn_userlog(c_ServiceName,"File closed");
   if ( fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg ) == -1 )
    {
      fn_errlog ( c_ServiceName, "S31160", SQLMSG, c_errmsg);
      return (-1);
    }

  DEFLOG3 fn_userlog(c_ServiceName," ----Function  en_download_bank_data Completed---- ");
	/*tpsvrdone();				*** Ver 2.1 **/
  return (0);

}/** End of fn_fetch_bank_data **/

/******************************************************************************************/
/***************************** Fetch Isec Employee Data ***********************************/
/******************************************************************************************/

int fn_download_isec_data(int i)     /**** Ver 1.1  starts***/  
{
  char c_source[10+1];
  char c_err_msg[150];
  int i_ret_cd;
  
  MEMSET(c_source);
  MEMSET(c_err_msg);
  
 /**  DEFLOG3 fn_userlog(c_ServiceName," ****** Inside fn_download_isec_data Function ****** "); ** Ver 2.0 **/
  DEFLOG3 fn_userlog(c_ServiceName," %s EMP DATA DOWNLOAD Starts ...",var_st_iom_mstr[i].iom_org_cd); /** Ver 2.0 **/ 
  
  /** Ver 2.0 Starts Here ****/
   
  strcpy(c_source,var_st_iom_mstr[i].iom_org_cd);
 
  if( strcmp(var_st_iom_mstr[i].iom_org_cd,"ISEC") == 0 )
  {
   strcpy(c_hee_source,"ICICI SECURITIES");
  }
  else if( strcmp(var_st_iom_mstr[i].iom_org_cd,"IPRD") == 0 )
  {
   strcpy(c_hee_source,"ICICI PRUDENTIAL");
  }
  else if( strcmp(var_st_iom_mstr[i].iom_org_cd,"IVEN") == 0 )  /** Added in Ver 4.4 **/
  {
   strcpy(c_hee_source,"ICICI VENTURE");
  }
  else
  {
   fn_userlog(c_ServiceName," Invalid Organization code");
   return -1;
  }

  /** Existing service call is removed and stored proc is written ****/ 
  /** to download the data from different organization            ****/ 

  i_g_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_g_trnsctn == -1 )
  {
   fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
   fn_errlog ( c_ServiceName, "S31165", TPMSG, c_errmsg );
   return(-1);
  } 

  EXEC SQL
     DELETE FROM HEE_HR_EMP_EXTRCT_TEMP WHERE HEE_SOURCE= :c_hee_source;
  if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
   fn_errlog(c_ServiceName, "S31170", SQLMSG, c_errmsg );
   fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); 
   return (-1);
  }
  DEFLOG3 fn_userlog (c_ServiceName,"%s: Deleted from HEE TEMP :%d: ", var_st_iom_mstr[i].iom_org_cd,SQL_ROW_COUNT );

  EXEC SQL
       INSERT INTO HEE_HR_EMP_EXTRCT_TEMP( SELECT * FROM HEE_HR_EMP_EXTRCT WHERE HEE_SOURCE = :c_hee_source);  

  if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
   fn_errlog(c_ServiceName, "S31175", SQLMSG, c_errmsg );
   fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
   return (-1);
  }
  DEFLOG3 fn_userlog (c_ServiceName,"%s Inserted into HEE TEMP :%d: ", var_st_iom_mstr[i].iom_org_cd,SQL_ROW_COUNT );

  EXEC SQL
      DELETE FROM HEE_HR_EMP_EXTRCT where HEE_SOURCE = :c_hee_source;

  if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
   fn_errlog(c_ServiceName, "S31180", SQLMSG, c_errmsg );
   fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
   return (-1);
  }

  DEFLOG3 fn_userlog (c_ServiceName,"%s Deleted from HEE :%d: ", var_st_iom_mstr[i].iom_org_cd,SQL_ROW_COUNT );

  if ( fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg ) == -1 )
  {
   fn_errlog ( c_ServiceName, "S31185", SQLMSG, c_errmsg);
   fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
   return (-1);
  }

  EXEC SQL
          EXECUTE
            BEGIN
             ORGNZN_EMPDATA_DWNLD
             (
              :c_source,
              :c_err_msg,
              :i_ret_cd
             );
  END;
  END-EXEC;

  if( i_ret_cd == -1 )
  {
   fn_errlog(c_ServiceName, "S31190", SQLMSG, c_errmsg );
   fn_userlog(c_ServiceName," Stored Proc Error Msg :%s:",c_err_msg);
   /*** Ver 2.9 Starts here ***/
   i_ret_cd=0;
   i_ret_cd = fn_rvrt_data_tmptomaintab(c_hee_source);
   if(i_ret_cd != 0 )
   {
     fn_userlog(c_ServiceName,"Failed in data transfer from TEMP to Main Table, Pls check"); 
   } 
   /*** ver 2.9 Ends here ****/
   return (-1);
  }     

  /*** Ver 2.0 Starts Here *****/

  /**** Commented in Ver 2.0 Starts Here ***
  ********Service SFO_RD_ISEC, connect to remote database, fetch the data************
  ********* and write it to file at the same time it adds data in buffer.************
  ****************** Finally it returns the fielded buffer *************************

  ptr_fml_Sbuf = (FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);
  if (ptr_fml_Sbuf == NULL)
  {
  fn_errlog( c_ServiceName, "S31195", TPMSG, c_errmsg );
  tpfree ( ( char * ) ptr_fml_Sbuf );
  return (-1);
  }

  ptr_fml_Rbuf = (FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);
  if (ptr_fml_Rbuf == NULL)
  {
  fn_errlog( c_ServiceName, "S31200", TPMSG, c_errmsg );
  tpfree ( ( char * ) ptr_fml_Rbuf );
  return (-1);
  }
  *** Ver 1.2 starts ***
  EXEC SQL
      select to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')
      into :c_hee_upd_dt
      from dual;

  if ( SQLCODE != 0 )
  {
    fn_errlog(c_ServiceName, "S31205", SQLMSG, c_errmsg );
    tpfree ( ( char * ) ptr_fml_Rbuf );
    tpfree ( ( char * ) ptr_fml_Sbuf );
    return (-1);
  }
  *** Ver 1.2 Ends ***

  if (tpcall("SFO_RD_ISEC", (char *)ptr_fml_Sbuf, 0, (char **)&ptr_fml_Rbuf, &li_len_Obuf, TPNOTRAN | TPNOTIME )== -1 ) 
   {
         if ( tperrno != TPESVCFAIL )
         {
          fn_errlog( c_ServiceName, "S31210", TPMSG, c_errmsg );
         }
         else
         {
          Fget32(ptr_fml_Rbuf, FFO_ERR_MSG, 0, (char *)c_errmsg, 0);
         }
         tpfree ( ( char * ) ptr_fml_Sbuf );
         tpfree ( ( char * ) ptr_fml_Rbuf );
         return (-1);
   }
 
   tot_rcrds=  fn_reccnt_rs(ptr_fml_Rbuf,
                           c_ServiceName,
                              c_errmsg,
                              FML_USR_ID);

      if ( tot_rcrds == -1 )
      {
          fn_errlog( c_ServiceName, "S31215", LIBMSG, c_errmsg );
          fn_dstry_rs ( ptr_fml_Rbuf );
         return(-1); 
      } 
      
      DEFLOG3 fn_userlog(c_ServiceName," Total Records in FML Buffer = %ld ",tot_rcrds); 
      
       i_g_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
      if ( i_g_trnsctn == -1 )
      {
          fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
          fn_errlog ( c_ServiceName, "S31220", TPMSG, c_errmsg );
          return(-1);
      }
      
      EXEC SQL
      DELETE FROM HEE_HR_EMP_EXTRCT where HEE_SOURCE='ICICI SECURITIES'; 
       
      if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
      {
       fn_errlog(c_ServiceName, "S31225", SQLMSG, c_errmsg );
       fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); *** Ver 1.4 ***
       return (-1);
      }
     
     DEFLOG3 fn_userlog(c_ServiceName,"*********Previous Data Deleted From Table HEE ****** "); 
     for(r_cnt = 1 ; r_cnt <= tot_rcrds ; r_cnt++)
      {
        memset(hee_emp_id,'\0',sizeof(hee_emp_id));
        memset(hee_nm_prefix,'\0',sizeof(hee_nm_prefix));
        memset(hee_fst_nm,'\0',sizeof(hee_fst_nm));
        memset(hee_lst_nm,'\0',sizeof(hee_lst_nm));
        memset(hee_mdl_nm,'\0',sizeof(hee_mdl_nm));
        memset(hee_emp_knw,'\0',sizeof(hee_emp_knw));
        memset(hee_pancard_no,'\0',sizeof(hee_pancard_no));
        memset(hee_passport_no,'\0',sizeof(hee_passport_no));
        memset(hee_birth_dt,'\0',sizeof(hee_birth_dt));
        memset(hee_emp_stts,'\0',sizeof(hee_emp_stts));
        memset(hee_jobtitle,'\0',sizeof(hee_jobtitle));
        memset(hee_email_addr,'\0',sizeof(hee_email_addr));
        memset(hee_address1,'\0',sizeof(hee_address1));
        memset(hee_address2,'\0',sizeof(hee_address2));
        memset(hee_address3,'\0',sizeof(hee_address3));
        memset(hee_city,'\0',sizeof(hee_city));
        memset(hee_state,'\0',sizeof(hee_state));
        memset(hee_country,'\0',sizeof(hee_country));
        memset(hee_postal,'\0',sizeof(hee_postal));
        memset(hee_loc_code,'\0',sizeof(hee_loc_code));
        memset(hee_location,'\0',sizeof(hee_location));
        memset(hee_office_city,'\0',sizeof(hee_office_city));
        memset(hee_office_state,'\0',sizeof(hee_office_state)); 
         
        i_rd_val = fn_getnxt_rs ( ptr_fml_Rbuf,
                                   c_ServiceName,
                                   c_errmsg, 
                                   23,
                                   FML_USR_ID,(char *)hee_emp_id,NULL,
                                   FML_USR_USR_NM,(char *)hee_nm_prefix,NULL,
                                   FML_USR_FRST_NM , (char *)hee_fst_nm,NULL,
                                   FML_USR_MDDL_NM, (char *)hee_mdl_nm,NULL,
                                   FML_USR_LST_NM , (char * )hee_lst_nm,NULL,
                                   FML_SUP_USR_TYP,(char *)hee_emp_knw,NULL,
                                   FML_MATCH_ACCOUNT_NO,(char *)hee_pancard_no,NULL,
                                   FML_PASSPORT_NO,(char *)hee_passport_no,NULL,
                                   FML_USR_DT_BRTH,(char *)hee_birth_dt,NULL,
                                   FML_ND_STATUS,(char *)hee_emp_stts,NULL,
                                   FML_CLIENT_TITLE,(char *)hee_jobtitle,NULL,
                                   FML_USR_EMAIL_ADDRSS,(char *)hee_email_addr,NULL,
                                   FML_USR_ADDRSS_LN1,(char *)hee_address1,NULL,
                                   FML_USR_ADDRSS_LN2,(char *)hee_address2,NULL,
                                   FML_USR_ADDRSS_LN3,(char *)hee_address3,NULL,
                                   FML_USR_ADDRSS_CTY,(char *)hee_city,NULL,
                                   FML_USR_ADDRSS_STTE,(char *)hee_state,NULL,
                                   FML_USR_ADDRSS_CNTRY,(char *)hee_country,NULL,
                                   FML_USR_ZIP_CD2,(char *)hee_postal,NULL,
                                   FML_PRTC_CD,(char *)hee_loc_code,NULL,
                                   FML_USR_ADDRSS2_LN1,(char *)hee_location,NULL,
                                   FML_USR_ADDRSS2_CTY,(char *)hee_office_city,NULL,
                                   FML_USR_ADDRSS2_STTE,(char *)hee_office_state,NULL); 
     

       if(i_rd_val != 0)
       {
            fn_errlog( c_ServiceName, "S31230", LIBMSG, c_errmsg ); 
            fn_dstry_rs ( ptr_fml_Rbuf );
            fn_userlog(c_ServiceName,"System Error , Contact System Support ");
            fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); *** Ver 1.4 ***
            return (-1);
       }

	 DEFLOG3   fn_userlog(c_ServiceName,"Emp_id          =|%s|",hee_emp_id);
	 DEFLOG3   fn_userlog(c_ServiceName,"Emp_PreFix      =|%s|",hee_nm_prefix);
	 DEFLOG3   fn_userlog(c_ServiceName,"Emp First Name  =|%s|",hee_fst_nm);
 
   EXEC SQL
      INSERT INTO HEE_HR_EMP_EXTRCT
      VALUES
      (
       :hee_emp_id,
       :hee_nm_prefix,
       :hee_fst_nm,
       :hee_mdl_nm,
       :hee_lst_nm,
       :hee_emp_knw,
       :hee_pancard_no, 
       :hee_passport_no,
       decode(:hee_birth_dt,'1-Jan-1800','1-Jan-1800',:hee_birth_dt),
       to_date('01-Jan-1800','DD-MM-YYYY HH24:MI:SS'),
       to_date('01-Jan-1800','DD-MM-YYYY HH24:MI:SS'),
       to_date('01-Jan-1800','DD-MM-YYYY HH24:MI:SS'),
       to_date('01-Jan-1800','DD-MM-YYYY HH24:MI:SS'),
       'NA',
       'NA',
       'NA',
       'NA',
       'NA',
       'NA',
       decode(:hee_emp_stts,'B','NA',:hee_emp_stts),
       'NA',
       'NA',
       'NA',
       'NA',
       'NA', 
       'NA',
       0,
       0,
       'NA',
       'NA',
       'NA',
       'NA',
       'NA',
       'NA',
       'NA',
       'NA',
       'NA',
       'NA',
       'NA',
       :hee_jobtitle,
       'NA',
       :hee_email_addr,
       :hee_address1,
       :hee_address2,
       :hee_address3,
       :hee_city,
       :hee_state,
       :hee_country,
       :hee_postal,
       'NA',
       'NA',
       to_date('01-Jan-1800','DD-MM-YYYY HH24:MI:SS'), 
       'NA',
       'NA',
       'NA',
       'NA',
       'NA',
       'NA',
       'NA',
       'NA',
       0,
       'NA',
       'NA',
       'NA',
       to_date('01-Jan-1800','DD-MM-YYYY HH24:MI:SS'), 
       'NA',
       'NA',
       'NA',
       :hee_location,
       :hee_loc_code,
       :hee_office_city,
       :hee_office_state,
       'NA',
       'NA',
       'NA',
       'NA',
       to_date('01-Jan-1800','DD-MM-YYYY HH24:MI:SS'),
       to_date('01-Jan-1800','DD-MM-YYYY HH24:MI:SS'),
       to_date('01-Jan-1800','DD-MM-YYYY HH24:MI:SS'),
       to_date('01-Jan-1800','DD-MM-YYYY HH24:MI:SS'),
       to_date('01-Jan-1800','DD-MM-YYYY HH24:MI:SS'), 
       'NA',
       'NA',
       'NA',
       to_date(:c_hee_upd_dt,'YYYY-MM-DD HH24:MI:SS'),
       '',
       '',
       '',
       '',  
       'ICICI SECURITIES', 
       'N',       *** Ver 1.6 ***
       '000000', *** Ver 1.6 *** Junk value **
       'N'       *** Ver 1.6 ***
       );
       
     
      if ( SQLCODE != 0 )
      {
        fn_errlog(c_ServiceName,"S31235", SQLMSG, c_errmsg );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); *** Ver 1.4 ***
        return (-1);
      }
        
     DEFLOG3 fn_userlog(c_ServiceName,"---------------Record Inserted = %ld",r_cnt); 

    }*End of For Loop *


    if ( fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg ) == -1 )
    {
      fn_errlog ( c_ServiceName, "S31240", SQLMSG, c_errmsg);
      fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
      return (-1);
    }  
    
    DEFLOG3 fn_userlog(c_ServiceName,"--------Function fn_download_isec_data Completed--------");
    *** Ver 2.0 Ends Here *****/

   DEFLOG3 fn_userlog(c_ServiceName," %s EMP DATA DOWNLOAD COMPLETE."); /** Ver 2.0 **/  

  return (0); 

} /** End of fn_fetch_isec_data **/ /*** Ver 1.1 Ends ***/

/******************************************************************************************/
/************** Find out New and Resigned Bank Customers and  apply the scheme **************/
/******************************************************************************************/

int fn_apply_bankemp_scheme(int i)
{
  EXEC SQL BEGIN DECLARE SECTION;
  long  l_l_inner_counter=0;
  long  l_l_record_count=0;
  long  l_l_new_emp_count=0;
  long  l_l_rgn_emp_count=0;
  long  l_match_id_cnt=0;            /** Ver 1.2 **/
  char  c_l_mtch_acnt_id[11]={'\0'};
  char  c_l_empl_id[34]={'\0'};
  char  c_l_serial_no[11]={'\0'};
  char  c_iai_match_type[51]={'\0'};
  char  c_l_emp_pan_no[11]={'\0'};    /** Ver 1.2 ***/
  int i_exist_count;  /*** Ver 1.5 **/
  char  c_hee_source[50];  /** ver 2.1 **/
  char  c_orgzn_cd[10+1];    /** ver 2.1 **/
  char  c_account_stts;  /** Ver 2.4 **/
  
  typedef struct ___list
  {
    char mtch_id[11];
    char empl_id[34];
    char empl_pan_no[11];        /*** Ver 1.2 ***/
  } st_emp_list;
  
  st_emp_list * ptr_emp_list = NULL;  
  sql_cursor  sys_cursor_sel;        /** Ver 2.2 **/ 
  
  EXEC SQL   END DECLARE SECTION;
  MEMSET(c_hee_source) ; /** ver 2.1 **/ 


  DEFLOG3 fn_userlog(c_ServiceName," Inside fn_apply_bankemp_scheme Function------"); 
  strcpy(c_l_new_emp_eq_scheme, var_st_iom_mstr[i].iom_eq_scheme_cd);
  strcpy(c_l_new_emp_fo_scheme, var_st_iom_mstr[i].iom_fno_scheme_cd);
  strcpy(c_l_rsgn_emp_eq_scheme, var_st_iom_mstr[i].iom_eq_rsgn_scheme_cd);
  strcpy(c_l_rsgn_emp_fo_scheme, var_st_iom_mstr[i].iom_fno_rsgn_scheme_cd);
  

  trim(c_l_new_emp_eq_scheme);
  trim(c_l_new_emp_fo_scheme);
  trim(c_l_rsgn_emp_eq_scheme);
  trim(c_l_rsgn_emp_fo_scheme);

 	/** ver 1.9 starts **/ 

	strcpy(c_l_new_emp_cdx_scheme,var_st_iom_mstr[i].iom_cdx_scheme_cd);
	strcpy(c_l_new_emp_mf_permnt_comm_cd, var_st_iom_mstr[i].iom_mf_permnt_comm_cd);
	strcpy(c_l_new_emp_mf_curr_comm_cd, var_st_iom_mstr[i].iom_mf_curr_comm_cd);
	strcpy(c_l_new_emp_mf_validity_flg ,var_st_iom_mstr[i].iom_mf_validity_flg); 
	strcpy(c_l_rsgn_emp_cdx_scheme, var_st_iom_mstr[i].iom_cdx_resign_scheme_cd);
	strcpy(c_l_rsgn_emp_mf_prmnt_com_cd, var_st_iom_mstr[i].iom_mf_resign_permnt_comm_cd);
	strcpy(c_l_rsgn_emp_mf_curr_comm_cd, var_st_iom_mstr[i].iom_mf_resign_curr_comm_cd);
	strcpy(c_l_rsgn_emp_mf_validity_flg, var_st_iom_mstr[i].iom_mf_resign_validity_flg);
	trim(c_l_new_emp_cdx_scheme);
	trim(c_l_new_emp_mf_permnt_comm_cd);
	trim(c_l_new_emp_mf_curr_comm_cd);
	trim(c_l_new_emp_mf_validity_flg);
	trim(c_l_rsgn_emp_cdx_scheme);
	trim(c_l_rsgn_emp_mf_prmnt_com_cd);
	trim(c_l_rsgn_emp_mf_curr_comm_cd);
	trim(c_l_rsgn_emp_mf_validity_flg);

  DEFLOG3 fn_userlog(c_ServiceName," NEW_CDX |%s|  ",c_l_new_emp_cdx_scheme );
  DEFLOG3 fn_userlog(c_ServiceName," RES_CDX |%s|  ",c_l_rsgn_emp_cdx_scheme );
  DEFLOG3 fn_userlog(c_ServiceName," NEW_MF_PRMNT_COMM |%s|  ",c_l_new_emp_mf_permnt_comm_cd );
  DEFLOG3 fn_userlog(c_ServiceName," NEW_MF_CURR_COMM |%s|  ",c_l_new_emp_mf_curr_comm_cd );
  DEFLOG3 fn_userlog(c_ServiceName," NEW_MF_VALD_FLAG |%s|  ",c_l_new_emp_mf_validity_flg );
  DEFLOG3 fn_userlog(c_ServiceName," RES_MF_PRMNT_COMM |%s|  ",c_l_rsgn_emp_mf_prmnt_com_cd );
  DEFLOG3 fn_userlog(c_ServiceName," RES_MF_CURR_COMM |%s|  ",c_l_rsgn_emp_mf_curr_comm_cd );
  DEFLOG3 fn_userlog(c_ServiceName," RES_MF_VALD_FLAG |%s|  ",c_l_rsgn_emp_mf_validity_flg );

 	/** ver 1.9 Ends **/
 
  DEFLOG3 fn_userlog(c_ServiceName," NEW_EQ |%s| NEW_FO |%s| ",c_l_new_emp_eq_scheme ,c_l_new_emp_fo_scheme );
  DEFLOG3 fn_userlog(c_ServiceName," RES_EQ |%s| RES_FO |%s| ",c_l_rsgn_emp_eq_scheme , c_l_rsgn_emp_fo_scheme );
	/** Ver 2.1 starts **/
  MEMSET(c_orgzn_cd); 
  strcpy( c_orgzn_cd, var_st_iom_mstr[i].iom_org_cd);
  if(strcmp(var_st_iom_mstr[i].iom_org_cd,"BANK") == 0) 
  {
   	strcpy(c_hee_source,"ICICI BANK");  
	}
	else if(strcmp(var_st_iom_mstr[i].iom_org_cd,"ILOM") == 0 )
	{
		strcpy(c_hee_source,"ICICI LOMBARD");
	}
	else if(strcmp(var_st_iom_mstr[i].iom_org_cd,"PAMC") == 0 )/** Ver 2.2  else if added **/
	{
		strcpy(c_hee_source,"ICICI PRUDAMC");
	}
	fn_userlog(c_ServiceName,"c_hee_source for select emp count is :%s:",c_hee_source);
	/** Ver 2.1 Ends  **/

  EXEC SQL
    SELECT
      COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
    INTO :l_l_new_emp_count
    FROM
      HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts 
    WHERE                                                        
      HEE_NATIONAL_ID   = ICD_PAN_NO
      AND HEE_NATIONAL_ID  !='NA'           /*** Ver 1.5 ***/ 
      AND ICD_SERIAL_NO = IAI_SERIAL_NO
      AND HEE_EMPL_STATUS IN ( 'A' , 'L' )  /* A -ACTIVE L -LONG LEAVE */
      /*AND HEE_SOURCE = 'ICICI BANK'         *** Ver 1.2 *** ** Ver 2.1 comment **/
      AND HEE_SOURCE = :c_hee_source         /*** Ver 2.1 ***/
      AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT /** Ver 1.2 **/ 
      AND UAC_ACT_DEACT_FLG <> 'S'         /** Ver 1.2 **/        
      AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H') /** Ver 1.2 **/
      AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/ 
      AND IAI_MATCH_ACCOUNT_NO NOT IN
        (SELECT NVL(ITE_MTCH_ACCNT,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd );
         /*** Ver 2.3 NVL(ITE_MTCH_ACCNT,'NA') added*/

  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
  {
    fn_errlog ( c_ServiceName, "S31245", SQLMSG, c_errmsg  );
    fn_userlog(c_ServiceName,c_errmsg);
    return (-1);
  }
  
  fn_userlog(c_ServiceName," New Emp Count %ld ",l_l_new_emp_count );
  
  if (l_l_new_emp_count > 0)
  {
    /*Allocate*/
    ptr_emp_list=calloc(sizeof(st_emp_list),l_l_new_emp_count );
    
    if (ptr_emp_list == NULL )
    {
      fn_errlog ( c_ServiceName, "S31250", SQLMSG, c_errmsg  );
      fn_userlog(c_ServiceName,"Unable to create NEW Emp list ");
      return (-1);    
    }
  
    EXEC SQL
      DECLARE EMP_LIST CURSOR FOR
      SELECT DISTINCT
        IAI_MATCH_ACCOUNT_NO, HEE_EMPLID,HEE_NATIONAL_ID         /*** Ver 1.2 *** selected ICD_PAN_NO ***/
      FROM
        HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
      WHERE
        HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA'             /*** Ver 1.5 ***/
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS IN ( 'A' , 'L' )  /* A -ACTIVE L -LONG LEAVE */
        /*AND HEE_SOURCE = 'ICICI BANK'         *** Ver 1.2 *** *** ver 2.1 **/
        AND HEE_SOURCE = :c_hee_source        /*** Ver 2.1 ***/
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT  /*** Ver 1.2 ***/
        AND UAC_ACT_DEACT_FLG <> 'S'                   /*** Ver 1.2 ***/
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')     /*** Ver 1.2 ***/
        AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
        AND IAI_MATCH_ACCOUNT_NO NOT IN
          (SELECT NVL(ITE_MTCH_ACCNT,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd);
               /*** Ver 2.3 NVL(ITE_MTCH_ACCNT,'NA') added*/ 
    EXEC SQL OPEN EMP_LIST;
  
    if ( SQLCODE != 0 )
    {
      fn_errlog ( c_ServiceName, "S31255", SQLMSG, c_errmsg  );
      sprintf(c_errmsg,"Fetching failed with  :%s  ",sqlca.sqlerrm.sqlerrmc);
      fn_userlog(c_ServiceName,c_errmsg);
      return (-1);
    }
    
    /*Load*/
    EXEC SQL
      FOR :l_l_new_emp_count
    FETCH EMP_LIST
    INTO :ptr_emp_list;
  
    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
      fn_errlog ( c_ServiceName, "S31260", SQLMSG, c_errmsg  );
      return (-2);
    }
  
    EXEC SQL CLOSE EMP_LIST;
    
    DEFLOG3 fn_print_date_time();
    
    for(l_l_inner_counter=0;l_l_inner_counter < l_l_new_emp_count ; l_l_inner_counter++) 
    {

        strcpy(c_l_mtch_acnt_id,ptr_emp_list[l_l_inner_counter].mtch_id );
        strcpy(c_l_empl_id,ptr_emp_list[l_l_inner_counter].empl_id );
        trim(c_l_empl_id);
        /******************** ver 2.3 Starts Here ********************************
				*** Condition To Skip NRI Customer changed and moved here In Ver 1.8 ****

				if ( (strncmp(c_l_mtch_acnt_id, "750", 3)  == 0 ) ||   
           	 (strncmp(c_l_mtch_acnt_id, "751", 3)  == 0 ) ||
             (strncmp(c_l_mtch_acnt_id, "650", 3)  == 0 ) ||
             (strncmp(c_l_mtch_acnt_id, "651", 3)  == 0 )
           )
        {
         	if(DEBUG_MSG_LVL_3)
         	{
           	fn_userlog(c_ServiceName,"Inside skip NRI Customer.");
						fn_userlog(c_ServiceName,"So Match id %s is skipped",c_l_mtch_acnt_id);
         	}
					
					continue;
        }

			 **** Ver 1.8 ends ****
       ************************** ver 2.3 Ends here ****************************/

        /*** Ver 1.2 Starts ***/
        l_match_id_cnt =0;
        strcpy(c_l_emp_pan_no,ptr_emp_list[l_l_inner_counter].empl_pan_no );
 
        /***  Commented in Ver 1.8 for skipping NRI moved above 
				EXEC SQL
          SELECT count(IAI_MATCH_ACCOUNT_NO)
            INTO :l_match_id_cnt
            FROM ICD_INFO_CLIENT_DTLS,IAI_INFO_ACCOUNT_INFO
           where ICD_SERIAL_NO = IAI_SERIAL_NO
             AND ICD_PAN_NO=:c_l_emp_pan_no;

        if ( SQLCODE != 0 )
        {
         fn_errlog ( c_ServiceName, "S31265", SQLMSG, c_errmsg  );
         return (-1); 
        } 

        if( l_match_id_cnt > 1 )
        {
         fn_errlog ( c_ServiceName, "S31270","Match count > 1 for one pan id ",c_errmsg  );
         fn_userlog(c_ServiceName,"PAN No %s has multiple Match account attached",c_l_emp_pan_no);
         fn_userlog(c_ServiceName," So Match id %s is skipped",c_l_mtch_acnt_id);
         continue;
        } 
				*** Ver 1.8 ** Comment Ends ****/

        /*** Ver 1.2 Ends ***/

        /**** Ver 1.8 ** Starts ***/

				MEMSET(c_l_mtch_acnt_no);   

        EXEC SQL
          SELECT IAI_MATCH_ACCOUNT_NO 
            INTO :c_l_mtch_acnt_no 
            FROM ICD_INFO_CLIENT_DTLS,IAI_INFO_ACCOUNT_INFO,UAC_USR_ACCNTS
           where ICD_SERIAL_NO = IAI_SERIAL_NO
             AND ICD_PAN_NO=:c_l_emp_pan_no
             AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT
             AND UAC_ACT_DEACT_FLG = 'S'
             AND IAI_MATCH_ACCOUNT_NO  IN
                 (SELECT distinct NVL(ITE_MTCH_ACCNT,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd)
             AND ROWNUM < 2;   /** Ver 2.3 * ROWNUM and NVL Added */

        if ( SQLCODE != 0  && SQLCODE != NO_DATA_FOUND )
        {
         fn_errlog ( c_ServiceName, "S31275", SQLMSG, c_errmsg  );
         return (-1);
        }
        
        if( SQLCODE != NO_DATA_FOUND )
        {
          /**** New Function Call Here ***/
          if( fn_chng_ite_match(c_l_mtch_acnt_no) == -1 )
          {
            fn_userlog (c_ServiceName,"Inside error condition of fn_chng_ite_match function");
            fn_errlog ( c_ServiceName, "S31280", "Inside error condition of fn_chng_ite_match function", c_errmsg  );
            return (-1);
          }

        }
				/*** Ver 1.8 *** Ends ***/

        DEFLOG5 fn_userlog(c_ServiceName,"******************* NEW EMP CALL ********************* " );
        DEFLOG4 fn_userlog(c_ServiceName," NEWEMP MTCH :|%s| EMID |%s|",c_l_mtch_acnt_id,c_l_empl_id);
  
        i_g_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
        if ( i_g_trnsctn == -1 )
        {
            fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
            fn_errlog ( c_ServiceName, "S31285", TPMSG, c_errmsg  );
            return (-1);
        }
        
        EXEC SQL
          SELECT IAI_SERIAL_NO, NVL(IAI_TYPE,'RI')
          INTO   :c_l_serial_no, :c_iai_match_type
          FROM
              IAI_INFO_ACCOUNT_INFO
          WHERE
              IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;
                
        if ( ( SQLCODE == TOO_MANY_ROWS_FETCHED ) || ( SQLCODE == NO_DATA_FOUND ) )
        {
          fn_errlog ( c_ServiceName, "S31290", SQLMSG, c_errmsg  );
          fn_userlog (c_ServiceName," Skipping :%s: No / Multiple entries in IAI",c_l_mtch_acnt_id);
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );  /**** Ver 1.4 ***/
          continue;  
        }
        
        if ( SQLCODE != 0 )
        {
          fn_errlog ( c_ServiceName, "S31295", SQLMSG, c_errmsg  );
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );  /**** Ver 1.4 ***/
          return (-1);
        }

        EXEC SQL EXECUTE
        BEGIN
           /*SP_INSD_INFO_NTST_SCHEME_DTLS */									/** Commented in Ver 1.7 **/
           SP_INSD_INFO_NTST_SCHEME_EBA													/** Added in Ver 1.7 **/
            (
              '',                                 
              :c_iai_match_type,  
              :c_l_new_emp_eq_scheme , /*Scheme Name to be inserted here */        
              :c_l_new_emp_fo_scheme , /*Scheme Name to be inserted here */      
              :c_ServiceName,                                    
              to_number(:c_l_serial_no),    
              :c_l_mtch_acnt_id,                                             
              '',             
              :c_ServiceName,             
              'E',
							'', 
              :c_l_new_emp_mf_permnt_comm_cd,								/** ver 1.9 null changed to value**/
              :c_l_new_emp_mf_curr_comm_cd,									/** ver 1.9 null changed to value**/
              :c_l_new_emp_mf_validity_flg,									/** ver 1.9 null changed to value**/
              '',            
              :c_l_success_flag,                                  
              :c_l_error_msg,
							:c_l_new_emp_cdx_scheme												/** ver 1.9 CDX scheme passed **/
            );
        END;
        END-EXEC;
  
        if ( SQLCODE != 0 )
        {
          fn_errlog ( c_ServiceName, "S31300", SQLMSG, c_errmsg  );
          fn_userlog(c_ServiceName,"Stored ProcError :%s:",c_l_error_msg);
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
          return (-1);
        }

      
      rtrim(c_l_error_msg);

      EXEC SQL
      UPDATE HEE_HR_EMP_EXTRCT
        SET 
        HEE_SCHM_CHANGED = :c_l_success_flag,
        HEE_ITE_INSERT   = 'Y',
        HEE_PRCS_COMMENT = 'NEW Employee. ICIS Msg:- '|| :c_l_error_msg ||
          TO_CHAR(SYSDATE,' DD-MON-YYYY HH24:MI:SS')
      WHERE 
        HEE_EMPLID  = :c_l_empl_id
			AND HEE_SOURCE =:c_hee_source;					/** ver 2.1 **/       
      
      if ( SQLCODE != 0 )
      {
        fn_errlog ( c_ServiceName, "S31305", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
        return (-1);
      }

      DEFLOG5 fn_userlog (c_ServiceName," NEMP HEE UPD %d ", SQL_ROW_COUNT );

      if (c_l_success_flag == 'N')
      {
          fn_userlog (c_ServiceName," ICIS Proc Call failed :%s: Skipping",c_l_mtch_acnt_id);
          fn_userlog (c_ServiceName," ICIS Msg :|%s:|",c_l_error_msg);
          fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg );
          continue;
      }
     /***** Ver 1.4 Commented 
      EXEC SQL
        INSERT INTO ITE_INSD_TRD_EMP_MSTR
        SELECT 
          IAI_MATCH_ACCOUNT_NO  , 
          HEE_EMPLID , 
          HEE_NAME ,
          HEE_NATIONAL_ID , 
          :var_st_iom_mstr[i].iom_org_cd,      *** Ver 1.2 ***
          'N' , 
          :c_ServiceName, 
          SYSDATE , NULL , NULL , NULL , NULL , :c_l_success_flag , :c_l_error_msg    
        FROM 
          HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO
        WHERE 
          HEE_NATIONAL_ID   = ICD_PAN_NO 
          AND ICD_SERIAL_NO = IAI_SERIAL_NO 
          AND HEE_EMPL_STATUS IN ( 'A' , 'L' )  * A -active L -long leave *
          AND IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;
     ****************** Ver 1.4 Comment end *****/
     /**** Ver 1.4 starts here ****/
       EXEC SQL
        INSERT INTO ITE_INSD_TRD_EMP_MSTR
                    (	ITE_MTCH_ACCNT,
											ITE_EMP_ID,
											ITE_EMP_NAME,
											ITE_PAN_NO,
											ITE_CMPY_ID,
											ITE_CTGRY_LVL,
											ITE_ENTERED_BY,
											ITE_ENTERED_DT,
											ITE_MODIFIED_BY,
											ITE_MODIFIED_DT,
											ITE_RELATION_CODE,
											ITE_RELATIVE_MTCH,
											ITE_ICIS_FLAG,
											ITE_ICIS_ERR_TEXT,
                      ITE_AUTHRZTN_FLG,           /*** Ver 2.3 ***/
                      ITE_AUTHRZTN_DT             /*** Ver 2.3 ***/
                    ) 
                    SELECT
                     IAI_MATCH_ACCOUNT_NO  ,
                     HEE_EMPLID ,
                     HEE_NAME ,
                     HEE_NATIONAL_ID ,
                     :var_st_iom_mstr[i].iom_org_cd, 
                     'N' ,
                     :c_ServiceName,
                     SYSDATE , NULL , NULL , NULL , NULL , :c_l_success_flag , :c_l_error_msg,
                     'Y',         /*** Ver 2.3 ***/
                     sysdate       /*** Ver 2.3 ***/
                     FROM
                     HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO
                     WHERE
                     HEE_NATIONAL_ID   = ICD_PAN_NO
                     AND ICD_SERIAL_NO = IAI_SERIAL_NO
                     AND HEE_EMPL_STATUS IN ( 'A' , 'L' )  /* A -active L -long leave */
                     /**AND HEE_SOURCE = 'ICICI BANK' *** Ver 2.1 comment **/
                     AND HEE_SOURCE = :c_hee_source	/** Ver 2.1 **/
                     AND HEE_EMPLID = :c_l_empl_id  /** Ver 2.6 **/
                     AND IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id; 
      /**** Ver 1.4 Ends Here ****/ 
      if ( SQLCODE != 0 )
      {
        fn_errlog ( c_ServiceName, "S31310", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
        return (-1);
      }

      DEFLOG5 fn_userlog (c_ServiceName," NEMP ITE INS %d ", SQL_ROW_COUNT );

      if ( fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg ) == -1 )
      {
        fn_userlog (c_ServiceName,"Failed in loop commit transaction |LOOP|-|%ld| ", l_l_inner_counter);
        fn_errlog ( c_ServiceName, "S31315", SQLMSG, c_errmsg);
        return (-1);
      }
    } /* End of for loop - for new employees */
  
    /*  Free the List*/
    free(ptr_emp_list);
    
    DEFLOG3 fn_print_date_time();
  }
  /******************************************************************************/
  /******************************************************************************/
  if(strcmp(var_st_iom_mstr[i].iom_org_cd,"PAMC") == 0) /** Ver 2.2 starts **/
  {
  	EXEC SQL
    SELECT COUNT(distinct ITE_PAN_NO) 
    INTO 	 :l_l_rgn_emp_count
    FROM   ITE_INSD_TRD_EMP_MSTR,UAC_USR_ACCNTS
    WHERE  NVL(ITE_MTCH_ACCNT,'NA') = UAC_CLM_MTCH_ACCNT
		/** AND		 UAC_ACT_DEACT_FLG <> 'S'  ** Ver 2.4 **/
		AND  	 ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd
		AND 	 ITE_PAN_NO not in
														(   SELECT distinct HEE_NATIONAL_ID 
																FROM 		HEE_HR_EMP_EXTRCT
																WHERE  	HEE_SOURCE = :c_hee_source
														);
	}
	else
	{																											/** Ver 2.2 Ends **/
  	EXEC SQL
    SELECT 
        COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO) 
    INTO 
        :l_l_rgn_emp_count
    FROM 
        HEE_HR_EMP_EXTRCT , 
        ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts /*** Ver 1.2 ***/
    WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
      AND HEE_NATIONAL_ID  !='NA'          /** Ver 1.5 ***/
      AND ICD_SERIAL_NO     = IAI_SERIAL_NO
      AND HEE_EMPL_STATUS NOT IN ( 'A' , 'L' )
      /*AND HEE_SOURCE = 'ICICI BANK'         *** Ver 1.2 *** ** Ver 2.1 comment **/
      AND HEE_SOURCE = :c_hee_source        /*** Ver 2.1 ***/
      AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT /*** Ver 1.2 ***/
     /**  AND UAC_ACT_DEACT_FLG <> 'S'                  *** Ver 1.2 *** Ver 2.4 **/
      AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H') /*** Ver 1.2 ***/
      AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
      AND IAI_MATCH_ACCOUNT_NO IN
          ( SELECT 
              DISTINCT NVL(ITE_MTCH_ACCNT,'NA')       /** Ver 2.3 **/ 
            FROM 
              ITE_INSD_TRD_EMP_MSTR 
            WHERE 
              ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd );
	}																										/** Ver 2.2 **/
  fn_userlog(c_ServiceName," Rsgn Emp Count for :%s: is :%ld: ",c_hee_source,l_l_rgn_emp_count);
  
  if (l_l_rgn_emp_count > 0 )
  {
    /*Allocate*/
    EXEC SQL ALLOCATE :sys_cursor_sel;  /*** Ver 2.2 ***/ 
    ptr_emp_list=calloc(sizeof(st_emp_list),l_l_rgn_emp_count );
    
    if (ptr_emp_list == NULL )
    {
      fn_errlog ( c_ServiceName, "S31320", SQLMSG, c_errmsg  );
      fn_userlog(c_ServiceName,"Unable to create NEW Emp list ");
      return (-1);    
    }
    l_match_id_cnt=0;           /*** Ver 1.2 ***/
    
  	if(strcmp(var_st_iom_mstr[i].iom_org_cd,"PAMC") == 0) /** Ver 2.2 starts **/
  	{
      EXEC SQL EXECUTE
				BEGIN
				OPEN :sys_cursor_sel FOR 
      	SELECT ITE_MTCH_ACCNT, 
							 ITE_EMP_ID,
							 ITE_PAN_NO 
      	FROM   ITE_INSD_TRD_EMP_MSTR,UAC_USR_ACCNTS
				WHERE  NVL(ITE_MTCH_ACCNT,'NA') = UAC_CLM_MTCH_ACCNT  /** Ver 2.3 ** NVL Added **/
				/** AND 	 UAC_ACT_DEACT_FLG <> 'S' ** Ver 2.4 **/
				AND  	 ITE_CMPY_ID =:c_orgzn_cd 
				AND 	 ITE_PAN_NO not in
																 (  SELECT distinct HEE_NATIONAL_ID 
																		FROM 		HEE_HR_EMP_EXTRCT
																		WHERE  	HEE_SOURCE = :c_hee_source
																  );
    	END;
			END-EXEC;
  	}
		else 
		{
			fn_userlog(c_ServiceName,"Selecting resigned employee for:%s:",c_hee_source);/*Ver 2.2 Ends*/

    	EXEC SQL EXECUTE 
    /**		DECLARE EMP_RSGN_LIST CURSOR FOR ** Ver 2.2 comment **/
			 BEGIN
				OPEN :sys_cursor_sel FOR													/*** Ver 2.2 **/ 
      	SELECT IAI_MATCH_ACCOUNT_NO , 
							 HEE_EMPLID,
							 HEE_NATIONAL_ID 
      	FROM 	 HEE_HR_EMP_EXTRCT , 
          		 ICD_INFO_CLIENT_DTLS,
							 IAI_INFO_ACCOUNT_INFO,
							 uac_usr_accnts  /*** Ver 1.2 ***/
      	WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
        AND 	HEE_NATIONAL_ID  !='NA'              /*** Ver 1.5 ***/
        AND 	ICD_SERIAL_NO = IAI_SERIAL_NO
        AND 	HEE_EMPL_STATUS NOT IN ( 'A' , 'L' )
        /*AND HEE_SOURCE = 'ICICI BANK'         *** Ver 1.2 ***/ /** Ver 2.1 ***/
        AND 	HEE_SOURCE = :c_hee_source        /*** Ver 2.1 ***/
        AND 	IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT  /*** Ver 1.2 ***/
        /** AND 	UAC_ACT_DEACT_FLG <> 'S'                     *** Ver 1.2 *** Ver 2.4 **/
        AND 	ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')  /*** Ver 1.2 ***/
        AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
        AND 	IAI_MATCH_ACCOUNT_NO IN
            	( SELECT 
                	DISTINCT NVL(ITE_MTCH_ACCNT,'NA')   /*** Ver 2.3 ***/ 
              	FROM 
                	ITE_INSD_TRD_EMP_MSTR 
              	WHERE 
                /*	ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd ); *** Ver 2.2 comment**/
                	ITE_CMPY_ID = :c_orgzn_cd ); /** ver 2.2 **/
			END;				/** Ver 2.2 **/
			END-EXEC;		/** Ver 2.2 **/
    	/**EXEC SQL OPEN EMP_RSGN_LIST;	** Ver 2.2 comment **/ 
    } 
    if ( SQLCODE != 0 )
    {
      fn_errlog ( c_ServiceName, "S31325", SQLMSG, c_errmsg  );
      sprintf(c_errmsg,"Cursor creation failed with  :%s  ",sqlca.sqlerrm.sqlerrmc);
      fn_userlog(c_ServiceName,c_errmsg);
 			EXEC SQL FREE :sys_cursor_sel;  /** Ver 2.2 **/ 
      return (-1);
    }
    
    /*Load*/
  	 	EXEC SQL
      FOR :l_l_rgn_emp_count
    	/*FETCH EMP_RSGN_LIST			*** Ver 2.2 comment **/
    	FETCH :sys_cursor_sel			/** Ver 2.2 **/
    	INTO :ptr_emp_list; 
  
    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
      fn_errlog ( c_ServiceName, "S31330", SQLMSG, c_errmsg  );
    	EXEC SQL FREE :sys_cursor_sel;  /** Ver 2.2 **/
      return (-2);
    }
  
		/*	EXEC SQL CLOSE EMP_RSGN_LIST; ** Ver 2.2 comment **/
		EXEC SQL CLOSE :sys_cursor_sel; /** Ver 2.2 **/
    EXEC SQL FREE :sys_cursor_sel;  /** Ver 2.2 **/

    DEFLOG3 fn_print_date_time();
    
    for(l_l_inner_counter=0;l_l_inner_counter < l_l_rgn_emp_count ; l_l_inner_counter++)
    {
        strcpy(c_l_mtch_acnt_id,ptr_emp_list[l_l_inner_counter].mtch_id );
        strcpy(c_l_empl_id,ptr_emp_list[l_l_inner_counter].empl_id );
        trim(c_l_empl_id);
        /*** Ver 1.2 Starts ***/
        l_match_id_cnt=0;
        strcpy(c_l_emp_pan_no,ptr_emp_list[l_l_inner_counter].empl_pan_no );

				/*** Ver 1.8 comment starts 

        EXEC SQL
          SELECT count(IAI_MATCH_ACCOUNT_NO)
            INTO :l_match_id_cnt
            FROM ICD_INFO_CLIENT_DTLS,IAI_INFO_ACCOUNT_INFO
           where ICD_SERIAL_NO = IAI_SERIAL_NO
             AND ICD_PAN_NO=:c_l_emp_pan_no;

        if ( SQLCODE != 0 )
        {
         fn_errlog ( c_ServiceName, "S31335", SQLMSG, c_errmsg  );
         return (-1);
        }

        if( l_match_id_cnt > 1 )
        {
         fn_errlog ( c_ServiceName, "S31340","Match count > 1 for one pan id ",c_errmsg  );
         fn_userlog(c_ServiceName,"PAN No %s has multiple Match account attached",c_l_emp_pan_no);
         fn_userlog(c_ServiceName," So Match id %s is skipped",c_l_mtch_acnt_id);
         continue;
        }

				**** Comment Ends Ver 1.8 ***/

        /*** Ver 1.2 Ends ***/

        /******* Ver 2.3 Starts Here *************************************
        *** Condition To Skip NRI Customer Added In Ver 1.8 ****

        if ( (strncmp(c_l_mtch_acnt_id, "750", 3)  == 0 ) ||
             (strncmp(c_l_mtch_acnt_id, "751", 3)  == 0 ) ||
             (strncmp(c_l_mtch_acnt_id, "650", 3)  == 0 ) ||
             (strncmp(c_l_mtch_acnt_id, "651", 3)  == 0 )
           )
        {
          if(DEBUG_MSG_LVL_3)
          {
            fn_userlog(c_ServiceName,"Inside skip NRI Customer.");
            fn_userlog(c_ServiceName,"So Match id %s is skipped",c_l_mtch_acnt_id);
          }

          continue;
        }

       **** Ver 1.8 ** ENDS ****
       ************************** Ver 2.3 Ends Here *********************/
 
        /*** Ver 1.5 Starts Here ****/
         i_exist_count=0;

         EXEC SQL
         SELECT  count(1)
           INTO  :i_exist_count
           FROM  HEE_HR_EMP_EXTRCT
          WHERE  HEE_NATIONAL_ID=:c_l_emp_pan_no
            /**AND  HEE_SOURCE= 'ICICI BANK'  ** Ver 2.1 comment **/
            AND  HEE_SOURCE= :c_hee_source		/** Ver 2.1 ***/
            AND  HEE_EMPL_STATUS in ('A','L');

         if ( SQLCODE != 0 )
         {
          fn_errlog ( c_ServiceName, "S31345", SQLMSG, c_errmsg  );
          return (-1);
         }

         if( i_exist_count > 0 )
         {
           /*** Ver 2.4 Starts Here ***/
           EXEC SQL
             SELECT UAC_ACT_DEACT_FLG
               INTO :c_account_stts
               FROM UAC_USR_ACCNTS
              WHERE UAC_CLM_MTCH_ACCNT=:c_l_mtch_acnt_id;
           if ( SQLCODE != 0 )
           {
             fn_errlog ( c_ServiceName, "S31350", SQLMSG, c_errmsg  );
             return (-1);
           }
  
          if( c_account_stts == 'S' )
          { 
            fn_userlog(c_ServiceName," Account Suspended Cases :%s:",c_l_mtch_acnt_id); 
          }  /*** Ver 2.4 Ends Here ***/
          else
          {
            fn_errlog ( c_ServiceName, "S31355","Record exists as new Bank Employee so Skip Resign Apply",c_errmsg  );
            fn_userlog(c_ServiceName,"PAN No %s two records with two employee status",c_l_emp_pan_no);
            fn_userlog(c_ServiceName,"So Match id %s is skipped",c_l_mtch_acnt_id);
            continue;
          }
         }

        /*** Ver 1.5 Ends here *****/ 

        DEFLOG5 fn_userlog(c_ServiceName,"******************* RSGN EMP CALL ********************* " );
        DEFLOG4 fn_userlog(c_ServiceName,"RSGN MTCH :|%s| EMID |%s|",c_l_mtch_acnt_id , c_l_empl_id);

        i_g_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
        if ( i_g_trnsctn == -1 )
        {
            fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
            fn_errlog ( c_ServiceName, "S31360", TPMSG, c_errmsg );
            return(-1);
        }
  
        EXEC SQL
          SELECT IAI_SERIAL_NO, NVL(IAI_TYPE,'RI')
          INTO   :c_l_serial_no, :c_iai_match_type
          FROM
              IAI_INFO_ACCOUNT_INFO
          WHERE
              IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;
                
        if ( ( SQLCODE == TOO_MANY_ROWS_FETCHED ) || ( SQLCODE == NO_DATA_FOUND ) )
        {
          fn_errlog ( c_ServiceName, "S31365", SQLMSG, c_errmsg  );
          fn_userlog (c_ServiceName," Skipping :%s: No / Multiple entries in IAI",c_l_mtch_acnt_id);
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
          continue;  
        }
        
        if ( SQLCODE != 0 )
        {
          fn_errlog ( c_ServiceName, "S31370", SQLMSG, c_errmsg  );
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 *****/
          return (-1);
        }
        EXEC SQL EXECUTE
        BEGIN
           /*SP_INSD_INFO_NTST_SCHEME_DTLS */						/** Commented in Ver 1.7 **/
						 SP_INSD_INFO_NTST_SCHEME_EBA								/** Added in Ver 1.7 **/
            (
              '',                                 
              :c_iai_match_type,  
              :c_l_rsgn_emp_eq_scheme , /*Scheme Name to be inserted here */        
              :c_l_rsgn_emp_fo_scheme , /*Scheme Name to be inserted here */   
              :c_ServiceName,                                    
              to_number(:c_l_serial_no),    
              :c_l_mtch_acnt_id,                                             
              '',             
              :c_ServiceName,             
              'E', 
              '',
              :c_l_rsgn_emp_mf_prmnt_com_cd,				 /** Ver 1.9 null changed to mf value **/
              :c_l_rsgn_emp_mf_curr_comm_cd,					 /** Ver 1.9 null changed to mf value **/
              :c_l_rsgn_emp_mf_validity_flg,					 /** Ver 1.9 null changed to mf value **/
              '',            
              :c_l_success_flag,                                  
              :c_l_error_msg,
							:c_l_rsgn_emp_cdx_scheme							/** Ver 1.9 CDX scheme passed **/
            );
        END;
        END-EXEC;
  
        if ( SQLCODE != 0 )
        {
          fn_errlog ( c_ServiceName, "S31375", SQLMSG, c_errmsg  );
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
          return (-1);
        }

        
        rtrim (c_l_error_msg);

      /*Setting the flag to D to indicate that the record will be deleted from ITE*/ 
      EXEC SQL
      UPDATE HEE_HR_EMP_EXTRCT
        SET 
        HEE_SCHM_CHANGED = :c_l_success_flag,
        HEE_ITE_INSERT   = 'D',
        HEE_PRCS_COMMENT = 'Resign. ICIS Msg:- ' || :c_l_error_msg ||
                  TO_CHAR(SYSDATE,' DD-MON-YYYY HH24:MI:SS')
      WHERE 
        HEE_EMPLID  = :c_l_empl_id       
			AND HEE_SOURCE =:c_hee_source;					/** ver 2.1 **/       
      
      if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)	/** Ver 2.2 NO_DATA_FOUND Added **/
      {
        fn_errlog ( c_ServiceName, "S31380", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
        return (-1);
      }
			if(SQLCODE == NO_DATA_FOUND )	/** ver 2.2 **/
			{
				fn_userlog(c_ServiceName," No data in HEE for resigned Employee for :%s:",c_hee_source); 
			}

      DEFLOG5 fn_userlog (c_ServiceName," RSGN HEE UPD %d ", SQL_ROW_COUNT );
  
      if (c_l_success_flag == 'N')
      {
          fn_userlog (c_ServiceName," ICIS Proc Call failed :%s: Skipping",c_l_mtch_acnt_id);
          fn_userlog (c_ServiceName," ICIS Msg :|%s:|",c_l_error_msg);
          fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg );
          continue;
      }
      /**** Ver 1.4 ****
      EXEC SQL
      INSERT INTO ITL_INSD_TRD_EMP_MSTR_LOG
        SELECT
          ITE_MTCH_ACCNT  ,
          ITE_EMP_ID      ,
          ITE_EMP_NAME    ,
          ITE_PAN_NO      ,
          ITE_CMPY_ID     ,
          ITE_CTGRY_LVL   ,
          :c_ServiceName  ,
          SYSDATE         ,
          ITE_RELATION_CODE,
          ITE_RELATIVE_MTCH,
          ITE_ICIS_FLAG    ,
          ITE_ICIS_ERR_TEXT,
          'Deleted as resigned from company -'|| :var_st_iom_mstr[i].iom_org_cd || to_char(SYSDATE,' dd-mon-yyyy hh24:mi:ss')
        FROM  ITE_INSD_TRD_EMP_MSTR
        WHERE ITE_MTCH_ACCNT = :c_l_mtch_acnt_id;
       ********** Ver 1.4 ******/
       /**** Ver 1.4 starts here ******/

       EXEC SQL 
       INSERT 
         INTO ITL_INSD_TRD_EMP_MSTR_LOG
              ( ITL_MTCH_ACCNT,
								ITL_EMP_ID,
								ITL_EMP_NAME,
								ITL_PAN_NO,
						  	ITL_CMPY_ID,
								ITL_CTGRY_LVL,
								ITL_MODIFIED_BY,
								ITL_MODIFIED_DT,
								ITL_RELATION_CODE,
								ITL_RELATIVE_MTCH,
								ITL_ICIS_FLAG,
								ITL_ICIS_ERR_TEXT,
								ITL_MODIFICATION,
								ITL_DEPENDENT_EMP_ID,
								ITL_DEPENDENT_EMP_NAME,
								ITL_DEPENDENT_PAN_NO,
								ITL_DEPENDENT_CMPY_ID,
                ITL_AUTHRZTN_FLG,          /** Ver 2.3 **/
                ITL_AUTHRZTN_DT            /** Ver 2.3 **/
              ) 
         SELECT
          ITE_MTCH_ACCNT  ,
          ITE_EMP_ID      ,
          ITE_EMP_NAME    ,
          ITE_PAN_NO      ,
          ITE_CMPY_ID     ,
          ITE_CTGRY_LVL   ,
          :c_ServiceName  ,
          SYSDATE         ,
          ITE_RELATION_CODE,
          ITE_RELATIVE_MTCH,
          ITE_ICIS_FLAG    ,
          ITE_ICIS_ERR_TEXT,
          'Deleted as resigned from company -'|| :var_st_iom_mstr[i].iom_org_cd || to_char(SYSDATE,'dd-mon-yyyy hh24:mi:ss'),
          ITE_DEPENDENT_EMP_ID,
          nvl(ITE_DEPENDENT_EMP_NAME,'NA'),
          ITE_DEPENDENT_PAN_NO,
          ITE_DEPENDENT_CMPY_ID,
          NVL(ITE_AUTHRZTN_FLG,'N'),              /** Ver 2.3 **/ 
          NVL(ITE_AUTHRZTN_DT,'01-Nov-1800')      /** Ver 2.3 **/
        FROM  ITE_INSD_TRD_EMP_MSTR
        WHERE NVL(ITE_MTCH_ACCNT,'NA') = :c_l_mtch_acnt_id;  /** Ver 2.3 ** NVL Added **/
    
      /****** Ver 1.4 Ends Here ******/
      if ( ( SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND) )
      {
        fn_errlog ( c_ServiceName, "S31385", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );  /**** Ver 1.4 ****/ 
        return (-1);
      }       

      DEFLOG3 fn_userlog (c_ServiceName," RSGN ITL INS-1 %d ", SQL_ROW_COUNT );

      EXEC SQL
        DELETE FROM ITE_INSD_TRD_EMP_MSTR
        WHERE NVL(ITE_MTCH_ACCNT,'NA') = :c_l_mtch_acnt_id  /** Ver 2.3 ** NVL Added **/
        AND   ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd; /** Ver 3.9 **/
    
      if ( ( SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND) )
      {
        fn_errlog ( c_ServiceName, "S31390", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );   /**** Ver 1.4 ****/
        return (-1);
      }
     /******* Ver 1.4 ***** Commented *********** 
      DEFLOG3 fn_userlog (c_ServiceName," RSGN ITE DEL-1 %d ", SQL_ROW_COUNT );
      
     EXEC SQL
      INSERT INTO ITL_INSD_TRD_EMP_MSTR_LOG
        SELECT
          ITE_MTCH_ACCNT  ,
          ITE_EMP_ID      ,
          ITE_EMP_NAME    ,
          ITE_PAN_NO      ,
          ITE_CMPY_ID     ,
          ITE_CTGRY_LVL   ,
          :c_ServiceName  ,
          SYSDATE         ,
          ITE_RELATION_CODE,
          ITE_RELATIVE_MTCH,
          ITE_ICIS_FLAG    ,
          ITE_ICIS_ERR_TEXT,
   'Deleted as relative '|| :c_l_mtch_acnt_id || 'resigned from company -'|| :var_st_iom_mstr[i].iom_org_cd || to_char(SYSDATE,' dd-mon-yyyy hh24:mi:ss')
        FROM  ITE_INSD_TRD_EMP_MSTR
        WHERE ITE_RELATIVE_MTCH = :c_l_mtch_acnt_id;
        
      if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
      {
        fn_errlog ( c_ServiceName, "S31395", SQLMSG, c_errmsg );
        return ( -1 );
      } 
      **************** Ver 1.4 ****************
      DEFLOG5 fn_userlog (c_ServiceName," RSGN ITL INS-2 %d ", SQL_ROW_COUNT );
      
      EXEC SQL
        DELETE FROM ITE_INSD_TRD_EMP_MSTR
        WHERE ITE_RELATIVE_MTCH = :c_l_mtch_acnt_id;

      if ( ( SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND) )
      {
        fn_errlog ( c_ServiceName, "S31400", SQLMSG, c_errmsg  );
        return (-1);
      }

      DEFLOG5 fn_userlog (c_ServiceName," RSGN ITE DEL-2 %d ", SQL_ROW_COUNT );
      ***************** Ver 1.4 Ends ***********/             
      if ( fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg ) == -1 )
      {
        fn_userlog (c_ServiceName,"Failed in loop commit transaction |LOOP|-|%ld| ", l_l_inner_counter);
        fn_errlog ( c_ServiceName, "S31405", SQLMSG, c_errmsg);
        return (-1);
      }
    } /* End of for loop */
    
    /*  Free the List*/
    free(ptr_emp_list);
    
    DEFLOG3 fn_print_date_time();
  }
  
  fn_userlog(c_ServiceName,"---- Function fn_apply_bankemp_scheme Completed ----");  
  return (0);
}

/******************************************************************************************/
/************** Find out New and Resigned ISEC Customers and apply the scheme **************/
/******************************************************************************************/

int fn_apply_isecemp_scheme(int i)         /**** Ver 1.1 Starts ****/
{
 
 EXEC SQL BEGIN DECLARE SECTION;
  long  l_l_inner_counter=0;
  long  l_l_record_count=0;
  long  l_l_new_emp_count=0;
  long  l_l_rgn_emp_count=0;
  
  char  c_l_mtch_acnt_id[11]={'\0'};
  char  c_l_empl_id[34]={'\0'};
  char  c_l_serial_no[11]={'\0'};
  char  c_iai_match_type[51]={'\0'};
  char  c_l_emp_pan_no[11]={'\0'};  /*** Ver 1.2 ***/
 /*** char  l_match_id_cnt=0;          *** Ver 1.2 *** Commented in Ver 1.4 ***/
  char  c_hee_source[50];  /** ver 2.0 **/
  char  c_orgzn_cd[10+1];    /** ver 2.0 **/
  char  c_account_stts;    /** Ver 2.4 **/
  char  c_desgnt_flg = 'N';  /** Ver 4.0 **/
  char  c_emp_type = 'N';    /** Ver 4.5 **/
  char c_EMP_match_id[11]={'\0'}; /** Ver 3.9 **/ 
  char c_EMP_id[34]={'\0'};       /** Ver 3.9 **/
  varchar c_EMP_name[91];     /** Ver 3.9 **/
  char c_EMP_pan_no[11]={'\0'};   /** Ver 3.9 **/


  int   i_reltive_cd = 0;  /** Ver 3.9 **/
  long  l_match_id_cnt=0;  /*** Ver 1.4 ***/

  int i_exist_count;         /*** Ver 1.5 ***/

  typedef struct ___list
  {
    char mtch_id[11];
    char empl_id[34];
    char empl_pan_no[11];      /*** Ver 1.2 ***/
    int  reltive_cd;            /*** Ver 3.9 ***/
    char desgnt_flg;           /*** Ver 4.0 ***/
    char empl_type;            /*** Ver 4.5 ***/
  } st_emp_list;

  st_emp_list * ptr_emp_list = NULL;

  sql_cursor  sys_cursor;        /** Ver 2.0 **/ 
  EXEC SQL   END DECLARE SECTION;
   
  MEMSET(c_hee_source) ; /** ver 2.0 **/ 
  DEFLOG3 fn_userlog(c_ServiceName,"Inside fn_apply_isecemp_scheme Function"); 
  
  strcpy(c_l_isec_new_emp_eq_scheme,  var_st_iom_mstr[i].iom_eq_scheme_cd);
  strcpy(c_l_isec_new_emp_fo_scheme,  var_st_iom_mstr[i].iom_fno_scheme_cd);
  strcpy(c_l_isec_rsgn_emp_eq_scheme, var_st_iom_mstr[i].iom_eq_rsgn_scheme_cd);
  strcpy(c_l_isec_rsgn_emp_fo_scheme, var_st_iom_mstr[i].iom_fno_rsgn_scheme_cd);
  
  trim(c_l_isec_new_emp_eq_scheme);
  trim(c_l_isec_new_emp_fo_scheme);
  trim(c_l_isec_rsgn_emp_eq_scheme);
  trim(c_l_isec_rsgn_emp_fo_scheme);

	/** Ver 1.9 Starts **/
	strcpy( c_l_isec_new_emp_cdx_scheme,var_st_iom_mstr[i].iom_cdx_scheme_cd );
	strcpy( c_l_isec_new_mf_prmnt_com_cd, var_st_iom_mstr[i].iom_mf_permnt_comm_cd );
	strcpy( c_l_isec_new_mf_curr_comm_cd, var_st_iom_mstr[i].iom_mf_curr_comm_cd );
	strcpy( c_l_isec_new_emp_mf_val_flg ,var_st_iom_mstr[i].iom_mf_validity_flg ); 
	strcpy( c_l_isec_rsgn_emp_cdx_scheme, var_st_iom_mstr[i].iom_cdx_resign_scheme_cd );
	strcpy( c_l_isec_rsgn_mf_prmnt_com_cd, var_st_iom_mstr[i].iom_mf_resign_permnt_comm_cd );
	strcpy( c_l_isec_rsgn_mf_cur_com_cd, var_st_iom_mstr[i].iom_mf_resign_curr_comm_cd );
	strcpy( c_l_isec_rsgn_mf_val_flg, var_st_iom_mstr[i].iom_mf_resign_validity_flg );
	trim( c_l_isec_new_emp_cdx_scheme );
	trim( c_l_isec_new_mf_prmnt_com_cd );
	trim( c_l_isec_new_mf_curr_comm_cd );
	trim( c_l_isec_new_emp_mf_val_flg );
	trim( c_l_isec_rsgn_emp_cdx_scheme );
	trim( c_l_isec_rsgn_mf_prmnt_com_cd );
	trim( c_l_isec_rsgn_mf_cur_com_cd );
	trim( c_l_isec_rsgn_mf_val_flg );

  DEFLOG3 fn_userlog(c_ServiceName," NEW_CDX |%s|  ",c_l_isec_new_emp_cdx_scheme );
  DEFLOG3 fn_userlog(c_ServiceName," RES_CDX |%s|  ",c_l_isec_rsgn_emp_cdx_scheme );
  DEFLOG3 fn_userlog(c_ServiceName," NEW_MF_PRMNT_COMM |%s|  ",c_l_isec_new_mf_prmnt_com_cd );
  DEFLOG3 fn_userlog(c_ServiceName," NEW_MF_CURR_COMM |%s|  ",c_l_isec_new_mf_curr_comm_cd );
  DEFLOG3 fn_userlog(c_ServiceName," NEW_MF_VALD_FLAG |%s|  ",c_l_isec_new_emp_mf_val_flg );
  DEFLOG3 fn_userlog(c_ServiceName," RES_MF_PRMNT_COMM |%s|  ",c_l_isec_rsgn_mf_prmnt_com_cd);
  DEFLOG3 fn_userlog(c_ServiceName," RES_MF_CURR_COMM |%s|  ",c_l_isec_rsgn_mf_cur_com_cd );
  DEFLOG3 fn_userlog(c_ServiceName," RES_MF_VALD_FLAG |%s|  ",c_l_isec_rsgn_mf_val_flg );

	/** ver 1.9 Ends **/

  DEFLOG3 fn_userlog(c_ServiceName," NEW_EQ |%s| NEW_FO |%s| ",c_l_isec_new_emp_eq_scheme  , c_l_isec_new_emp_fo_scheme  );
  DEFLOG3 fn_userlog(c_ServiceName," RES_EQ |%s| RES_FO |%s| ",c_l_isec_rsgn_emp_eq_scheme , c_l_isec_rsgn_emp_fo_scheme );

  MEMSET(c_orgzn_cd); 
  strcpy( c_orgzn_cd, var_st_iom_mstr[i].iom_org_cd);

 
  if(strcmp(var_st_iom_mstr[i].iom_org_cd,"ISEC") == 0)
  {
   strcpy(c_hee_source,"ICICI SECURITIES");  /** Ver 2.0 **/
   DEFLOG3 fn_userlog(c_ServiceName,"Checking count of new employees for ISEC");
 
   EXEC SQL
       SELECT
         COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
       INTO :l_l_new_emp_count
       FROM
        HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts /** Ver 1.2 **/
       WHERE
         HEE_NATIONAL_ID   = ICD_PAN_NO 
         AND HEE_NATIONAL_ID  !='NA'              /*** Ver 1.5 ***/
         AND ICD_SERIAL_NO = IAI_SERIAL_NO
         AND HEE_EMPL_STATUS = 'Y' 
         AND HEE_SOURCE = 'ICICI SECURITIES'         /*** Ver 1.2 ***/
         AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT /*** Ver 1.2 ***/
         AND UAC_ACT_DEACT_FLG <> 'S'                     /*** Ver 1.2 ***/
         AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H') /*** Ver 1.2 ***/
         AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
         AND IAI_MATCH_ACCOUNT_NO NOT IN
           (SELECT NVL(ITE_MTCH_ACCNT,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd /** Ver 2.3 NVL(ITE_MTCH_ACCNT,'NA') ** NVL clause added ***/
            UNION
            SELECT NVL(ITE_RELATIVE_MTCH,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd); /*** Union Added in Ver 3.9 ***/
  }
  else if(strcmp(var_st_iom_mstr[i].iom_org_cd,"IPRD") == 0)  /** Ver 2.0 Starts Here **/
  {
   strcpy(c_hee_source,"ICICI PRUDENTIAL");
   DEFLOG3 fn_userlog(c_ServiceName,"Checking count of new employees for IPRD");

   EXEC SQL
       SELECT
         COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
       INTO :l_l_new_emp_count
       FROM
        HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts /** Ver 1.2 **/
       WHERE
         HEE_NATIONAL_ID   = ICD_PAN_NO
         AND HEE_NATIONAL_ID  !='NA'       
         AND ICD_SERIAL_NO = IAI_SERIAL_NO
         AND HEE_EMPL_STATUS = 'A' 
         AND HEE_SOURCE = 'ICICI PRUDENTIAL' 
         AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT
         AND UAC_ACT_DEACT_FLG <> 'S'                 
         AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
         AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
         AND IAI_MATCH_ACCOUNT_NO NOT IN
           (SELECT NVL(ITE_MTCH_ACCNT,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd);
              /** Ver 2.3 NVL(ITE_MTCH_ACCNT,'NA') ** NVL clause added ***/
  }  /*** Ver 2.0 Ends Here **/
  /*** Ver 4.4 Starts ***/
  else if(strcmp(var_st_iom_mstr[i].iom_org_cd,"IVEN") == 0)
  {
   strcpy(c_hee_source,"ICICI VENTURE");
   DEFLOG3 fn_userlog(c_ServiceName,"Checking count of new employees for IVEN");

   EXEC SQL
       SELECT
         COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
       INTO :l_l_new_emp_count
       FROM
        HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts 
       WHERE
         HEE_NATIONAL_ID   = ICD_PAN_NO
         AND HEE_NATIONAL_ID  !='NA'          
         AND ICD_SERIAL_NO = IAI_SERIAL_NO
         AND HEE_EMPL_STATUS = 'Y'
         AND HEE_SOURCE = 'ICICI VENTURE'  
         AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT 
         AND UAC_ACT_DEACT_FLG <> 'S'                 
         AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H') 
         AND IAI_MATCH_ACCOUNT_STATUS='35'    
         AND IAI_MATCH_ACCOUNT_NO NOT IN
           (SELECT NVL(ITE_MTCH_ACCNT,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd 
            UNION
            SELECT NVL(ITE_RELATIVE_MTCH,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd); 
  }
  /*** Ver 4.4 Ends ***/

  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
  {
    fn_errlog ( c_ServiceName, "S31410", SQLMSG, c_errmsg  );
    fn_userlog(c_ServiceName,c_errmsg);
    return (-1);
  }

  DEFLOG3  fn_userlog(c_ServiceName," %s-New Emp Count %ld ",c_orgzn_cd,l_l_new_emp_count );

  if (l_l_new_emp_count > 0)
  {

    EXEC SQL ALLOCATE :sys_cursor;  /*** Ver 2.0 ***/ 
    ptr_emp_list=calloc(sizeof(st_emp_list),l_l_new_emp_count );

    if (ptr_emp_list == NULL )
    {
      fn_errlog ( c_ServiceName, "S31415", SQLMSG, c_errmsg  );
      fn_userlog(c_ServiceName,"Unable to create NEW Isec Emp list ");
      return (-1);
    }

    if(strcmp(c_orgzn_cd,"ISEC") == 0)
    { 
      /** EXEC SQL
      DECLARE CUR_EMP_LIST CURSOR FOR ** Ver 2.0 **/

      /*** Ver 2.0 Starts Here **/
      EXEC SQL  EXECUTE
          BEGIN
            OPEN  :sys_cursor FOR   /** Ver 2.0 Ends Here **/
      SELECT DISTINCT
        IAI_MATCH_ACCOUNT_NO, HEE_EMPLID, HEE_NATIONAL_ID,    /*** Ver 1.2 ***/
        NVL(HEE_RELATION_CD,0),  /*** Ver 3.9 ***/
        DECODE( NVL(HEE_DESGNT_FLG,'N'),'Y','D','A'),       /*** Designate flag Added in Ver 4.0 ***/
				case when trim(nvl(HEE_JOB_CODE,'EMP'))='CON' then 'C' else 'E' end	/** Ver 4.5 **/
      FROM
        HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts  /*** Ver 1.2 ***/
      WHERE
        HEE_NATIONAL_ID   = ICD_PAN_NO 
        AND HEE_NATIONAL_ID  !='NA'                 /*** Ver 1.5 ***/
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS = 'Y' 
        AND HEE_SOURCE = 'ICICI SECURITIES'         /*** Ver 1.2 ***/ 
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT /*** Ver 1.2 ***/
        AND UAC_ACT_DEACT_FLG <> 'S'                    /*** Ver 1.2 ***/
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H') /*** Ver 1.2 ***/
        AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
        AND IAI_MATCH_ACCOUNT_NO NOT IN
       /** (SELECT ITE_MTCH_ACCNT FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd); **Ver 2.0*/
          (SELECT NVL(ITE_MTCH_ACCNT,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgzn_cd /** Ver 2.0 **/ /** Ver 2.3 NVL(ITE_MTCH_ACCNT,'NA') ** NVL clause added ***/
           UNION
           SELECT NVL(ITE_RELATIVE_MTCH,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgzn_cd) /*** Union Added in Ver 3.9 ***/
           ORDER BY HEE_EMPLID,NVL(HEE_RELATION_CD,0),IAI_MATCH_ACCOUNT_NO; /*** Order by added in Ver 3.9 ***/

      END;        /*** Ver 2.0 ***/
      END-EXEC;   /*** Ver 2.0 ***/
     /** EXEC SQL OPEN CUR_EMP_LIST; ** Ver 2.0 **/
    }
    else if(strcmp(c_orgzn_cd,"IPRD") == 0)  /** Ver 2.0 Starts Here **/
    {
      EXEC SQL  EXECUTE
          BEGIN
            OPEN  :sys_cursor FOR   
      SELECT DISTINCT
        IAI_MATCH_ACCOUNT_NO, HEE_EMPLID, HEE_NATIONAL_ID,0, /** Added 0 for Dependent Flag in Ver 3.9 **/
        DECODE( NVL(HEE_DESGNT_FLG,'N'),'Y','D','A'),         /*** Designate flag Added in Ver 4.1 ***/ 
				'E'				/** Ver 4.5 **/
      FROM
        HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts  
      WHERE
        HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA'               
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS = 'A'
        AND HEE_SOURCE = 'ICICI PRUDENTIAL'        
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT
        AND UAC_ACT_DEACT_FLG <> 'S'                  
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
        AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
        AND IAI_MATCH_ACCOUNT_NO NOT IN
          (SELECT NVL(ITE_MTCH_ACCNT,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgzn_cd);
              /** Ver 2.3 NVL(ITE_MTCH_ACCNT,'NA') ** NVL clause added ***/
      END;       
      END-EXEC; 

    }  /** Ver 2.0 Ends Here ***/
    /*** Ver 4.4 Starts ***/
    else if(strcmp(c_orgzn_cd,"IVEN") == 0)
    {
      EXEC SQL  EXECUTE
          BEGIN
            OPEN  :sys_cursor FOR   
      SELECT DISTINCT
        IAI_MATCH_ACCOUNT_NO, HEE_EMPLID, HEE_NATIONAL_ID,   
        NVL(HEE_RELATION_CD,0),  
        DECODE( NVL(HEE_DESGNT_FLG,'N'),'Y','D','A'),
				'E'				/** Ver 4.5 **/
      FROM
        HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts  
      WHERE
        HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA'              
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS = 'Y'
        AND HEE_SOURCE = 'ICICI VENTURE'     
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT 
        AND UAC_ACT_DEACT_FLG <> 'S'                 
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H') 
        AND IAI_MATCH_ACCOUNT_STATUS='35'    
        AND IAI_MATCH_ACCOUNT_NO NOT IN
          (SELECT NVL(ITE_MTCH_ACCNT,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgzn_cd 
           UNION
           SELECT NVL(ITE_RELATIVE_MTCH,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgzn_cd) 
           ORDER BY HEE_EMPLID,NVL(HEE_RELATION_CD,0),IAI_MATCH_ACCOUNT_NO;

      END;      
      END-EXEC;
    }
    /*** Ver 4.4 Ends ***/  
 
    if ( SQLCODE != 0 )
    {
      fn_errlog ( c_ServiceName, "S31420", SQLMSG, c_errmsg  );
      sprintf(c_errmsg,"Fetching failed with  :%s  ",sqlca.sqlerrm.sqlerrmc);
      EXEC SQL FREE :sys_cursor;  /** Ver 2.0 **/
      fn_userlog(c_ServiceName,c_errmsg);
      return (-1);
    }
   
   /*** Ver 2.0 ****** 
   EXEC SQL
      FOR :l_l_new_emp_count
    FETCH CUR_EMP_LIST
    INTO :ptr_emp_list;
   *******************/

   /*** Ver 2.0 Starts Here ***/
   EXEC SQL
      FOR :l_l_new_emp_count
    FETCH :sys_cursor 
    INTO :ptr_emp_list;
  
   /*** Ver 2.0 Ends Here ***/

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
      fn_errlog ( c_ServiceName, "S31425", SQLMSG, c_errmsg  );
      EXEC SQL FREE :sys_cursor;  /** Ver 2.0 **/
      return (-2);
    }

    /** EXEC SQL CLOSE CUR_EMP_LIST; ** ver 2.0 **/
    EXEC SQL CLOSE :sys_cursor; /** Ver 2.0 **/
    EXEC SQL FREE :sys_cursor;  /** Ver 2.0 **/
     

    DEFLOG3 fn_print_date_time();
   
    for(l_l_inner_counter=0;l_l_inner_counter < l_l_new_emp_count ; l_l_inner_counter++) 
    {
   		DEFLOG3 fn_userlog(c_ServiceName,"processing record No:%ld: out of %ld  for %s",l_l_inner_counter,l_l_new_emp_count,c_orgzn_cd); 
				MEMSET(c_l_empl_id);
        strcpy(c_l_mtch_acnt_id,ptr_emp_list[l_l_inner_counter].mtch_id );
        strcpy(c_l_empl_id,ptr_emp_list[l_l_inner_counter].empl_id );
        i_reltive_cd = ptr_emp_list[l_l_inner_counter].reltive_cd;           /** Ver 3.9 **/
        c_desgnt_flg = ptr_emp_list[l_l_inner_counter].desgnt_flg;         /*** Ver 4.0 ***/     
        trim(c_l_empl_id);

        /**** Comment in Ver 2.3 Starts Here ****************************************************
        *** Condition To Skip NRI Customer changed and moved here In Ver 1.8 ****

        if ( (strncmp(c_l_mtch_acnt_id, "750", 3)  == 0 ) ||
             (strncmp(c_l_mtch_acnt_id, "751", 3)  == 0 ) ||
             (strncmp(c_l_mtch_acnt_id, "650", 3)  == 0 ) ||
             (strncmp(c_l_mtch_acnt_id, "651", 3)  == 0 )
           )
        {
          if(DEBUG_MSG_LVL_3)
          {
            fn_userlog(c_ServiceName,"Inside skip NRI Customer.");
            fn_userlog(c_ServiceName,"So Match id %s is skipped",c_l_mtch_acnt_id);
          }

          continue;
        }

       **** Ver 1.8 ** ENDS ****
       ****************************** Ver 2.3 Ends Here ***************************************/ 

        /*** Ver 1.2 Starts ***/
        l_match_id_cnt=0;
        strcpy(c_l_emp_pan_no,ptr_emp_list[l_l_inner_counter].empl_pan_no );
        
				/*** Commented in Ver 1.8 for skipping NRI moved above 
				EXEC SQL
          SELECT count(IAI_MATCH_ACCOUNT_NO)
            INTO :l_match_id_cnt
            FROM ICD_INFO_CLIENT_DTLS,IAI_INFO_ACCOUNT_INFO
           where ICD_SERIAL_NO = IAI_SERIAL_NO
             AND ICD_PAN_NO=:c_l_emp_pan_no;

        if ( SQLCODE != 0 )
        {
         fn_errlog ( c_ServiceName, "S31430", SQLMSG, c_errmsg  );
         return (-1);
        }
        if( l_match_id_cnt > 1 )
        {
         fn_errlog ( c_ServiceName, "S31435","Match count > 1 for one pan id ",c_errmsg  );
         fn_userlog(c_ServiceName,"PAN No :%s: has multiple[%ld] Match account attached",c_l_emp_pan_no,l_match_id_cnt);
         fn_userlog(c_ServiceName," So Match id %s is skipped",c_l_mtch_acnt_id);
         continue;
        }
				**** Ver 1.8 ** Comment Ends ***/

        /*** Ver 1.2 Ends ***/
			
        /**** Ver 1.8 ** Starts ***/

        MEMSET(c_l_mtch_acnt_no);  

        EXEC SQL
          SELECT IAI_MATCH_ACCOUNT_NO
            INTO :c_l_mtch_acnt_no 
            FROM ICD_INFO_CLIENT_DTLS,IAI_INFO_ACCOUNT_INFO,UAC_USR_ACCNTS
           where ICD_SERIAL_NO = IAI_SERIAL_NO
             AND ICD_PAN_NO=:c_l_emp_pan_no
             AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT
             AND UAC_ACT_DEACT_FLG = 'S'
             AND IAI_MATCH_ACCOUNT_NO  IN
                 (SELECT distinct NVL(ITE_MTCH_ACCNT,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgzn_cd)
             AND ROWNUM < 2;  /*** Ver 2.3 ** Rownum and NVL Added ***/

        if ( SQLCODE != 0  && SQLCODE != NO_DATA_FOUND )
        {
         fn_errlog ( c_ServiceName, "S31440", SQLMSG, c_errmsg  );
         return (-1);
        }

        if( SQLCODE != NO_DATA_FOUND )
        {
            /**** New Function Call Here ***/

          if( fn_chng_ite_match(c_l_mtch_acnt_no) == -1 )
          {
            fn_userlog (c_ServiceName,"Inside error condition of fn_chng_ite_match function");
            fn_errlog ( c_ServiceName, "S31445", "Inside error condition of fn_chng_ite_match function", c_errmsg  );
            return (-1);
          }

        }
        /*** Ver 1.8 *** Ends ***/

        DEFLOG5 fn_userlog(c_ServiceName,"******************* NEW ISEC EMP CALL ********************* " );
        fn_userlog(c_ServiceName,"----------------------------------------------------------------------");
        DEFLOG3 fn_userlog(c_ServiceName," NEWISECEMP MTCH :|%s| EMID |%s|",c_l_mtch_acnt_id,c_l_empl_id);
  
        i_g_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
        if ( i_g_trnsctn == -1 )
        {
            fn_userlog (c_ServiceName,"Failed in innitial begin transaction ");
            fn_errlog ( c_ServiceName, "S31450", TPMSG, c_errmsg  );
            return (-1);
        }
        
        EXEC SQL
          SELECT IAI_SERIAL_NO, NVL(IAI_TYPE,'RI')
          INTO   :c_l_serial_no, :c_iai_match_type
          FROM
              IAI_INFO_ACCOUNT_INFO
          WHERE
              IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;
                
        if ( ( SQLCODE == TOO_MANY_ROWS_FETCHED ) || ( SQLCODE == NO_DATA_FOUND ) )
        {
          fn_errlog ( c_ServiceName, "S31455", SQLMSG, c_errmsg  );
          fn_userlog (c_ServiceName," Skipping :%s: No / Multiple entries in IAI",c_l_mtch_acnt_id);
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
          continue;  
        }
        
        if ( SQLCODE != 0 )
        {
          fn_errlog ( c_ServiceName, "S31460", SQLMSG, c_errmsg  );
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/ 
          return (-1);
        }

				rtrim(c_iai_match_type); /* Added in  Ver 4.5 */		

        DEFLOG3  fn_userlog(c_ServiceName," c_l_serial_no =%s", c_l_serial_no);
        DEFLOG3  fn_userlog(c_ServiceName,"c_iai_match_type   =%s", c_iai_match_type);

				c_l_success_flag='\0'; /* Added in  Ver 4.5 */
				MEMSET(c_l_error_msg); /* memset in  Ver 4.5 */


        if ( (strcmp(c_orgzn_cd,"IVEN") != 0) || (strcmp(c_orgzn_cd,"IVEN") == 0 &&  i_reltive_cd == 0) ) /** if added in Ver 4.4 **/
        {
					/** ver 4.5 **/
					if(c_emp_type == 'E' )   /** Ver 4.5 Employee Brokerage applicable to employee only **/
					{
        		EXEC SQL EXECUTE
        		BEGIN
           /*SP_INSD_INFO_NTST_SCHEME_DTLS */						/** Commented in Ver 1.7 **/
           SP_INSD_INFO_NTST_SCHEME_EBA									/** Added in Ver 1.7 **/
            (
              '',                                 
              :c_iai_match_type,  
              :c_l_isec_new_emp_eq_scheme ,         
              :c_l_isec_new_emp_fo_scheme ,                                  
              :c_ServiceName,                                    
              to_number(:c_l_serial_no),    
              :c_l_mtch_acnt_id,                                             
              '',             
              :c_ServiceName,             
              'E', 
              '',
              :c_l_isec_new_mf_prmnt_com_cd,		 /** Ver 1.9 null changed to mf value **/
              :c_l_isec_new_mf_curr_comm_cd,		 /** Ver 1.9 null changed to mf value **/
              :c_l_isec_new_emp_mf_val_flg,			 /** Ver 1.9 null changed to mf value **/
              '',            
              :c_l_success_flag,                                  
              :c_l_error_msg ,
							:c_l_isec_new_emp_cdx_scheme			/** Ver 1.9 CDX sceme passed **/
            );
       	 END;
        	END-EXEC;
  
        	if ( SQLCODE != 0 )
        	{
          	fn_errlog ( c_ServiceName, "S31465", SQLMSG, c_errmsg  );
          	fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
          	return (-1);
        	}
			 	}
      rtrim(c_l_error_msg);

      EXEC SQL
      UPDATE HEE_HR_EMP_EXTRCT
      SET 
      HEE_SCHM_CHANGED = :c_l_success_flag,
      HEE_ITE_INSERT   = 'Y',
      HEE_PRCS_COMMENT = 'NEW ISEC Employee. ICIS Msg:- '|| :c_l_error_msg ||
      TO_CHAR(SYSDATE,' DD-MON-YYYY HH24:MI:SS')
      WHERE 
      HEE_EMPLID  = :c_l_empl_id 
      AND NVL(HEE_RELATION_CD,0) =:i_reltive_cd /** Ver 3.9 **/ 
      AND HEE_SOURCE = :c_hee_source;   /** Ver 2.0 **/   
     
      if ( SQLCODE != 0 )
      {
        fn_errlog ( c_ServiceName, "S31470", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
        return (-1);
      }
     
      DEFLOG5 fn_userlog (c_ServiceName," NEMP HEE UPD %d ", SQL_ROW_COUNT );
			
      if (c_l_success_flag == 'N')
      {
          fn_userlog (c_ServiceName," ICIS Proc Call failed :%s: Skipping",c_l_mtch_acnt_id);
          fn_userlog (c_ServiceName," ICIS Msg :|%s:|",c_l_error_msg);
          fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg );
          continue;
      }
      } /** Ver 4.4 **/   
     /********** Ver 1.4 Comment starts here ****** 
      EXEC SQL
        INSERT INTO ITE_INSD_TRD_EMP_MSTR
        SELECT 
          IAI_MATCH_ACCOUNT_NO  , 
          HEE_EMPLID , 
          HEE_NAME ,
          HEE_NATIONAL_ID , 
          :var_st_iom_mstr[i].iom_org_cd,       *** Ver 1.2 ***
          'N' , 
          :c_ServiceName, 
          SYSDATE , NULL , NULL , NULL , NULL , :c_l_success_flag , :c_l_error_msg    
        FROM 
          HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO
        WHERE 
          HEE_NATIONAL_ID   = ICD_PAN_NO 
          AND ICD_SERIAL_NO = IAI_SERIAL_NO 
          AND HEE_EMPL_STATUS =  'Y'  
          AND IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;
      ******** Ver 1.4 Comment End *******/

      
      /*** Ver 3.9 Starts ***/
      DEFLOG0 fn_userlog (c_ServiceName,"i_reltive_cd,:%d:",i_reltive_cd);

      if ( i_reltive_cd != 0)
      { 
       MEMSET(c_EMP_match_id); 
       MEMSET(c_EMP_id);
       MEMSET(c_EMP_name);
       MEMSET(c_EMP_pan_no);
      DEFLOG0 fn_userlog (c_ServiceName,"Select value of Employee..");

      EXEC SQL
       SELECT IAI_MATCH_ACCOUNT_NO,
              TRIM(HEE_EMPLID) ,
              HEE_NAME ,
              TRIM(HEE_NATIONAL_ID) 
       into   :c_EMP_match_id, 
              :c_EMP_id,
              :c_EMP_name,
              :c_EMP_pan_no
       FROM
       HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO
       WHERE
       HEE_NATIONAL_ID   = ICD_PAN_NO
       AND ICD_SERIAL_NO = IAI_SERIAL_NO
       AND HEE_EMPL_STATUS = decode(:c_hee_source,'ICICI SECURITIES','Y','ICICI PRUDENTIAL','A','ICICI VENTURE','Y') 
       AND HEE_SOURCE   = :c_hee_source
       AND NVL(HEE_RELATION_CD,0) = 0
       AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
       AND HEE_EMPLID = :c_l_empl_id
			 AND rownum <2;

       if ( SQLCODE != 0  && SQLCODE != NO_DATA_FOUND )
       {
         fn_errlog ( c_ServiceName, "S31475", SQLMSG, c_errmsg  );
         fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
         return (-1);
       }
			 if(SQLCODE == NO_DATA_FOUND )			
			 {
				 fn_userlog(c_ServiceName,"Case of dependent have trading account but employee do not have");
				EXEC SQL
					select 'NA',
								 TRIM(HEE_EMPLID) ,
               	 HEE_NAME ,
								 TRIM(HEE_NATIONAL_ID)
       		into   :c_EMP_match_id,
              	 :c_EMP_id,
              	 :c_EMP_name,
              	 :c_EMP_pan_no
       		FROM   HEE_HR_EMP_EXTRCT
			 		WHERE  HEE_EMPLID = :c_l_empl_id
			 		AND    HEE_SOURCE   = :c_hee_source
			 		AND 	 HEE_EMPL_STATUS = decode(:c_hee_source,'ICICI SECURITIES','Y','ICICI PRUDENTIAL','A','ICICI VENTURE','Y')
			 		AND 	 NVL(HEE_RELATION_CD,0) = 0;
       		if ( SQLCODE != 0 )
       		{
         		fn_errlog ( c_ServiceName, "S31480", SQLMSG, c_errmsg  );
         		fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
         		return (-1);
       		}
			  }

        rtrim(c_EMP_id); 
        rtrim(c_EMP_pan_no);
        SETNULL(c_EMP_name);
 
        DEFLOG0 fn_userlog (c_ServiceName,"INsert into ITE for MAtch_id :%s:,Emp_id :%s:,Emp_name :%s:,Emp_pan_no :%s:,c_hee_source:%s:",c_EMP_match_id,c_EMP_id,c_EMP_name.arr,c_EMP_pan_no,c_hee_source);

        DEFLOG0 fn_userlog (c_ServiceName,"insert to C_source:%s:,Pan_no:%s:,Match_id:%s:",c_hee_source,c_l_emp_pan_no,c_l_mtch_acnt_id);
        EXEC SQL
        INSERT INTO ITE_INSD_TRD_EMP_MSTR
                    ( ITE_MTCH_ACCNT,
                      ITE_EMP_ID,
                      ITE_EMP_NAME,
                      ITE_PAN_NO,
                      ITE_CMPY_ID,
                      ITE_CTGRY_LVL,
                      ITE_ENTERED_BY,
                      ITE_ENTERED_DT,
                      ITE_MODIFIED_BY,
                      ITE_MODIFIED_DT,
                      ITE_RELATION_CODE,
                      ITE_RELATIVE_MTCH,
                      ITE_ICIS_FLAG,
                      ITE_ICIS_ERR_TEXT,
                      ITE_AUTHRZTN_FLG,           
                      ITE_AUTHRZTN_DT,            
                      ITE_DEPENDENT_EMP_ID,       
                      ITE_DEPENDENT_EMP_NAME,     
                      ITE_DEPENDENT_PAN_NO,       
                      ITE_DEPENDENT_CMPY_ID       
                    )
                 SELECT
                 :c_EMP_match_id,
                 :c_EMP_id,      
                 :c_EMP_name,    
                 :c_EMP_pan_no,   
                 :var_st_iom_mstr[i].iom_org_cd,
                 'N' ,
                 :c_ServiceName,
                 SYSDATE , 
                 NULL , 
                 NULL , 
            		 :i_reltive_cd , 
            		 IAI_MATCH_ACCOUNT_NO , 
             		 :c_l_success_flag ,
                 :c_l_error_msg,
                 'Y',
                 sysdate,
                 HEE_EMPLID ,
                 nvl(HEE_NAME,'NA') ,
                 HEE_NATIONAL_ID ,
             		 'NA'
                 FROM
                 HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO
                 WHERE
                 HEE_NATIONAL_ID   = ICD_PAN_NO
                 AND ICD_SERIAL_NO = IAI_SERIAL_NO
                 AND HEE_EMPL_STATUS = decode(:c_hee_source,'ICICI SECURITIES','Y','ICICI PRUDENTIAL','A','ICICI VENTURE','Y') 
                 AND HEE_NATIONAL_ID = :c_l_emp_pan_no  
                 AND HEE_SOURCE   = :c_hee_source 
                 AND HEE_EMPLID = :c_l_empl_id  
            		 AND NVL(HEE_RELATION_CD,0) =  :i_reltive_cd
                 AND IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;
     
      if ( SQLCODE != 0 )
      {
        fn_errlog ( c_ServiceName, "S31485", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
         return (-1);
      }
    DEFLOG0 fn_userlog (c_ServiceName,"sqlerrd[2] :%d: ",SQL_ROW_COUNT);        
      }
      /*** Ver 3.9 Ends ***/

      else if ( i_reltive_cd == 0)  /** Else condition added in Ver 3.9 **/
      {
      /**** Ver 1.4 Starts here *******/
      EXEC SQL
        INSERT INTO ITE_INSD_TRD_EMP_MSTR
                    ( ITE_MTCH_ACCNT,
                      ITE_EMP_ID,
                      ITE_EMP_NAME,
                      ITE_PAN_NO,
                      ITE_CMPY_ID,
                      ITE_CTGRY_LVL,
                      ITE_ENTERED_BY,
                      ITE_ENTERED_DT,
                      ITE_MODIFIED_BY,
                      ITE_MODIFIED_DT,
                      ITE_RELATION_CODE,
                      ITE_RELATIVE_MTCH,
                      ITE_ICIS_FLAG,
                      ITE_ICIS_ERR_TEXT,
                      ITE_AUTHRZTN_FLG,            /*** Ver 2.3 ***/
                      ITE_AUTHRZTN_DT,              /*** Ver 2.3 ***/
                      ITE_DEPENDENT_EMP_ID,         /*** ver 3.9 ***/
                      ITE_DEPENDENT_EMP_NAME,       /*** Ver 3.9 ***/
                      ITE_DEPENDENT_PAN_NO,         /*** Ver 3.9 ***/
                      ITE_DEPENDENT_CMPY_ID         /*** Ver 3.9 ***/ 
                    )
                    SELECT
                     IAI_MATCH_ACCOUNT_NO  ,
                     HEE_EMPLID ,
                     HEE_NAME ,
                     HEE_NATIONAL_ID ,
                     :var_st_iom_mstr[i].iom_org_cd,
                     'N' ,
                     :c_ServiceName,
                     SYSDATE , NULL , NULL , NULL,   NULL ,
                     :c_l_success_flag , :c_l_error_msg,
                     'Y',               /** Ver 2.3 **/
                     sysdate,           /** Ver 2.3 **/
                     NULL,                 /*** ver 3.9 ***/
                     NULL,      /*** ver 3.9 ***/
                     NULL,    /*** ver 3.9 ***/
                     NULL    /*** ver 3.9 ***/
                     FROM
                     HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO
                     WHERE
                     HEE_NATIONAL_ID   = ICD_PAN_NO 
                     AND ICD_PAN_NO =  :c_l_emp_pan_no  /** Ver 3.9 **/
                     AND NVL(HEE_RELATION_CD,0) = 0   /** Ver 3.9 **/
                     AND ICD_SERIAL_NO = IAI_SERIAL_NO
                     /* AND HEE_EMPL_STATUS =  'Y' ** Ver 2.0 **/
                     AND HEE_EMPL_STATUS = decode(:c_hee_source,'ICICI SECURITIES','Y','ICICI PRUDENTIAL','A','ICICI VENTURE','Y') /** Ver 2.0 */
                     AND HEE_NATIONAL_ID = :c_l_emp_pan_no    /** Ver 2.0 **/
                     /** AND HEE_SOURCE   = 'ICICI SECURITIES' ** Ver 2.0 **/
                     AND HEE_SOURCE   = :c_hee_source /*** Ver 2.0 **/
                     AND HEE_EMPLID = :c_l_empl_id  /** Ver 2.6 **/
                     AND IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id ;
      /**** Ver 1.4 Ends Here ****/
       
      if ( SQLCODE != 0 )
      {
        fn_errlog ( c_ServiceName, "S31490", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
         return (-1);
      } 
 } 

      DEFLOG5 fn_userlog (c_ServiceName," NEMP ITE ISEC INS %d ", SQL_ROW_COUNT );

      /*** Start of Ver 3.3 ***/
      if(strcmp(var_st_iom_mstr[i].iom_org_cd,"ISEC") == 0 && c_emp_type=='E' ) /** Ver 4.5 **/
      {
        DEFLOG5 fn_userlog (c_ServiceName," Applying Bullet Plan to Employee " );

        if( fn_bullet_status_chng(c_ServiceName,c_l_mtch_acnt_id,'E','M','','',c_errmsg)!=0)
        {
          fn_errlog ( c_ServiceName, "S31495", SQLMSG, c_errmsg  );
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
          fn_userlog (c_ServiceName,"Error in Bullet mapping for :%s: Skipping",c_l_mtch_acnt_id);
          continue;
        }

      }
      /*** End of Ver 3.3 ***/

      /*** Start of Ver 4.3 ***/
      if(strcmp(var_st_iom_mstr[i].iom_org_cd,"ISEC") == 0)
      {

        if( fn_emp_CLM_chng(c_ServiceName,c_l_mtch_acnt_id,'M',c_errmsg)!=0)
        {
          fn_errlog ( c_ServiceName, "S31500", SQLMSG, c_errmsg  );
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
          fn_userlog (c_ServiceName,"Error in function fn_emp_CLM_chng for :%s: Skipping",c_l_mtch_acnt_id);
          continue;
        }

      }
      /*** End of Ver 4.3 ***/

			/** ver 3.5 Starts ***/
       c_l_success_flag='\0';
       MEMSET(c_l_error_msg);
       fn_userlog (c_ServiceName,"Before SP_INSIDER_EMP_DATA calling For ISEC***********************************");
			 fn_userlog(c_ServiceName,"Org:%s: emp_id=:%s: emp_pan_no=:%s:,match_accnt=:%s: design_lg=:%c:",c_orgzn_cd,c_l_empl_id,c_l_emp_pan_no,c_l_mtch_acnt_id,c_desgnt_flg);
       EXEC SQL EXECUTE
       BEGIN
        SP_INSIDER_EMP_DATA ( /**'ISEC',                          Ver 3.7 comment **/
															:c_orgzn_cd,												/** Ver 3.7 c_orgzn_cd used **/
                              'E',
                              :c_l_empl_id,
                              :c_l_emp_pan_no,
                              :c_l_mtch_acnt_id,
                              NULL,
                             'A',
                              NULL,
                              NULL,
                              'IMPORT_HR',				/** Ver 3.6 **/
                              'IMPORT_HR',				/** Ver 3.6 **/
                         /**  'A', **/    				/** emplouee flag Default A to be passed **/ /** Ver 3.6 **/ 
                              :c_desgnt_flg,      /** Ver 4.0 **/   
                              NULL,           		/** ban period flag **/ /** Ver 3.6 **/
                              :c_l_success_flag,
                              :c_l_error_msg
                            );
          END;
        END-EXEC;
       if ( SQLCODE != 0 )
       {
          fn_errlog ( c_ServiceName, "S31505", SQLMSG, c_errmsg  );
          fn_userlog(c_ServiceName,"Stored ProcError :%s:",c_l_error_msg);
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
          return (-1);
       }
			rtrim(c_l_error_msg);
       fn_userlog (c_ServiceName,"After SP_INSIDER_EMP_DATA calling For ISEC***********************************");
       if(c_l_success_flag == 'N')
       {
          fn_userlog(c_ServiceName,"Stored ProcError for  :ISEC,E,%s,%s,%s,null,A,null,IMPORT_HR,IMPORT_HR:",
																	c_l_empl_id,c_l_emp_pan_no,c_l_mtch_acnt_id);
					fn_userlog(c_ServiceName,"Error Message from IED proc is :%s:",c_l_error_msg);
					if(strncmp(c_l_error_msg,"Employee Already Exists.",24) != 0 )			/** Ver 4.1 **/
					{
          	fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );          	/** ver 3.7 **/
						continue;																												/** ver 3.7 **/
					}
       }
			/** ver 3.5 Ends **/ 
      if ( fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg ) == -1 )
      {
        fn_userlog (c_ServiceName,"Failed in loop commit transaction |LOOP|-|%ld| ", l_l_inner_counter);
        fn_errlog ( c_ServiceName, "S31510", SQLMSG, c_errmsg);
        return (-1);
      }
      DEFLOG3 fn_userlog(c_ServiceName,"--------------------------------------------------");   
    }
    free(ptr_emp_list);
    
    DEFLOG3 fn_print_date_time();
  }
 
  if(strcmp(var_st_iom_mstr[i].iom_org_cd,"ISEC") == 0)
  {
   EXEC SQL
    SELECT 
        COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO) 
    INTO 
        :l_l_rgn_emp_count
    FROM 
        HEE_HR_EMP_EXTRCT , 
        ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
    WHERE HEE_NATIONAL_ID   = ICD_PAN_NO 
      AND HEE_NATIONAL_ID  !='NA'             /*** Ver 1.5 ***/
      AND ICD_SERIAL_NO     = IAI_SERIAL_NO
      AND HEE_EMPL_STATUS != 'Y'
      AND HEE_SOURCE = 'ICICI SECURITIES'   /*** Ver 1.2 ***/
      AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT /** Ver 1.2 **/
     /** AND UAC_ACT_DEACT_FLG <> 'S'               ** Ver 1.2 ** Ver 2.4 **/
      AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H') /** Ver 1.2 **/
      AND (IAI_MATCH_ACCOUNT_NO,HEE_EMPLID) IN       /** Ver 2.0 , HEE_EMPLID added **/ 
          ( SELECT 
              DISTINCT ITE_MTCH_ACCNT,ITE_EMP_ID     /** Ver 2.0 , ITE_EMP_ID  added **/ 
            FROM 
              ITE_INSD_TRD_EMP_MSTR 
            WHERE 
              ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd
            UNION
              SELECT distinct NVL(ITE_RELATIVE_MTCH,'NA'),ITE_EMP_ID
              FROM   ITE_INSD_TRD_EMP_MSTR
              WHERE ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd
          ); /*** Union Added in Ver 3.9 ***/
  }
  else if(strcmp(var_st_iom_mstr[i].iom_org_cd,"IPRD") == 0)  /** Ver 2.0 Starts Here **/
  {
   EXEC SQL
    SELECT
        COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
    INTO
        :l_l_rgn_emp_count
    FROM
        HEE_HR_EMP_EXTRCT ,
        ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
    WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
      AND HEE_NATIONAL_ID  !='NA'            
      AND ICD_SERIAL_NO     = IAI_SERIAL_NO
      AND HEE_EMPL_STATUS != 'A'
      AND HEE_SOURCE = 'ICICI PRUDENTIAL'  
      AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT 
     /** AND UAC_ACT_DEACT_FLG <> 'S' *** Ver 2.4 **/              
      AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H') 
      AND (IAI_MATCH_ACCOUNT_NO,HEE_EMPLID) IN       /** Ver 2.0 , HEE_EMPLID added **/ 
          ( SELECT
              DISTINCT ITE_MTCH_ACCNT,ITE_EMP_ID     /** Ver 2.0 , ITE_EMP_ID  added **/
            FROM
              ITE_INSD_TRD_EMP_MSTR
            WHERE
              ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd);

  }
  /*** Ver 4.4 Starts ***/
  else if(strcmp(var_st_iom_mstr[i].iom_org_cd,"IVEN") == 0)
  {
   EXEC SQL
    SELECT
        COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
    INTO
        :l_l_rgn_emp_count
    FROM
        HEE_HR_EMP_EXTRCT ,
        ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
    WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
      AND HEE_NATIONAL_ID  !='NA'            
      AND ICD_SERIAL_NO     = IAI_SERIAL_NO
      AND HEE_EMPL_STATUS != 'Y'
      AND HEE_SOURCE = 'ICICI VENTURE'   
      AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT 
      AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H') 
      AND (IAI_MATCH_ACCOUNT_NO,HEE_EMPLID) IN     
          ( SELECT
              DISTINCT ITE_MTCH_ACCNT,ITE_EMP_ID  
            FROM
              ITE_INSD_TRD_EMP_MSTR
            WHERE
              ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd
            UNION
              SELECT distinct NVL(ITE_RELATIVE_MTCH,'NA'),ITE_EMP_ID
              FROM   ITE_INSD_TRD_EMP_MSTR
              WHERE ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd
          );
  }
  /*** Ver 4.4 Ends ***/

  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )  /*** Ver 1.4 ***/
  {
    fn_errlog ( c_ServiceName, "S31515", SQLMSG, c_errmsg  );
    fn_userlog(c_ServiceName,c_errmsg);
    return (-1);
  }

  /** DEFLOG3 fn_userlog(c_ServiceName," ISEC Rsgn Emp Count %ld ",l_l_rgn_emp_count ); **/
  DEFLOG3 fn_userlog(c_ServiceName," %s Rsgn Emp Count %ld ",var_st_iom_mstr[i].iom_org_cd,l_l_rgn_emp_count); /** Ver 2.0 */

  if (l_l_rgn_emp_count > 0 )
  {
    EXEC SQL ALLOCATE :sys_cursor;  /*** Ver 2.0 ***/ 
    ptr_emp_list=calloc(sizeof(st_emp_list),l_l_rgn_emp_count );
    
    if (ptr_emp_list == NULL )
    {
      fn_errlog ( c_ServiceName, "S31520", SQLMSG, c_errmsg  );
      fn_userlog(c_ServiceName,"Unable to create NEW Emp list ");
      return (-1);    
    }
    
    l_match_id_cnt=0;           /*** Ver 1.2 ***/ 
    if(strcmp(c_orgzn_cd,"ISEC") == 0)
    { 
    /** EXEC SQL
     DECLARE CUR_EMP_RSGN_LIST CURSOR FOR **/
  
     EXEC SQL  EXECUTE
     BEGIN
     OPEN  :sys_cursor FOR
      SELECT 
        IAI_MATCH_ACCOUNT_NO , HEE_EMPLID, HEE_NATIONAL_ID,   /** Ver 1.2 **/
        NVL(HEE_RELATION_CD,0),   /*** Ver 3.9 ***/
        DECODE( NVL(HEE_DESGNT_FLG,'N'),'Y','D','A'),       /*** Designate flag Added in Ver 4.0 ***/ 
				case when trim(nvl(HEE_JOB_CODE,'EMP')) = 'CON' then 'C' else 'E' end					/*** Ver 4.5 **/
      FROM 
          HEE_HR_EMP_EXTRCT , 
          ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
      WHERE HEE_NATIONAL_ID   = ICD_PAN_NO 
        AND HEE_NATIONAL_ID  !='NA'              /*** Ver 1.5 ***/
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS != 'Y'
        AND HEE_SOURCE = 'ICICI SECURITIES'    /*** Ver 1.2 ***/
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT  /*** Ver 1.2 ***/
        /** AND UAC_ACT_DEACT_FLG <> 'S'                     *** Ver 1.2 *** Ver 2.4 **/
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')  /*** Ver 1.2 ***/
        AND (IAI_MATCH_ACCOUNT_NO,HEE_EMPLID) IN /** Ver 2.0 , HEE_EMPLID added **/ 
            ( SELECT 
                DISTINCT ITE_MTCH_ACCNT,ITE_EMP_ID     /** Ver 2.0 , ITE_EMP_ID  added **/ 
              FROM 
                ITE_INSD_TRD_EMP_MSTR 
              WHERE 
                ITE_CMPY_ID = :c_orgzn_cd
              UNION
                SELECT distinct NVL(ITE_RELATIVE_MTCH,'NA'),ITE_EMP_ID
                FROM    ITE_INSD_TRD_EMP_MSTR
                WHERE ITE_CMPY_ID = :c_orgzn_cd
            );   /*** Union Added in Ver 3.9 ***/
      END;
      END-EXEC; 
    /**  EXEC SQL OPEN CUR_EMP_RSGN_LIST; ** Ver 2.0 **/
    }
    else if(strcmp(c_orgzn_cd,"IPRD") == 0)  /** Ver 2.0 Starts Here **/
    {
     EXEC SQL  EXECUTE
     BEGIN
     OPEN  :sys_cursor FOR
      SELECT
        IAI_MATCH_ACCOUNT_NO , HEE_EMPLID,HEE_NATIONAL_ID,0, /** Added 0 for Dependent Flag in Ver 3.9 **/
        DECODE( NVL(HEE_DESGNT_FLG,'N'),'Y','D','A'),       /*** Designate flag Added in Ver 4.1 ***/ 
				'E'   /** Ver 4.5 Default is Employee **/
      FROM
          HEE_HR_EMP_EXTRCT ,
          ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
      WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA'         
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS != 'A'
        AND HEE_SOURCE = 'ICICI PRUDENTIAL' 
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT 
       /**  AND UAC_ACT_DEACT_FLG <> 'S' ** Ver 2.4 **/                  
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H') 
        AND (IAI_MATCH_ACCOUNT_NO,HEE_EMPLID) IN /** Ver 2.0 , HEE_EMPLID added **/ 
            ( SELECT
                DISTINCT ITE_MTCH_ACCNT,ITE_EMP_ID     /** Ver 2.0 , ITE_EMP_ID  added **/
              FROM
                ITE_INSD_TRD_EMP_MSTR
              WHERE
                ITE_CMPY_ID = :c_orgzn_cd);
      END;
      END-EXEC;
    }    /** Ver 2.0 Ends Here **/
    /** Ver 4.4 Starts **/
    else if(strcmp(c_orgzn_cd,"IVEN") == 0)
    {
     EXEC SQL  EXECUTE
     BEGIN
     OPEN  :sys_cursor FOR
      SELECT
        IAI_MATCH_ACCOUNT_NO , HEE_EMPLID, HEE_NATIONAL_ID,  
        NVL(HEE_RELATION_CD,0),  
        DECODE( NVL(HEE_DESGNT_FLG,'N'),'Y','D','A'),       
				'E'   /** Ver 4.5 Default is Employee **/
      FROM
          HEE_HR_EMP_EXTRCT ,
          ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
      WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA'          
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS != 'Y'
        AND HEE_SOURCE = 'ICICI VENTURE' 
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT  
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H') 
        AND (IAI_MATCH_ACCOUNT_NO,HEE_EMPLID) IN 
            ( SELECT
                DISTINCT ITE_MTCH_ACCNT,ITE_EMP_ID  
              FROM
                ITE_INSD_TRD_EMP_MSTR
              WHERE
                ITE_CMPY_ID = :c_orgzn_cd
              UNION
                SELECT distinct NVL(ITE_RELATIVE_MTCH,'NA'),ITE_EMP_ID
                FROM    ITE_INSD_TRD_EMP_MSTR
                WHERE ITE_CMPY_ID = :c_orgzn_cd
            );
      END;
      END-EXEC;
    }
    /** Ver 4.4 Ends **/
 
    if ( SQLCODE != 0 )
    {
      fn_errlog ( c_ServiceName, "S31525", SQLMSG, c_errmsg  );
      sprintf(c_errmsg,"Cursor creation failed with  :%s  ",sqlca.sqlerrm.sqlerrmc);
      fn_userlog(c_ServiceName,c_errmsg);
      EXEC SQL FREE :sys_cursor;  /** Ver 2.0 **/ 
      return (-1);
    }
   
   /*** Ver 2.0 ******** 
   EXEC SQL
      FOR :l_l_rgn_emp_count
    FETCH CUR_EMP_RSGN_LIST
    INTO :ptr_emp_list;
   ********************/
   
   /**** Ver 2.0 Starts here **/

   EXEC SQL
      FOR :l_l_rgn_emp_count
    FETCH :sys_cursor 
    INTO :ptr_emp_list;
 
   /*** Ver 2.0 Ends Here ***/
 
    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
      fn_errlog ( c_ServiceName, "S31530", SQLMSG, c_errmsg  );
      return (-2);
    }
  
    /** EXEC SQL CLOSE CUR_EMP_RSGN_LIST; ** Ver 2.0 **/

    EXEC SQL CLOSE :sys_cursor; /** Ver 2.0 **/
    EXEC SQL FREE :sys_cursor;  /** Ver 2.0 **/
    
    DEFLOG3 fn_print_date_time();
    
    for(l_l_inner_counter=0;l_l_inner_counter < l_l_rgn_emp_count ; l_l_inner_counter++)
    {
        strcpy(c_l_mtch_acnt_id,ptr_emp_list[l_l_inner_counter].mtch_id );
        strcpy(c_l_empl_id,ptr_emp_list[l_l_inner_counter].empl_id );
        i_reltive_cd = ptr_emp_list[l_l_inner_counter].reltive_cd;    /** Ver 3.9 **/
        c_desgnt_flg = ptr_emp_list[l_l_inner_counter].desgnt_flg;  /**  Ver 4.0 **/
        trim(c_l_empl_id);

				fn_userlog(c_ServiceName,"Processing Resign record %ld out of %ld for %s",l_l_inner_counter,l_l_rgn_emp_count,c_orgzn_cd);

        /*** Ver 1.2 Starts ***/
        l_match_id_cnt = 0;
        strcpy(c_l_emp_pan_no,ptr_emp_list[l_l_inner_counter].empl_pan_no );

				/*** Ver 1.8 *** Comment Starts ****

        EXEC SQL
          SELECT count(IAI_MATCH_ACCOUNT_NO)
            INTO :l_match_id_cnt
            FROM ICD_INFO_CLIENT_DTLS,IAI_INFO_ACCOUNT_INFO
           where ICD_SERIAL_NO = IAI_SERIAL_NO
             AND ICD_PAN_NO=:c_l_emp_pan_no;

        if ( SQLCODE != 0 )
        {
         fn_errlog ( c_ServiceName, "S31535", SQLMSG, c_errmsg  );
         return (-1);
        }

        if( l_match_id_cnt > 1 )
        {
         fn_errlog ( c_ServiceName, "S31540","Match count > 1 for one pan id ",c_errmsg  );
         fn_userlog(c_ServiceName,"PAN No %s has multiple Match account attached",c_l_emp_pan_no);
         fn_userlog(c_ServiceName," So Match id %s is skipped",c_l_mtch_acnt_id);
         continue;
        }

				**** Comment Ends Ver 1.8 ***/

        /*** Ver 1.2 Ends ***/
        /************* Ver 2.3 Starts Here ***********************************
        *** Condition To Skip NRI Customer Added In Ver 1.8 ****

        if ( (strncmp(c_l_mtch_acnt_id, "750", 3)  == 0 ) ||
             (strncmp(c_l_mtch_acnt_id, "751", 3)  == 0 ) ||
             (strncmp(c_l_mtch_acnt_id, "650", 3)  == 0 ) ||
             (strncmp(c_l_mtch_acnt_id, "651", 3)  == 0 )
           )
        {
          if(DEBUG_MSG_LVL_3)
          {
            fn_userlog(c_ServiceName,"Inside skip NRI Customer.");
            fn_userlog(c_ServiceName,"So Match id %s is skipped",c_l_mtch_acnt_id);
          }

          continue;
        }

       **** Ver 1.8 ** ENDS ****
       ******************************* ver 2.3 Ends Here *********************/

        /*** Ver 1.5 Starts Here ****/
         i_exist_count=0;
 
         EXEC SQL
         SELECT  count(1)
           INTO  :i_exist_count
           FROM  HEE_HR_EMP_EXTRCT   
          WHERE  HEE_NATIONAL_ID=:c_l_emp_pan_no 
            /** AND  HEE_SOURCE='ICICI SECURITIES' *** Ver 2.0 **/
            AND  HEE_SOURCE= :c_hee_source    /** Ver 2.0 **/        
            /** AND  HEE_EMPL_STATUS='Y'; ** Ver 2.0 **/
            AND HEE_EMPL_STATUS = decode(:c_hee_source,'ICICI SECURITIES','Y','ICICI PRUDENTIAL','A','ICICI VENTURE','Y'); /** Ver 2.0 **/
         if ( SQLCODE != 0 )
         {
          fn_errlog ( c_ServiceName, "S31545", SQLMSG, c_errmsg  );
          return (-1);
         }

         if( i_exist_count > 0 )
         {
           /*** Ver 2.4 Starts Here ***/
           EXEC SQL
             SELECT UAC_ACT_DEACT_FLG
               INTO :c_account_stts
               FROM UAC_USR_ACCNTS
              WHERE UAC_CLM_MTCH_ACCNT=:c_l_mtch_acnt_id;
           if ( SQLCODE != 0 )
           {
             fn_errlog ( c_ServiceName, "S31550", SQLMSG, c_errmsg  );
             return (-1);
           }

           if( c_account_stts == 'S' )
           {
             fn_userlog(c_ServiceName," Account Suspended Cases :%s:",c_l_mtch_acnt_id);
           }  /*** Ver 2.4 Ends Here ***/
           else
           {
             fn_errlog ( c_ServiceName, "S31555","Record exists as new ISEC Employee so Skip Resign Apply",c_errmsg  );
             fn_userlog(c_ServiceName,"PAN No %s with two employee status",c_l_emp_pan_no);
             fn_userlog(c_ServiceName,"So Match id %s is skipped",c_l_mtch_acnt_id);
             continue;
           }
         }
 
        /*** Ver 1.5 Ends here *****/

        DEFLOG5 fn_userlog(c_ServiceName,"******************* ISEC RSGN EMP CALL ********************* " );
        DEFLOG3 fn_userlog(c_ServiceName,"RSGN ISEC MTCH :|%s| EMID |%s|",c_l_mtch_acnt_id , c_l_empl_id);

        i_g_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
        if ( i_g_trnsctn == -1 )
        {
            fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
            fn_errlog ( c_ServiceName, "S31560", TPMSG, c_errmsg );
            return(-1);
        }
  
        EXEC SQL
          SELECT IAI_SERIAL_NO, NVL(IAI_TYPE,'RI')
          INTO   :c_l_serial_no, :c_iai_match_type
          FROM
              IAI_INFO_ACCOUNT_INFO
          WHERE
              IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;
                
        if ( ( SQLCODE == TOO_MANY_ROWS_FETCHED ) || ( SQLCODE == NO_DATA_FOUND ) )
        {
          fn_errlog ( c_ServiceName, "S31565", SQLMSG, c_errmsg  );
          fn_userlog (c_ServiceName," Skipping :%s: No / Multiple entries in IAI",c_l_mtch_acnt_id);
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
          continue;  
        }
        
        if ( SQLCODE != 0 )
        {
          fn_errlog ( c_ServiceName, "S31570", SQLMSG, c_errmsg  );
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
          return (-1);
        }

				rtrim(c_iai_match_type);
				c_l_success_flag='\0'; /* Added in  Ver 4.5 */
				MEMSET(c_l_error_msg); /* Memset added in  Ver 4.5 */

        if ( (strcmp(c_orgzn_cd,"IVEN") != 0) || (strcmp(c_orgzn_cd,"IVEN") == 0 && ( i_reltive_cd == 0)) ) /** if addded in ** Ver 4.4 **/
        {
					if(c_emp_type == 'E' )			/** Ver 4.5 scheme demapping applicable for consultant only **/
					{
        		EXEC SQL EXECUTE
        		BEGIN
           /*SP_INSD_INFO_NTST_SCHEME_DTLS */								/** Commented in Ver 1.7 **/
           	SP_INSD_INFO_NTST_SCHEME_EBA											/** Added in Ver 1.7 **/
            (
              '',                                 
              :c_iai_match_type,  
              :c_l_isec_rsgn_emp_eq_scheme ,        
              :c_l_isec_rsgn_emp_fo_scheme ,                                 
              :c_ServiceName,                                    
              to_number(:c_l_serial_no),    
              :c_l_mtch_acnt_id,                                             
              '',             
              :c_ServiceName,             
              'E', 
              '',
              :c_l_isec_rsgn_mf_prmnt_com_cd,		/** Ver 1.9 null changed to mf vallue **/
              :c_l_isec_rsgn_mf_cur_com_cd,				/** Ver 1.9 null changed to mf vallue **/
              :c_l_isec_rsgn_mf_val_flg,				/** Ver 1.9 null changed to mf vallue **/
              '',            
              :c_l_success_flag,                                  
              :c_l_error_msg,
							:c_l_isec_rsgn_emp_cdx_scheme			/** Ver 1.9 CDX Scheme passed ***/
            );
        		END;
        		END-EXEC;
  
        	if ( SQLCODE != 0 )
        	{
          	fn_errlog ( c_ServiceName, "S31575", SQLMSG, c_errmsg  );
          	fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
          	return (-1);
        	}
				}
        rtrim (c_l_error_msg);

        EXEC SQL
        UPDATE HEE_HR_EMP_EXTRCT
        SET 
        HEE_SCHM_CHANGED = :c_l_success_flag,
        HEE_ITE_INSERT   = 'D',
        HEE_PRCS_COMMENT = 'ISEC Resign. ICIS Msg:- ' || :c_l_error_msg ||
                  TO_CHAR(SYSDATE,' DD-MON-YYYY HH24:MI:SS')
        WHERE 
        HEE_EMPLID  = :c_l_empl_id
				AND HEE_NATIONAL_ID = :c_l_emp_pan_no					/** Ver 3.9 **/
        AND HEE_SOURCE = :c_hee_source;   /** Ver 2.0 **/ 

      if ( SQLCODE != 0 )
      {
        fn_errlog ( c_ServiceName, "S31580", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/ 
        return (-1);
      }
 
      DEFLOG5 fn_userlog (c_ServiceName," RSGN HEE UPD %d ", SQL_ROW_COUNT );
  
      if (c_l_success_flag == 'N')
      {
          fn_userlog (c_ServiceName," ICIS Proc Call failed :%s: Skipping",c_l_mtch_acnt_id);
          fn_userlog (c_ServiceName," ICIS Msg :|%s:|",c_l_error_msg);
          fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg );
          continue;
      }
      } /** Ver 4.4 **/
      /****** Ver 1.4, Commented ***************** 
      EXEC SQL
      INSERT INTO ITL_INSD_TRD_EMP_MSTR_LOG
        SELECT
          ITE_MTCH_ACCNT  ,
          ITE_EMP_ID      ,
          ITE_EMP_NAME    ,
          ITE_PAN_NO      ,
          ITE_CMPY_ID     ,
          ITE_CTGRY_LVL   ,
          :c_ServiceName  ,
          SYSDATE         ,
          ITE_RELATION_CODE,
          ITE_RELATIVE_MTCH,
          ITE_ICIS_FLAG    ,
          ITE_ICIS_ERR_TEXT,
         'Deleted as resigned from company - '|| :var_st_iom_mstr[i].iom_org_cd || to_char(SYSDATE,' dd-mon-yyyy hh24:mi:ss')
        FROM  ITE_INSD_TRD_EMP_MSTR
        WHERE ITE_MTCH_ACCNT = :c_l_mtch_acnt_id;
       ***************** Ver 1.4 Ends here *******/     
        
       /*********** Ver 1.4 Starts Here **********/
       EXEC SQL
       INSERT
         INTO ITL_INSD_TRD_EMP_MSTR_LOG
              ( ITL_MTCH_ACCNT,
                ITL_EMP_ID,
                ITL_EMP_NAME,
                ITL_PAN_NO,
                ITL_CMPY_ID,
                ITL_CTGRY_LVL,
                ITL_MODIFIED_BY,
                ITL_MODIFIED_DT,
                ITL_RELATION_CODE,
                ITL_RELATIVE_MTCH,
                ITL_ICIS_FLAG,
                ITL_ICIS_ERR_TEXT,
                ITL_MODIFICATION,
                ITL_DEPENDENT_EMP_ID,
                ITL_DEPENDENT_EMP_NAME,
                ITL_DEPENDENT_PAN_NO,
                ITL_DEPENDENT_CMPY_ID,
                ITL_AUTHRZTN_FLG,           /*** Ver 2.3 ***/
                ITL_AUTHRZTN_DT             /*** Ver 2.3 ***/
              )
         SELECT
          ITE_MTCH_ACCNT  ,
          ITE_EMP_ID      ,
          ITE_EMP_NAME    ,
          ITE_PAN_NO      ,
          ITE_CMPY_ID     ,
          ITE_CTGRY_LVL   ,
          :c_ServiceName  ,
          SYSDATE         ,
          ITE_RELATION_CODE,
          ITE_RELATIVE_MTCH,
          ITE_ICIS_FLAG    ,
          ITE_ICIS_ERR_TEXT,
          'Deleted as resigned from company -'|| :var_st_iom_mstr[i].iom_org_cd || to_char(SYSDATE,'dd-mon-yyyy hh24:mi:ss'),
          ITE_DEPENDENT_EMP_ID,
          nvl(ITE_DEPENDENT_EMP_NAME,'NA'),
          ITE_DEPENDENT_PAN_NO,
          ITE_DEPENDENT_CMPY_ID,
          NVL(ITE_AUTHRZTN_FLG,'N'),           /*** Ver 2.3 ***/
          NVL(ITE_AUTHRZTN_DT,'01-Nov-1800')   /*** Ver 2.3 ***/      
        FROM  ITE_INSD_TRD_EMP_MSTR
        WHERE  DECODE(:i_reltive_cd,0,NVL(ITE_MTCH_ACCNT,'NA'),NVL(ITE_RELATIVE_MTCH,'NA')) =:c_l_mtch_acnt_id /*** Ver 3.9 ***/
        AND  nvl(ITE_RELATIVE_MTCH,'NA') = DECODE(:i_reltive_cd,0,'NA',NVL(ITE_RELATIVE_MTCH,'NA')); 					 /*** Ver 3.9 ***/
   /***    WHERE NVL(ITE_MTCH_ACCNT,'NA') = :c_l_mtch_acnt_id; *** Ver 3.9 ***/ /** Ver 2.3 ** NVL Added **/
        
      /**** Ver 1.4 Ends Here ********/
 
      if ( ( SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND) )
      {
        fn_errlog ( c_ServiceName, "S31585", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
        return (-1);
        }       
      DEFLOG5 fn_userlog (c_ServiceName," RSGN ISEC ITL INS-1 %d ", SQL_ROW_COUNT );

      EXEC SQL
        DELETE FROM ITE_INSD_TRD_EMP_MSTR
        WHERE DECODE(:i_reltive_cd,0,NVL(ITE_MTCH_ACCNT,'NA'),NVL(ITE_RELATIVE_MTCH,'NA')) =:c_l_mtch_acnt_id
        AND   ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd;  /*** Decode and CMPY_ID added in Ver 3.9 ***/

    /**   WHERE NVL(ITE_MTCH_ACCNT,'NA') = :c_l_mtch_acnt_id;  ** Ver 2.3 ** NVL Added ** *** Ver 3.9 ***/
  
      if ( ( SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND) )
      {
        fn_errlog ( c_ServiceName, "S31590", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
        return (-1);
      }
     
      DEFLOG5 fn_userlog (c_ServiceName," RSGN ISEC ITE DEL-1 %d ", SQL_ROW_COUNT );
    /********* Ver 1.4 Commented ******************     
    EXEC SQL
      INSERT INTO ITL_INSD_TRD_EMP_MSTR_LOG
        SELECT
          ITE_MTCH_ACCNT  ,
          ITE_EMP_ID      ,
          ITE_EMP_NAME    ,
          ITE_PAN_NO      ,
          ITE_CMPY_ID     ,
          ITE_CTGRY_LVL   ,
          :c_ServiceName  ,
          SYSDATE         ,
          ITE_RELATION_CODE,
          ITE_RELATIVE_MTCH,
          ITE_ICIS_FLAG    ,
          ITE_ICIS_ERR_TEXT,
        'Deleted as relative '|| :c_l_mtch_acnt_id || ' resigned from company - '|| :var_st_iom_mstr[i].iom_org_cd || to_char(SYSDATE,' dd-mon-yyyy hh24:mi:ss')
        FROM  ITE_INSD_TRD_EMP_MSTR
        WHERE ITE_RELATIVE_MTCH = :c_l_mtch_acnt_id;
        
      if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
      {
        fn_errlog ( c_ServiceName, "S31595", SQLMSG, c_errmsg );
        return ( -1 );
      } 
      ************* Ver 1.4 **************************
      DEFLOG5 fn_userlog (c_ServiceName," RSGN ISEC ITL INS-2 %d ", SQL_ROW_COUNT );

      EXEC SQL
        DELETE FROM ITE_INSD_TRD_EMP_MSTR
        WHERE ITE_RELATIVE_MTCH = :c_l_mtch_acnt_id;

      if ( ( SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND) )
      {
        fn_errlog ( c_ServiceName, "S31600", SQLMSG, c_errmsg  );
        return (-1);
      }

      DEFLOG5 fn_userlog (c_ServiceName," RSGN ITE DEL-2 %d ", SQL_ROW_COUNT );
      *************** Ver 1.4 Ends Here ****************/             

      /*** Start of Ver 3.3 ***/
      if(strcmp(var_st_iom_mstr[i].iom_org_cd,"ISEC") == 0 && c_emp_type=='E' )  /** ver 4.5 employee check added **/
      {
        DEFLOG5 fn_userlog (c_ServiceName," Applying Bullet Plan to Employee " );

        if( fn_bullet_status_chng(c_ServiceName,c_l_mtch_acnt_id,'E','D','','',c_errmsg)!=0)
        {
          fn_errlog ( c_ServiceName, "S31605", SQLMSG, c_errmsg  );
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
          fn_userlog (c_ServiceName,"Error in Bullet mapping for :%s: Skipping",c_l_mtch_acnt_id);
          continue;
        }

      }
      /*** End of Ver 3.3 ***/

      /*** Start of Ver 4.3 ***/
      if(strcmp(var_st_iom_mstr[i].iom_org_cd,"ISEC") == 0)
      {

        if( fn_emp_CLM_chng(c_ServiceName,c_l_mtch_acnt_id,'D',c_errmsg)!=0)
        {
          fn_errlog ( c_ServiceName, "S31610", SQLMSG, c_errmsg  );
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
          fn_userlog (c_ServiceName,"Error in function fn_emp_CLM_chng for :%s: Skipping",c_l_mtch_acnt_id);
          continue;
        }

      }
      /*** End of Ver 4.3 ***/

			/** ver 3.5 Starts ***/
       c_l_success_flag='\0';
       MEMSET(c_l_error_msg);
			if ( i_reltive_cd == 0)			/** Ver 3.9 deletion to be done only for EMployee as it deletes records for both **/
			{
       fn_userlog (c_ServiceName,"Before SP_INSIDER_EMP_DATA calling For ISEC deletion***********************************");
			 fn_userlog(c_ServiceName,"Org:%s: emp_id=:%s: emp_pan_no=:%s:,match_accnt=:%s: design_lg=:%c:",c_orgzn_cd,c_l_empl_id,c_l_emp_pan_no,c_l_mtch_acnt_id,c_desgnt_flg);
       EXEC SQL EXECUTE
       BEGIN
        SP_INSIDER_EMP_DATA ( /**'ISEC',													Ver 3.7 comment **/
															:c_orgzn_cd,											/** Ver 3.7 **/
                              'E',
                              :c_l_empl_id,
                              :c_l_emp_pan_no,
                              :c_l_mtch_acnt_id,
                              NULL,
                             'D',
                              NULL,
                              NULL,
                              'IMPORT_HR',							/** Ver 3.6 **/
                              'IMPORT_HR',							/** Ver 3.6 **/
                          /** 'A', **/     				/** employee flag Default A to be passed **/ /** Ver 3.6 **/
                              :c_desgnt_flg,   /** Ver 4.0 **/ 
                              NULL,           /** ban period flag **/ /** Ver 3.6 **/
                              :c_l_success_flag,
                              :c_l_error_msg
                            );
          END;
       END-EXEC;
       if ( SQLCODE != 0 )
       {
          fn_errlog ( c_ServiceName, "S31615", SQLMSG, c_errmsg  );
          fn_userlog(c_ServiceName,"Stored ProcError :%s:",c_l_error_msg);
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
          return (-1);
       }
       fn_userlog (c_ServiceName,"After SP_INSIDER_EMP_DATA calling For ISEC deletion***********************************");
			 rtrim(c_l_error_msg);		/** Ver 4.1 **/
       if(c_l_success_flag == 'N')
       {
          fn_userlog(c_ServiceName,"Stored ProcError for  :ISEC,E,%s,%s,%s,null,A,null,IMPORT_HR,IMPORT_HR:",
																	c_l_empl_id,c_l_emp_pan_no,c_l_mtch_acnt_id);
					fn_userlog(c_ServiceName,"Error Message from IED proc is :%s:",c_l_error_msg);
					if(strncmp(c_l_error_msg,"Employee Already Exists.",24) != 0 )      /** Ver 4.1 **/
					{	
						fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );   /*** Ver 3.7 ***/
          	continue;
					}
       }
			/** ver 3.5 Ends **/ 
			}	/** Ver 3.9 **/
      if ( fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg ) == -1 )
      {
        fn_userlog (c_ServiceName,"Failed in loop commit transaction |LOOP|-|%ld| ", l_l_inner_counter);
        fn_errlog ( c_ServiceName, "S31620", SQLMSG, c_errmsg);
        return (-1);
      }
      
  		DEFLOG3 fn_userlog(c_ServiceName,"----------------------------------------------");  
		} /* End of for loop */
   
    free(ptr_emp_list);
    
    DEFLOG3 fn_print_date_time();
  }

  /*** Ver 2.8 Starts ***/

  if (fn_updt_isec_empnm(i) )
  {
    fn_errlog(c_ServiceName, "S31625", "Error while calling fn_updt_isec_empnm", c_errmsg );
    return (-1);
  }

  /*** Ver 2.8 Ends ***/
  
  DEFLOG3 fn_userlog(c_ServiceName,"Function fn_apply_isecemp_scheme Completed ----");

  return (0);
  
} /****End of call_isec_procedure() ****/   /**** Ver 1.1 Ends  ****/

/******************************************************************************/

/***** Ver 1.4 starts here *****/
 
 /***********************************************************************************************
       This function will find the new employee and insert into ITE table. 
       Also it finds resign employee and delete the employee plus dependent data from ITE 
       and at the same time it insert same data into log table.
  ************************************************************************************************/ 
 
int fn_emp_ite_upld(int i)
{
  EXEC SQL BEGIN DECLARE SECTION;
  sql_cursor     sys_cursor;
  long  l_l_inner_counter=0;
  long  l_l_record_count=0;
  long  l_l_new_emp_count=0;
  long  l_l_rgn_emp_count=0;
  long  l_match_id_cnt=0;
  char  c_l_mtch_acnt_id[11]={'\0'};
  char  c_l_empl_id[34]={'\0'};
  char  c_l_serial_no[11]={'\0'};
  char  c_iai_match_type[51]={'\0'};
  char  c_l_emp_pan_no[11]={'\0'};
  int  i_exist_count;  /** Ver 1.5 ***/
  char c_EMP_match_id[11]={'\0'}; /** Ver 3.9 **/
  char c_EMP_id[34]={'\0'};       /** Ver 3.9 **/
  char c_EMP_name[91]={'\0'};     /** Ver 3.9 **/
  char c_EMP_pan_no[11]={'\0'};   /** Ver 3.9 **/
  int  i_reltive_cd = 0 ;         /** Ver 3.9 **/
  typedef struct ___list
  {
    char mtch_id[11];
    char empl_id[34];
    char empl_pan_no[11];
    int  reltive_cd;       /*** Ver 3.9 ***/
  } st_emp_list;

  st_emp_list * ptr_emp_list = NULL;

  EXEC SQL   END DECLARE SECTION;

  char  c_orgn_cd[6];

  strcpy( c_orgn_cd, var_st_iom_mstr[i].iom_org_cd);
  rtrim(c_orgn_cd);

  DEFLOG3 fn_userlog(c_ServiceName," Inside fn_emp_ite_upld Function------");

  if( strcmp( c_orgn_cd , "BANK" ) == 0)
  {
    EXEC SQL
    SELECT
      COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
    INTO :l_l_new_emp_count
    FROM
      HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
    WHERE
      HEE_NATIONAL_ID   = ICD_PAN_NO
      AND HEE_NATIONAL_ID  !='NA'               /*** Ver 1.5 ***/
      AND ICD_SERIAL_NO = IAI_SERIAL_NO
      AND HEE_EMPL_STATUS IN ( 'A' , 'L' )			/* A -ACTIVE L -LONG LEAVE */
      AND HEE_SOURCE = 'ICICI BANK'
      AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT
      AND UAC_ACT_DEACT_FLG <> 'S'
      AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
      AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
      AND IAI_MATCH_ACCOUNT_NO NOT IN
        (SELECT ITE_MTCH_ACCNT FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgn_cd );

   if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
   {
     fn_errlog ( c_ServiceName, "S31630", SQLMSG, c_errmsg  );
     fn_userlog(c_ServiceName,c_errmsg);
     return (-1);
   }
  }
  else if(  strcmp( c_orgn_cd , "ISEC" ) == 0)
  {
    EXEC SQL
     SELECT
     COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
      INTO :l_l_new_emp_count
      FROM
      HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts 
      WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA'           /*** Ver 1.5 ***/
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS = 'Y'
        AND HEE_SOURCE = 'ICICI SECURITIES'       
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT 
        AND UAC_ACT_DEACT_FLG <> 'S'                   
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
        AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
        AND IAI_MATCH_ACCOUNT_NO NOT IN
           (SELECT ITE_MTCH_ACCNT FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgn_cd);

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
      fn_errlog ( c_ServiceName, "S31635", SQLMSG, c_errmsg  );
      fn_userlog(c_ServiceName,c_errmsg);
      return (-1);
    }
  }
  else if(strcmp(var_st_iom_mstr[i].iom_org_cd,"IPRD") == 0) /** Ver 2.0 Starts Here **/
  {
   EXEC SQL
       SELECT
         COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
       INTO :l_l_new_emp_count
       FROM
        HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts /** Ver 1.2 **/
       WHERE
         HEE_NATIONAL_ID   = ICD_PAN_NO
         AND HEE_NATIONAL_ID  !='NA'
         AND ICD_SERIAL_NO = IAI_SERIAL_NO
         AND HEE_EMPL_STATUS = 'A'
         AND HEE_SOURCE = 'ICICI PRUDENTIAL'
         AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT
         AND UAC_ACT_DEACT_FLG <> 'S'
         AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
         AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
         AND IAI_MATCH_ACCOUNT_NO NOT IN
           (SELECT ITE_MTCH_ACCNT FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd);
  }
  else if( strcmp( var_st_iom_mstr[i].iom_org_cd,"ILOM" ) == 0)  /** Ver 2.1 starts ****/
  {
    EXEC SQL
    SELECT
      COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
    INTO :l_l_new_emp_count
    FROM
      HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
    WHERE
      HEE_NATIONAL_ID   = ICD_PAN_NO
      AND HEE_NATIONAL_ID  !='NA'             
      AND ICD_SERIAL_NO = IAI_SERIAL_NO
      AND HEE_EMPL_STATUS ='A'  							/* A -ACTIVE */
      AND HEE_SOURCE = 'ICICI LOMBARD'
      AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT
      AND UAC_ACT_DEACT_FLG <> 'S'
      AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
      AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
      AND IAI_MATCH_ACCOUNT_NO NOT IN
        (SELECT ITE_MTCH_ACCNT FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgn_cd );

   if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
   {
     fn_errlog ( c_ServiceName, "S31640", SQLMSG, c_errmsg  );
     fn_userlog(c_ServiceName,c_errmsg);
     return (-1);
   }
  } /*** Ver 2.1 **/
	else if(strcmp( var_st_iom_mstr[i].iom_org_cd,"PAMC") == 0) /** Ver 2.2 starts **/
	{
    EXEC SQL
    SELECT
      COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
    INTO :l_l_new_emp_count
    FROM
      HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
    WHERE
      HEE_NATIONAL_ID   = ICD_PAN_NO
      AND HEE_NATIONAL_ID  !='NA'             
      AND ICD_SERIAL_NO = IAI_SERIAL_NO
      AND HEE_EMPL_STATUS ='A'  							/* A -ACTIVE */
      AND HEE_SOURCE = 'ICICI PRUDAMC'
      AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT
      AND UAC_ACT_DEACT_FLG <> 'S'
      AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
      AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
      AND IAI_MATCH_ACCOUNT_NO NOT IN
        (SELECT ITE_MTCH_ACCNT FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgn_cd );

   	if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
   	{
     	fn_errlog ( c_ServiceName, "S31645", SQLMSG, c_errmsg  );
     	fn_userlog(c_ServiceName,c_errmsg);
     	return (-1);
   	}
	}
  fn_userlog(c_ServiceName," New Emp Count %ld ",l_l_new_emp_count );

  if (l_l_new_emp_count > 0)
  {
    /*Allocate*/
    ptr_emp_list=calloc(sizeof(st_emp_list),l_l_new_emp_count );

    if (ptr_emp_list == NULL )
    {
      fn_errlog ( c_ServiceName, "S31650", SQLMSG, c_errmsg  );
      fn_userlog(c_ServiceName,"Unable to create NEW Emp list ");
      return (-1);
    }

    EXEC SQL ALLOCATE :sys_cursor;
    
    if( strcmp( c_orgn_cd , "BANK" ) == 0)
    {
     EXEC SQL EXECUTE
      BEGIN
          OPEN :sys_cursor FOR  
        SELECT DISTINCT IAI_MATCH_ACCOUNT_NO, 
        HEE_EMPLID,
        HEE_NATIONAL_ID,
        0                /** Added 0 for Dependent Flag in Ver 3.9 **/
      FROM
        HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
      WHERE
        HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA'             /*** Ver 1.5 ***/
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS IN ( 'A' , 'L' )  /* A -ACTIVE L -LONG LEAVE */
        AND HEE_SOURCE = 'ICICI BANK'
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT
        AND UAC_ACT_DEACT_FLG <> 'S'
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
        AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
        AND IAI_MATCH_ACCOUNT_NO NOT IN
          (SELECT ITE_MTCH_ACCNT FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgn_cd);

      END;
     END-EXEC;
    }
    else if( strcmp( c_orgn_cd , "ISEC" ) == 0)
    {
      EXEC SQL EXECUTE
      BEGIN
      OPEN :sys_cursor FOR
      SELECT DISTINCT
        IAI_MATCH_ACCOUNT_NO, HEE_EMPLID, HEE_NATIONAL_ID, 
        NVL(HEE_RELATION_CD,0)    /** Ver 3.9 **/
      FROM
        HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts 
      WHERE
        HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA'               /*** Ver 1.5 ***/
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS = 'Y'
        AND HEE_SOURCE = 'ICICI SECURITIES'        
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT 
        AND UAC_ACT_DEACT_FLG <> 'S'                  
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
        AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
        AND IAI_MATCH_ACCOUNT_NO NOT IN
          (SELECT ITE_MTCH_ACCNT FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgn_cd
           UNION
           SELECT NVL(ITE_RELATIVE_MTCH,'NA') FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgn_cd); /*** Union added in Ver 3.9 ***/
      END;
     END-EXEC;   
    }
    else if(strcmp(c_orgn_cd,"IPRD") == 0)  /** Ver 2.0 Starts Here **/
    {
     EXEC SQL  EXECUTE
          BEGIN
            OPEN  :sys_cursor FOR
      SELECT DISTINCT
        IAI_MATCH_ACCOUNT_NO, HEE_EMPLID, HEE_NATIONAL_ID,0 /** Added 0 for Dependent Flag in Ver 3.9 **/
      FROM
        HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
      WHERE
        HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA'
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS = 'A'
        AND HEE_SOURCE = 'ICICI PRUDENTIAL'
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT
        AND UAC_ACT_DEACT_FLG <> 'S'
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
        AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
        AND IAI_MATCH_ACCOUNT_NO NOT IN
          (SELECT ITE_MTCH_ACCNT FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgn_cd);
      END;
      END-EXEC;
    }  /*** Ver 2.0 Ends Here ***/ 
    else if( strcmp( c_orgn_cd , "ILOM" ) == 0)		/** Ver 2.1 starts **/
    {
     EXEC SQL EXECUTE
      BEGIN
          OPEN :sys_cursor FOR  
        SELECT DISTINCT IAI_MATCH_ACCOUNT_NO, 
        HEE_EMPLID,
        HEE_NATIONAL_ID,
        0 /** Added 0 for Dependent Flag in Ver 3.9 **/
      FROM
        HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
      WHERE
        HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA'            
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS =  'A' 
        AND HEE_SOURCE = 'ICICI LOMBARD'
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT
        AND UAC_ACT_DEACT_FLG <> 'S'
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
        AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
        AND IAI_MATCH_ACCOUNT_NO NOT IN
          (SELECT ITE_MTCH_ACCNT FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgn_cd);

      END;
     END-EXEC;
    }		/*** Ver 2.1 Ends **/
    else if( strcmp( c_orgn_cd , "PAMC" ) == 0)		/** Ver 2.2 starts **/
    {
     EXEC SQL EXECUTE
      BEGIN
          OPEN :sys_cursor FOR  
        SELECT DISTINCT IAI_MATCH_ACCOUNT_NO, 
        HEE_EMPLID,
        HEE_NATIONAL_ID,
        0                  /** Added 0 for Dependent Flag in Ver 3.9 **/
      FROM
        HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
      WHERE
        HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA'            
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS =  'A' 
        AND HEE_SOURCE = 'ICICI PRUDAMC'
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT
        AND UAC_ACT_DEACT_FLG <> 'S'
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
        AND IAI_MATCH_ACCOUNT_STATUS='35'    /** Ver 4.2 **/
        AND IAI_MATCH_ACCOUNT_NO NOT IN
          (SELECT ITE_MTCH_ACCNT FROM ITE_INSD_TRD_EMP_MSTR WHERE ITE_CMPY_ID = :c_orgn_cd);
      END;
     END-EXEC;
    }		/*** Ver 2.2 Ends **/
    /*Load*/
    EXEC SQL
      FOR :l_l_new_emp_count
    FETCH :sys_cursor 
    INTO :ptr_emp_list;

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
      fn_errlog ( c_ServiceName, "S31655", SQLMSG, c_errmsg  );
      EXEC SQL CLOSE :sys_cursor;
      EXEC SQL FREE :sys_cursor;
      return (-2);
    }

    EXEC SQL CLOSE :sys_cursor;
    EXEC SQL FREE :sys_cursor;

    DEFLOG3 fn_print_date_time();

    for(l_l_inner_counter=0;l_l_inner_counter < l_l_new_emp_count ; l_l_inner_counter++)
    {

       strcpy(c_l_mtch_acnt_id,ptr_emp_list[l_l_inner_counter].mtch_id );
       strcpy(c_l_empl_id,ptr_emp_list[l_l_inner_counter].empl_id );
       i_reltive_cd = ptr_emp_list[l_l_inner_counter].reltive_cd;   /** Ver 3.9 **/
       trim(c_l_empl_id);
       /*** Ver 1.2 Starts ***/
       l_match_id_cnt =0;
       strcpy(c_l_emp_pan_no,ptr_emp_list[l_l_inner_counter].empl_pan_no );
       EXEC SQL
         SELECT count(IAI_MATCH_ACCOUNT_NO)
           INTO :l_match_id_cnt
           FROM ICD_INFO_CLIENT_DTLS,IAI_INFO_ACCOUNT_INFO
          where ICD_SERIAL_NO = IAI_SERIAL_NO
            AND ICD_PAN_NO=:c_l_emp_pan_no;
       if ( SQLCODE != 0 )
       {
        fn_errlog ( c_ServiceName, "S31660", SQLMSG, c_errmsg  );
        return (-1);
       }
       if( l_match_id_cnt > 1 )
       {
        fn_errlog ( c_ServiceName, "S31665","Match count > 1 for one pan id ",c_errmsg  );
        fn_userlog(c_ServiceName,"PAN No %s has multiple Match account attached",c_l_emp_pan_no);
        fn_userlog(c_ServiceName," So Match id %s is skipped",c_l_mtch_acnt_id);
        continue;
       }

       /*** Ver 1.2 Ends ***/
       DEFLOG5 fn_userlog(c_ServiceName,"******************* NEW EMP CALL ********************* " );
       DEFLOG3 fn_userlog(c_ServiceName," NEWEMP MTCH :|%s| EMID |%s|",c_l_mtch_acnt_id,c_l_empl_id);

       i_g_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
       if ( i_g_trnsctn == -1 )
       {
        fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
        fn_errlog ( c_ServiceName, "S31670", TPMSG, c_errmsg  );
        return (-1);
       }

       EXEC SQL
         SELECT IAI_SERIAL_NO, NVL(IAI_TYPE,'RI')
         INTO   :c_l_serial_no, :c_iai_match_type
         FROM   IAI_INFO_ACCOUNT_INFO
         WHERE  IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;

       if ( ( SQLCODE == TOO_MANY_ROWS_FETCHED ) || ( SQLCODE == NO_DATA_FOUND ) )
       {
        fn_errlog ( c_ServiceName, "S31675", SQLMSG, c_errmsg  );
        fn_userlog (c_ServiceName," Skipping :%s: No / Multiple entries in IAI",c_l_mtch_acnt_id);
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
        continue;
       }

       if ( SQLCODE != 0 )
       {
         fn_errlog ( c_ServiceName, "S31680", SQLMSG, c_errmsg  );
         fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
         return (-1);
       }
       fn_userlog (c_ServiceName," c_orgn_cd :%s:",c_orgn_cd);
       if( strcmp( c_orgn_cd , "BANK" ) == 0)
       {
        EXEC SQL
        INSERT INTO ITE_INSD_TRD_EMP_MSTR
            ( ITE_MTCH_ACCNT,
              ITE_EMP_ID,
              ITE_EMP_NAME,
              ITE_PAN_NO,
              ITE_CMPY_ID,
              ITE_CTGRY_LVL,
              ITE_ENTERED_BY,
              ITE_ENTERED_DT,
              ITE_MODIFIED_BY,
              ITE_MODIFIED_DT,
              ITE_RELATION_CODE,
              ITE_RELATIVE_MTCH,
              ITE_ICIS_FLAG,
              ITE_ICIS_ERR_TEXT,
              ITE_AUTHRZTN_FLG,        /** Ver 2.3 **/
              ITE_AUTHRZTN_DT          /** Ver 2.3 **/
            )
            SELECT
             IAI_MATCH_ACCOUNT_NO  ,
             HEE_EMPLID ,
             HEE_NAME ,
             HEE_NATIONAL_ID ,
             :var_st_iom_mstr[i].iom_org_cd,
             'N' ,
             :c_ServiceName,
             SYSDATE , NULL , NULL , NULL , NULL , :c_l_success_flag , :c_l_error_msg,
             'Y',                       /** Ver 2.3 **/
             sysdate                    /** Ver 2.3 **/
             FROM
             HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO
             WHERE
             HEE_NATIONAL_ID   = ICD_PAN_NO
             AND ICD_SERIAL_NO = IAI_SERIAL_NO
             AND HEE_EMPL_STATUS IN ( 'A' , 'L' )  /* A -active L -long leave */
             AND HEE_SOURCE ='ICICI BANK' 
             AND IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;
         
       if ( SQLCODE != 0 )
       {
        fn_errlog ( c_ServiceName, "S31685", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
        return (-1);
       }
      }
      else if( strcmp( c_orgn_cd , "ISEC" ) == 0)
      {
        /*** Ver 3.9 Starts ***/
        if ( i_reltive_cd != 0)
        {
       		MEMSET(c_EMP_match_id);
       		MEMSET(c_EMP_id);
       		MEMSET(c_EMP_name);
       		MEMSET(c_EMP_pan_no);

          EXEC SQL
          SELECT IAI_MATCH_ACCOUNT_NO ,
                 HEE_EMPLID ,
                 HEE_NAME ,
                 HEE_NATIONAL_ID
          into   :c_EMP_match_id,
                 :c_EMP_id,
                 :c_EMP_name,
                 :c_EMP_pan_no
          FROM
          HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO
          WHERE
          HEE_NATIONAL_ID   = ICD_PAN_NO
          AND ICD_SERIAL_NO = IAI_SERIAL_NO
          AND HEE_EMPL_STATUS = decode(:c_hee_source,'ICICI SECURITIES','Y','ICICI PRUDENTIAL','A','ICICI VENTURE','Y')
          AND HEE_SOURCE   = :c_hee_source
          AND NVL(HEE_RELATION_CD,0) = 0
          AND HEE_EMPLID = :c_l_empl_id
					AND  rownum <2;

          if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
          {
            fn_errlog ( c_ServiceName, "S31690", SQLMSG, c_errmsg  );
            fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
            return (-1);
          }
      		if(SQLCODE == NO_DATA_FOUND )
       		{
         		fn_userlog(c_ServiceName,"Case of dependent have trading account but employee do not have");
        		EXEC SQL
          		select 'NA',
                 TRIM(HEE_EMPLID) ,
                 HEE_NAME ,
                 TRIM(HEE_NATIONAL_ID)
         	 		into   :c_EMP_match_id,
                 :c_EMP_id,
                 :c_EMP_name,
                 :c_EMP_pan_no
          		FROM   HEE_HR_EMP_EXTRCT
          		WHERE  HEE_EMPLID = :c_l_empl_id
          		AND    HEE_SOURCE   = :c_hee_source
          		AND    HEE_EMPL_STATUS = decode(:c_hee_source,'ICICI SECURITIES','Y','ICICI PRUDENTIAL','A','ICICI VENTURE','Y')
          		AND    NVL(HEE_RELATION_CD,0) = 0;
          	if ( SQLCODE != 0 )
          	{
            	fn_errlog ( c_ServiceName, "S31695", SQLMSG, c_errmsg  );
            	fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
            	return (-1);
          	}
        	}
          EXEC SQL
          INSERT INTO ITE_INSD_TRD_EMP_MSTR
                    ( ITE_MTCH_ACCNT,
                      ITE_EMP_ID,
                      ITE_EMP_NAME,
                      ITE_PAN_NO,
                      ITE_CMPY_ID,
                      ITE_CTGRY_LVL,
                      ITE_ENTERED_BY,
                      ITE_ENTERED_DT,
                      ITE_MODIFIED_BY,
                      ITE_MODIFIED_DT,
                      ITE_RELATION_CODE,
                      ITE_RELATIVE_MTCH,
                      ITE_ICIS_FLAG,
                      ITE_ICIS_ERR_TEXT,
                      ITE_AUTHRZTN_FLG,           
                      ITE_AUTHRZTN_DT,            
                      ITE_DEPENDENT_EMP_ID,       
                      ITE_DEPENDENT_EMP_NAME,     
                      ITE_DEPENDENT_PAN_NO,       
                      ITE_DEPENDENT_CMPY_ID       
                    )
                 SELECT
                 :c_EMP_match_id,
                 :c_EMP_id,      
                 :c_EMP_name,    
                 :c_EMP_pan_no,   
                 :var_st_iom_mstr[i].iom_org_cd,
                 'N' ,
                 :c_ServiceName,
                 SYSDATE , NULL , NULL , 
	            	 :i_reltive_cd , 
		             IAI_MATCH_ACCOUNT_NO , 
		             :c_l_success_flag , :c_l_error_msg,
                 'Y',
                 sysdate,
                 HEE_EMPLID ,
                 nvl(HEE_NAME,'NA') ,
                 HEE_NATIONAL_ID ,
		             'NA'
                 FROM
                 HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO
                 WHERE
                 HEE_NATIONAL_ID   = ICD_PAN_NO
                 AND ICD_SERIAL_NO = IAI_SERIAL_NO
                 AND HEE_EMPL_STATUS = decode(:c_hee_source,'ICICI SECURITIES','Y','ICICI PRUDENTIAL','A','ICICI VENTURE','Y') 
                 AND HEE_NATIONAL_ID = :c_l_emp_pan_no  
                 AND HEE_SOURCE   = :c_hee_source 
                 AND HEE_EMPLID = :c_l_empl_id  
		             AND NVL(HEE_RELATION_CD,0) != 0
                 AND IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;

        if ( SQLCODE != 0 )
        {
          fn_errlog ( c_ServiceName, "S31700", SQLMSG, c_errmsg  );
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg ); /**** Ver 1.4 ****/
          return (-1);
        }
     }
       /*** Ver 3.9 Ends ***/

      else if ( i_reltive_cd == 0)  /** Else condition added in Ver 3.9 **/
      {
       EXEC SQL
       INSERT INTO ITE_INSD_TRD_EMP_MSTR
            ( ITE_MTCH_ACCNT,
              ITE_EMP_ID,
              ITE_EMP_NAME,
              ITE_PAN_NO,
              ITE_CMPY_ID,
              ITE_CTGRY_LVL,
              ITE_ENTERED_BY,
              ITE_ENTERED_DT,
              ITE_MODIFIED_BY,
              ITE_MODIFIED_DT,
              ITE_RELATION_CODE,
              ITE_RELATIVE_MTCH,
              ITE_AUTHRZTN_FLG,        /** Ver 2.3 **/
              ITE_AUTHRZTN_DT          /** Ver 2.3 **/
            )
            SELECT
             IAI_MATCH_ACCOUNT_NO  ,
             HEE_EMPLID ,
             HEE_NAME ,
             HEE_NATIONAL_ID ,
             :var_st_iom_mstr[i].iom_org_cd,
             'N' ,
             :c_ServiceName,
             SYSDATE , NULL , NULL , NULL , NULL,
             'Y',                       /** Ver 2.3 **/
             sysdate                    /** Ver 2.3 **/
             FROM
             HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO
             WHERE
             HEE_NATIONAL_ID   = ICD_PAN_NO
             AND ICD_SERIAL_NO = IAI_SERIAL_NO
             AND HEE_EMPL_STATUS = 'Y'
             AND HEE_SOURCE = 'ICICI SECURITIES' 
             AND NVL(HEE_RELATION_CD,0) = 0  /** Ver 3.9 **/
             AND IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;
       if ( SQLCODE != 0 )
       {
         fn_errlog ( c_ServiceName, "S31705", SQLMSG, c_errmsg  );
         fn_userlog(c_ServiceName," Error in insert ");
         fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
         return (-1);
       }
      } 
     }
     else if( strcmp( c_orgn_cd , "IPRD" ) == 0)  /*** Ver 2.0 Starts HERE **/
     {
       EXEC SQL
       INSERT INTO ITE_INSD_TRD_EMP_MSTR
            ( ITE_MTCH_ACCNT,
              ITE_EMP_ID,
              ITE_EMP_NAME,
              ITE_PAN_NO,
              ITE_CMPY_ID,
              ITE_CTGRY_LVL,
              ITE_ENTERED_BY,
              ITE_ENTERED_DT,
              ITE_MODIFIED_BY,
              ITE_MODIFIED_DT,
              ITE_RELATION_CODE,
              ITE_RELATIVE_MTCH,
              ITE_AUTHRZTN_FLG,        /** Ver 2.3 **/
              ITE_AUTHRZTN_DT          /** Ver 2.3 **/
            )
            SELECT
             IAI_MATCH_ACCOUNT_NO  ,
             HEE_EMPLID ,
             HEE_NAME ,
             HEE_NATIONAL_ID ,
             :var_st_iom_mstr[i].iom_org_cd,
             'N' ,
             :c_ServiceName,
             SYSDATE , NULL , NULL , NULL , NULL,
             'Y',                       /** Ver 2.3 **/
             sysdate                    /** Ver 2.3 **/
             FROM
             HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO
             WHERE
             HEE_NATIONAL_ID   = ICD_PAN_NO
             AND ICD_SERIAL_NO = IAI_SERIAL_NO
             AND HEE_EMPL_STATUS = 'A'
             AND HEE_SOURCE = 'ICICI PRUDENTIAL'
             AND IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;
       if ( SQLCODE != 0 )
       {
         fn_errlog ( c_ServiceName, "S31710", SQLMSG, c_errmsg  );
         fn_userlog(c_ServiceName," Error in insert ");
         fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
         return (-1);
       }
     }  /*** Ver 2.0 Ends Here ***/
     else if( strcmp( c_orgn_cd , "ILOM" ) == 0) /*** Ver 2.1 Starts **/
     {
        EXEC SQL
        INSERT INTO ITE_INSD_TRD_EMP_MSTR
            ( ITE_MTCH_ACCNT,
              ITE_EMP_ID,
              ITE_EMP_NAME,
              ITE_PAN_NO,
              ITE_CMPY_ID,
              ITE_CTGRY_LVL,
              ITE_ENTERED_BY,
              ITE_ENTERED_DT,
              ITE_MODIFIED_BY,
              ITE_MODIFIED_DT,
              ITE_RELATION_CODE,
              ITE_RELATIVE_MTCH,
              ITE_ICIS_FLAG,
              ITE_ICIS_ERR_TEXT,
              ITE_AUTHRZTN_FLG,        /** Ver 2.3 **/
              ITE_AUTHRZTN_DT          /** Ver 2.3 **/
            )
            SELECT
             IAI_MATCH_ACCOUNT_NO  ,
             HEE_EMPLID ,
             HEE_NAME ,
             HEE_NATIONAL_ID ,
             :var_st_iom_mstr[i].iom_org_cd,
             'N' ,
             :c_ServiceName,
             SYSDATE , NULL , NULL , NULL , NULL , :c_l_success_flag , :c_l_error_msg,
             'Y',                       /** Ver 2.3 **/
             sysdate                    /** Ver 2.3 **/
             FROM
             HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO
             WHERE
             HEE_NATIONAL_ID   = ICD_PAN_NO
             AND ICD_SERIAL_NO = IAI_SERIAL_NO
             AND HEE_EMPL_STATUS ='A' 
             AND HEE_SOURCE ='ICICI LOMBARD' 
             AND IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;
         
       if ( SQLCODE != 0 )
       {
        fn_errlog ( c_ServiceName, "S31715", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
        return (-1);
       }
     } /*** Ver 2.1 Ends **/
     else if( strcmp( c_orgn_cd , "PAMC" ) == 0) /*** Ver 2.2 Starts **/
     {
        EXEC SQL
        INSERT INTO ITE_INSD_TRD_EMP_MSTR
            ( ITE_MTCH_ACCNT,
              ITE_EMP_ID,
              ITE_EMP_NAME,
              ITE_PAN_NO,
              ITE_CMPY_ID,
              ITE_CTGRY_LVL,
              ITE_ENTERED_BY,
              ITE_ENTERED_DT,
              ITE_MODIFIED_BY,
              ITE_MODIFIED_DT,
              ITE_RELATION_CODE,
              ITE_RELATIVE_MTCH,
              ITE_ICIS_FLAG,
              ITE_ICIS_ERR_TEXT,
              ITE_AUTHRZTN_FLG,        /** Ver 2.3 **/
              ITE_AUTHRZTN_DT          /** Ver 2.3 **/
            )
            SELECT
             IAI_MATCH_ACCOUNT_NO  ,
             HEE_EMPLID ,
             HEE_NAME ,
             HEE_NATIONAL_ID ,
             :var_st_iom_mstr[i].iom_org_cd,
             'N' ,
             :c_ServiceName,
             SYSDATE , NULL , NULL , NULL , NULL , :c_l_success_flag , :c_l_error_msg,
             'Y',                       /** Ver 2.3 **/
             sysdate                    /** Ver 2.3 **/             
             FROM
             HEE_HR_EMP_EXTRCT , ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO
             WHERE
             HEE_NATIONAL_ID   = ICD_PAN_NO
             AND ICD_SERIAL_NO = IAI_SERIAL_NO
             AND HEE_EMPL_STATUS ='A' 
             AND HEE_SOURCE ='ICICI PRUDAMC' 
             AND IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;
         
       if ( SQLCODE != 0 )
       {
        fn_errlog ( c_ServiceName, "S31720", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
        return (-1);
       }
     } /*** Ver 2.2 Ends **/

     EXEC SQL
      UPDATE HEE_HR_EMP_EXTRCT
        SET
        HEE_ITE_INSERT   = 'Y',
        HEE_PRCS_COMMENT = 'NEW Employee.'
      WHERE
        HEE_EMPLID  = :c_l_empl_id
        AND HEE_NATIONAL_ID = :c_l_emp_pan_no ;  /** Ver 2.0 **/ 
 
      if ( SQLCODE != 0 )
      {
        fn_errlog ( c_ServiceName, "S31725", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
        return (-1);
      }

      DEFLOG5 fn_userlog (c_ServiceName," NEMP HEE UPD %d ", SQL_ROW_COUNT );

      if ( fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg ) == -1 )
      {
        fn_userlog (c_ServiceName,"Failed in loop commit transaction |LOOP|-|%ld| ", l_l_inner_counter);
        fn_errlog ( c_ServiceName, "S31730", SQLMSG, c_errmsg);
        return (-1);
      }
    } /* End of for loop - for new employees */

    /*  Free the List*/
    free(ptr_emp_list);

    DEFLOG3 fn_print_date_time();
  }
  /**************************************************************************************
   Finding the Resign employees and deleting them from ITE after taking dump in ITL Log
  **************************************************************************************/


  if( strcmp( c_orgn_cd , "BANK" ) == 0)
  {
   EXEC SQL
    SELECT
        COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
    INTO
        :l_l_rgn_emp_count
    FROM
        HEE_HR_EMP_EXTRCT ,
        ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts 
    WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
      AND HEE_NATIONAL_ID  !='NA'              /*** Ver 1.5 ***/
      AND ICD_SERIAL_NO     = IAI_SERIAL_NO
      AND HEE_EMPL_STATUS NOT IN ( 'A' , 'L' )
      AND HEE_SOURCE = 'ICICI BANK'         
      AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT 
      AND UAC_ACT_DEACT_FLG <> 'S'                  
      AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H') 
      AND IAI_MATCH_ACCOUNT_NO IN
          ( SELECT DISTINCT ITE_MTCH_ACCNT
            FROM ITE_INSD_TRD_EMP_MSTR
            WHERE ITE_CMPY_ID = :c_orgn_cd 
          );

   }
   else if( strcmp( c_orgn_cd , "ISEC" ) == 0) 
   {
     EXEC SQL
      SELECT
            COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
      INTO
        :l_l_rgn_emp_count
      FROM
        HEE_HR_EMP_EXTRCT ,
        ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
      WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
      AND HEE_NATIONAL_ID  !='NA'                  /*** Ver 1.5 ***/
      AND ICD_SERIAL_NO     = IAI_SERIAL_NO
      AND HEE_EMPL_STATUS != 'Y'
      AND HEE_SOURCE = 'ICICI SECURITIES'   
      AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT 
      AND UAC_ACT_DEACT_FLG <> 'S'              
      AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
      AND IAI_MATCH_ACCOUNT_NO IN
          ( SELECT DISTINCT ITE_MTCH_ACCNT
            FROM ITE_INSD_TRD_EMP_MSTR
            WHERE ITE_CMPY_ID = :c_orgn_cd
          );
   }
   else if(strcmp(var_st_iom_mstr[i].iom_org_cd,"IPRD") == 0)  /** Ver 2.0 Starts Here **/
   {
    EXEC SQL
    SELECT
        COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
    INTO
        :l_l_rgn_emp_count
    FROM
        HEE_HR_EMP_EXTRCT ,
        ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
    WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
      AND HEE_NATIONAL_ID  !='NA'
      AND ICD_SERIAL_NO     = IAI_SERIAL_NO
      AND HEE_EMPL_STATUS != 'A'
      AND HEE_SOURCE = 'ICICI PRUDENTIAL'
      AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT
      AND UAC_ACT_DEACT_FLG <> 'S'
      AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
      AND IAI_MATCH_ACCOUNT_NO IN
          ( SELECT
              DISTINCT ITE_MTCH_ACCNT
            FROM
              ITE_INSD_TRD_EMP_MSTR
            WHERE
              ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd);

   }
   else if( strcmp( c_orgn_cd , "ILOM" ) == 0)  /*** Ver 2.1 for ILOMBARD starts **/
   {
   	EXEC SQL
    	SELECT
        	COUNT(DISTINCT IAI_MATCH_ACCOUNT_NO)
    	INTO
        	:l_l_rgn_emp_count
    	FROM
        	HEE_HR_EMP_EXTRCT ,
        	ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts 
    	WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
      AND HEE_NATIONAL_ID  !='NA'              
      AND ICD_SERIAL_NO     = IAI_SERIAL_NO
      AND HEE_EMPL_STATUS !=  'A'
      AND HEE_SOURCE = 'ICICI LOMBARD'         
      AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT 
      AND UAC_ACT_DEACT_FLG <> 'S'                  
      AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H') 
      AND IAI_MATCH_ACCOUNT_NO IN
          ( SELECT DISTINCT ITE_MTCH_ACCNT
            FROM ITE_INSD_TRD_EMP_MSTR
            WHERE ITE_CMPY_ID = :c_orgn_cd 
          );

   }		/** Ver 2.1 Ends **/
   else if( strcmp( c_orgn_cd , "PAMC" ) == 0)  /*** Ver 2.2 for PRUDAMC starts **/
   {
		EXEC SQL
			SELECT COUNT(distinct ITE_PAN_NO)
    	INTO   :l_l_rgn_emp_count
      FROM   ITE_INSD_TRD_EMP_MSTR,UAC_USR_ACCNTS
      WHERE  ITE_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
			AND		 UAC_ACT_DEACT_FLG <> 'S'
    	AND  	 ITE_CMPY_ID = :c_orgn_cd
    	AND    ITE_PAN_NO not in
                            (   SELECT distinct HEE_NATIONAL_ID
                                FROM    HEE_HR_EMP_EXTRCT
                                WHERE   HEE_SOURCE ='ICICI PRUDAMC'
                            );

   }		/** Ver 2.2 Ends **/
   fn_userlog(c_ServiceName," Rsgn Emp Count %ld ",l_l_rgn_emp_count );

   if (l_l_rgn_emp_count > 0 )
   {
    /*Allocate*/
     ptr_emp_list=calloc(sizeof(st_emp_list),l_l_rgn_emp_count );

     if (ptr_emp_list == NULL )
     {
      fn_errlog ( c_ServiceName, "S31735", SQLMSG, c_errmsg  );
      fn_userlog(c_ServiceName,"Unable to create NEW Emp list ");
      return (-1);
     }
     l_match_id_cnt=0;

     EXEC SQL ALLOCATE :sys_cursor;

     if( strcmp( c_orgn_cd , "BANK" ) == 0)
     {
       EXEC SQL EXECUTE
       BEGIN
        OPEN  :sys_cursor FOR
       SELECT
        IAI_MATCH_ACCOUNT_NO , HEE_EMPLID,HEE_NATIONAL_ID
       FROM
          HEE_HR_EMP_EXTRCT ,
          ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts 
       WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA'                  /*** Ver 1.5 ***/
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS NOT IN ( 'A' , 'L' )
				AND HEE_SOURCE = 'ICICI BANK'		
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT  
        AND UAC_ACT_DEACT_FLG <> 'S'                   
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
        AND IAI_MATCH_ACCOUNT_NO IN
            ( SELECT DISTINCT ITE_MTCH_ACCNT
              FROM ITE_INSD_TRD_EMP_MSTR
              WHERE ITE_CMPY_ID = :c_orgn_cd 
            );
      END;
      END-EXEC;
     }
     else if( strcmp(c_orgn_cd , "ISEC" ) == 0)
     {
       EXEC SQL EXECUTE
       BEGIN
        OPEN  :sys_cursor FOR
       SELECT
        IAI_MATCH_ACCOUNT_NO , HEE_EMPLID,HEE_NATIONAL_ID 
       FROM
          HEE_HR_EMP_EXTRCT ,
          ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
       WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA'                /*** Ver 1.5 ***/ 
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS != 'Y'
        AND HEE_SOURCE = 'ICICI SECURITIES'    
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT 
        AND UAC_ACT_DEACT_FLG <> 'S'            
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H') 
        AND IAI_MATCH_ACCOUNT_NO IN
            ( SELECT DISTINCT ITE_MTCH_ACCNT
              FROM   ITE_INSD_TRD_EMP_MSTR
              WHERE  ITE_CMPY_ID = :c_orgn_cd 
            );
 
      END;
      END-EXEC;
     }
     else if( strcmp(c_orgn_cd , "IPRD" ) == 0)  /** Ver 2.0 Starts HERE ***/
     {
       EXEC SQL EXECUTE
       BEGIN
        OPEN  :sys_cursor FOR
       SELECT
        IAI_MATCH_ACCOUNT_NO , HEE_EMPLID,HEE_NATIONAL_ID
       FROM
          HEE_HR_EMP_EXTRCT ,
          ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts
       WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA'      
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS != 'A'
        AND HEE_SOURCE = 'ICICI PRUDENTIAL'
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT
        AND UAC_ACT_DEACT_FLG <> 'S'
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
        AND IAI_MATCH_ACCOUNT_NO IN
            ( SELECT DISTINCT ITE_MTCH_ACCNT
              FROM   ITE_INSD_TRD_EMP_MSTR
              WHERE  ITE_CMPY_ID = :c_orgn_cd
            );

      END;
      END-EXEC;
     }        /*** Ver 2.0 Ends Here ****/
     else if( strcmp( c_orgn_cd , "ILOM" ) == 0)  /** Ver 2.1 starts **/
     {
       EXEC SQL EXECUTE
       BEGIN
        OPEN  :sys_cursor FOR
       SELECT
        IAI_MATCH_ACCOUNT_NO , HEE_EMPLID,HEE_NATIONAL_ID
       FROM
          HEE_HR_EMP_EXTRCT ,
          ICD_INFO_CLIENT_DTLS, IAI_INFO_ACCOUNT_INFO,uac_usr_accnts 
       WHERE HEE_NATIONAL_ID   = ICD_PAN_NO
        AND HEE_NATIONAL_ID  !='NA' 
        AND ICD_SERIAL_NO = IAI_SERIAL_NO
        AND HEE_EMPL_STATUS !='A'
				AND HEE_SOURCE = 'ICICI LOMBARD'
        AND IAI_MATCH_ACCOUNT_NO = UAC_CLM_MTCH_ACCNT  
        AND UAC_ACT_DEACT_FLG <> 'S'                   
        AND ICD_PAN_NO NOT IN ('SIKKIMCATG', 'APPLIEDFOR', 'AAACI1195H')
        AND IAI_MATCH_ACCOUNT_NO IN
            ( SELECT DISTINCT ITE_MTCH_ACCNT
              FROM ITE_INSD_TRD_EMP_MSTR
              WHERE ITE_CMPY_ID = :c_orgn_cd 
            );
      END;
      END-EXEC;
     }		/** ver 2.1 Ends **/
     else if( strcmp( c_orgn_cd , "PAMC" ) == 0)  /** Ver 2.2 starts **/
     {
       EXEC SQL EXECUTE
       BEGIN
        OPEN  :sys_cursor FOR
       SELECT ITE_MTCH_ACCNT,
               ITE_EMP_ID,
               ITE_PAN_NO
        FROM   ITE_INSD_TRD_EMP_MSTR,UAC_USR_ACCNTS
        WHERE  ITE_MTCH_ACCNT = UAC_CLM_MTCH_ACCNT
				AND		 UAC_ACT_DEACT_FLG <> 'S'
				AND 	 ITE_CMPY_ID = :c_orgn_cd 
        AND    ITE_PAN_NO not in
                                 (  SELECT  distinct HEE_NATIONAL_ID
                                    FROM    HEE_HR_EMP_EXTRCT
                                    WHERE   HEE_SOURCE = 'ICICI PRUDAMC' 
                                  );
      END;
      END-EXEC;
     }		/** ver 2.2 Ends **/
 
    if ( SQLCODE != 0 )
    {
      fn_errlog ( c_ServiceName, "S31740", SQLMSG, c_errmsg  );
      sprintf(c_errmsg,"Cursor creation failed with  :%s  ",sqlca.sqlerrm.sqlerrmc);
      fn_userlog(c_ServiceName,c_errmsg);

      return (-1);
    }
    /*Load*/
    EXEC SQL
      FOR :l_l_rgn_emp_count
    FETCH  :sys_cursor 
    INTO :ptr_emp_list;

    if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
    {
      fn_errlog ( c_ServiceName, "S31745", SQLMSG, c_errmsg  );
      return (-2);
    }

    EXEC SQL CLOSE :sys_cursor;
    EXEC SQL FREE :sys_cursor;

    DEFLOG3 fn_print_date_time();

    for(l_l_inner_counter=0;l_l_inner_counter < l_l_rgn_emp_count ; l_l_inner_counter++)
    {
        strcpy(c_l_mtch_acnt_id,ptr_emp_list[l_l_inner_counter].mtch_id );
        strcpy(c_l_empl_id,ptr_emp_list[l_l_inner_counter].empl_id );
        trim(c_l_empl_id);
        /*** Ver 1.2 Starts ***/
        l_match_id_cnt=0;
        strcpy(c_l_emp_pan_no,ptr_emp_list[l_l_inner_counter].empl_pan_no );
        EXEC SQL
          SELECT count(IAI_MATCH_ACCOUNT_NO)
            INTO :l_match_id_cnt
            FROM ICD_INFO_CLIENT_DTLS,IAI_INFO_ACCOUNT_INFO
           where ICD_SERIAL_NO = IAI_SERIAL_NO
             AND ICD_PAN_NO=:c_l_emp_pan_no;

        if ( SQLCODE != 0 )
        {
         fn_errlog ( c_ServiceName, "S31750", SQLMSG, c_errmsg  );
         return (-1);
        }

        if( l_match_id_cnt > 1 )
        {
         fn_errlog ( c_ServiceName, "S31755","Match count > 1 for one pan id ",c_errmsg  );
         fn_userlog(c_ServiceName,"PAN No %s has multiple Match account attached",c_l_emp_pan_no);
         fn_userlog(c_ServiceName," So Match id %s is skipped",c_l_mtch_acnt_id);
         continue;
        }
 
        /*** Ver 1.5 Starts Here ****/
         i_exist_count=0;

        if( strcmp(c_orgn_cd , "ISEC" ) == 0)
        { 
         EXEC SQL
         SELECT  count(1)
           INTO  :i_exist_count
           FROM  HEE_HR_EMP_EXTRCT
          WHERE  HEE_NATIONAL_ID=:c_l_emp_pan_no
            AND  HEE_SOURCE='ICICI SECURITIES'
            AND  HEE_EMPL_STATUS='Y';

         if ( SQLCODE != 0 )
         {
          fn_errlog ( c_ServiceName, "S31760", SQLMSG, c_errmsg  );
          return (-1);
         }

        }
        else if( strcmp(c_orgn_cd , "BANK" ) == 0)
        {
         EXEC SQL
         SELECT  count(1)
           INTO  :i_exist_count
           FROM  HEE_HR_EMP_EXTRCT
          WHERE  HEE_NATIONAL_ID=:c_l_emp_pan_no
            AND  HEE_SOURCE='ICICI BANK'
            AND  HEE_EMPL_STATUS in ('A','L');

          if ( SQLCODE != 0 )
          {
           fn_errlog ( c_ServiceName, "S31765", SQLMSG, c_errmsg  );
           return (-1);
          }
        }
        else if( strcmp(c_orgn_cd , "IPRD" ) == 0)
        {
         EXEC SQL
         SELECT  count(1)
           INTO  :i_exist_count
           FROM  HEE_HR_EMP_EXTRCT
          WHERE  HEE_NATIONAL_ID=:c_l_emp_pan_no
            AND  HEE_SOURCE='ICICI PRUDENTIAL'
            AND  HEE_EMPL_STATUS in ('A');

          if ( SQLCODE != 0 )
          {
           fn_errlog ( c_ServiceName, "S31770", SQLMSG, c_errmsg  );
           return (-1);
          }
        }
        else if( strcmp(c_orgn_cd , "ILOM" ) == 0) /** Ver 2.1 starts **/
        {
         EXEC SQL
         SELECT  count(1)
           INTO  :i_exist_count
           FROM  HEE_HR_EMP_EXTRCT
          WHERE  HEE_NATIONAL_ID=:c_l_emp_pan_no
            AND  HEE_SOURCE='ICICI LOMBARD'
            AND  HEE_EMPL_STATUS ='A';

          if ( SQLCODE != 0 )
          {
           fn_errlog ( c_ServiceName, "S31775", SQLMSG, c_errmsg  );
           return (-1);
          }
        }  /** ver 2.1 Ends ***/

         if( i_exist_count > 0 )
         {
          fn_errlog ( c_ServiceName, "S31780","Record exists as new ISEC Employee so Skip Resign Apply",c_errmsg  );
          fn_userlog(c_ServiceName,"PAN No %s two records with two employee status",c_l_emp_pan_no);
          fn_userlog(c_ServiceName,"So Match id %s is skipped",c_l_mtch_acnt_id);
          continue;
         }

        /*** Ver 1.5 Ends here *****/

        DEFLOG5 fn_userlog(c_ServiceName,"******************* RSGN EMP CALL ********************* " );
        DEFLOG3 fn_userlog(c_ServiceName,"RSGN MTCH :|%s| EMID |%s|",c_l_mtch_acnt_id , c_l_empl_id);

        i_g_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
        if ( i_g_trnsctn == -1 )
        {
            fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
            fn_errlog ( c_ServiceName, "S31785", TPMSG, c_errmsg );
            return(-1);
        }

        EXEC SQL
          SELECT IAI_SERIAL_NO, NVL(IAI_TYPE,'RI')
          INTO   :c_l_serial_no, :c_iai_match_type
          FROM
              IAI_INFO_ACCOUNT_INFO
          WHERE
              IAI_MATCH_ACCOUNT_NO = :c_l_mtch_acnt_id;

        if ( ( SQLCODE == TOO_MANY_ROWS_FETCHED ) || ( SQLCODE == NO_DATA_FOUND ) )
        {
          fn_errlog ( c_ServiceName, "S31790", SQLMSG, c_errmsg  );
          fn_userlog (c_ServiceName," Skipping :%s: No / Multiple entries in IAI",c_l_mtch_acnt_id);
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
          continue;
        }

        if ( SQLCODE != 0 )
        {
          fn_errlog ( c_ServiceName, "S31795", SQLMSG, c_errmsg  );
          return (-1);
        }

       EXEC SQL
       INSERT
         INTO ITL_INSD_TRD_EMP_MSTR_LOG
              ( ITL_MTCH_ACCNT,
                ITL_EMP_ID,
                ITL_EMP_NAME,
                ITL_PAN_NO,
                ITL_CMPY_ID,
                ITL_CTGRY_LVL,
                ITL_MODIFIED_BY,
                ITL_MODIFIED_DT,
                ITL_RELATION_CODE,
                ITL_RELATIVE_MTCH,
                ITL_ICIS_FLAG,
                ITL_ICIS_ERR_TEXT,
                ITL_MODIFICATION,
                ITL_DEPENDENT_EMP_ID,
                ITL_DEPENDENT_EMP_NAME,
                ITL_DEPENDENT_PAN_NO,
                ITL_DEPENDENT_CMPY_ID,
                ITL_AUTHRZTN_FLG,           /** Ver 2.3 **/
                ITL_AUTHRZTN_DT             /** Ver 2.3 **/ 
              )
         SELECT
          ITE_MTCH_ACCNT  ,
          ITE_EMP_ID      ,
          ITE_EMP_NAME    ,
          ITE_PAN_NO      ,
          ITE_CMPY_ID     ,
          ITE_CTGRY_LVL   ,
          :c_ServiceName  ,
          SYSDATE         ,
          ITE_RELATION_CODE,
          ITE_RELATIVE_MTCH,
          ITE_ICIS_FLAG    ,
          ITE_ICIS_ERR_TEXT,
          'Deleted as resigned from company -'|| :var_st_iom_mstr[i].iom_org_cd || to_char(SYSDATE,'dd-mon-yyyy hh24:mi:ss'),
          ITE_DEPENDENT_EMP_ID,
          nvl(ITE_DEPENDENT_EMP_NAME,'NA'),
          ITE_DEPENDENT_PAN_NO,
          ITE_DEPENDENT_CMPY_ID,
          NVL(ITE_AUTHRZTN_FLG,'N'),           /** Ver 2.3 **/
          NVL(ITE_AUTHRZTN_DT,'01-Nov-19800')  /** Ver 2.3 **/
        FROM  ITE_INSD_TRD_EMP_MSTR
        WHERE ITE_MTCH_ACCNT = :c_l_mtch_acnt_id;

      if ( ( SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND) )
      {
        fn_errlog ( c_ServiceName, "S31800", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
        return (-1);
      }

      DEFLOG3 fn_userlog (c_ServiceName," RSGN ITL INS-1 %d ", SQL_ROW_COUNT );

      EXEC SQL
        DELETE FROM ITE_INSD_TRD_EMP_MSTR
        WHERE DECODE(:i_reltive_cd,0,NVL(ITE_MTCH_ACCNT,'NA'),NVL(ITE_RELATIVE_MTCH,'NA')) = :c_l_mtch_acnt_id 
        AND   ITE_CMPY_ID = :var_st_iom_mstr[i].iom_org_cd; /** Decode and ITE_CMPY_ID added in Ver 3.9 **/

      if ( ( SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND) )
      {
        fn_errlog ( c_ServiceName, "S31805", SQLMSG, c_errmsg  );
        return (-1);
      }

      EXEC SQL
      UPDATE HEE_HR_EMP_EXTRCT
      SET    HEE_ITE_INSERT   = 'D',
             HEE_PRCS_COMMENT = 'Resigned EMP .'
      WHERE  HEE_EMPLID  = :c_l_empl_id
        AND  HEE_NATIONAL_ID = :c_l_emp_pan_no ;  /** Ver 2.0 **/
      if ( SQLCODE != 0 )
      {
        fn_errlog ( c_ServiceName, "S31810", SQLMSG, c_errmsg  );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
        return (-1);
      }

      DEFLOG5 fn_userlog (c_ServiceName," RSGN HEE UPD %d ", SQL_ROW_COUNT );

      if ( fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg ) == -1 )
      {
        fn_userlog (c_ServiceName,"Failed in loop commit transaction |LOOP|-|%ld| ", l_l_inner_counter);
        fn_errlog ( c_ServiceName, "S31815", SQLMSG, c_errmsg);
        return (-1);
      }
    } /* End of for loop */

    /*  Free the List*/
    free(ptr_emp_list);

    DEFLOG3 fn_print_date_time();
  }

  fn_userlog(c_ServiceName," ---- ITE Upload Completed ----");
  return (0);
}
/***** Ver 1.4 Ends Here *******/

int fn_bat_init ( int argc, char *argv[] )                                      
{                                                                               
  fn_var = BAT_IMPORT_HR_DATA;                                                    
  return 0;                                                                     
}                                                                               
                                                                                
void fn_bat_term ( int argc, char *argv[] )                                     
{                                                                               
  return;                                                                       
}

int fn_prcs_trg ( char *c_pgm_nm, int i_trg_typ )
{
  return 0;
}

void fn_print_date_time()
{
  EXEC SQL BEGIN DECLARE SECTION;
  char c_date_time[30];
  EXEC SQL END   DECLARE SECTION;
  
  EXEC SQL
  SELECT
  to_char(SYSDATE , 'dd-Mon-yyyy--hh24:mi:ss')
  INTO :c_date_time
  from dual;

  if ( SQLCODE != 0 )
  {
    fn_errlog ( c_ServiceName, "S31820", SQLMSG, c_errmsg  );
    return ;
  }
  
  trim(c_date_time);
  fn_userlog (c_ServiceName," ----------------  Time : %s  ---------------- ",c_date_time);  
}

char *trim(char *str)
{
  int i;
  for (i=0;i<strlen(str);i++)
    if (str[i]==' ') str[i]='\0';

  return(str);
}

/*** Function Added in Ver 1.8 ***/

int fn_chng_ite_match (char *mtch_acnt_no)
{

	DEFLOG3 
		fn_userlog(c_ServiceName,"Inside fn_chng_ite_match for Match id :%s:", mtch_acnt_no);

	i_g_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  
	if ( i_g_trnsctn == -1 )
  {
      fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
      fn_errlog ( c_ServiceName, "S31825", TPMSG, c_errmsg );
      return(-1);
  }
	EXEC SQL 
  	INSERT INTO ITL_INSD_TRD_EMP_MSTR_LOG 
							(
								ITL_MTCH_ACCNT,
 								ITL_EMP_ID,
 								ITL_EMP_NAME,
 								ITL_PAN_NO,
 								ITL_CMPY_ID,
 								ITL_CTGRY_LVL,
 								ITL_MODIFIED_BY,
 								ITL_MODIFIED_DT,
 								ITL_RELATION_CODE,
 								ITL_RELATIVE_MTCH,
 								ITL_ICIS_FLAG,
 								ITL_ICIS_ERR_TEXT,
 								ITL_MODIFICATION,
 								ITL_DEPENDENT_EMP_ID,
 								ITL_DEPENDENT_EMP_NAME,
 								ITL_DEPENDENT_PAN_NO,
 								ITL_DEPENDENT_CMPY_ID
							)
						( SELECT 
								ITE_MTCH_ACCNT,
								ITE_EMP_ID,
								ITE_EMP_NAME,
								ITE_PAN_NO,
								ITE_CMPY_ID,
								ITE_CTGRY_LVL,
								ITE_MODIFIED_BY,
								ITE_MODIFIED_DT,
								ITE_RELATION_CODE,
								ITE_RELATIVE_MTCH,
								ITE_ICIS_FLAG,
								ITE_ICIS_ERR_TEXT,
								'Deleted as the Account has been suspended/disabled',	
								ITE_DEPENDENT_EMP_ID,
								nvl(ITE_DEPENDENT_EMP_NAME,'NA'),
								ITE_DEPENDENT_PAN_NO,
								ITE_DEPENDENT_CMPY_ID 
							FROM ITE_INSD_TRD_EMP_MSTR 
              /** WHERE ITE_MTCH_ACCNT = :mtch_acnt_no ** Commented in Ver 3.9 ***/
             WHERE DECODE(0,0,NVL(ITE_MTCH_ACCNT,'NA'),NVL(ITE_RELATIVE_MTCH,'NA')) = :mtch_acnt_no /** Ver 3.9 **/
            );

 	if ( SQLCODE != 0 )
  {
    fn_errlog ( c_ServiceName, "S31830", SQLMSG, c_errmsg  );
    fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
    return (-1);
  }

	EXEC SQL
	DELETE FROM ITE_INSD_TRD_EMP_MSTR
					WHERE ITE_MTCH_ACCNT = :mtch_acnt_no;

  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
  {
    fn_errlog ( c_ServiceName, "S31835", SQLMSG, c_errmsg  );
    fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
    return (-1);
  }

  if ( fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg ) == -1 )
  {
    fn_userlog (c_ServiceName,"Failed in loop commit transaction."); 
    fn_errlog ( c_ServiceName, "S31840", SQLMSG, c_errmsg);
    return (-1);
  }

	DEFLOG3
		fn_userlog(c_ServiceName,"Successfully Exiting from fn_chng_ite_match for Match id :%s:", mtch_acnt_no);

 	return (0);
}

/**** Function Ends ***/
/***** ver 2.1 starts **********/
int fn_download_lomb_data(int i)
{
 FILE * fpfile=NULL;
 RETCODE rc;
 RETCODE rc1[TOTAL_FML];
 RETCODE i_err[TOTAL_FML];
 HSTMT   hstmt;
 UCHAR sqlstate[10];
 SDWORD  nativeerr;
 char *ptr;
 char c_connect_id[5]={'\0'};

 fn_userlog(c_ServiceName,"***********Inside fn_download_lomb_data Function *****");
 strcpy(c_connect_id,"ILOM");
 ptr=c_connect_id;

  tpsvrinit(5, &ptr);

  rc=SQLAllocStmt (hdbc, &hstmt);

  if ((rc != SQL_SUCCESS) && (rc != SQL_SUCCESS_WITH_INFO))
  {
    fn_userlog(c_ServiceName,"Unable to Allocate a hstmt.");
    return (-1);
  }
  else
  {
    fn_userlog(c_ServiceName,"SQL Allocation done ");
  }

  EXEC SQL
    SELECT to_char(sysdate,'yyyymmdd')
    INTO   :c_g_date
    FROM   dual;

  if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName, "S31845", SQLMSG, c_errmsg );
    return (-1);
  }

  if(tuxgetenv("EBALOG_PATH")== NULL)
  {
    fn_errlog(c_ServiceName, "S31850", TPMSG,c_errmsg);
    fn_userlog(c_ServiceName,"Unable to access EBALOG_PATH location ");
    return (-1);
  }
  strcpy(c_file_path,tuxgetenv("EBALOG_PATH"));
  strcat(c_file_path,"/");
  strcat(c_file_path, c_g_date);
  strcat(c_file_path,"/employee");
  fn_userlog(c_ServiceName,"EBALOG_PATH location %s", c_file_path );

  if (c_file_path[strlen(c_file_path)] == '/')
     strcat(c_file_path,"hr_lomb_data.txt");
  else
     strcat(c_file_path,"/hr_lomb_data.txt");

  fpfile=(FILE *)fopen(c_file_path,"w+");

  if(fpfile==NULL)
  {
    fn_userlog(c_ServiceName,"File opening failed-Path=%s", c_file_path);
    fn_errlog(c_ServiceName, "S31855","File Opening Failed",c_errmsg);
    return (-1);
  }

  DEFLOG3 fn_userlog(c_ServiceName,"File opened %s", c_file_path );

  i_g_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_g_trnsctn == -1 )
  {
      fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
      fn_errlog ( c_ServiceName, "S31860", TPMSG, c_errmsg );
      return(-1);
  }

  EXEC SQL
    DELETE FROM HEE_HR_EMP_EXTRCT where HEE_SOURCE='ICICI LOMBARD';

  if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName, "S31865", SQLMSG, c_errmsg );
    fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
    return (-1);
  }
  DEFLOG3 fn_userlog(c_ServiceName," Old Lombard data deleted ");

  rc = SQLPrepare(hstmt,(UCHAR*)"Select EMPLID,FIRST_NAME,MIDDLE_NAME,LAST_NAME,PAN_NO,JOINING_DATE,EMP_STATUS,RESIGNATION_DATE,SEPARATION_DATE from LomspAdmin.vwSelectAllDetailsOfEmpForISEC",SQL_NTS);
  if ((rc != SQL_SUCCESS) && (rc != SQL_SUCCESS_WITH_INFO))
  {
    fn_userlog(c_ServiceName,"Unable to prepare a hstmt.");
  	fn_userlog (c_ServiceName,"SQLSTATE = %s",sqlstate);
  	fn_userlog (c_ServiceName,"NATIVE ERROR = %d",nativeerr);
		fn_errlog(c_ServiceName,"S31870",ODBC_MSG,c_errmsg);
  	fn_userlog (c_ServiceName,"MSG = %s",c_errmsg);

    fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
    return (-1);
  }
  else
  {
    fn_userlog(c_ServiceName,"SQLPrepare successful " );
  }

  rc = SQLExecute(hstmt);

  if ((rc != SQL_SUCCESS) && (rc != SQL_SUCCESS_WITH_INFO))
  {
    fn_userlog(c_ServiceName,"......SQLExcute has Failed. RC=%d", rc);
    fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
    return (-1);
  }

      ind1=SQL_NTS;
      rc1[0] = SQLBindCol(hstmt,1, SQL_C_CHAR,hee_emplid,               (SDWORD)sizeof(hee_emplid),&ind1);
      rc1[1] = SQLBindCol(hstmt,2, SQL_C_CHAR,hee_first_name,           (SDWORD)sizeof(hee_first_name), &ind1);
      rc1[2] = SQLBindCol(hstmt,3, SQL_C_CHAR,hee_middle_name,          (SDWORD)sizeof(hee_middle_name), &ind1);
      rc1[3] = SQLBindCol(hstmt,4, SQL_C_CHAR,hee_last_name,            (SDWORD)sizeof(hee_last_name), &ind1);
      rc1[4] = SQLBindCol(hstmt,5, SQL_C_CHAR,hee_national_id,          (SDWORD)sizeof(hee_national_id), &ind1);
      rc1[5] = SQLBindCol(hstmt,6, SQL_C_CHAR,hee_hire_dt,             (SDWORD)sizeof(hee_hire_dt),&ind1);
      rc1[6] = SQLBindCol(hstmt,7, SQL_C_CHAR,hee_empl_status,        (SDWORD)sizeof(hee_empl_status), &ind1);
      rc1[7] = SQLBindCol(hstmt,8, SQL_C_CHAR,hee_ici_resignation_dt, (SDWORD)sizeof(hee_ici_resignation_dt), &ind1);
      rc1[8] = SQLBindCol(hstmt,9, SQL_C_CHAR,hee_last_date_worked,   (SDWORD)sizeof(hee_last_date_worked), &ind1);

      for (i=0;i<TOTAL_FML1;i++) /* Check for Errors */
      {
      if ((rc1[i] != SQL_SUCCESS) && (rc1[i] != SQL_SUCCESS_WITH_INFO))
        {
          fn_userlog(c_ServiceName,"Failure in binding " );
          SQLFreeStmt(hstmt, SQL_DROP);
          fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
          return(-1);
        }
      }

  while (1)
  {
    rc = SQLFetch(hstmt);

    if (rc == SQL_NO_DATA_FOUND)
    {
      fn_userlog (c_ServiceName, "SQL_NO_DATA_FOUND...." );
      fn_userlog(c_ServiceName,"End of Data encountered" );
      break;
    }
    if ((rc != SQL_SUCCESS) && (rc != SQL_SUCCESS_WITH_INFO))
    {
      fn_userlog(c_ServiceName,"SQLFetch Error Code %d encountered",rc );
      fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
      return (-1);
    }

      fprintf (
        fpfile,
        "%s|%s|%s|%s|%s|%s|%s|%s|%s|\n",
        hee_emplid,
        hee_first_name,
        hee_middle_name,
        hee_last_name,
        hee_national_id,
        hee_hire_dt,
        hee_empl_status,
        hee_ici_resignation_dt,
        hee_last_date_worked
      );

      /*Terminating the dates so that Oracle does not have format conversion issues*/

      hee_hire_dt[19]='\0';
      hee_ici_resignation_dt[19]='\0';
      hee_last_date_worked[19]='\0';
      counter++;

      DEFLOG3   fn_userlog(c_ServiceName,"[%ld]", counter);
      DEFLOG4   fn_userlog(c_ServiceName,"[%ld] - %s %s ", counter, hee_emplid,hee_first_name);
      DEFLOG5
      fn_userlog(c_ServiceName," Names [%ld]-|%s|%s|%s|%s|%s|%s|%s|%s|%s|",counter,
              hee_emplid,
              hee_first_name,
              hee_middle_name,
              hee_last_name,
              hee_national_id,
							hee_empl_status,
              hee_hire_dt,
        			hee_ici_resignation_dt,
        			hee_last_date_worked
            );

      DEFLOG4 fn_userlog(c_ServiceName,"*********** BEFORE SQLCODE : %d ", SQLCODE);

      EXEC SQL
      INSERT INTO HEE_HR_EMP_EXTRCT
      VALUES
      (
        rtrim(:hee_emplid),
        'NA',
        rtrim(:hee_first_name),
        rtrim(:hee_middle_name),
        rtrim(:hee_last_name),
        'NA',
        decode(:hee_national_id,' ','NA',rtrim(:hee_national_id)),
        'NA',
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        decode (:hee_hire_dt,'0',NULL,to_date(:hee_hire_dt,'YYYY-MM-DD HH24:MI:SS')) ,
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'NA', 'NA', 'NA', 'NA', 'NA', 'NA',
        decode(:hee_empl_status,'Active','A','InActive','N','S'),
        'NA', 'NA', 'NA', 'NA', 'NA', 'NA', null, null, 'NA', 'NA',
        'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA',
        'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA',
        'NA',
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', null, 'NA', 'NA', 'NA',
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA',
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        decode (:hee_ici_resignation_dt, '0',NULL,to_date(:hee_ici_resignation_dt,'YYYY-MM-DD HH24:MI:SS')),
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        decode (:hee_last_date_worked, '0',NULL,to_date(:hee_last_date_worked,'YYYY-MM-DD HH24:MI:SS')),
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
				'NA', 'NA', 'NA',
        to_date(SYSDATE,'DD-Mon-YYYY'),
        'NA',
        'N',
        'N',
        'Fresh Record',
        'ICICI LOMBARD',
        'N',
        '000000',
        'N',
        '',   /*** Ver 3.0 Starts Here, Default values **/
        '',
        '',
        '',
        '',
        '',
        '',
        '',   /*** Ver 3.0 Ends Here **/
				'',   /*** Ver 3.1 **/
        '',    /*** Ver 3.1 **/
        null,   /** Ver 3.8 **/ 
        ''    /** Ver 4.0 **/
      );

      DEFLOG4     fn_userlog(c_ServiceName,"---------- AFTER SQLCODE : %d ", SQLCODE);

      if ( SQLCODE != 0 )
      {
        fn_errlog(c_ServiceName, "S31875", SQLMSG, c_errmsg );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
        return (-1);
      } 
     	fn_userlog(c_ServiceName,"After Insert");
  } /* End of while */
	
   fclose(fpfile);
   if ( fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg ) == -1 )
    {
      fn_errlog ( c_ServiceName, "S31880", SQLMSG, c_errmsg);
      return (-1);
    }

  DEFLOG3 fn_userlog(c_ServiceName," ----Function  en_download_lomb_data Completed---- ");
	/*tpsvrdone();*/
  return (0);

}/** End of fn_fetch_lomb_data **/
/*** Ver 2.1 ends **/
/***** ver 2.2 starts **********/
int fn_download_pruamc_data(int i)
{
 FILE * fpfile=NULL;
 RETCODE rc;
 RETCODE rc1[TOTAL_FML];
 RETCODE i_err[TOTAL_FML];
 HSTMT   hstmt;
 UCHAR sqlstate[10];
 SDWORD  nativeerr;
 char *ptr;
 char c_connect_id[5]={'\0'};
 char c_orgnisation[25];
 char c_grade[51];
 char c_Designation[51];
 char c_Dependent_Name[51];					/** Ver 3.4 **/
 char c_Depenedent_Relation[51];		/** Ver 3.4 **/

 fn_userlog(c_ServiceName,"***********Inside fn_download_pruamc_data Function *****");
 strcpy(c_connect_id,"PAMC");
 ptr=c_connect_id;

 tpsvrinit(5, &ptr);

 rc=SQLAllocStmt (hdbc, &hstmt);

 if ((rc != SQL_SUCCESS) && (rc != SQL_SUCCESS_WITH_INFO))
 {
   fn_userlog(c_ServiceName,"Unable to Allocate a hstmt.");
   return (-1);
 }
 else
 {
   fn_userlog(c_ServiceName,"SQL Allocation done ");
 }
 i_g_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
 if ( i_g_trnsctn == -1 )
 {
   fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
   fn_errlog ( c_ServiceName, "S31885", TPMSG, c_errmsg );
   return(-1);
 }
 EXEC SQL
   DELETE FROM HEE_HR_EMP_EXTRCT_TEMP where HEE_SOURCE='ICICI PRUDAMC';

 if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
 {
   fn_errlog(c_ServiceName, "S31890", SQLMSG, c_errmsg );
   fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
   return (-1);
 }
 EXEC SQL
   INSERT INTO HEE_HR_EMP_EXTRCT_TEMP( SELECT * FROM HEE_HR_EMP_EXTRCT WHERE HEE_SOURCE ='ICICI PRUDAMC');  

 if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
 {
   fn_errlog(c_ServiceName, "S31895", SQLMSG, c_errmsg );
   fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
   return (-1);
 }
 EXEC SQL
    DELETE FROM HEE_HR_EMP_EXTRCT where HEE_SOURCE='ICICI PRUDAMC';

  if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName, "S31900", SQLMSG, c_errmsg );
    fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
    return (-1);
  }
  DEFLOG3 fn_userlog(c_ServiceName," Old PRUDAMC data deleted ");

  /*rc = SQLPrepare(hstmt,(UCHAR*)"Select employee_employee_id,employee_legal_name,employee_effective_from_date,employee_employee_status,pan_number from dbo.EMPLOYEE_IDIRECT_Active",SQL_NTS);*/
  /*rc = SQLPrepare(hstmt,(UCHAR*)"Select * from dbo.EMPLOYEE_IDIRECT_Active",SQL_NTS);   ** Ver 3.4 **/
  rc = SQLPrepare(hstmt,(UCHAR*)"Select * from dbo.View_PAN",SQL_NTS);			/** Ver 3.4 **/

  if ((rc != SQL_SUCCESS) && (rc != SQL_SUCCESS_WITH_INFO))
  {
    fn_userlog(c_ServiceName,"Unable to prepare a hstmt.");
  	fn_userlog (c_ServiceName,"SQLSTATE = %s",sqlstate);
  	fn_userlog (c_ServiceName,"NATIVE ERROR = %d",nativeerr);
		fn_errlog(c_ServiceName,"S31905",ODBC_MSG,c_errmsg);
  	fn_userlog (c_ServiceName,"MSG = %s",c_errmsg);

    fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
    return (-1);
  }
  else
  {
    fn_userlog(c_ServiceName,"SQLPrepare successful " );
  }

  rc = SQLExecute(hstmt);

  if ((rc != SQL_SUCCESS) && (rc != SQL_SUCCESS_WITH_INFO))
  {
    fn_userlog(c_ServiceName,"......SQLExcute has Failed. RC=%d", rc);
    fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
    return (-1);
  }

  ind1=SQL_NTS;
  rc1[0] = SQLBindCol(hstmt,1, SQL_C_CHAR,hee_emplid,(SDWORD)sizeof(hee_emplid),&ind1);
  rc1[1] = SQLBindCol(hstmt,2, SQL_C_CHAR,hee_name,(SDWORD)sizeof(hee_name), &ind1);
  /*rc1[2] = SQLBindCol(hstmt,3, SQL_C_CHAR,c_orgnisation,(SDWORD)sizeof(c_orgnisation), &ind1);
  rc1[3] = SQLBindCol(hstmt,4, SQL_C_CHAR,hee_hire_dt,(SDWORD)sizeof(hee_hire_dt),&ind1);
  rc1[4] = SQLBindCol(hstmt,5, SQL_C_CHAR,hee_empl_status,(SDWORD)sizeof(hee_empl_status), &ind1);
  rc1[5] = SQLBindCol(hstmt,6, SQL_C_CHAR,c_grade,(SDWORD)sizeof(c_grade), &ind1);   
  rc1[6] = SQLBindCol(hstmt,7, SQL_C_CHAR,c_Designation,(SDWORD)sizeof(c_Designation), &ind1);  Ver 3.4 comment **/
  rc1[2] = SQLBindCol(hstmt,3, SQL_C_CHAR,c_Dependent_Name,(SDWORD)sizeof(c_Dependent_Name), &ind1);		/** Ver 3.4 **/
  rc1[3] = SQLBindCol(hstmt,4, SQL_C_CHAR,c_Depenedent_Relation,(SDWORD)sizeof(c_Depenedent_Relation), &ind1);/** Ver 3.4 **/
  rc1[4] = SQLBindCol(hstmt,5, SQL_C_CHAR,hee_national_id,(SDWORD)sizeof(hee_national_id), &ind1);

  for (i=0;i<5;i++) /* Check for Errors */			/** ver 3.4 changed to 5 from 8 **/
  {
     if ((rc1[i] != SQL_SUCCESS) && (rc1[i] != SQL_SUCCESS_WITH_INFO))
     {
        fn_userlog(c_ServiceName,"Failure in binding " );
        SQLFreeStmt(hstmt, SQL_DROP);
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
        return(-1);
      }
   }

  while (1)
  {
    memset(hee_national_id,'\0',sizeof(hee_national_id)); /** Ver 2.7 ***/
   memset(hee_emplid,'\0',sizeof(hee_emplid)); /** Ver 2.7 ***/
   memset(hee_hire_dt,'\0',sizeof(hee_hire_dt)); /** Ver 2.7 ***/
   memset(c_orgnisation,'\0',sizeof(c_orgnisation)); /** Ver 2.7 ***/
   memset(c_grade,'\0',sizeof(c_grade)); /** Ver 2.7 ***/
   memset(c_Designation,'\0',sizeof(c_Designation)); /** Ver 2.7 ***/
   memset(hee_name,'\0',sizeof(hee_name)); /** Ver 2.7 ***/
   memset(c_Dependent_Name,'\0',sizeof(c_Dependent_Name)); 					 /** Ver 3.4 ***/
   memset(c_Depenedent_Relation,'\0',sizeof(c_Depenedent_Relation)); /** Ver 3.4 ***/

    rc = SQLFetch(hstmt);

    if (rc == SQL_NO_DATA_FOUND)
    {
      fn_userlog (c_ServiceName, "SQL_NO_DATA_FOUND...." );
      fn_userlog(c_ServiceName,"End of Data encountered" );
      break;
    }
    if ((rc != SQL_SUCCESS) && (rc != SQL_SUCCESS_WITH_INFO))
    {
      fn_userlog(c_ServiceName,"SQLFetch Error Code %d encountered",rc );
      fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
      return (-1);
    }

    if(strcmp(hee_national_id,"") ==0 )  /** Ver 2.7 ***/
    {
      strcpy(hee_national_id,"NA");
    }

     counter++;
     DEFLOG0   fn_userlog(c_ServiceName,"[%ld]", counter);
     DEFLOG4   fn_userlog(c_ServiceName,"[%ld] - %s %s ", counter, hee_emplid,hee_name);
     DEFLOG0
     /* fn_userlog(c_ServiceName," Names [%ld]-|%s|%s|%s|%s|%s|%s|%s|%s|",counter,
              hee_emplid,
              hee_name,
							c_orgnisation,
              hee_national_id,
							hee_empl_status,
              hee_hire_dt,
							c_grade,
							c_Designation
            ); ** ver 3.4 comment **/
      fn_userlog(c_ServiceName," Names [%ld]-|%s|%s|%s|%s|%s|",counter,
              hee_emplid,
              hee_name,
              c_Dependent_Name,
              c_Depenedent_Relation,
              hee_national_id
            );			/** ver 3.4 **/

     DEFLOG4 fn_userlog(c_ServiceName,"*********** BEFORE SQLCODE : %d ", SQLCODE);
		if((strcmp(c_Dependent_Name,"Self") ==0) || (strcmp(c_Dependent_Name," Self") ==0)  )			/** Ver 3.4 **/
		{
     EXEC SQL
      INSERT INTO HEE_HR_EMP_EXTRCT
      VALUES
      (
        rtrim(:hee_emplid),
        'NA',
        'NA',
        'NA',
        'NA',
        rtrim(:hee_name),
        rtrim(:hee_national_id),
        'NA',
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        /*to_date(substr(:hee_hire_dt,1,19),'YYYY-MM-DD HH24:MI:SS'),   *** Ver 3.4 comment **/
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),					/** Ver 3.4 **/
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'NA', 'NA', 'NA', 'NA', 'NA', 'NA',
        /*Decode(rtrim(:hee_empl_status),'Active','A'),									*** Ver 3.4 comment **/
        'A',
        'NA', 'NA', 'NA', 'NA', 'NA', 'NA', null, null, 'NA', 'NA',
        'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA',
        'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA',
        'NA',
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', null, 'NA', 'NA', 'NA',
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA',
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        to_date('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
				'NA', 'NA', 'NA',
        to_date(SYSDATE,'DD-Mon-YYYY'),
        'NA',
        'N',
        'N',
        'Fresh Record',
        'ICICI PRUDAMC',
        'N',
        '000000',
        'N',
        '',   /*** Ver 3.0 Starts Here, default values **/
        '',
        '',
        '',
        '',
        '',
        '',
        '',   /*** Ver 3.0 Ends Here **/
				'',   /*** Ver 3.1 **/
        '',    /*** Ver 3.1 **/
        null,   /** Ver 3.8 **/
        ''    /** Ver 4.0 **/
       );

     DEFLOG4     fn_userlog(c_ServiceName,"---------- AFTER SQLCODE : %d ", SQLCODE);

     if ( SQLCODE != 0 )
     {
        fn_errlog(c_ServiceName, "S31910", SQLMSG, c_errmsg );
        fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
        return (-1);
     }
     	fn_userlog(c_ServiceName,"After Insert");
		}																														/** Ver 3.4 else introuduced **/
		else
		{
			fn_userlog(c_ServiceName,"Depenedent Data for PAN:%s: not inserted in HEE",hee_national_id);
		}																														/** Ver 3.4 **/
  } /* End of while */
	
  if ( fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg ) == -1 )
  {
      fn_errlog ( c_ServiceName, "S31915", SQLMSG, c_errmsg);
      return (-1);
  }

  DEFLOG3 fn_userlog(c_ServiceName," ----Function  en_download_lomb_data Completed---- ");
	/*tpsvrdone();*/
  return (0);
}

      /*** Ver 2.8 Starts ***/
int fn_updt_isec_empnm(int i)
{
  i_g_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_g_trnsctn == -1 )
  {
   fn_userlog (c_ServiceName,"Failed in initial begin transaction in fn_updt_isec_empnm ");
   fn_errlog ( c_ServiceName, "S31920", TPMSG, c_errmsg );
   return(-1);
  }

   EXEC SQL
   UPDATE ITE_INSD_TRD_EMP_MSTR
      SET ITE_EMP_NAME=(SELECT decode(HEE_FIRST_NAME,'NA','',HEE_FIRST_NAME)||' '||decode(HEE_MIDDLE_NAME,'NA','',HEE_MIDDLE_NAME)||' '||decode(HEE_LAST_NAME,'NA','',HEE_LAST_NAME) 
                          FROM HEE_HR_EMP_EXTRCT
                         WHERE HEE_NATIONAL_ID=ITE_PAN_NO
                           AND HEE_EMPL_STATUS='Y'
                           AND HEE_NAME is NOT NULL
                           AND ITE_EMP_ID=HEE_EMPLID
                           AND HEE_SOURCE='ICICI SECURITIES'
                           AND ITE_CMPY_ID='ISEC'
                           )
    WHERE ITE_CMPY_ID='ISEC'
      AND (ITE_PAN_NO,ITE_EMP_ID) in (
                                       select HEE_NATIONAL_ID,ITE_EMP_ID
                                         from HEE_HR_EMP_EXTRCT,ITE_INSD_TRD_EMP_MSTR
                                        WHERE HEE_SOURCE='ICICI SECURITIES'
                          								AND ITE_EMP_ID=HEE_EMPLID
                                          AND HEE_NAME is NOT NULL
                                          AND HEE_EMPL_STATUS='Y'
                                     );

  if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
    fn_errlog(c_ServiceName, "S4.000", SQLMSG, c_errmsg );
    fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
    return (-1);
  }

   if ( fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg ) == -1 )
  {
      fn_errlog ( c_ServiceName, "S4.005", SQLMSG, c_errmsg);
      return (-1);
  }

return (0);
}
    /*** Ver 2.8 Ends ***/

/*** ver 2.9 Starts here ***/

int fn_rvrt_data_tmptomaintab(char *c_hee_source)
{
  int i_g_trnsctn=0;

  fn_userlog(c_ServiceName,"Data Revert From Backup table to Main Table Started for :%s:",c_hee_source); 
  i_g_trnsctn = fn_begintran( c_ServiceName, c_errmsg );
  if ( i_g_trnsctn == -1 )
  {
    fn_userlog (c_ServiceName,"Failed in initial begin transaction ");
    fn_errlog ( c_ServiceName, "S4.010", TPMSG, c_errmsg );
    return(-1);
  }

  EXEC SQL
      INSERT INTO HEE_HR_EMP_EXTRCT( SELECT * FROM HEE_HR_EMP_EXTRCT_TEMP WHERE HEE_SOURCE = :c_hee_source);

  if ( ( SQLCODE != 0 ) && ( SQLCODE != NO_DATA_FOUND ) )
  {
   fn_errlog(c_ServiceName, "S4.015", SQLMSG, c_errmsg );
   fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
   return (-1);
  }

  if ( fn_committran( c_ServiceName, i_g_trnsctn, c_errmsg ) == -1 )
  {
    fn_errlog ( c_ServiceName, "S4.020", SQLMSG, c_errmsg);
    fn_aborttran( c_ServiceName, i_g_trnsctn, c_errmsg );
    return (-1);
  }

  fn_userlog(c_ServiceName,"Data Revert From Backup table to Main Table Ended for :%s:",c_hee_source);

return 0;
}


/*** ver 2.9 Ends Here ***/

/*** Ver 4.3 Starts ***/

int fn_emp_CLM_chng( char *c_ServiceName,
                     char *c_mtch_accnt,
                     char c_map_dmap_flg,
                     char *c_errmsg )
{

  ind_clm_lpc_prcntg=0;
  sql_clm_lpc_prcntg=0;

  fn_userlog(c_ServiceName," In side function fn_emp_CLM_chng for  :%s: and :%c: ",c_mtch_accnt,c_map_dmap_flg);

  EXEC SQL
  SELECT CLM_LPC_PRCNTG
  INTO   :sql_clm_lpc_prcntg:ind_clm_lpc_prcntg
  FROM   CLM_CLNT_MSTR
  WHERE  CLM_MTCH_ACCNT = :c_mtch_accnt;

  if(SQLCODE != 0)
  {
    fn_errlog(c_ServiceName, "S31925", SQLMSG, c_errmsg );
    userlog ("Error in select data from CLM_CLNT_MSTR table");
    return -1;
  }

  if( ind_clm_lpc_prcntg == -1 && c_map_dmap_flg == 'M' )
  {

    fn_userlog(c_ServiceName," In side function fn_emp_CLM_chng for  :%s: and :%c: ",c_mtch_accnt,c_map_dmap_flg); 
    EXEC SQL
    UPDATE CLM_CLNT_MSTR
    SET    CLM_LPC_PRCNTG = :d_iom_lpc 
    WHERE  CLM_MTCH_ACCNT = :c_mtch_accnt
    AND    CLM_LPC_PRCNTG IS NULL;

    if(SQLCODE != 0)
    {
      fn_errlog(c_ServiceName, "S31930", SQLMSG, c_errmsg );
      userlog ("Error in updating CLM_CLNT_MSTR table");
      return -1;
    }
 
    EXEC SQL
    INSERT INTO CLM_CLNT_MSTR_MKRCKR
    (
    CLM_SERIAL_NO,
    CLM_MTCH_ACCNT,
    CLM_ORG_IND,
    CLM_CLNT_TTL,
    CLM_CLNT_NM,
    CLM_ACTV_FRM,
    CLM_ACTV_TO,
    CLM_ALLCTD_AMT,
    CLM_PSEUDO_BNK_IND,
    CLM_ACCT_STTS,
    CLM_IBSL_CRDT_XTND,
    CLM_RSTRCT_LST_ID,
    CLM_ACCNT_CTGRY_ID,
    CLM_CLNT_CTGRY_ID,
    CLM_CIF_NMBR,
    CLM_BLK_TRD_AMT,
    CLM_GRSS_EXP_LMT,
    CLM_B2K_CD,
    CLM_TDS_RT,
    CLM_MF_ALLCTD_AMT,
    CLM_GRSS_LMT_UTLZD,
    CLM_WAP_REQ,
    CLM_INST_FLG,
    CLM_WAP_PRECISION,
    CLM_SLCTD_FLG,
    CLM_CLNT_LVL,
    CLM_MF_MAX_OPT,
    CLM_MF_MAX_VAL,
    CLM_BTST_ALLWD_FLG,
    CLM_BP_ID,
    CLM_ALIAS_NAME,
    CLM_TRD_FLG,
    CLM_PRM_BP_ID,
    CLM_LST_UPD_BY,
    CLM_LST_UPD_DT,
    CLM_CLNT_CD,
    CLM_PLG_ALLWD_FLG,
    CLM_NCD_CLNT_LVL,
    CLM_BRKR_PLAN_CD,
    CLM_CP_CD,
    CLM_STATUS,
    CLM_CHECKERTIMESTAMP,
    CLM_MAKERTIMESTAMP,
    CLM_MAKERID,
    CLM_CHECKERID,
    CLM_ACTIONFLAG,
    CLM_REMARK,
    CLM_CREATEDBY,
    CLM_CREATEDON,
    CLM_PNNY_FLG,
    CLM_SPAN_ALLWD,
    CLM_PREPAID_ALLWD,
    CLM_LPC_PRCNTG,
    CLM_NCD_FLG,
    CLM_SQRFMD_STTS,
    CLM_LPC_PRCNTG_PREV
    )
    SELECT
    SEQ_GENERATE_CLM_TABLE.NEXTVAL,
    CLM_MTCH_ACCNT,
    CLM_ORG_IND,
    CLM_CLNT_TTL,
    CLM_CLNT_NM,
    CLM_ACTV_FRM,
    CLM_ACTV_TO,
    CLM_ALLCTD_AMT,
    CLM_PSEUDO_BNK_IND,
    CLM_ACCT_STTS,
    CLM_IBSL_CRDT_XTND,
    CLM_RSTRCT_LST_ID,
    CLM_ACCNT_CTGRY_ID,
    CLM_CLNT_CTGRY_ID,
    CLM_CIF_NMBR,
    CLM_BLK_TRD_AMT,
    CLM_GRSS_EXP_LMT,
    CLM_B2K_CD,
    CLM_TDS_RT,
    CLM_MF_ALLCTD_AMT,
    CLM_GRSS_LMT_UTLZD,
    CLM_WAP_REQ,
    CLM_INST_FLG,
    CLM_WAP_PRECISION,
    CLM_SLCTD_FLG,
    CLM_CLNT_LVL,
    CLM_MF_MAX_OPT,
    CLM_MF_MAX_VAL,
    CLM_BTST_ALLWD_FLG,
    CLM_BP_ID,
    CLM_ALIAS_NAME,
    CLM_TRD_FLG,
    CLM_PRM_BP_ID,
    CLM_LST_UPD_BY,
    CLM_LST_UPD_DT,
    CLM_CLNT_CD,
    CLM_PLG_ALLWD_FLG,
    CLM_NCD_CLNT_LVL,
    CLM_BRKR_PLAN_CD,
    CLM_CP_CD,
    'M',           /*CLM_STATUS*/
    SYSDATE,
    SYSDATE,
    'BAT_HRDATA',
    'BAT_HRDATA',
    'A',           /*CLM_ACTIONFLAG*/
    'Auto checker entry by Process BAT_IMPORT_HR_DATA', /*CLM_REMARK*/
    'BAT_HRDATA',
    SYSDATE,
    CLM_PNNY_FLG,
    CLM_SPAN_ALLWD,
    CLM_PREPAID_ALLWD,
    :d_iom_lpc,   /*CLM_LPC_PRCNTG:From IOM_INFO_ORGANIZATION_MSTR*/
    CLM_NCD_FLG,
    CLM_SQRFMD_STTS,
    NULL /*CLM_LPC_PRCNTG_PREV*/
    FROM  CLM_CLNT_MSTR
    WHERE CLM_MTCH_ACCNT = :c_mtch_accnt;

    if(SQLCODE != 0)
    {
      fn_errlog(c_ServiceName, "S31935", SQLMSG, c_errmsg );
      userlog ("Error in inserting data into CLM_CLNT_MSTR_MKRCKR table");
      return -1;
    }
  }

  if (c_map_dmap_flg == 'D' && sql_clm_lpc_prcntg != 0 && sql_clm_lpc_prcntg == d_iom_lpc )
  {

    EXEC SQL
    UPDATE CLM_CLNT_MSTR
    SET    CLM_LPC_PRCNTG = NULL
    WHERE  CLM_MTCH_ACCNT = :c_mtch_accnt
    AND    CLM_LPC_PRCNTG = :d_iom_lpc;

    if(SQLCODE != 0)
    {
      fn_errlog(c_ServiceName, "S31940", SQLMSG, c_errmsg );
      userlog ("Error in updating CLM_CLNT_MSTR table");
      return -1;
    }
 
    EXEC SQL
    INSERT INTO CLM_CLNT_MSTR_MKRCKR
    (
    CLM_SERIAL_NO,
    CLM_MTCH_ACCNT,
    CLM_ORG_IND,
    CLM_CLNT_TTL,
    CLM_CLNT_NM,
    CLM_ACTV_FRM,
    CLM_ACTV_TO,
    CLM_ALLCTD_AMT,
    CLM_PSEUDO_BNK_IND,
    CLM_ACCT_STTS,
    CLM_IBSL_CRDT_XTND,
    CLM_RSTRCT_LST_ID,
    CLM_ACCNT_CTGRY_ID,
    CLM_CLNT_CTGRY_ID,
    CLM_CIF_NMBR,
    CLM_BLK_TRD_AMT,
    CLM_GRSS_EXP_LMT,
    CLM_B2K_CD,
    CLM_TDS_RT,
    CLM_MF_ALLCTD_AMT,
    CLM_GRSS_LMT_UTLZD,
    CLM_WAP_REQ,
    CLM_INST_FLG,
    CLM_WAP_PRECISION,
    CLM_SLCTD_FLG,
    CLM_CLNT_LVL,
    CLM_MF_MAX_OPT,
    CLM_MF_MAX_VAL,
    CLM_BTST_ALLWD_FLG,
    CLM_BP_ID,
    CLM_ALIAS_NAME,
    CLM_TRD_FLG,
    CLM_PRM_BP_ID,
    CLM_LST_UPD_BY,
    CLM_LST_UPD_DT,
    CLM_CLNT_CD,
    CLM_PLG_ALLWD_FLG,
    CLM_NCD_CLNT_LVL,
    CLM_BRKR_PLAN_CD,
    CLM_CP_CD,
    CLM_STATUS,
    CLM_CHECKERTIMESTAMP,
    CLM_MAKERTIMESTAMP,
    CLM_MAKERID,
    CLM_CHECKERID,
    CLM_ACTIONFLAG,
    CLM_REMARK,
    CLM_CREATEDBY,
    CLM_CREATEDON,
    CLM_PNNY_FLG,
    CLM_SPAN_ALLWD,
    CLM_PREPAID_ALLWD,
    CLM_LPC_PRCNTG,
    CLM_NCD_FLG,
    CLM_SQRFMD_STTS,
    CLM_LPC_PRCNTG_PREV
    )
    SELECT
    SEQ_GENERATE_CLM_TABLE.NEXTVAL,
    CLM_MTCH_ACCNT,
    CLM_ORG_IND,
    CLM_CLNT_TTL,
    CLM_CLNT_NM,
    CLM_ACTV_FRM,
    CLM_ACTV_TO,
    CLM_ALLCTD_AMT,
    CLM_PSEUDO_BNK_IND,
    CLM_ACCT_STTS,
    CLM_IBSL_CRDT_XTND,
    CLM_RSTRCT_LST_ID,
    CLM_ACCNT_CTGRY_ID,
    CLM_CLNT_CTGRY_ID,
    CLM_CIF_NMBR,
    CLM_BLK_TRD_AMT,
    CLM_GRSS_EXP_LMT,
    CLM_B2K_CD,
    CLM_TDS_RT,
    CLM_MF_ALLCTD_AMT,
    CLM_GRSS_LMT_UTLZD,
    CLM_WAP_REQ,
    CLM_INST_FLG,
    CLM_WAP_PRECISION,
    CLM_SLCTD_FLG,
    CLM_CLNT_LVL,
    CLM_MF_MAX_OPT,
    CLM_MF_MAX_VAL,
    CLM_BTST_ALLWD_FLG,
    CLM_BP_ID,
    CLM_ALIAS_NAME,
    CLM_TRD_FLG,
    CLM_PRM_BP_ID,
    CLM_LST_UPD_BY,
    CLM_LST_UPD_DT,
    CLM_CLNT_CD,
    CLM_PLG_ALLWD_FLG,
    CLM_NCD_CLNT_LVL,
    CLM_BRKR_PLAN_CD,
    CLM_CP_CD,
    'M',                /*CLM_STATUS*/
    SYSDATE,
    SYSDATE,
    'BAT_HRDATA',
    'BAT_HRDATA',
    'A',               /*CLM_ACTIONFLAG*/
    'Auto checker entry by Process BAT_IMPORT_HR_DATA', /*CLM_REMARK*/
    'BAT_HRDATA',
    SYSDATE,
    CLM_PNNY_FLG,
    CLM_SPAN_ALLWD,
    CLM_PREPAID_ALLWD,
    NULL,              /*CLM_LPC_PRCNTG*/
    CLM_NCD_FLG,
    CLM_SQRFMD_STTS,
    :sql_clm_lpc_prcntg /*CLM_LPC_PRCNTG_PREV*/
    FROM CLM_CLNT_MSTR
    WHERE CLM_MTCH_ACCNT = :c_mtch_accnt;

    if(SQLCODE != 0)
    {
      fn_errlog(c_ServiceName, "S31945", SQLMSG, c_errmsg );
      userlog ("Error in inserting  data CLM_CLNT_MSTR_MKRCKR table");
      return -1;
    }
  }
return 0;
}

/*** Ver 4.3 Ends ***/
