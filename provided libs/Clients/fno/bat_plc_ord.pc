
/*  Program           : BAT_PLC_ORD                                           */
/*                                                                            */
/*  Input             : contract.csv file                                     */
/*                                                                            */
/*  Output            : Success / Failure                                     */
/*                                                                            */
/*  Description       : Places future,option orders in different contracts,   */
/*                      that are read from contract file.                     */
/*  Log               : 28-Jan-2014 1.0 New Release                           */
/*                    : 15-Jun-2015 1.1 Token no selected from Trade Quote    */
/*                    : 28-Sep-2015 1.2 Contract Master and Trade Quote Table */
/*                                      Merger Changes (Anand Dhopte)         */
/*                    : 02-Jul-2016 1.3 Next trade selection changes(Sachin Birje) */
/*                    : 24-Feb-2017 1.4 Pick contracts not equal to 0(Tanmay) */
/*										: 02-Feb-2021 1.5 Separate EOS for Stock and Index 			*/
/*																			Underlyings in FPSL - Kiran Itkar			*/
/******************************************************************************/
#include <stdio.h>
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <Usysflds.h>
#include <fo.h>
#include <fml_def.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fo_view_def.h>
#include <fml_rout.h>
#include <string.h>
#include <stdlib.h>
#include <fn_read_debug_lvl.h> 


void fo_opnpstn_fn(char *c_file_name, char *c_ServiceName, char *c_err_msg);


void fo_ord_plc(char *c_file_name, char *c_ServiceName, char *c_err_msg);

void fo_ordbk_fn(char *c_file_name, char *c_ServiceName, char *c_err_msg);

void fo_brd(char *c_ServiceName, char *c_err_msg);

void fo_trd_fn(char *c_file_name, char *c_ServiceName, char *c_err_msg);



void BAT_PLC_ORD( int argc, char *argv[] ) 
{

	char c_ServiceName [33];
  char c_err_msg [256];
  char c_run_mod;	
	int i_returncode ;
	char c_file_name[256];
	FBFR32 *ptr_fml_Ibuf;
  FBFR32 *ptr_fml_Obuf;
	char c_errmsg ;
	 

	strcpy(c_ServiceName, argv[0]);
	c_run_mod =  argv[4][0];

	INITBATDBGLVL(argv[0]);

	if(c_run_mod == 'P')
	{
		strcpy(c_file_name, argv[5]);
		
		fo_ord_plc(c_file_name, c_ServiceName, c_err_msg);

  }
	
	else if(c_run_mod == 'B')
	{	
		fo_brd(c_ServiceName, c_err_msg);

 	}
	else if(c_run_mod == 'O')
	{
		strcpy(c_file_name, argv[5]);
		
		fo_ordbk_fn(c_file_name, c_ServiceName, c_err_msg );
		
	}
	else if(c_run_mod == 'T')
	{
		strcpy(c_file_name, argv[5]);
	
	  fo_trd_fn(c_file_name, c_ServiceName, c_err_msg);
	}
	else if(c_run_mod == 'A')
	{
		strcpy(c_file_name, argv[5]);
		
		fo_opnpstn_fn(c_file_name, c_ServiceName, c_err_msg);
	}	

}
	
void fo_ord_plc(char *c_file_name, char *c_ServiceName, char *c_err_msg)
{	
	FBFR32 *ptr_fml_ibuf;
	FBFR32 *ptr_fml_obuf;
 	char c_msg[256];
	char c_usr_id[9];
	char c_data[1024+1];
 	char c_o_data[1024+1];
	long    l_session_id;
	char c_mtch_acc[10 + 1];
	char c_xchng_cd [ 3+1 ];
	char c_prd_typ = '\0';
	char c_undrlyng[10];
	char c_expry_date[21];
 	char c_exer_type = '\0';	
 	char c_opt_type = '\0';
	long l_strike_prc   = 0;
	long l_lmt_prz = 0;
	char c_ctgry_indstk = '\0';
 	char c_ord_flw = '\0';
	long l_disclsed_qt = 0;
	long l_sltp_prz = 0;
	long l_lot_sz = 0 ;
	long l_recvbuf = 0;
	char c_trd_dt[23];
	char c_pipe_id[3];
	char c_lmt_mrkt_flg = '\0';
	char c_spl_flg = '\0';
	char c_ord_typ = '\0';
	char c_xchng_rmrks[256];
	char c_cvr_ordflw = '\0';
	char c_channel[4];
	char c_ctcl_id[17];
	char c_trd_pswrd[15];
	char c_bsespn_flg = '\0';
	char c_spn_flg = '\0';
	char c_exg_stts = '\0';
	char c_rqst_typ = '\0';
	int i_ch_val;
	int  i_len 		 = 0;
 	int   i_err[40];
 	int   i_ferr[40];
	int i, j;
	int	i_returncode ;
	int	i_trnsactn;
 	long li_len_tobuf;
	char c_ip_view[20];
 	char c_op_view[20];
	char c_rout_crt[20];
	struct vw_xchngbook st_i_xchngbk;
 	ptr_fml_ibuf  = ( FBFR32 *)NULL; 
		
 	/* File handling variables */
 	FILE *ptr_cn_file;
	MEMSET(c_mtch_acc);
	MEMSET(c_xchng_cd);
	MEMSET(c_undrlyng);
	MEMSET(c_expry_date);
	MEMSET(c_xchng_rmrks);
	MEMSET(c_channel);
	MEMSET(c_trd_pswrd);
	MEMSET(c_pipe_id);
 	MEMSET(c_ctcl_id);
	
	if( DEBUG_MSG_LVL_3 )
  	{
    	fn_userlog( c_ServiceName, "Batch BAT_PLC_ORD started " );
  	}

 	/** File reading **/

  ptr_cn_file = fopen(c_file_name, "r");
	
 	if ( ptr_cn_file == NULL )
  	{
    	fn_errlog(c_ServiceName, "S31005", LIBMSG, c_err_msg);
      tpfree((char*)ptr_fml_ibuf);
			return;
  	}


 	while( !feof( ptr_cn_file) )
  	{
			i_trnsactn = fn_begintran( c_ServiceName, c_err_msg );
    	if( i_trnsactn == -1 )
        	{
      	  fn_errlog(c_ServiceName, "S31010", LIBMSG, c_err_msg);
        	tpfree((char*)ptr_fml_ibuf);
					fclose( ptr_cn_file );
       		return;
        	}

			if( DEBUG_MSG_LVL_3 )
      	{
      	fn_userlog( c_ServiceName, "Reading from file" );
		  	}

    	fgets( c_data, 1024, ptr_cn_file);
    	if( c_data == NULL)
      	{
				 fn_errlog(c_ServiceName, "S31015", LIBMSG, c_err_msg);
				 fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
    	   tpfree((char*)ptr_fml_ibuf); 
				 fclose( ptr_cn_file );
				 return;
      	}

 	   if( feof( ptr_cn_file ) != 0 )
 	      {
				fn_userlog( c_ServiceName, "END OF FILE " );
				fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
				tpfree((char*)ptr_fml_ibuf);
  	    break;
    	  }

   	 i_len = strlen(c_data);
   
   	 j=0;
    	for(i=0;i<i_len;i++)
    	{
      	if(c_data[i] == ',')
     	  {
        	c_o_data[j++] = ' ';
      	}
      	else if(c_data[i] == ' ')
      	{
       	 continue;
      	}
      	else
      	{
        	c_o_data[j++] = c_data[i];
      	}
    	}

    	c_o_data[j] = '\0';

 	   sscanf(c_o_data,"%s %s %s %c %s %c %ld %c",
								c_mtch_acc,
								c_undrlyng,
								c_xchng_cd,
								&c_prd_typ,
								c_expry_date,
								&c_opt_type,
								&l_strike_prc,
								&c_ord_flw);

     if( DEBUG_MSG_LVL_3 )
       {
				fn_userlog( c_ServiceName, "c_match_acc      :%s:",  c_mtch_acc    );
				fn_userlog( c_ServiceName, "c_undrlyng       :%s:",  c_undrlyng    );
				fn_userlog( c_ServiceName, "c_xchng_cd		   :%s:",  c_xchng_cd    );
				fn_userlog( c_ServiceName, "c_prd_typ        :%c:",  c_prd_typ     );
				fn_userlog( c_ServiceName, "c_expry_date     :%s:",  c_expry_date  );
				fn_userlog( c_ServiceName, "c_opt_type       :%c:",  c_opt_type    );
				fn_userlog( c_ServiceName, "l_strike_prc     :%ld:", l_strike_prc  );
				fn_userlog( c_ServiceName, "c_ord_flw        :%c:",  c_ord_flw     );
       }
	
		 rtrim(c_mtch_acc);
		 rtrim(c_undrlyng);
		 rtrim(c_xchng_cd);
		 rtrim(c_expry_date);
		
		 EXEC SQL
		 SELECT	NVL(CLM_SPAN_ALLWD,'N'),
						NVL(CLM_BSESPAN_ALLWD,'N')
		 INTO		:c_spn_flg,
						:c_bsespn_flg
		 FROM		CLM_CLNT_MSTR 
		 WHERE	CLM_MTCH_ACCNT 		 = :c_mtch_acc;

  if( SQLCODE != 0 )
    {
     fn_errlog( c_ServiceName, "S31020", SQLMSG, c_err_msg );
		 fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
	   tpfree((char*)ptr_fml_ibuf);
  	 return;
	  }
	
	
	if( DEBUG_MSG_LVL_3 )
    {
    fn_userlog( c_ServiceName, "c_spn_flg       :%c:",  c_spn_flg    );
    fn_userlog( c_ServiceName, "c_bsespn_flg    :%c:",  c_bsespn_flg    );
	  }
	
	EXEC SQL
  SELECT PCM_CRNT_PIPE_ID
  INTO   :c_pipe_id
  FROM   PCM_PIPE_CLM_MAP
  where  PCM_CLM_MTCH_ACCNT = :c_mtch_acc
  AND    PCM_XCHNG_CD       = :c_xchng_cd;

	if( SQLCODE != 0 )
		{
			 fn_errlog( c_ServiceName, "S31025", SQLMSG, c_err_msg );
			 fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
		   tpfree((char*)ptr_fml_ibuf);
			 return;
		}

	rtrim(c_pipe_id);	

	if(c_pipe_id[0] == '1')
   {
    c_rout_crt[0] = c_pipe_id[1];
    c_rout_crt[1] = c_pipe_id[1];
    c_rout_crt[2] = c_pipe_id[1];
    c_rout_crt[3] = '\0';
   }
  else
   {
    strcpy(c_rout_crt,"000");
   }
  
	if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"c_rout_crt is :%s:",c_rout_crt);
  }
	
	EXEC SQL
  /***SELECT exg_nxt_trd_dt *** ver 1.3 **/
  SELECT GREATEST(exg_nxt_trd_dt,exg_tmp_trd_dt)   /** Ver 1.3 **/
	INTO	 :c_trd_dt
	FROM   exg_xchng_mstr
	where EXG_XCHNG_CD='NFO';
			
	if( SQLCODE != 0 )
  	{
     fn_errlog( c_ServiceName, "S31030", SQLMSG, c_err_msg );
     fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
	   tpfree((char*)ptr_fml_ibuf);
		 return;
  	}
	
	rtrim(c_trd_dt);
	
	if( DEBUG_MSG_LVL_3 )
    {
			fn_userlog( c_ServiceName, "c_pipe_id       :%s:", c_pipe_id    );
      fn_userlog( c_ServiceName, "c_trd_dt        :%s:", c_trd_dt    );
		}	
				
   /*** Commented in Ver 1.2 ***
	
	 EXEC SQL
   SELECT FCM_EXER_TYP,
          FCM_INDSTK,
 	  			FCM_LOT_SZ
   INTO   :c_exer_type,
					:c_ctgry_indstk,
          :l_lot_sz
   FROM   FCM_FO_CNTRCT_MSTR
   WHERE  FCM_UNDRLYNG 		= :c_undrlyng
	 AND    FCM_XCHNG_CD  	= :c_xchng_cd
	 AND    FCM_PRDCT_TYP  	= decode(:c_prd_typ,'P','F',:c_prd_typ)
	 AND		FCM_EXPRY_DT    = :c_expry_date
	 AND    FCM_OPT_TYP			= :c_opt_type
	 AND    FCM_STRK_PRC		= :l_strike_prc; 

  if( SQLCODE != 0 )
    {
     fn_errlog( c_ServiceName, "S31035", SQLMSG, c_err_msg );
     fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
     tpfree((char*)ptr_fml_ibuf); 
		 return;
    }
	if( DEBUG_MSG_LVL_3 )
    {
    fn_userlog( c_ServiceName, "c_exer_type        :%c:", c_exer_type    );
		fn_userlog( c_ServiceName, "c_ctgry_indstk     :%c:", c_ctgry_indstk    );
		fn_userlog( c_ServiceName, "l_lot_sz           :%ld:", l_lot_sz    );
    }

    *** Ver 1.2 Comment Ends ***/
	
	  EXEC SQL
		select FTQ_LST_TRD_PRC,
					 FTQ_EXER_TYP,    /*** Ver 1.2 ***/
           FTQ_INDSTK,      /*** Ver 1.2 ***/
           FTQ_MIN_LOT_QTY  /*** Ver 1.2 ***/
		INTO   :l_lmt_prz,
					 :c_exer_type,    /*** Ver 1.2 ***/
           :c_ctgry_indstk, /*** Ver 1.2 ***/
           :l_lot_sz        /*** Ver 1.2 ***/
		from   FTQ_FO_TRD_QT
		where FTQ_XCHNG_CD = :c_xchng_cd
		and   FTQ_UNDRLYNG = :c_undrlyng
		and   FTQ_EXPRY_DT = :c_expry_date
		and   FTQ_PRDCT_TYP= decode(:c_prd_typ,'P','F',:c_prd_typ)
		and   FTQ_OPT_TYP  = :c_opt_type
		and   FTQ_STRK_PRC = :l_strike_prc;

	if( SQLCODE != 0 )
    {
     fn_errlog( c_ServiceName, "S31040", SQLMSG, c_err_msg );
 		 fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );	
	   tpfree((char*)ptr_fml_ibuf);
     return;
    }

  if( DEBUG_MSG_LVL_3 )
    {
    fn_userlog( c_ServiceName, "l_lmt_prz           :%ld:", l_lmt_prz   );
		fn_userlog( c_ServiceName, "c_ctgry_indstk     :%c:", c_ctgry_indstk    );
    fn_userlog( c_ServiceName, "l_lot_sz           :%ld:", l_lot_sz    );
    fn_userlog( c_ServiceName, "l_lmt_prz          :%ld:", l_lmt_prz   );
    }

	  strcpy( c_usr_id , "system" );
    l_session_id = 0;
    strcpy( c_channel ,"SYS" );
    c_lmt_mrkt_flg = 'L';
    l_disclsed_qt = 0;
    c_ord_typ = 'T';
    c_spl_flg = '*';

		/***  Variables for Future Ack ****/
		  
		st_i_xchngbk.l_mdfctn_cntr = 1;
		st_i_xchngbk.c_plcd_stts = 'A';
		st_i_xchngbk.l_ors_msg_typ = 5303;
	  st_i_xchngbk.d_jiffy       = 0;
		st_i_xchngbk.l_dwnld_flg   = 0;
		strcpy(st_i_xchngbk.c_xchng_rmrks,"*");
		strcpy(st_i_xchngbk.c_ack_tm, c_trd_dt);
		strcpy(st_i_xchngbk.c_entry_dt_tm, c_trd_dt);


		/*** End ***/
  
	  strcpy(c_xchng_rmrks , "*");
    rtrim(c_xchng_rmrks);
    rtrim(c_usr_id);

	
	ptr_fml_ibuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN * 10);
  if ( ptr_fml_ibuf == NULL )
    {
    fn_errlog( c_ServiceName, "S31045", TPMSG, c_err_msg  );
 		fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
	  tpfree((char*)ptr_fml_ibuf);	
    return;
    }
	
	i_err[0]  = Fadd32( ptr_fml_ibuf, FFO_USR_ID, c_usr_id , 0 );
  i_ferr[0] = Ferror32;
  i_err[1] = Fadd32(ptr_fml_ibuf, FFO_SSSN_ID, (char *)&l_session_id, 0 );
  i_ferr[1] = Ferror32;
  i_err[2] = Fadd32(ptr_fml_ibuf,FFO_CHANNEL, c_channel, 0 );
  i_ferr[2] = Ferror32;
  i_err[3] = Fadd32(ptr_fml_ibuf, FFO_EBA_MTCH_ACT_NO, c_mtch_acc , 0 );
  i_ferr[3] = Ferror32;
  i_err[4] = Fadd32(ptr_fml_ibuf, FFO_XCHNG_CD, c_xchng_cd , 0 );
  i_ferr[4] = Ferror32;
  i_err[5] = Fadd32(ptr_fml_ibuf, FFO_PRDCT_TYP, (char *)&c_prd_typ , 0 );
  i_ferr[5] = Ferror32;
  i_err[6] = Fadd32(ptr_fml_ibuf, FFO_UNDRLYNG, c_undrlyng , 0 );
  i_ferr[6] = Ferror32;
	i_err[7] = Fadd32(ptr_fml_ibuf, FFO_EXPRY_DT, c_expry_date , 0 );
  i_ferr[7] = Ferror32;
  i_err[8] = Fadd32(ptr_fml_ibuf, FFO_EXER_TYP, (char *)&c_exer_type , 0 ); 
  i_ferr[8] = Ferror32;
  i_err[9] = Fadd32(ptr_fml_ibuf, FFO_OPT_TYP, (char *)&c_opt_type , 0 );
  i_ferr[9] = Ferror32;
  i_err[10] = Fadd32(ptr_fml_ibuf, FFO_STRK_PRC, (char *)&l_strike_prc , 0 );
  i_ferr[10] = Ferror32;
	i_err[11] = Fadd32(ptr_fml_ibuf, FFO_CTGRY_INDSTK , (char *)&c_ctgry_indstk , 0 );
  i_ferr[11] = Ferror32;
  i_err[12] = Fadd32(ptr_fml_ibuf, FFO_ORDR_FLW , (char *)&c_ord_flw , 0 ); 
  i_ferr[12] = Ferror32;
  i_err[13] = Fadd32(ptr_fml_ibuf, FFO_LMT_MKT_SL_FLG , (char *)&c_lmt_mrkt_flg , 0 );
  i_ferr[13] = Ferror32;
  i_err[14] = Fadd32(ptr_fml_ibuf, FFO_DSCLSD_QTY , (char *)&l_disclsed_qt , 0 ); 
  i_ferr[14] = Ferror32;
  i_err[15] = Fadd32(ptr_fml_ibuf, FFO_ORD_TOT_QTY , (char *)&l_lot_sz, 0 ); 
  i_ferr[15] = Ferror32;
  i_err[16] = Fadd32(ptr_fml_ibuf, FFO_MOD_TRD_DT , c_trd_dt, 0 ); 
  i_ferr[16] = Ferror32;
  i_err[17] = Fadd32(ptr_fml_ibuf, FFO_ORD_VALID_DT , c_trd_dt, 0 ); 
  i_ferr[17] = Ferror32;
  i_err[18] = Fadd32(ptr_fml_ibuf, FFO_LMT_RT , (char *)&l_lmt_prz , 0 );
  i_ferr[18] = Ferror32;
  i_err[19] = Fadd32(ptr_fml_ibuf, FFO_ORD_TYP , (char *)&c_ord_typ , 0 );
  i_ferr[19] = Ferror32;
  i_err[20] = Fadd32(ptr_fml_ibuf, FFO_SPL_FLG , (char *)&c_spl_flg , 0 );
  i_ferr[20] = Ferror32;
  i_err[21] = Fadd32(ptr_fml_ibuf, FFO_XCHNG_RMRKS , c_xchng_rmrks, 0 );
  i_ferr[21] = Ferror32;
	i_err[22] = Fadd32(ptr_fml_ibuf, FFO_PIPE_ID , c_pipe_id, 0 );
  i_ferr[22] = Ferror32;
	i_err[23] = Fadd32(ptr_fml_ibuf, FFO_STP_LSS_TGR , (char *)&l_sltp_prz, 0 );
  i_ferr[23] = Ferror32;
 	/*i_err [24] = Fadd32(ptr_fml_Ibuf,FFO_ROUT_CRT, (char *)c_rout_crt,0);
 	i_ferr[24] = Ferror32;*/
    
  for (j = 0;j < 25;j++)
     {
     if(i_err[j] == -1)
      {
      fn_userlog(c_ServiceName,"Failed in Fadd of [%d] for exp sel", j);
      fn_errlog(c_ServiceName,"S31050",SQLMSG,c_err_msg);
 	  	fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );	
      tpfree((char *)ptr_fml_ibuf);
   		return;
       }
     }


	if( ( c_spn_flg == 'N' && strcmp(c_xchng_cd , "NFO") == 0 ) || (c_bsespn_flg == 'N' && strcmp(c_xchng_cd , "BFO") == 0 ) )
   {
	
	 if( c_prd_typ == 'F' )
   {

		if( DEBUG_MSG_LVL_3 )
    {
      fn_userlog( c_ServiceName, "Before call to SFO_FUT_PLC_ORD " );
	  }

		i_returncode = tpcall ( "SFO_FUT_PLC_ORD",
                          ( char *)ptr_fml_ibuf,
                            0,
                          ( char **)&ptr_fml_ibuf,
                          &l_recvbuf,
                            0
                          );
		if ( i_returncode != SUCC_BFR )
    {
      fn_errlog( c_ServiceName, "S31055",TPMSG,c_err_msg);
			fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
      tpfree((char*)ptr_fml_ibuf);
      continue;
    }
		
		if( DEBUG_MSG_LVL_3 )
    {
      fn_userlog( c_ServiceName, "After call to SFO_FUT_PLC_ORD " );
			fn_userlog(c_ServiceName,"c_mtch_acc is :%s:", c_mtch_acc);
			fn_userlog(c_ServiceName,"c_xchng_cd is :%s:", c_xchng_cd);
			fn_userlog(c_ServiceName,"c_prd_typ is :%c:", c_prd_typ);
			fn_userlog(c_ServiceName,"c_undrlyng is :%s:", c_undrlyng);
			fn_userlog(c_ServiceName,"c_expry_date is :%s:", c_expry_date);
			fn_userlog(c_ServiceName,"c_trd_dt is    :%s:", c_trd_dt);
		}
	
		EXEC SQL
		SELECT FOD_ORDR_RFRNC
	  INTO   :st_i_xchngbk.c_ordr_rfrnc
		FROM   FOD_FO_ORDR_DTLS
		WHERE  FOD_CLM_MTCH_ACCNT = :c_mtch_acc
    and    FOD_XCHNG_CD       = :c_xchng_cd
    and    FOD_PRDCT_TYP      = :c_prd_typ
    and    FOD_UNDRLYNG       = :c_undrlyng
    and    FOD_EXPRY_DT       = :c_expry_date
    and    FOD_CHANNEL        = 'SYS'
    and    FOD_ORDR_STTS      = 'R'
    and    FOD_TRD_DT         = :c_trd_dt;
		
   if( SQLCODE != 0 )
   {
     fn_errlog( c_ServiceName, "S31060", SQLMSG, c_err_msg );
     fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
	   tpfree((char*)ptr_fml_ibuf);
     return;
   }
		fn_userlog(c_ServiceName,"c_ordr_ref is    :%s:", st_i_xchngbk.c_ordr_rfrnc);
		rtrim(st_i_xchngbk.c_ordr_rfrnc);
	
	 EXEC SQL
      update FOD_FO_ORDR_DTLS
      set    FOD_ORDR_STTS  ='Q'
      where  FOD_ORDR_RFRNC = :st_i_xchngbk.c_ordr_rfrnc; 

    if( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31065", SQLMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
	    tpfree((char*)ptr_fml_ibuf);
      return;
    }
					
		i_returncode = fn_call_svc ( c_ServiceName,
                             c_err_msg,
                             &st_i_xchngbk,
                             &st_i_xchngbk,
                             "vw_xchngbook",
                             "vw_xchngbook",
                             sizeof ( st_i_xchngbk ),
                             sizeof ( st_i_xchngbk ),
                             0,
                             "SFO_FUT_ACK" );	
																				
		if ( i_returncode != SUCC_BFR )
    {
      fn_errlog( c_ServiceName, "S31070",TPMSG,c_err_msg);
      fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
      tpfree((char*)ptr_fml_ibuf);
      return; 
    }	
	
	 }
	 else if( c_prd_typ == 'O' )
   {
    if( DEBUG_MSG_LVL_3 )
    {
      fn_userlog( c_ServiceName, "Before call to SFO_OPT_PLC_ORD " );
    }

    i_returncode = tpcall ( "SFO_OPT_PLC_ORD",
                          ( char *)ptr_fml_ibuf,
                            0,
                          ( char **)&ptr_fml_ibuf,
                          &l_recvbuf,
                            0
                          );
    if ( i_returncode != SUCC_BFR )
    {
      fn_errlog( c_ServiceName, "S31075",TPMSG,c_err_msg);
		  fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
      tpfree((char*)ptr_fml_ibuf);
      continue;
    }

    if( DEBUG_MSG_LVL_3 )
    {
      fn_userlog( c_ServiceName, "After call to SFO_OPT_PLC_ORD " );
    }
		EXEC SQL
    SELECT FOD_ORDR_RFRNC
    INTO   :st_i_xchngbk.c_ordr_rfrnc
    FROM   FOD_FO_ORDR_DTLS
    WHERE  FOD_CLM_MTCH_ACCNT = :c_mtch_acc
    and    FOD_XCHNG_CD       = :c_xchng_cd
    and    FOD_PRDCT_TYP      = :c_prd_typ
    and    FOD_UNDRLYNG       = :c_undrlyng
    and    FOD_EXPRY_DT       = :c_expry_date
    and    FOD_CHANNEL        = 'SYS'
    and    FOD_ORDR_STTS      = 'R'
    and    FOD_TRD_DT         = :c_trd_dt;

   if( SQLCODE != 0 )
   {
     fn_errlog( c_ServiceName, "S31080", SQLMSG, c_err_msg );
     fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
	   tpfree((char*)ptr_fml_ibuf);
     return;
   }
    fn_userlog(c_ServiceName,"c_ordr_ref is    :%s:", st_i_xchngbk.c_ordr_rfrnc);
    rtrim(st_i_xchngbk.c_ordr_rfrnc);

   	EXEC SQL
      update FOD_FO_ORDR_DTLS
      set    FOD_ORDR_STTS  ='Q'
      where  FOD_ORDR_RFRNC = :st_i_xchngbk.c_ordr_rfrnc;

   if( SQLCODE != 0 )
   {
      fn_errlog( c_ServiceName, "S31085", SQLMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
	    tpfree((char*)ptr_fml_ibuf);
      return;
   }

   i_returncode = fn_call_svc ( c_ServiceName,
                                c_err_msg,
                                &st_i_xchngbk,
                                &st_i_xchngbk,
                                "vw_xchngbook",
                                "vw_xchngbook",
                                sizeof ( st_i_xchngbk ),
                                sizeof ( st_i_xchngbk ),
                                0,
                                "SFO_OPT_ACK" );
			
    if ( i_returncode != SUCC_BFR )
    {
      fn_errlog( c_ServiceName, "S31090",TPMSG,c_err_msg);
      fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
      tpfree((char*)ptr_fml_ibuf);
      return;
    }
   }
	 else if( c_prd_typ == 'P' )
   {	

	 EXEC SQL
   UPDATE MTM_APPLN_STTS
      SET MTM_ROLL_STTS = 'Y',
					MTM_ROLL_STTS_S = 'Y'			/*** Ver 1.5 ***/
   WHERE  MTM_PIPE_ID = :c_pipe_id; 

   if( SQLCODE != 0 )
     {
       fn_errlog( c_ServiceName, "S31095", SQLMSG, c_err_msg );
			 fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
       tpfree((char*)ptr_fml_ibuf);
	     return;
     }
	
	 if( DEBUG_MSG_LVL_3 )
     {
       fn_userlog( c_ServiceName, "Before call to SFO_FUT_PLC_ORD for future plus" );
     }

    i_returncode = tpcall ( "SFO_FUT_PLC_ORD",
                          ( char *)ptr_fml_ibuf,
                            0,
                          ( char **)&ptr_fml_ibuf,
                          &l_recvbuf,
                            0
                          );
    if ( i_returncode != SUCC_BFR )
     {
      fn_errlog( c_ServiceName, "S31100",TPMSG,c_err_msg);
 			fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );	
      tpfree((char*)ptr_fml_ibuf);
      continue;
     }

    if( DEBUG_MSG_LVL_3 )
     {
       fn_userlog( c_ServiceName, "After call to SFO_FUT_PLC_ORDi for future plus" );
     }
		
		EXEC SQL
    SELECT FOD_ORDR_RFRNC
    INTO   :st_i_xchngbk.c_ordr_rfrnc
    FROM   FOD_FO_ORDR_DTLS
    WHERE  FOD_CLM_MTCH_ACCNT = :c_mtch_acc
    and    FOD_XCHNG_CD       = :c_xchng_cd
    and    FOD_PRDCT_TYP      = :c_prd_typ
    and    FOD_UNDRLYNG       = :c_undrlyng
    and    FOD_EXPRY_DT       = :c_expry_date
    and    FOD_CHANNEL        = 'SYS'
    and    FOD_ORDR_STTS      = 'R'
    and    FOD_TRD_DT         = :c_trd_dt;

   if( SQLCODE != 0 )
   {
     fn_errlog( c_ServiceName, "S31105", SQLMSG, c_err_msg );
     fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
     tpfree((char*)ptr_fml_ibuf);
		 return;
   }
   if( DEBUG_MSG_LVL_3 )
   {
	  		fn_userlog(c_ServiceName,"c_ordr_ref is    :%s:", st_i_xchngbk.c_ordr_rfrnc);
	 }
    
  rtrim(st_i_xchngbk.c_ordr_rfrnc);
 	EXEC SQL
  update FOD_FO_ORDR_DTLS
  set    FOD_ORDR_STTS  ='Q'
  where  FOD_ORDR_RFRNC = :st_i_xchngbk.c_ordr_rfrnc;

  if( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31110", SQLMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
  		tpfree((char*)ptr_fml_ibuf); 
	   	return;
    }

  i_returncode = fn_call_svc ( c_ServiceName,
                             c_err_msg,
                             &st_i_xchngbk,
                             &st_i_xchngbk,
                             "vw_xchngbook",
                             "vw_xchngbook",
                             sizeof ( st_i_xchngbk ),
                             sizeof ( st_i_xchngbk ),
                             0,
                             "SFO_FUT_ACK" );

  if ( i_returncode != SUCC_BFR )
    {
      fn_errlog( c_ServiceName, "S31115",TPMSG,c_err_msg);
      fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
      tpfree((char*)ptr_fml_ibuf);
      return;
    }	
	}
  }	
		
 else if((c_spn_flg == 'Y' && strcmp(c_xchng_cd , "NFO") == 0) || (c_bsespn_flg == 'Y' && strcmp(c_xchng_cd , "BFO") == 0))
  {
 strcpy( c_ctcl_id , "1111111111111");
 
 if (Fadd32( ptr_fml_ibuf, FFO_CTCL_ID, c_ctcl_id, 0 ) == -1)
    {
		  fn_userlog(c_ServiceName,"Failed in Fadd" );
      fn_errlog(c_ServiceName,"S31120",SQLMSG,c_err_msg);
		  fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );	
      tpfree((char *)ptr_fml_ibuf);
      return;
    }

 if( c_prd_typ == 'F' || c_prd_typ == 'O' ) 
	 {

    if( DEBUG_MSG_LVL_3 )
    {
      fn_userlog( c_ServiceName, "Before call to SFO_SPN_PLC_ORD" );
    }

    i_returncode = tpcall ( "SFO_SPN_PLC_ORD",
                          ( char *)ptr_fml_ibuf,
                            0,
                          ( char **)&ptr_fml_ibuf,
                          &l_recvbuf,
                            0
                          );
    if ( i_returncode != SUCC_BFR )
    {
      fn_errlog( c_ServiceName, "S31125",TPMSG,c_err_msg);
      tpfree((char*)ptr_fml_ibuf);
		  fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );	
      continue;
    }

    if( DEBUG_MSG_LVL_3 )
    {
      fn_userlog( c_ServiceName, "After call to SFO_SPN_PLC_ORD " );
    }
	
		
    EXEC SQL
    SELECT FOD_ORDR_RFRNC
    INTO   :st_i_xchngbk.c_ordr_rfrnc
    FROM   FOD_FO_ORDR_DTLS
    WHERE  FOD_CLM_MTCH_ACCNT = :c_mtch_acc
    and    FOD_XCHNG_CD       = :c_xchng_cd
    and    FOD_PRDCT_TYP      = :c_prd_typ
    and    FOD_UNDRLYNG       = :c_undrlyng
    and    FOD_EXPRY_DT       = :c_expry_date
    and    FOD_CHANNEL        = 'SYS'
    and    FOD_ORDR_STTS      = 'R'
    and    FOD_TRD_DT         = :c_trd_dt;

   if( SQLCODE != 0 )
   {
     fn_errlog( c_ServiceName, "S31130", SQLMSG, c_err_msg );
     fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
     tpfree((char*)ptr_fml_ibuf); 
		 return;
   }
   if( DEBUG_MSG_LVL_3 )
   {
      fn_userlog(c_ServiceName,"c_ordr_ref is    :%s:", st_i_xchngbk.c_ordr_rfrnc);
   }	
		
    rtrim(st_i_xchngbk.c_ordr_rfrnc);
	  EXEC SQL
      update FOD_FO_ORDR_DTLS
      set    FOD_ORDR_STTS  ='Q'
      where  FOD_ORDR_RFRNC = :st_i_xchngbk.c_ordr_rfrnc;

    if( SQLCODE != 0 )
    {
      fn_errlog( c_ServiceName, "S31135", SQLMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
  	  tpfree((char*)ptr_fml_ibuf); 
	    return;
    }

	i_err [0] = Fadd32(ptr_fml_ibuf,FFO_ROUT_CRT, (char *)c_rout_crt,0);
  i_ferr[0] = Ferror32;
  i_err [1] = Fadd32(ptr_fml_ibuf,FFO_ORDR_RFRNC, (char *)st_i_xchngbk.c_ordr_rfrnc,0);
  i_ferr[1] = Ferror32;
  i_err [2] = Fadd32(ptr_fml_ibuf,FFO_ORS_MSG_TYP, (char *)&st_i_xchngbk.l_ors_msg_typ,0);
  i_ferr[2] = Ferror32;
  i_err [3] = Fadd32(ptr_fml_ibuf,FFO_MDFCTN_CNTR, (char *)&st_i_xchngbk.l_mdfctn_cntr,0);
  i_ferr[3] = Ferror32;
  i_err [4] = Fadd32(ptr_fml_ibuf,FFO_ACK_TM, (char *)st_i_xchngbk.c_ack_tm,0);
  i_ferr[4] = Ferror32;
  i_err [5] = Fadd32(ptr_fml_ibuf,FFO_PREV_ACK_TM, (char *)st_i_xchngbk.c_entry_dt_tm,0);
  i_ferr[5] = Ferror32;

  for (i = 0;i < 7 ;i++)
  {
  if(i_err[i] == -1)
    {
      fn_userlog( c_ServiceName, "Error in :%d:",i );
      fn_errlog( c_ServiceName, "S31140", Fstrerror32( i_ferr[i]),c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
      tpfree((char *)ptr_fml_ibuf);
			return;
    }
  }
	
	  i_ch_val  = tpcall ( "SFO_PRCS_RSP", (char *)ptr_fml_ibuf, 0,(char **)&ptr_fml_ibuf, &li_len_tobuf,0);


  if ( i_ch_val != 0 )
  {
    fn_errlog(c_ServiceName,"L31035", TPMSG, c_err_msg);
		fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
    tpfree ( ( char * )ptr_fml_ibuf);
		return;
  }


  if(DEBUG_MSG_LVL_3)
  {
    fn_userlog(c_ServiceName,"After Complition Of fn_spnord_acpt_rjct");
  }


  }	

  else if( c_prd_typ == 'P' )
  {
  EXEC SQL
  UPDATE MTM_APPLN_STTS
  SET    MTM_ROLL_STTS = 'Y',
				 MTM_ROLL_STTS_S = 'Y'		/*** Ver 1.5 ***/
  WHERE  MTM_PIPE_ID = :c_pipe_id;

  if( SQLCODE != 0 )
  {
   fn_errlog( c_ServiceName, "S31145", SQLMSG, c_err_msg );
   fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
   tpfree((char*)ptr_fml_ibuf);
   return;
  }


  if( DEBUG_MSG_LVL_3 )
     {
       fn_userlog( c_ServiceName, "Before call to SFO_FUT_PLC_ORD for future plus" );
     }

  i_returncode = tpcall ( "SFO_FUT_PLC_ORD",
                        ( char *)ptr_fml_ibuf,
                          0,
                        ( char **)&ptr_fml_ibuf,
                          &l_recvbuf,
                          0
                          );
 if ( i_returncode != SUCC_BFR )
    {
      fn_errlog( c_ServiceName, "S31150",TPMSG,c_err_msg);
		  fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
      tpfree((char*)ptr_fml_ibuf);
      continue;
    }
		
  EXEC SQL
  SELECT FOD_ORDR_RFRNC
  INTO   :st_i_xchngbk.c_ordr_rfrnc
  FROM   FOD_FO_ORDR_DTLS
  WHERE  FOD_CLM_MTCH_ACCNT = :c_mtch_acc
  and    FOD_XCHNG_CD       = :c_xchng_cd
  and    FOD_PRDCT_TYP      = :c_prd_typ
  and    FOD_UNDRLYNG       = :c_undrlyng
  and    FOD_EXPRY_DT       = :c_expry_date
  and    FOD_CHANNEL        = 'SYS'
  and    FOD_ORDR_STTS      = 'R'
  and    FOD_TRD_DT         = :c_trd_dt;
  
	if( SQLCODE != 0 )
   	{
     fn_errlog( c_ServiceName, "S31155", SQLMSG, c_err_msg );
     fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
     tpfree((char*)ptr_fml_ibuf);
		 return;
   	}
 
 if( DEBUG_MSG_LVL_3 )
    {
      fn_userlog( c_ServiceName, "After call to SFO_FUT_PLC_ORD for future plus" );
    }
 
    

  i_returncode = fn_call_svc ( c_ServiceName,
                             c_err_msg,
                             &st_i_xchngbk,
                             &st_i_xchngbk,
                             "vw_xchngbook",
                             "vw_xchngbook",
                             sizeof ( st_i_xchngbk ),
                             sizeof ( st_i_xchngbk ),
                             0,
                             "SFO_FUT_ACK" );

  if ( i_returncode != SUCC_BFR )
   {
     fn_errlog( c_ServiceName, "S31160",TPMSG,c_err_msg);
     fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
     tpfree((char*)ptr_fml_ibuf);
     return;
   }
	 }
	}
		tpfree((char*)ptr_fml_ibuf);	
		fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
 }
}
 
 	void fo_ordbk_fn(char *c_file_name, char *c_ServiceName, char *c_err_msg)
	{

   FILE *ptr_cn_file;
   FBFR32 *ptr_fml_ibuf;
   char c_msg[256];
   char c_usr_id[9];
   char c_data[1024+1];
   char c_o_data[1024+1];
   long    l_session_id;
   char c_mtch_acc[10 + 1];
   char c_prd_typ ='\0';
	 char c_xchng_cd [ 3+1 ];
   char c_undrlyng[10];
   char c_opn_typ;
   char c_trd_dt[23];

   int i_returncode = 0;
   int  i_len     = 0;
   int   i_err[40];
   int   i_ferr[40];
   int i, j;
   int i_trnsactn;
   char c_rout_crt[20];
   char c_frm_dt[12];
   char c_to_dt[12];
   ptr_fml_ibuf  = ( FBFR32 *)NULL;

   long l_recvbuf = 0;
   MEMSET(c_mtch_acc);
   MEMSET(c_xchng_cd);
   MEMSET(c_undrlyng);

	fn_userlog( c_ServiceName, " the file name is :%s:",c_file_name);

  ptr_cn_file = fopen(c_file_name, "r");

  if ( ptr_cn_file == NULL )
  {
    fn_errlog(c_ServiceName, "S31165", LIBMSG, c_err_msg);
    return;
  }

	while( !feof( ptr_cn_file) )
  {
    if( DEBUG_MSG_LVL_3 )
    {
      fn_userlog( c_ServiceName, "Reading from file orderbuk" );
    }
    fgets( c_data, 1024, ptr_cn_file);
    if( c_data == NULL)
    {
       fn_errlog(c_ServiceName, "S31170", LIBMSG, c_err_msg);
       fclose( ptr_cn_file );
       return;
    }

    if( feof( ptr_cn_file ) != 0 )
    {
      fn_userlog( c_ServiceName, "END OF FILE " );
      break;
    }

     i_len = strlen(c_data);

    j=0;
    for(i=0;i<i_len;i++)
    {
      if(c_data[i] == ',')
      {
        c_o_data[j++] = ' ';

      }
      else if(c_data[i] == ' ')
      {
			  continue;
      }
      else
      {
        c_o_data[j++] = c_data[i];
      }
    }

    c_o_data[j] = '\0';
	

	for(i = 0; i<=j; i++)
	{
	 fn_userlog( c_ServiceName, " %c",  c_o_data[i]);
	}
	
  

	 sscanf(c_o_data,"%s %s %s %s %c %c %s %s",
                c_usr_id,
                c_mtch_acc,
                c_undrlyng,
                c_xchng_cd,
                &c_opn_typ,
                &c_prd_typ,
								c_frm_dt,
                c_to_dt);

		if( DEBUG_MSG_LVL_3 )
     {
				fn_userlog( c_ServiceName, "c_usr_id      :%s:", c_usr_id   );
        fn_userlog( c_ServiceName, "c_match_acc      :%s:",  c_mtch_acc    );
        fn_userlog( c_ServiceName, "c_undrlyng       :%s:",  c_undrlyng    );
        fn_userlog( c_ServiceName, "c_xchng_cd       :%s:",  c_xchng_cd    );
        fn_userlog( c_ServiceName, "c_opn_type       :%c:",  c_opn_typ    );
				 fn_userlog( c_ServiceName, "c_frm_dt        :%s:", c_frm_dt    );
				 fn_userlog( c_ServiceName, " c_to_dt        :%s:", c_to_dt    );
     }

	ptr_fml_ibuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN * 10);
  if ( ptr_fml_ibuf == NULL )
  {
    fn_errlog( c_ServiceName, "S31175", TPMSG, c_err_msg  );
    return;
  }
	
  i_err[0]  = Fchg32( ptr_fml_ibuf, FFO_USR_ID , 0, c_usr_id, 0 );
  i_ferr[0] = Ferror32;
  i_err[1]  = Fchg32(ptr_fml_ibuf, FFO_SSSN_ID, 0, (char *)&l_session_id, 0 );
  i_ferr[1] = Ferror32;
  i_err[2]  = Fchg32(ptr_fml_ibuf, FFO_EBA_MTCH_ACT_NO, 0, c_mtch_acc , 0 );
  i_ferr[2] = Ferror32;
  i_err[3]  = Fchg32(ptr_fml_ibuf, FFO_XCHNG_CD, 0, c_xchng_cd , 0 );
  i_ferr[3] = Ferror32;
  i_err[4]  = Fchg32(ptr_fml_ibuf,FFO_OPERATION_TYP, 0, (char *)&c_opn_typ, 0);
  i_err[4]  = Ferror32;
  i_err [5] = Fchg32(ptr_fml_ibuf,FFO_ROUT_CRT, 0, (char *)c_rout_crt,0);
  i_ferr[5] = Ferror32;
  i_err [6] = Fchg32(ptr_fml_ibuf,FFO_FROM_DT, 0,  (char *)c_frm_dt, 0);
  i_ferr [6] = Ferror32;
  i_err[7]   = Fchg32 (ptr_fml_ibuf, FFO_TO_DT, 0,  (char *)c_to_dt, 0);
  i_ferr [7] = Ferror32;
  i_err[8]   = Fchg32(ptr_fml_ibuf, FFO_UNDRLYNG, 0, (char *)c_undrlyng, 0);
  i_err[8]   = Ferror32;
	i_err[9]   = Fadd32(ptr_fml_ibuf, FFO_PRDCT_TYP, (char *)&c_prd_typ , 0 );
  i_ferr[9]  = Ferror32;

  for(i=0; i <=9 ; i++)
    {
      if ( (i_err[ i ] == -1 ) )
      {
        fn_errlog( c_ServiceName, "S31180", Fstrerror32(i_ferr[i]),c_err_msg);
        tpfree ( ( char * ) ptr_fml_ibuf );
        Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        return;
      }
    }

  i_returncode = tpcall ( "SFO_ORDR_BOOK",
                         ( char *)ptr_fml_ibuf,
                         0,
                         ( char **)&ptr_fml_ibuf,
                         &l_recvbuf,
                         0
                         );


    if ( i_returncode != SUCC_BFR )
    {
      fn_errlog( c_ServiceName, "S31185",TPMSG,c_err_msg);
      tpfree((char*)ptr_fml_ibuf);
      return;
    }
  }
    tpfree((char*)ptr_fml_ibuf);
    return;
}


int fn_bat_init ( int argc, char *argv[] )
{
  char c_ServiceName [33];

  fn_userlog(c_ServiceName,"Inside function bat_init()");
  if(argv[4][0] == 'B')
  {
  	if (argc != 5)
  	{
    	fn_userlog( argv[0],
      "Usage - %s <configuration file> <Exchange code> <pipe_id> <run_mod>",argv[0]);
    	fn_userlog ( argv[0], "Invalid number of arguments" );
    	return -1;
  	}
  }
  else
 {
   if (argc != 6)
  {
    fn_userlog( argv[0],
      "Usage - %s <configuration file> <Exchange code> <pipe_id> <run_mod> <fileName>",argv[0]);
    fn_userlog ( argv[0], "Invalid number of arguments" );
    return -1;
  }
}
  fn_var = BAT_PLC_ORD;
  return 0;
}


void fn_bat_term ( int argc, char *argv[] )
{
	 fn_userlog ( argv[0], "Batch BAT_PLC_ORD ended" ); 
	 return;
}

int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
  return 0;
}

void fo_trd_fn(char *c_file_name, char *c_ServiceName, char *c_err_msg)
{
   FILE *ptr_cn_file;
   FBFR32 *ptr_fml_ibuf;
   char c_msg[256];
   char c_usr_id[9];
   char c_data[1024+1];
   char c_o_data[1024+1];
   long    l_session_id;
   char c_mtch_acc[10 + 1];
   char c_xchng_cd [ 3+1 ];
   char c_undrlyng[10];
   char c_opn_typ;
   char c_trd_dt[23];
   char c_prd_typ;
   char c_trd_flw ;
  char c_spl_flg;
   char c_ord_rfr [ 19 ];
   int i_returncode = 0;
   int  i_len     = 0;
   int   i_err[40];
   int   i_ferr[40];
   int i, j;
   int i_trnsactn;
   char c_rout_crt[20];
   char c_frm_dt[12];
   char c_to_dt[12];
   ptr_fml_ibuf  = ( FBFR32 *)NULL;

   long l_recvbuf = 0;
   MEMSET(c_mtch_acc);
   MEMSET(c_xchng_cd);
   MEMSET(c_undrlyng);

  fn_userlog( c_ServiceName, " the file name is :%s:",c_file_name);


	ptr_fml_ibuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN * 10);
  if ( ptr_fml_ibuf == NULL )
  {
    fn_errlog( c_ServiceName, "S31190", TPMSG, c_err_msg  );
    return;
  }

	
	 ptr_cn_file = fopen(c_file_name, "r");

  if ( ptr_cn_file == NULL )
  {
    fn_errlog(c_ServiceName, "S31195", LIBMSG, c_err_msg);
    return;
  }


  while( !feof( ptr_cn_file) )
  {
    if( DEBUG_MSG_LVL_3 )
    {
      fn_userlog( c_ServiceName, "Reading from file trdebuk" );
    }
    fgets( c_data, 1024, ptr_cn_file);
    if( c_data == NULL)
    {
       fn_errlog(c_ServiceName, "S31200", LIBMSG, c_err_msg);
       fclose( ptr_cn_file );
       tpfree((char*)ptr_fml_ibuf);
			 return;
    }

    if( feof( ptr_cn_file ) != 0 )
    {
      fn_userlog( c_ServiceName, "END OF FILE " );
      break;
    }

     i_len = strlen(c_data);

    j=0;


		for(i=0;i<i_len;i++)
    {
      if(c_data[i] == ',')
      {
        c_o_data[j++] = ' ';

      }
      else if(c_data[i] == ' ')
      {
        continue;
      }
      else
      {
        c_o_data[j++] = c_data[i];
      }
   } 

    c_o_data[j] = '\0';




   sscanf(c_o_data,"%s %ld %s %s %s %c %s %s %s %c %c %c",
                c_usr_id,
								&l_session_id,
                c_mtch_acc,
                c_undrlyng,
                c_xchng_cd,
                &c_opn_typ,
 	              c_frm_dt,
                c_to_dt,
								c_rout_crt,
								&c_prd_typ,
								&c_trd_flw,
								&c_spl_flg
								);							

   if( DEBUG_MSG_LVL_3 )
   {
     fn_userlog( c_ServiceName, "c_usr_id      :%s:", c_usr_id   );
     fn_userlog( c_ServiceName, "c_match_acc      :%s:",  c_mtch_acc    );
     fn_userlog( c_ServiceName, "c_undrlyng       :%s:",  c_undrlyng    );
     fn_userlog( c_ServiceName, "c_xchng_cd       :%s:",  c_xchng_cd    );
     fn_userlog( c_ServiceName, "c_opn_type       :%c:",  c_opn_typ    );
     fn_userlog( c_ServiceName, "c_frm_dt        :%s:", c_frm_dt    );
     fn_userlog( c_ServiceName, " c_to_dt        :%s:", c_to_dt    );
 		 fn_userlog( c_ServiceName, "c_rout_crt				:%s:",c_rout_crt );
		 fn_userlog( c_ServiceName, "c_prd_typ				:%c:",c_prd_typ);  
		 fn_userlog( c_ServiceName, "c_trd_flw				:%c:",c_trd_flw);
		 fn_userlog( c_ServiceName, "c_spl_flg				:%c:",c_spl_flg );
	 }	

	i_err[0]  = Fchg32(ptr_fml_ibuf, FFO_USR_ID , 0, (char *)c_usr_id, 0 );
  i_ferr[0] = Ferror32;
  i_err[1]  = Fchg32(ptr_fml_ibuf, FFO_SSSN_ID, 0, (char *)&l_session_id, 0 );
  i_ferr[1] = Ferror32;
  i_err[2]  = Fchg32(ptr_fml_ibuf, FFO_EBA_MTCH_ACT_NO, 0, c_mtch_acc , 0 );
  i_ferr[2] = Ferror32;
  i_err[3]  = Fchg32(ptr_fml_ibuf, FFO_XCHNG_CD, 0, (char *)c_xchng_cd , 0 );
  i_ferr[3] = Ferror32;
  i_err[4]  = Fchg32(ptr_fml_ibuf,FFO_OPERATION_TYP, 0, (char *)&c_opn_typ, 0);
  i_err[4]  = Ferror32;
  i_err[5] = Fchg32(ptr_fml_ibuf,FFO_ROUT_CRT, 0, (char *)c_rout_crt,0);
  i_ferr[5] = Ferror32;
  i_err[6] = Fchg32(ptr_fml_ibuf,FFO_FROM_DT, 0,  (char *)c_frm_dt, 0);
  i_ferr[6] = Ferror32;
  i_err[7]   = Fchg32(ptr_fml_ibuf, FFO_TO_DT, 0,  (char *)c_to_dt, 0);
  i_ferr[7] = Ferror32;
  i_err[8]   = Fchg32(ptr_fml_ibuf, FFO_UNDRLYNG, 0, (char *)c_undrlyng, 0);
  i_err[8]   = Ferror32;
  i_err[9]   = Fchg32(ptr_fml_ibuf,FFO_PRDCT_TYP, 0,(char *)&c_prd_typ, 0 );
  i_ferr[9]  = Ferror32;
  i_err[10]  = Fchg32(ptr_fml_ibuf,FFO_TRD_FLW, 0, (char *)&c_trd_flw, 0 );
  i_ferr[10] = Ferror32;
  i_err[11]  = Fchg32(ptr_fml_ibuf,FFO_SPL_FLG, 0, (char *)&c_spl_flg, 0 );
  i_ferr[11] = Ferror32;
  /*i_err[12]  = Fchg32(ptr_fml_ibuf,FFO_ORDR_RFRNC, 0, (char *)c_ord_rfr, 0 );
  i_ferr[12] = Ferror32;*/


   for(i=0; i < 12; i++)
    {
      if ( (i_err[ i ] == -1 ) )
      {
        fn_errlog( c_ServiceName, "S31205", Fstrerror32(i_ferr[i]),c_err_msg);
        tpfree ( ( char * ) ptr_fml_ibuf );
        Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_err_msg, 0 );
        return;
      }
    }

  fn_userlog( c_ServiceName, "Reading from file trdebuk");

  i_returncode = tpcall ( "SFO_TRADE_BOOK",
                         ( char *)ptr_fml_ibuf,
                         0,
                         ( char **)&ptr_fml_ibuf,
                         &l_recvbuf,
                         0
                         );


		if ( i_returncode != SUCC_BFR )
    {
      fn_errlog( c_ServiceName, "S31210",TPMSG,c_err_msg);
      tpfree((char*)ptr_fml_ibuf);
      return;
    }
  }

    tpfree((char*)ptr_fml_ibuf);
    return;
}

 void fo_opnpstn_fn(char *c_file_name, char *c_ServiceName, char *c_err_msg)
 {

   FILE *ptr_cn_file;
   FBFR32 *ptr_fml_ibuf;
   ptr_fml_ibuf  = ( FBFR32 *)NULL;
   char c_cntrct_tag;
   char c_rqst_typ;
   char c_usr_id[9];
   char c_data[1024+1];
   char c_o_data[1024+1];
   long    l_session_id;
   char c_mtch_acc[10 + 1];
   char c_xchng_cd [ 3+1 ];
   char c_undrlyng[10];
   char c_opn_typ;
   char c_prd_typ;
   int i_returncode = 0;
   int i_len     = 0;
   int i_err[40];
   int i_ferr[40];
   int i, j;
   int i_trnsactn;
   char c_rout_crt[20];

   long l_recvbuf = 0;
   MEMSET(c_mtch_acc);
   MEMSET(c_xchng_cd);
   MEMSET(c_undrlyng);

  fn_userlog( c_ServiceName, " the file name is :%s:",c_file_name);

  ptr_fml_ibuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN * 10);
  if ( ptr_fml_ibuf == NULL )
  {
    fn_errlog( c_ServiceName, "S31215", TPMSG, c_err_msg  );
    return;
  }

	ptr_cn_file = fopen(c_file_name, "r");

  if ( ptr_cn_file == NULL )
  {
    fn_errlog(c_ServiceName, "S31220", LIBMSG, c_err_msg);
    return;
  }

  while( !feof( ptr_cn_file) )
  {
    fgets( c_data, 1024, ptr_cn_file);
    if( c_data == NULL)
    {
       fn_errlog(c_ServiceName, "S31225", LIBMSG, c_err_msg);
       fclose( ptr_cn_file );
       tpfree((char*)ptr_fml_ibuf); 
			 return;
    }
    if( feof( ptr_cn_file ) != 0 )
    {
      fn_userlog( c_ServiceName, "END OF FILE " );
      tpfree((char*)ptr_fml_ibuf);
			break;
    }
     i_len = strlen(c_data);

    j=0;


    for(i=0;i<i_len;i++)
    {
      if(c_data[i] == ',')
      {
        c_o_data[j++] = ' ';

      }
      else if(c_data[i] == ' ')
      {
        continue;
      }
      else
      {
        c_o_data[j++] = c_data[i];
      }
		 }

    c_o_data[j] = '\0';



   sscanf(c_o_data,"%s %ld %s %s %s %c %c %c %c %s",
                c_usr_id,
                &l_session_id,
                c_mtch_acc,
                c_undrlyng,
                c_xchng_cd,
                &c_opn_typ,
                &c_prd_typ,
                &c_cntrct_tag,
                &c_rqst_typ,
								c_rout_crt
                );


    if( DEBUG_MSG_LVL_3 )
     {
      fn_userlog( c_ServiceName, "c_usr_id          :%s:",c_usr_id   );
      fn_userlog( c_ServiceName, "c_match_acc       :%s:",c_mtch_acc );
      fn_userlog( c_ServiceName, "c_undrlyng        :%s:",c_undrlyng );
      fn_userlog( c_ServiceName, "c_xchng_cd        :%s:",c_xchng_cd );
      fn_userlog( c_ServiceName, "c_opn_type        :%c:",c_opn_typ  );
      fn_userlog( c_ServiceName, "c_prd_typ         :%c:",c_prd_typ  );
      fn_userlog( c_ServiceName, "c_cntrct_tag      :%c:",c_cntrct_tag);
      fn_userlog( c_ServiceName, "c_rqst_typ        :%c:",c_rqst_typ  );
     }

    if(c_prd_typ == 'F' || c_prd_typ == 'P')
    {
      i_err[0]    = Fchg32(ptr_fml_ibuf,FFO_OPERATION_TYP, 0, (char *)&c_opn_typ, 0);
      i_ferr[0]   = Ferror32;
      i_err[1]    = Fchg32( ptr_fml_ibuf, FFO_XCHNG_CD, 0, (char *)c_xchng_cd, 0 );
      i_ferr[1]   = Ferror32;
      i_err[2]    = Fchg32( ptr_fml_ibuf, FFO_UNDRLYNG, 0, (char *)c_undrlyng, 0 );
      i_ferr[2]   = Ferror32;
      i_err[3]    = Fchg32( ptr_fml_ibuf, FFO_CNTRCT_TAG, 0, (char *)&c_cntrct_tag, 0 );
      i_ferr[3]   = Ferror32;
      i_err[4]    = Fchg32( ptr_fml_ibuf, FFO_PRDCT_TYP, 0, (char *)&c_prd_typ, 0);
      i_ferr[4]   = Ferror32;
      i_err[5]    = Fchg32(ptr_fml_ibuf,FML_RQST_TYP,0, (char *)&c_rqst_typ,0);
      i_ferr[5]   = Ferror32;
			i_err[6] 		= Fchg32(ptr_fml_ibuf,FFO_ROUT_CRT, 0, (char *)c_rout_crt,0);
  		i_ferr[6] 	=	Ferror32;
			i_err[7]  	= Fchg32(ptr_fml_ibuf, FFO_EBA_MTCH_ACT_NO, 0, c_mtch_acc , 0 );
  		i_ferr[7] 	= Ferror32;	
		 
			 for(i=0; i < 8 ; i++)
       {
          if ( (i_err[ i ] == -1 ) )
          {
            fn_errlog( c_ServiceName, "S31230", Fstrerror32(i_ferr[i]),c_err_msg);
            tpfree ( ( char * ) ptr_fml_ibuf );
            Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_err_msg, 0 );
            return;
          }
       }
			
      i_returncode = tpcall ( "SFO_CNTFUT_PSTN",
                            ( char *)ptr_fml_ibuf,
                            0,
                            ( char **)&ptr_fml_ibuf,
                            &l_recvbuf,
                            0);


      if ( i_returncode != SUCC_BFR )
      {
       fn_errlog( c_ServiceName, "S31235",TPMSG,c_err_msg);
       tpfree((char*)ptr_fml_ibuf);
       return;
      }
    }
    else if(c_prd_typ == 'U' || c_prd_typ == 'I')
    {
      i_err[0]   = Fchg32( ptr_fml_ibuf, FFO_USR_ID, 0,(char *)c_usr_id, 0 );
      i_ferr[0]  = Ferror32;
      i_err[1]   = Fchg32( ptr_fml_ibuf, FFO_SSSN_ID, 0,(char *)&l_session_id, 0 );
      i_ferr[1]  = Ferror32;
      i_err[2]   = Fchg32( ptr_fml_ibuf, FFO_EBA_MTCH_ACT_NO, 0,(char *)c_mtch_acc, 0 );
      i_ferr[2]  = Ferror32;
      i_err[3]   = Fchg32( ptr_fml_ibuf, FFO_OPERATION_TYP, 0,(char *)&c_opn_typ, 0 );
      i_ferr[3]  = Ferror32;
      i_err[4]   = Fchg32( ptr_fml_ibuf, FFO_XCHNG_CD, 0, (char *)c_xchng_cd, 0 );
      i_ferr[4]  = Ferror32;
      i_err[5]   = Fchg32( ptr_fml_ibuf, FFO_PRDCT_TYP, 0, (char *)&c_prd_typ, 0 );
      i_ferr[5]  = Ferror32;
      i_err[6]   = Fchg32( ptr_fml_ibuf, FFO_UNDRLYNG, 0, (char *)c_undrlyng, 0 );
      i_ferr[6]  = Ferror32;
      i_err[7]   = Fchg32(ptr_fml_ibuf,FML_RQST_TYP,0, (char *)&c_rqst_typ, 0);
      i_ferr[7]  = Ferror32;

       for(i=0; i < 8 ; i++)
       {
          if ( (i_err[ i ] == -1 ) )
          {
       			fn_userlog(c_ServiceName,"the value of i is :%d:",i);

				    fn_errlog( c_ServiceName, "S31240", Fstrerror32(i_ferr[i]),c_err_msg);
            tpfree ( ( char * ) ptr_fml_ibuf );
            Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_err_msg, 0 );
            return;
          }
       }


      i_returncode = tpcall ( "SFO_SLTPFP_PSTN",
                            ( char *)ptr_fml_ibuf,
                            0,
                            ( char **)&ptr_fml_ibuf,
                            &l_recvbuf,
                            0);


      if ( i_returncode != SUCC_BFR )
      {
       fn_errlog( c_ServiceName, "S31245",TPMSG,c_err_msg);
       tpfree((char*)ptr_fml_ibuf);
       return;
      }
    }
    else if(c_prd_typ == 'O')
    {
      i_err[0]    = Fchg32( ptr_fml_ibuf, FFO_OPERATION_TYP, 0, (char *)&c_opn_typ, 0 );
      i_ferr[0]   = Ferror32;
      i_err[1]    = Fchg32( ptr_fml_ibuf, FFO_XCHNG_CD, 0, (char *)c_xchng_cd, 0 );
      i_ferr[1]   = Ferror32;
      i_err[2]    = Fchg32( ptr_fml_ibuf, FFO_UNDRLYNG, 0, (char *)c_undrlyng, 0 );
      i_ferr[2]   = Ferror32;
      i_err[3]    = Fchg32( ptr_fml_ibuf,FML_RQST_TYP,0, (char *)&c_rqst_typ, 0 );
      i_ferr[3]   = Ferror32;
			i_err[4]    = Fchg32(ptr_fml_ibuf,FFO_ROUT_CRT, 0, (char *)c_rout_crt,0);
      i_ferr[4]   = Ferror32;
			i_err[5]   = Fchg32( ptr_fml_ibuf, FFO_EBA_MTCH_ACT_NO, 0,(char *)c_mtch_acc, 0 );
      i_ferr[5]  = Ferror32;
		
				fn_userlog(c_ServiceName," this is the open position for option");

       for(i=0; i < 5 ; i++)
       {
          if ( (i_err[ i ] == -1 ) )
          {
            fn_errlog( c_ServiceName, "S31250", Fstrerror32(i_ferr[i]),c_err_msg);
            tpfree ( ( char * ) ptr_fml_ibuf );
            Fadd32( ptr_fml_ibuf, FFO_ERR_MSG, c_err_msg, 0 );
            return;
          }
       }
		 i_returncode = tpcall ( "SFO_CNTOPT_PSTN",
                            ( char *)ptr_fml_ibuf,
                            0,
                            ( char **)&ptr_fml_ibuf,
                            &l_recvbuf,
                            0);


      if ( i_returncode != SUCC_BFR )
      {
       fn_errlog( c_ServiceName, "S31255",TPMSG,c_err_msg);
       tpfree((char*)ptr_fml_ibuf);
       return;
      }

    }

  }
      tpfree((char*)ptr_fml_ibuf);
      return;
 }

 void fo_brd(char *c_ServiceName, char *c_err_msg)
 {
 EXEC SQL BEGIN DECLARE SECTION;
 char  c_lst_trd_tm = '\0';
 char  c_xchng_cd[4];
 char  c_prd_typ = '\0';
 char  c_ctgry_indstk = '\0';
 char  c_undrlyng[7];
 char  c_expry_dt[21];
 char  c_exrc_typ = '\0';
 char  c_opt_typ = '\0';

 long  l_lst_trdd_prc = 0;
 long  l_lst_trdd_qty = 0;
 long  l_tot_trdd_qty = 0;
 long  l_avg_trdd_prc = 0;
 long  l_bst_bid_prc[5];
 long  l_bst_bid_qty[5];
 long  l_bst_offr_prc[5];
 long  l_bst_offr_qty[5];
 long  l_strike_prc = 0;
 long  l_token_no = 0;   /* Ver 1.1 */

 double  d_tot_bid_qty = 0 ;
 double  d_tot_offr_qty = 0;
 sql_cursor  sys_cursor;

 EXEC SQL END DECLARE SECTION;

 FBFR32 *ptr_fml_ibuf;
 ptr_fml_ibuf  = ( FBFR32 *)NULL;
 ptr_fml_ibuf = (FBFR32 *)tpalloc( "FML32", NULL, MIN_FML_BUF_LEN * 10);
 if ( ptr_fml_ibuf == NULL )
  {
    fn_errlog( c_ServiceName, "S31260", TPMSG, c_err_msg  );
    return;
  }
 int i_trnsactn;

 EXEC SQL ALLOCATE :sys_cursor ;

 i_trnsactn = fn_begintran( c_ServiceName, c_err_msg );
 if( i_trnsactn == -1 )
 {
   fn_errlog(c_ServiceName, "S31265", LIBMSG, c_err_msg);
	 tpfree((char*)ptr_fml_ibuf);
   return;
 }

 EXEC SQL EXECUTE
 BEGIN    
 OPEN    :sys_cursor FOR
 SELECT  ftq_xchng_cd,
         ftq_prdct_typ,
         ftq_indstk,
         ftq_undrlyng,
         ftq_expry_dt,
         ftq_exer_typ,
         NVL(ftq_opt_typ,'*'),
         NVL(ftq_strk_prc,0),
         ftq_token_no                   /*** Ver 1.1 ***/
 FROM    ftq_fo_trd_qt
 WHERE   ftq_token_no is not null      /*** Ver 1.1 ***/   
 AND   	 ftq_token_no !=0       /*** Ver 1.4 ***/   
 AND		 ftq_xchng_cd = 'NFO';
 END;
 END-EXEC;

 if ( SQLCODE != 0 )
 {
  fn_errlog( c_ServiceName, "S31270", SQLMSG, c_err_msg  );
  fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
 	EXEC SQL CLOSE :sys_cursor;
  EXEC SQL FREE :sys_cursor;
  tpfree((char*)ptr_fml_ibuf);
 	return;

 }
 while(1)
 {
 c_prd_typ = '\0';
 c_ctgry_indstk = '\0';
 c_opt_typ = '\0';
 c_exrc_typ = '\0';
 l_strike_prc = 0;
 l_token_no = 0;

 MEMSET(c_xchng_cd);
 MEMSET(c_undrlyng);
 MEMSET(c_expry_dt);


 EXEC SQL FETCH :sys_cursor
          INTO  :c_xchng_cd,
                :c_prd_typ,
                :c_ctgry_indstk,
                :c_undrlyng,
                :c_expry_dt,
                :c_exrc_typ,
                :c_opt_typ,
                :l_strike_prc,
                :l_token_no;        /*** Ver 1.1 ***/


 if ( SQLCODE != 0 )
    {
   if ( SQLCODE == NO_DATA_FOUND )
      {
      fn_userlog(c_ServiceName," Inside NO DATA FOUND ");
      break;
      }
   else
      {
      fn_errlog( c_ServiceName, "S31275", SQLMSG, c_err_msg  );
      fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
			EXEC SQL CLOSE :sys_cursor;
      EXEC SQL FREE :sys_cursor;
 			tpfree((char*)ptr_fml_ibuf);
      return;
      }
    }
		 
 if( DEBUG_MSG_LVL_3 )
   { 
	   fn_userlog(c_ServiceName, "c_prd_typ :%s:" , c_prd_typ);
     fn_userlog(c_ServiceName,"*** BEFORE SELECT FROM FTQ ***  ");
     fn_userlog(c_ServiceName, "c_xchng_cd :%s:", c_xchng_cd);
     fn_userlog(c_ServiceName, "c_prd_typ :%c:" , c_prd_typ);
     fn_userlog(c_ServiceName, "c_ctgry_indstk :%c:" , c_ctgry_indstk);
     fn_userlog(c_ServiceName, "c_undrlyng :%s:", c_undrlyng);
     fn_userlog(c_ServiceName, "c_expry_dt :%s:",c_expry_dt);
     fn_userlog(c_ServiceName, "c_exrc_typ :%c:" , c_exrc_typ);
     fn_userlog(c_ServiceName, "c_opt_typ :%c: ", c_opt_typ);
     fn_userlog(c_ServiceName, "l_strike_prc :%ld:" , l_strike_prc);
     fn_userlog(c_ServiceName, "l_token_no :%ld:" , l_token_no );     /*** Ver 1.1 ***/
	 }


 EXEC SQL
        SELECT    NVL(ftq_lst_trd_prc,0),
        /**       ftq_lst_trd_tm, **/
                  NVL(ftq_lst_trd_qty,0),
                  NVL(ftq_tot_qty_trdd,0),
                  NVL(ftq_avrg_trd_prc,0),
                  NVL(ftq_bst1_bid_prc,0),
                  NVL(ftq_bst2_bid_prc,0),
                  NVL(ftq_bst3_bid_prc,0),
                  NVL(ftq_bst4_bid_prc,0),
                  NVL(ftq_bst5_bid_prc,0),
                  NVL(ftq_bst1_bid_qty,0),
                  NVL(ftq_bst2_bid_qty,0),
                  NVL(ftq_bst3_bid_qty,0),
                  NVL(ftq_bst4_bid_qty,0),
                  NVL(ftq_bst5_bid_qty,0),
                  NVL(ftq_bst1_offr_prc,0),
                  NVL(ftq_bst2_offr_prc,0),
                  NVL(ftq_bst3_offr_prc,0),
                  NVL(ftq_bst4_offr_prc,0),
                  NVL(ftq_bst5_offr_prc,0),
                  NVL(ftq_bst1_offr_qty,0),
                  NVL(ftq_bst2_offr_qty,0),
                  NVL(ftq_bst3_offr_qty,0),
                  NVL(ftq_bst4_offr_qty,0),
                  NVL(ftq_bst5_offr_qty,0),
                  NVL(ftq_tot_bid_qty,0),
                  NVL(ftq_tot_offr_qty,0)
           INTO   :l_lst_trdd_prc,
          /**     :c_lst_trd_tm,     **/
                  :l_lst_trdd_qty,
                  :l_tot_trdd_qty,
                  :l_avg_trdd_prc,
                  :l_bst_bid_prc[0],
                  :l_bst_bid_prc[1],
                  :l_bst_bid_prc[2],
                  :l_bst_bid_prc[3],
                  :l_bst_bid_prc[4],
                  :l_bst_bid_qty[0],
                  :l_bst_bid_qty[1],
                  :l_bst_bid_qty[2],
                  :l_bst_bid_qty[3],
                  :l_bst_bid_qty[4],
                  :l_bst_offr_prc[0],
                  :l_bst_offr_prc[1],
                  :l_bst_offr_prc[2],
                  :l_bst_offr_prc[3],
                  :l_bst_offr_prc[4],
                  :l_bst_offr_qty[0],
                  :l_bst_offr_qty[1],
                  :l_bst_offr_qty[2],
                  :l_bst_offr_qty[3],
                  :l_bst_offr_qty[4],
                  :d_tot_bid_qty,
                  :d_tot_offr_qty
            FROM  ftq_fo_trd_qt
          /***  WHERE ftq_xchng_cd      = :c_xchng_cd
            AND   ftq_prdct_typ     = :c_prd_typ
            AND   ftq_indstk        = :c_ctgry_indstk
            AND   ftq_undrlyng      = :c_undrlyng
            AND   ftq_expry_dt      = to_date ( :c_expry_dt, 'dd-Mon-yyyy' )
            AND   ftq_exer_typ      = :c_exrc_typ
            AND   ftq_opt_typ       = :c_opt_typ
            AND   ftq_strk_prc      = :l_strike_prc;    *** Commented in Ver 1.1 ***/
          WHERE  ftq_token_no = :l_token_no;            /*** Ver 1.1 ***/            

 if(SQLCODE != 0 )
   {
      fn_errlog( c_ServiceName, "S31280", SQLMSG, c_err_msg  );
      fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
      EXEC SQL CLOSE :sys_cursor;
      EXEC SQL FREE :sys_cursor;
      tpfree((char*)ptr_fml_ibuf);
		  return;
    }

  EXEC SQL
  UPDATE ftq_fo_trd_qt
     SET ftq_lst_trd_prc = :l_lst_trdd_prc,
    /**  ftq_lst_trd_tm    = :c_lst_trd_tm,  **/
         ftq_lst_trd_qty   = :l_lst_trdd_qty,
         ftq_tot_qty_trdd  = :l_tot_trdd_qty,
         ftq_avrg_trd_prc  = :l_avg_trdd_prc,
         ftq_bst1_bid_prc  = :l_bst_bid_prc[0],
         ftq_bst2_bid_prc  = :l_bst_bid_prc[1],
         ftq_bst3_bid_prc  = :l_bst_bid_prc[2],
         ftq_bst4_bid_prc  = :l_bst_bid_prc[3],
         ftq_bst5_bid_prc  = :l_bst_bid_prc[4],
         ftq_bst1_bid_qty  = :l_bst_bid_qty[0],
         ftq_bst2_bid_qty  = :l_bst_bid_qty[1],
         ftq_bst3_bid_qty  = :l_bst_bid_qty[2],
         ftq_bst4_bid_qty  = :l_bst_bid_qty[3],
         ftq_bst5_bid_qty  = :l_bst_bid_qty[4],
         ftq_bst1_offr_prc = :l_bst_offr_prc[0],
         ftq_bst2_offr_prc = :l_bst_offr_prc[1],
         ftq_bst3_offr_prc = :l_bst_offr_prc[2],
         ftq_bst4_offr_prc = :l_bst_offr_prc[3],
         ftq_bst5_offr_prc = :l_bst_offr_prc[4],
         ftq_bst1_offr_qty = :l_bst_offr_qty[0],
         ftq_bst2_offr_qty = :l_bst_offr_qty[1],
         ftq_bst3_offr_qty = :l_bst_offr_qty[2],
         ftq_bst4_offr_qty = :l_bst_offr_qty[3],
         ftq_bst5_offr_qty = :l_bst_offr_qty[4],
         ftq_tot_bid_qty   = :d_tot_bid_qty,
         ftq_tot_offr_qty  = :d_tot_offr_qty
  /*** WHERE   ftq_xchng_cd      = :c_xchng_cd
    AND   ftq_prdct_typ     = :c_prd_typ
    AND   ftq_indstk        = :c_ctgry_indstk
    AND   ftq_undrlyng      = :c_undrlyng
    AND   ftq_expry_dt      = to_date ( :c_expry_dt, 'dd-Mon-yyyy' )
    AND   ftq_exer_typ      = :c_exrc_typ
    AND   ftq_opt_typ       = :c_opt_typ
    AND   ftq_strk_prc      = :l_strike_prc;  *** Commented in Ver 1.1 ***/
  WHERE ftq_token_no = :l_token_no;           /*** Ver 1.1 ***/ 


 if ( SQLCODE != 0 )
    {
      fn_errlog ( c_ServiceName, "S31285", SQLMSG, c_err_msg );
      fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
      EXEC SQL CLOSE :sys_cursor;
      EXEC SQL FREE :sys_cursor;
      tpfree((char*)ptr_fml_ibuf);
  		return;
    }
 if( DEBUG_MSG_LVL_3 )
 {
 fn_userlog(c_ServiceName, "AFTER UPDATE l_token_no :%ld:" , l_token_no );     /*** Ver 1.1 ***/
 }

 fn_userlog(c_ServiceName,"*** FTQ values updated successfully *** ");
 }
 tpfree((char*)ptr_fml_ibuf);
 fn_aborttran( c_ServiceName, i_trnsactn, c_err_msg );
 }


