/***********************************************************************/
/* bat_fo_gmpipo.pc : Program does the pipo both exchange NFO & BFO    */ 
/*                      in one run only                                */
/* Ver : 1.0 - Sachin Birje - 23-Feb-2013                              */
/* Ver : 1.1 - Change in game pipo logic | Sachin Birje                */
/***********************************************************************/

#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <stdio.h>
#include <sqlca.h>
#include <fo_fml_def.h>
#include <fml_def.h>
#include <fn_log.h>
#include <fn_pos.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <string.h>
#include <userlog.h>
#include <stdlib.h>
#include <fn_read_debug_lvl.h>

void BAT_FO_GMPIPO( int argc, char *argv[] )
{

  double d_alctd_amt=0;
  double d_bft_amt=0;
  double d_amount_frm_bft=0;
  double d_amount_frm_alloc=0;
  double  d_pipo_amount;
  double d_amt_to_be_upd=0;     /** Ver 1.1 **/
  double d_amt=0;               /** Ver 1.1 **/
  
  int    i_trnsctn=0;
  int    i_gid;

  long   l_inner_counter=0;
  long   l_pipo_count=0;

  char   c_narration_id[4];
  char   c_reference[16];
  char   c_cln_mtch_accnt[11];
  char   c_xchng_cd[4];
  char   c_run_dt[13];
  char   c_msg[256];
  char   c_err_msg[256];
  char   c_ServiceName [ 33 ];
  char   c_trd_dt[13];
  char   c_dc_flg;
  char   c_new_dr_cr_flg;       /** Ver 1.1 **/  


	char c_program_nm[33];
  char c_xchng_cd_tmp[4];
  char c_match_id[11];
  char c_error_txt[256];

  MEMSET(c_program_nm);
  MEMSET(c_xchng_cd_tmp);
  MEMSET(c_match_id);
  MEMSET(c_error_txt);

  typedef struct ___list
  {
    char c_cln_mtch_accnt1[11];
    double  d_pipo_amount1;
    char   c_xchng_cd1[4];
    char   c_dc_flg1;
    int    i_gid1;
    char   c_trd_dt1[13];
  } st_pipo_list;

  st_pipo_list * ptr_pipo_list = NULL;

  MEMSET(c_narration_id);
  MEMSET(c_reference);

  strcpy ( c_ServiceName, argv[0] );
	strcpy(c_program_nm,"bat_fo_gmpipo");
  strcpy(c_run_dt,argv[4]);

  INITBATDBGLVL(argv[0]);
  sprintf ( c_msg, "Batch process %s started", argv[0] );
 
  EXEC SQL
      SELECT  count(c_match)
        INTO  :l_pipo_count
       FROM
       (SELECT FBD_CLM_MTCH_ACCNT c_match
        FROM  FBD_FO_BNK_DRCR
       WHERE  decode(FBD_DC_FLG,'D',FBD_PAYIN_DT,FBD_PAYOUT_DT ) = to_date(:c_run_dt, 'dd-Mon-yyyy' )
         AND  FBD_DC_AMT != FBD_PI_PO_AMT + FBD_INT_ADJ_AMT
         GROUP by FBD_CLM_MTCH_ACCNT,
                  FBD_XCHNG_CD,
                  FBD_DC_FLG,
                  FBD_GRP_ID,
                  FBD_TRD_DT                /** Ver 1.1 ***/
       );
  if( (SQLCODE != 0) && (SQLCODE != NO_DATA_FOUND))
  {
   fn_errlog(c_ServiceName, "S31005",SQLMSG,c_err_msg);
	 strcpy(c_error_txt,"System error. Contact System Support"); 
   fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);  
   return ;
  }

  fn_userlog(c_ServiceName," Total Records To be processed :%ld:",l_pipo_count);

  if( l_pipo_count > 0 )
  {
   ptr_pipo_list=calloc(sizeof(st_pipo_list),l_pipo_count);

   if (ptr_pipo_list == NULL )
   {
      fn_errlog ( c_ServiceName, "S31010", LIBMSG, c_err_msg  );
			strcpy(c_error_txt,"System error. Contact System Support");
   		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      fn_userlog(c_ServiceName,"Unable to Allocat Memory ");
      return ;
   }

   EXEC SQL
      DECLARE cur_gm_pipo CURSOR FOR
      SELECT  FBD_CLM_MTCH_ACCNT,
              NVL(SUM(FBD_DC_AMT - FBD_PI_PO_AMT - FBD_INT_ADJ_AMT),0),
              FBD_XCHNG_CD,
              FBD_DC_FLG,
              FBD_GRP_ID,
              FBD_TRD_DT                 /** Ver 1.1 **/
        FROM  FBD_FO_BNK_DRCR
       WHERE  decode(FBD_DC_FLG,'D',FBD_PAYIN_DT,FBD_PAYOUT_DT ) = to_date(:c_run_dt, 'dd-Mon-yyyy' )
         AND  FBD_DC_AMT != FBD_PI_PO_AMT + FBD_INT_ADJ_AMT
         GROUP by FBD_CLM_MTCH_ACCNT,FBD_XCHNG_CD,FBD_DC_FLG,FBD_GRP_ID,FBD_TRD_DT;    /** Ver 1.1 **/

   EXEC SQL
      OPEN  cur_gm_pipo;
   if(SQLCODE  != 0)
   {
    fn_errlog(c_ServiceName, "S31015",SQLMSG,c_err_msg);
    EXEC SQL CLOSE cur_gm_pipo;
		strcpy(c_error_txt,"System error. Contact System Support");
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
    return ;
   }

   /*Load*/
   EXEC SQL
    FOR :l_pipo_count
   FETCH cur_gm_pipo
    INTO :ptr_pipo_list;

   if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
   {
    fn_errlog(c_ServiceName, "S31020",SQLMSG,c_err_msg);
    EXEC SQL CLOSE cur_gm_pipo;
		strcpy(c_error_txt,"System error. Contact System Support");
    fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
    return ;
   }

   EXEC SQL CLOSE cur_gm_pipo;

   for(l_inner_counter=0;l_inner_counter < l_pipo_count ; l_inner_counter++)
   {
    strcpy(c_cln_mtch_accnt,ptr_pipo_list[l_inner_counter].c_cln_mtch_accnt1);
    d_pipo_amount = ptr_pipo_list[l_inner_counter].d_pipo_amount1;
    strcpy(c_xchng_cd,ptr_pipo_list[l_inner_counter].c_xchng_cd1);
    c_dc_flg = ptr_pipo_list[l_inner_counter].c_dc_flg1;
    i_gid =  ptr_pipo_list[l_inner_counter].i_gid1;
    strcpy(c_trd_dt, ptr_pipo_list[l_inner_counter].c_trd_dt1);  /** Ver 1.1 ***/

    rtrim(c_trd_dt);     /** Ver 1.1 ***/

    fn_userlog(c_ServiceName,"Processing Pipo record :%ld:",l_inner_counter);

    fn_userlog(c_ServiceName," c_cln_mtch_accnt :%s:",c_cln_mtch_accnt);
    fn_userlog(c_ServiceName," c_xchng_cd :%s:",c_xchng_cd);
    fn_userlog(c_ServiceName," c_dc_flg  :%c:",c_dc_flg);
    fn_userlog(c_ServiceName," Pipo Amt  :%lf:",d_pipo_amount);     /** Ver 1.1 ***/
    fn_userlog(c_ServiceName," i_gid :%d:",i_gid); 
    fn_userlog(c_ServiceName," Trade Date :%s:",c_trd_dt);          /** Ver 1.1 ***/
		
		strcpy(c_xchng_cd_tmp,c_xchng_cd);
		strcpy(c_match_id,c_cln_mtch_accnt);
			
    if( d_pipo_amount != 0 )
    {
     i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
     if ( i_trnsctn == -1 )
     {
      fn_errlog(c_ServiceName, "L31165",LIBMSG,c_err_msg);
      fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
			strcpy(c_error_txt,"System error. Contact System Support");
   		fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      return ;
     }

     if( c_dc_flg == 'C' )  /*** Payout ***/
     {
      EXEC SQL
        UPDATE FAB_FO_ALC_BFT_SMRY
           SET FAB_BFT_AMT = FAB_BFT_AMT + :d_pipo_amount
         WHERE FAB_CLM_MTCH_ACCNT = :c_cln_mtch_accnt;

      if( SQLCODE != 0 )
      {
       fn_errlog(c_ServiceName, "S31025",SQLMSG,c_err_msg);
       fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
			 strcpy(c_error_txt,"System error. Contact System Support");
       fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);	
       return; 
      }
     }
     else       /*** Payin ****/
     {

      EXEC SQL
        SELECT
                nvl(FAB_ALCTD_AMT,0),
                nvl(FAB_BFT_AMT,0)
          INTO  :d_alctd_amt,
                :d_bft_amt
        FROM    FAB_FO_ALC_BFT_SMRY
       WHERE    FAB_CLM_MTCH_ACCNT = :c_cln_mtch_accnt;

       if( SQLCODE != 0 )
       {
        fn_errlog(c_ServiceName, "S31030",SQLMSG,c_err_msg);
        fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
				strcpy(c_error_txt,"System error. Contact System Support");
      	fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
        return ;
       }

       d_amount_frm_bft = 0;

       if( d_bft_amt > 0 )
       {
          if( d_bft_amt > ( -1 * d_pipo_amount) )
             d_amount_frm_bft = d_pipo_amount;
          else
             d_amount_frm_bft = -1 * d_bft_amt;

          EXEC SQL
             UPDATE FAB_FO_ALC_BFT_SMRY
                SET FAB_BFT_AMT = FAB_BFT_AMT + :d_amount_frm_bft
              WHERE FAB_CLM_MTCH_ACCNT = :c_cln_mtch_accnt;
          if( SQLCODE != 0 )
          {
           fn_errlog(c_ServiceName, "S31035",SQLMSG,c_err_msg);
           fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
					 strcpy(c_error_txt,"System error. Contact System Support");
      		 fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
           return ;
          }
       }

       d_amount_frm_alloc = d_pipo_amount + (-1 * d_amount_frm_bft );
       if( d_alctd_amt > 0 )
       {
          EXEC SQL
            UPDATE FAB_FO_ALC_BFT_SMRY
               SET FAB_ALCTD_AMT = FAB_ALCTD_AMT + :d_amount_frm_alloc
             WHERE FAB_CLM_MTCH_ACCNT = :c_cln_mtch_accnt;
          if( SQLCODE != 0 )
          {
           fn_errlog(c_ServiceName, "S31040",SQLMSG,c_err_msg);
           fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
					 strcpy(c_error_txt,"System error. Contact System Support");
     			 fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
           return ;
          }

       }
     }

     EXEC SQL
        UPDATE FBD_FO_BNK_DRCR
           SET FBD_PI_PO_AMT = FBD_PI_PO_AMT + :d_pipo_amount
         WHERE FBD_XCHNG_CD  = :c_xchng_cd
           AND FBD_CLM_MTCH_ACCNT = :c_cln_mtch_accnt
           AND FBD_DC_FLG    = :c_dc_flg
           AND decode(FBD_DC_FLG,'D',FBD_PAYIN_DT,FBD_PAYOUT_DT ) = to_date(:c_run_dt, 'dd-Mon-yyyy' )
           AND FBD_TRD_DT = to_date(:c_trd_dt, 'dd-Mon-yyyy' )        /** Ver 1.1 ***/
           AND FBD_DC_AMT != FBD_PI_PO_AMT + FBD_INT_ADJ_AMT;

     if( SQLCODE != 0 )
     {
      fn_errlog(c_ServiceName, "S31045",SQLMSG,c_err_msg);
      fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
			strcpy(c_error_txt,"System error. Contact System Support");
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      return ;
     }
   
     /*** Ver 1.1 *** starts here ***/
     d_amt=0;
     d_amt_to_be_upd=0;
 
     EXEC SQL
       SELECT fcb_dc_amt
         INTO :d_amt 
         FROM fcb_fo_clnt_blncs
        WHERE fcb_xchng_cd =  :c_xchng_cd
         AND  decode(fcb_dc_flg ,'D',fcb_payin_dt,fcb_payout_dt ) = to_date(:c_run_dt, 'dd-Mon-yyyy' )
         AND  fcb_grp_id   =  :i_gid
         AND  fcb_clm_mtch_accnt  = :c_cln_mtch_accnt
         AND  FCB_TRD_DT   = to_date(:c_trd_dt, 'dd-Mon-yyyy' );  
     if( SQLCODE != 0 )
     {
      fn_errlog(c_ServiceName, "S31050",SQLMSG,c_err_msg);
      fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
      strcpy(c_error_txt,"System error. Contact System Support");
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      return ;
     } 
    
     d_amt_to_be_upd = d_amt + ( d_pipo_amount * -1 );

     if( (long)(d_amt_to_be_upd*100) >= 0 )
     {
       c_new_dr_cr_flg = 'C'; 
     }
     else
     {
       c_new_dr_cr_flg = 'D';
     }  
     /*** Ver 1.1 ends here ***/

      
     EXEC SQL
        UPDATE  fcb_fo_clnt_blncs
           SET  fcb_dc_flg   =  :c_new_dr_cr_flg, 
             /**   fcb_dc_amt   = fcb_dc_amt + ( :d_pipo_amount * -1 )  *** Ver 1.1 **/
                fcb_dc_amt   =  :d_amt_to_be_upd         /** Ver 1.1 **/ 
         WHERE  fcb_xchng_cd =  :c_xchng_cd
           AND  decode(fcb_dc_flg ,'D',fcb_payin_dt,fcb_payout_dt ) = to_date(:c_run_dt, 'dd-Mon-yyyy' )
           AND  fcb_grp_id   =  :i_gid
           AND  fcb_clm_mtch_accnt  = :c_cln_mtch_accnt
           AND  FCB_TRD_DT   = to_date(:c_trd_dt, 'dd-Mon-yyyy' ); /** Ver 1.1 **/

     if( SQLCODE != 0 )
     {
      fn_errlog(c_ServiceName, "S31055",SQLMSG,c_err_msg);
      fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
			strcpy(c_error_txt,"System error. Contact System Support");
      fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
      return ;
     }

     MEMSET(c_narration_id);

     EXEC SQL
        SELECT FNM_NARRATION_ID
          INTO :c_narration_id
          FROM FNM_FO_NARRATION_MSTR
         WHERE FNM_GRP_ID = :i_gid
           AND FNM_LMT_PRJ_FLG = 'B';

      if( SQLCODE != 0 )
      {
       fn_errlog(c_ServiceName, "S31060",SQLMSG,c_err_msg);
       fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
			 strcpy(c_error_txt,"System error. Contact System Support");
       fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);	
       return ;
      }

      MEMSET(c_reference);

      EXEC SQL
      SELECT to_char(sysdate,'DDMONYYYY')||LPAD(piposeq.nextval,6,0)
      INTO : c_reference
      FROM   DUAL;

      if( SQLCODE != 0 )
      {
       fn_errlog(c_ServiceName, "S31065",SQLMSG,c_err_msg);
       fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
			 strcpy(c_error_txt,"System error. Contact System Support");
       fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
       return ;
      }

      EXEC SQL
      INSERT INTO fll_fo_lmtupd_log
      ( FLL_XCHNG_CD,
        FLL_TRD_DT,
        FLL_GRP_ID,
        FLL_CLM_MTCH_ACCNT,
        FLL_TRN_DT,
        FLL_SEQ_NUM,
        FLL_NARRATION_ID,
        FLL_DC_FLG,
        FLL_DC_AMT,
        FLL_REF_RMRKS )
      VALUES
      ( :c_xchng_cd,
       /** :c_run_dt, ***/
        :c_trd_dt,          /*** Ver 1.1 ***/
        :i_gid,
        :c_cln_mtch_accnt,
        SYSDATE,
        fll_ora_seq.nextval,
        :c_narration_id,
        /** :c_dc_flg, *** Ver 1.1 ***/
        DECODE(:c_dc_flg,'C','D','D','C'),    /*** Ver 1.1 ***/
        (:d_pipo_amount * -1),
        :c_reference
      );
      if( SQLCODE != 0 )
      {
       fn_errlog(c_ServiceName, "S31070",SQLMSG,c_err_msg);
       fn_aborttran(c_ServiceName, i_trnsctn, c_err_msg );
       return ;
      }

      if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
      {
       fn_errlog( c_ServiceName, "L31175",LIBMSG,c_err_msg);
       fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			 strcpy(c_error_txt,"System error. Contact System Support");
       fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
       return;
      }
    }
    else
    {
     fn_userlog(c_ServiceName," Payin Payout Amount is Zero ");
     continue;
    }
  }

  /*  Free the List*/
  free(ptr_pipo_list);


 } /*** End of l_l_pipo_count > 0 ***/
 return;
 }

int fn_bat_init ( int argc, char *argv[] )
{
  fn_var = BAT_FO_GMPIPO;
  return 0;
}

void fn_bat_term ( int argc, char *argv[] )
{
  return;
}

int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
  return 0;
}

