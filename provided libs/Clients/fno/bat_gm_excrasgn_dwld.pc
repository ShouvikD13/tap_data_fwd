/**************************************************************************************/
/* bat_gm_excrasgn_dwld.pc - Program to generate the data for Assignment and Excersice*/ 
/*                           download process.                                        */
/* Log                     : Sachin Birje                                             */
/*                                                                                    */
/* Ver 1.1								 : Bug fix by Navina                                        */                                     
/**************************************************************************************/

#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <stdio.h>
#include <sqlca.h>    
#include <fo_fml_def.h>
#include <fml_def.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <string.h>	
#include <userlog.h>
#include <stdlib.h>	
#include <fn_read_debug_lvl.h>	
#include <fn_pos.h>

int i;
#define INIT(x,y) for(i=0 ;i<y;i++)x[i] = 0


int fn_assgnmt_dwld(char* c_xchng_cd,
                    char* c_trd_dt,
                    char* c_ServiceName,
                    char* c_err_msg);

int fn_excer_dwld(char* c_xchng_cd,
                    char* c_trd_dt,
                    char* c_ServiceName,
                    char* c_err_msg);

void BAT_GM_EXCRASGN_DWLD( int argc, char *argv[] )
{
  int i_ch_val=0;
	int i_trnsctn=0;		/*** Ver 1.1 ***/

  long l_recd_cnt=0;

  char c_msg[256];
  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];
  char c_cln_mtch_accnt[ 11 ];
  char c_trd_dt[12];
  char c_xchng_cd[4];

  char c_program_nm[33];
  char c_xchng_cd_tmp[4];
  char c_match_id[11];
  char c_error_txt[256];

  memset(c_program_nm,'\0',sizeof(c_program_nm));
  memset(c_xchng_cd_tmp,'\0',sizeof(c_xchng_cd_tmp));
  memset(c_match_id,'\0',sizeof(c_match_id));
  memset(c_error_txt,'\0',sizeof(c_error_txt));

	INIT(c_msg,256);
	INIT(c_ServiceName,33);
	INIT(c_err_msg,256);
  
  strcpy ( c_ServiceName, argv[0] );

  strcpy(c_program_nm,c_ServiceName);
  strcpy(c_xchng_cd_tmp,argv[2]);

  MEMSET(c_trd_dt);

  fn_userlog(c_ServiceName,"bat_gm_excrasgn_dwld Started ");

  strcpy( c_xchng_cd, argv[2] );

  fn_userlog(c_ServiceName,"c_xchng_cd :%s:",c_xchng_cd);

  EXEC SQL
    SELECT to_date(exg_nxt_trd_dt,'dd-Mon-yyyy')
      INTO :c_trd_dt
      FROM EXG_XCHNG_MSTR
     WHERE EXG_XCHNG_CD= :c_xchng_cd;

  if(SQLCODE  != 0)
  {
   fn_errlog(c_ServiceName, "S31005",SQLMSG,c_err_msg);
   strcpy(c_error_txt,"System error. Contact System Support");
   fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
   return;
  }

	/*** Ver 1.1 starts here ***/
	i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
   fn_errlog( c_ServiceName, "S31010", LIBMSG , c_err_msg );
   return;
  }

	EXEC SQL
		DELETE 
		FROM  FPT_FO_PS01_TMP 
		WHERE FPT_POSITIONDATE = :c_trd_dt;

	if ( (SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND ) )
  {
   fn_errlog(c_ServiceName, "S31015",SQLMSG,c_err_msg);
	 fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
   strcpy(c_error_txt,"System error. Contact System Support");
   fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
   return;
  }

	if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
   fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
   fn_errlog( c_ServiceName, "S31020", SQLMSG , c_err_msg );
   return;
  }
	/*** Ver 1.1 ends here ***/

  /**** Assignment Download ******/

  i_ch_val= fn_assgnmt_dwld(c_xchng_cd,
                            c_trd_dt,
                            c_ServiceName,
                            c_err_msg);
  if( i_ch_val !=0 )
  {
   fn_errlog(c_ServiceName, "S31025",LIBMSG,c_err_msg);
   strcpy(c_error_txt,"System error. Contact System Support");
   fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
   return;
  } 

  /**** Excersize Download ****/
 
  i_ch_val= fn_excer_dwld(c_xchng_cd,
                            c_trd_dt,
                            c_ServiceName,
                            c_err_msg);
  if( i_ch_val !=0 )
  {
   fn_errlog(c_ServiceName, "S31030",LIBMSG,c_err_msg);
   strcpy(c_error_txt,"System error. Contact System Support");
   fn_log_prcs_err(c_program_nm,c_xchng_cd_tmp,c_match_id,c_error_txt,c_ServiceName,c_err_msg);
   return;
  }  

return;

}
int fn_assgnmt_dwld(char* c_xchng_cd,
                    char* c_trd_dt,
                    char* c_ServiceName,
                    char* c_err_msg)
{

  int i_trnsctn=0;
  double d_sttlmnt_prcs;
  double d_strike_price;

  long l_ca_level;
  long l_strike_price;
  long l_open_position;
  long l_assgnmt_qty;
  long l_sttlmnt_prcs;

  char c_assgn_dt[12];
  char c_client_code[11];
  char c_contract_ins_typ[7];
  char c_symbol[21];
  char c_undrlyng[21];
  char c_expiry_dt[12];
  char c_option_typ[3];
  char c_indstk_flg;
  char c_excr_typ;
  char c_opt_typ;

  fn_userlog(c_ServiceName," Trade Date :%s:",c_trd_dt);
   
  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
   fn_errlog( c_ServiceName, "S31035", LIBMSG , c_err_msg );
   return -1;
  }

   EXEC SQL
    DECLARE cur_gm_asgnmt_dwld CURSOR FOR
     select FOP_CLM_MTCH_ACCNT,
            FOP_INDSTK,
            FOP_UNDRLYNG,
            FOP_EXPRY_DT,
            FOP_STRK_PRC,
            FOP_OPT_TYP,
            FOP_EXER_TYP,
            sum(FOP_OPNPSTN_QTY),
            sum(FOP_OPNPSTN_QTY)
       from FOP_FO_OPTIONS_PSTN,LTQ_TRD_QT
      WHERE FOP_UNDRLYNG = LTQ_STCK_CD
        AND FOP_XCHNG_CD = :c_xchng_cd
        AND LTQ_XCHNG_CD = decode(:c_xchng_cd,'NFO','NSE','BSE')
        AND FOP_PRDCT_TYP='O'
        AND FOP_OPT_TYP='C'
        AND FOP_OPNPSTN_QTY < 0
        AND FOP_EXPRY_DT = :c_trd_dt
        AND ( LTQ_RT * 100 ) > FOP_STRK_PRC
        group by FOP_CLM_MTCH_ACCNT,
                 FOP_INDSTK,
                 FOP_UNDRLYNG,
                 FOP_EXPRY_DT,
                 FOP_STRK_PRC,
                 FOP_OPT_TYP,
                 FOP_EXER_TYP
     UNION ALL
      select FCP_CLM_MTCH_ACCNT,
             FCP_INDSTK,
             FCP_UNDRLYNG, 
             FCP_EXPRY_DT,
             FCP_STRK_PRC,
             FCP_OPT_TYP,
             FCP_EXER_TYP,
             sum(FCP_OPNPSTN_QTY),
             sum(FCP_OPNPSTN_QTY)
        FROM FCP_FO_SPN_CNTRCT_PSTN,LTQ_TRD_QT
       WHERE FCP_UNDRLYNG = LTQ_STCK_CD
         AND FCP_XCHNG_CD = :c_xchng_cd
         AND LTQ_XCHNG_CD = decode(:c_xchng_cd,'NFO','NSE','BSE')
         AND FCP_PRDCT_TYP ='O'
         AND FCP_OPT_TYP ='C'
         AND FCP_OPNPSTN_QTY < 0
         AND FCP_EXPRY_DT =:c_trd_dt 
         AND ( LTQ_RT * 100) > FCP_STRK_PRC
         Group by FCP_CLM_MTCH_ACCNT,
                  FCP_INDSTK,
                  FCP_UNDRLYNG,
                  FCP_EXPRY_DT,
                  FCP_STRK_PRC,
                  FCP_OPT_TYP,
                  FCP_EXER_TYP
      UNION ALL
       select FOP_CLM_MTCH_ACCNT,
              FOP_INDSTK,
              FOP_UNDRLYNG,
              FOP_EXPRY_DT,
              FOP_STRK_PRC,
              FOP_OPT_TYP,
              FOP_EXER_TYP,
              sum(FOP_OPNPSTN_QTY),
              sum(FOP_OPNPSTN_QTY)
         from FOP_FO_OPTIONS_PSTN,LTQ_TRD_QT
        WHERE FOP_UNDRLYNG = LTQ_STCK_CD
          AND FOP_XCHNG_CD = :c_xchng_cd
          AND LTQ_XCHNG_CD = decode(:c_xchng_cd,'NFO','NSE','BSE')
          AND FOP_PRDCT_TYP='O'
          AND FOP_OPT_TYP='P'
          AND FOP_OPNPSTN_QTY < 0
          AND FOP_EXPRY_DT = :c_trd_dt
          AND ( LTQ_RT * 100 ) < FOP_STRK_PRC
          group by FOP_CLM_MTCH_ACCNT,
                   FOP_INDSTK,
                   FOP_UNDRLYNG,
                   FOP_EXPRY_DT,
                   FOP_STRK_PRC,
                   FOP_OPT_TYP,
                   FOP_EXER_TYP
      UNION ALL
       select FCP_CLM_MTCH_ACCNT,
              FCP_INDSTK,
              FCP_UNDRLYNG,
              FCP_EXPRY_DT,
              FCP_STRK_PRC,
              FCP_OPT_TYP, 
              FCP_EXER_TYP,
              sum(FCP_OPNPSTN_QTY),
              sum(FCP_OPNPSTN_QTY)
         FROM FCP_FO_SPN_CNTRCT_PSTN,LTQ_TRD_QT
        WHERE FCP_UNDRLYNG = LTQ_STCK_CD
          AND FCP_XCHNG_CD = :c_xchng_cd
          AND LTQ_XCHNG_CD = decode(:c_xchng_cd,'NFO','NSE','BSE') 
          AND FCP_PRDCT_TYP ='O'
          /*** AND FCP_OPT_TYP ='C' ***Commented in ver 1.1 ***/
					AND FCP_OPT_TYP ='P'			/*** Ver 1.1 ***/
          AND FCP_OPNPSTN_QTY < 0
          AND FCP_EXPRY_DT =:c_trd_dt 
          /*** AND ( LTQ_RT * 100 ) > FCP_STRK_PRC	 ***Commented in ver 1.1 ***/
					AND ( LTQ_RT * 100 ) < FCP_STRK_PRC				/*** Ver 1.1 ***/
          Group by FCP_CLM_MTCH_ACCNT,
                   FCP_INDSTK,
                   FCP_UNDRLYNG,
                   FCP_EXPRY_DT,
                   FCP_STRK_PRC,
                   FCP_OPT_TYP,
                   FCP_EXER_TYP;
   EXEC SQL
    OPEN cur_gm_asgnmt_dwld; 

   if(SQLCODE  != 0)
   {
    fn_errlog(c_ServiceName, "S31040",SQLMSG,c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    EXEC SQL CLOSE cur_gm_asgnmt_dwld;
    return -1;
   }
  fn_userlog(c_ServiceName," Assignment Downlaod ****");

  while(1)
  {
   MEMSET(c_client_code);
   MEMSET(c_undrlyng);
   MEMSET(c_expiry_dt);
    
   EXEC SQL
    FETCH cur_gm_asgnmt_dwld 
     INTO :c_client_code,
          :c_indstk_flg,
          :c_undrlyng,
          :c_expiry_dt,
          :l_strike_price,
          :c_opt_typ,
          :c_excr_typ,
          :l_open_position,
          :l_assgnmt_qty; 

   if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
   {
    fn_errlog(c_ServiceName, "S31045",SQLMSG,c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    EXEC SQL CLOSE cur_gm_asgnmt_dwld;
    return -1;
   }

   if( SQLCODE == NO_DATA_FOUND )
   {
    fn_userlog(c_ServiceName,"Inside No data Found");
    EXEC SQL CLOSE cur_gm_asgnmt_dwld;
    break;
   }

   MEMSET(c_contract_ins_typ);

   rtrim(c_client_code);
   rtrim(c_undrlyng);
   rtrim(c_expiry_dt);

   MEMSET(c_option_typ); 

   c_option_typ[0]=c_opt_typ;
   c_option_typ[1]=c_excr_typ;

   fn_userlog(c_ServiceName,"c_client_code :%s:",c_client_code);
   fn_userlog(c_ServiceName,"c_indstk_flg  :%c:",c_indstk_flg);
   fn_userlog(c_ServiceName,"c_undrlyng    :%s:",c_undrlyng);
   fn_userlog(c_ServiceName,"c_expiry_dt   :%s:",c_expiry_dt); 
   fn_userlog(c_ServiceName,"l_strike_price :%ld:",l_strike_price);
   fn_userlog(c_ServiceName,"c_option_typ  :%s:",c_option_typ); 
   fn_userlog(c_ServiceName,"l_open_position :%ld:",l_open_position);
   fn_userlog(c_ServiceName,"l_assgnmt_qty  :%ld:",l_assgnmt_qty);
 
   if( c_indstk_flg == 'I' )
   {
    strcpy(c_contract_ins_typ,"OPTIDX");  
   }
   else
   {
    strcpy(c_contract_ins_typ,"OPTSTK");
   }

   EXEC SQL
     SELECT FUM_CLS_PRC
       INTO :d_sttlmnt_prcs
       FROM fum_fo_undrlyng_mstr
      WHERE FUM_XCHNG_CD = :c_xchng_cd
        AND FUM_PRDCT_TYP = 'O'
        AND FUM_UNDRLYNG = :c_undrlyng
        AND FUM_CLS_PRC_DT = :c_trd_dt;

   if ( SQLCODE != 0 )
   {
    fn_errlog(c_ServiceName, "S31050",SQLMSG,c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    EXEC SQL CLOSE cur_gm_asgnmt_dwld;
    return -1;
   } 

   EXEC SQL
     SELECT decode(TRIM(SEM_MAP_VL),'MSX','1',TRIM(SEM_MAP_VL)) 
       INTO :c_symbol
       FROM SEM_STCK_MAP
      WHERE SEM_STCK_CD = :c_undrlyng
        AND SEM_ENTTY   = decode(:c_xchng_cd, 'NFO', 3, 'BFO', 13 );

   if ( SQLCODE != 0 )
   {
    fn_errlog(c_ServiceName, "S31055",SQLMSG,c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    EXEC SQL CLOSE cur_gm_asgnmt_dwld;
    return -1;
   }

   d_strike_price = l_strike_price / 100 ;
   d_sttlmnt_prcs = d_sttlmnt_prcs / 100 ;

   EXEC SQL
     SELECT CLM_CLNT_LVL
       INTO :l_ca_level
       FROM CLM_CLNT_MSTR
      WHERE CLM_MTCH_ACCNT = :c_client_code;
   if ( SQLCODE != 0 )
   {
    fn_errlog(c_ServiceName, "S31060",SQLMSG,c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    EXEC SQL CLOSE cur_gm_asgnmt_dwld;
    return -1;
   }

   l_assgnmt_qty   = ( -1 * l_assgnmt_qty);
   l_open_position = ( -1 * l_open_position);
  
   EXEC SQL
      INSERT INTO fpt_fo_ps01_tmp
                  (fpt_positiondate,
                   fpt_clientaccountcode,
                   fpt_instrumenttype,
                   fpt_symbol,
                   fpt_expirydate,
                   fpt_strikeprice,
                   fpt_optiontype,
                   fpt_calevel,
                   /*** fpt_preexasgmntlongqty,	*** Commented in Ver 1.1 ***/
									 fpt_preexasgmntshortqty,		/*** Ver 1.1 ***/
                   fpt_assignedqty,
                   fpt_settlementprice 
                  ) 
             VALUES( :c_trd_dt, 
                     :c_client_code,
                     :c_contract_ins_typ,
                     :c_symbol,
                     :c_expiry_dt,
                     :d_strike_price,
                     :c_option_typ,
                     :l_ca_level,
                     :l_open_position,
                     :l_assgnmt_qty,
                     :d_sttlmnt_prcs 
                   );

   if ( SQLCODE != 0 )
   {
    fn_errlog(c_ServiceName, "S31065",SQLMSG,c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    EXEC SQL CLOSE cur_gm_asgnmt_dwld;
    return -1;
   }
 
  }
 
  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
   fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
   fn_errlog( c_ServiceName, "S31070", SQLMSG , c_err_msg );
   return -1;
  }
  return 0 ;
}


int fn_excer_dwld(char* c_xchng_cd,
                    char* c_trd_dt,
                    char* c_ServiceName,
                    char* c_err_msg)
{

  int i_trnsctn=0;
  double d_sttlmnt_prcs;
  double d_strike_price;

  long l_ca_level;
  long l_strike_price;
  long l_open_position;
  long l_exercise_qty;
  long l_assgnmnt_qty;
  long l_sttlmnt_prcs;

  char c_assgn_dt[12];
  char c_client_code[11];
  char c_contract_ins_typ[7];
  char c_symbol[21];
  char c_undrlyng[21];
  char c_expiry_dt[12];
  char c_option_typ[3];
  char c_indstk_flg;
  char c_opt_typ;
  char c_excr_typ;

  fn_userlog(c_ServiceName," Trade Date :%s:",c_trd_dt);

  i_trnsctn = fn_begintran( c_ServiceName, c_err_msg );
  if ( i_trnsctn == -1 )
  {
   fn_errlog( c_ServiceName, "S31075", LIBMSG , c_err_msg );
   return -1;
  }

  EXEC SQL
    DECLARE cur_gm_excer_dwld CURSOR FOR
     select FOP_CLM_MTCH_ACCNT,
            FOP_INDSTK,
            FOP_UNDRLYNG,
            FOP_EXPRY_DT,
            FOP_STRK_PRC,
            FOP_OPT_TYP,
            FOP_EXER_TYP,
            sum(FOP_OPNPSTN_QTY),
            sum(FOP_OPNPSTN_QTY)
       from FOP_FO_OPTIONS_PSTN,LTQ_TRD_QT
      WHERE FOP_UNDRLYNG = LTQ_STCK_CD
        AND FOP_XCHNG_CD = :c_xchng_cd
        AND LTQ_XCHNG_CD = decode(:c_xchng_cd,'NFO','NSE','BSE')
        AND FOP_PRDCT_TYP='O'
        AND FOP_OPT_TYP='C'
        AND FOP_OPNPSTN_QTY > 0
        AND FOP_EXPRY_DT = :c_trd_dt
        AND ( LTQ_RT * 100 ) > FOP_STRK_PRC
        group by FOP_CLM_MTCH_ACCNT,
                 FOP_INDSTK,
                 FOP_UNDRLYNG,
                 FOP_EXPRY_DT,
                 FOP_STRK_PRC,
                 FOP_OPT_TYP,
                 FOP_EXER_TYP 
     UNION ALL
      select FCP_CLM_MTCH_ACCNT,
             FCP_INDSTK,
            FCP_UNDRLYNG,
             FCP_EXPRY_DT,
             FCP_STRK_PRC,
             FCP_OPT_TYP,
             FCP_EXER_TYP,
             sum(FCP_OPNPSTN_QTY),
             sum(FCP_OPNPSTN_QTY)
        FROM FCP_FO_SPN_CNTRCT_PSTN,LTQ_TRD_QT
       WHERE FCP_UNDRLYNG = LTQ_STCK_CD
         AND FCP_XCHNG_CD = :c_xchng_cd
         AND LTQ_XCHNG_CD = decode(:c_xchng_cd,'NFO','NSE','BSE')
         AND FCP_PRDCT_TYP ='O'
         AND FCP_OPT_TYP ='C'
         AND FCP_OPNPSTN_QTY > 0
         AND FCP_EXPRY_DT =:c_trd_dt
         AND ( LTQ_RT * 100 ) > FCP_STRK_PRC
         Group by FCP_CLM_MTCH_ACCNT,
                  FCP_INDSTK,
                  FCP_UNDRLYNG,
                  FCP_EXPRY_DT,
                  FCP_STRK_PRC,
                  FCP_OPT_TYP,
                  FCP_EXER_TYP
     UNION ALL
       select FOP_CLM_MTCH_ACCNT,
              FOP_INDSTK,
              FOP_UNDRLYNG,
              FOP_EXPRY_DT,
              FOP_STRK_PRC,
              FOP_OPT_TYP,
              FOP_EXER_TYP,
              sum(FOP_OPNPSTN_QTY),
              sum(FOP_OPNPSTN_QTY)
         from FOP_FO_OPTIONS_PSTN,LTQ_TRD_QT
        WHERE FOP_UNDRLYNG = LTQ_STCK_CD
          AND FOP_XCHNG_CD = :c_xchng_cd
          AND LTQ_XCHNG_CD = decode(:c_xchng_cd,'NFO','NSE','BSE')
          AND FOP_PRDCT_TYP='O'
          AND FOP_OPT_TYP='P'
          AND FOP_OPNPSTN_QTY > 0
          AND FOP_EXPRY_DT = :c_trd_dt
          AND ( LTQ_RT * 100 ) < FOP_STRK_PRC
          group by FOP_CLM_MTCH_ACCNT,
                   FOP_INDSTK,
                   FOP_UNDRLYNG,
                   FOP_EXPRY_DT,
                   FOP_STRK_PRC,
                   FOP_OPT_TYP,
                   FOP_EXER_TYP
      UNION ALL
       select FCP_CLM_MTCH_ACCNT,
              FCP_INDSTK,
              FCP_UNDRLYNG,
              FCP_EXPRY_DT,
              FCP_STRK_PRC,
              FCP_OPT_TYP,
              FCP_EXER_TYP,
              sum(FCP_OPNPSTN_QTY),
              sum(FCP_OPNPSTN_QTY)
         FROM FCP_FO_SPN_CNTRCT_PSTN,LTQ_TRD_QT
        WHERE FCP_UNDRLYNG = LTQ_STCK_CD
          AND FCP_XCHNG_CD = :c_xchng_cd
          AND LTQ_XCHNG_CD = decode(:c_xchng_cd,'NFO','NSE','BSE')
          AND FCP_PRDCT_TYP ='O'
          /*** AND FCP_OPT_TYP ='C'	 ***Commented in ver 1.1 ***/
					AND FCP_OPT_TYP ='P'			 /***  ver 1.1 ***/
          AND FCP_OPNPSTN_QTY > 0
          AND FCP_EXPRY_DT =:c_trd_dt
          /*** AND ( LTQ_RT * 100 ) > FCP_STRK_PRC	 ***Commented in ver 1.1 ***/
					AND ( LTQ_RT * 100 ) < FCP_STRK_PRC		/***  ver 1.1 ***/
          Group by FCP_CLM_MTCH_ACCNT,
                   FCP_INDSTK,
                   FCP_UNDRLYNG,
                   FCP_EXPRY_DT,
                   FCP_STRK_PRC,
                   FCP_OPT_TYP,
                   FCP_EXER_TYP;
   EXEC SQL
    OPEN cur_gm_excer_dwld;

   if(SQLCODE  != 0)
   {
    fn_errlog(c_ServiceName, "S31080",SQLMSG,c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    EXEC SQL CLOSE cur_gm_excer_dwld;
    return -1;
   }

  fn_userlog(c_ServiceName,"Excersize Download *****");

  while(1)
  {
   MEMSET(c_client_code);
   MEMSET(c_undrlyng);
   MEMSET(c_expiry_dt);

   EXEC SQL
    FETCH cur_gm_excer_dwld 
     INTO :c_client_code,
          :c_indstk_flg,
          :c_undrlyng,
          :c_expiry_dt,
          :l_strike_price,
          :c_opt_typ,
          :c_excr_typ,
          :l_open_position,
          :l_exercise_qty;

   if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
   {
    fn_errlog(c_ServiceName, "S31085",SQLMSG,c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    EXEC SQL CLOSE cur_gm_excer_dwld;
    return -1;
   }

   if( SQLCODE == NO_DATA_FOUND )
   {
    fn_userlog(c_ServiceName,"Inside No data Found");
    EXEC SQL CLOSE cur_gm_excer_dwld;
    break;
   }

   MEMSET(c_contract_ins_typ);

   MEMSET(c_option_typ);
   
   c_option_typ[0]=c_opt_typ;
   c_option_typ[1]=c_excr_typ;

   rtrim(c_client_code);
   rtrim(c_undrlyng);
   rtrim(c_expiry_dt);

   fn_userlog(c_ServiceName,"c_client_code :%s:",c_client_code);
   fn_userlog(c_ServiceName,"c_indstk_flg  :%c:",c_indstk_flg);
   fn_userlog(c_ServiceName,"c_undrlyng    :%s:",c_undrlyng);
   fn_userlog(c_ServiceName,"c_expiry_dt   :%s:",c_expiry_dt);
   fn_userlog(c_ServiceName,"l_strike_price :%ld:",l_strike_price);
   fn_userlog(c_ServiceName,"c_option_typ  :%s:",c_option_typ);
   fn_userlog(c_ServiceName,"l_open_position :%ld:",l_open_position);
   fn_userlog(c_ServiceName,"l_exercise_qty :%ld:",l_exercise_qty);

   if( c_indstk_flg == 'I' )
   {
    strcpy(c_contract_ins_typ,"OPTIDX");
   }
   else
   {
    strcpy(c_contract_ins_typ,"OPTSTK");
   }

   EXEC SQL
     SELECT FUM_CLS_PRC
       INTO :d_sttlmnt_prcs
       FROM fum_fo_undrlyng_mstr
      WHERE FUM_XCHNG_CD = :c_xchng_cd
        AND FUM_PRDCT_TYP = 'O'
        AND FUM_UNDRLYNG = :c_undrlyng
        AND FUM_CLS_PRC_DT = :c_trd_dt;
    
   if ( SQLCODE != 0 )
   {
    fn_errlog(c_ServiceName, "S31090",SQLMSG,c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    EXEC SQL CLOSE cur_gm_excer_dwld;
    return -1;
   }

   EXEC SQL
     SELECT decode(TRIM(SEM_MAP_VL),'MSX','1',TRIM(SEM_MAP_VL))
       INTO :c_symbol
       FROM SEM_STCK_MAP
      WHERE SEM_STCK_CD = :c_undrlyng
        AND SEM_ENTTY   = decode(:c_xchng_cd, 'NFO', 3, 'BFO', 13 );

   if ( SQLCODE != 0 )
   {
    fn_errlog(c_ServiceName, "S31095",SQLMSG,c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    EXEC SQL CLOSE cur_gm_excer_dwld;
    return -1;
   }

   d_strike_price = l_strike_price / 100 ;
   d_sttlmnt_prcs = d_sttlmnt_prcs / 100 ;

   EXEC SQL
     SELECT CLM_CLNT_LVL
       INTO :l_ca_level
       FROM CLM_CLNT_MSTR
      WHERE CLM_MTCH_ACCNT = :c_client_code;
   if ( SQLCODE != 0 )
   {
    fn_errlog(c_ServiceName, "S31100",SQLMSG,c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    EXEC SQL CLOSE cur_gm_excer_dwld;
    return -1;
   }

   EXEC SQL
      INSERT INTO fpt_fo_ps01_tmp
                  (fpt_positiondate,
                   fpt_clientaccountcode,
                   fpt_instrumenttype,
                   fpt_symbol,
                   fpt_expirydate,
                   fpt_strikeprice,
                   fpt_optiontype,
                   fpt_calevel,
                   fpt_preexasgmntlongqty,
                   fpt_exercisedqty,
                   fpt_settlementprice
                  )
             VALUES( :c_trd_dt,
                     :c_client_code,
                     :c_contract_ins_typ,
                     :c_symbol,
                     :c_expiry_dt,
                     :d_strike_price,
                     :c_option_typ,
                     :l_ca_level,
                     :l_open_position,
                     :l_exercise_qty,
                     :d_sttlmnt_prcs
                   );

   if ( SQLCODE != 0 )
   {
    fn_errlog(c_ServiceName, "S31105",SQLMSG,c_err_msg);
    fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    EXEC SQL CLOSE cur_gm_excer_dwld;
    return -1;
   }

  }

  if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
  {
   fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
   fn_errlog( c_ServiceName, "S31110", SQLMSG , c_err_msg );
   return -1;
  }
  return 0 ;
} 

int fn_bat_init ( int argc, char *argv[] ) 
{
	fn_var = BAT_GM_EXCRASGN_DWLD;
	return 0;
}

void fn_bat_term ( int argc, char *argv[] )
{
	return;
}

int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
	return 0;
}
