/**************************************************************************************************
* Service name :  BAT_RESET_GST_SEQ                                            										*
*                                                                              										*
* Description  :  This Batch Program will Reset all the GST_SEQ on 1st April of every Year				*
*                                                                              										*
*	LOG					 :	20-Mar-2018					1.0				-	Mrinal Kishore		 															*
*	     			   :	30-Jul-2019					1.1				-	Sandip T      		 															*
***************************************************************************************************
* 1.0  				 :  Initial Release																							 										*	
* 1.1  				 :  Update GST master changes for Kerala Flood Cess							 										*	
**************************************************************************************************/
#include <stdio.h>
#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <Usysflds.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fo_view_def.h>
#include <eba_to_ors.h>
#include <fn_ddr.h>
#include <errno.h>
#include <string.h>
#include <fn_read_debug_lvl.h>
#include <fml_rout.h>
#include <ctype.h>
#include <stdlib.h>
#define BAT_TRAN_LOCAL 300			/** ver 1.1 **/

void  fn_snd_stp_mail(char *, char*);
int fn_reset_gst_seq(char *c_ServiceName,
										 char *c_err_msg);

void BAT_RESET_GST_SEQ( int argc, char *argv[])
{
  char c_ServiceName[33] = {'\0'};
  char c_err_msg[256] = {'\0'};
  char c_msg[256] = {'\0'};
  char c_xchng_cd[4] = {'\0'};
	char c_reset_gst_seq_flg = 'N';		
	
	int  i_returncode = 0;
	int  i_ch_val = 0;
 	char c_gst_state_cd[3]={"\0"};		/** ver 1.1 **/
  char c_command_gst[256];					/** ver 1.1 **/
	int i_trnsctn=0;									/** ver 1.1 **/
	
	strcpy(c_ServiceName, argv[0]);
  INITBATDBGLVL(argv[0]);

	strcpy(c_xchng_cd ,argv[2]);
	rtrim(c_xchng_cd);

  fn_userlog(c_ServiceName, "%s - Process started", c_ServiceName);

	sprintf( c_msg, "Batch process %s started", c_ServiceName );
  fn_bat_pst_msg( c_ServiceName, c_msg, c_tag );
	/** Ver 1.1 ***/
	fn_userlog(c_ServiceName,"No of arguments :%d:",argc);
	if(argc > 4 )
	{
		fn_userlog(c_ServiceName,"Process called for GST Master Update.");
		strcpy(c_gst_state_cd,argv[4]);
		rtrim(c_gst_state_cd);

		/*fn_userlog(c_ServiceName,"Input CGST PRCNT=:%f:",d_cgst_prcnt);
		fn_userlog(c_ServiceName,"Input SGST PRCNT=:%f:",d_sgst_prcnt);
		fn_userlog(c_ServiceName,"Input IGST PRCNT=:%f:",d_igst_prcnt);
		fn_userlog(c_ServiceName,"Input UGST PRCNT=:%f:",d_ugst_prcnt); */

		/*i_trnsctn =  tpbegin(BAT_TRAN_LOCAL, 0 )  ;
  	if ( i_trnsctn == -1 )
  	{
    		fn_userlog (c_ServiceName,"Error in initial begin transaction ");
    		fn_errlog ( c_ServiceName, "S31005", TPMSG, c_err_msg  );
    		return ;
  	} */

			fn_userlog(c_ServiceName,"inside CGST SGST update");
			EXEC SQL
				update GSTM_GST_STATE_MSTR 
				set    GSTM_SGST_PRCNT=10,
							 GSTM_MODIFY_BY ='SYSTEM-For KFC',
							 GSTM_MODIFY_DT=sysdate
				WHERE  GSTM_STATE_CD='32';	

  		if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
  		{
    		fn_errlog( c_ServiceName, "S31010", SQLMSG, c_err_msg );
				EXEC SQL ROLLBACK ;
    		return;
  		}
		fn_userlog(c_ServiceName,"Deleting GST data from HR DB ..."); 
		EXEC SQL
			DELETE FROM HRINT.GSM_GST_STATE_MSTR_FROM_EBA@ISECDB;

		if ( SQLCODE != 0 )
    {
        fn_errlog( c_ServiceName, "S31015", SQLMSG, c_err_msg );
				EXEC SQL ROLLBACK ;
        return;
    }
		fn_userlog(c_ServiceName,"GST data deleted from HR...");

  	EXEC SQL
   			INSERT INTO HRINT.GSM_GST_STATE_MSTR_FROM_EBA@ISECDB
    		SELECT * FROM GSTM_GST_STATE_MSTR;

		if ( SQLCODE != 0 )
    {
        fn_errlog( c_ServiceName, "S31020", SQLMSG, c_err_msg );
				EXEC SQL ROLLBACK ;
        return;
    }
	
		fn_userlog(c_ServiceName,"GST data updated at HR DB ...");
		EXEC SQL COMMIT;
		if( SQLCODE  != 0  ) 
   	{
    		fn_userlog (c_ServiceName,"Error in commit transaction for GSTM_GST_STATE_MSTR");
    		fn_errlog ( c_ServiceName, "S31025", SQLMSG, c_err_msg);
				EXEC SQL ROLLBACK ;
    		return ;
   	} 
		
		fn_userlog(c_ServiceName,"Home path :%s:",tuxgetenv("HOME"));	

		 MEMSET(c_command_gst);
  	 sprintf(c_command_gst, "%s/sh_scripts/gst_update_success_KFC.sh %s %s", tuxgetenv("HOME"), c_ServiceName, c_xchng_cd);
  	system(c_command_gst);

		fn_userlog(c_ServiceName,"CGST SGST update sucessfull for Kerala");
		return;
	}
	fn_userlog(c_ServiceName,"Reset GST Sequence process starts");

	/** Ver 1.1 Ends **/	
	EXEC SQL
      select 'Y'
      into :c_reset_gst_seq_flg
      from dual
      where to_char(sysdate,'dd-Mon') = '01-Apr';
  if ( SQLCODE != 0 && SQLCODE != NO_DATA_FOUND )
  {
    fn_errlog( c_ServiceName, "S31030", SQLMSG, c_err_msg );
    strcpy( c_msg, "System error. Contact system support" );
    fn_bat_pst_msg( c_ServiceName, c_msg, c_tag );
    return;
  }

	if( c_reset_gst_seq_flg == 'Y')
	{
		fn_userlog(c_ServiceName,"Batch for Reset GST Sequence"); 

		i_ch_val = fn_reset_gst_seq ( c_ServiceName,
                                  c_err_msg);
		if ( i_ch_val != 0 )
  	{
			fn_errlog( c_ServiceName, "S31035", SQLMSG, c_err_msg );
      strcpy( c_msg, "fn_reset_gst_seq failed. Contact system support" );
      fn_bat_pst_msg( c_ServiceName, c_msg, c_tag );
      return;
  	}	
		return;
  }	
	else
	{
		fn_userlog ( c_ServiceName,"bat_reset_gst_seq is called on invalid date");
		return;
	}
}


void fn_snd_stp_mail(char* c_ServiceName, char* c_xchng_cd)
{
  char c_command[256];
  sprintf(c_command, "%s/sh_scripts/auto_fo_mtm_exit_mail.sh %s %s", tuxgetenv("HOME"), c_ServiceName, c_xchng_cd);
  system(c_command);
}


int fn_bat_init( int argc, char *argv[])
{
  fn_var = BAT_RESET_GST_SEQ;
	if( argc != 4 )
	{
		if(argc == 5 )			/** Ver 1.1 added **/
		{
			fn_userlog("bat_reset_gst_seq","Run for GST Master Update.", argv[0] );
		}
		else
		{
			fn_userlog ( "bat_reset_gst_seq", "Usage : %s <Tag> <Exchange Code> <Pipe ID> ", argv[0] );
			return -1;
		}
	}

  return 0;
}

void fn_bat_term( int argc, char *argv[])
{
  char c_msg[256];
  fn_userlog(argv[0], "%s - Process Ended", argv[0]);
  sprintf( c_msg, "%s - Process Ended", argv[0] );
  fn_bat_pst_msg( argv[0], c_msg, c_tag );
  return;
}

int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
  return 0;
}
int fn_reset_gst_seq(char *c_ServiceName,
                     char *c_err_msg)
{
	char c_msg[256] = {'\0'};
  char c_select_seq_dtls[100] = {'\0'};
	
	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_03_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31040", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_03_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31045", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_04_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31050", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_04_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31055", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_05_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31060", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_05_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31065", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_06_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31070", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_06_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31075", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_07_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31080", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_07_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31085", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_08_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31090", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_08_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31095", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_09_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31100", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_09_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31105", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_10_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31110", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_10_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31115", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_18_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31120", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_18_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31125", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_19_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31130", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_19_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31135", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_20_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31140", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_20_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31145", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_21_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31150", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_21_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31155", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_22_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31160", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_22_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31165", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_23_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31170", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_23_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31175", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_24_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31180", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_24_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31185", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_27_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31190", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_27_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31195", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_29_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31200", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_29_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31205", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_32_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31210", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_32_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31215", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_33_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31220", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_33_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31225", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_36_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31230", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_36_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31235", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_03_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31240", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_03_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31245", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_04_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31250", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_04_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31255", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_05_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31260", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_05_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31265", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_06_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31270", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_06_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31275", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_07_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31280", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_07_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31285", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_08_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31290", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_08_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31295", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_09_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31300", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_09_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31305", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_10_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31310", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_10_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31315", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_18_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31320", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_18_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31325", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_19_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31330", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_19_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31335", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_20_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31340", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_20_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31345", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_21_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31350", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_21_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31355", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_22_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31360", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_22_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31365", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_23_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31370", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_23_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31375", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_24_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31380", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_24_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31385", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_27_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31390", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_27_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31395", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_29_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31400", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_29_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31405", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_32_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31410", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_32_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31415", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_33_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31420", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_33_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31425", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_36_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31430", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_36_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31435", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_03_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31440", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_03_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31445", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_04_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31450", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_04_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31455", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_05_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31460", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_05_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31465", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_06_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31470", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_06_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31475", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_07_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31480", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_07_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31485", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_08_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31490", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_08_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31495", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_09_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31500", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_09_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31505", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_10_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31510", SQLMSG, c_err_msg );
	}


  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_10_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31515", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 
	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_18_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31520", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_18_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31525", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_19_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31530", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_19_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31535", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_20_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31540", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_20_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31545", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_21_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31550", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_21_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31555", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_22_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31560", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_22_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31565", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_23_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31570", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_23_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31575", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_24_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31580", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_24_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31585", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_27_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31590", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_27_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31595", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_29_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31600", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_29_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31605", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_32_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31610", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_32_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31615", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_33_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31620", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_33_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31625", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_36_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31630", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_36_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31635", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_03_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31640", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_03_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31645", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_04_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31650", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_04_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31655", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_05_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31660", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_05_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31665", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_06_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31670", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_06_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31675", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_07_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31680", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_07_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31685", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_08_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31690", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_08_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31695", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_09_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31700", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_09_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31705", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_10_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31710", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_10_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31715", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_18_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31720", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_18_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31725", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_19_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31730", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_19_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31735", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_20_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31740", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_20_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31745", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_21_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31750", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_21_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31755", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_22_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31760", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_22_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31765", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_23_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31770", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_23_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31775", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_24_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31780", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_24_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31785", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_27_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31790", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_27_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31795", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_29_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31800", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_29_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31805", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_32_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31810", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_32_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31815", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_33_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31820", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_33_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31825", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_36_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31830", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_36_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31835", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_03_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31840", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_03_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31845", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_04_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31850", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_04_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31855", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_05_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31860", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_05_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31865", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_06_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31870", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_06_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31875", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_07_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31880", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_07_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31885", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_08_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31890", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_08_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31895", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_09_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31900", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_09_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31905", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_10_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31910", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_10_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31915", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_18_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31920", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_18_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31925", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_19_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31930", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_19_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31935", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_20_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31940", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_20_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31945", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_21_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31950", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_21_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31955", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_22_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31960", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_22_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31965", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_23_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31970", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_23_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31975", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_24_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31980", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_24_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31985", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_27_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S31990", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_27_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S31995", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_29_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32000", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_29_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32005", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_32_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32010", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_32_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32015", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_33_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32020", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_33_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32025", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_36_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32030", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_36_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32035", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_03_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32040", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_03_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32045", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_04_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32050", SQLMSG, c_err_msg );
	}


  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_04_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32055", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 
	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_05_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32060", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_05_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32065", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_06_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32070", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_06_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32075", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_07_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32080", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_07_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32085", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_08_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32090", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_08_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32095", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_09_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32100", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_09_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32105", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_10_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32110", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_10_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32115", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_18_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32120", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_18_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32125", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_19_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32130", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_19_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32135", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_20_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32140", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_20_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32145", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_21_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32150", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_21_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32155", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_22_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32160", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_22_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32165", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_23_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32170", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_23_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32175", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_24_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32180", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_24_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32185", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_27_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32190", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_27_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32195", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_29_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32200", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_29_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32205", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_32_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32210", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_32_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32215", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_33_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32220", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_33_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32225", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_36_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32230", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_36_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32235", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_37_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32240", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_37_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32245", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_37_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32250", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_37_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32255", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_37_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32260", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_37_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32265", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_37_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32270", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_37_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32275", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_37_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32280", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_37_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32285", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_37_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32290", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_37_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32295", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_30_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32300", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_30_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32305", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_30_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32310", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_30_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32315", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_30_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32320", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_30_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32325", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_30_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32330", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_30_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32335", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_30_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32340", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_30_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32345", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_30_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32350", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_30_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32355", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_34_OTHR_DBIT' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32360", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_34_OTHR_DBIT';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32365", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_34_CONTR_TAX' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32370", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_34_CONTR_TAX';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32375", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_34_CRDT_MEMO' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32380", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_34_CRDT_MEMO';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32385", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_34_CRDT_NOTE' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32390", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_34_CRDT_NOTE';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32395", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_34_RCPT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32400", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_34_RCPT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32405", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 
  EXEC SQL
		EXECUTE
			BEGIN
			  RESET_SEQUENCE( 'SEQ_34_PMNT_VCHR' );
			END;
	END-EXEC;

	if ( SQLCODE != 0 )
	{
		fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
		fn_errlog( c_ServiceName, "S32410", SQLMSG, c_err_msg );
	}

  EXEC SQL

    select SEQUENCE_NAME||','||MIN_VALUE||','||MAX_VALUE||','||INCREMENT_BY||','||CACHE_SIZE||','||LAST_NUMBER||','||CYCLE_FLAG
    into :c_select_seq_dtls 
    from all_sequences 
    where sequence_name = 'SEQ_34_PMNT_VCHR';
    if ( SQLCODE != 0 )
    {
      fn_userlog( c_ServiceName, "Error in resetting exchange sequence :%s:", SQLMSG );
      fn_errlog( c_ServiceName, "S32415", SQLMSG, c_err_msg );
    }
  rtrim(c_select_seq_dtls);
  fn_userlog( c_ServiceName, "After reset :%s:", c_select_seq_dtls );
  MEMSET(c_select_seq_dtls);
 

	fn_userlog( c_ServiceName, "successfully reset all the GST Sequence");
	return 0;
}
