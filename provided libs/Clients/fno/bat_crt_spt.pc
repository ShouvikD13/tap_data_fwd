/******************************************************************************/
/*  Program           : BAT_CRT_SPT	                                          */
/*                                                                            */
/*  Input             : <bat_crt_spt> None										                */
/*                                                                            */
/*  Output            :  Integer 1 on sucess and 0 on fail                    */
/*                                                                            */
/*  Description       :  Find out amount payble by client. If amount payble   */
/*                       By client is more than minimum shortfall amount      */
/*                       spot order is created woth amount payble by client . */
/*                                                                            */
/*                                                                            */
/*  Log               : 1.0  21-oct-2004   Infotech|Himanshu Ahire            */
/*  Reviewed By       : 1.0   					   Infotech|                          */
/*  Log               : 1.1  19-Apr-2007   Infotech|Vidyayini Krish           */
/*                    : 1.2  03-Mar-2008   Infotech|Sandeep Patil             */
/*                    : 1.3  25-Aug-2009   Infotech|Vidyayini Krish           */
/*                    : 1.4  02-Aug-2011   Infotech|Sachin Birje.             */
/*                    : 1.5  30-Nov-2010   Infotech|Renuka Rajput             */
/*                    : 1.6  16-May-2012   Infotech|Diwakar Sharma            */
/*                    : 1.7  15-May-2013   Infotech|Swati A.B								  */
/*                    : 1.8  18-Dec-2013   Infotech|Samip M                   */
/*                    : 1.9  21-Jan-2014   Infotech|Samip M                   */
/*                    : 2.0  26-Sep-2014   Infotech|Samip M                   */
/*                    : 2.1  21-Apr-2015   Infotech|Renuka                    */
/*                    : 2.2  12-Feb-2020   Infotech|Samip M                   */
/*                    : 2.3  15-Apr-2020   Infotech|Samip M                   */
/*                    : 2.4  10-Jul-2020   Infotech|Anand Dhopte              */ 
/*                    : 2.5  25-Aug-2021   Infotech|Rajvi 										*/ 
/*                    : 2.6  01-Dec-2022   Tanmay Patel                       */
/*                    : 2.7  21-Apr-2022   Tanmay Patel                       */
/******************************************************************************/
/*   1.0  -  New release                                                      */
/*   1.1  -  CRARP04979                                                       */
/*   1.2  -  IBM MIGRATION CHANGES																						*/
/*   1.3  -  Spot sell from batch will now happen in BSE                      */
/*   1.4  -  Handling of newly added column FBM_PRDCT_CD for ADM(CRCON44062)  */
/*   1.5  -  Implementing EQSAM in CRCSN43521.EQ Shortfall to be included along 
						 with FNO shortfall .If Sum of EQ and FNO exceeds the parameterised 
						 values then create data for spot order.                          */ 
/*   1.6  -  FNO BSE changes for SAM                                          */
/*   1.7  -  CR-ISEC03-37658 ( ATS Migration change )												  */
/*   1.8  -  Changes for Query optimization                                   */
/*   1.9  -  Changes for ERS Client Paying & rerun of the batch               */
/*   2.0  -  Changes for SAM blcok unblock																		*/
/*   2.1  -  Changes for Query optimization                                   */
/*   2.2  -  Changes for NSE SPOT                                             */
/*   2.3  -  Liquidation criteria for ERS change                              */
/*   2.4  -  CR_ISEC14_138293 Margin Pledge Model Changes                     */
/*   2.5  -  CR-ISEC03-152364_Implementation of Inter-Operability for Equity  */
/*					 Segment (Backoffice)																							*/
/*   2.6  -  CR-ISEC14-162075 SAM in Currecy & commodity                      */
/*   2.7  -  Minor change for handling of failuer od currency                 */
/******************************************************************************/

#include "fn_collateral.h"
#include <math.h>
#include <fn_read_debug_lvl.h>				/*** Ver1.2 ***/


int main (int argc , char* argv[])
{
		int		i_trnsctn;
		int		i_count=0;   /* Initialised in Ver 1.5 */
		int   i_no_record; 
		int		i_curr_row;
		int 	i_no_of_sale =0;
		int   i_qty_reduce =0;
		int		i_qty_reduce_now;
		int   count;

		long  l_shrtfll_mrgn;
		long  l_min_plg_shortfall=0;
		long	l_avl_qty;
		long	l_seq_no;
		long	l_nse_stlmnt_no=0; /* Ver 1.5 */
		long	l_bse_stlmnt_no=0; /* Ver 1.5 */

		/*double  d_amt_reduce; Commented in Ver 1.5 */
		double  d_shrtfal_amt =0; /* Ver 1.5 */
		double	d_tot_amt;
		double	d_ltq_rt;

		char	c_clm_mtch_accnt[11];
		char	c_stck_cd[7];
		char	c_ServiceName [ 33 ];
		char	c_err_msg[256 + 1];
		char	c_dp_id[9];
		char	c_dp_clnt_id[9];
		char  c_ord_trd_dt[15];
		char  c_tag[32];
		char  c_msg[256];
		char  c_systm[22];
		char	c_plg_rev_typ;
		char	c_cmd[100];   /* Ver 1.5 */
		char	c_ers_payindt[12];   /* Ver 1.7 */

		strcpy(c_ServiceName ,"bat_crt_spt");

		INITBATDBGLVL(argv[0]);			 /*** Ver1.2 ***/

		MEMSET(c_cmd); /* Ver 1.5 */

		/*if(argc != 4)  Commented in ver 1.5 **/
		/** Commented in Ver. 2.5 *** 
		if(argc != 6)  * 2 new arg NSE stlmnt and BSE stlmnt nos *
		{
				fn_userlog(c_ServiceName, "Usage: bat_crt_spt <Config File> <Exchange Cd> <Pipe Id><NSE stlmnt no><BSE stlmnt no>");  * Ver 1.5.NSE and BSE settlement arguments added in Ver 1.5 *
				exit(-1);
		}
		*** Ver. 2.5 ** comment ends **/
		/** Ver. 2.5 ** starts **/
		if(argc != 4)
		{
			fn_userlog(c_ServiceName, "Usage: bat_crt_spt <Config File> <Exchange Cd> <Pipe Id>");
		}
		/** Ver. 2.5 ** ends **/

		strcpy( c_msg, "STAGE 1.0 Starting BAT_CRT_SPT...");
		fn_userlog( c_ServiceName,c_msg);
		fn_userlog( c_ServiceName,"config File :%s:"   ,argv[1]);
		fn_userlog( c_ServiceName,"Exchange Code :%s:" ,argv[2]);
		fn_userlog( c_ServiceName,"Pipe Id :%s:"       ,argv[3]);

		l_nse_stlmnt_no =atol(argv[4]);  /* Ver 1.5 */
		l_bse_stlmnt_no =atol(argv[5]);  /* Ver 1.5 */

		fn_userlog( c_ServiceName,"NSE settlement no is :%ld:",l_nse_stlmnt_no);  /* Ver 1.5 */
    fn_userlog( c_ServiceName,"BSE settlement no is :%ld:",l_bse_stlmnt_no);  /* Ver 1.5 */

		sprintf(c_tag,"%s_%s",c_ServiceName,argv[1]);
		init_bat(c_ServiceName,argv[2],argv[3]); 

		if (DEBUG_MSG_LVL_3)			 /*** Ver1.2 ***/ 
		{
				fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);
		}

		/**** Ver 1.5.EXG select shifted here */
		NULLCHAR(c_ord_trd_dt);

    EXEC SQL
    SELECT  to_char (EXG_NXT_TRD_DT, 'dd-mm-yyyy')
    INTO    :c_ord_trd_dt
    FROM    EXG_XCHNG_MSTR
    WHERE   EXG_XCHNG_CD = 'BSE'; 

    if(SQLCODE != 0 )
    {
        fn_errlog(c_ServiceName,"S31005",SQLMSG,c_err_msg);
        fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
        destroy_bat();
    }

		rtrim((char *) c_ord_trd_dt); /* Ver 1.5 */
    fn_userlog(c_ServiceName,"c_ord_trd_dt :%s:",c_ord_trd_dt);

		/***Check if Process already run for the day in Ver 1.5 **/
		EXEC SQL
				 SELECT 1
				 INTO   :i_count
				 FROM   SSD_SAM_SHRTFAL_DTLS
				 WHERE  SSD_TRD_DT = to_date(:c_ord_trd_dt,'dd-mm-yyyy')
				 AND 	  ROWNUM		 = 1;

		if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
  	{
  		fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
    	fn_errlog(c_ServiceName,"S31010",SQLMSG,c_err_msg);
    	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
    	destroy_bat();
  	}


		if (DEBUG_MSG_LVL_3)       
    {
        fn_userlog(c_ServiceName,"Count is |%d|",i_count);
    }
		if(i_count <= 0)
		{
			fn_userlog(c_ServiceName,"Its a fresh run for the day ");
		}
		/**** Ver 1.5 .End of process run check and exg select */	

		/************************ Begain New Transaction  ************************/
			
	  if(i_count <= 0 )  /* Ver 1.5.If <= 0 means process not run for the day.Check added to facilitate rerun */
		{
			/*i_trnsctn  = fn_begintran( c_ServiceName, c_err_msg ); Ver 1.5 */
			i_trnsctn = tpbegin(0,0); /* Ver 1.5 */
			if ( i_trnsctn == -1 ) /* Ver 1.5 */
			{
				fn_errlog( c_ServiceName, "S31015", TPMSG , c_err_msg  );
				fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
				destroy_bat();
			}

			/*** Ver 1.7 Starts ***/
			/*** Commented for Ver 1.9 Starts ***
			EXEC SQL 
					 SELECT FBC_CLN_PYIN_DT - 1
					 INTO   :c_ers_payindt
					 FROM 	FBC_FO_BRNCH_CAL
					 WHERE	FBC_CLN_PYOUT_DT = trunc(sysdate)
					 AND 		FBC_XCHNG_CD 		 = 'NFO' 
					 AND 	  FBC_GRP_ID	     = '1';
			Ver 1.9 Ends ***/

			/*** Ver 1.9 Starts ***/

			EXEC SQL
				SELECT  MAX(FBC_TRD_DT)
				INTO    :c_ers_payindt
				FROM	  FBC_FO_BRNCH_CAL
				WHERE   FBC_TRD_DT < ( SELECT MAX(FBC_TRD_DT)
	                       			 FROM   FBC_FO_BRNCH_CAL
	                       			 WHERE  FBC_TRD_DT <  trunc(sysdate)
	                       			 AND    FBC_XCHNG_CD     = 'NFO'
	                       			 AND    FBC_GRP_ID       = '1' 
											 			 )
				AND			FBC_XCHNG_CD     = 'NFO'  
				AND			FBC_GRP_ID			 = '1' ; 	
	
			/*** Ver 1.9 Ends   ***/	
	
			if(SQLCODE != 0)
			{
				fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
        fn_errlog(c_ServiceName,"S31020",SQLMSG,c_err_msg);
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        destroy_bat();
			}
	 
			if (DEBUG_MSG_LVL_3)
    	{	
				fn_userlog(c_ServiceName," Last pay in for ERS client happend on :%s:",c_ers_payindt);
			}
			/*** Ver 1.7 Ends   ***/
			


			EXEC SQL DELETE FROM FBT_FO_BNK_TEMP;

			EXEC SQL
			/*INSERT INTO FBT_FO_BNK_TEMP Commented in Ver 1.5 */
			INSERT INTO SSD_SAM_SHRTFAL_DTLS  /* Ver 1.5.Inserted in new shortfall table */
			(SSD_CLM_MTCH_ACCNT,							/* Ver 1.5 */
		 	 SSD_EQ_SRHTFALL_AMT,						  /* Ver 1.5 */
		 	 SSD_FNO_SRHTFALL_AMT,					  /* Ver 1.5 */
		 	 SSD_TOT_SRHTFALL_AMT,						/* Ver 1.5 */
		 	 SSD_EXCTD_TRD_VAL,							  /* Ver 1.5 */
       SSD_CDX_SRHTFALL_AMT,   /* Ver 2.6 */
       SSD_MCO_SRHTFALL_AMT,   /* Ver 2.6 */
			 SSD_TRD_DT												/* Ver 1.5 */
			)
			(

/*** Commented and Added for Ver 1.8 ****/
/******						SELECT FBD_CLM_MTCH_ACCNT,
						0,												* Ver 1.5 *
						SUM((-1 * (NVL(FBD_DC_AMT,0)- NVL(FBD_PI_PO_AMT,0)-NVL(FBD_INT_ADJ_AMT,0)))),
						0,											  * Ver 1.5 *
						0,											  * Ver 1.5 *
						to_date(:c_ord_trd_dt,'dd-mm-yyyy')	  * Ver 1.5 *
						FROM   FBD_FO_BNK_DRCR , FAB_FO_ALC_BFT_SMRY,EAB_EQ_ALC_BFT_SMRY  * EAB in Ver 1.5 *
									 ,UAC_USR_ACCNTS, ICD_INFO_CLIENT_DTLS  										*** Added In Ver 1.7 ***
						WHERE  FBD_XCHNG_CD in ( 'NFO','BFO')			** Ver 1.6 included BFO**
						*** AND    decode(FBD_DC_FLG,'D',FBD_PAYIN_DT,FBD_PAYOUT_DT ) <= trunc(sysdate) commented In Ver 1.7 *** 
						and    FBD_PAYIN_DT 
						<= DECODE (NVL(ICD_ATS_STATUS,'N'),'E',to_date(:c_ers_payindt,'dd-Mon-YYYY'),trunc(sysdate) ) *** Ver 1.7 ***
						AND    decode(FBD_DC_FLG,'D',FBD_PAYIN_DT,FBD_PAYOUT_DT ) <= trunc(sysdate) 
						and    FAB_CLM_MTCH_ACCNT = FBD_CLM_MTCH_ACCNT
						and    FAB_CLM_MTCH_ACCNT = EAB_CLM_MTCH_ACCNT         * Ver 1.5 *
						and		 UAC_CLM_MTCH_ACCNT = FAB_CLM_MTCH_ACCNT
						and		 ICD_USER_ID = UAC_USR_ID
						and		 FBD_CLM_MTCH_ACCNT not in                         ** Ver 1.4 for FBM_PRDCT_CD **
						(SELECT  FBM_CLM_MTCH_ACCNT FROM    FBM_FO_BNK_FLR_MSG WHERE   FBM_STTS = 'N' AND FBM_PRDCT_CD IS NULL )
						and    (nvl(FAB_PLG_AMT,0) <> 0
						OR     nvl(EAB_PLG_AMT,0) <> 0)    * Ver 1.5 *
						and    FBD_DC_FLG = 'D'
						HAVING   sum((NVL(FBD_DC_AMT,0)- NVL(FBD_PI_PO_AMT,0)-NVL(FBD_INT_ADJ_AMT,0))) < 0
						group by FBD_CLM_MTCH_ACCNT

**************/

/****** Commented in Ver 2.6 ********
            SELECT FBD_CLM_MTCH_ACCNT,
            0,
            -1 * SUM (FBD_DC_AMT- FBD_PI_PO_AMT-FBD_INT_ADJ_AMT),
            0,
            0,
            to_date(:c_ord_trd_dt,'dd-mm-yyyy')
            FROM   FBD_FO_BNK_DRCR , FAB_FO_ALC_BFT_SMRY,EAB_EQ_ALC_BFT_SMRY
              ***    ,UAC_USR_ACCNTS, ICD_INFO_CLIENT_DTLS *** Commented for Ver 2.3 ***
            WHERE
            *** FBD_PAYIN_DT <= DECODE (NVL(ICD_ATS_STATUS,'N'),'E',to_date(:c_ers_payindt,'dd-Mon-YYYY'),trunc(sysdate) ) *** Commented for Ver 2.3 ***
            FBD_PAYIN_DT <= trunc(sysdate)  *** Ver 2.3 **
            *** and    UAC_CLM_MTCH_ACCNT = FBD_CLM_MTCH_ACCNT
            and    FAB_CLM_MTCH_ACCNT = EAB_CLM_MTCH_ACCNT
            and    UAC_CLM_MTCH_ACCNT = FAB_CLM_MTCH_ACCNT
            and    ICD_USER_ID = UAC_USR_ID  *** Commented for Ver 2.3 ***
						and    FAB_CLM_MTCH_ACCNT = EAB_CLM_MTCH_ACCNT	** Ver 2.3 **
            and    FAB_CLM_MTCH_ACCNT = FBD_CLM_MTCH_ACCNT	** Ver 2.3 **
            and    FBD_CLM_MTCH_ACCNT not in
            (SELECT  FBM_CLM_MTCH_ACCNT FROM    FBM_FO_BNK_FLR_MSG WHERE   FBM_STTS = 'N' AND FBM_PRDCT_CD IS NULL )
            and    (FAB_PLG_AMT + EAB_PLG_AMT <> 0)
            and    FBD_DC_FLG = 'D'
            HAVING   sum(FBD_DC_AMT- FBD_PI_PO_AMT-FBD_INT_ADJ_AMT) < 0
            group by FBD_CLM_MTCH_ACCNT

*** End for Ver 1.8 **
****** Comment Ends Ver 2.6 ******/
      /*** Ver 2.6 Starts ***/

            SELECT FBD_CLM_MTCH_ACCNT,
            0,
            -1 * SUM (FBD_DC_AMT- FBD_PI_PO_AMT-FBD_INT_ADJ_AMT),
            0,
            0,
            0,
            0,
            to_date(:c_ord_trd_dt,'dd-mm-yyyy')
            FROM   FBD_FO_BNK_DRCR , 
                   ( SELECT FAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   FAB_FO_ALC_BFT_SMRY
                     WHERE  FAB_PLG_AMT != 0
                     UNION
                     SELECT EAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   EAB_EQ_ALC_BFT_SMRY
                     WHERE  EAB_PLG_AMT != 0
                     UNION
                     SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   CAB_COD_ALC_BFT_SMRY
                     WHERE  CAB_PLG_AMT != 0
                     UNION
                     SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   CAB_CDX_ALC_BFT_SMRY
                     WHERE  CAB_PLG_AMT != 0 
                   )
            /*** WHERE  FBD_PAYIN_DT <= trunc(sysdate)   ** Ver 2.6 ****/
            WHERE  FBD_PAYOUT_DT <= trunc(sysdate)  		/** Ver 2.6 **/
            and     FBD_CLM_MTCH_ACCNT = MATCH_ID  
            and    FBD_CLM_MTCH_ACCNT not in (SELECT  FBM_CLM_MTCH_ACCNT 
                                              FROM    FBM_FO_BNK_FLR_MSG 
                                              WHERE   FBM_STTS = 'N' 
                                              AND FBM_PRDCT_CD IS NULL )
            and    FBD_DC_FLG = 'D'
            HAVING   sum(FBD_DC_AMT- FBD_PI_PO_AMT-FBD_INT_ADJ_AMT) < 0
            group by FBD_CLM_MTCH_ACCNT
      /*** Ver 2.6 Ends ***/

			);

			if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND) /* NO_DATA_FOUND added in Ver 1.5 */
			{
				/*if(SQLCODE == NO_DATA_FOUND) Commented in Ver 1.5.If there is no FNO
						Shortfall then need to check EQ so no exit from process if no fno data to process**
				{
						strcpy(c_msg,"No Record to be Process...");
						fn_userlog(c_ServiceName,c_msg);
						fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);
						destroy_bat();
				} */

				fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
				fn_errlog(c_ServiceName,"S31025",SQLMSG,c_err_msg);
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				destroy_bat();
			}

			/******** Ver 1.5 Starts **********/
			if (DEBUG_MSG_LVL_3)     
    	{
        fn_userlog(c_ServiceName,"Successfully inserted |%d| records in SSD for shortfall in FNO",sqlca.sqlerrd[2]);
    	}

   /*********** Ver 2.6 Starts **********/

      /***** Update CDX Shortfall amount for the Customer Who have FNO shortfall as well */
      EXEC SQL
      UPDATE  SSD_SAM_SHRTFAL_DTLS
      SET     SSD_CDX_SRHTFALL_AMT =
              (SELECT nvl(SUM(AMOUNT),0) * 100 /* Convert amount into paise */
               FROM
                (SELECT MATCH,
                        SUM(AMOUNT) AMOUNT
                 FROM
                  (
            SELECT CBD_CLM_MTCH_ACCNT MATCH,
                   -1 * SUM (CBD_DC_AMT- CBD_PI_PO_AMT-CBD_INT_ADJ_AMT) AMOUNT
            FROM   CBD_CDX_BNK_DBCR ,
                   ( SELECT FAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   FAB_FO_ALC_BFT_SMRY
                     WHERE  FAB_PLG_AMT != 0
                     UNION 
                     SELECT EAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   EAB_EQ_ALC_BFT_SMRY
                     WHERE  EAB_PLG_AMT != 0
                     UNION
                     SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   CAB_COD_ALC_BFT_SMRY
                     WHERE  CAB_PLG_AMT != 0
                     UNION
                     SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   CAB_CDX_ALC_BFT_SMRY
                     WHERE  CAB_PLG_AMT != 0 
                   )
            /** WHERE  CBD_PAYIN_DT <= trunc(sysdate)     ** Ver 2.6 **/
            WHERE  CBD_PAYOUT_DT <= trunc(sysdate)    	/** Ver 2.6 **/
            and    CBD_CLM_MTCH_ACCNT = MATCH_ID 
            and    CBD_CLM_MTCH_ACCNT not in ( SELECT CBM_CLM_MTCH_ACCNT 
                                               FROM   CBM_CDX_BNK_FLR_MSG 
                                               WHERE  CBM_STTS = 'N'
                                               AND    cbm_err_cd IN ('911', '907', '115', '-99', '-98', '-2', '-5', '-4', '-1')) /** Ver 2.7 **/ 
                                               /** AND    FBM_PRDCT_CD IS NULL ) **/
            and    CBD_DC_FLG = 'D'
            HAVING sum(CBD_DC_AMT- CBD_PI_PO_AMT-CBD_INT_ADJ_AMT) < 0
            group by CBD_CLM_MTCH_ACCNT

                  )
                GROUP BY MATCH
                HAVING  SUM(AMOUNT)  >0
              )
             WHERE  MATCH      = SSD_CLM_MTCH_ACCNT
            )
            WHERE  SSD_TRD_DT = to_date(:c_ord_trd_dt,'dd-mm-yyyy');


      if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND) 
      {
        fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
        fn_errlog(c_ServiceName,"S31030",SQLMSG,c_err_msg);
        fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        destroy_bat();
      }

      if (DEBUG_MSG_LVL_3)
      {
        fn_userlog(c_ServiceName,"Successfully updated |%d| record for shortfall in CDX",sqlca.sqlerrd[2]);
      }

      /****** Insert only CDX shortfall amounts .Following are the customers who have only CDX short fall***/

      EXEC SQL
      INSERT INTO SSD_SAM_SHRTFAL_DTLS  
      (SSD_CLM_MTCH_ACCNT,              
       SSD_EQ_SRHTFALL_AMT,             
       SSD_FNO_SRHTFALL_AMT,
       SSD_CDX_SRHTFALL_AMT,
       SSD_MCO_SRHTFALL_AMT,            
       SSD_TRD_DT                       
      )
      (
            SELECT  MATCH,
                    0,
                    0,                  
                    SUM (AMOUNT)*100,
                    0,
                   to_date(:c_ord_trd_dt,'dd-mm-yyyy')
            FROM
            (
            SELECT CBD_CLM_MTCH_ACCNT MATCH,
                   -1 * SUM (CBD_DC_AMT- CBD_PI_PO_AMT-CBD_INT_ADJ_AMT) AMOUNT
            FROM   CBD_CDX_BNK_DBCR ,
                   ( SELECT FAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   FAB_FO_ALC_BFT_SMRY
                     WHERE  FAB_PLG_AMT != 0
                     UNION
                     SELECT EAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   EAB_EQ_ALC_BFT_SMRY
                     WHERE  EAB_PLG_AMT != 0
                     UNION
                     SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   CAB_COD_ALC_BFT_SMRY
                     WHERE  CAB_PLG_AMT != 0
                     UNION
                     SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   CAB_CDX_ALC_BFT_SMRY
                     WHERE  CAB_PLG_AMT != 0 
                   )
            /** WHERE  CBD_PAYIN_DT <= trunc(sysdate)     ** Ver 2.6 **/
            WHERE  CBD_PAYOUT_DT <= trunc(sysdate)    /** Ver 2.6 **/
            and    CBD_CLM_MTCH_ACCNT = MATCH_ID 
            and    CBD_CLM_MTCH_ACCNT not in ( SELECT CBM_CLM_MTCH_ACCNT 
                                               FROM   CBM_CDX_BNK_FLR_MSG 
                                               WHERE  CBM_STTS = 'N' 
                                               AND    cbm_err_cd IN ('911', '907', '115', '-99', '-98', '-2', '-5', '-4', '-1') ) /** Ver 2.7 **/
                                               /** AND    FBM_PRDCT_CD IS NULL ) **/
            and    CBD_DC_FLG = 'D'
            HAVING sum(CBD_DC_AMT- CBD_PI_PO_AMT-CBD_INT_ADJ_AMT) < 0
            group by CBD_CLM_MTCH_ACCNT
            ) A
            WHERE not exists (
                               SELECT 1
                               FROM   SSD_SAM_SHRTFAL_DTLS
                               WHERE  SSD_TRD_DT = to_date(:c_ord_trd_dt,'dd-mm-yyyy')
                               AND    A.MATCH = SSD_CLM_MTCH_ACCNT
                             )
            GROUP BY MATCH
            HAVING  sum(AMOUNT) >0
      );

        if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
        {
          fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
          fn_errlog(c_ServiceName,"S31035",SQLMSG,c_err_msg);
          fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
          destroy_bat();
        }

      if (DEBUG_MSG_LVL_3)
      {
        fn_userlog(c_ServiceName,"Successfully inserted |%d| records in SSD for shortfall in CDX",sqlca.sqlerrd[2]);
      }
      /***** Update MCO Shortfall amount for the Customer Who have FNO/CDX shortfall as well */


      EXEC SQL
      UPDATE  SSD_SAM_SHRTFAL_DTLS
      SET     SSD_MCO_SRHTFALL_AMT =
              (SELECT nvl(SUM(AMOUNT),0)
               FROM
                 (SELECT MATCH,
                        SUM(AMOUNT) AMOUNT
                 FROM
                  (
            SELECT CBD_CLM_MTCH_ACCNT MATCH,
                   -1 * SUM (CBD_DC_AMT- CBD_PI_PO_AMT-CBD_INT_ADJ_AMT) AMOUNT
            FROM   CBD_COD_BNK_DRCR,
                   ( SELECT FAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   FAB_FO_ALC_BFT_SMRY
                     WHERE  FAB_PLG_AMT != 0
                     UNION
                     SELECT EAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   EAB_EQ_ALC_BFT_SMRY
                     WHERE  EAB_PLG_AMT != 0
                     UNION
                     SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   CAB_COD_ALC_BFT_SMRY
                     WHERE  CAB_PLG_AMT != 0
                     UNION
                     SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   CAB_CDX_ALC_BFT_SMRY
                     WHERE  CAB_PLG_AMT != 0 
                   )
            /** WHERE  CBD_PAYIN_DT <= trunc(sysdate)     ** Ver 2.6 **/
            WHERE  CBD_PAYOUT_DT <= trunc(sysdate)    /** Ver 2.6 **/
            and    CBD_CLM_MTCH_ACCNT = MATCH_ID 
            and    CBD_CLM_MTCH_ACCNT not in ( SELECT CBM_CLM_MTCH_ACCNT 
                                               FROM   CBM_COD_BNK_FLR_MSG 
                                               WHERE  CBM_STTS = 'N'  
                                               AND    CBM_PRDCT_CD IS NULL )
            and    CBD_DC_FLG = 'D'
            HAVING sum(CBD_DC_AMT- CBD_PI_PO_AMT-CBD_INT_ADJ_AMT) < 0
            group by CBD_CLM_MTCH_ACCNT
                  )
                GROUP BY MATCH
                HAVING  SUM(AMOUNT)  >0
               )
             WHERE  MATCH      = SSD_CLM_MTCH_ACCNT
             )
            WHERE  SSD_TRD_DT = to_date(:c_ord_trd_dt,'dd-mm-yyyy');

        if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
        {
          fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
          fn_errlog(c_ServiceName,"S31040",SQLMSG,c_err_msg);
          fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
          destroy_bat();
        }

      if (DEBUG_MSG_LVL_3)
      {
        fn_userlog(c_ServiceName,"Successfully updated |%d| record for shortfall in EQ",sqlca.sqlerrd[2]);
      }

      /****** Insert only MCO shortfall amounts .Following are the customers who have only MCO short fall***/ 

      EXEC SQL
      INSERT INTO SSD_SAM_SHRTFAL_DTLS  
      (SSD_CLM_MTCH_ACCNT,              
       SSD_EQ_SRHTFALL_AMT,             
       SSD_FNO_SRHTFALL_AMT,  
       SSD_CDX_SRHTFALL_AMT,
       SSD_MCO_SRHTFALL_AMT,          
       SSD_TRD_DT                       
      )
      (
            SELECT MATCH,
                   0,
                   0,
                   0,
                   SUM (AMOUNT),
                   to_date(:c_ord_trd_dt,'dd-mm-yyyy')
             FROM 
             (
             SELECT CBD_CLM_MTCH_ACCNT MATCH,
                   -1 * SUM (CBD_DC_AMT- CBD_PI_PO_AMT-CBD_INT_ADJ_AMT) AMOUNT
             FROM   CBD_COD_BNK_DRCR,
                   ( SELECT FAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   FAB_FO_ALC_BFT_SMRY
                     WHERE  FAB_PLG_AMT != 0
                     UNION
                     SELECT EAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   EAB_EQ_ALC_BFT_SMRY
                     WHERE  EAB_PLG_AMT != 0
                     UNION
                     SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   CAB_COD_ALC_BFT_SMRY
                     WHERE  CAB_PLG_AMT != 0
                     UNION
                     SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                     FROM   CAB_CDX_ALC_BFT_SMRY
                     WHERE  CAB_PLG_AMT != 0 
                   )
            /** WHERE  CBD_PAYIN_DT <= trunc(sysdate)     ** Ver 2.6 **/
            WHERE  CBD_PAYOUT_DT <= trunc(sysdate)    /** Ver 2.6 **/
            and    CBD_CLM_MTCH_ACCNT = MATCH_ID 
            and    CBD_CLM_MTCH_ACCNT not in ( SELECT CBM_CLM_MTCH_ACCNT 
                                               FROM   CBM_COD_BNK_FLR_MSG 
                                               WHERE  CBM_STTS = 'N'  
                                               AND    CBM_PRDCT_CD IS NULL )
            and    CBD_DC_FLG = 'D'
            HAVING sum(CBD_DC_AMT- CBD_PI_PO_AMT-CBD_INT_ADJ_AMT) < 0
            group by CBD_CLM_MTCH_ACCNT
           ) A
           WHERE not exists (
                              SELECT 1
                              FROM   SSD_SAM_SHRTFAL_DTLS
                              WHERE  SSD_TRD_DT = to_date(:c_ord_trd_dt,'dd-mm-yyyy')
                              AND    A.MATCH = SSD_CLM_MTCH_ACCNT
                            )
           GROUP BY MATCH
           HAVING  sum(AMOUNT) >0 
      );

        if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
        {
          fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
          fn_errlog(c_ServiceName,"S31045",SQLMSG,c_err_msg);
          fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
          destroy_bat();
        }

      if (DEBUG_MSG_LVL_3)
      {
        fn_userlog(c_ServiceName,"Successfully inserted |%d| records in SSD for shortfall in MCO",sqlca.sqlerrd[2]);
      }

   /*********** Ver 2.6 Ends *************/

			/***** Update EQ shortfall amount for the customer who have FNO/CDX/MCO shortfall as well */
			EXEC SQL
			UPDATE	SSD_SAM_SHRTFAL_DTLS
			SET			SSD_EQ_SRHTFALL_AMT =
							(SELECT nvl(SUM(AMOUNT),0) * 100 /* Convert amount into paise */
		 					 FROM
								(SELECT	MATCH, 
											  SUM(AMOUNT) AMOUNT	/* This amount is sum of NSE and BSE amount */	
								 FROM
									(
                    /*** Commented in Ver 2.6 ***
                    **** Select NSE net amount *
										SELECT 	BDC_CLNT_MTCH_ACCNT MATCH,
													 	SUM(decode (BDC_DB_CR_FLG,'D',BDC_BAL_AMNT ,-1 * BDC_BAL_AMNT)) AMOUNT 
										FROM  	BDC_BNK_DBCR,FAB_FO_ALC_BFT_SMRY,EAB_EQ_ALC_BFT_SMRY,ESM_XCHNG_SGMNT_MSTR,SPD_STTLMNT_PRCS_DTLS		** SPD in 2.5 **
										WHERE   BDC_CLNT_MTCH_ACCNT = EAB_CLM_MTCH_ACCNT
									  AND     EAB_CLM_MTCH_ACCNT  = FAB_CLM_MTCH_ACCNT
										AND     BDC_XCHNG_CD				= ESM_XCHNG_CD
										AND     BDC_XCHNG_CD      	= 'NSE'
										** Ver. 2.5 ** added **
										AND			BDC_XCHNG_CD				= SPD_XCHNG_CD
										AND			BDC_STTLMNT_NMBR		= SPD_STTLMNT_NMBR
										AND			BDC_SGMNT_CD				= SPD_SGMNT_CD
										AND			SPD_FUND_PYOUT_DT		<= TRUNC(SYSDATE)
										** Ver. 2.5 ends **
        						AND     BDC_SGMNT_CD      	= ESM_SGMNT_CD
        						** AND     BDC_STTLMNT_NMBR 	  <= :l_nse_stlmnt_no ** Ver. 2.5 ** comment **
										AND     BDC_PRCCSD_FLG			!= 'F'
										AND     BDC_BAL_AMNT 				> 0
        						AND     (nvl(EAB_PLG_AMT,0) <>0 OR nvl(FAB_PLG_AMT,0)<> 0)
        						GROUP BY BDC_CLNT_MTCH_ACCNT
        						HAVING  SUM(decode (BDC_DB_CR_FLG,'D',BDC_BAL_AMNT,-1 * BDC_BAL_AMNT)) >0
										UNION ALL
										*** Select BSE Net amount *
										SELECT  BDC_CLNT_MTCH_ACCNT MATCH,
                					  SUM(decode(BDC_DB_CR_FLG,'D',BDC_BAL_AMNT, -1 * BDC_BAL_AMNT)) AMOUNT
        						FROM    BDC_BNK_DBCR,FAB_FO_ALC_BFT_SMRY,EAB_EQ_ALC_BFT_SMRY,ESM_XCHNG_SGMNT_MSTR,SPD_STTLMNT_PRCS_DTLS 	* SPD in 2.5 **
        						WHERE   BDC_CLNT_MTCH_ACCNT = EAB_CLM_MTCH_ACCNT
										AND     EAB_CLM_MTCH_ACCNT  = FAB_CLM_MTCH_ACCNT
										AND     BDC_XCHNG_CD        = ESM_XCHNG_CD
        						AND     BDC_XCHNG_CD      	= 'BSE'
										** Ver. 2.5 ** added **
                    AND     BDC_XCHNG_CD        = SPD_XCHNG_CD
                    AND     BDC_STTLMNT_NMBR    = SPD_STTLMNT_NMBR
                    AND     BDC_SGMNT_CD        = SPD_SGMNT_CD
                    AND     SPD_FUND_PYOUT_DT   <= TRUNC(SYSDATE)
                    ** Ver. 2.5 ends **
        						AND     BDC_SGMNT_CD        = ESM_SGMNT_CD	
        						** AND     BDC_STTLMNT_NMBR	  <=:l_bse_stlmnt_no ** Ver. 2.5 commented ****
										AND     BDC_PRCCSD_FLG      != 'F'
										AND     BDC_BAL_AMNT        >  0
        						AND     (nvl(EAB_PLG_AMT,0) <>0 OR nvl(FAB_PLG_AMT,0)<> 0)
        						GROUP BY BDC_CLNT_MTCH_ACCNT
        						HAVING  SUM(decode (BDC_DB_CR_FLG,'D',BDC_BAL_AMNT,-1 * BDC_BAL_AMNT))  >0
  **** Comment End Ver 2.6 ****/
  /******* Ver 2.6 Starts *******/
                    /**** Select NSE net amount */
                    SELECT  BDC_CLNT_MTCH_ACCNT MATCH,
                            SUM(decode (BDC_DB_CR_FLG,'D',BDC_BAL_AMNT ,-1 * BDC_BAL_AMNT)) AMOUNT
                    FROM    BDC_BNK_DBCR,ESM_XCHNG_SGMNT_MSTR,SPD_STTLMNT_PRCS_DTLS,
                            ( SELECT FAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   FAB_FO_ALC_BFT_SMRY
                              WHERE  FAB_PLG_AMT != 0
                              UNION
                              SELECT EAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   EAB_EQ_ALC_BFT_SMRY
                              WHERE  EAB_PLG_AMT != 0
                              UNION
                              SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   CAB_COD_ALC_BFT_SMRY
                              WHERE  CAB_PLG_AMT != 0
                              UNION
                              SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   CAB_CDX_ALC_BFT_SMRY
                              WHERE  CAB_PLG_AMT != 0 
                            )  
                    WHERE   BDC_CLNT_MTCH_ACCNT = MATCH_ID
                    AND     BDC_XCHNG_CD        = ESM_XCHNG_CD
                    AND     BDC_XCHNG_CD        = 'NSE'
                    AND     BDC_XCHNG_CD        = SPD_XCHNG_CD
                    AND     BDC_STTLMNT_NMBR    = SPD_STTLMNT_NMBR
                    AND     BDC_SGMNT_CD        = SPD_SGMNT_CD
                    AND     SPD_FUND_PYOUT_DT   <= TRUNC(SYSDATE)
                    AND     BDC_SGMNT_CD        = ESM_SGMNT_CD
                    AND     BDC_PRCCSD_FLG      != 'F'
                    AND     BDC_BAL_AMNT        > 0
                    GROUP BY BDC_CLNT_MTCH_ACCNT
                    HAVING  SUM(decode (BDC_DB_CR_FLG,'D',BDC_BAL_AMNT,-1 * BDC_BAL_AMNT)) >0
                    UNION ALL
                    /*** Select BSE Net amount */
                    SELECT  BDC_CLNT_MTCH_ACCNT MATCH,
                            SUM(decode(BDC_DB_CR_FLG,'D',BDC_BAL_AMNT, -1 * BDC_BAL_AMNT)) AMOUNT
                    FROM    BDC_BNK_DBCR,ESM_XCHNG_SGMNT_MSTR,SPD_STTLMNT_PRCS_DTLS,   
                            ( SELECT FAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   FAB_FO_ALC_BFT_SMRY
                              WHERE  FAB_PLG_AMT != 0
                              UNION
                              SELECT EAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   EAB_EQ_ALC_BFT_SMRY
                              WHERE  EAB_PLG_AMT != 0
                              UNION
                              SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   CAB_COD_ALC_BFT_SMRY
                              WHERE  CAB_PLG_AMT != 0
                              UNION
                              SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   CAB_CDX_ALC_BFT_SMRY
                              WHERE  CAB_PLG_AMT != 0 
                            )
                    WHERE   BDC_CLNT_MTCH_ACCNT = MATCH_ID
                    AND     BDC_XCHNG_CD        = ESM_XCHNG_CD
                    AND     BDC_XCHNG_CD        = 'BSE'
                    AND     BDC_XCHNG_CD        = SPD_XCHNG_CD
                    AND     BDC_STTLMNT_NMBR    = SPD_STTLMNT_NMBR
                    AND     BDC_SGMNT_CD        = SPD_SGMNT_CD
                    AND     SPD_FUND_PYOUT_DT   <= TRUNC(SYSDATE)
                    AND     BDC_SGMNT_CD        = ESM_SGMNT_CD
                    AND     BDC_PRCCSD_FLG      != 'F'
                    AND     BDC_BAL_AMNT        >  0
                    GROUP BY BDC_CLNT_MTCH_ACCNT
                    HAVING  SUM(decode (BDC_DB_CR_FLG,'D',BDC_BAL_AMNT,-1 * BDC_BAL_AMNT))  >0
  /******* Ver 2.6 Ends *******/
 

       						)
								GROUP BY MATCH
								HAVING  SUM(AMOUNT)  >0
							 ) 
						 WHERE  MATCH      = SSD_CLM_MTCH_ACCNT
						)
						WHERE  SSD_TRD_DT = to_date(:c_ord_trd_dt,'dd-mm-yyyy');

				if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
				{
					fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
        	fn_errlog(c_ServiceName,"S31050",SQLMSG,c_err_msg);
        	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        	destroy_bat();
				}

			if (DEBUG_MSG_LVL_3)       
    	{
      	fn_userlog(c_ServiceName,"Successfully updated |%d| record for shortfall in EQ",sqlca.sqlerrd[2]);
    	}
			/*** End of EQ shortfall amount update */
	
			/****** Insert only EQ shortfall amounts .Following are the customers who have only EQ short fall***/						
			EXEC SQL
			INSERT	INTO SSD_SAM_SHRTFAL_DTLS
									 (SSD_CLM_MTCH_ACCNT,
										SSD_EQ_SRHTFALL_AMT,
										SSD_FNO_SRHTFALL_AMT,
                    SSD_CDX_SRHTFALL_AMT,
                    SSD_MCO_SRHTFALL_AMT, 
										SSD_TRD_DT
									 )
									 (SELECT	MATCH,
														SUM( AMOUNT) * 100 , /*This amount is sum of NSE and BSE amount and its in paise*/
													  0,
                            0,
                            0,
														to_date(:c_ord_trd_dt,'dd-mm-yyyy')
										FROM    
										(
                      /*** Commented in  Ver 2.6 ******* 
											***** NSE Amount ******
											SELECT 	BDC_CLNT_MTCH_ACCNT MATCH,
         										  SUM(decode (BDC_DB_CR_FLG,'D',BDC_BAL_AMNT,-1 * BDC_BAL_AMNT))  AMOUNT 
 											*FROM  BDC_BNK_DBCR,FAB_FO_ALC_BFT_SMRY,EAB_EQ_ALC_BFT_SMRY,ESM_XCHNG_SGMNT_MSTR Ver 2.1 *
 											FROM    BDC_BNK_DBCR,FAB_FO_ALC_BFT_SMRY,EAB_EQ_ALC_BFT_SMRY,SPD_STTLMNT_PRCS_DTLS * SPD Ver 2.1 *
 											WHERE   BDC_CLNT_MTCH_ACCNT = EAB_CLM_MTCH_ACCNT
 											AND     BDC_CLNT_MTCH_ACCNT = FAB_CLM_MTCH_ACCNT
											*AND   BDC_XCHNG_CD        = ESM_XCHNG_CD 			   Ver 2.1 *
											AND     BDC_XCHNG_CD        = SPD_XCHNG_CD 		  * Ver 2.1 *
 											AND     BDC_XCHNG_CD  			= 'NSE'
 											*AND   BDC_SGMNT_CD        = ESM_SGMNT_CD     	   Ver 2.1 *
 											AND     BDC_SGMNT_CD        = SPD_SGMNT_CD  		* Ver 2.1 *
											AND     BDC_STTLMNT_NMBR    = SPD_STTLMNT_NMBR  * Ver 2.1 *
 											** AND     BDC_STTLMNT_NMBR    <= :l_nse_stlmnt_no ** Ver. 2.5 ** commented **
											AND			SPD_FUND_PYOUT_DT		<= TRUNC(SYSDATE)		* Ver. 2.5 *
											AND     BDC_PRCCSD_FLG		  != 'F'
										  AND     BDC_BAL_AMNT        >  0
 											AND     (nvl(EAB_PLG_AMT,0) <>0 OR nvl(FAB_PLG_AMT,0)<> 0) * Cust has SAM allctn in 
																																								    EQ or FNO*
 											GROUP BY BDC_CLNT_MTCH_ACCNT
 											HAVING SUM(decode (BDC_DB_CR_FLG,'D',BDC_BAL_AMNT,-1 * BDC_BAL_AMNT))  > 0
											UNION ALL
											***** BSE Amount ******
											SELECT  BDC_CLNT_MTCH_ACCNT MATCH,
															SUM(decode (BDC_DB_CR_FLG,'D',BDC_BAL_AMNT,-1 * BDC_BAL_AMNT))  AMOUNT
											*FROM  BDC_BNK_DBCR,FAB_FO_ALC_BFT_SMRY,EAB_EQ_ALC_BFT_SMRY,ESM_XCHNG_SGMNT_MSTR   Ver 2.1 *
											FROM    BDC_BNK_DBCR,FAB_FO_ALC_BFT_SMRY,EAB_EQ_ALC_BFT_SMRY,SPD_STTLMNT_PRCS_DTLS  * Ver 2.1 *
 											WHERE   BDC_CLNT_MTCH_ACCNT = EAB_CLM_MTCH_ACCNT
											AND     BDC_CLNT_MTCH_ACCNT = FAB_CLM_MTCH_ACCNT
											*AND   BDC_XCHNG_CD        = ESM_XCHNG_CD      	 Ver 2.1 *
											AND     BDC_XCHNG_CD        = SPD_XCHNG_CD   		* Ver 2.1 *
 											AND     BDC_XCHNG_CD  			= 'BSE'
 											*AND   BDC_SGMNT_CD			  = ESM_SGMNT_CD	    	 Ver 2.1 *
 											AND     BDC_SGMNT_CD			  = SPD_SGMNT_CD   		* Ver 2.1 *	 
											AND     BDC_STTLMNT_NMBR    = SPD_STTLMNT_NMBR  * Ver 2.1 *
 											*** AND     BDC_STTLMNT_NMBR    <= :l_bse_stlmnt_no	** Ver. 2.5 ** commented **
                      AND     SPD_FUND_PYOUT_DT   <= TRUNC(SYSDATE)   * Ver. 2.5 *
											AND     BDC_PRCCSD_FLG      != 'F'
											AND     BDC_BAL_AMNT        >  0
 											AND     (nvl(EAB_PLG_AMT,0) <>0 OR nvl(FAB_PLG_AMT,0)<> 0) * Cust has SAM allctn in
														  																										  EQ or FNO*
 											GROUP  BY BDC_CLNT_MTCH_ACCNT
 											HAVING SUM(decode (BDC_DB_CR_FLG,'D',BDC_BAL_AMNT,-1 * BDC_BAL_AMNT))  > 0
                    ******* Comment Ends Ver 2.6 *******/
                    /******* Ver 2.6 Starts *******/
                    /**** Select NSE net amount */
                    SELECT  BDC_CLNT_MTCH_ACCNT MATCH,
                            SUM(decode (BDC_DB_CR_FLG,'D',BDC_BAL_AMNT ,-1 * BDC_BAL_AMNT)) AMOUNT
                    FROM    BDC_BNK_DBCR,ESM_XCHNG_SGMNT_MSTR,SPD_STTLMNT_PRCS_DTLS,
                            ( SELECT FAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   FAB_FO_ALC_BFT_SMRY
                              WHERE  FAB_PLG_AMT != 0
                              UNION
                              SELECT EAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   EAB_EQ_ALC_BFT_SMRY
                              WHERE  EAB_PLG_AMT != 0
                              UNION
                              SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   CAB_COD_ALC_BFT_SMRY
                              WHERE  CAB_PLG_AMT != 0
                              UNION
                              SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   CAB_CDX_ALC_BFT_SMRY
                              WHERE  CAB_PLG_AMT != 0 
                            )  
                    WHERE   BDC_CLNT_MTCH_ACCNT = MATCH_ID
                    AND     BDC_XCHNG_CD        = ESM_XCHNG_CD
                    AND     BDC_XCHNG_CD        = 'NSE'
                    AND     BDC_XCHNG_CD        = SPD_XCHNG_CD
                    AND     BDC_STTLMNT_NMBR    = SPD_STTLMNT_NMBR
                    AND     BDC_SGMNT_CD        = SPD_SGMNT_CD
                    AND     SPD_FUND_PYOUT_DT   <= TRUNC(SYSDATE)
                    AND     BDC_SGMNT_CD        = ESM_SGMNT_CD
                    AND     BDC_PRCCSD_FLG      != 'F'
                    AND     BDC_BAL_AMNT        > 0
                    GROUP BY BDC_CLNT_MTCH_ACCNT
                    HAVING  SUM(decode (BDC_DB_CR_FLG,'D',BDC_BAL_AMNT,-1 * BDC_BAL_AMNT)) >0
                    UNION ALL
                    /*** Select BSE Net amount */
                    SELECT  BDC_CLNT_MTCH_ACCNT MATCH,
                            SUM(decode(BDC_DB_CR_FLG,'D',BDC_BAL_AMNT, -1 * BDC_BAL_AMNT)) AMOUNT
                    FROM    BDC_BNK_DBCR,ESM_XCHNG_SGMNT_MSTR,SPD_STTLMNT_PRCS_DTLS,   
                            ( SELECT FAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   FAB_FO_ALC_BFT_SMRY
                              WHERE  FAB_PLG_AMT != 0
                              UNION 
                              SELECT EAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   EAB_EQ_ALC_BFT_SMRY
                              WHERE  EAB_PLG_AMT != 0
                              UNION
                              SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   CAB_COD_ALC_BFT_SMRY
                              WHERE  CAB_PLG_AMT != 0
                              UNION
                              SELECT CAB_CLM_MTCH_ACCNT MATCH_ID
                              FROM   CAB_CDX_ALC_BFT_SMRY
                              WHERE  CAB_PLG_AMT != 0 
                            )
                    WHERE   BDC_CLNT_MTCH_ACCNT = MATCH_ID
                    AND     BDC_XCHNG_CD        = ESM_XCHNG_CD
                    AND     BDC_XCHNG_CD        = 'BSE'
                    AND     BDC_XCHNG_CD        = SPD_XCHNG_CD
                    AND     BDC_STTLMNT_NMBR    = SPD_STTLMNT_NMBR
                    AND     BDC_SGMNT_CD        = SPD_SGMNT_CD
                    AND     SPD_FUND_PYOUT_DT   <= TRUNC(SYSDATE)
                    AND     BDC_SGMNT_CD        = ESM_SGMNT_CD
                    AND     BDC_PRCCSD_FLG      != 'F'
                    AND     BDC_BAL_AMNT        >  0
                    GROUP BY BDC_CLNT_MTCH_ACCNT
                    HAVING  SUM(decode (BDC_DB_CR_FLG,'D',BDC_BAL_AMNT,-1 * BDC_BAL_AMNT))  >0
                    /******* Ver 2.6 Ens *******/
										) A
										/**** select match accounts which are not present in SSD */ 
										WHERE not exists ( 
																			 SELECT 1 
																			 FROM 	SSD_SAM_SHRTFAL_DTLS 
																			 WHERE  SSD_TRD_DT = to_date(:c_ord_trd_dt,'dd-mm-yyyy') 
																			 AND 		A.MATCH = SSD_CLM_MTCH_ACCNT
																		 ) 
									  GROUP BY MATCH
										HAVING  sum(AMOUNT) >0
									);

				if(SQLCODE != 0)
      	{
        	fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
        	fn_errlog(c_ServiceName,"S31055",SQLMSG,c_err_msg);
        	fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        	destroy_bat();
      	}

		  if (DEBUG_MSG_LVL_3)      
      {
        fn_userlog(c_ServiceName,"Successfully inserted |%d| record for shortfall only in EQ",sqlca.sqlerrd[2]);
      }	
			
			EXEC SQL
    	SELECT  PPP_SHRTFLL_MRGN,
     	       	PPP_MIN_PLG_SHORTFALL
    	INTO    :l_shrtfll_mrgn,
     	       	:l_min_plg_shortfall
    	FROM    PPP_PAR_PLG_PRMTR;

    	if(SQLCODE != 0 )
    	{
        fn_errlog(c_ServiceName,"S31060",SQLMSG,c_err_msg);
        fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
        destroy_bat();
    	}

			fn_userlog(c_ServiceName,"l_shrtfll_mrgn :%ld:",l_shrtfll_mrgn);
    	fn_userlog(c_ServiceName,"l_min_plg_shortfall :%ld:",l_min_plg_shortfall);

			/**** Update total amount as sum of EQ and FNO shortfall amount 
						with the shortfall margin percentage applied **********/
			EXEC SQL
					 UPDATE		SSD_SAM_SHRTFAL_DTLS
					 SET      SSD_TOT_SRHTFALL_AMT 		 = (nvl(SSD_EQ_SRHTFALL_AMT,0) + nvl(SSD_FNO_SRHTFALL_AMT,0)
                                                + nvl(SSD_CDX_SRHTFALL_AMT,0) + nvl(SSD_MCO_SRHTFALL_AMT,0)) 
																												+
																					 	   (((nvl(SSD_EQ_SRHTFALL_AMT,0) + nvl(SSD_FNO_SRHTFALL_AMT,0)
                                                + nvl(SSD_CDX_SRHTFALL_AMT,0) + nvl(SSD_MCO_SRHTFALL_AMT,0)) 
																									    *:l_shrtfll_mrgn)/100), /** CDX & MCO added in Ver 2.6 **/ 
										SSD_EQ_SRHTFALL_BAL_AMT  = SSD_EQ_SRHTFALL_AMT,
										SSD_FNO_SRHTFALL_BAL_AMT = SSD_FNO_SRHTFALL_AMT, 
                    SSD_CDX_SRHTFALL_BAL_AMT = SSD_CDX_SRHTFALL_AMT, /* Ver 2.6 */
                    SSD_MCO_SRHTFALL_BAL_AMT = SSD_MCO_SRHTFALL_AMT  /* Ver 2.6 */                                       
					 WHERE		SSD_TRD_DT					 = to_date(:c_ord_trd_dt,'dd-mm-yyyy');	

			if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31065",SQLMSG,c_err_msg);
        fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
        destroy_bat();
      }

			if (DEBUG_MSG_LVL_3)      
      {
        fn_userlog(c_ServiceName,"Successfully updated total shortfall amount for |%d| records",sqlca.sqlerrd[2]);
      }

			/***** Delete records from SSD where FNO + EQ shortfall amount is less than minimum shorfall amt */ 
			EXEC SQL
      DELETE SSD_SAM_SHRTFAL_DTLS
      WHERE  SSD_TRD_DT = to_date(:c_ord_trd_dt,'dd-mm-yyyy')
			/*** AND		 (nvl(SSD_EQ_SRHTFALL_AMT,0) + nvl(SSD_FNO_SRHTFALL_AMT,0)) <=:l_min_plg_shortfall *100; Commented In Ver 1.7 ***/
			AND	(	( (nvl(SSD_EQ_SRHTFALL_AMT,0) + nvl(SSD_FNO_SRHTFALL_AMT,0) +nvl(SSD_CDX_SRHTFALL_AMT,0) + nvl(SSD_MCO_SRHTFALL_AMT,0)
              ) <=:l_min_plg_shortfall *100 ) /*** Mco & cdx added in 2.6 ***/ 
             OR 
						( SSD_CLM_MTCH_ACCNT IN (SELECT  MEM_MTCH_ACCNT            
                                              FROM    MEM_MTM_EXPTN_MSTR
                                              WHERE   MEM_SEGMENT = 'CL'
                                              AND     SYSDATE BETWEEN MEM_FROM_DT AND MEM_TO_DT ))
					);

      if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31070",SQLMSG,c_err_msg);
        fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
        destroy_bat();
      }
			if (DEBUG_MSG_LVL_3)
      {
        fn_userlog(c_ServiceName,"Successfully deleted |%d| records in SSD where tot shorfall was less than parameterised shortfall allowd ",sqlca.sqlerrd[2]);
      }

			/**** Update trd val in SSD table if customer has any ****/  
			EXEC SQL
					 UPDATE		SSD_SAM_SHRTFAL_DTLS
					 SET			SSD_EXCTD_TRD_VAL	= (SELECT nvl(sum(TRD_NET_VL),0) * 100 /* In paise */
                             						 FROM   TRD_TRD_DTLS , ORD_ORDR_DTLS
                             						 WHERE  TRUNC(TRD_TRD_DT)  = to_date(:c_ord_trd_dt,'dd-mm-yyyy')
                             						 AND 		TRD_CLM_MTCH_ACCNT = SSD_CLM_MTCH_ACCNT
                             						 AND    TRD_ORDR_RFRNC  	 = ORD_ORDR_RFRNC
																				 AND    TRD_CLM_MTCH_ACCNT = ORD_CLM_MTCH_ACCNT
																				 AND    ORD_TRD_DT         = to_date(:c_ord_trd_dt,'dd-mm-yyyy')
																			   AND    ORD_PRDCT_TYP      = 'S' 	 /* Spot sell */
                             						 AND    ORD_MSC_CHAR       in ('P','I','G','V') 		 /* Pledged records */ /* G and V added in Ver 2.4 */
                             						 AND    ORD_CHANNEL			   !='SYS') /* Customer placed */
					 WHERE  	SSD_TRD_DT = to_date(:c_ord_trd_dt,'dd-mm-yyyy');

			if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
      {
        fn_errlog(c_ServiceName,"S31075",SQLMSG,c_err_msg);
        fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
        destroy_bat();
      }

			if (DEBUG_MSG_LVL_3)     
      {
        fn_userlog(c_ServiceName,"Successfully updated |%d| records for trd val",sqlca.sqlerrd[2]);
      }

			/***** Insert in FBT table.Records to be inserted has following condition
			1.If total amount in SSD - Spot Trade value(spt trd placed by customer through SAM) is
				greater tha the minimum shortfall then insert in FBT table ******/
			
			EXEC SQL	
		  INSERT INTO	FBT_FO_BNK_TEMP
									(FBT_CLM_MTCH_ACCNT,
									 FBT_AMT_REDUCE
									)
								  (SELECT	SSD_CLM_MTCH_ACCNT,
													(nvl(SSD_TOT_SRHTFALL_AMT,0) - nvl(SSD_EXCTD_TRD_VAL,0)) NET_AMT
									 FROM	  SSD_SAM_SHRTFAL_DTLS
									 WHERE  SSD_TRD_DT = to_date(:c_ord_trd_dt,'dd-mm-yyyy')
									 AND 		(nvl(SSD_TOT_SRHTFALL_AMT,0) - nvl(SSD_EXCTD_TRD_VAL,0))>:l_min_plg_shortfall *100
									);

			if(SQLCODE != 0 )
      {
        fn_errlog(c_ServiceName,"S31080",SQLMSG,c_err_msg);
        fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
        destroy_bat();
      }

    /********* End of Ver 1.5 *********/
		/*if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 ) Ver 1.5 **/
			if (tpcommit(0) == -1)  /* Ver 1.5 */
			{
				fn_errlog( c_ServiceName, "S31085",TPMSG ,c_err_msg);
				fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
				fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
				destroy_bat();
			}
		} /* Ver 1.5 .End of count > 0 */
		else
		{
			fn_userlog( c_ServiceName, "Process already run for the day..Now in rerun mode");
		}

		i_no_record = 0;
		EXEC SQL
		SELECT count(*)
		INTO	 :i_no_record 
		FROM	 FBT_FO_BNK_TEMP;

		if(SQLCODE != 0 )
		{
				fn_errlog(c_ServiceName,"S31090",SQLMSG,c_err_msg);
				fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
				destroy_bat();
		}

		if (DEBUG_MSG_LVL_3)			 /*** Ver1.2 ***/
		{
				fn_userlog(c_ServiceName,"i_no_record :%d:",i_no_record);
		}

		/*** Commented in Ver 1.5 for rerun of place spot process ****
		if (i_no_record <= 0 )
		{
				fn_bat_pst_msg(c_ServiceName,"No Data to Process",c_tag);
				destroy_bat();
		}
		**** End of Ver 1.5 ******/

		EXEC SQL
		SELECT PSD_SEQ_NO.NEXTVAL 
		INTO :l_seq_no
		FROM DUAL;

		if(SQLCODE != 0 )
		{
				fn_errlog(c_ServiceName,"S31095",SQLMSG,c_err_msg);
				fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
				destroy_bat();
		}

		sprintf(c_msg,"Run Number is %ld",l_seq_no);
		fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);
		fn_userlog(c_ServiceName,"l_seq_no :%ld:",l_seq_no);

		/**** Below select of PPP and EXG is moved up in Ver 1.5  ****
		EXEC SQL
		SELECT	PPP_SHRTFLL_MRGN,
						PPP_MIN_PLG_SHORTFALL
		INTO		:l_shrtfll_mrgn,
						:l_min_plg_shortfall
		FROM		PPP_PAR_PLG_PRMTR;

		if(SQLCODE != 0 )
		{
				fn_errlog(c_ServiceName,"S31100",SQLMSG,c_err_msg);
				fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
				destroy_bat();
		}

		fn_userlog(c_ServiceName,"l_shrtfll_mrgn :%ld:",l_shrtfll_mrgn);
		fn_userlog(c_ServiceName,"l_min_plg_shortfall :%ld:",l_min_plg_shortfall);

		NULLCHAR(c_ord_trd_dt);

		EXEC SQL	
		SELECT  to_char (EXG_NXT_TRD_DT, 'dd-mm-yyyy')
		INTO    :c_ord_trd_dt
		FROM    EXG_XCHNG_MSTR
		WHERE   EXG_XCHNG_CD = 'BSE'; * ver 1.3 Changed from NSE to BSE *

		if(SQLCODE != 0 )
		{
				fn_errlog(c_ServiceName,"S31105",SQLMSG,c_err_msg);
				fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
				destroy_bat();
		}

		fn_userlog(c_ServiceName,"c_ord_trd_dt :%s:",c_ord_trd_dt);
		****** End of commnet in Ver 1.5 ***********/

		count =0;
		for(i_curr_row=1; i_curr_row<=i_no_record; i_curr_row++)
		{
				NULLCHAR(c_clm_mtch_accnt);
				/*d_amt_reduce = 0.0; Ver 1.5 */
				d_shrtfal_amt = 0.0; /* Ver 1.5 */

				EXEC SQL
				SELECT	FBT_CLM_MTCH_ACCNT,
								FBT_AMT_REDUCE	  
				INTO		:c_clm_mtch_accnt,
								/*:d_shrtfal_amt Ver 1.5 */
								:d_shrtfal_amt  /* Ver 1.5 */
				FROM		FBT_FO_BNK_TEMP
				WHERE  	rownum < 2;

				if(SQLCODE != 0 )
				{
						if(SQLCODE == NO_DATA_FOUND)
						{
								strcpy(c_msg,"ERROR : NO More Match Accounts in FBT ...");
								fn_userlog(c_ServiceName,c_msg);
								fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);
								break;
						}

						fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
						fn_errlog(c_ServiceName,"S31110",SQLMSG,c_err_msg);
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
						destroy_bat();
				}


				fn_userlog(c_ServiceName,"c_clm_mtch_accnt :%s:",c_clm_mtch_accnt);
				fn_userlog(c_ServiceName,"l_shrtfll_mrgn :%ld:",l_shrtfll_mrgn);
				/*fn_userlog(c_ServiceName,"d_amt_reduce :%lf:",d_amt_reduce); Ver 1.5 */
				fn_userlog(c_ServiceName,"d_shrtfal_amt :%lf:",d_shrtfal_amt); /* Ver 1.5 */

				/************ Begain New Transaction ***********************/

				i_trnsctn  = fn_begintran( c_ServiceName, c_err_msg );

				if ( i_trnsctn == -1 )
				{
						fn_errlog( c_ServiceName, "S31115", TPMSG , c_err_msg  );
						fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
						destroy_bat();
				}

				/************ Delete First row from Temp Table *************/

				EXEC SQL
				DELETE FROM FBT_FO_BNK_TEMP
				WHERE  rownum < 2;

				if(SQLCODE != 0)
				{
						fn_errlog(c_ServiceName, "S31120", SQLMSG, c_err_msg);
						fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
						destroy_bat();
				}

				/************* Commit Transaction *************************/


				if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
				{
						fn_errlog( c_ServiceName, "S31125",TPMSG ,c_err_msg);
						fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
						destroy_bat();
				}	

				/**** This already done while inserting in FBT table so commenting in Ver 1.5 ****
				if((l_min_plg_shortfall * 100) >= d_shrtfal_amt )
				{
						strcpy(c_msg,"Amount to be reduce less than minimum shortfall margine skipping.");
						fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);
						fn_userlog(c_ServiceName,c_msg);
						continue;
				}

				sprintf(c_msg,"Amount to be reduce :%lf:",d_amt_reduce);
				fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);

				**** Commented in Ver 1.5.Shortfall margin % already applied to amount to reduce 
				sprintf(c_msg,"Short fall  :%ld:",l_shrtfll_mrgn);
				fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);

				d_amt_reduce = 	d_amt_reduce + ( d_amt_reduce * l_shrtfll_mrgn )/100;
				********** End of Ver 1.5 ***********/

				/****** Ver 1.5 *****
				sprintf(c_msg,"Amount to be reduce :%lf:",d_amt_reduce); */
				sprintf(c_msg,"Shortfall Amount + sale percent = :%lf: for Macth |%s|",d_shrtfal_amt/100,c_clm_mtch_accnt);  /* Ver 1.5 */
				fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);

				
				/*if(d_amt_reduce <= 0) Ver 1.5 */
				if(d_shrtfal_amt <= 0) /* Ver 1.5 */
				{
						/*sprintf(c_msg," ERROR :d_amt_reduce is :%lf: <= 0", d_amt_reduce); Ver 1.5 */
						sprintf(c_msg," ERROR :d_shrtfal_amt is :%lf: <= 0", d_shrtfal_amt/100); /* Ver 1.5 */
						fn_userlog(c_ServiceName,c_msg);
						fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);
						break;
				}

				/*
        fn_userlog(c_ServiceName,"d_amt_reduce with l_shrtfll_mrgn :%lf:",d_amt_reduce); Ver 1.5 */
				fn_userlog(c_ServiceName,"d_shrtfal_amt with l_shrtfll_mrgn :%lf:",d_shrtfal_amt); /* Ver 1.5 */

				/************ Begain New Transaction  **********************/

				i_trnsctn  = fn_begintran( c_ServiceName, c_err_msg );

				if ( i_trnsctn == -1 )
				{
						fn_errlog( c_ServiceName, "S31130", TPMSG , c_err_msg  );
						fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
						destroy_bat();
				}

				/************************************************************

				Qty avilable for Spot sell is calculated as
				TIFP Qty - Revoke Reques Qty - Revoke Cover Qty
				we reduce revoke request qty from TIFP qty as if we dont do
				it after creat tifp is run TIFP qty can go negative.
				This increase risk as we have less qty for sale.
				we dont consider Invoke request qty as these are already
				reduce from TIFP Qty

				************************************************************/

				EXEC SQL
				DECLARE DBD_CUR CURSOR FOR
				SELECT  DBD_STCK_CD,
						DBD_DP_ID,
						DBD_DP_CLNT_ID,
						/*** (DBD_TIFP_QTY - NVL(DBD_REV_COV_QTY,0) - NVL(DBD_REV_REQ_QTY,0)),
						((DBD_TIFP_QTY - NVL(DBD_REV_COV_QTY,0) - NVL(DBD_REV_REQ_QTY,0)) * LTQ_RT), **** Commented for Ver 2.0 *****/
						/*** DBD_SAM_BLCKD_QTY,	*** Added for Ver 2.0 ***
						DBD_SAM_BLCKD_QTY * LTQ_RT,		*** Added for Ver 2.0 ****	*** Commented for Ver 2.4 ***/
						(DBD_SAM_BLCKD_QTY - NVL(DBD_REV_COV_QTY,0) - NVL(DBD_REV_REQ_QTY,0)),							/** Added for Ver 2.4 **/
						((DBD_SAM_BLCKD_QTY - NVL(DBD_REV_COV_QTY,0) - NVL(DBD_REV_REQ_QTY,0)) * LTQ_RT), 	/** Added for Ver 2.4 **/
						LTQ_RT
				FROM    DBD_DP_BLCK_DTLS,LTQ_TRD_QT,STK_STK_MSTR,XSM_XCHNG_STK_MSTR           /* Ver 1.1 */
				WHERE   DBD_CLM_MTCH_ACCNT= :c_clm_mtch_accnt
				/** AND     (DBD_TIFP_QTY - NVL(DBD_REV_COV_QTY,0) - NVL(DBD_REV_REQ_QTY,0)) > 0 *** Commented for Ver 2.0 ****/
				AND     DBD_SAM_BLCKD_QTY > 0
				AND     LTQ_STCK_CD = DBD_STCK_CD
				AND     DBD_STCK_CD = STK_STCK_CD                                             /* Ver 1.1 */
				AND     LTQ_XCHNG_CD = 'BSE'                                                  /* Ver 1.3 */
				AND     (STK_PLG_SPT_ALLWD <> 'N' OR STK_PLG_SPT_ALLWD IS NULL)               /* Ver 1.1 */
				AND     XSM_STCK_CD = DBD_STCK_CD                                             /* Ver 1.1 */
				AND     XSM_XCHNG_CD = 'BSE'                                                  /* Ver 1.1, 1.3 */
				AND     XSM_SPOT_ALLWD != 'N'                                                 /* Ver 1.1 */
				AND     XSM_QT_TRDNG_FLG != 'Q'                                               /* Ver 1.1 */
				/*** ORDER BY ((DBD_TIFP_QTY- NVL(DBD_REV_COV_QTY,0)-NVL(DBD_REV_REQ_QTY,0)) * LTQ_RT)desc; **** COmmented for Ver 2.0 *****/
				/** ORDER BY (DBD_SAM_BLCKD_QTY * LTQ_RT)desc; *** Added for Ver 2.0 ****/ /** Comment for Ver 2.4 **/
				ORDER BY ((DBD_SAM_BLCKD_QTY - NVL(DBD_REV_COV_QTY,0) - NVL(DBD_REV_REQ_QTY,0)) * LTQ_RT)desc; /*** Added for Ver 2.4 ****/

				EXEC SQL OPEN DBD_CUR;

				if(SQLCODE != 0 )
				{

						if(SQLCODE == NO_DATA_FOUND)
						{
								strcpy(c_msg,"ERROR : NO Stock code in DBD table ...");
								fn_userlog(c_ServiceName,c_msg);
								fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);
								EXEC SQL CLOSE DBD_CUR;
								continue;
						}

						EXEC SQL CLOSE DBD_CUR;
						fn_errlog(c_ServiceName,"S31135",SQLMSG,c_err_msg);
						fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
						continue;
				}	 

				while(1)
				{
						i_no_of_sale =0;
						l_avl_qty =0;				
						d_tot_amt =0;
						d_ltq_rt = 0;
						NULLCHAR(c_stck_cd);
						NULLCHAR(c_dp_id);
						NULLCHAR(c_dp_clnt_id);

						EXEC SQL  FETCH DBD_CUR
						INTO     	:c_stck_cd,
											:c_dp_id,
											:c_dp_clnt_id,
											:l_avl_qty,			
											:d_tot_amt,
											:d_ltq_rt;
									
						if(SQLCODE != 0)
						{
								if(SQLCODE == NO_DATA_FOUND )
								{
										fn_userlog(c_ServiceName,"No data in DBD"); /* Ver 1.5 */		
										EXEC SQL CLOSE DBD_CUR;
										break;
								}

								fn_errlog(c_ServiceName,"S31140",SQLMSG,c_err_msg);
								fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
								EXEC SQL CLOSE DBD_CUR;
								destroy_bat();
						}		

						/************* Convert  to paisa ************************/

						d_tot_amt = d_tot_amt * 100;
						d_ltq_rt  = d_ltq_rt  *100;

						fn_userlog(c_ServiceName,"c_dp_id :%s: ",c_dp_id);
						fn_userlog(c_ServiceName,"c_dp_clnt_id :%s: ",c_dp_clnt_id);
						fn_userlog(c_ServiceName,"Stock Code :%s: ",c_stck_cd);
						fn_userlog(c_ServiceName,"Quantity Avilable :%d: ",l_avl_qty);	
						fn_userlog(c_ServiceName,"Total amount of stock :%lf: ",d_tot_amt);
						fn_userlog(c_ServiceName,"Rate of stock  :%lf: ",d_ltq_rt);

						if(l_avl_qty <=0 || d_tot_amt <=0 || d_ltq_rt <= 0)			
						{
								fn_userlog(c_ServiceName,"ERROR : One of this is 0 or negative..");
								fn_bat_pst_msg(c_ServiceName,"Avilable Qty/Total Qty/Pledge Rate is 0",c_tag);
								continue;
						}

						/*i_qty_reduce = d_amt_reduce/d_ltq_rt; Ver 1.5 */
						i_qty_reduce = d_shrtfal_amt/d_ltq_rt; /* Ver 1.5 */

						if((i_qty_reduce*d_ltq_rt) < d_shrtfal_amt) /* d_amt_reduce replaced by d_shrtfal_amt Ver 1.5 */
									i_qty_reduce++;

						i_qty_reduce_now = i_qty_reduce;

						if(i_qty_reduce > l_avl_qty)
								i_qty_reduce_now = l_avl_qty;			


						fn_userlog(c_ServiceName,"Qty of this stock needed to recover :%d: ",
																					i_qty_reduce);
						fn_userlog(c_ServiceName,"Actual Qty reducing :%d: from :%s:",
																				i_qty_reduce_now,c_stck_cd);

						/**************** Convert to Rs *******************/
						d_ltq_rt = d_ltq_rt/100;
						/***********  Insert Spot Order  *****************/

						EXEC SQL
						INSERT INTO PSD_PLG_SPT_DTLS
						(
								PSD_CLM_MTCH_ACCNT,
								PSD_DP_ID,
								PSD_DP_CLNT_ID,
								PSD_STCK_CD,
								PSD_RUN_NO,
								PSD_QTY,
								PSD_RT,
								PSD_ORD_TRD_DT,
								PSD_INSRT_TM,
								PSD_SPT_FLG

						)
						values
						(
								:c_clm_mtch_accnt,
								:c_dp_id,
								:c_dp_clnt_id,
								:c_stck_cd,
								:l_seq_no, 
								:i_qty_reduce_now,
								:d_ltq_rt,
								to_date(:c_ord_trd_dt,'dd-mm-yyyy'),
								/*to_date(sysdate,'dd-Mon-yyyy hh24:mi:ss'),*Ver 1.5 */	
								SYSDATE,        /* Ver 1.5 */    
								'Y'
						);

						if(SQLCODE != 0)
						{
								fn_errlog(c_ServiceName,"S31145",SQLMSG,c_err_msg);
								fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
								fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
								destroy_bat();
						}

						sprintf(c_msg,"Match Account is %s and Stock is %s",c_clm_mtch_accnt,c_stck_cd);
						fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);

						/*******************************************************************
							if qty needed to reduce is less than avilable qty it means we have
							enough qty in dbd table so exit this loop.
							if needed qty is grater than avilable Qty means we dont have enough
							qty in this stock so reduce upto avilable and go for next stock in
							dbd (i.e. continue Loop)
						*******************************************************************/

						if (i_qty_reduce <= l_avl_qty)			
									d_shrtfal_amt = 0; /* d_amt_reduce replaced by d_shrtfal_amt Ver 1.5 */
						else
									d_shrtfal_amt -= d_tot_amt; /* d_amt_reduce replaced by d_shrtfal_amt Ver 1.5 */

						/*fn_userlog(c_ServiceName,"Amount :%lf: still needed to be reduce",d_amt_reduce); Ver 1.5 */
						fn_userlog(c_ServiceName,"Amount :%lf: still needed to be reduce",d_shrtfal_amt); /*Ver 1.5 */

						if(d_shrtfal_amt <= 0) /* d_amt_reduce replaced by d_shrtfal_amt Ver 1.5 */
								break;

				} /* DBD LOOP */ 

				/*if (d_amt_reduce > 0) Ver 1.5 */
				if (d_shrtfal_amt > 0)  /*Ver 1.5 */
				{
						strcpy(c_msg,"ERROR : Total Quantity for spot is not enough");
						fn_userlog(c_ServiceName,c_msg);
						fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);
				}
				else  /* Else part in Ver 1.5 */
				{
					sprintf(c_msg,"Processing completed for match |%s|",c_clm_mtch_accnt);
          fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);
				}

				if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
				{
						fn_errlog( c_ServiceName, "S31150",TPMSG ,c_err_msg);
						fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
						fn_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
						destroy_bat();
				}

				sprintf(c_msg,"record %d th updated out of %d records",i_curr_row,i_no_record);
				fn_userlog(c_ServiceName,c_msg);
				fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);
				count++;

		} /* MATCH LOOP */

		sprintf(c_msg,"%d records out of %d records updated successfully ",count,i_no_record);	
		fn_userlog(c_ServiceName,c_msg);	
		if(i_no_record > 0) /*Ver 1.5 If there were fresh rec then only display it on console */
		{
			fn_bat_pst_msg(c_ServiceName,c_msg,c_tag); 
		}

 	  sprintf(c_msg,"Current Run Number is %ld",l_seq_no);
    fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);

		/** Commented in Ver 1.5....to call run spot process *****
		fn_userlog(c_ServiceName,"ALL DONE");	
		fn_bat_pst_msg(c_ServiceName,"ALL DONE ",c_tag);
		destroy_bat();  *********/
	
		/**** Ver 1.5 starts ********/
		/** From EQSAM version run spot will be called automatically after create spot processing done. 
			Also run no will be no longer be a input to run spot process ,it will select data exg date wise */

		/** strcpy(c_cmd,"nohup bat_plg_spt NFO NA BO &"); **//** Commented for Ver 2.2 **/
    sprintf(c_cmd,"nohup bat_plg_spt %s %s BO &",argv[1],argv[2]);  /** Ver 2.2 **/
		sprintf(c_msg,"Processing of Run Spot started");
    fn_userlog(c_ServiceName,"c_cmd : %s",c_cmd);   /**  Ver 2.2 **/
    fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);
		system(c_cmd); 
		tpclose();
    tpterm();
    exit(1);
		/***** End of Ver 1.5 *******/
		
}


