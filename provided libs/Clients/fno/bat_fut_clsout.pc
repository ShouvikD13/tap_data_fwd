/* Ver 1.2 17-Dec-2007 Ranjit IBM Migrtion */
/* Ver 1.3 25-Jan-2012 Navina D. - BSE ORS Changes */
/* Ver 1.4 04-Mar-2014 Mahesh Shinde INDIAVIX  CR-ISEC14-48665 */
/* Ver 1.5 17-Aug-2015 Ritesh Deolekar -  Contract Master and Trade Quote Table Merger Changes */

#include <sqlca.h>
#include <atmi.h>
#include <fml32.h>
#include <fo.h>
#include <fn_log.h>
#include <fn_tuxlib.h>
#include <fn_battmpt.h>
#include <fo_fml_def.h>
#include <fn_ddr.h>
#include <string.h>		/* ver 1.2 */
#include <fml_rout.h>  /* ver 1.2 */
#include <stdlib.h>		/* ver 1.2 */
#include <fn_read_debug_lvl.h>	/* ver 1.2 */

void BAT_FUT_CLSOUT ( int argc, char *argv[] )
{
	long int li_tot_rcrds;
  int i_ch_val;
  long int li_cnt;
  char c_msg[256];
	FBFR32 *ptr_fml_buf;
  char c_ServiceName [ 33 ];
  char c_err_msg [ 256 ];

  char c_xchng_cd [ 4 ];
  char c_exp_dt [ LEN_DATE ];
  char c_expiry_dt [ LEN_DATE ];
  char c_cln_mtch_accnt [ 11 ];
  char c_undrlyng [ 7 ];
	char c_cls_undrlyng [ 7 ];
  char c_errmsg[256];
  char c_prd_typ;
  char c_exrc_typ;
  char c_cntrct_tag;
  char c_ind_stk;
	char c_rout_str[4];

  EXEC SQL BEGIN DECLARE SECTION;
    varchar   c_near_expry_dt[LEN_DATE];
  EXEC SQL END DECLARE SECTION;

  strcpy ( c_ServiceName, argv[0] );

	INITBATDBGLVL(argv[0]);		/* ver 1.2 */

	sprintf ( c_msg, "Batch process %s started", argv[0] );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

	strcpy ( c_msg, "Creating data. Please wait ... " );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  if( argc < 6 ) /* ver 1.1   Changed from 5 arguments to 6 as per CR#1026 -- by Mohit*/
  {
    fn_bat_pst_msg ( c_ServiceName, "Invalid Number of Arguments", c_tag );
    exit(0);
  }

  strcpy( c_xchng_cd, argv[2] );
  strcpy( c_expiry_dt, argv[4] );
	strcpy( c_cls_undrlyng, argv[5] ); /* ver 1.1 as per CR#1026 -- by Mohit */

  /*** For Service routing ***/
  fn_init_ddr_pop("NA", "NA", "NA");

	if(DEBUG_MSG_LVL_3)		/* ver 1.2 */
	{
		fn_userlog ( c_ServiceName, "Input expiry date is :%s:",c_expiry_dt);
		fn_userlog ( c_ServiceName, "Input Undrlyng is :%s:",c_cls_undrlyng);
	}


	if ( strcmp(c_cls_undrlyng,"NA") == 0 ) /* ver 1.1 as per CR#1026 -- by Mohit */
	{
		
		/*** Added in Ver 1.4 ***/

		EXEC SQL
			SELECT to_char(to_date(:c_expiry_dt),'dd-Mon-yyyy') 
			INTO  :c_expiry_dt	
			FROM DUAL;

		if ( SQLCODE != 0 )
    {
			fn_userlog ( c_ServiceName, "Error selecting date formate");
      fn_errlog(c_ServiceName,"S31005",SQLMSG,c_errmsg);
      return;
    }

		rtrim(c_expiry_dt);	

		if(DEBUG_MSG_LVL_3)   
  	{
    	fn_userlog ( c_ServiceName, "Input expiry date is :%s:",c_expiry_dt);
  	}

		/*** End of Ver 1.4 ***/

		strcpy(c_cls_undrlyng,"NA");

    /*** Commented in Ver 1.5 ***

  	EXEC SQL
  		SELECT  to_char ( min (FCM_EXPRY_DT),'dd-Mon-yyyy')
    	INTO    :c_near_expry_dt
    	FROM    fcm_fo_cntrct_mstr
			WHERE		fcm_xchng_cd = :c_xchng_cd	*** Ver 1.3 ***
			AND			fcm_prdct_typ='F';

    *** Ver 1.5 Comment Ends ***/

    /*** Ver 1.5 Starts ***/

    EXEC SQL
      SELECT  to_char ( min (FTQ_EXPRY_DT),'dd-Mon-yyyy')
      INTO    :c_near_expry_dt
      FROM    ftq_fo_trd_qt
      WHERE   ftq_xchng_cd = :c_xchng_cd
      AND     ftq_prdct_typ='F';

    /*** Ver 1.5 Ends ***/

  	if ( SQLCODE != 0 )
  	{
  		strcpy ( c_msg, "System error. Contact system support" );
    	fn_errlog(c_ServiceName,"S31010",SQLMSG,c_errmsg);
    	return;
  	}
		SETNULL ( c_near_expry_dt );

		if(DEBUG_MSG_LVL_3)			/* ver 1.2 */
		{	
			fn_userlog ( c_ServiceName, "Nearest expiry date is :%s:",c_near_expry_dt.arr);
		}

		if(strcmp(c_expiry_dt, (char *) c_near_expry_dt.arr) != 0 )
		{
  		strcpy ( c_msg, "Incorrect expiry date given" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return;
		}
	} /* ver 1.1 ends here */
	else
	{
		strcpy(c_expiry_dt,"NA");
	}
		

	ptr_fml_buf = fn_create_rs ( c_ServiceName,
                               c_err_msg,
                               "SFO_GT_FCLOUTRC",
                               TPNOTIME,
															 3,
                               FFO_XCHNG_CD, ( char * )c_xchng_cd,
															 FFO_EXPRY_DT,( char * )c_expiry_dt,
															 FFO_UNDRLYNG, ( char * )c_cls_undrlyng);
	if ( ptr_fml_buf == NULL )
	{
		fn_errlog( c_ServiceName, "S31015", LIBMSG, c_err_msg );
		return;
	}

	li_tot_rcrds = fn_reccnt_rs ( ptr_fml_buf,
                                c_ServiceName,
                                c_err_msg,
                                FFO_EBA_MTCH_ACT_NO );
	if ( li_tot_rcrds == -1 )
	{
		fn_errlog( c_ServiceName, "S31020", LIBMSG, c_err_msg );
		fn_dstry_rs ( ptr_fml_buf );
		return;
	}

	strcpy ( c_msg, "Data created." );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
  sprintf ( c_msg, "Total records = %ld", li_tot_rcrds );
  fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  for ( li_cnt=1; li_cnt<=li_tot_rcrds; li_cnt++ )
  {
		i_ch_val = fn_getnxt_rs ( ptr_fml_buf,
                              c_ServiceName,
                              c_err_msg,
															8,
															FFO_EBA_MTCH_ACT_NO,( char *)c_cln_mtch_accnt,NULL,
															FFO_XCHNG_CD,( char * )c_xchng_cd, NULL,
															FFO_PRDCT_TYP,( char * )&c_prd_typ, NULL,
															FFO_UNDRLYNG,( char * )c_undrlyng, NULL,
															FFO_EXPRY_DT,( char * )c_exp_dt, NULL,
															FFO_EXER_TYP,( char * )&c_exrc_typ, NULL,
															FFO_CNTRCT_TAG,( char * )&c_cntrct_tag, NULL,
															FFO_CTGRY_INDSTK,( char * )&c_ind_stk, NULL );

		if ( i_ch_val != 0 )
		{
			fn_errlog( c_ServiceName, "S31025", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
  		strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return;
		}

    if(li_cnt % 50 == 1)
    {
			sprintf ( c_msg, "Processing record %ld of %ld", li_cnt, li_tot_rcrds );
 			fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
		}

    i_ch_val = fn_pre_prcs_rcrd ( c_ServiceName,
                                  c_err_msg,
                                  "sfr_beos_gtdt",
                                  li_cnt,
                                  li_tot_rcrds );
    if ( i_ch_val == -1 )
    {
			fn_errlog( c_ServiceName, "S31030", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
  		strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return;
    }

		fn_cpy_ddr(c_rout_str);
    i_ch_val = fn_acall_svc_fml ( c_ServiceName,
                                  c_err_msg,
                                  "SFO_PRC_FCLSOUT",
                                  0,
                                  11,
																	FFO_EBA_MTCH_ACT_NO,( char *)c_cln_mtch_accnt,
																	FFO_XCHNG_CD,( char * )c_xchng_cd,
																	FFO_PRDCT_TYP,( char * )&c_prd_typ,
																	FFO_UNDRLYNG,( char * )c_undrlyng,
																	FFO_EXPRY_DT,( char * )c_exp_dt,
																	FFO_EXER_TYP,( char * )&c_exrc_typ,
																	FFO_CNTRCT_TAG,( char * )&c_cntrct_tag,
																	FFO_CTGRY_INDSTK,( char * )&c_ind_stk, 
                                  FFO_BAT_TAG, ( char * )c_tag,
                                  FFO_REC_NO, ( char * )&li_cnt,
	                              	FFO_ROUT_CRT, (char*) c_rout_str );
    if ( i_ch_val == -1 )
    {
			fn_errlog( c_ServiceName, "S31035", LIBMSG, c_err_msg );
			fn_dstry_rs ( ptr_fml_buf );
  		strcpy ( c_msg, "System error. Contact system support" );
  		fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );
			return;
		}
  }

	fn_dstry_rs ( ptr_fml_buf );

	sprintf ( c_msg, "Batch process %s ended", argv[0] );
 	fn_bat_pst_msg ( c_ServiceName, c_msg, c_tag );

  return;
}

int fn_bat_init ( int argc, char *argv[] ) 
{
	fn_var = BAT_FUT_CLSOUT;
	return 0;
}

void fn_bat_term ( int argc, char *argv[] )
{
  return;
}

int fn_prcs_trg ( char *c_pgm_nm,
                  int i_trg_typ )
{
	return 0;
}
