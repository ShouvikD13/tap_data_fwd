/*******************************************************************************************
Service 			: cln_upl_fnocontr.pc

Purpose       : To get the details of contract notes from match and upload into EBA
								Calls service SFO_UPL_CONTR

Input Param		: For date
								Exchange Code

Output 				:  success/failure

Author        : ICICI Infotech

Log           : Ver 1.1   IBM Changes by Vidyayini Krish   
Log           : Ver 1.2   Changes for OPM and I-Gain scheme mapping process call(sandip 22-Dec-2014)
Log           : Ver 1.3   Double run check added (Anand Dhopte 04-Nov-2019)
*******************************************************************************************/
#include <stdio.h>      /* C Header File                */
#include <stdlib.h>     /* C Header File                */
#include <sqlca.h>      /* Oracle header file           */
#include <atmi.h>       /* TUXEDO Header File           */
#include <userlog.h>    /* TUXEDO Header File           */
#include <fml32.h>      /* TUXEDO Header File           */
#include <Usysflds.h>   /* TUXEDO Field Definitions  */
#include <fo_fml_def.h>
#include <eba.h>
#include <fn_tuxlib.h>
#include <string.h> /* Ver 1.1 */
#include <fn_read_debug_lvl.h> /* Ver 1.1 */

void main(int argc, char* argv[] )
{

	FBFR32  *ptr_Ibuf;     /* Pointer to FML send buffer   */
	FBFR32  *ptr_Obuf;     /* Pointer to FML receive buffer    */

	char c_ServiceName[33];
	char c_flg;
	char temp_flg[5];

	char c_event_msg[256];
	char temp_date[24],*temp_flag;
	int     i_returncode;
	int     i_err[10];
	int     i;
	int			i_rec_match;
	int			i_rec_upl;
	int			i_cnt_upl;
	long		l_session_id;
	long		l_recvbuff;
  int     i_cnt = 0;    /*** Ver 1.3 ***/

	FBFR32 *ptr_event;
	TPINIT *ptr_tpinfo;
	char   c_tag[32];

	char d_trd_dt[24];
	char c_exchng_cd[4];

	strcpy(c_ServiceName, "cln_upl_fnocontr");
	INITBATDBGLVL(c_ServiceName);
	if (argc != 4)
	{
	printf("Usage: cln_upl_fnocontr <Exchange Code> <Date> <Fno / EA>\n");
	exit(0);
	}

	strcpy(c_exchng_cd,argv[1]);
	strcpy(d_trd_dt,argv[2]);
	strcpy(temp_flg,argv[3]);
	c_flg=temp_flg[0];

	userlog("Exchange code <%s>",c_exchng_cd);
	userlog("Trade date <%s>",d_trd_dt);
	userlog("Option  <%c>",c_flg);


	ptr_tpinfo = (TPINIT *)tpalloc("TPINIT", NULL, MIN_FML_BUF_LEN);
  if (ptr_tpinfo == (TPINIT *)NULL)
  {
  	errlog(c_ServiceName, "S31005", TPMSG, DEF_USR, DEF_SSSN, c_event_msg);
		exit(-3);
  }
	if(tuxgetenv("ORA_GRP")== NULL)
  {
  	errlog(c_ServiceName, "S31010", TPMSG, DEF_USR, DEF_SSSN, c_event_msg);
 		exit(-4);
  }

  if(tuxgetenv("EBALOG_PATH")== NULL)
  {
   	errlog(c_ServiceName, "S31015", TPMSG, DEF_USR, DEF_SSSN, c_event_msg);
		exit(-5);
  }

  strcpy(ptr_tpinfo->grpname, tuxgetenv("ORA_GRP"));
  strcpy(ptr_tpinfo->usrname, c_ServiceName);

  if(tpinit((TPINIT *) ptr_tpinfo)== -1)
  {
    errlog(c_ServiceName, "S31020", TPMSG, DEF_USR, DEF_SSSN, c_event_msg);
  	exit(-6);
  }

	sprintf( c_tag, "%s_%s", "cln_upl_fnocontr", "na");
  if(fn_rgstr_bat('R',c_ServiceName,"NA","BO") != 1)
  {
    sprintf(c_event_msg, "CLN_UPL_FNOCONTR: 1 instance already running");
    fn_bat_pst_msg( c_ServiceName, c_event_msg, c_tag );
    tpterm();
    exit(1);
  }

  fn_bat_pst_msg(c_ServiceName,"cln_upl_fnocontr : started processing ",c_tag);

  if(tpopen() == -1)
  {
    errlog(c_ServiceName, "S31025", TPMSG, DEF_USR, DEF_SSSN, c_event_msg);
		fn_rgstr_bat('U',c_ServiceName,"NA","BO");
    Fchg32(ptr_event, FFO_QUEUE_NAME, 0, (char *)c_event_msg, 0);
    fn_bat_pst_msg( c_ServiceName, c_event_msg, c_tag );
    tpterm();
    exit(-7);
  }

			

/* Populate send buffer and return buffer for service SFR_GET_CONTR */
	ptr_Ibuf = (FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);
  if (ptr_Ibuf == NULL)
  {
    errlog(c_ServiceName, "S31030", TPMSG,(char *)c_exchng_cd, DEF_SSSN, c_event_msg);
		fn_rgstr_bat('U',c_ServiceName,"NA","BO");
    Fchg32(ptr_event, FFO_QUEUE_NAME, 0, (char *)c_event_msg, 0);
    fn_bat_pst_msg( c_ServiceName, c_event_msg, c_tag );
    tpterm();
    exit(-7);
  }

	ptr_Obuf= (FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);
  if (ptr_Obuf== NULL)
  {
    errlog(c_ServiceName,"S31035",TPMSG,(char *)c_exchng_cd, l_session_id, c_event_msg);
		fn_rgstr_bat('U',c_ServiceName,"NA","BO");
    Fchg32(ptr_event, FFO_QUEUE_NAME, 0, (char *)c_event_msg, 0);
    fn_bat_pst_msg( c_ServiceName, c_event_msg, c_tag );
    tpfree((char *)ptr_Ibuf);
    tpterm();
    exit(-7);
  }

  /*** Ver 1.3 Starts ***/

  EXEC SQL
  SELECT COUNT(1) 
    INTO :i_cnt
    FROM PRD_PGM_RUN_DTLS
   WHERE PRD_PGM_STATUS='P'
     AND PRD_PGM_NAME='cln_upl_fnocontr'
     AND PRD_TRD_DT=:d_trd_dt
     AND PRD_XCHNG_CD=:c_exchng_cd
     AND TRIM(PRD_STCK_CD) = :c_flg; 

    if(SQLCODE != 0 )
    {
      errlog(c_ServiceName,"S31040",SQLMSG,(char *)c_exchng_cd,l_session_id,c_event_msg);
      fn_rgstr_bat('U',c_ServiceName,"NA","BO");
      Fchg32(ptr_event, FFO_QUEUE_NAME, 0, (char *)c_event_msg, 0);
      fn_bat_pst_msg( c_ServiceName, c_event_msg, c_tag );
      tpterm();
      exit(-7);
    }

   if (i_cnt > 0)
   {
     errlog(c_ServiceName,"S31045",LIBMSG,(char *)c_exchng_cd,l_session_id,c_event_msg);
     fn_rgstr_bat('U',c_ServiceName,"NA","BO");
     Fchg32(ptr_event, FFO_QUEUE_NAME, 0, (char *)c_event_msg, 0);
     sprintf(c_event_msg,"Process already run for Trade Date :%s: and Option :%c:",d_trd_dt ,c_flg);
     fn_bat_pst_msg( c_ServiceName, c_event_msg, c_tag );
     tpterm();
     exit(-7);
   }
   
  /*** Ver 1.3 Ends ***/

  i_err[0]=Fchg32(ptr_Ibuf,FFO_XCHNG_CD,0,(char *)c_exchng_cd,0);
  i_err[1]=Fchg32(ptr_Ibuf,FFO_TRD_DT,0,(char *)d_trd_dt,0);
  i_err[2]=Fchg32(ptr_Ibuf,FFO_OPERATION_TYP,0,(char *)&c_flg,0);

  if(i_err[0]==-1 || i_err[1]==-1 || i_err[2] ==-1)
  {
    userlog("Error in Input <%d> <%d>",i_err[0],i_err[1]);
    tpfree((char*)ptr_Obuf);
    tpfree((char*)ptr_Ibuf);
    errlog(c_ServiceName,"S31050",FMLMSG,(char *)c_exchng_cd,DEF_SSSN, c_event_msg);
		fn_rgstr_bat('U',c_ServiceName,"NA","BO");
    Fchg32(ptr_event, FFO_QUEUE_NAME, 0, (char *)c_event_msg, 0);
    fn_bat_pst_msg( c_ServiceName, c_event_msg, c_tag );
    tpterm();
    exit(-7);
  }

i_returncode =tpcall("SFO_UPL_CONTR",(char*)ptr_Ibuf,0,(char**)&ptr_Obuf,&l_recvbuff,TPNOTRAN|TPNOTIME);
  if (i_returncode == -1)
  {
    if (TPCODE != TPESVCFAIL)
    {
      errlog(c_ServiceName,"S31055",TPMSG,(char*)c_exchng_cd,l_session_id,c_event_msg);
			fn_rgstr_bat('U',c_ServiceName,"NA","BO");
    	Fchg32(ptr_event, FFO_QUEUE_NAME, 0, (char *)c_event_msg, 0);
   		fn_bat_pst_msg( c_ServiceName, c_event_msg, c_tag );
    	tpterm();
    	exit(-7);
    }
    else
    {
      i_returncode = Fget32(ptr_Obuf, FFO_ERR_MSG, 0, c_event_msg, 0);
      if (i_returncode == -1)
      {
      	errlog(c_ServiceName,"S31060",FMLMSG,(char*)c_exchng_cd,l_session_id,c_event_msg);
				fn_rgstr_bat('U',c_ServiceName,"NA","BO");
    		Fchg32(ptr_event, FFO_QUEUE_NAME, 0, (char *)c_event_msg, 0);
    		fn_bat_pst_msg( c_ServiceName, c_event_msg, c_tag );
    		tpterm();
    		exit(-7);
      }
    }
    tpfree((char *)ptr_Ibuf);
    tpfree((char *)ptr_Obuf);
  }
	i_cnt_upl=0;
	i_rec_match=0;
	i_rec_upl=0;
	i_err[0]  = Fget32(ptr_Obuf,FFO_EXPRD_QTY,0,(char *)&i_cnt_upl,0);
	i_err[1]  = Fget32(ptr_Obuf,FFO_EXEC_QTY,0,(char *)&i_rec_match,0);
	i_err[2]  = Fget32(ptr_Obuf,FFO_ORD_TOT_QTY,0,(char *)&i_rec_upl,0);

	userlog(" %d %d %d ",i_cnt_upl,i_rec_match,i_rec_upl);
  
	if(i_err[0]==-1 || i_err[1]==-1 || i_err[2]==-1)
  {
     errlog(c_ServiceName,"S31065",FMLMSG,(char *)c_exchng_cd,l_session_id,c_event_msg);
		 fn_rgstr_bat('U',c_ServiceName,"NA","BO");
	   Fchg32(ptr_event, FFO_QUEUE_NAME, 0, (char *)c_event_msg, 0);
 		 fn_bat_pst_msg( c_ServiceName, c_event_msg, c_tag );
     tpfree((char *)ptr_Ibuf);
     tpfree((char *)ptr_Obuf);
 		 tpterm();
 		 exit(-7);
  }

	sprintf( c_event_msg, "Number of Contract Notes Uploaded :%d",i_cnt_upl );
  fn_bat_pst_msg(c_ServiceName,c_event_msg,c_tag);

  sprintf( c_event_msg, "Total number of records uploaded :%d",i_rec_match );
  fn_bat_pst_msg(c_ServiceName,c_event_msg,c_tag);

  sprintf( c_event_msg, "Total number of records from Match :%d",i_rec_upl );
  fn_bat_pst_msg(c_ServiceName,c_event_msg,c_tag);
	/** Ver 1.2  Starts **/ 
  
  /*** Commented in Ver 1.3 ***
	 	EXEC SQL
			UPDATE PRD_PGM_RUN_DTLS
			SET 	 PRD_PGM_STATUS=decode(:i_cnt_upl,0,'N','P')
			WHERE  PRD_PGM_NAME='cln_upl_fnocontr'
			AND    PRD_TRD_DT=:d_trd_dt
			AND    PRD_XCHNG_CD=:c_exchng_cd
			AND    PRD_PGM_STATUS is null;

		if(SQLCODE != 0 )
		{
     	errlog(c_ServiceName,"S31070",FMLMSG,(char *)c_exchng_cd,l_session_id,c_event_msg);
		 	fn_rgstr_bat('U',c_ServiceName,"NA","BO");
	   	Fchg32(ptr_event, FFO_QUEUE_NAME, 0, (char *)c_event_msg, 0);
 		 	fn_bat_pst_msg( c_ServiceName, c_event_msg, c_tag );
     	tpfree((char *)ptr_Ibuf);
     	tpfree((char *)ptr_Obuf);
 		 	tpterm();
 		 	exit(-7);
		}
 
   *** Ver 1.3 Comment Ends ***/

   /*** Ver 1.3 Starts ***/

   EXEC SQL
      INSERT INTO PRD_PGM_RUN_DTLS(
                PRD_PGM_NAME,
                PRD_XCHNG_CD,
                PRD_TRD_DT,
                PRD_INS_DT,
                PRD_STCK_CD,        
                PRD_PGM_STATUS )    
              VALUES (
                'cln_upl_fnocontr',
                :c_exchng_cd,                 
                :d_trd_dt,
                SYSDATE,
                :c_flg, 
                'P' );       

    if(SQLCODE !=0 )
    {
			errlog(c_ServiceName,"S31075",FMLMSG,(char *)c_exchng_cd,l_session_id,c_event_msg);
      fn_rgstr_bat('U',c_ServiceName,"NA","BO");
      Fchg32(ptr_event, FFO_QUEUE_NAME, 0, (char *)c_event_msg, 0);
      fn_bat_pst_msg( c_ServiceName, c_event_msg, c_tag );
      tpfree((char *)ptr_Ibuf);
      tpfree((char *)ptr_Obuf);
      tpterm();
      exit(-7);
    }
  
	/*** Ver 1.3 Ends **/
	fn_rgstr_bat('U',c_ServiceName,"NA","BO");
	tpclose();
	tpterm();
}
