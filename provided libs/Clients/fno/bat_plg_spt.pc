/******************************************************************************/
/*  Program           : BAT_PLG_SPT					                                  */
/*                                                                            */
/*  Input             : <bat_plg_spt>  Sequence Number							          */
/*                                                                            */
/*  Output            :  Integer 1 on sucess and 0 on fail                    */
/*                                                                            */
/*  Description       :  This bat process take input as as Sequence Number    */
/*                                                                            */
/*  Sequence number is matched with database seq number if match than spot 		*/
/*	oreder is placed by calling serviece  SFO_PLG_SELL for pledge spot sell.	*/ 
/*																																						*/
/*                                                                            */
/*  Log               : 1.0   4-oct-2004   Infotech|Himanshu Ahire            */
/*										: 1.1   03-Mar-2008	 Infotech| Ranjit										*/
/* 	Reviewed By       : 1.0   24-oct-2004  Infotech|Sangeet Sinha             */
/*                    : 1.2   25-Aug-2009  Infotech|Vidyayini Krish           */
/*                    : 1.3   08-Dec-2010  Infotech|Renuka Rajput             */
/*                    : 1.4   12-Feb-2020  Infotech|Samip M										*/
/*																																						*/
/******************************************************************************/
/*   1.0  -  New release                                                      */
/*   1.2  -  Spot sell from batch will now be in BSE and not NSE              */
/*   1.3  -  1.PSD remarks to be updated in case spot order placement fails
             2.As it will be  run immediately after create spot it has to be made
               run no independent.So no more run/seq no in input
*******************************************************************************/
/*   1.4  -  SPOT for NSE to include																					*/
/******************************************************************************/

#include "fn_collateral.h"
#include <fn_read_debug_lvl.h>		/* ver 1.1 */

#define INPUTS 15

void do_err(char* c_err_msg ,int flag);

int i_trnsctn = -1;
char c_tag[32];
char c_svc[33];
FBFR32 *ptr_fml_Ibuffer = (FBFR32 *)NULL;      /* Pointer to FML Input buffer */
FBFR32 *ptr_fml_Obuffer = (FBFR32 *)NULL;

char c_ServiceName [ 33 ];     /* Ver 1.3 */
char c_ServiceNameCrt [ 33 ];  /* Ver 1.3 */
char c_xchng[4];               /* Ver 1.3 */
char c_pipe[3];                /* Ver 1.3 */

int main (int argc , char* argv[])
{
		char c_dp_id[9];
		char c_dp_clnt_id[9];
		char c_err_msg[256 + 1];
		char c_msg[256];
		char c_clm_mtch_accnt[11] ;
		char c_usr_id[9];
		char c_xchng_cd[4];
		char c_stck_cd[7];
		char c_name[4];
		char c_ord_trd_dt[12];
		char c_exg_dt[12]; /* Ver 1.3 */
		char c_new_mtch [35];
		char c_systm[22];
		/**char c_ServiceName [ 33 ];Made this var global in Ver 1.3 to use it in do_err function */

		char c_valid_flg;
		char c_ordr_flw;
		char c_lm_flg;
		char c_clnt_sam_spt_allwd = 'N'; /* Ver 1.3 */

		long l_sssn_id;
		long l_qty;
		long l_dsclsd_qty;
		long l_run_no;
		long li_Obuf_len=0;

		double d_lm_rt;
		double d_stp_lss;
		double d_rt;

		int  i_no_of_record =0,i=0,count = 0;
		int  i_err[INPUTS];
		int  i_returncode;
		int  flag = 0;
		int  i_cnt;


		NULLCHAR(c_ServiceName);
		NULLCHAR(c_tag);
		NULLCHAR(c_err_msg);
		/** Ver 1.3 **/
		MEMSET(c_exg_dt);  
    MEMSET(c_ServiceNameCrt); 
    MEMSET(c_ServiceName);    
    MEMSET(c_xchng); 
    MEMSET(c_pipe);  
		/** End of Ver 1.3 **/

		strcpy(c_ServiceName ,"bat_plg_spt");
		strcpy(c_ServiceNameCrt ,"bat_crt_spt"); /* Ver 1.3 */
		INITBATDBGLVL(argv[0]);		/* ver 1.1 */
		strcpy(c_svc,c_ServiceName);

		/**** Commented in Ver 1.5 **
		if(argc != 5)
		{
				fn_userlog(c_ServiceName, "Usage: bat_plg_spt <Config File> <Exchange Cd> <Pipe Id>\
				<Sequence number >");
				exit(-1);
		}*** End of comment in Ver 1.3 */

		/**** Ver 1.3.tot arg count will be 4 */
    if(argc != 4) /*Ver 1.3.Seq number is no more arg inp */
    {
        fn_userlog(c_ServiceName, "Usage: bat_plg_spt <Config File> <Exchange Cd> <Pipe Id>");
        exit(-1);
    }
    /*** End of Ver 1.3 **/
		

		strcpy( c_msg, "STAGE 1.0 Starting BAT_PLG_SPT...");
		userlog( "config File :%s:"   ,argv[1]);
		userlog( "Exchange Code :%s:" ,argv[2]);
		userlog( "Pipe Id :%s:"       ,argv[3]);
		/*userlog( "Sequence Number:%s:",argv[4]); Ver 1.3 */

		strcpy(c_xchng,argv[2]);  /* Ver 1.3 */
    strcpy(c_pipe,argv[3]);   /* Ver 1.3 */

		/*sprintf(c_tag,"%s_%s",c_ServiceName,argv[1]); Ver 1.3 */

		init_bat(c_ServiceName,argv[2],argv[3]);

		strcpy(c_ServiceName,"bat_crt_spt"); /* Console will be of create spot process Ver 1.3 */
		sprintf(c_tag,"%s_%s",c_ServiceName,argv[1]); /* Console will be of create spot process Ver 1.3 */

		if(DEBUG_MSG_LVL_3)
		{
			 fn_bat_pst_msg(c_ServiceName,c_msg,c_tag);
		}

		/* Commented in Ver 1.3 ****
		l_run_no = 	atol(argv[4]);

		if (l_run_no == 0 )
		{
				strcpy(c_msg,"Please Enter Valid Sequence Number");
				fn_userlog(c_ServiceName,c_msg);
				do_err(c_msg,0);
		}
				
	 fn_userlog( c_ServiceName, "Sequence Number is :%ld:",l_run_no);
		****** End of Ver 1.3 *****/

		ptr_fml_Ibuffer = (FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);
		if (ptr_fml_Ibuffer == NULL)
		{
				fn_errlog(c_ServiceName, "S31005", TPMSG, c_err_msg);
				do_err(c_err_msg,0);
		}
					
		ptr_fml_Obuffer = (FBFR32 *)tpalloc("FML32",NULL,MIN_FML_BUF_LEN);
		if (ptr_fml_Obuffer == NULL)
		{
				fn_errlog(c_ServiceName, "S31010", TPMSG, c_err_msg);
				do_err(c_err_msg,0);
		}

		/******************** Select All Spot Orders From PSD  *********************/
		/**** Ver 1.3 **/
    EXEC SQL
    SELECT  to_char (EXG_NXT_TRD_DT, 'dd-Mon-yyyy')
    INTO    :c_exg_dt
    FROM    EXG_XCHNG_MSTR
    /** WHERE   EXG_XCHNG_CD = 'BSE'; ** Commented and changed for Ver 1.4 **/
    WHERE   EXG_XCHNG_CD = DECODE(:c_xchng,'BFO','BSE','NFO','NSE'); 	/** Ver 1.4 **/

    if(SQLCODE != 0 )
    {
        fn_errlog(c_ServiceName,"S31015",SQLMSG,c_err_msg);
        fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
        do_err(c_err_msg,0);
    }
    /*** End of Ver 1.3 **/

		i_trnsctn  = fn_begintran( c_ServiceName, c_err_msg );

		if ( i_trnsctn == -1 )
		{
				fn_errlog(c_ServiceName, "S31020", LIBMSG, c_err_msg);
				do_err(c_err_msg,1);
		}

		EXEC SQL DELETE TEMP_ROWID_TABLE;

		EXEC SQL
		INSERT INTO TEMP_ROWID_TABLE
		(
				TRT_ROWID1
		)
		(
				SELECT  rowid 
				FROM    PSD_PLG_SPT_DTLS
				/*WHERE   PSD_RUN_NO = :l_run_no  Commneted in Ver 1.3 */
				WHERE   PSD_ORD_TRD_DT 		 = :c_exg_dt  				 /* Ver 1.3 */
				AND     PSD_SPT_FLG 			 = 'Y'

		);

		if(SQLCODE != 0)
		{
				fn_errlog(c_ServiceName, "S31025", SQLMSG, c_err_msg);
				do_err(c_err_msg,1);
		}

		if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
		{
				fn_errlog(c_ServiceName, "S31030", LIBMSG, c_err_msg);
				do_err(c_err_msg,1);
		}	

		EXEC SQL
		SELECT count(*)
		INTO	 :i_no_of_record
		FROM 		TEMP_ROWID_TABLE;

		if(SQLCODE != 0)
		{
				fn_errlog(c_ServiceName, "S31035", SQLMSG, c_err_msg);
				do_err(c_err_msg,0);
		}

		if (i_no_of_record <= 0)
		{
				strcpy(c_msg, "No data To Process....");	
				fn_userlog(c_ServiceName,c_msg);
				do_err(c_msg,0);
		}

		sprintf(c_msg,"Total Number of Records to be Process :%d:",i_no_of_record);
		fn_userlog(c_ServiceName,c_msg);
		fn_bat_pst_msg( c_ServiceName, c_msg, c_tag );

		/******************** for each order call svc_plc_spt *********************/

		i_cnt =0;
		for(i=1 ; i<=i_no_of_record ; i++)
		{
				NULLCHAR(c_clm_mtch_accnt);
				NULLCHAR(c_dp_id);
				NULLCHAR(c_dp_clnt_id);
				NULLCHAR(c_stck_cd);
				NULLCHAR(c_ord_trd_dt);
				NULLCHAR(c_systm);
				NULLCHAR(c_err_msg);

				flag   = 0;
				l_qty  = 0;
				d_lm_rt = 0;

				EXEC SQL
				SELECT  PSD_CLM_MTCH_ACCNT,
								PSD_DP_ID,
								PSD_DP_CLNT_ID,
								PSD_STCK_CD,
								PSD_QTY,
								PSD_RT,
								to_char(PSD_ORD_TRD_DT,'dd-Mon-yyyy'),
								to_char(PSD_INSRT_TM,'dd-Mon-yyyy hh24:mi:ss')
				INTO		:c_clm_mtch_accnt,
								:c_dp_id,
								:c_dp_clnt_id,
								:c_stck_cd,
								:l_qty,
								:d_lm_rt,
								:c_ord_trd_dt,
								:c_systm
				FROM    PSD_PLG_SPT_DTLS
				WHERE   rowid =
				(
								SELECT TRT_ROWID1 
								FROM TEMP_ROWID_TABLE 
								WHERE rownum < 2
				);

				if(SQLCODE !=0 && SQLCODE != NULL_RETURN)
				{
						fn_errlog(c_ServiceName, "S31040", SQLMSG, c_err_msg);
						do_err(c_err_msg,0);
				}

				if(SQLCODE == NULL_RETURN)
				{
						sprintf(c_msg,"NULL value got while processing %d th record Skipping..",i);	

						i_trnsctn  = fn_begintran( c_ServiceName, c_err_msg );
						if ( i_trnsctn == -1 )
						{
								fn_errlog(c_ServiceName, "S31045", LIBMSG, c_err_msg);
								do_err(c_err_msg,0);
						}

						EXEC SQL DELETE TEMP_ROWID_TABLE WHERE rownum < 2;

						if(SQLCODE !=0 )
						{
								fn_errlog(c_ServiceName, "S31050", SQLMSG, c_err_msg);
								do_err(c_err_msg,1);
						}

						if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
						{
							 fn_errlog(c_ServiceName, "S31055", LIBMSG, c_err_msg);
							 do_err(c_err_msg,1);
						}

						continue;
				}

				/**** Ver 1.3.Check client SAM spt is allowed */
				EXEC SQL
						 SELECT	nvl(CSD_SAM_SPT_ALLWD,'N')
						 INTO   :c_clnt_sam_spt_allwd 
						 FROM 	CSD_CLNT_SPT_DTLS
						 WHERE  CSD_CLM_MTCH_ACCNT = :c_clm_mtch_accnt;
				if(SQLCODE !=0 && SQLCODE != NO_DATA_FOUND)
				{
					fn_errlog(c_ServiceName, "S31060", SQLMSG, c_err_msg);
          do_err(c_err_msg,0);
				}

				if(c_clnt_sam_spt_allwd != 'Y')
				{
					fn_userlog(c_ServiceName,"SAM spot is |%c| disabled for |%s|",c_clnt_sam_spt_allwd,c_clm_mtch_accnt);
					strcpy(c_err_msg,"System SAM spot not allowed");
					i_trnsctn  = fn_begintran( c_ServiceName, c_err_msg );
        	if ( i_trnsctn == -1 )
        	{
          	fn_errlog(c_ServiceName, "S31065", LIBMSG, c_err_msg);
            do_err(c_err_msg,0);
        	}	

					EXEC SQL
        			 UPDATE  PSD_PLG_SPT_DTLS
        			 SET     PSD_REMARKS   = :c_err_msg
        			 WHERE   PSD_CLM_MTCH_ACCNT  = :c_clm_mtch_accnt
        			 AND     PSD_DP_ID           = :c_dp_id
        			 AND     PSD_DP_CLNT_ID      = :c_dp_clnt_id
        			 AND     PSD_STCK_CD         = :c_stck_cd
        			 AND     PSD_SPT_FLG         = 'Y'
        			 AND     PSD_ORD_TRD_DT      = to_date(:c_ord_trd_dt ,'dd-Mon-yyyy')
        			 AND     PSD_INSRT_TM        = to_date(:c_systm  ,'dd-Mon-yyyy hh24:mi:ss');

        	if(SQLCODE !=0 )
        	{
          	fn_errlog(c_ServiceName, "S31070", SQLMSG, c_err_msg);
            do_err(c_err_msg,1);
        	}

					EXEC SQL 
							 DELETE TEMP_ROWID_TABLE 
							 WHERE rownum < 2;

					if(SQLCODE !=0 )
          {
            fn_errlog(c_ServiceName, "S31075", SQLMSG, c_err_msg);
            do_err(c_err_msg,1);
          }

        	if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
        	{
          	fn_errlog(c_ServiceName, "S31080", LIBMSG, c_err_msg);
           	do_err(c_err_msg,1);
        	}
					continue;
				}
				/*** End of Ver 1.3 ****/
				

				fn_userlog(c_ServiceName,"Match Account :%s:",c_clm_mtch_accnt );
				fn_userlog(c_ServiceName,"Dp ID :%s:",c_dp_id );
				fn_userlog(c_ServiceName,"Dp Client Id :%s:",c_dp_clnt_id );
				fn_userlog(c_ServiceName,"Stock Code :%s:",c_stck_cd );
				fn_userlog(c_ServiceName,"Qty of Spot Sell :%ld:",l_qty );
				fn_userlog(c_ServiceName,"Rate of sopt Sell :%lf:",d_lm_rt );
				fn_userlog(c_ServiceName,"Order Trade date :%s:",c_ord_trd_dt );
				fn_userlog(c_ServiceName,"time of Spot creation:%s:",c_systm);

				i_trnsctn  = fn_begintran( c_ServiceName, c_err_msg );
				if ( i_trnsctn == -1 )
				{
						fn_errlog(c_ServiceName, "S31085", LIBMSG, c_err_msg);
						do_err(c_err_msg,0);
				}

				EXEC SQL DELETE TEMP_ROWID_TABLE WHERE rownum < 2;

				if(SQLCODE !=0 )
				{
						fn_errlog(c_ServiceName, "S31090", SQLMSG, c_err_msg);
						do_err(c_err_msg,1);
				}

				/*************** Update Table with Flag == Process ****************/			

				EXEC SQL
				UPDATE	PSD_PLG_SPT_DTLS
				SET			PSD_SPT_FLG		=	'P'
				WHERE	  PSD_CLM_MTCH_ACCNT	=	:c_clm_mtch_accnt
				AND			PSD_DP_ID						= :c_dp_id
				AND			PSD_DP_CLNT_ID			=	:c_dp_clnt_id
				AND			PSD_STCK_CD					=	:c_stck_cd
				/*AND			PSD_RUN_NO 					= :l_run_no Commneted in Ver 1.3 */
				AND     PSD_SPT_FLG 				= 'Y'
				AND			PSD_ORD_TRD_DT			= to_date(:c_ord_trd_dt	,'dd-Mon-yyyy')
				AND			PSD_INSRT_TM				=	to_date(:c_systm	,'dd-Mon-yyyy hh24:mi:ss');

				if(SQLCODE !=0 )
				{
						fn_errlog(c_ServiceName, "S31095", SQLMSG, c_err_msg);
						do_err(c_err_msg,1);
				}

				if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
				{
					 fn_errlog(c_ServiceName, "S31100", LIBMSG, c_err_msg);
					 do_err(c_err_msg,1);
				}

					
				/******************** Prepare Input buffer for call svc_plc_spt ****************/

				strcpy(c_new_mtch,c_dp_id);
				strcat(c_new_mtch,"-");
				strcat(c_new_mtch,c_dp_clnt_id);
				strcat(c_new_mtch,"-");
				strcat(c_new_mtch,c_clm_mtch_accnt);

				c_valid_flg				=	'S';	
				strcpy (c_usr_id,"system");
				l_sssn_id					= 0;
				if(strcmp(c_xchng,"BFO") == 0)		/** If Else added for Ver 1.4 to include NSE **/
					strcpy(c_xchng_cd,"BSE"); /* Ver 1.2 Changed from NSE to BSE */
				else if (strcmp(c_xchng,"NFO") == 0)
					strcpy(c_xchng_cd,"NSE");

				c_ordr_flw		= 'S';
				strcpy(c_name,"SPOT");
				c_lm_flg					=	'M';
				l_dsclsd_qty 			=	0;
				d_stp_lss 				=	0; 
				d_rt							=	0; 

				/*********************** Add order details to FML  **************************/

				if(DEBUG_MSG_LVL_3)
				{
					fn_userlog( c_ServiceName	,"c_new_mtch :%s:"			,c_new_mtch					);
					fn_userlog( c_ServiceName	,"c_valid_flg	:%c:"			,c_valid_flg				);
					fn_userlog( c_ServiceName	,"c_usr_id	:%s:"				,c_usr_id						);
					fn_userlog( c_ServiceName	,"l_sssn_id :%ld:"			,l_sssn_id					);
					fn_userlog( c_ServiceName	,"c_xchng_cd :%s:"			,c_xchng_cd					);
					fn_userlog( c_ServiceName	,"l_qty :%ld:"					,l_qty							);
					fn_userlog( c_ServiceName	,"c_ordr_flw	:%c:"			,c_ordr_flw					);
					fn_userlog( c_ServiceName	,"c_name	:%s:"					,c_name							);
					fn_userlog( c_ServiceName	,"c_lm_flg	:%c:"				,c_lm_flg						);
					fn_userlog( c_ServiceName	,"c_ord_trd_dt	:%s:"		,c_ord_trd_dt				);
					fn_userlog( c_ServiceName	,"l_dsclsd_qty	:%ld:"	,l_dsclsd_qty				);
					fn_userlog( c_ServiceName	,"d_stp_lss	:%lf:"			,d_stp_lss					);
					fn_userlog( c_ServiceName	,"d_rt :%lf:"						,d_rt								);
				}
				
				Finit32(ptr_fml_Ibuffer, (FLDLEN32) Fsizeof32(ptr_fml_Ibuffer));
				Finit32(ptr_fml_Obuffer, (FLDLEN32) Fsizeof32(ptr_fml_Obuffer));

				i_err[0] =Fadd32(ptr_fml_Ibuffer,FML_MATCH_ACCNT	,c_new_mtch 					,0); 
				i_err[1] =Fadd32(ptr_fml_Ibuffer,FML_VALID_FLAG		,(char*)&c_valid_flg	,0);
				i_err[2] =Fadd32(ptr_fml_Ibuffer,FML_USR_ID				,c_usr_id 						,0);
				i_err[3] =Fadd32(ptr_fml_Ibuffer,FML_SSSN_ID			,(char*)&l_sssn_id 		,0);
				i_err[4] =Fadd32(ptr_fml_Ibuffer,FML_XCHNG_CD			,c_xchng_cd 					,0);
				i_err[5] =Fadd32(ptr_fml_Ibuffer,FML_STCK_CD			,c_stck_cd 						,0); 
				i_err[6] =Fadd32(ptr_fml_Ibuffer,FML_QTY					,(char*)&l_qty		 		,0); 
				i_err[7] =Fadd32(ptr_fml_Ibuffer,FML_LM_RT				,(char*)&d_lm_rt			,0); 
				i_err[8] =Fadd32(ptr_fml_Ibuffer,FML_TRNSCTN_FLW	,(char*)&c_ordr_flw 	,0);
				i_err[9] =Fadd32(ptr_fml_Ibuffer,FML_FML_NAME			,c_name 							,0);	 
				i_err[10]=Fadd32(ptr_fml_Ibuffer,FML_LM_FLG				,(char*)&c_lm_flg			,0);	
				i_err[11]=Fadd32(ptr_fml_Ibuffer,FML_ORD_TRD_DT		,(char*)c_ord_trd_dt	,0);	 
				i_err[12]=Fadd32(ptr_fml_Ibuffer,FML_ORD_DSCLSD_QTY,(char*)&l_dsclsd_qty,0);	 
				i_err[13]=Fadd32(ptr_fml_Ibuffer,FML_ORD_STP_LSS	,(char*)&d_stp_lss 		,0);	 
				i_err[14]=Fadd32(ptr_fml_Ibuffer,FML_RT						,(char*)&d_rt 				,0); 

				for(count =0;count < INPUTS ;count++) 			
				{
						if(i_err[count]==-1)
						{
								sprintf(c_msg,"ERROR in FML Field no  :%d: ",count);
								fn_userlog(c_ServiceName,c_msg);
								fn_bat_pst_msg( c_ServiceName, c_msg, c_tag );
								fn_userlog(c_ServiceName,"Skipping Order....");
								flag = 1;
								break;
						}
				}

				if(flag == 1)
				{
						flag =0;
						continue;
				}

				/****************** call SVC_PLC_SPT to place spot order ********************/

				fn_userlog(c_ServiceName,"Added Successfully calling service ");

				i_returncode = tpcall("SFO_PLG_SELL",
														(char*)ptr_fml_Ibuffer,
														0,
														(char **)&ptr_fml_Obuffer,
														&li_Obuf_len,
														0);

				if ( i_returncode == -1 )
				{
						if ( tperrno != TPESVCFAIL )
						{
								fn_errlog ( c_ServiceName, "S31105", TPMSG,c_err_msg);
								do_err(c_err_msg,0);
						}

						Fget32 ( ptr_fml_Obuffer, FML_ERR_MSG, 0, c_err_msg, 0 );
						fn_bat_pst_msg( c_ServiceName, c_err_msg, c_tag );
						fn_userlog(c_ServiceName,"ERROR : %s",c_err_msg);

						i_trnsctn  = fn_begintran( c_ServiceName, c_err_msg );

						if ( i_trnsctn == -1 )
						{
								fn_errlog(c_ServiceName, "S31110", LIBMSG, c_err_msg);
								fn_bat_pst_msg(c_ServiceName,c_err_msg,c_tag);
								do_err(c_err_msg,0);
						}

						/********************* Revert as Service Fail ***************/		

						EXEC SQL
						UPDATE  PSD_PLG_SPT_DTLS
						SET     PSD_SPT_FLG   = 'Y',
										PSD_REMARKS   = :c_err_msg   /* Ver 1.3 */
						WHERE   PSD_CLM_MTCH_ACCNT  = :c_clm_mtch_accnt
						AND     PSD_DP_ID           = :c_dp_id
						AND     PSD_DP_CLNT_ID      = :c_dp_clnt_id
						AND     PSD_STCK_CD         = :c_stck_cd
						/*AND     PSD_RUN_NO          = :l_run_no Commneted in Ver 1.3 */
						AND     PSD_SPT_FLG         = 'P'
						AND     PSD_ORD_TRD_DT      = to_date(:c_ord_trd_dt ,'dd-Mon-yyyy')
						AND     PSD_INSRT_TM        = to_date(:c_systm  ,'dd-Mon-yyyy hh24:mi:ss');

						if(SQLCODE !=0 )
						{
								fn_errlog(c_ServiceName, "S31115", SQLMSG, c_err_msg);
								do_err(c_err_msg,1);
						}

						if ( fn_committran( c_ServiceName, i_trnsctn, c_err_msg ) == -1 )
						{
								fn_errlog(c_ServiceName, "S31120", LIBMSG, c_err_msg);
								do_err(c_err_msg,1);
						}

						sprintf(c_msg, "ERROR In SFO_PLG_SELL at recod no :%d: Skipping Order...",i);
						fn_userlog(c_ServiceName,c_msg);
						fn_bat_pst_msg( c_ServiceName,c_msg,c_tag );
						continue;
				}

				sprintf(c_msg,"Order %d th Place Successfully",i);
				fn_userlog(c_ServiceName,c_msg);
				fn_bat_pst_msg( c_ServiceName,c_msg,c_tag);
				i_cnt++;

		}	 /* End of For loop */

		sprintf(c_msg," %d records updated out of %d records ",i_cnt,i_no_of_record);
		fn_userlog(c_ServiceName,c_msg);
		fn_bat_pst_msg( c_ServiceName,c_msg,c_tag );

		fn_userlog(c_ServiceName,"ALL DONE ");
		do_err("ALL DONE",0);
}

void do_err(char* c_err_msg ,int flag)
{
		fn_bat_pst_msg(c_svc,c_err_msg,c_tag);
		if(flag)
		{	 
				fn_aborttran( c_svc, i_trnsctn, c_err_msg );
		}
		tpfree ( ( char * ) ptr_fml_Ibuffer );
		tpfree ( ( char * ) ptr_fml_Obuffer );
		strcpy(c_ServiceName,"bat_plg_spt"); 					  /* Ver 1.3 */
		fn_rgstr_bat('U',c_ServiceName,c_xchng,c_pipe); /* Ver 1.3 */
    strcpy(c_ServiceName,c_ServiceNameCrt);         /* Ver 1.3 */
		destroy_bat();
}
